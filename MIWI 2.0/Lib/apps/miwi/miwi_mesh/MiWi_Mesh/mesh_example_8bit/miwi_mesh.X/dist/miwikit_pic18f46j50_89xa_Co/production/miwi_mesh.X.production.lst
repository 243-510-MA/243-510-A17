

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 21:34:13 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    23                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    24                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	text100,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1
   144                           	psect	text115,global,reloc=2,class=CODE,delta=1
   145                           	psect	text116,global,reloc=2,class=CODE,delta=1
   146                           	psect	text117,global,reloc=2,class=CODE,delta=1
   147                           	psect	text118,global,reloc=2,class=CODE,delta=1
   148                           	psect	text119,global,reloc=2,class=CODE,delta=1
   149                           	psect	text120,global,reloc=2,class=CODE,delta=1
   150                           	psect	text121,global,reloc=2,class=CODE,delta=1
   151                           	psect	text122,global,reloc=2,class=CODE,delta=1
   152                           	psect	text123,global,reloc=2,class=CODE,delta=1
   153                           	psect	text124,global,reloc=2,class=CODE,delta=1
   154                           	psect	text125,global,reloc=2,class=CODE,delta=1
   155                           	psect	text126,global,reloc=2,class=CODE,delta=1
   156                           	psect	text127,global,reloc=2,class=CODE,delta=1
   157                           	psect	text128,global,reloc=2,class=CODE,delta=1
   158                           	psect	text129,global,reloc=2,class=CODE,delta=1
   159                           	psect	text130,global,reloc=2,class=CODE,delta=1
   160                           	psect	text131,global,reloc=2,class=CODE,delta=1
   161                           	psect	text132,global,reloc=2,class=CODE,delta=1
   162                           	psect	text133,global,reloc=2,class=CODE,delta=1
   163                           	psect	text134,global,reloc=2,class=CODE,delta=1
   164                           	psect	text135,global,reloc=2,class=CODE,delta=1
   165                           	psect	text136,global,reloc=2,class=CODE,delta=1
   166                           	psect	text137,global,reloc=2,class=CODE,delta=1
   167                           	psect	text138,global,reloc=2,class=CODE,delta=1
   168                           	psect	text139,global,reloc=2,class=CODE,delta=1
   169                           	psect	text140,global,reloc=2,class=CODE,delta=1
   170                           	psect	text141,global,reloc=2,class=CODE,delta=1
   171                           	psect	text142,global,reloc=2,class=CODE,delta=1
   172                           	psect	text143,global,reloc=2,class=CODE,delta=1
   173                           	psect	text144,global,reloc=2,class=CODE,delta=1
   174                           	psect	text145,global,reloc=2,class=CODE,delta=1
   175                           	psect	text146,global,reloc=2,class=CODE,delta=1
   176                           	psect	text147,global,reloc=2,class=CODE,delta=1
   177                           	psect	text148,global,reloc=2,class=CODE,delta=1
   178                           	psect	text149,global,reloc=2,class=CODE,delta=1
   179                           	psect	text150,global,reloc=2,class=CODE,delta=1
   180                           	psect	text151,global,reloc=2,class=CODE,delta=1
   181                           	psect	text152,global,reloc=2,class=CODE,delta=1
   182                           	psect	text153,global,reloc=2,class=CODE,delta=1
   183                           	psect	text154,global,reloc=2,class=CODE,delta=1
   184                           	psect	text155,global,reloc=2,class=CODE,delta=1
   185                           	psect	text156,global,reloc=2,class=CODE,delta=1
   186                           	psect	text157,global,reloc=2,class=CODE,delta=1
   187                           	psect	text158,global,reloc=2,class=CODE,delta=1
   188                           	psect	text159,global,reloc=2,class=CODE,delta=1
   189                           	psect	text160,global,reloc=2,class=CODE,delta=1
   190                           	psect	text161,global,reloc=2,class=CODE,delta=1
   191                           	psect	text162,global,reloc=2,class=CODE,delta=1
   192                           	psect	text163,global,reloc=2,class=CODE,delta=1
   193                           	psect	text164,global,reloc=2,class=CODE,delta=1
   194                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   195                           	psect	text166,global,reloc=2,class=CODE,delta=1
   196                           	psect	text167,global,reloc=2,class=CODE,delta=1
   197                           	psect	text168,global,reloc=2,class=CODE,delta=1
   198                           	psect	text169,global,reloc=2,class=CODE,delta=1
   199                           	psect	text170,global,reloc=2,class=CODE,delta=1
   200                           	psect	text171,global,reloc=2,class=CODE,delta=1
   201                           	psect	text172,global,reloc=2,class=CODE,delta=1
   202                           	psect	text173,global,reloc=2,class=CODE,delta=1
   203                           	psect	text174,global,reloc=2,class=CODE,delta=1
   204                           	psect	text175,global,reloc=2,class=CODE,delta=1
   205                           	psect	text176,global,reloc=2,class=CODE,delta=1
   206                           	psect	text177,global,reloc=2,class=CODE,delta=1
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   208                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   209                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   210  0000                     
   211                           	psect	idataCOMRAM
   212  00762E                     __pidataCOMRAM:
   213                           	opt stack 0
   214                           
   215                           ;initializer for _w
   216  00762E  07CD               	dw	1997
   217  007630  387B               	dw	14459
   218                           
   219                           ;initializer for _y
   220  007632  B535               	dw	46389
   221  007634  2053               	dw	8275
   222                           
   223                           	psect	idataBANK0
   224  007684                     __pidataBANK0:
   225                           	opt stack 0
   226                           
   227                           ;initializer for _myPANID
   228  007684  1234               	dw	4660
   229                           
   230                           	psect	idataBANK1
   231  007554                     __pidataBANK1:
   232                           	opt stack 0
   233                           
   234                           ;initializer for _x
   235  007554  BA36               	dw	47670
   236  007556  38D1               	dw	14545
   237                           
   238                           ;initializer for _z
   239  007558  9799               	dw	38809
   240  00755A  0DFC               	dw	3580
   241                           
   242                           ;initializer for _DEVPanID
   243  00755C  FFE3               	dw	65507
   244                           
   245                           ;initializer for _DeviceType
   246  00755E  01                 	db	1
   247                           
   248                           ;initializer for _addressLen
   249  00755F  02                 	db	2
   250                           
   251                           ;initializer for _MyAddress
   252  007560  01                 	db	1
   253  007561  03                 	db	3
   254                           
   255                           ;initializer for _myLongAddress
   256  007562  04                 	db	4
   257  007563  77                 	db	119
   258                           
   259                           	psect	mediumconst
   260  00FAFC                     __pmediumconst:
   261                           	opt stack 0
   262  00FAFC  00                 	db	0
   263  00FAFD                     _crc32_table:
   264                           	opt stack 0
   265  00FAFD  0000               	dw	0
   266  00FAFF  0000               	dw	0
   267  00FB01  3096               	dw	12438
   268  00FB03  7707               	dw	30471
   269  00FB05  612C               	dw	24876
   270  00FB07  EE0E               	dw	60942
   271  00FB09  51BA               	dw	20922
   272  00FB0B  9909               	dw	39177
   273  00FB0D  C419               	dw	50201
   274  00FB0F  076D               	dw	1901
   275  00FB11  F48F               	dw	62607
   276  00FB13  706A               	dw	28778
   277  00FB15  A535               	dw	42293
   278  00FB17  E963               	dw	59747
   279  00FB19  95A3               	dw	38307
   280  00FB1B  9E64               	dw	40548
   281  00FB1D  8832               	dw	34866
   282  00FB1F  0EDB               	dw	3803
   283  00FB21  B8A4               	dw	47268
   284  00FB23  79DC               	dw	31196
   285  00FB25  E91E               	dw	59678
   286  00FB27  E0D5               	dw	57557
   287  00FB29  D988               	dw	55688
   288  00FB2B  97D2               	dw	38866
   289  00FB2D  4C2B               	dw	19499
   290  00FB2F  09B6               	dw	2486
   291  00FB31  7CBD               	dw	31933
   292  00FB33  7EB1               	dw	32433
   293  00FB35  2D07               	dw	11527
   294  00FB37  E7B8               	dw	59320
   295  00FB39  1D91               	dw	7569
   296  00FB3B  90BF               	dw	37055
   297  00FB3D  1064               	dw	4196
   298  00FB3F  1DB7               	dw	7607
   299  00FB41  20F2               	dw	8434
   300  00FB43  6AB0               	dw	27312
   301  00FB45  7148               	dw	29000
   302  00FB47  F3B9               	dw	62393
   303  00FB49  41DE               	dw	16862
   304  00FB4B  84BE               	dw	33982
   305  00FB4D  D47D               	dw	54397
   306  00FB4F  1ADA               	dw	6874
   307  00FB51  E4EB               	dw	58603
   308  00FB53  6DDD               	dw	28125
   309  00FB55  B551               	dw	46417
   310  00FB57  F4D4               	dw	62676
   311  00FB59  85C7               	dw	34247
   312  00FB5B  83D3               	dw	33747
   313  00FB5D  9856               	dw	38998
   314  00FB5F  136C               	dw	4972
   315  00FB61  A8C0               	dw	43200
   316  00FB63  646B               	dw	25707
   317  00FB65  F97A               	dw	63866
   318  00FB67  FD62               	dw	64866
   319  00FB69  C9EC               	dw	51692
   320  00FB6B  8A65               	dw	35429
   321  00FB6D  5C4F               	dw	23631
   322  00FB6F  1401               	dw	5121
   323  00FB71  6CD9               	dw	27865
   324  00FB73  6306               	dw	25350
   325  00FB75  3D63               	dw	15715
   326  00FB77  FA0F               	dw	64015
   327  00FB79  0DF5               	dw	3573
   328  00FB7B  8D08               	dw	36104
   329  00FB7D  20C8               	dw	8392
   330  00FB7F  3B6E               	dw	15214
   331  00FB81  105E               	dw	4190
   332  00FB83  4C69               	dw	19561
   333  00FB85  41E4               	dw	16868
   334  00FB87  D560               	dw	54624
   335  00FB89  7172               	dw	29042
   336  00FB8B  A267               	dw	41575
   337  00FB8D  E4D1               	dw	58577
   338  00FB8F  3C03               	dw	15363
   339  00FB91  D447               	dw	54343
   340  00FB93  4B04               	dw	19204
   341  00FB95  85FD               	dw	34301
   342  00FB97  D20D               	dw	53773
   343  00FB99  B56B               	dw	46443
   344  00FB9B  A50A               	dw	42250
   345  00FB9D  A8FA               	dw	43258
   346  00FB9F  35B5               	dw	13749
   347  00FBA1  986C               	dw	39020
   348  00FBA3  42B2               	dw	17074
   349  00FBA5  C9D6               	dw	51670
   350  00FBA7  DBBB               	dw	56251
   351  00FBA9  F940               	dw	63808
   352  00FBAB  ACBC               	dw	44220
   353  00FBAD  6CE3               	dw	27875
   354  00FBAF  32D8               	dw	13016
   355  00FBB1  5C75               	dw	23669
   356  00FBB3  45DF               	dw	17887
   357  00FBB5  0DCF               	dw	3535
   358  00FBB7  DCD6               	dw	56534
   359  00FBB9  3D59               	dw	15705
   360  00FBBB  ABD1               	dw	43985
   361  00FBBD  30AC               	dw	12460
   362  00FBBF  26D9               	dw	9945
   363  00FBC1  003A               	dw	58
   364  00FBC3  51DE               	dw	20958
   365  00FBC5  5180               	dw	20864
   366  00FBC7  C8D7               	dw	51415
   367  00FBC9  6116               	dw	24854
   368  00FBCB  BFD0               	dw	49104
   369  00FBCD  F4B5               	dw	62645
   370  00FBCF  21B4               	dw	8628
   371  00FBD1  C423               	dw	50211
   372  00FBD3  56B3               	dw	22195
   373  00FBD5  9599               	dw	38297
   374  00FBD7  CFBA               	dw	53178
   375  00FBD9  A50F               	dw	42255
   376  00FBDB  B8BD               	dw	47293
   377  00FBDD  B89E               	dw	47262
   378  00FBDF  2802               	dw	10242
   379  00FBE1  8808               	dw	34824
   380  00FBE3  5F05               	dw	24325
   381  00FBE5  D9B2               	dw	55730
   382  00FBE7  C60C               	dw	50700
   383  00FBE9  E924               	dw	59684
   384  00FBEB  B10B               	dw	45323
   385  00FBED  7C87               	dw	31879
   386  00FBEF  2F6F               	dw	12143
   387  00FBF1  4C11               	dw	19473
   388  00FBF3  5868               	dw	22632
   389  00FBF5  1DAB               	dw	7595
   390  00FBF7  C161               	dw	49505
   391  00FBF9  2D3D               	dw	11581
   392  00FBFB  B666               	dw	46694
   393  00FBFD  4190               	dw	16784
   394  00FBFF  76DC               	dw	30428
   395  00FC01  7106               	dw	28934
   396  00FC03  01DB               	dw	475
   397  00FC05  20BC               	dw	8380
   398  00FC07  98D2               	dw	39122
   399  00FC09  102A               	dw	4138
   400  00FC0B  EFD5               	dw	61397
   401  00FC0D  8589               	dw	34185
   402  00FC0F  71B1               	dw	29105
   403  00FC11  B51F               	dw	46367
   404  00FC13  06B6               	dw	1718
   405  00FC15  E4A5               	dw	58533
   406  00FC17  9FBF               	dw	40895
   407  00FC19  D433               	dw	54323
   408  00FC1B  E8B8               	dw	59576
   409  00FC1D  C9A2               	dw	51618
   410  00FC1F  7807               	dw	30727
   411  00FC21  F934               	dw	63796
   412  00FC23  0F00               	dw	3840
   413  00FC25  A88E               	dw	43150
   414  00FC27  9609               	dw	38409
   415  00FC29  9818               	dw	38936
   416  00FC2B  E10E               	dw	57614
   417  00FC2D  0DBB               	dw	3515
   418  00FC2F  7F6A               	dw	32618
   419  00FC31  3D2D               	dw	15661
   420  00FC33  086D               	dw	2157
   421  00FC35  6C97               	dw	27799
   422  00FC37  9164               	dw	37220
   423  00FC39  5C01               	dw	23553
   424  00FC3B  E663               	dw	58979
   425  00FC3D  51F4               	dw	20980
   426  00FC3F  6B6B               	dw	27499
   427  00FC41  6162               	dw	24930
   428  00FC43  1C6C               	dw	7276
   429  00FC45  30D8               	dw	12504
   430  00FC47  8565               	dw	34149
   431  00FC49  004E               	dw	78
   432  00FC4B  F262               	dw	62050
   433  00FC4D  95ED               	dw	38381
   434  00FC4F  6C06               	dw	27654
   435  00FC51  A57B               	dw	42363
   436  00FC53  1B01               	dw	6913
   437  00FC55  F4C1               	dw	62657
   438  00FC57  8208               	dw	33288
   439  00FC59  C457               	dw	50263
   440  00FC5B  F50F               	dw	62735
   441  00FC5D  D9C6               	dw	55750
   442  00FC5F  65B0               	dw	26032
   443  00FC61  E950               	dw	59728
   444  00FC63  12B7               	dw	4791
   445  00FC65  B8EA               	dw	47338
   446  00FC67  8BBE               	dw	35774
   447  00FC69  887C               	dw	34940
   448  00FC6B  FCB9               	dw	64697
   449  00FC6D  1DDF               	dw	7647
   450  00FC6F  62DD               	dw	25309
   451  00FC71  2D49               	dw	11593
   452  00FC73  15DA               	dw	5594
   453  00FC75  7CF3               	dw	31987
   454  00FC77  8CD3               	dw	36051
   455  00FC79  4C65               	dw	19557
   456  00FC7B  FBD4               	dw	64468
   457  00FC7D  6158               	dw	24920
   458  00FC7F  4DB2               	dw	19890
   459  00FC81  51CE               	dw	20942
   460  00FC83  3AB5               	dw	15029
   461  00FC85  0074               	dw	116
   462  00FC87  A3BC               	dw	41916
   463  00FC89  30E2               	dw	12514
   464  00FC8B  D4BB               	dw	54459
   465  00FC8D  A541               	dw	42305
   466  00FC8F  4ADF               	dw	19167
   467  00FC91  95D7               	dw	38359
   468  00FC93  3DD8               	dw	15832
   469  00FC95  C46D               	dw	50285
   470  00FC97  A4D1               	dw	42193
   471  00FC99  F4FB               	dw	62715
   472  00FC9B  D3D6               	dw	54230
   473  00FC9D  E96A               	dw	59754
   474  00FC9F  4369               	dw	17257
   475  00FCA1  D9FC               	dw	55804
   476  00FCA3  346E               	dw	13422
   477  00FCA5  8846               	dw	34886
   478  00FCA7  AD67               	dw	44391
   479  00FCA9  B8D0               	dw	47312
   480  00FCAB  DA60               	dw	55904
   481  00FCAD  2D73               	dw	11635
   482  00FCAF  4404               	dw	17412
   483  00FCB1  1DE5               	dw	7653
   484  00FCB3  3303               	dw	13059
   485  00FCB5  4C5F               	dw	19551
   486  00FCB7  AA0A               	dw	43530
   487  00FCB9  7CC9               	dw	31945
   488  00FCBB  DD0D               	dw	56589
   489  00FCBD  713C               	dw	28988
   490  00FCBF  5005               	dw	20485
   491  00FCC1  41AA               	dw	16810
   492  00FCC3  2702               	dw	9986
   493  00FCC5  1010               	dw	4112
   494  00FCC7  BE0B               	dw	48651
   495  00FCC9  2086               	dw	8326
   496  00FCCB  C90C               	dw	51468
   497  00FCCD  B525               	dw	46373
   498  00FCCF  5768               	dw	22376
   499  00FCD1  85B3               	dw	34227
   500  00FCD3  206F               	dw	8303
   501  00FCD5  D409               	dw	54281
   502  00FCD7  B966               	dw	47462
   503  00FCD9  E49F               	dw	58527
   504  00FCDB  CE61               	dw	52833
   505  00FCDD  F90E               	dw	63758
   506  00FCDF  5EDE               	dw	24286
   507  00FCE1  C998               	dw	51608
   508  00FCE3  29D9               	dw	10713
   509  00FCE5  9822               	dw	38946
   510  00FCE7  B0D0               	dw	45264
   511  00FCE9  A8B4               	dw	43188
   512  00FCEB  C7D7               	dw	51159
   513  00FCED  3D17               	dw	15639
   514  00FCEF  59B3               	dw	22963
   515  00FCF1  0D81               	dw	3457
   516  00FCF3  2EB4               	dw	11956
   517  00FCF5  5C3B               	dw	23611
   518  00FCF7  B7BD               	dw	47037
   519  00FCF9  6CAD               	dw	27821
   520  00FCFB  C0BA               	dw	49338
   521  00FCFD  8320               	dw	33568
   522  00FCFF  EDB8               	dw	60856
   523  00FD01  B3B6               	dw	46006
   524  00FD03  9ABF               	dw	39615
   525  00FD05  E20C               	dw	57868
   526  00FD07  03B6               	dw	950
   527  00FD09  D29A               	dw	53914
   528  00FD0B  74B1               	dw	29873
   529  00FD0D  4739               	dw	18233
   530  00FD0F  EAD5               	dw	60117
   531  00FD11  77AF               	dw	30639
   532  00FD13  9DD2               	dw	40402
   533  00FD15  2615               	dw	9749
   534  00FD17  04DB               	dw	1243
   535  00FD19  1683               	dw	5763
   536  00FD1B  73DC               	dw	29660
   537  00FD1D  0B12               	dw	2834
   538  00FD1F  E363               	dw	58211
   539  00FD21  3B84               	dw	15236
   540  00FD23  9464               	dw	37988
   541  00FD25  6A3E               	dw	27198
   542  00FD27  0D6D               	dw	3437
   543  00FD29  5AA8               	dw	23208
   544  00FD2B  7A6A               	dw	31338
   545  00FD2D  CF0B               	dw	53003
   546  00FD2F  E40E               	dw	58382
   547  00FD31  FF9D               	dw	65437
   548  00FD33  9309               	dw	37641
   549  00FD35  AE27               	dw	44583
   550  00FD37  0A00               	dw	2560
   551  00FD39  9EB1               	dw	40625
   552  00FD3B  7D07               	dw	32007
   553  00FD3D  9344               	dw	37700
   554  00FD3F  F00F               	dw	61455
   555  00FD41  A3D2               	dw	41938
   556  00FD43  8708               	dw	34568
   557  00FD45  F268               	dw	62056
   558  00FD47  1E01               	dw	7681
   559  00FD49  C2FE               	dw	49918
   560  00FD4B  6906               	dw	26886
   561  00FD4D  575D               	dw	22365
   562  00FD4F  F762               	dw	63330
   563  00FD51  67CB               	dw	26571
   564  00FD53  8065               	dw	32869
   565  00FD55  3671               	dw	13937
   566  00FD57  196C               	dw	6508
   567  00FD59  06E7               	dw	1767
   568  00FD5B  6E6B               	dw	28267
   569  00FD5D  1B76               	dw	7030
   570  00FD5F  FED4               	dw	65236
   571  00FD61  2BE0               	dw	11232
   572  00FD63  89D3               	dw	35283
   573  00FD65  7A5A               	dw	31322
   574  00FD67  10DA               	dw	4314
   575  00FD69  4ACC               	dw	19148
   576  00FD6B  67DD               	dw	26589
   577  00FD6D  DF6F               	dw	57199
   578  00FD6F  F9B9               	dw	63929
   579  00FD71  EFF9               	dw	61433
   580  00FD73  8EBE               	dw	36542
   581  00FD75  BE43               	dw	48707
   582  00FD77  17B7               	dw	6071
   583  00FD79  8ED5               	dw	36565
   584  00FD7B  60B0               	dw	24752
   585  00FD7D  A3E8               	dw	41960
   586  00FD7F  D6D6               	dw	54998
   587  00FD81  937E               	dw	37758
   588  00FD83  A1D1               	dw	41425
   589  00FD85  C2C4               	dw	49860
   590  00FD87  38D8               	dw	14552
   591  00FD89  F252               	dw	62034
   592  00FD8B  4FDF               	dw	20447
   593  00FD8D  67F1               	dw	26609
   594  00FD8F  D1BB               	dw	53691
   595  00FD91  5767               	dw	22375
   596  00FD93  A6BC               	dw	42684
   597  00FD95  06DD               	dw	1757
   598  00FD97  3FB5               	dw	16309
   599  00FD99  364B               	dw	13899
   600  00FD9B  48B2               	dw	18610
   601  00FD9D  2BDA               	dw	11226
   602  00FD9F  D80D               	dw	55309
   603  00FDA1  1B4C               	dw	6988
   604  00FDA3  AF0A               	dw	44810
   605  00FDA5  4AF6               	dw	19190
   606  00FDA7  3603               	dw	13827
   607  00FDA9  7A60               	dw	31328
   608  00FDAB  4104               	dw	16644
   609  00FDAD  EFC3               	dw	61379
   610  00FDAF  DF60               	dw	57184
   611  00FDB1  DF55               	dw	57173
   612  00FDB3  A867               	dw	43111
   613  00FDB5  8EEF               	dw	36591
   614  00FDB7  316E               	dw	12654
   615  00FDB9  BE79               	dw	48761
   616  00FDBB  4669               	dw	18025
   617  00FDBD  B38C               	dw	45964
   618  00FDBF  CB61               	dw	52065
   619  00FDC1  831A               	dw	33562
   620  00FDC3  BC66               	dw	48230
   621  00FDC5  D2A0               	dw	53920
   622  00FDC7  256F               	dw	9583
   623  00FDC9  E236               	dw	57910
   624  00FDCB  5268               	dw	21096
   625  00FDCD  7795               	dw	30613
   626  00FDCF  CC0C               	dw	52236
   627  00FDD1  4703               	dw	18179
   628  00FDD3  BB0B               	dw	47883
   629  00FDD5  16B9               	dw	5817
   630  00FDD7  2202               	dw	8706
   631  00FDD9  262F               	dw	9775
   632  00FDDB  5505               	dw	21765
   633  00FDDD  3BBE               	dw	15294
   634  00FDDF  C5BA               	dw	50618
   635  00FDE1  0B28               	dw	2856
   636  00FDE3  B2BD               	dw	45757
   637  00FDE5  5A92               	dw	23186
   638  00FDE7  2BB4               	dw	11188
   639  00FDE9  6A04               	dw	27140
   640  00FDEB  5CB3               	dw	23731
   641  00FDED  FFA7               	dw	65447
   642  00FDEF  C2D7               	dw	49879
   643  00FDF1  CF31               	dw	53041
   644  00FDF3  B5D0               	dw	46544
   645  00FDF5  9E8B               	dw	40587
   646  00FDF7  2CD9               	dw	11481
   647  00FDF9  AE1D               	dw	44573
   648  00FDFB  5BDE               	dw	23518
   649  00FDFD  C2B0               	dw	49840
   650  00FDFF  9B64               	dw	39780
   651  00FE01  F226               	dw	61990
   652  00FE03  EC63               	dw	60515
   653  00FE05  A39C               	dw	41884
   654  00FE07  756A               	dw	30058
   655  00FE09  930A               	dw	37642
   656  00FE0B  026D               	dw	621
   657  00FE0D  06A9               	dw	1705
   658  00FE0F  9C09               	dw	39945
   659  00FE11  363F               	dw	13887
   660  00FE13  EB0E               	dw	60174
   661  00FE15  6785               	dw	26501
   662  00FE17  7207               	dw	29191
   663  00FE19  5713               	dw	22291
   664  00FE1B  0500               	dw	1280
   665  00FE1D  4A82               	dw	19074
   666  00FE1F  95BF               	dw	38335
   667  00FE21  7A14               	dw	31252
   668  00FE23  E2B8               	dw	58040
   669  00FE25  2BAE               	dw	11182
   670  00FE27  7BB1               	dw	31665
   671  00FE29  1B38               	dw	6968
   672  00FE2B  0CB6               	dw	3254
   673  00FE2D  8E9B               	dw	36507
   674  00FE2F  92D2               	dw	37586
   675  00FE31  BE0D               	dw	48653
   676  00FE33  E5D5               	dw	58837
   677  00FE35  EFB7               	dw	61367
   678  00FE37  7CDC               	dw	31964
   679  00FE39  DF21               	dw	57121
   680  00FE3B  0BDB               	dw	3035
   681  00FE3D  D2D4               	dw	53972
   682  00FE3F  86D3               	dw	34515
   683  00FE41  E242               	dw	57922
   684  00FE43  F1D4               	dw	61908
   685  00FE45  B3F8               	dw	46072
   686  00FE47  68DD               	dw	26845
   687  00FE49  836E               	dw	33646
   688  00FE4B  1FDA               	dw	8154
   689  00FE4D  16CD               	dw	5837
   690  00FE4F  81BE               	dw	33214
   691  00FE51  265B               	dw	9819
   692  00FE53  F6B9               	dw	63161
   693  00FE55  77E1               	dw	30689
   694  00FE57  6FB0               	dw	28592
   695  00FE59  4777               	dw	18295
   696  00FE5B  18B7               	dw	6327
   697  00FE5D  5AE6               	dw	23270
   698  00FE5F  8808               	dw	34824
   699  00FE61  6A70               	dw	27248
   700  00FE63  FF0F               	dw	65295
   701  00FE65  3BCA               	dw	15306
   702  00FE67  6606               	dw	26118
   703  00FE69  0B5C               	dw	2908
   704  00FE6B  1101               	dw	4353
   705  00FE6D  9EFF               	dw	40703
   706  00FE6F  8F65               	dw	36709
   707  00FE71  AE69               	dw	44649
   708  00FE73  F862               	dw	63586
   709  00FE75  FFD3               	dw	65491
   710  00FE77  616B               	dw	24939
   711  00FE79  CF45               	dw	53061
   712  00FE7B  166C               	dw	5740
   713  00FE7D  E278               	dw	57976
   714  00FE7F  A00A               	dw	40970
   715  00FE81  D2EE               	dw	53998
   716  00FE83  D70D               	dw	55053
   717  00FE85  8354               	dw	33620
   718  00FE87  4E04               	dw	19972
   719  00FE89  B3C2               	dw	46018
   720  00FE8B  3903               	dw	14595
   721  00FE8D  2661               	dw	9825
   722  00FE8F  A767               	dw	42855
   723  00FE91  16F7               	dw	5879
   724  00FE93  D060               	dw	53344
   725  00FE95  474D               	dw	18253
   726  00FE97  4969               	dw	18793
   727  00FE99  77DB               	dw	30683
   728  00FE9B  3E6E               	dw	15982
   729  00FE9D  6A4A               	dw	27210
   730  00FE9F  AED1               	dw	44753
   731  00FEA1  5ADC               	dw	23260
   732  00FEA3  D9D6               	dw	55766
   733  00FEA5  0B66               	dw	2918
   734  00FEA7  40DF               	dw	16607
   735  00FEA9  3BF0               	dw	15344
   736  00FEAB  37D8               	dw	14296
   737  00FEAD  AE53               	dw	44627
   738  00FEAF  A9BC               	dw	43452
   739  00FEB1  9EC5               	dw	40645
   740  00FEB3  DEBB               	dw	57019
   741  00FEB5  CF7F               	dw	53119
   742  00FEB7  47B2               	dw	18354
   743  00FEB9  FFE9               	dw	65513
   744  00FEBB  30B5               	dw	12469
   745  00FEBD  F21C               	dw	61980
   746  00FEBF  BDBD               	dw	48573
   747  00FEC1  C28A               	dw	49802
   748  00FEC3  CABA               	dw	51898
   749  00FEC5  9330               	dw	37680
   750  00FEC7  53B3               	dw	21427
   751  00FEC9  A3A6               	dw	41894
   752  00FECB  24B4               	dw	9396
   753  00FECD  3605               	dw	13829
   754  00FECF  BAD0               	dw	47824
   755  00FED1  0693               	dw	1683
   756  00FED3  CDD7               	dw	52695
   757  00FED5  5729               	dw	22313
   758  00FED7  54DE               	dw	21726
   759  00FED9  67BF               	dw	26559
   760  00FEDB  23D9               	dw	9177
   761  00FEDD  7A2E               	dw	31278
   762  00FEDF  B366               	dw	45926
   763  00FEE1  4AB8               	dw	19128
   764  00FEE3  C461               	dw	50273
   765  00FEE5  1B02               	dw	6914
   766  00FEE7  5D68               	dw	23912
   767  00FEE9  2B94               	dw	11156
   768  00FEEB  2A6F               	dw	10863
   769  00FEED  BE37               	dw	48695
   770  00FEEF  B40B               	dw	46091
   771  00FEF1  8EA1               	dw	36513
   772  00FEF3  C30C               	dw	49932
   773  00FEF5  DF1B               	dw	57115
   774  00FEF7  5A05               	dw	23045
   775  00FEF9  EF8D               	dw	61325
   776  00FEFB  2D02               	dw	11522
   777  00FEFD                     __end_of_crc32_table:
   778                           	opt stack 0
   779  00FEFD                     _InitConfigRegs:
   780                           	opt stack 0
   781  00FEFD  002E               	dw	46
   782  00FEFF  0284               	dw	644
   783  00FF01  0401               	dw	1025
   784  00FF03  0601               	dw	1537
   785  00FF05  080C               	dw	2060
   786  00FF07  0AC1               	dw	2753
   787  00FF09  0C77               	dw	3191
   788  00FF0B  0E64               	dw	3684
   789  00FF0D  1032               	dw	4146
   790  00FF0F  1200               	dw	4608
   791  00FF11  1400               	dw	5120
   792  00FF13  1600               	dw	5632
   793  00FF15  1838               	dw	6200
   794  00FF17  1AC8               	dw	6856
   795  00FF19  1C0D               	dw	7181
   796  00FF1B  1E00               	dw	7680
   797  00FF1D  20FF               	dw	8447
   798  00FF1F  2238               	dw	8760
   799  00FF21  2438               	dw	9272
   800  00FF23  2607               	dw	9735
   801  00FF25  2800               	dw	10240
   802  00FF27  2A00               	dw	10752
   803  00FF29  2C69               	dw	11369
   804  00FF2B  2E81               	dw	11905
   805  00FF2D  307E               	dw	12414
   806  00FF2F  3296               	dw	12950
   807  00FF31  34F8               	dw	13560
   808  00FF33  3688               	dw	13960
   809  00FF35  3840               	dw	14400
   810  00FF37  3A00               	dw	14848
   811  00FF39  3CE8               	dw	15592
   812  00FF3B  3E00               	dw	15872
   813  00FF3D                     __end_of_InitConfigRegs:
   814                           	opt stack 0
   815  00FF3D                     _PVALUE:
   816                           	opt stack 0
   817  00FF3D  54                 	db	84
   818  00FF3E  54                 	db	84
   819  00FF3F  54                 	db	84
   820  00FF40  54                 	db	84
   821  00FF41  54                 	db	84
   822  00FF42  54                 	db	84
   823  00FF43  54                 	db	84
   824  00FF44  54                 	db	84
   825  00FF45  54                 	db	84
   826  00FF46  54                 	db	84
   827  00FF47  54                 	db	84
   828  00FF48  54                 	db	84
   829  00FF49  54                 	db	84
   830  00FF4A  54                 	db	84
   831  00FF4B  55                 	db	85
   832  00FF4C  55                 	db	85
   833  00FF4D  55                 	db	85
   834  00FF4E  55                 	db	85
   835  00FF4F  55                 	db	85
   836  00FF50  55                 	db	85
   837  00FF51  55                 	db	85
   838  00FF52  55                 	db	85
   839  00FF53  55                 	db	85
   840  00FF54  55                 	db	85
   841  00FF55  55                 	db	85
   842  00FF56  55                 	db	85
   843  00FF57  55                 	db	85
   844  00FF58  55                 	db	85
   845  00FF59  55                 	db	85
   846  00FF5A  55                 	db	85
   847  00FF5B  55                 	db	85
   848  00FF5C  55                 	db	85
   849  00FF5D                     __end_of_PVALUE:
   850                           	opt stack 0
   851  00FF5D                     _SVALUE:
   852                           	opt stack 0
   853  00FF5D  2D                 	db	45
   854  00FF5E  30                 	db	48
   855  00FF5F  33                 	db	51
   856  00FF60  35                 	db	53
   857  00FF61  38                 	db	56
   858  00FF62  3B                 	db	59
   859  00FF63  3E                 	db	62
   860  00FF64  41                 	db	65
   861  00FF65  43                 	db	67
   862  00FF66  46                 	db	70
   863  00FF67  49                 	db	73
   864  00FF68  4C                 	db	76
   865  00FF69  4F                 	db	79
   866  00FF6A  51                 	db	81
   867  00FF6B  09                 	db	9
   868  00FF6C  0C                 	db	12
   869  00FF6D  0F                 	db	15
   870  00FF6E  12                 	db	18
   871  00FF6F  15                 	db	21
   872  00FF70  17                 	db	23
   873  00FF71  1A                 	db	26
   874  00FF72  1D                 	db	29
   875  00FF73  20                 	db	32
   876  00FF74  23                 	db	35
   877  00FF75  25                 	db	37
   878  00FF76  28                 	db	40
   879  00FF77  2B                 	db	43
   880  00FF78  2E                 	db	46
   881  00FF79  31                 	db	49
   882  00FF7A  33                 	db	51
   883  00FF7B  36                 	db	54
   884  00FF7C  39                 	db	57
   885  00FF7D                     __end_of_SVALUE:
   886                           	opt stack 0
   887  00FF7D                     _hexpowers:
   888                           	opt stack 0
   889  00FF7D  0001               	dw	1
   890  00FF7F  0010               	dw	16
   891  00FF81  0100               	dw	256
   892  00FF83  1000               	dw	4096
   893  00FF85                     __end_of_hexpowers:
   894                           	opt stack 0
   895  00FF85                     isBroadcastAddress@F537:
   896                           	opt stack 0
   897  00FF85  FF                 	db	255
   898  00FF86  FF                 	db	255
   899  00FF87  FF                 	db	255
   900  00FF88  FF                 	db	255
   901  00FF89  FF                 	db	255
   902  00FF8A  FF                 	db	255
   903  00FF8B  FF                 	db	255
   904  00FF8C  FF                 	db	255
   905  00FF8D                     __end_ofisBroadcastAddress@F537:
   906                           	opt stack 0
   907  00FF8D                     _mySecurityKey:
   908                           	opt stack 0
   909  00FF8D  00                 	db	0
   910  00FF8E  01                 	db	1
   911  00FF8F  02                 	db	2
   912  00FF90  03                 	db	3
   913  00FF91  04                 	db	4
   914  00FF92  05                 	db	5
   915  00FF93  06                 	db	6
   916  00FF94  07                 	db	7
   917  00FF95                     __end_of_mySecurityKey:
   918                           	opt stack 0
   919  00FF95                     STR_2:
   920  00FF95  69                 	db	105	;'i'
   921  00FF96  3A                 	db	58	;':'
   922  00FF97  25                 	db	37
   923  00FF98  30                 	db	48	;'0'
   924  00FF99  34                 	db	52	;'4'
   925  00FF9A  58                 	db	88	;'X'
   926  00FF9B  3D                 	db	61	;'='
   927  00FF9C  25                 	db	37
   928  00FF9D  30                 	db	48	;'0'
   929  00FF9E  32                 	db	50	;'2'
   930  00FF9F  58                 	db	88	;'X'
   931  00FFA0  20                 	db	32
   932  00FFA1  20                 	db	32
   933  00FFA2  20                 	db	32
   934  00FFA3  20                 	db	32
   935  00FFA4  20                 	db	32
   936  00FFA5  20                 	db	32
   937  00FFA6  20                 	db	32
   938  00FFA7  00                 	db	0
   939  00FFA8                     STR_3:
   940  00FFA8  6F                 	db	111	;'o'
   941  00FFA9  3A                 	db	58	;':'
   942  00FFAA  25                 	db	37
   943  00FFAB  30                 	db	48	;'0'
   944  00FFAC  32                 	db	50	;'2'
   945  00FFAD  58                 	db	88	;'X'
   946  00FFAE  20                 	db	32
   947  00FFAF  20                 	db	32
   948  00FFB0  20                 	db	32
   949  00FFB1  20                 	db	32
   950  00FFB2  20                 	db	32
   951  00FFB3  20                 	db	32
   952  00FFB4  20                 	db	32
   953  00FFB5  20                 	db	32
   954  00FFB6  20                 	db	32
   955  00FFB7  20                 	db	32
   956  00FFB8  20                 	db	32
   957  00FFB9  00                 	db	0
   958  00FFBA                     STR_10:
   959  00FFBA  30                 	db	48	;'0'
   960  00FFBB  31                 	db	49	;'1'
   961  00FFBC  32                 	db	50	;'2'
   962  00FFBD  33                 	db	51	;'3'
   963  00FFBE  34                 	db	52	;'4'
   964  00FFBF  35                 	db	53	;'5'
   965  00FFC0  36                 	db	54	;'6'
   966  00FFC1  37                 	db	55	;'7'
   967  00FFC2  38                 	db	56	;'8'
   968  00FFC3  39                 	db	57	;'9'
   969  00FFC4  41                 	db	65	;'A'
   970  00FFC5  42                 	db	66	;'B'
   971  00FFC6  43                 	db	67	;'C'
   972  00FFC7  44                 	db	68	;'D'
   973  00FFC8  45                 	db	69	;'E'
   974  00FFC9  46                 	db	70	;'F'
   975  00FFCA  00                 	db	0
   976  00FFCB                     STR_1:
   977  00FFCB  61                 	db	97	;'a'
   978  00FFCC  3A                 	db	58	;':'
   979  00FFCD  25                 	db	37
   980  00FFCE  30                 	db	48	;'0'
   981  00FFCF  34                 	db	52	;'4'
   982  00FFD0  58                 	db	88	;'X'
   983  00FFD1  20                 	db	32
   984  00FFD2  70                 	db	112	;'p'
   985  00FFD3  3A                 	db	58	;':'
   986  00FFD4  46                 	db	70	;'F'
   987  00FFD5  46                 	db	70	;'F'
   988  00FFD6  46                 	db	70	;'F'
   989  00FFD7  46                 	db	70	;'F'
   990  00FFD8  00                 	db	0
   991  00FFD9                     STR_5:
   992  00FFD9  4E                 	db	78	;'N'
   993  00FFDA  6F                 	db	111	;'o'
   994  00FFDB  20                 	db	32
   995  00FFDC  4E                 	db	78	;'N'
   996  00FFDD  65                 	db	101	;'e'
   997  00FFDE  74                 	db	116	;'t'
   998  00FFDF  77                 	db	119	;'w'
   999  00FFE0  6F                 	db	111	;'o'
  1000  00FFE1  72                 	db	114	;'r'
  1001  00FFE2  6B                 	db	107	;'k'
  1002  00FFE3  00                 	db	0
  1003  00FFE4                     STR_9:
  1004  00FFE4  28                 	db	40
  1005  00FFE5  6E                 	db	110	;'n'
  1006  00FFE6  75                 	db	117	;'u'
  1007  00FFE7  6C                 	db	108	;'l'
  1008  00FFE8  6C                 	db	108	;'l'
  1009  00FFE9  29                 	db	41
  1010  00FFEA  00                 	db	0
  1011  00FFEB                     STR_6:
  1012  00FFEB  70                 	db	112	;'p'
  1013  00FFEC  3A                 	db	58	;':'
  1014  00FFED  25                 	db	37
  1015  00FFEE  30                 	db	48	;'0'
  1016  00FFEF  34                 	db	52	;'4'
  1017  00FFF0  58                 	db	88	;'X'
  1018  00FFF1  00                 	db	0
  1019  00FFF2                     STR_7:
  1020  00FFF2  70                 	db	112	;'p'
  1021  00FFF3  3A                 	db	58	;':'
  1022  00FFF4  25                 	db	37
  1023  00FFF5  73                 	db	115	;'s'
  1024  00FFF6  00                 	db	0
  1025  0000                     
  1026                           ; #config settings
  1027  00FFF7  00                 	db	0	; dummy byte at the end
  1028  0000                     
  1029                           	psect	nvBANK1
  1030  0001FC                     __pnvBANK1:
  1031                           	opt stack 0
  1032  0001FC                     _myDeviceType:
  1033                           	opt stack 0
  1034  0001FC                     	ds	1
  1035  0000                     _PPSCONbits	set	3839
  1036  0000                     _RPINR1	set	3815
  1037  0000                     _RPINR21	set	3835
  1038  0000                     _RPOR19	set	3801
  1039  0000                     _RPOR21	set	3803
  1040  0000                     _ANCON0	set	3912
  1041  0000                     _ANCON1	set	3913
  1042  0000                     _TMR0	set	4054
  1043  0000                     _EECON2	set	4007
  1044  0000                     _INTCON2bits	set	4081
  1045  0000                     _INTCON3bits	set	4080
  1046  0000                     _INTCONbits	set	4082
  1047  0000                     _LATAbits	set	3977
  1048  0000                     _LATCbits	set	3979
  1049  0000                     _LATDbits	set	3980
  1050  0000                     _LATEbits	set	3981
  1051  0000                     _OSCCON	set	4051
  1052  0000                     _OSCTUNEbits	set	3995
  1053  0000                     _PIR1bits	set	3998
  1054  0000                     _PIR3bits	set	4004
  1055  0000                     _PORTBbits	set	3969
  1056  0000                     _SSP1CON1	set	4038
  1057  0000                     _SSP1STAT	set	4039
  1058  0000                     _SSP2BUF	set	3957
  1059  0000                     _SSP2CON1	set	3954
  1060  0000                     _SSP2CON1bits	set	3954
  1061  0000                     _SSP2STAT	set	3955
  1062  0000                     _SSPBUF	set	4041
  1063  0000                     _SSPCON1bits	set	4038
  1064  0000                     _T0CON	set	4053
  1065  0000                     _T0CONbits	set	4053
  1066  0000                     _TMR0H	set	4055
  1067  0000                     _TMR0L	set	4054
  1068  0000                     _TRISAbits	set	3986
  1069  0000                     _TRISBbits	set	3987
  1070  0000                     _TRISCbits	set	3988
  1071  0000                     _TRISDbits	set	3989
  1072  0000                     _TRISEbits	set	3990
  1073  0000                     _WDTCONbits	set	4032
  1074  0000                     _GIE	set	32663
  1075                           
  1076                           	psect	cinit
  1077  005236                     __pcinit:
  1078                           	opt stack 0
  1079  005236                     start_initialization:
  1080                           	opt stack 0
  1081  005236                     __initialization:
  1082                           	opt stack 0
  1083                           
  1084                           ; Initialize objects allocated to BANK1 (16 bytes)
  1085                           ; load TBLPTR registers with __pidataBANK1
  1086  005236  0E54               	movlw	low __pidataBANK1
  1087  005238  6EF6               	movwf	tblptrl,c
  1088  00523A  0E75               	movlw	high __pidataBANK1
  1089  00523C  6EF7               	movwf	tblptrh,c
  1090  00523E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1091  005240  6EF8               	movwf	tblptru,c
  1092  005242  EE01  F0EC         	lfsr	0,__pdataBANK1
  1093  005246  EE10 F010          	lfsr	1,16
  1094  00524A                     copy_data0:
  1095  00524A  0009               	tblrd		*+
  1096  00524C  CFF5 FFEE          	movff	tablat,postinc0
  1097  005250  50E5               	movf	postdec1,w,c
  1098  005252  50E1               	movf	fsr1l,w,c
  1099  005254  E1FA               	bnz	copy_data0
  1100                           
  1101                           ; Initialize objects allocated to BANK0 (2 bytes)
  1102                           ; load TBLPTR registers with __pidataBANK0
  1103  005256  0E84               	movlw	low __pidataBANK0
  1104  005258  6EF6               	movwf	tblptrl,c
  1105  00525A  0E76               	movlw	high __pidataBANK0
  1106  00525C  6EF7               	movwf	tblptrh,c
  1107  00525E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1108  005260  6EF8               	movwf	tblptru,c
  1109  005262  0009               	tblrd		*+	;fetch initializer
  1110  005264  CFF5 F0EB          	movff	tablat,__pdataBANK0
  1111  005268  0009               	tblrd		*+	;fetch initializer
  1112  00526A  CFF5 F0EC          	movff	tablat,__pdataBANK0+1
  1113                           
  1114                           ; Initialize objects allocated to COMRAM (8 bytes)
  1115                           ; load TBLPTR registers with __pidataCOMRAM
  1116  00526E  0E2E               	movlw	low __pidataCOMRAM
  1117  005270  6EF6               	movwf	tblptrl,c
  1118  005272  0E76               	movlw	high __pidataCOMRAM
  1119  005274  6EF7               	movwf	tblptrh,c
  1120  005276  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1121  005278  6EF8               	movwf	tblptru,c
  1122  00527A  EE00  F047         	lfsr	0,__pdataCOMRAM
  1123  00527E  EE10 F008          	lfsr	1,8
  1124  005282                     copy_data1:
  1125  005282  0009               	tblrd		*+
  1126  005284  CFF5 FFEE          	movff	tablat,postinc0
  1127  005288  50E5               	movf	postdec1,w,c
  1128  00528A  50E1               	movf	fsr1l,w,c
  1129  00528C  E1FA               	bnz	copy_data1
  1130                           
  1131                           ; Clear objects allocated to BIGRAM (804 bytes)
  1132  00528E  EE08  F0DC         	lfsr	0,__pbssBIGRAM
  1133  005292  EE13 F024          	lfsr	1,804
  1134  005296                     clear_0:
  1135  005296  6AEE               	clrf	postinc0,c
  1136  005298  50E5               	movf	postdec1,w,c
  1137  00529A  50E1               	movf	fsr1l,w,c
  1138  00529C  E1FC               	bnz	clear_0
  1139  00529E  50E2               	movf	fsr1h,w,c
  1140  0052A0  E1FA               	bnz	clear_0
  1141                           
  1142                           ; Clear objects allocated to BANK8 (220 bytes)
  1143  0052A2  EE08  F000         	lfsr	0,__pbssBANK8
  1144  0052A6  0EDC               	movlw	220
  1145  0052A8                     clear_1:
  1146  0052A8  6AEE               	clrf	postinc0,c
  1147  0052AA  06E8               	decf	wreg,f,c
  1148  0052AC  E1FD               	bnz	clear_1
  1149                           
  1150                           ; Clear objects allocated to BANK7 (254 bytes)
  1151  0052AE  EE07  F000         	lfsr	0,__pbssBANK7
  1152  0052B2  0EFE               	movlw	254
  1153  0052B4                     clear_2:
  1154  0052B4  6AEE               	clrf	postinc0,c
  1155  0052B6  06E8               	decf	wreg,f,c
  1156  0052B8  E1FD               	bnz	clear_2
  1157                           
  1158                           ; Clear objects allocated to BANK6 (242 bytes)
  1159  0052BA  EE06  F000         	lfsr	0,__pbssBANK6
  1160  0052BE  0EF2               	movlw	242
  1161  0052C0                     clear_3:
  1162  0052C0  6AEE               	clrf	postinc0,c
  1163  0052C2  06E8               	decf	wreg,f,c
  1164  0052C4  E1FD               	bnz	clear_3
  1165                           
  1166                           ; Clear objects allocated to BANK5 (220 bytes)
  1167  0052C6  EE05  F000         	lfsr	0,__pbssBANK5
  1168  0052CA  0EDC               	movlw	220
  1169  0052CC                     clear_4:
  1170  0052CC  6AEE               	clrf	postinc0,c
  1171  0052CE  06E8               	decf	wreg,f,c
  1172  0052D0  E1FD               	bnz	clear_4
  1173                           
  1174                           ; Clear objects allocated to BANK4 (239 bytes)
  1175  0052D2  EE04  F000         	lfsr	0,__pbssBANK4
  1176  0052D6  0EEF               	movlw	239
  1177  0052D8                     clear_5:
  1178  0052D8  6AEE               	clrf	postinc0,c
  1179  0052DA  06E8               	decf	wreg,f,c
  1180  0052DC  E1FD               	bnz	clear_5
  1181                           
  1182                           ; Clear objects allocated to BANK3 (230 bytes)
  1183  0052DE  EE03  F000         	lfsr	0,__pbssBANK3
  1184  0052E2  0EE6               	movlw	230
  1185  0052E4                     clear_6:
  1186  0052E4  6AEE               	clrf	postinc0,c
  1187  0052E6  06E8               	decf	wreg,f,c
  1188  0052E8  E1FD               	bnz	clear_6
  1189                           
  1190                           ; Clear objects allocated to BANK2 (99 bytes)
  1191  0052EA  EE02  F000         	lfsr	0,__pbssBANK2
  1192  0052EE  0E63               	movlw	99
  1193  0052F0                     clear_7:
  1194  0052F0  6AEE               	clrf	postinc0,c
  1195  0052F2  06E8               	decf	wreg,f,c
  1196  0052F4  E1FD               	bnz	clear_7
  1197                           
  1198                           ; Clear objects allocated to BANK1 (62 bytes)
  1199  0052F6  EE01  F0AE         	lfsr	0,__pbssBANK1
  1200  0052FA  0E3E               	movlw	62
  1201  0052FC                     clear_8:
  1202  0052FC  6AEE               	clrf	postinc0,c
  1203  0052FE  06E8               	decf	wreg,f,c
  1204  005300  E1FD               	bnz	clear_8
  1205                           
  1206                           ; Clear objects allocated to BANK0 (4 bytes)
  1207  005302  0100               	movlb	0
  1208  005304  6BEA               	clrf	(__pbssBANK0+3)& (0+255),b
  1209  005306  6BE9               	clrf	(__pbssBANK0+2)& (0+255),b
  1210  005308  6BE8               	clrf	(__pbssBANK0+1)& (0+255),b
  1211  00530A  6BE7               	clrf	__pbssBANK0& (0+255),b
  1212                           
  1213                           ; Clear objects allocated to COMRAM (17 bytes)
  1214  00530C  EE00  F036         	lfsr	0,__pbssCOMRAM
  1215  005310  0E11               	movlw	17
  1216  005312                     clear_9:
  1217  005312  6AEE               	clrf	postinc0,c
  1218  005314  06E8               	decf	wreg,f,c
  1219  005316  E1FD               	bnz	clear_9
  1220  005318                     end_of_initialization:
  1221                           	opt stack 0
  1222  005318                     __end_of__initialization:
  1223                           	opt stack 0
  1224  005318  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1225  00531A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1226  00531C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1227  00531E  6EF8               	movwf	tblptru,c
  1228  005320  0100               	movlb	0
  1229  005322  EF3D  F014         	goto	_main	;jump to C main() function
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1h	equ	0xFE2
  1238                           fsr1l	equ	0xFE1
  1239                           
  1240                           	psect	bssCOMRAM
  1241  000036                     __pbssCOMRAM:
  1242                           	opt stack 0
  1243  000036                     _MACInitParams:
  1244                           	opt stack 0
  1245  000036                     	ds	3
  1246  000039                     ButtonTask@pS0:
  1247                           	opt stack 0
  1248  000039                     	ds	1
  1249  00003A                     ButtonTask@pS1:
  1250                           	opt stack 0
  1251  00003A                     	ds	1
  1252  00003B                     ButtonTask@s0Count:
  1253                           	opt stack 0
  1254  00003B                     	ds	1
  1255  00003C                     ButtonTask@s1Count:
  1256                           	opt stack 0
  1257  00003C                     	ds	1
  1258  00003D                     _MACSeq:
  1259                           	opt stack 0
  1260  00003D                     	ds	1
  1261  00003E                     _RF_Mode:
  1262                           	opt stack 0
  1263  00003E                     	ds	1
  1264  00003F                     _ReceivedBankIndex:
  1265                           	opt stack 0
  1266  00003F                     	ds	1
  1267  000040                     _TMState:
  1268                           	opt stack 0
  1269  000040                     	ds	1
  1270  000041                     _TxIndex:
  1271                           	opt stack 0
  1272  000041                     	ds	1
  1273  000042                     _TxMACSeq:
  1274                           	opt stack 0
  1275  000042                     	ds	1
  1276  000043                     _hasAck:
  1277                           	opt stack 0
  1278  000043                     	ds	1
  1279  000044                     _justEvictedParent:
  1280                           	opt stack 0
  1281  000044                     	ds	1
  1282  000045                     _lcdInitialized:
  1283                           	opt stack 0
  1284  000045                     	ds	1
  1285  000046                     _switches:
  1286                           	opt stack 0
  1287  000046                     	ds	1
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           postdec1	equ	0xFE5
  1295                           fsr1h	equ	0xFE2
  1296                           fsr1l	equ	0xFE1
  1297                           
  1298                           	psect	dataCOMRAM
  1299  000047                     __pdataCOMRAM:
  1300                           	opt stack 0
  1301  000047                     _w:
  1302                           	opt stack 0
  1303  000047                     	ds	4
  1304  00004B                     _y:
  1305                           	opt stack 0
  1306  00004B                     	ds	4
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1h	equ	0xFE2
  1315                           fsr1l	equ	0xFE1
  1316                           
  1317                           	psect	bssBANK0
  1318  0000E7                     __pbssBANK0:
  1319                           	opt stack 0
  1320  0000E7                     _routingTableActive:
  1321                           	opt stack 0
  1322  0000E7                     	ds	2
  1323  0000E9                     _IRQ1_Received:
  1324                           	opt stack 0
  1325  0000E9                     	ds	1
  1326  0000EA                     _t1fired:
  1327                           	opt stack 0
  1328  0000EA                     	ds	1
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1h	equ	0xFE2
  1337                           fsr1l	equ	0xFE1
  1338                           
  1339                           	psect	dataBANK0
  1340  0000EB                     __pdataBANK0:
  1341                           	opt stack 0
  1342  0000EB                     _myPANID:
  1343                           	opt stack 0
  1344  0000EB                     	ds	2
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           postdec1	equ	0xFE5
  1352                           fsr1h	equ	0xFE2
  1353                           fsr1l	equ	0xFE1
  1354                           
  1355                           	psect	bssBANK1
  1356  0001AE                     __pbssBANK1:
  1357                           	opt stack 0
  1358  0001AE                     _c:
  1359                           	opt stack 0
  1360  0001AE                     	ds	4
  1361  0001B2                     _currentInterval:
  1362                           	opt stack 0
  1363  0001B2                     	ds	4
  1364  0001B6                     _currentTime:
  1365                           	opt stack 0
  1366  0001B6                     	ds	4
  1367  0001BA                     _intervalDelay:
  1368                           	opt stack 0
  1369  0001BA                     	ds	4
  1370  0001BE                     _t1extension:
  1371                           	opt stack 0
  1372  0001BE                     	ds	4
  1373  0001C2                     _LEDCmd:
  1374                           	opt stack 0
  1375  0001C2                     	ds	3
  1376  0001C5                     _LEDState:
  1377                           	opt stack 0
  1378  0001C5                     	ds	3
  1379  0001C8                     _linkEstSeq:
  1380                           	opt stack 0
  1381  0001C8                     	ds	2
  1382  0001CA                     _prevSentIdx:
  1383                           	opt stack 0
  1384  0001CA                     	ds	2
  1385  0001CC                     _ActiveScanChannel:
  1386                           	opt stack 0
  1387  0001CC                     	ds	1
  1388  0001CD                     _BMState:
  1389                           	opt stack 0
  1390  0001CD                     	ds	1
  1391  0001CE                     _NetSeq:
  1392                           	opt stack 0
  1393  0001CE                     	ds	1
  1394  0001CF                     _RSSILock:
  1395                           	opt stack 0
  1396  0001CF                     	ds	1
  1397  0001D0                     _RSSIVal:
  1398                           	opt stack 0
  1399  0001D0                     	ds	1
  1400  0001D1                     _RouteMgrUpdateRequired:
  1401                           	opt stack 0
  1402  0001D1                     	ds	1
  1403  0001D2                     _TxData:
  1404                           	opt stack 0
  1405  0001D2                     	ds	1
  1406  0001D3                     _UserMessageAvailable:
  1407                           	opt stack 0
  1408  0001D3                     	ds	1
  1409  0001D4                     _isNetworkTrafficSecure:
  1410                           	opt stack 0
  1411  0001D4                     	ds	1
  1412  0001D5                     _nState:
  1413                           	opt stack 0
  1414  0001D5                     	ds	1
  1415  0001D6                     _netSequenceNumber:
  1416                           	opt stack 0
  1417  0001D6                     	ds	1
  1418  0001D7                     _nst:
  1419                           	opt stack 0
  1420  0001D7                     	ds	1
  1421  0001D8                     _userDataAvailable:
  1422                           	opt stack 0
  1423  0001D8                     	ds	1
  1424  0001D9                     _routeInfo:
  1425                           	opt stack 0
  1426  0001D9                     	ds	7
  1427  0001E0                     _tmpBlock:
  1428                           	opt stack 0
  1429  0001E0                     	ds	4
  1430  0001E4                     CoordinatorGenericAddress@address:
  1431                           	opt stack 0
  1432  0001E4                     	ds	2
  1433  0001E6                     _CoordinatorAddr:
  1434                           	opt stack 0
  1435  0001E6                     	ds	2
  1436  0001E8                     _myAddr:
  1437                           	opt stack 0
  1438  0001E8                     	ds	2
  1439  0001EA                     radioBroadcast@addr:
  1440                           	opt stack 0
  1441  0001EA                     	ds	2
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec1	equ	0xFE5
  1449                           fsr1h	equ	0xFE2
  1450                           fsr1l	equ	0xFE1
  1451                           
  1452                           	psect	dataBANK1
  1453  0001EC                     __pdataBANK1:
  1454                           	opt stack 0
  1455  0001EC                     _x:
  1456                           	opt stack 0
  1457  0001EC                     	ds	4
  1458  0001F0                     _z:
  1459                           	opt stack 0
  1460  0001F0                     	ds	4
  1461  0001F4                     _DEVPanID:
  1462                           	opt stack 0
  1463  0001F4                     	ds	2
  1464  0001F6                     _DeviceType:
  1465                           	opt stack 0
  1466  0001F6                     	ds	1
  1467  0001F7                     _addressLen:
  1468                           	opt stack 0
  1469  0001F7                     	ds	1
  1470  0001F8                     _MyAddress:
  1471                           	opt stack 0
  1472  0001F8                     	ds	2
  1473  0001FA                     _myLongAddress:
  1474                           	opt stack 0
  1475  0001FA                     	ds	2
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec1	equ	0xFE5
  1483                           fsr1h	equ	0xFE2
  1484                           fsr1l	equ	0xFE1
  1485                           
  1486                           	psect	bssBANK2
  1487  000200                     __pbssBANK2:
  1488                           	opt stack 0
  1489  000200                     LEDManagerTask@tStart:
  1490                           	opt stack 0
  1491  000200                     	ds	12
  1492  00020C                     NetworkManagerTask@tStart:
  1493                           	opt stack 0
  1494  00020C                     	ds	8
  1495  000214                     _tInterval:
  1496                           	opt stack 0
  1497  000214                     	ds	8
  1498  00021C                     _tRouteMgr:
  1499                           	opt stack 0
  1500  00021C                     	ds	8
  1501  000224                     MiApp_MessageAvailable@tStart:
  1502                           	opt stack 0
  1503  000224                     	ds	4
  1504  000228                     NetworkManagerTask@delay:
  1505                           	opt stack 0
  1506  000228                     	ds	4
  1507  00022C                     LEDManagerTask@lNextState:
  1508                           	opt stack 0
  1509  00022C                     	ds	3
  1510  00022F                     _pcnt1:
  1511                           	opt stack 0
  1512  00022F                     	ds	2
  1513  000231                     main@F8333:
  1514                           	opt stack 0
  1515  000231                     	ds	2
  1516  000233                     _MACRxPacket:
  1517                           	opt stack 0
  1518  000233                     	ds	12
  1519  00023F                     _rxMessage:
  1520                           	opt stack 0
  1521  00023F                     	ds	10
  1522  000249                     _Tick_MS:
  1523                           	opt stack 0
  1524  000249                     	ds	8
  1525  000251                     _key:
  1526                           	opt stack 0
  1527  000251                     	ds	8
  1528  000259                     _OutgoingFrameCounter:
  1529                           	opt stack 0
  1530  000259                     	ds	4
  1531  00025D                     _NewBestParent:
  1532                           	opt stack 0
  1533  00025D                     	ds	2
  1534  00025F                     _srcAddress:
  1535                           	opt stack 0
  1536  00025F                     	ds	2
  1537  000261                     radioUnicast@addr:
  1538                           	opt stack 0
  1539  000261                     	ds	2
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1h	equ	0xFE2
  1548                           fsr1l	equ	0xFE1
  1549                           
  1550                           	psect	bssBANK3
  1551  000300                     __pbssBANK3:
  1552                           	opt stack 0
  1553  000300                     _AckInfo:
  1554                           	opt stack 0
  1555  000300                     	ds	30
  1556  00031E                     _RxPacket:
  1557                           	opt stack 0
  1558  00031E                     	ds	142
  1559  0003AC                     _LCDText:
  1560                           	opt stack 0
  1561  0003AC                     	ds	33
  1562  0003CD                     _ActiveScanResults:
  1563                           	opt stack 0
  1564  0003CD                     	ds	25
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           
  1575                           	psect	bssBANK4
  1576  000400                     __pbssBANK4:
  1577                           	opt stack 0
  1578  000400                     _tunnels:
  1579                           	opt stack 0
  1580  000400                     	ds	120
  1581  000478                     _MACTxBuffer:
  1582                           	opt stack 0
  1583  000478                     	ds	64
  1584  0004B8                     _ConnectionTable:
  1585                           	opt stack 0
  1586  0004B8                     	ds	55
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           
  1597                           	psect	bssBANK5
  1598  000500                     __pbssBANK5:
  1599                           	opt stack 0
  1600  000500                     _neighbor_tbl:
  1601                           	opt stack 0
  1602  000500                     	ds	220
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           postdec1	equ	0xFE5
  1610                           fsr1h	equ	0xFE2
  1611                           fsr1l	equ	0xFE1
  1612                           
  1613                           	psect	bssBANK6
  1614  000600                     __pbssBANK6:
  1615                           	opt stack 0
  1616  000600                     _TMQ:
  1617                           	opt stack 0
  1618  000600                     	ds	152
  1619  000698                     _routingTable:
  1620                           	opt stack 0
  1621  000698                     	ds	90
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postdec1	equ	0xFE5
  1629                           fsr1h	equ	0xFE2
  1630                           fsr1l	equ	0xFE1
  1631                           
  1632                           	psect	bssBANK7
  1633  000700                     __pbssBANK7:
  1634                           	opt stack 0
  1635  000700                     _beaconMessageBuffer:
  1636                           	opt stack 0
  1637  000700                     	ds	72
  1638  000748                     _TxBuff:
  1639                           	opt stack 0
  1640  000748                     	ds	64
  1641  000788                     _TxBuffer:
  1642                           	opt stack 0
  1643  000788                     	ds	64
  1644  0007C8                     _userdata:
  1645                           	opt stack 0
  1646  0007C8                     	ds	54
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           postdec1	equ	0xFE5
  1654                           fsr1h	equ	0xFE2
  1655                           fsr1l	equ	0xFE1
  1656                           
  1657                           	psect	bssBANK8
  1658  000800                     __pbssBANK8:
  1659                           	opt stack 0
  1660  000800                     _list:
  1661                           	opt stack 0
  1662  000800                     	ds	220
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           fsr1h	equ	0xFE2
  1671                           fsr1l	equ	0xFE1
  1672                           
  1673                           	psect	bssBIGRAM
  1674  0008DC                     __pbssBIGRAM:
  1675                           	opt stack 0
  1676  0008DC                     _RbcQ:
  1677                           	opt stack 0
  1678  0008DC                     	ds	444
  1679  000A98                     _hc_table:
  1680                           	opt stack 0
  1681  000A98                     	ds	360
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           postdec1	equ	0xFE5
  1689                           fsr1h	equ	0xFE2
  1690                           fsr1l	equ	0xFE1
  1691                           
  1692                           	psect	cstackBANK2
  1693  000263                     __pcstackBANK2:
  1694                           	opt stack 0
  1695  000263                     ??_MiApp_SearchConnection:
  1696                           
  1697                           ; 1 bytes @ 0x0
  1698  000263                     	ds	8
  1699  00026B                     MiApp_SearchConnection@ScanDuartion:
  1700                           	opt stack 0
  1701                           
  1702                           ; 1 bytes @ 0x8
  1703  00026B                     	ds	1
  1704  00026C                     MiApp_SearchConnection@tStart:
  1705                           	opt stack 0
  1706                           
  1707                           ; 4 bytes @ 0x9
  1708  00026C                     	ds	4
  1709  000270                     MiApp_SearchConnection@msDuration:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0xD
  1713  000270                     	ds	2
  1714  000272                     MiApp_SearchConnection@mask:
  1715                           	opt stack 0
  1716                           
  1717                           ; 4 bytes @ 0xF
  1718  000272                     	ds	4
  1719  000276                     MiApp_SearchConnection@res:
  1720                           	opt stack 0
  1721                           
  1722                           ; 1 bytes @ 0x13
  1723  000276                     	ds	1
  1724  000277                     MiApp_SearchConnection@i:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x14
  1728  000277                     	ds	1
  1729  000278                     main@src1:
  1730                           	opt stack 0
  1731                           
  1732                           ; 2 bytes @ 0x15
  1733  000278                     	ds	2
  1734  00027A                     main@pButtonPressed:
  1735                           	opt stack 0
  1736                           
  1737                           ; 1 bytes @ 0x17
  1738  00027A                     	ds	1
  1739  00027B                     main@counter:
  1740                           	opt stack 0
  1741                           
  1742                           ; 1 bytes @ 0x18
  1743  00027B                     	ds	1
  1744  00027C                     main@pMemberOfNetwork:
  1745                           	opt stack 0
  1746                           
  1747                           ; 1 bytes @ 0x19
  1748  00027C                     	ds	1
  1749  00027D                     main@src:
  1750                           	opt stack 0
  1751                           
  1752                           ; 2 bytes @ 0x1A
  1753  00027D                     	ds	2
  1754  00027F                     main@addr:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0x1C
  1758  00027F                     	ds	2
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           fsr1h	equ	0xFE2
  1767                           fsr1l	equ	0xFE1
  1768                           
  1769                           	psect	cstackBANK1
  1770  000100                     __pcstackBANK1:
  1771                           	opt stack 0
  1772  000100                     TransportManagerTask@databuff:
  1773                           	opt stack 0
  1774  000100                     TMSendDataToRFD@databuff:
  1775                           	opt stack 0
  1776  000100                     NetworkSendDiscoverRequest@databuff:
  1777                           	opt stack 0
  1778  000100                     NetworkSendDiscoverResponse@databuff:
  1779                           	opt stack 0
  1780                           
  1781                           ; 64 bytes @ 0x0
  1782  000100                     	ds	64
  1783  000140                     NetworkUnicastData@address:
  1784                           	opt stack 0
  1785  000140                     TransportManagerTask@sz:
  1786                           	opt stack 0
  1787  000140                     NetworkSendDiscoverRequest@size:
  1788                           	opt stack 0
  1789  000140                     NetworkSendDiscoverResponse@size:
  1790                           	opt stack 0
  1791  000140                     NetworkManagerProcessIncomingData@buffer:
  1792                           	opt stack 0
  1793                           
  1794                           ; 64 bytes @ 0x40
  1795  000140                     	ds	2
  1796  000142                     NetworkUnicastData@data:
  1797                           	opt stack 0
  1798  000142                     TransportManagerTask@i:
  1799                           	opt stack 0
  1800  000142                     NetworkSendDiscoverRequest@dhdr:
  1801                           	opt stack 0
  1802  000142                     NetworkSendDiscoverResponse@dhdr:
  1803                           	opt stack 0
  1804                           
  1805                           ; 2 bytes @ 0x42
  1806  000142                     	ds	2
  1807  000144                     NetworkUnicastData@size:
  1808                           	opt stack 0
  1809  000144                     NetworkSendDiscoverRequest@address:
  1810                           	opt stack 0
  1811  000144                     NetworkSendDiscoverResponse@address:
  1812                           	opt stack 0
  1813  000144                     NetworkManagerTask@data:
  1814                           	opt stack 0
  1815                           
  1816                           ; 19 bytes @ 0x44
  1817  000144                     	ds	2
  1818  000146                     NetworkUnicastData@isSecure:
  1819                           	opt stack 0
  1820                           
  1821                           ; 1 bytes @ 0x46
  1822  000146                     	ds	1
  1823  000147                     MiApp_UnicastAddress@DestinationAddress:
  1824                           	opt stack 0
  1825                           
  1826                           ; 2 bytes @ 0x47
  1827  000147                     	ds	2
  1828  000149                     MiApp_UnicastAddress@Origin:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x49
  1832  000149                     	ds	2
  1833  00014B                     MiApp_UnicastAddress@SecEn:
  1834                           	opt stack 0
  1835                           
  1836                           ; 1 bytes @ 0x4B
  1837  00014B                     	ds	12
  1838  000157                     NetworkManagerTask@sz:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x57
  1842  000157                     	ds	41
  1843  000180                     NetworkManagerProcessIncomingData@isFormed:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0x80
  1847  000180                     	ds	1
  1848  000181                     NetworkManagerProcessIncomingData@packetsize:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0x81
  1852  000181                     	ds	2
  1853  000183                     NetworkManagerProcessIncomingData@isSecurePacket:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x83
  1857  000183                     	ds	1
  1858  000184                     NetworkManagerProcessIncomingData@dHdr:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x84
  1862  000184                     	ds	2
  1863  000186                     radioReceivedPacket@source:
  1864                           	opt stack 0
  1865                           
  1866                           ; 2 bytes @ 0x86
  1867  000186                     	ds	2
  1868  000188                     radioReceivedPacket@PANID:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0x88
  1872  000188                     	ds	2
  1873  00018A                     radioReceivedPacket@data:
  1874                           	opt stack 0
  1875                           
  1876                           ; 2 bytes @ 0x8A
  1877  00018A                     	ds	2
  1878  00018C                     radioReceivedPacket@size:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x8C
  1882  00018C                     	ds	2
  1883  00018E                     radioReceivedPacket@rssi:
  1884                           	opt stack 0
  1885                           
  1886                           ; 1 bytes @ 0x8E
  1887  00018E                     	ds	1
  1888  00018F                     radioReceivedPacket@isBroadcast:
  1889                           	opt stack 0
  1890                           
  1891                           ; 1 bytes @ 0x8F
  1892  00018F                     	ds	1
  1893  000190                     radioReceivedPacket@isSecure:
  1894                           	opt stack 0
  1895                           
  1896                           ; 1 bytes @ 0x90
  1897  000190                     	ds	1
  1898  000191                     ??_radioReceivedPacket:
  1899                           
  1900                           ; 1 bytes @ 0x91
  1901  000191                     	ds	6
  1902  000197                     radioReceivedPacket@myAddr:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x97
  1906  000197                     	ds	2
  1907  000199                     _radioReceivedPacket$5364:
  1908                           	opt stack 0
  1909                           
  1910                           ; 1 bytes @ 0x99
  1911  000199                     	ds	1
  1912  00019A                     radioReceivedPacket@crc:
  1913                           	opt stack 0
  1914                           
  1915                           ; 4 bytes @ 0x9A
  1916  00019A                     	ds	4
  1917  00019E                     radioReceivedPacket@bt:
  1918                           	opt stack 0
  1919                           
  1920                           ; 2 bytes @ 0x9E
  1921  00019E                     	ds	2
  1922  0001A0                     radioReceivedPacket@rhdr:
  1923                           	opt stack 0
  1924                           
  1925                           ; 2 bytes @ 0xA0
  1926  0001A0                     	ds	2
  1927  0001A2                     radioReceivedPacket@child:
  1928                           	opt stack 0
  1929                           
  1930                           ; 2 bytes @ 0xA2
  1931  0001A2                     	ds	2
  1932  0001A4                     radioReceivedPacket@parent:
  1933                           	opt stack 0
  1934                           
  1935                           ; 2 bytes @ 0xA4
  1936  0001A4                     	ds	2
  1937  0001A6                     radioReceivedPacket@dhdr:
  1938                           	opt stack 0
  1939                           
  1940                           ; 2 bytes @ 0xA6
  1941  0001A6                     	ds	2
  1942  0001A8                     MiApp_MessageAvailable@src:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0xA8
  1946  0001A8                     	ds	2
  1947  0001AA                     MiApp_SearchConnection@ChannelMap:
  1948                           	opt stack 0
  1949                           
  1950                           ; 4 bytes @ 0xAA
  1951  0001AA                     	ds	4
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           postdec1	equ	0xFE5
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           
  1962                           	psect	cstackBANK0
  1963  000060                     __pcstackBANK0:
  1964                           	opt stack 0
  1965  000060                     HighISR@dPan:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x0
  1969  000060                     	ds	1
  1970  000061                     HighISR@counter:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x1
  1974  000061                     	ds	2
  1975  000063                     HighISR@fifo_stat:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x3
  1979  000063                     	ds	1
  1980  000064                     HighISR@ackPacket:
  1981                           	opt stack 0
  1982                           
  1983                           ; 4 bytes @ 0x4
  1984  000064                     	ds	4
  1985  000068                     HighISR@dstPan:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x8
  1989  000068                     	ds	2
  1990  00006A                     HighISR@PacketForMe:
  1991                           	opt stack 0
  1992                           
  1993                           ; 1 bytes @ 0xA
  1994  00006A                     	ds	1
  1995  00006B                     HighISR@bAck:
  1996                           	opt stack 0
  1997                           
  1998                           ; 1 bytes @ 0xB
  1999  00006B                     	ds	1
  2000  00006C                     HighISR@tmr:
  2001                           	opt stack 0
  2002                           
  2003                           ; 2 bytes @ 0xC
  2004  00006C                     	ds	2
  2005  00006E                     HighISR@RxPacketPtr:
  2006                           	opt stack 0
  2007                           
  2008                           ; 1 bytes @ 0xE
  2009  00006E                     	ds	1
  2010  00006F                     HighISR@ackInfoIndex:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0xF
  2014  00006F                     	ds	1
  2015  000070                     HighISR@PacketLen:
  2016                           	opt stack 0
  2017                           
  2018                           ; 1 bytes @ 0x10
  2019  000070                     	ds	1
  2020  000071                     HighISR@BankIndex:
  2021                           	opt stack 0
  2022                           
  2023                           ; 1 bytes @ 0x11
  2024  000071                     	ds	1
  2025  000072                     HighISR@i:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x12
  2029  000072                     	ds	1
  2030  000073                     ??_isdigit:
  2031  000073                     ??_isButtonPressed:
  2032  000073                     ?_memcmp:
  2033                           	opt stack 0
  2034  000073                     ?_NetworkGetParentAddress:
  2035                           	opt stack 0
  2036  000073                     ?_NetworkManagerGetMyAddress:
  2037                           	opt stack 0
  2038  000073                     ?_NetworkGetPANID:
  2039                           	opt stack 0
  2040  000073                     ?_CoordinatorAddress:
  2041                           	opt stack 0
  2042  000073                     ?_NetworkGetMyRouteInfo:
  2043                           	opt stack 0
  2044  000073                     ?_RMRoutingTableCount:
  2045                           	opt stack 0
  2046  000073                     ?_le_findEmptyNeighborIdx:
  2047                           	opt stack 0
  2048  000073                     ?___wmul:
  2049                           	opt stack 0
  2050  000073                     ?___awdiv:
  2051                           	opt stack 0
  2052  000073                     ?___lwdiv:
  2053                           	opt stack 0
  2054  000073                     ?_MiWi_TickGet:
  2055                           	opt stack 0
  2056  000073                     ?_krnd:
  2057                           	opt stack 0
  2058  000073                     ?_crc32:
  2059                           	opt stack 0
  2060  000073                     ?___lldiv:
  2061                           	opt stack 0
  2062  000073                     SPIPut@v:
  2063                           	opt stack 0
  2064  000073                     SPIPut2@v:
  2065                           	opt stack 0
  2066  000073                     LEDCommand@cmd:
  2067                           	opt stack 0
  2068  000073                     NetworkSetDeviceType@dev:
  2069                           	opt stack 0
  2070  000073                     NetworkDiscoveredEvent@PANID:
  2071                           	opt stack 0
  2072  000073                     encode@text:
  2073                           	opt stack 0
  2074  000073                     passLinkEtxThreshold@etx:
  2075                           	opt stack 0
  2076  000073                     RouteManagerSetNeighborCongested@n:
  2077                           	opt stack 0
  2078  000073                     le_initNeighborIdx@ll_addr:
  2079                           	opt stack 0
  2080  000073                     LE_GetNeighborDeviceType@index:
  2081                           	opt stack 0
  2082  000073                     krndInit@value:
  2083                           	opt stack 0
  2084  000073                     ___wmul@multiplier:
  2085                           	opt stack 0
  2086  000073                     ___awdiv@dividend:
  2087                           	opt stack 0
  2088  000073                     ___lwdiv@dividend:
  2089                           	opt stack 0
  2090  000073                     memcmp@s1:
  2091                           	opt stack 0
  2092  000073                     memset@p1:
  2093                           	opt stack 0
  2094  000073                     DelayUS@delay:
  2095                           	opt stack 0
  2096  000073                     crc32@crc:
  2097                           	opt stack 0
  2098  000073                     ___lldiv@dividend:
  2099                           	opt stack 0
  2100                           
  2101                           ; 4 bytes @ 0x13
  2102  000073                     	ds	1
  2103  000074                     SPIPut@i:
  2104                           	opt stack 0
  2105  000074                     SPIPut2@i:
  2106                           	opt stack 0
  2107  000074                     _isdigit$4813:
  2108                           	opt stack 0
  2109                           
  2110                           ; 1 bytes @ 0x14
  2111  000074                     	ds	1
  2112  000075                     ??_krndInit:
  2113  000075                     ??_LE_GetNeighborDeviceType:
  2114  000075                     ??_le_findEmptyNeighborIdx:
  2115  000075                     ?_MiApp_GetParentAddress:
  2116                           	opt stack 0
  2117  000075                     LCD_WriteCmd@data:
  2118                           	opt stack 0
  2119  000075                     LCD_WriteData@data:
  2120                           	opt stack 0
  2121  000075                     isButtonPressed@index:
  2122                           	opt stack 0
  2123  000075                     LEDCommand@led:
  2124                           	opt stack 0
  2125  000075                     EEPROMRead@dest:
  2126                           	opt stack 0
  2127  000075                     RegisterRead@address:
  2128                           	opt stack 0
  2129  000075                     WriteFIFO@Data:
  2130                           	opt stack 0
  2131  000075                     RouteManagerSetNeighborCongested@congested:
  2132                           	opt stack 0
  2133  000075                     le_initNeighborIdx@i:
  2134                           	opt stack 0
  2135  000075                     isdigit@c:
  2136                           	opt stack 0
  2137  000075                     NetworkDiscoveredEvent@rssi:
  2138                           	opt stack 0
  2139  000075                     RegisterSet@setting:
  2140                           	opt stack 0
  2141  000075                     encode@key:
  2142                           	opt stack 0
  2143  000075                     ___wmul@multiplicand:
  2144                           	opt stack 0
  2145  000075                     ___awdiv@divisor:
  2146                           	opt stack 0
  2147  000075                     ___lwdiv@divisor:
  2148                           	opt stack 0
  2149  000075                     memcmp@s2:
  2150                           	opt stack 0
  2151  000075                     memcpy@d1:
  2152                           	opt stack 0
  2153  000075                     memset@c:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x15
  2157  000075                     	ds	1
  2158  000076                     isButtonPressed@mask:
  2159                           	opt stack 0
  2160  000076                     EEPROMRead@addr:
  2161                           	opt stack 0
  2162  000076                     RegisterRead@value:
  2163                           	opt stack 0
  2164  000076                     WriteFIFO@IRQ1select:
  2165                           	opt stack 0
  2166  000076                     le_initNeighborIdx@ne:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x16
  2170  000076                     	ds	1
  2171  000077                     ??_krnd:
  2172  000077                     ??_NetworkDiscoveredEvent:
  2173  000077                     ??_encode:
  2174  000077                     EEPROMRead@count:
  2175                           	opt stack 0
  2176  000077                     RegisterSet@IRQ1select:
  2177                           	opt stack 0
  2178  000077                     RegisterRead@IRQ1select:
  2179                           	opt stack 0
  2180  000077                     ___awdiv@counter:
  2181                           	opt stack 0
  2182  000077                     ___lwdiv@counter:
  2183                           	opt stack 0
  2184  000077                     le_findEmptyNeighborIdx@res:
  2185                           	opt stack 0
  2186  000077                     crc32@buf:
  2187                           	opt stack 0
  2188  000077                     ___wmul@product:
  2189                           	opt stack 0
  2190  000077                     memcmp@n:
  2191                           	opt stack 0
  2192  000077                     memcpy@s1:
  2193                           	opt stack 0
  2194  000077                     memset@n:
  2195                           	opt stack 0
  2196  000077                     DelayUS@i:
  2197                           	opt stack 0
  2198  000077                     MiWi_TickGet@t1ext:
  2199                           	opt stack 0
  2200  000077                     ___lldiv@divisor:
  2201                           	opt stack 0
  2202                           
  2203                           ; 4 bytes @ 0x17
  2204  000077                     	ds	1
  2205  000078                     SetRFMode@mode:
  2206                           	opt stack 0
  2207  000078                     LE_GetNeighborDeviceType@dev:
  2208                           	opt stack 0
  2209  000078                     ___awdiv@sign:
  2210                           	opt stack 0
  2211  000078                     ___lwdiv@quotient:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x18
  2215  000078                     	ds	1
  2216  000079                     ??_memcmp:
  2217  000079                     MiMAC_SetChannel@offsetFreq:
  2218                           	opt stack 0
  2219  000079                     le_findEmptyNeighborIdx@i:
  2220                           	opt stack 0
  2221  000079                     crc32@size:
  2222                           	opt stack 0
  2223  000079                     ___awdiv@quotient:
  2224                           	opt stack 0
  2225  000079                     memcpy@n:
  2226                           	opt stack 0
  2227  000079                     memset@p:
  2228                           	opt stack 0
  2229                           
  2230                           ; 2 bytes @ 0x19
  2231  000079                     	ds	1
  2232  00007A                     ??_MiMAC_SetChannel:
  2233  00007A                     ?_sprintf:
  2234                           	opt stack 0
  2235  00007A                     sprintf@sp:
  2236                           	opt stack 0
  2237                           
  2238                           ; 2 bytes @ 0x1A
  2239  00007A                     	ds	1
  2240  00007B                     ??_crc32:
  2241  00007B                     ?_CoordinatorGenericAddress:
  2242                           	opt stack 0
  2243  00007B                     ?_le_computeETX:
  2244                           	opt stack 0
  2245  00007B                     MiMAC_SetChannel@channel:
  2246                           	opt stack 0
  2247  00007B                     ___lldiv@counter:
  2248                           	opt stack 0
  2249  00007B                     NetworkDataArrivedEvent@source:
  2250                           	opt stack 0
  2251  00007B                     NetworkDiscoveredEvent@empty:
  2252                           	opt stack 0
  2253  00007B                     routeInfoInit@ri:
  2254                           	opt stack 0
  2255  00007B                     isBroadcastAddress@address:
  2256                           	opt stack 0
  2257  00007B                     memcpy@d:
  2258                           	opt stack 0
  2259  00007B                     DelayMs@ms:
  2260                           	opt stack 0
  2261  00007B                     MiWi_TickGet@tmrval:
  2262                           	opt stack 0
  2263  00007B                     krnd@t:
  2264                           	opt stack 0
  2265                           
  2266                           ; 4 bytes @ 0x1B
  2267  00007B                     	ds	1
  2268  00007C                     MiApp_SetChannel@Channel:
  2269                           	opt stack 0
  2270  00007C                     sprintf@f:
  2271                           	opt stack 0
  2272  00007C                     ___lldiv@quotient:
  2273                           	opt stack 0
  2274                           
  2275                           ; 4 bytes @ 0x1C
  2276  00007C                     	ds	1
  2277  00007D                     le_computeETX@q1:
  2278                           	opt stack 0
  2279  00007D                     NetworkDataArrivedEvent@data:
  2280                           	opt stack 0
  2281  00007D                     NetworkDiscoveredEvent@i:
  2282                           	opt stack 0
  2283  00007D                     isSameAddress@a1:
  2284                           	opt stack 0
  2285  00007D                     memcpy@s:
  2286                           	opt stack 0
  2287  00007D                     isBroadcastAddress@addr:
  2288                           	opt stack 0
  2289                           
  2290                           ; 8 bytes @ 0x1D
  2291  00007D                     	ds	1
  2292  00007E                     le_computeETX@q:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x1E
  2296  00007E                     	ds	1
  2297  00007F                     ??_DelayMs:
  2298  00007F                     ?_Read_MAC_Address:
  2299                           	opt stack 0
  2300  00007F                     ?_NetworkPrepareSendPacket:
  2301                           	opt stack 0
  2302  00007F                     ?___lwmod:
  2303                           	opt stack 0
  2304  00007F                     ?_MiWi_TickGetMs:
  2305                           	opt stack 0
  2306  00007F                     ?___llmod:
  2307                           	opt stack 0
  2308  00007F                     ?_MSTickGet:
  2309                           	opt stack 0
  2310  00007F                     NetworkDataArrivedEvent@size:
  2311                           	opt stack 0
  2312  00007F                     isSameAddress@a2:
  2313                           	opt stack 0
  2314  00007F                     NetworkPrepareSendPacket@address:
  2315                           	opt stack 0
  2316  00007F                     NetworkSetAddressPAN@address:
  2317                           	opt stack 0
  2318  00007F                     DeviceManagerBufferDeviceData@address:
  2319                           	opt stack 0
  2320  00007F                     ___lwmod@dividend:
  2321                           	opt stack 0
  2322  00007F                     ___llmod@dividend:
  2323                           	opt stack 0
  2324                           
  2325                           ; 4 bytes @ 0x1F
  2326  00007F                     	ds	1
  2327  000080                     le_updateETX@ne:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x20
  2331  000080                     	ds	1
  2332  000081                     ??_Read_MAC_Address:
  2333  000081                     ?_DeviceManagerGetDeviceData:
  2334                           	opt stack 0
  2335  000081                     ?_RoutingTableFindDeviceOrParent:
  2336                           	opt stack 0
  2337  000081                     ?_le_findWorstNeighborIdx:
  2338                           	opt stack 0
  2339  000081                     NetworkDataArrivedEvent@isBroadcast:
  2340                           	opt stack 0
  2341  000081                     AddNodeToNetworkTable@address:
  2342                           	opt stack 0
  2343  000081                     encode@delta:
  2344                           	opt stack 0
  2345  000081                     RoutingTableFindDeviceOrParent@address:
  2346                           	opt stack 0
  2347  000081                     le_findIdx@ll_addr:
  2348                           	opt stack 0
  2349  000081                     TunnelManagerInvalidateTunnel@device:
  2350                           	opt stack 0
  2351  000081                     NetworkPrepareSendPacket@buffer:
  2352                           	opt stack 0
  2353  000081                     NetworkSetAddressPAN@PANID:
  2354                           	opt stack 0
  2355  000081                     DeviceManagerGetDeviceType@address:
  2356                           	opt stack 0
  2357  000081                     DeviceManagerBufferDeviceData@data:
  2358                           	opt stack 0
  2359  000081                     DeviceManagerGetDeviceData@address:
  2360                           	opt stack 0
  2361  000081                     ___lwmod@divisor:
  2362                           	opt stack 0
  2363                           
  2364                           ; 2 bytes @ 0x21
  2365  000081                     	ds	1
  2366  000082                     ??_sprintf:
  2367  000082                     le_updateETX@newEst:
  2368                           	opt stack 0
  2369  000082                     Read_MAC_Address@addr8:
  2370                           	opt stack 0
  2371                           
  2372                           ; 6 bytes @ 0x22
  2373  000082                     	ds	1
  2374  000083                     ??_DeviceManagerGetDeviceType:
  2375  000083                     ??_TunnelManagerInvalidateTunnel:
  2376  000083                     ??_RoutingTableFindDeviceOrParent:
  2377  000083                     ??_le_findWorstNeighborIdx:
  2378  000083                     encode@i:
  2379                           	opt stack 0
  2380  000083                     le_findIdx@res:
  2381                           	opt stack 0
  2382  000083                     NetworkPrepareSendPacket@pType:
  2383                           	opt stack 0
  2384  000083                     ___lwmod@counter:
  2385                           	opt stack 0
  2386  000083                     MiApp_SetAddressPan@address:
  2387                           	opt stack 0
  2388  000083                     AddNodeToNetworkTable@PANID:
  2389                           	opt stack 0
  2390  000083                     DeviceManagerBufferDeviceData@size:
  2391                           	opt stack 0
  2392  000083                     DeviceManagerGetDeviceData@data:
  2393                           	opt stack 0
  2394  000083                     MiWi_TickGetMs@tnow:
  2395                           	opt stack 0
  2396  000083                     ___llmod@divisor:
  2397                           	opt stack 0
  2398                           
  2399                           ; 4 bytes @ 0x23
  2400  000083                     	ds	1
  2401  000084                     ??_le_updateETX:
  2402  000084                     ?_LEAppendNeighborInfo:
  2403                           	opt stack 0
  2404  000084                     ?_le_findRandomNeighborIdx:
  2405                           	opt stack 0
  2406  000084                     le_findIdx@i:
  2407                           	opt stack 0
  2408  000084                     encode@part1:
  2409                           	opt stack 0
  2410  000084                     LEAppendNeighborInfo@data:
  2411                           	opt stack 0
  2412  000084                     NetworkPrepareSendPacket@data:
  2413                           	opt stack 0
  2414                           
  2415                           ; 2 bytes @ 0x24
  2416  000084                     	ds	1
  2417  000085                     ??_AddNodeToNetworkTable:
  2418  000085                     ?_LELinkQualityGet:
  2419                           	opt stack 0
  2420  000085                     le_findWorstNeighborIdx@thresholdETX:
  2421                           	opt stack 0
  2422  000085                     isBroadcastAddress@res:
  2423                           	opt stack 0
  2424  000085                     DeviceManagerGetDeviceType@dev:
  2425                           	opt stack 0
  2426  000085                     DeviceManagerBufferDeviceData@isSecure:
  2427                           	opt stack 0
  2428  000085                     MiApp_SetAddressPan@panid:
  2429                           	opt stack 0
  2430  000085                     RoutingTableFindDeviceOrParent@i:
  2431                           	opt stack 0
  2432  000085                     LELinkQualityGet@address:
  2433                           	opt stack 0
  2434  000085                     LE_PinNeighbor@neighbor:
  2435                           	opt stack 0
  2436  000085                     LE_UnpinNeighbor@neighbor:
  2437                           	opt stack 0
  2438  000085                     LE_ClearDLQ@neighbor:
  2439                           	opt stack 0
  2440  000085                     TunnelManagerInvalidateTunnel@addr:
  2441                           	opt stack 0
  2442  000085                     DeviceManagerGetDeviceData@isSecure:
  2443                           	opt stack 0
  2444  000085                     crc32@p:
  2445                           	opt stack 0
  2446                           
  2447                           ; 2 bytes @ 0x25
  2448  000085                     	ds	1
  2449  000086                     ??_le_findRandomNeighborIdx:
  2450  000086                     sprintf@idx:
  2451                           	opt stack 0
  2452  000086                     DeviceManagerBufferDeviceData@isFormed:
  2453                           	opt stack 0
  2454  000086                     encode@part2:
  2455                           	opt stack 0
  2456  000086                     LEAppendNeighborInfo@size:
  2457                           	opt stack 0
  2458  000086                     le_findWorstNeighborIdx@worstNeighborIdx:
  2459                           	opt stack 0
  2460  000086                     isInvalidAddress@address:
  2461                           	opt stack 0
  2462  000086                     NetworkPrepareSendPacket@size:
  2463                           	opt stack 0
  2464  000086                     DeviceManagerGetDeviceType@i:
  2465                           	opt stack 0
  2466                           
  2467                           ; 2 bytes @ 0x26
  2468  000086                     	ds	1
  2469  000087                     ??_LE_UnpinNeighbor:
  2470  000087                     ??_LE_PinNeighbor:
  2471  000087                     ??_LE_ClearDLQ:
  2472  000087                     ??_LEDManagerTask:
  2473  000087                     LCDUpdate@i:
  2474                           	opt stack 0
  2475  000087                     ButtonTask@Sw:
  2476                           	opt stack 0
  2477  000087                     TxPacket@CCA:
  2478                           	opt stack 0
  2479  000087                     sprintf@flag:
  2480                           	opt stack 0
  2481  000087                     ___llmod@counter:
  2482                           	opt stack 0
  2483  000087                     MiApp_SetAddressPan@addr:
  2484                           	opt stack 0
  2485  000087                     RoutingTableFindDeviceOrParent@res:
  2486                           	opt stack 0
  2487  000087                     LELinkQualityGet@offset:
  2488                           	opt stack 0
  2489  000087                     TunnelManagerInvalidateTunnel@i:
  2490                           	opt stack 0
  2491  000087                     DeviceManagerGetDeviceData@isFormed:
  2492                           	opt stack 0
  2493  000087                     MiMAC_Init@initValue:
  2494                           	opt stack 0
  2495  000087                     MSTickGet@tNow:
  2496                           	opt stack 0
  2497                           
  2498                           ; 8 bytes @ 0x27
  2499  000087                     	ds	1
  2500  000088                     ??_LEAppendNeighborInfo:
  2501  000088                     ??_TxPacket:
  2502  000088                     le_findRandomNeighborIdx@cnt:
  2503                           	opt stack 0
  2504  000088                     _NetworkHasRoute$4283:
  2505                           	opt stack 0
  2506  000088                     Read_MAC_Address@address:
  2507                           	opt stack 0
  2508  000088                     encode@sum:
  2509                           	opt stack 0
  2510  000088                     sprintf@val:
  2511                           	opt stack 0
  2512  000088                     routingTableFind@neighbor:
  2513                           	opt stack 0
  2514  000088                     RouteManagerShouldInsert@hdr:
  2515                           	opt stack 0
  2516  000088                     le_findWorstNeighborIdx@res:
  2517                           	opt stack 0
  2518  000088                     le_updateNeighborTableEst@n:
  2519                           	opt stack 0
  2520  000088                     NetworkPrepareSendPacket@nHdr:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x28
  2524  000088                     	ds	1
  2525  000089                     ??_LELinkQualityGet:
  2526  000089                     NetworkHasRoute@res:
  2527                           	opt stack 0
  2528  000089                     AddNodeToNetworkTable@ind:
  2529                           	opt stack 0
  2530  000089                     RoutingTableFindDeviceOrParent@entry:
  2531                           	opt stack 0
  2532  000089                     le_findRandomNeighborIdx@res:
  2533                           	opt stack 0
  2534                           
  2535                           ; 2 bytes @ 0x29
  2536  000089                     	ds	1
  2537  00008A                     ??_MiMAC_Init:
  2538  00008A                     ??_routingTableFind:
  2539  00008A                     ??_RouteManagerShouldInsert:
  2540  00008A                     ??_le_updateNeighborTableEst:
  2541  00008A                     Read_MAC_Address@pAddress:
  2542                           	opt stack 0
  2543  00008A                     sprintf@prec:
  2544                           	opt stack 0
  2545  00008A                     CTR@text:
  2546                           	opt stack 0
  2547  00008A                     CBC_MAC@text:
  2548                           	opt stack 0
  2549  00008A                     LEAppendNeighborInfo@cnt:
  2550                           	opt stack 0
  2551  00008A                     LE_PinNeighbor@nidx:
  2552                           	opt stack 0
  2553  00008A                     LE_UnpinNeighbor@nidx:
  2554                           	opt stack 0
  2555  00008A                     LE_ClearDLQ@ne:
  2556                           	opt stack 0
  2557  00008A                     le_findWorstNeighborIdx@thisETX:
  2558                           	opt stack 0
  2559  00008A                     TMSendFormedPacketTowardsCoordinator@data:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x2A
  2563  00008A                     	ds	1
  2564  00008B                     ?_GetRouteAddressOfChild:
  2565                           	opt stack 0
  2566  00008B                     sprintf@ap:
  2567                           	opt stack 0
  2568  00008B                     le_findRandomNeighborIdx@num_eligible_eviction:
  2569                           	opt stack 0
  2570  00008B                     AddNodeToNetworkTable@i:
  2571                           	opt stack 0
  2572  00008B                     MiMAC_Init@seed:
  2573                           	opt stack 0
  2574  00008B                     GetRouteAddressOfChild@child:
  2575                           	opt stack 0
  2576  00008B                     LELinkQualityGet@res:
  2577                           	opt stack 0
  2578                           
  2579                           ; 2 bytes @ 0x2B
  2580  00008B                     	ds	1
  2581  00008C                     Read_MAC_Address@i:
  2582                           	opt stack 0
  2583  00008C                     CTR@len:
  2584                           	opt stack 0
  2585  00008C                     CBC_MAC@len:
  2586                           	opt stack 0
  2587  00008C                     sprintf@cp:
  2588                           	opt stack 0
  2589  00008C                     routingTableFind@res:
  2590                           	opt stack 0
  2591  00008C                     RouteManagerShouldInsert@pathEtx:
  2592                           	opt stack 0
  2593  00008C                     LEAppendNeighborInfo@newPrevSentIdx:
  2594                           	opt stack 0
  2595  00008C                     LE_ClearDLQ@nidx:
  2596                           	opt stack 0
  2597  00008C                     le_findWorstNeighborIdx@worstETX:
  2598                           	opt stack 0
  2599  00008C                     le_findRandomNeighborIdx@i:
  2600                           	opt stack 0
  2601  00008C                     TMSendFormedPacketTowardsCoordinator@size:
  2602                           	opt stack 0
  2603  00008C                     DeviceManagerBufferDeviceData@empty:
  2604                           	opt stack 0
  2605  00008C                     TxPacket@t1:
  2606                           	opt stack 0
  2607                           
  2608                           ; 4 bytes @ 0x2C
  2609  00008C                     	ds	1
  2610  00008D                     MiMAC_Init@i:
  2611                           	opt stack 0
  2612  00008D                     LELinkQualityGet@idx:
  2613                           	opt stack 0
  2614  00008D                     CTR@key:
  2615                           	opt stack 0
  2616  00008D                     CBC_MAC@key:
  2617                           	opt stack 0
  2618  00008D                     GetRouteAddressOfChild@res:
  2619                           	opt stack 0
  2620                           
  2621                           ; 2 bytes @ 0x2D
  2622  00008D                     	ds	1
  2623  00008E                     routingTableFind@i:
  2624                           	opt stack 0
  2625  00008E                     TMSendFormedPacketTowardsCoordinator@isFormed:
  2626                           	opt stack 0
  2627  00008E                     sprintf@len:
  2628                           	opt stack 0
  2629  00008E                     RouteManagerShouldInsert@neighEtx:
  2630                           	opt stack 0
  2631  00008E                     LEAppendNeighborInfo@count:
  2632                           	opt stack 0
  2633  00008E                     le_findWorstNeighborIdx@i:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x2E
  2637  00008E                     	ds	1
  2638  00008F                     ?_MSTickGetDiffNow:
  2639                           	opt stack 0
  2640  00008F                     ?_AddMSToTick:
  2641                           	opt stack 0
  2642  00008F                     TMSendFormedPacketTowardsCoordinator@isSecure:
  2643                           	opt stack 0
  2644  00008F                     CTR@nounce:
  2645                           	opt stack 0
  2646  00008F                     CBC_MAC@MIC:
  2647                           	opt stack 0
  2648  00008F                     RouterEvicted@address:
  2649                           	opt stack 0
  2650  00008F                     routingTableUpdateEntry@from:
  2651                           	opt stack 0
  2652  00008F                     GetRouteAddressOfChild@i:
  2653                           	opt stack 0
  2654  00008F                     TunnelManagerSetTunnel@device:
  2655                           	opt stack 0
  2656  00008F                     IsNetworkDevice@address:
  2657                           	opt stack 0
  2658  00008F                     MiApp_ProtocolInit@initValue:
  2659                           	opt stack 0
  2660  00008F                     netChooseAdvertiseTime@t:
  2661                           	opt stack 0
  2662  00008F                     MSTickGetDiffNow@tick:
  2663                           	opt stack 0
  2664  00008F                     AddMSToTick@tick:
  2665                           	opt stack 0
  2666                           
  2667                           ; 8 bytes @ 0x2F
  2668  00008F                     	ds	1
  2669  000090                     ??_TMSendFormedPacketTowardsCoordinator:
  2670  000090                     sprintf@width:
  2671                           	opt stack 0
  2672  000090                     RouteManagerShouldInsert@entry:
  2673                           	opt stack 0
  2674  000090                     LEAppendNeighborInfo@i:
  2675                           	opt stack 0
  2676  000090                     TxPacket@t2:
  2677                           	opt stack 0
  2678                           
  2679                           ; 4 bytes @ 0x30
  2680  000090                     	ds	1
  2681  000091                     ??_CTR:
  2682  000091                     ??_CBC_MAC:
  2683  000091                     ??_RouterEvicted:
  2684  000091                     IsNetworkDevice@devType:
  2685                           	opt stack 0
  2686  000091                     LEDManagerTask@i:
  2687                           	opt stack 0
  2688  000091                     routingTableUpdateEntry@parent:
  2689                           	opt stack 0
  2690  000091                     TunnelManagerSetTunnel@parent:
  2691                           	opt stack 0
  2692                           
  2693                           ; 2 bytes @ 0x31
  2694  000091                     	ds	1
  2695  000092                     ??_IsNetworkDevice:
  2696  000092                     sprintf@c:
  2697                           	opt stack 0
  2698  000092                     TMSendFormedPacketTowardsCoordinator@res:
  2699                           	opt stack 0
  2700  000092                     RouteManagerShouldInsert@i:
  2701                           	opt stack 0
  2702  000092                     LEAppendNeighborInfo@j:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0x32
  2706  000092                     	ds	1
  2707  000093                     ??_TunnelManagerSetTunnel:
  2708  000093                     ??_RouteManagerPerformUpdate:
  2709  000093                     le_updateNeighborTableEst@totalPkt:
  2710                           	opt stack 0
  2711  000093                     RouterEvicted@r:
  2712                           	opt stack 0
  2713  000093                     routingTableUpdateEntry@etx:
  2714                           	opt stack 0
  2715  000093                     TMSendFormedPacketTowardsCoordinator@i:
  2716                           	opt stack 0
  2717  000093                     NetworkInit@address:
  2718                           	opt stack 0
  2719                           
  2720                           ; 2 bytes @ 0x33
  2721  000093                     	ds	1
  2722  000094                     CTR@block:
  2723                           	opt stack 0
  2724  000094                     CBC_MAC@block:
  2725                           	opt stack 0
  2726  000094                     RouteManagerShouldInsert@found:
  2727                           	opt stack 0
  2728  000094                     TxPacket@delay:
  2729                           	opt stack 0
  2730  000094                     LEAppendNeighborInfo@k:
  2731                           	opt stack 0
  2732  000094                     le_updateNeighborTableEst@newEst:
  2733                           	opt stack 0
  2734  000094                     IsNetworkDevice@oldest:
  2735                           	opt stack 0
  2736                           
  2737                           ; 8 bytes @ 0x34
  2738  000094                     	ds	1
  2739  000095                     CTR@i:
  2740                           	opt stack 0
  2741  000095                     CBC_MAC@j:
  2742                           	opt stack 0
  2743  000095                     RouterEvicted@idx:
  2744                           	opt stack 0
  2745  000095                     RouteManagerPerformUpdate@linkEtx:
  2746                           	opt stack 0
  2747  000095                     routingTableUpdateEntry@linkEtx:
  2748                           	opt stack 0
  2749  000095                     RouteManagerShouldInsert@rcvBeacon:
  2750                           	opt stack 0
  2751  000095                     NetworkInit@PANID:
  2752                           	opt stack 0
  2753                           
  2754                           ; 2 bytes @ 0x35
  2755  000095                     	ds	1
  2756  000096                     TxPacket@reTry:
  2757                           	opt stack 0
  2758  000096                     CTR@j:
  2759                           	opt stack 0
  2760  000096                     CBC_MAC@i:
  2761                           	opt stack 0
  2762  000096                     RouterEvicted@i:
  2763                           	opt stack 0
  2764  000096                     le_updateNeighborTableEst@i:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0x36
  2768  000096                     	ds	1
  2769  000097                     TxPacket@allowedTxFailure:
  2770                           	opt stack 0
  2771  000097                     routingTableUpdateEntry@idx:
  2772                           	opt stack 0
  2773  000097                     NetworkInit@dev:
  2774                           	opt stack 0
  2775  000097                     CCM_Enc@text:
  2776                           	opt stack 0
  2777  000097                     CCM_Dec@text:
  2778                           	opt stack 0
  2779  000097                     RouteManagerPerformUpdate@i:
  2780                           	opt stack 0
  2781  000097                     LE_InsertNeighbor@neighbor:
  2782                           	opt stack 0
  2783  000097                     le_updateNeighborTableEst@ne:
  2784                           	opt stack 0
  2785  000097                     LE_RemoveNeighborDevice@device:
  2786                           	opt stack 0
  2787  000097                     MSTickGetDiffNow@diff:
  2788                           	opt stack 0
  2789  000097                     AddMSToTick@ms:
  2790                           	opt stack 0
  2791                           
  2792                           ; 4 bytes @ 0x37
  2793  000097                     	ds	1
  2794  000098                     TxPacket@j:
  2795                           	opt stack 0
  2796  000098                     NetworkInit@devPanID:
  2797                           	opt stack 0
  2798                           
  2799                           ; 2 bytes @ 0x38
  2800  000098                     	ds	1
  2801  000099                     ??_LE_RemoveNeighborDevice:
  2802  000099                     CCM_Enc@headerLen:
  2803                           	opt stack 0
  2804  000099                     CCM_Dec@headerLen:
  2805                           	opt stack 0
  2806  000099                     LE_InsertNeighbor@devType:
  2807                           	opt stack 0
  2808  000099                     le_updateNeighborEntryIdx@seq:
  2809                           	opt stack 0
  2810  000099                     RouteManagerPerformUpdate@pathEtx:
  2811                           	opt stack 0
  2812  000099                     TunnelManagerSetTunnel@oldestindex:
  2813                           	opt stack 0
  2814                           
  2815                           ; 2 bytes @ 0x39
  2816  000099                     	ds	1
  2817  00009A                     ??_LE_InsertNeighbor:
  2818  00009A                     MiApp_EstablishConnection@Mode:
  2819                           	opt stack 0
  2820  00009A                     TxPacket@rssival:
  2821                           	opt stack 0
  2822  00009A                     CCM_Enc@payloadLen:
  2823                           	opt stack 0
  2824  00009A                     CCM_Dec@payloadLen:
  2825                           	opt stack 0
  2826  00009A                     le_updateNeighborEntryIdx@dev:
  2827                           	opt stack 0
  2828                           
  2829                           ; 1 bytes @ 0x3A
  2830  00009A                     	ds	1
  2831  00009B                     ??_AddMSToTick:
  2832  00009B                     ??_le_updateNeighborEntryIdx:
  2833  00009B                     MiApp_EstablishConnection@dev:
  2834                           	opt stack 0
  2835  00009B                     TxPacket@TxPacketLen:
  2836                           	opt stack 0
  2837  00009B                     CCM_Enc@key:
  2838                           	opt stack 0
  2839  00009B                     CCM_Dec@key:
  2840                           	opt stack 0
  2841  00009B                     RouteManagerPerformUpdate@currentEtx:
  2842                           	opt stack 0
  2843  00009B                     LE_RemoveNeighborDevice@i:
  2844                           	opt stack 0
  2845  00009B                     TunnelManagerSetTunnel@emptyindex:
  2846                           	opt stack 0
  2847  00009B                     MSTickGetDiffNow@tNow:
  2848                           	opt stack 0
  2849                           
  2850                           ; 8 bytes @ 0x3B
  2851  00009B                     	ds	1
  2852  00009C                     TxPacket@status:
  2853                           	opt stack 0
  2854  00009C                     LE_InsertNeighbor@nidx:
  2855                           	opt stack 0
  2856  00009C                     IsNetworkDevice@res:
  2857                           	opt stack 0
  2858  00009C                     MiApp_EstablishConnection@src:
  2859                           	opt stack 0
  2860                           
  2861                           ; 2 bytes @ 0x3C
  2862  00009C                     	ds	1
  2863  00009D                     ??_CCM_Enc:
  2864  00009D                     ??_CCM_Dec:
  2865  00009D                     TxPacket@i:
  2866                           	opt stack 0
  2867  00009D                     le_updateNeighborEntryIdx@packetGap:
  2868                           	opt stack 0
  2869  00009D                     RouteManagerPerformUpdate@best:
  2870                           	opt stack 0
  2871  00009D                     RouteManagerProcessReceive@source:
  2872                           	opt stack 0
  2873  00009D                     TunnelManagerSetTunnel@index:
  2874                           	opt stack 0
  2875  00009D                     IsNetworkDevice@empty:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x3D
  2879  00009D                     	ds	1
  2880  00009E                     MiApp_EstablishConnection@ActiveScanIndex:
  2881                           	opt stack 0
  2882  00009E                     le_updateNeighborEntryIdx@idx:
  2883                           	opt stack 0
  2884                           
  2885                           ; 1 bytes @ 0x3E
  2886  00009E                     	ds	1
  2887  00009F                     _CCM_Enc$2730:
  2888                           	opt stack 0
  2889  00009F                     RouteManagerPerformUpdate@minEtx:
  2890                           	opt stack 0
  2891  00009F                     RouteManagerProcessReceive@data:
  2892                           	opt stack 0
  2893  00009F                     LE_processReceivedMessage@source:
  2894                           	opt stack 0
  2895  00009F                     BroadcastManagerDelaySend@pkt:
  2896                           	opt stack 0
  2897  00009F                     IsNetworkDevice@i:
  2898                           	opt stack 0
  2899  00009F                     TunnelManagerSetTunnel@OldestTick:
  2900                           	opt stack 0
  2901                           
  2902                           ; 8 bytes @ 0x3F
  2903  00009F                     	ds	2
  2904  0000A1                     CCM_Enc@i:
  2905                           	opt stack 0
  2906  0000A1                     RouteManagerProcessReceive@len:
  2907                           	opt stack 0
  2908  0000A1                     _CCM_Dec$2738:
  2909                           	opt stack 0
  2910  0000A1                     RouteManagerPerformUpdate@entry:
  2911                           	opt stack 0
  2912  0000A1                     LE_processReceivedMessage@data:
  2913                           	opt stack 0
  2914  0000A1                     BroadcastManagerDelaySend@size:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x41
  2918  0000A1                     	ds	1
  2919  0000A2                     MiMAC_SendPacket@transParam:
  2920                           	opt stack 0
  2921                           
  2922                           ; 5 bytes @ 0x42
  2923  0000A2                     	ds	1
  2924  0000A3                     CCM_Dec@i:
  2925                           	opt stack 0
  2926  0000A3                     LE_processReceivedMessage@len:
  2927                           	opt stack 0
  2928  0000A3                     BroadcastManagerDelaySend@isSecure:
  2929                           	opt stack 0
  2930  0000A3                     RouteManagerPerformUpdate@r:
  2931                           	opt stack 0
  2932  0000A3                     MSTickGetDiffNow@tdiff:
  2933                           	opt stack 0
  2934                           
  2935                           ; 8 bytes @ 0x43
  2936  0000A3                     	ds	1
  2937  0000A4                     ??_MiMAC_ReceivedPacket:
  2938  0000A4                     LE_processReceivedMessage@rssi:
  2939                           	opt stack 0
  2940  0000A4                     BroadcastManagerDelaySend@isInterPan:
  2941                           	opt stack 0
  2942                           
  2943                           ; 1 bytes @ 0x44
  2944  0000A4                     	ds	1
  2945  0000A5                     ??_BroadcastManagerDelaySend:
  2946  0000A5                     RouteManagerProcessReceive@congested:
  2947                           	opt stack 0
  2948                           
  2949                           ; 1 bytes @ 0x45
  2950  0000A5                     	ds	1
  2951  0000A6                     RouteManagerProcessReceive@from:
  2952                           	opt stack 0
  2953                           
  2954                           ; 2 bytes @ 0x46
  2955  0000A6                     	ds	1
  2956  0000A7                     MiMAC_SendPacket@MACPayload:
  2957                           	opt stack 0
  2958  0000A7                     LE_processReceivedMessage@hdr:
  2959                           	opt stack 0
  2960  0000A7                     TunnelManagerSetTunnel@i:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x47
  2964  0000A7                     	ds	1
  2965  0000A8                     RouteManagerProcessReceive@rcvBeacon:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x48
  2969  0000A8                     	ds	1
  2970  0000A9                     MiMAC_SendPacket@MACPayloadLen:
  2971                           	opt stack 0
  2972  0000A9                     LE_processReceivedMessage@bhdr:
  2973                           	opt stack 0
  2974                           
  2975                           ; 2 bytes @ 0x49
  2976  0000A9                     	ds	1
  2977  0000AA                     ??_MiMAC_SendPacket:
  2978                           
  2979                           ; 1 bytes @ 0x4A
  2980  0000AA                     	ds	1
  2981  0000AB                     ?_TunnelManagerGetTunnel:
  2982                           	opt stack 0
  2983  0000AB                     MiMAC_SendPacket@headerLen:
  2984                           	opt stack 0
  2985  0000AB                     BroadcastManagerDelaySend@res:
  2986                           	opt stack 0
  2987  0000AB                     LE_processReceivedMessage@ll_addr:
  2988                           	opt stack 0
  2989  0000AB                     TunnelManagerGetTunnel@device:
  2990                           	opt stack 0
  2991  0000AB                     isKnownPacket@hash:
  2992                           	opt stack 0
  2993                           
  2994                           ; 4 bytes @ 0x4B
  2995  0000AB                     	ds	1
  2996  0000AC                     MiMAC_SendPacket@i:
  2997                           	opt stack 0
  2998  0000AC                     BroadcastManagerDelaySend@i:
  2999                           	opt stack 0
  3000  0000AC                     MiMAC_ReceivedPacket@currentTick:
  3001                           	opt stack 0
  3002                           
  3003                           ; 4 bytes @ 0x4C
  3004  0000AC                     	ds	1
  3005  0000AD                     ??_TunnelManagerGetTunnel:
  3006  0000AD                     MiMAC_SendPacket@TxIndex:
  3007                           	opt stack 0
  3008  0000AD                     LE_processReceivedMessage@nidx:
  3009                           	opt stack 0
  3010                           
  3011                           ; 1 bytes @ 0x4D
  3012  0000AD                     	ds	1
  3013  0000AE                     SendPacket@DestinationAddress:
  3014                           	opt stack 0
  3015                           
  3016                           ; 2 bytes @ 0x4E
  3017  0000AE                     	ds	1
  3018  0000AF                     ??_isKnownPacket:
  3019                           
  3020                           ; 1 bytes @ 0x4F
  3021  0000AF                     	ds	1
  3022  0000B0                     SendPacket@destinationPANID:
  3023                           	opt stack 0
  3024  0000B0                     MiMAC_ReceivedPacket@addr:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x50
  3028  0000B0                     	ds	2
  3029  0000B2                     SendPacket@isCommand:
  3030                           	opt stack 0
  3031  0000B2                     MiMAC_ReceivedPacket@FrameCounter:
  3032                           	opt stack 0
  3033                           
  3034                           ; 4 bytes @ 0x52
  3035  0000B2                     	ds	1
  3036  0000B3                     SendPacket@SecurityEnabled:
  3037                           	opt stack 0
  3038  0000B3                     TunnelManagerGetTunnel@trec:
  3039                           	opt stack 0
  3040                           
  3041                           ; 8 bytes @ 0x53
  3042  0000B3                     	ds	1
  3043  0000B4                     ??_SendPacket:
  3044                           
  3045                           ; 1 bytes @ 0x54
  3046  0000B4                     	ds	1
  3047  0000B5                     SendPacket@status:
  3048                           	opt stack 0
  3049  0000B5                     isKnownPacket@zeros:
  3050                           	opt stack 0
  3051                           
  3052                           ; 12 bytes @ 0x55
  3053  0000B5                     	ds	1
  3054  0000B6                     SendPacket@Broadcast:
  3055                           	opt stack 0
  3056  0000B6                     MiMAC_ReceivedPacket@j:
  3057                           	opt stack 0
  3058                           
  3059                           ; 1 bytes @ 0x56
  3060  0000B6                     	ds	1
  3061  0000B7                     MiMAC_ReceivedPacket@PayloadIndex:
  3062                           	opt stack 0
  3063  0000B7                     SendPacket@tParam:
  3064                           	opt stack 0
  3065                           
  3066                           ; 5 bytes @ 0x57
  3067  0000B7                     	ds	1
  3068  0000B8                     MiMAC_ReceivedPacket@i:
  3069                           	opt stack 0
  3070                           
  3071                           ; 1 bytes @ 0x58
  3072  0000B8                     	ds	3
  3073  0000BB                     TunnelManagerGetTunnel@addr:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x5B
  3077  0000BB                     	ds	1
  3078  0000BC                     radioBroadcast@data:
  3079                           	opt stack 0
  3080  0000BC                     radioUnicast@dest:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x5C
  3084  0000BC                     	ds	1
  3085  0000BD                     TunnelManagerGetTunnel@retAddr:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x5D
  3089  0000BD                     	ds	1
  3090  0000BE                     radioBroadcast@datasize:
  3091                           	opt stack 0
  3092  0000BE                     radioUnicast@PANID:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x5E
  3096  0000BE                     	ds	1
  3097  0000BF                     radioBroadcast@PANID:
  3098                           	opt stack 0
  3099  0000BF                     TunnelManagerGetTunnel@i:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x5F
  3103  0000BF                     	ds	1
  3104  0000C0                     radioUnicast@data:
  3105                           	opt stack 0
  3106                           
  3107                           ; 2 bytes @ 0x60
  3108  0000C0                     	ds	1
  3109  0000C1                     radioBroadcast@isSecure:
  3110                           	opt stack 0
  3111  0000C1                     isKnownPacket@unknown:
  3112                           	opt stack 0
  3113                           
  3114                           ; 1 bytes @ 0x61
  3115  0000C1                     	ds	1
  3116  0000C2                     radioBroadcast@i:
  3117                           	opt stack 0
  3118  0000C2                     radioUnicast@datasize:
  3119                           	opt stack 0
  3120  0000C2                     isKnownPacket@oldestindex:
  3121                           	opt stack 0
  3122                           
  3123                           ; 2 bytes @ 0x62
  3124  0000C2                     	ds	1
  3125  0000C3                     ??_networkSendBeacon:
  3126  0000C3                     ??_BroadcastManagerTask:
  3127  0000C3                     radioUnicast@isSecure:
  3128                           	opt stack 0
  3129                           
  3130                           ; 1 bytes @ 0x63
  3131  0000C3                     	ds	1
  3132  0000C4                     radioUnicast@i:
  3133                           	opt stack 0
  3134  0000C4                     isKnownPacket@index:
  3135                           	opt stack 0
  3136                           
  3137                           ; 2 bytes @ 0x64
  3138  0000C4                     	ds	1
  3139  0000C5                     ??_TransportManagerTask:
  3140  0000C5                     TMSendFormedPacketToRFD@device:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x65
  3144  0000C5                     	ds	1
  3145  0000C6                     isKnownPacket@emptyindex:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x66
  3149  0000C6                     	ds	1
  3150  0000C7                     TMSendFormedPacketToRFD@data:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x67
  3154  0000C7                     	ds	1
  3155  0000C8                     isKnownPacket@OldestTick:
  3156                           	opt stack 0
  3157                           
  3158                           ; 8 bytes @ 0x68
  3159  0000C8                     	ds	1
  3160  0000C9                     networkSendBeacon@last:
  3161                           	opt stack 0
  3162  0000C9                     TMSendFormedPacketToRFD@size:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0x69
  3166  0000C9                     	ds	2
  3167  0000CB                     TMSendFormedPacketToRFD@isSecure:
  3168                           	opt stack 0
  3169  0000CB                     networkSendBeacon@adr:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x6B
  3173  0000CB                     	ds	1
  3174  0000CC                     
  3175                           ; 1 bytes @ 0x6C
  3176  0000CC                     	ds	1
  3177  0000CD                     networkSendBeacon@bt:
  3178                           	opt stack 0
  3179  0000CD                     BroadcastManagerTask@PANID:
  3180                           	opt stack 0
  3181  0000CD                     TMSendFormedPacketToRFD@myaddr:
  3182                           	opt stack 0
  3183                           
  3184                           ; 2 bytes @ 0x6D
  3185  0000CD                     	ds	2
  3186  0000CF                     TMSendFormedPacketToRFD@res:
  3187                           	opt stack 0
  3188  0000CF                     networkSendBeacon@r:
  3189                           	opt stack 0
  3190  0000CF                     BroadcastManagerTask@i:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x6F
  3194  0000CF                     	ds	1
  3195  0000D0                     isKnownPacket@i:
  3196                           	opt stack 0
  3197  0000D0                     TMSendFormedPacketToRFD@dhdr:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x70
  3201  0000D0                     	ds	1
  3202  0000D1                     networkSendBeacon@hdr:
  3203                           	opt stack 0
  3204                           
  3205                           ; 2 bytes @ 0x71
  3206  0000D1                     	ds	1
  3207  0000D2                     TMSendFormedPacketToRFD@parent:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x72
  3211  0000D2                     	ds	1
  3212  0000D3                     ??_NetworkManagerTask:
  3213  0000D3                     
  3214                           ; 1 bytes @ 0x73
  3215  0000D3                     	ds	1
  3216  0000D4                     TMSendDataToRFD@device:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0x74
  3220  0000D4                     	ds	2
  3221  0000D6                     TMSendDataToRFD@pType:
  3222                           	opt stack 0
  3223                           
  3224                           ; 1 bytes @ 0x76
  3225  0000D6                     	ds	1
  3226  0000D7                     TMSendDataToRFD@data:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x77
  3230  0000D7                     	ds	2
  3231  0000D9                     TMSendDataToRFD@size:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x79
  3235  0000D9                     	ds	2
  3236  0000DB                     TMSendDataToRFD@isSecure:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x7B
  3240  0000DB                     	ds	1
  3241  0000DC                     NetworkUnicastData@mAddress:
  3242                           	opt stack 0
  3243  0000DC                     NetworkManagerProcessIncomingData@data:
  3244                           	opt stack 0
  3245                           
  3246                           ; 2 bytes @ 0x7C
  3247  0000DC                     	ds	2
  3248  0000DE                     NetworkUnicastData@res:
  3249                           	opt stack 0
  3250  0000DE                     NetworkManagerProcessIncomingData@size:
  3251                           	opt stack 0
  3252                           
  3253                           ; 2 bytes @ 0x7E
  3254  0000DE                     	ds	1
  3255  0000DF                     MiApp_UnicastAddress@src:
  3256                           	opt stack 0
  3257                           
  3258                           ; 2 bytes @ 0x7F
  3259  0000DF                     	ds	1
  3260  0000E0                     NetworkManagerProcessIncomingData@isBroadcast:
  3261                           	opt stack 0
  3262                           
  3263                           ; 1 bytes @ 0x80
  3264  0000E0                     	ds	1
  3265  0000E1                     NetworkManagerProcessIncomingData@isSecure:
  3266                           	opt stack 0
  3267                           
  3268                           ; 1 bytes @ 0x81
  3269  0000E1                     	ds	1
  3270  0000E2                     
  3271                           ; 1 bytes @ 0x82
  3272  0000E2                     	ds	1
  3273  0000E3                     ??_MiApp_MessageAvailable:
  3274                           
  3275                           ; 1 bytes @ 0x83
  3276  0000E3                     	ds	4
  3277  0000E7                     tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           postdec1	equ	0xFE5
  3284                           fsr1h	equ	0xFE2
  3285                           fsr1l	equ	0xFE1
  3286                           
  3287                           ; 1 bytes @ 0x87
  3288                           
  3289                           	psect	cstackCOMRAM
  3290  000001                     __pcstackCOMRAM:
  3291                           	opt stack 0
  3292  000001                     ?i2_MiWi_TickGet:
  3293                           	opt stack 0
  3294  000001                     ?i2_krnd:
  3295                           	opt stack 0
  3296  000001                     i2DelayUS@delay:
  3297                           	opt stack 0
  3298                           
  3299                           ; 4 bytes @ 0x0
  3300  000001                     	ds	1
  3301  000002                     i2SPIPut@v:
  3302                           	opt stack 0
  3303                           
  3304                           ; 1 bytes @ 0x1
  3305  000002                     	ds	1
  3306  000003                     i2RegisterRead@address:
  3307                           	opt stack 0
  3308  000003                     i2WriteFIFO@Data:
  3309                           	opt stack 0
  3310  000003                     i2RegisterSet@setting:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x2
  3314  000003                     	ds	1
  3315  000004                     i2RegisterRead@value:
  3316                           	opt stack 0
  3317  000004                     i2WriteFIFO@IRQ1select:
  3318                           	opt stack 0
  3319                           
  3320                           ; 1 bytes @ 0x3
  3321  000004                     	ds	1
  3322  000005                     ??i2_krnd:
  3323  000005                     i2RegisterSet@IRQ1select:
  3324                           	opt stack 0
  3325  000005                     i2RegisterRead@IRQ1select:
  3326                           	opt stack 0
  3327  000005                     i2DelayUS@i:
  3328                           	opt stack 0
  3329  000005                     i2MiWi_TickGet@t1ext:
  3330                           	opt stack 0
  3331                           
  3332                           ; 4 bytes @ 0x4
  3333  000005                     	ds	1
  3334  000006                     i2SetRFMode@mode:
  3335                           	opt stack 0
  3336                           
  3337                           ; 1 bytes @ 0x5
  3338  000006                     	ds	3
  3339  000009                     i2DelayMs@ms:
  3340                           	opt stack 0
  3341  000009                     i2MiWi_TickGet@tmrval:
  3342                           	opt stack 0
  3343  000009                     i2krnd@t:
  3344                           	opt stack 0
  3345                           
  3346                           ; 4 bytes @ 0x8
  3347  000009                     	ds	4
  3348  00000D                     ??i2_DelayMs:
  3349  00000D                     ?i2_MiWi_TickGetMs:
  3350                           	opt stack 0
  3351                           
  3352                           ; 4 bytes @ 0xC
  3353  00000D                     	ds	4
  3354  000011                     i2MiWi_TickGetMs@tnow:
  3355                           	opt stack 0
  3356                           
  3357                           ; 4 bytes @ 0x10
  3358  000011                     	ds	4
  3359  000015                     i2TxPacket@CCA:
  3360                           	opt stack 0
  3361                           
  3362                           ; 1 bytes @ 0x14
  3363  000015                     	ds	1
  3364  000016                     ??i2_TxPacket:
  3365                           
  3366                           ; 1 bytes @ 0x15
  3367  000016                     	ds	4
  3368  00001A                     i2TxPacket@TxPacketLen:
  3369                           	opt stack 0
  3370                           
  3371                           ; 1 bytes @ 0x19
  3372  00001A                     	ds	1
  3373  00001B                     i2TxPacket@status:
  3374                           	opt stack 0
  3375                           
  3376                           ; 1 bytes @ 0x1A
  3377  00001B                     	ds	1
  3378  00001C                     i2TxPacket@t1:
  3379                           	opt stack 0
  3380                           
  3381                           ; 4 bytes @ 0x1B
  3382  00001C                     	ds	4
  3383  000020                     i2TxPacket@t2:
  3384                           	opt stack 0
  3385                           
  3386                           ; 4 bytes @ 0x1F
  3387  000020                     	ds	4
  3388  000024                     i2TxPacket@delay:
  3389                           	opt stack 0
  3390                           
  3391                           ; 2 bytes @ 0x23
  3392  000024                     	ds	2
  3393  000026                     i2TxPacket@reTry:
  3394                           	opt stack 0
  3395                           
  3396                           ; 1 bytes @ 0x25
  3397  000026                     	ds	1
  3398  000027                     i2TxPacket@allowedTxFailure:
  3399                           	opt stack 0
  3400                           
  3401                           ; 1 bytes @ 0x26
  3402  000027                     	ds	1
  3403  000028                     i2TxPacket@j:
  3404                           	opt stack 0
  3405                           
  3406                           ; 2 bytes @ 0x27
  3407  000028                     	ds	2
  3408  00002A                     i2TxPacket@rssival:
  3409                           	opt stack 0
  3410                           
  3411                           ; 1 bytes @ 0x29
  3412  00002A                     	ds	1
  3413  00002B                     i2TxPacket@i:
  3414                           	opt stack 0
  3415                           
  3416                           ; 1 bytes @ 0x2A
  3417  00002B                     	ds	1
  3418  00002C                     ??_HighISR:
  3419                           
  3420                           ; 1 bytes @ 0x2B
  3421  00002C                     	ds	10
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           postdec1	equ	0xFE5
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           
  3432 ;;
  3433 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3434 ;;
  3435 ;; *************** function _main *****************
  3436 ;; Defined at:
  3437 ;;		line 29 in file "../src/mainRFD.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  addr            2   28[BANK2 ] struct addr_t_def
  3442 ;;  src             2   26[BANK2 ] struct addr_t_def
  3443 ;;  src1            2   21[BANK2 ] struct addr_t_def
  3444 ;;  pMemberOfNet    1   25[BANK2 ] unsigned char 
  3445 ;;  counter         1   24[BANK2 ] unsigned char 
  3446 ;;  pButtonPress    1   23[BANK2 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2  386[None  ] int 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : F/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3459 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3460 ;;Total ram usage:        9 bytes
  3461 ;; Hardware stack levels required when called:   18
  3462 ;; This function calls:
  3463 ;;		_ButtonTask
  3464 ;;		_HardwareInit
  3465 ;;		_InitSymbolTimer
  3466 ;;		_LCDUpdate
  3467 ;;		_LEDCommand
  3468 ;;		_LEDManagerTask
  3469 ;;		_MiApp_DiscardMessage
  3470 ;;		_MiApp_EstablishConnection
  3471 ;;		_MiApp_GetParentAddress
  3472 ;;		_MiApp_IsMemberOfNetwork
  3473 ;;		_MiApp_MessageAvailable
  3474 ;;		_MiApp_ProtocolInit
  3475 ;;		_MiApp_SearchConnection
  3476 ;;		_MiApp_SetAddressPan
  3477 ;;		_MiApp_UnicastAddress
  3478 ;;		_Read_MAC_Address
  3479 ;;		_isButtonPressed
  3480 ;;		_memcmp
  3481 ;;		_memset
  3482 ;;		_sprintf
  3483 ;; This function is called by:
  3484 ;;		Startup code after reset
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text0
  3489  00287A                     __ptext0:
  3490                           	opt stack 0
  3491  00287A                     _main:
  3492                           	opt stack 13
  3493                           
  3494                           ;mainRFD.c: 31: addr_t src;
  3495                           ;mainRFD.c: 32: addr_t src1;
  3496                           ;mainRFD.c: 33: bool pButtonPressed=0;
  3497                           
  3498                           ;incstack = 0
  3499  00287A  0102               	movlb	2	; () banked
  3500  00287C  6B7A               	clrf	main@pButtonPressed& (0+255),b
  3501                           
  3502                           ;mainRFD.c: 34: uint8_t counter=0;
  3503  00287E  6B7B               	clrf	main@counter& (0+255),b
  3504                           
  3505                           ;mainRFD.c: 35: bool pMemberOfNetwork=0;
  3506  002880  6B7C               	clrf	main@pMemberOfNetwork& (0+255),b
  3507                           
  3508                           ; BSR set to: 2
  3509                           ;mainRFD.c: 38: myDeviceType=DeviceRFD;
  3510  002882  0E01               	movlw	1
  3511  002884  0101               	movlb	1	; () banked
  3512  002886  6FFC               	movwf	_myDeviceType& (0+255),b
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;mainRFD.c: 40: HardwareInit();
  3516  002888  ECB6  F02C         	call	_HardwareInit	;wreg free
  3517                           
  3518                           ;mainRFD.c: 41: InitSymbolTimer();
  3519  00288C  EC94  F03A         	call	_InitSymbolTimer	;wreg free
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;mainRFD.c: 45: currentChannel = 25;
  3523  002890  EC73  F036         	call	_Read_MAC_Address	;wreg free
  3524  002894  C07F  F1E8         	movff	?_Read_MAC_Address,_myAddr
  3525  002898  C080  F1E9         	movff	?_Read_MAC_Address+1,_myAddr+1
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;mainRFD.c: 46: MiApp_SetAddressPan(myAddr.bytes, 0x5534);
  3529  00289C  0EE8               	movlw	low _myAddr
  3530  00289E  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
  3531  0028A0  0E01               	movlw	high _myAddr
  3532  0028A2  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
  3533  0028A4  0E55               	movlw	85
  3534  0028A6  6F86               	movwf	(MiApp_SetAddressPan@panid+1)& (0+255),b
  3535  0028A8  0E34               	movlw	52
  3536  0028AA  6F85               	movwf	MiApp_SetAddressPan@panid& (0+255),b
  3537  0028AC  EC4C  F036         	call	_MiApp_SetAddressPan	;wreg free
  3538                           
  3539                           ;mainRFD.c: 47: MiApp_ProtocolInit(0);
  3540  0028B0  ECA7  F034         	call	_MiApp_ProtocolInit
  3541                           
  3542                           ;mainRFD.c: 49: LATCbits.LATC2 = 0;
  3543  0028B4  948B               	bcf	3979,2,c	;volatile
  3544                           
  3545                           ;mainRFD.c: 50: LATAbits.LATA6 = 0;
  3546  0028B6  9C89               	bcf	3977,6,c	;volatile
  3547                           
  3548                           ;mainRFD.c: 51: LATAbits.LATA7 = 0;
  3549  0028B8  9E89               	bcf	3977,7,c	;volatile
  3550                           
  3551                           ;mainRFD.c: 52: sprintf(&LCDText[0],"a:%04X p:FFFF",*(uint16_t*)(&myAddr)); LCDUpdate();
  3552  0028BA  0EAC               	movlw	low _LCDText
  3553  0028BC  0100               	movlb	0	; () banked
  3554  0028BE  6F7A               	movwf	sprintf@sp& (0+255),b
  3555  0028C0  0E03               	movlw	high _LCDText
  3556  0028C2  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3557  0028C4  0ECB               	movlw	low STR_1
  3558  0028C6  6F7C               	movwf	sprintf@f& (0+255),b
  3559  0028C8  0EFF               	movlw	high STR_1
  3560  0028CA  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3561  0028CC  C1E8  F07E         	movff	_myAddr,?_sprintf+4
  3562  0028D0  C1E9  F07F         	movff	_myAddr+1,?_sprintf+5
  3563  0028D4  EC4D  F00F         	call	_sprintf	;wreg free
  3564                           
  3565                           ; BSR set to: 0
  3566  0028D8  EC5B  F02C         	call	_LCDUpdate	;wreg free
  3567  0028DC                     l18990:
  3568  0028DC  0101               	movlb	1	; () banked
  3569  0028DE  6BAA               	clrf	MiApp_SearchConnection@ChannelMap& (0+255),b
  3570  0028E0  6BAB               	clrf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  3571  0028E2  6BAC               	clrf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  3572  0028E4  0E1E               	movlw	30
  3573  0028E6  6FAD               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  3574  0028E8  0E0E               	movlw	14
  3575  0028EA  ECC1  F024         	call	_MiApp_SearchConnection
  3576  0028EE  0AFF               	xorlw	255
  3577  0028F0  E0F5               	bz	l18990
  3578                           
  3579                           ; BSR set to: 2
  3580                           ;mainRFD.c: 62: MiApp_EstablishConnection(0,0);
  3581  0028F2  0E00               	movlw	0
  3582  0028F4  0100               	movlb	0	; () banked
  3583  0028F6  6B9A               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3584  0028F8  EC5F  F02E         	call	_MiApp_EstablishConnection
  3585  0028FC                     l18994:
  3586                           
  3587                           ;mainRFD.c: 65: {
  3588                           ;mainRFD.c: 66: ButtonTask();
  3589  0028FC  ECBE  F033         	call	_ButtonTask	;wreg free
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;mainRFD.c: 67: LEDManagerTask();
  3593  002900  EC6A  F009         	call	_LEDManagerTask	;wreg free
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;mainRFD.c: 69: if(MiApp_MessageAvailable()==1)
  3597  002904  ECA2  F028         	call	_MiApp_MessageAvailable	;wreg free
  3598  002908  06E8               	decf	wreg,f,c
  3599  00290A  E127               	bnz	l19008
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;mainRFD.c: 70: {
  3603                           ;mainRFD.c: 71: sprintf(&LCDText[17],"i:%04X=%02X       ",*((uint16_t*)(rxMessage.Source
      +                          Address)),rxMessage.Payload[1]); LCDUpdate();
  3604  00290C  0EBD               	movlw	low (_LCDText+17)
  3605  00290E  0100               	movlb	0	; () banked
  3606  002910  6F7A               	movwf	sprintf@sp& (0+255),b
  3607  002912  0E03               	movlw	high (_LCDText+17)
  3608  002914  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3609  002916  0E95               	movlw	low STR_2
  3610  002918  6F7C               	movwf	sprintf@f& (0+255),b
  3611  00291A  0EFF               	movlw	high STR_2
  3612  00291C  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3613  00291E  C242  FFD9         	movff	_rxMessage+3,fsr2l
  3614  002922  C243  FFDA         	movff	_rxMessage+4,fsr2h
  3615  002926  CFDE F07E          	movff	postinc2,?_sprintf+4
  3616  00292A  CFDD F07F          	movff	postdec2,?_sprintf+5
  3617  00292E  0102               	movlb	2	; () banked
  3618  002930  EE20 F001          	lfsr	2,1
  3619  002934  5144               	movf	(_rxMessage+5)& (0+255),w,b
  3620  002936  26D9               	addwf	fsr2l,f,c
  3621  002938  5145               	movf	(_rxMessage+6)& (0+255),w,b
  3622  00293A  22DA               	addwfc	fsr2h,f,c
  3623  00293C  50DF               	movf	indf2,w,c
  3624  00293E  0100               	movlb	0	; () banked
  3625  002940  6F80               	movwf	(?_sprintf+6)& (0+255),b
  3626  002942  6B81               	clrf	(?_sprintf+7)& (0+255),b
  3627  002944  EC4D  F00F         	call	_sprintf	;wreg free
  3628                           
  3629                           ; BSR set to: 0
  3630  002948  EC5B  F02C         	call	_LCDUpdate	;wreg free
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;mainRFD.c: 72: LEDCommand(LEDGreen,lCMD_Toggle);
  3634  00294C  0E04               	movlw	4
  3635  00294E  6F73               	movwf	LEDCommand@cmd& (0+255),b
  3636  002950  0E00               	movlw	0
  3637  002952  ECA1  F037         	call	_LEDCommand
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;mainRFD.c: 74: MiApp_DiscardMessage();
  3641  002956  EC23  F03B         	call	_MiApp_DiscardMessage	;wreg free
  3642  00295A                     l19008:
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;mainRFD.c: 75: }
  3646                           ;mainRFD.c: 77: if(isButtonPressed(0)==1)
  3647  00295A  0E00               	movlw	0
  3648  00295C  EC81  F039         	call	_isButtonPressed
  3649  002960  06E8               	decf	wreg,f,c
  3650  002962  E158               	bnz	l392
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;mainRFD.c: 78: {
  3654                           ;mainRFD.c: 79: if(pButtonPressed==0)
  3655  002964  0102               	movlb	2	; () banked
  3656  002966  517A               	movf	main@pButtonPressed& (0+255),w,b
  3657  002968  E157               	bnz	l19042
  3658                           
  3659                           ; BSR set to: 2
  3660                           ;mainRFD.c: 80: {
  3661                           ;mainRFD.c: 81: pButtonPressed=1;
  3662  00296A  0E01               	movlw	1
  3663  00296C  6F7A               	movwf	main@pButtonPressed& (0+255),b
  3664                           
  3665                           ; BSR set to: 2
  3666                           ;mainRFD.c: 82: if(MiApp_IsMemberOfNetwork()==1)
  3667  00296E  EC36  F03B         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3668  002972  06E8               	decf	wreg,f,c
  3669  002974  E140               	bnz	l19038
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;mainRFD.c: 83: {
  3673                           ;mainRFD.c: 84: addr_t addr={0};
  3674  002976  C231  F27F         	movff	main@F8333,main@addr
  3675  00297A  C232  F280         	movff	main@F8333+1,main@addr+1
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;mainRFD.c: 85: memset(addr.bytes,0x00,sizeof(addr));
  3679  00297E  0E7F               	movlw	low main@addr
  3680  002980  6F73               	movwf	memset@p1& (0+255),b
  3681  002982  0E02               	movlw	high main@addr
  3682  002984  6F74               	movwf	(memset@p1+1)& (0+255),b
  3683  002986  6B76               	clrf	(memset@c+1)& (0+255),b
  3684  002988  6B75               	clrf	memset@c& (0+255),b
  3685  00298A  6B78               	clrf	(memset@n+1)& (0+255),b
  3686  00298C  0E02               	movlw	2
  3687  00298E  6F77               	movwf	memset@n& (0+255),b
  3688  002990  EC2F  F039         	call	_memset	;wreg free
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;mainRFD.c: 88: {TxData = 0;};
  3692  002994  0101               	movlb	1	; () banked
  3693  002996  6BD2               	clrf	_TxData& (0+255),b
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;mainRFD.c: 89: TxBuffer[TxData++] = mUserDataType;
  3697  002998  0E88               	movlw	low _TxBuffer
  3698  00299A  25D2               	addwf	_TxData& (0+255),w,b
  3699  00299C  6ED9               	movwf	fsr2l,c
  3700  00299E  6ADA               	clrf	fsr2h,c
  3701  0029A0  0E07               	movlw	high _TxBuffer
  3702  0029A2  22DA               	addwfc	fsr2h,f,c
  3703  0029A4  0E0A               	movlw	10
  3704  0029A6  6EDF               	movwf	indf2,c
  3705                           
  3706                           ; BSR set to: 1
  3707  0029A8  2BD2               	incf	_TxData& (0+255),f,b
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;mainRFD.c: 90: TxBuffer[TxData++] = counter;
  3711  0029AA  0E88               	movlw	low _TxBuffer
  3712  0029AC  25D2               	addwf	_TxData& (0+255),w,b
  3713  0029AE  6ED9               	movwf	fsr2l,c
  3714  0029B0  6ADA               	clrf	fsr2h,c
  3715  0029B2  0E07               	movlw	high _TxBuffer
  3716  0029B4  22DA               	addwfc	fsr2h,f,c
  3717  0029B6  C27B  FFDF         	movff	main@counter,indf2
  3718                           
  3719                           ; BSR set to: 1
  3720  0029BA  2BD2               	incf	_TxData& (0+255),f,b
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;mainRFD.c: 91: if(MiApp_UnicastAddress(addr.bytes, (0), 0)==1)
  3724  0029BC  0E7F               	movlw	low main@addr
  3725  0029BE  6F47               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  3726  0029C0  0E02               	movlw	high main@addr
  3727  0029C2  6F48               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  3728  0029C4  6B49               	clrf	MiApp_UnicastAddress@Origin& (0+255),b
  3729  0029C6  6B4A               	clrf	(MiApp_UnicastAddress@Origin+1)& (0+255),b
  3730  0029C8  6B4B               	clrf	MiApp_UnicastAddress@SecEn& (0+255),b
  3731  0029CA  ECFB  F037         	call	_MiApp_UnicastAddress	;wreg free
  3732  0029CE  06E8               	decf	wreg,f,c
  3733  0029D0  E123               	bnz	l19042
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;mainRFD.c: 92: {
  3737                           ;mainRFD.c: 95: sprintf(&LCDText[17],"o:%02X           ",counter++); LCDUpdate();
  3738  0029D2  0EBD               	movlw	low (_LCDText+17)
  3739  0029D4  6F7A               	movwf	sprintf@sp& (0+255),b
  3740  0029D6  0E03               	movlw	high (_LCDText+17)
  3741  0029D8  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3742  0029DA  0EA8               	movlw	low STR_3
  3743  0029DC  6F7C               	movwf	sprintf@f& (0+255),b
  3744  0029DE  0EFF               	movlw	high STR_3
  3745  0029E0  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3746  0029E2  C27B  F07E         	movff	main@counter,?_sprintf+4
  3747  0029E6  6B7F               	clrf	(?_sprintf+5)& (0+255),b
  3748  0029E8  EC4D  F00F         	call	_sprintf	;wreg free
  3749                           
  3750                           ; BSR set to: 0
  3751  0029EC  0102               	movlb	2	; () banked
  3752  0029EE  2B7B               	incf	main@counter& (0+255),f,b
  3753  0029F0                     l19036:
  3754  0029F0  EC5B  F02C         	call	_LCDUpdate	;wreg free
  3755  0029F4  D011               	goto	l19042
  3756  0029F6                     l19038:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;mainRFD.c: 98: {
  3760                           ;mainRFD.c: 99: sprintf(&LCDText[17],"%s","No Network"); LCDUpdate();
  3761  0029F6  0EBD               	movlw	low (_LCDText+17)
  3762  0029F8  6F7A               	movwf	sprintf@sp& (0+255),b
  3763  0029FA  0E03               	movlw	high (_LCDText+17)
  3764  0029FC  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3765  0029FE  0EF4               	movlw	low (STR_7+2)
  3766  002A00  6F7C               	movwf	sprintf@f& (0+255),b
  3767  002A02  0EFF               	movlw	high (STR_7+2)
  3768  002A04  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3769  002A06  0ED9               	movlw	low STR_5
  3770  002A08  6F7E               	movwf	(?_sprintf+4)& (0+255),b
  3771  002A0A  0EFF               	movlw	high STR_5
  3772  002A0C  6F7F               	movwf	(?_sprintf+5)& (0+255),b
  3773  002A0E  EC4D  F00F         	call	_sprintf	;wreg free
  3774  002A12  D7EE               	goto	l19036
  3775  002A14                     l392:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;mainRFD.c: 103: {
  3779                           ;mainRFD.c: 104: pButtonPressed=0;
  3780  002A14  0102               	movlb	2	; () banked
  3781  002A16  6B7A               	clrf	main@pButtonPressed& (0+255),b
  3782  002A18                     l19042:
  3783                           
  3784                           ;mainRFD.c: 105: }
  3785                           ;mainRFD.c: 106: if(MiApp_IsMemberOfNetwork()==1)
  3786  002A18  EC36  F03B         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3787  002A1C  06E8               	decf	wreg,f,c
  3788  002A1E  E136               	bnz	l19058
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;mainRFD.c: 107: {
  3792                           ;mainRFD.c: 108: src1=MiApp_GetParentAddress();
  3793  002A20  ECB9  F03A         	call	_MiApp_GetParentAddress	;wreg free
  3794  002A24  C075  F278         	movff	?_MiApp_GetParentAddress,main@src1
  3795  002A28  C076  F279         	movff	?_MiApp_GetParentAddress+1,main@src1+1
  3796                           
  3797                           ;mainRFD.c: 109: if( (pMemberOfNetwork==0) || (memcmp(src.bytes,src1.bytes,2)!=0))
  3798  002A2C  0102               	movlb	2	; () banked
  3799  002A2E  517C               	movf	main@pMemberOfNetwork& (0+255),w,b
  3800  002A30  E012               	bz	l19050
  3801                           
  3802                           ; BSR set to: 2
  3803  002A32  0E7D               	movlw	low main@src
  3804  002A34  0100               	movlb	0	; () banked
  3805  002A36  6F73               	movwf	memcmp@s1& (0+255),b
  3806  002A38  0E02               	movlw	high main@src
  3807  002A3A  6F74               	movwf	(memcmp@s1+1)& (0+255),b
  3808  002A3C  0E78               	movlw	low main@src1
  3809  002A3E  6F75               	movwf	memcmp@s2& (0+255),b
  3810  002A40  0E02               	movlw	high main@src1
  3811  002A42  6F76               	movwf	(memcmp@s2+1)& (0+255),b
  3812  002A44  6B78               	clrf	(memcmp@n+1)& (0+255),b
  3813  002A46  0E02               	movlw	2
  3814  002A48  6F77               	movwf	memcmp@n& (0+255),b
  3815  002A4A  ECFE  F034         	call	_memcmp	;wreg free
  3816  002A4E  5173               	movf	?_memcmp& (0+255),w,b
  3817  002A50  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
  3818  002A52  E101 D753          	bz	l18994
  3819  002A56                     l19050:
  3820                           
  3821                           ;mainRFD.c: 110: {
  3822                           ;mainRFD.c: 111: pMemberOfNetwork=1;
  3823  002A56  0E01               	movlw	1
  3824  002A58  0102               	movlb	2	; () banked
  3825  002A5A  6F7C               	movwf	main@pMemberOfNetwork& (0+255),b
  3826                           
  3827                           ; BSR set to: 2
  3828                           ;mainRFD.c: 112: src=MiApp_GetParentAddress();
  3829  002A5C  ECB9  F03A         	call	_MiApp_GetParentAddress	;wreg free
  3830  002A60  C075  F27D         	movff	?_MiApp_GetParentAddress,main@src
  3831  002A64  C076  F27E         	movff	?_MiApp_GetParentAddress+1,main@src+1
  3832                           
  3833                           ;mainRFD.c: 113: sprintf(&LCDText[7],"p:%04X",*(uint16_t*)(&src)); LCDUpdate();
  3834  002A68  0EB3               	movlw	low (_LCDText+7)
  3835  002A6A  0100               	movlb	0	; () banked
  3836  002A6C  6F7A               	movwf	sprintf@sp& (0+255),b
  3837  002A6E  0E03               	movlw	high (_LCDText+7)
  3838  002A70  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3839  002A72  0EEB               	movlw	low STR_6
  3840  002A74  6F7C               	movwf	sprintf@f& (0+255),b
  3841  002A76  0EFF               	movlw	high STR_6
  3842  002A78  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3843  002A7A  C27D  F07E         	movff	main@src,?_sprintf+4
  3844  002A7E  C27E  F07F         	movff	main@src+1,?_sprintf+5
  3845  002A82  EC4D  F00F         	call	_sprintf	;wreg free
  3846  002A86                     l19056:
  3847                           
  3848                           ; BSR set to: 0
  3849  002A86  EC5B  F02C         	call	_LCDUpdate	;wreg free
  3850  002A8A  D738               	goto	l18994
  3851  002A8C                     l19058:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;mainRFD.c: 116: {
  3855                           ;mainRFD.c: 117: if(pMemberOfNetwork==1)
  3856  002A8C  0102               	movlb	2	; () banked
  3857  002A8E  057C               	decf	main@pMemberOfNetwork& (0+255),w,b
  3858  002A90  E001 D734          	bnz	l18994
  3859                           
  3860                           ; BSR set to: 2
  3861                           ;mainRFD.c: 118: {
  3862                           ;mainRFD.c: 119: pMemberOfNetwork=0;
  3863  002A94  6B7C               	clrf	main@pMemberOfNetwork& (0+255),b
  3864                           
  3865                           ; BSR set to: 2
  3866                           ;mainRFD.c: 120: src=MiApp_GetParentAddress();
  3867  002A96  ECB9  F03A         	call	_MiApp_GetParentAddress	;wreg free
  3868  002A9A  C075  F27D         	movff	?_MiApp_GetParentAddress,main@src
  3869  002A9E  C076  F27E         	movff	?_MiApp_GetParentAddress+1,main@src+1
  3870                           
  3871                           ;mainRFD.c: 121: sprintf(&LCDText[7],"p:%s","FFFF"); LCDUpdate();
  3872  002AA2  0EB3               	movlw	low (_LCDText+7)
  3873  002AA4  0100               	movlb	0	; () banked
  3874  002AA6  6F7A               	movwf	sprintf@sp& (0+255),b
  3875  002AA8  0E03               	movlw	high (_LCDText+7)
  3876  002AAA  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3877  002AAC  0EF2               	movlw	low STR_7
  3878  002AAE  6F7C               	movwf	sprintf@f& (0+255),b
  3879  002AB0  0EFF               	movlw	high STR_7
  3880  002AB2  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3881  002AB4  0ED4               	movlw	low (STR_1+9)
  3882  002AB6  6F7E               	movwf	(?_sprintf+4)& (0+255),b
  3883  002AB8  0EFF               	movlw	high (STR_1+9)
  3884  002ABA  6F7F               	movwf	(?_sprintf+5)& (0+255),b
  3885  002ABC  EC4D  F00F         	call	_sprintf	;wreg free
  3886  002AC0  D7E2               	goto	l19056
  3887  002AC2                     __end_of_main:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           indf2	equ	0xFDF
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           
  3904 ;; *************** function _sprintf *****************
  3905 ;; Defined at:
  3906 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  sp              2   26[BANK0 ] PTR unsigned char 
  3909 ;;		 -> LCDText(33), 
  3910 ;;  f               2   28[BANK0 ] PTR const unsigned char 
  3911 ;;		 -> STR_7(5), STR_6(7), STR_4(3), STR_3(18), 
  3912 ;;		 -> STR_2(19), STR_1(14), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  idx             1   38[BANK0 ] unsigned char 
  3915 ;;  tmpval          4    0        struct .
  3916 ;;  width           2   48[BANK0 ] int 
  3917 ;;  len             2   46[BANK0 ] unsigned int 
  3918 ;;  cp              2   44[BANK0 ] PTR const unsigned char 
  3919 ;;		 -> STR_9(7), STR_8(5), STR_5(11), 
  3920 ;;  val             2   40[BANK0 ] unsigned int 
  3921 ;;  c               1   50[BANK0 ] char 
  3922 ;;  ap              1   43[BANK0 ] PTR void [1]
  3923 ;;		 -> ?_sprintf(2), 
  3924 ;;  prec            1   42[BANK0 ] char 
  3925 ;;  flag            1   39[BANK0 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  2   26[BANK0 ] int 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : F/0
  3932 ;;		On exit  : F/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3935 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;Total ram usage:       25 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    6
  3942 ;; This function calls:
  3943 ;;		___lwdiv
  3944 ;;		___wmul
  3945 ;;		_isdigit
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text1
  3952  001E9A                     __ptext1:
  3953                           	opt stack 0
  3954  001E9A                     _sprintf:
  3955                           	opt stack 24
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;doprnt.c: 494: va_list ap;
  3959                           ;doprnt.c: 499: signed char c;
  3960                           ;doprnt.c: 501: int width;
  3961                           ;doprnt.c: 506: signed char prec;
  3962                           ;doprnt.c: 508: unsigned char flag;
  3963                           ;doprnt.c: 523: union {
  3964                           ;doprnt.c: 524: unsigned long vd;
  3965                           ;doprnt.c: 525: double integ;
  3966                           ;doprnt.c: 526: } tmpval;
  3967                           ;doprnt.c: 528: unsigned int val;
  3968                           ;doprnt.c: 529: unsigned len;
  3969                           ;doprnt.c: 530: const char * cp;
  3970                           ;doprnt.c: 533: *ap = __va_start();
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;incstack = 0
  3974  001E9A  0E7E               	movlw	low (?_sprintf+4)
  3975  001E9C  6F8B               	movwf	sprintf@ap& (0+255),b
  3976                           
  3977                           ;doprnt.c: 536: while(c = *f++) {
  3978  001E9E  D13E               	goto	l18874
  3979  001EA0                     l18766:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;doprnt.c: 538: if(c != '%')
  3983  001EA0  0E25               	movlw	37
  3984  001EA2  1992               	xorwf	sprintf@c& (0+255),w,b
  3985  001EA4  E009               	bz	l990
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;doprnt.c: 540: {
  3989                           ;doprnt.c: 541: ((*sp++ = (c)));
  3990  001EA6  C07A  FFD9         	movff	sprintf@sp,fsr2l
  3991  001EAA  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  3992  001EAE  C092  FFDF         	movff	sprintf@c,indf2
  3993                           
  3994                           ; BSR set to: 0
  3995  001EB2  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  3996  001EB4  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  3997                           
  3998                           ;doprnt.c: 542: continue;
  3999  001EB6  D132               	goto	l18874
  4000  001EB8                     l990:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;doprnt.c: 543: }
  4004                           ;doprnt.c: 546: width = 0;
  4005  001EB8  6B90               	clrf	sprintf@width& (0+255),b
  4006  001EBA  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4007                           
  4008                           ;doprnt.c: 548: flag = 0;
  4009  001EBC  6B87               	clrf	sprintf@flag& (0+255),b
  4010  001EBE  D003               	goto	l18776
  4011  001EC0                     l18772:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;doprnt.c: 580: flag |= 0x04;
  4015  001EC0  8587               	bsf	sprintf@flag& (0+255),2,b
  4016                           
  4017                           ;doprnt.c: 581: f++;
  4018  001EC2  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4019  001EC4  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4020  001EC6                     l18776:
  4021                           
  4022                           ; BSR set to: 0
  4023  001EC6  C07C  FFF6         	movff	sprintf@f,tblptrl
  4024  001ECA  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4025  001ECE                     	if	0	;tblptru may be non-zero
  4026  001ECE                     	endif
  4027  001ECE                     	if	0	;tblptru may be non-zero
  4028  001ECE                     	endif
  4029  001ECE  0008               	tblrd		*
  4030  001ED0  50F5               	movf	tablat,w,c
  4031                           
  4032                           ; Switch size 1, requested type "speed"
  4033                           ; Number of cases is 1, Range of values is 48 to 48
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            4     3 (average)
  4037                           ;	Chosen strategy is simple_byte
  4038  001ED2  0A30               	xorlw	48	; case 48
  4039  001ED4  E0F5               	bz	l18772
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4043  001ED6  C07C  FFF6         	movff	sprintf@f,tblptrl
  4044  001EDA  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4045  001EDE                     	if	0	;tblptru may be non-zero
  4046  001EDE                     	endif
  4047  001EDE                     	if	0	;tblptru may be non-zero
  4048  001EDE                     	endif
  4049  001EDE  0008               	tblrd		*
  4050  001EE0  50F5               	movf	tablat,w,c
  4051  001EE2  EC01  F03A         	call	_isdigit
  4052  001EE6  E201 D085          	bnc	l18824
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;doprnt.c: 598: width = 0;
  4056  001EEA  6B90               	clrf	sprintf@width& (0+255),b
  4057  001EEC  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4058  001EEE                     l18782:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;doprnt.c: 600: width *= 10;
  4062  001EEE  C090  F073         	movff	sprintf@width,___wmul@multiplier
  4063  001EF2  C091  F074         	movff	sprintf@width+1,___wmul@multiplier+1
  4064  001EF6  6B76               	clrf	(___wmul@multiplicand+1)& (0+255),b
  4065  001EF8  0E0A               	movlw	10
  4066  001EFA  6F75               	movwf	___wmul@multiplicand& (0+255),b
  4067  001EFC  EC6E  F039         	call	___wmul	;wreg free
  4068  001F00  C073  F090         	movff	?___wmul,sprintf@width
  4069  001F04  C074  F091         	movff	?___wmul+1,sprintf@width+1
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;doprnt.c: 601: width += *f++ - '0';
  4073  001F08  0ED0               	movlw	208
  4074  001F0A  6F82               	movwf	??_sprintf& (0+255),b
  4075  001F0C  6983               	setf	(??_sprintf+1)& (0+255),b
  4076  001F0E  C07C  FFF6         	movff	sprintf@f,tblptrl
  4077  001F12  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4078  001F16                     	if	0	;tblptru may be non-zero
  4079  001F16                     	endif
  4080  001F16                     	if	0	;tblptru may be non-zero
  4081  001F16                     	endif
  4082  001F16  0008               	tblrd		*
  4083  001F18  50F5               	movf	tablat,w,c
  4084  001F1A  6F84               	movwf	(??_sprintf+2)& (0+255),b
  4085  001F1C  6B85               	clrf	(??_sprintf+3)& (0+255),b
  4086  001F1E  5182               	movf	??_sprintf& (0+255),w,b
  4087  001F20  2784               	addwf	(??_sprintf+2)& (0+255),f,b
  4088  001F22  5183               	movf	(??_sprintf+1)& (0+255),w,b
  4089  001F24  2385               	addwfc	(??_sprintf+3)& (0+255),f,b
  4090  001F26  5184               	movf	(??_sprintf+2)& (0+255),w,b
  4091  001F28  2790               	addwf	sprintf@width& (0+255),f,b
  4092  001F2A  5185               	movf	(??_sprintf+3)& (0+255),w,b
  4093  001F2C  2391               	addwfc	(sprintf@width+1)& (0+255),f,b
  4094                           
  4095                           ; BSR set to: 0
  4096  001F2E  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4097  001F30  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4101  001F32  C07C  FFF6         	movff	sprintf@f,tblptrl
  4102  001F36  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4103  001F3A                     	if	0	;tblptru may be non-zero
  4104  001F3A                     	endif
  4105  001F3A                     	if	0	;tblptru may be non-zero
  4106  001F3A                     	endif
  4107  001F3A  0008               	tblrd		*
  4108  001F3C  50F5               	movf	tablat,w,c
  4109  001F3E  EC01  F03A         	call	_isdigit
  4110  001F42  E358               	bnc	l18824
  4111  001F44  D7D4               	goto	l18782
  4112  001F46                     l18790:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4116  001F46  518B               	movf	sprintf@ap& (0+255),w,b
  4117  001F48  6ED9               	movwf	fsr2l,c
  4118  001F4A  6ADA               	clrf	fsr2h,c
  4119  001F4C  CFDE F08C          	movff	postinc2,sprintf@cp
  4120  001F50  CFDD F08D          	movff	postdec2,sprintf@cp+1
  4121                           
  4122                           ; BSR set to: 0
  4123  001F54  0E02               	movlw	2
  4124  001F56  278B               	addwf	sprintf@ap& (0+255),f,b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;doprnt.c: 740: if(!cp)
  4128  001F58  518C               	movf	sprintf@cp& (0+255),w,b
  4129  001F5A  118D               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4130  001F5C  E104               	bnz	l18798
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;doprnt.c: 741: cp = "(null)";
  4134  001F5E  0EE4               	movlw	low STR_9
  4135  001F60  6F8C               	movwf	sprintf@cp& (0+255),b
  4136  001F62  0EFF               	movlw	high STR_9
  4137  001F64  6F8D               	movwf	(sprintf@cp+1)& (0+255),b
  4138  001F66                     l18798:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;doprnt.c: 745: len = 0;
  4142  001F66  6B8E               	clrf	sprintf@len& (0+255),b
  4143  001F68  6B8F               	clrf	(sprintf@len+1)& (0+255),b
  4144                           
  4145                           ;doprnt.c: 746: while(cp[len])
  4146  001F6A  D002               	goto	l18802
  4147  001F6C                     l18800:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;doprnt.c: 747: len++;
  4151  001F6C  4B8E               	infsnz	sprintf@len& (0+255),f,b
  4152  001F6E  2B8F               	incf	(sprintf@len+1)& (0+255),f,b
  4153  001F70                     l18802:
  4154                           
  4155                           ; BSR set to: 0
  4156  001F70  518E               	movf	sprintf@len& (0+255),w,b
  4157  001F72  258C               	addwf	sprintf@cp& (0+255),w,b
  4158  001F74  6F82               	movwf	??_sprintf& (0+255),b
  4159  001F76  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4160  001F78  218D               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4161  001F7A  6F83               	movwf	(??_sprintf+1)& (0+255),b
  4162  001F7C  C082  FFF6         	movff	??_sprintf,tblptrl
  4163  001F80  C083  FFF7         	movff	??_sprintf+1,tblptrh
  4164  001F84                     	if	0	;tblptru may be non-zero
  4165  001F84                     	endif
  4166  001F84                     	if	0	;tblptru may be non-zero
  4167  001F84                     	endif
  4168  001F84  0008               	tblrd		*
  4169  001F86  50F5               	movf	tablat,w,c
  4170  001F88  E1F1               	bnz	l18800
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;doprnt.c: 757: if(width > len)
  4174  001F8A  5190               	movf	sprintf@width& (0+255),w,b
  4175  001F8C  5D8E               	subwf	sprintf@len& (0+255),w,b
  4176  001F8E  5191               	movf	(sprintf@width+1)& (0+255),w,b
  4177  001F90  598F               	subwfb	(sprintf@len+1)& (0+255),w,b
  4178  001F92  E205               	bc	l1011
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;doprnt.c: 758: width -= len;
  4182  001F94  518E               	movf	sprintf@len& (0+255),w,b
  4183  001F96  5F90               	subwf	sprintf@width& (0+255),f,b
  4184  001F98  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4185  001F9A  5B91               	subwfb	(sprintf@width+1)& (0+255),f,b
  4186  001F9C  D00B               	goto	l18812
  4187  001F9E                     l1011:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;doprnt.c: 759: else
  4191                           ;doprnt.c: 760: width = 0;
  4192  001F9E  6B90               	clrf	sprintf@width& (0+255),b
  4193  001FA0  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4194  001FA2  D008               	goto	l18812
  4195  001FA4                     l18808:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4199  001FA4  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4200  001FA8  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4201  001FAC  0E20               	movlw	32
  4202  001FAE  6EDF               	movwf	indf2,c
  4203                           
  4204                           ; BSR set to: 0
  4205  001FB0  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4206  001FB2  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4207  001FB4                     l18812:
  4208                           
  4209                           ; BSR set to: 0
  4210  001FB4  0790               	decf	sprintf@width& (0+255),f,b
  4211  001FB6  A0D8               	btfss	status,0,c
  4212  001FB8  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4213  001FBA  2990               	incf	sprintf@width& (0+255),w,b
  4214  001FBC  E1F3               	bnz	l18808
  4215  001FBE  2991               	incf	(sprintf@width+1)& (0+255),w,b
  4216  001FC0  E010               	bz	l18820
  4217  001FC2  D7F0               	goto	l18808
  4218  001FC4                     l18814:
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4222  001FC4  C08C  FFF6         	movff	sprintf@cp,tblptrl
  4223  001FC8  C08D  FFF7         	movff	sprintf@cp+1,tblptrh
  4224  001FCC                     	if	0	;tblptru may be non-zero
  4225  001FCC                     	endif
  4226  001FCC                     	if	0	;tblptru may be non-zero
  4227  001FCC                     	endif
  4228  001FCC  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4229  001FD0  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4230  001FD4  0008               	tblrd		*
  4231  001FD6  CFF5 FFDF          	movff	tablat,indf2
  4232                           
  4233                           ; BSR set to: 0
  4234  001FDA  4B8C               	infsnz	sprintf@cp& (0+255),f,b
  4235  001FDC  2B8D               	incf	(sprintf@cp+1)& (0+255),f,b
  4236                           
  4237                           ; BSR set to: 0
  4238  001FDE  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4239  001FE0  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4240  001FE2                     l18820:
  4241                           
  4242                           ; BSR set to: 0
  4243  001FE2  078E               	decf	sprintf@len& (0+255),f,b
  4244  001FE4  A0D8               	btfss	status,0,c
  4245  001FE6  078F               	decf	(sprintf@len+1)& (0+255),f,b
  4246  001FE8  298E               	incf	sprintf@len& (0+255),w,b
  4247  001FEA  E1EC               	bnz	l18814
  4248  001FEC  298F               	incf	(sprintf@len+1)& (0+255),w,b
  4249  001FEE  E101 D095          	bz	l18874
  4250  001FF2  D7E8               	goto	l18814
  4251  001FF4                     l18824:
  4252                           
  4253                           ; BSR set to: 0
  4254  001FF4  C07C  FFF6         	movff	sprintf@f,tblptrl
  4255  001FF8  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4256  001FFC  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4257  001FFE  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4258  002000                     	if	0	;tblptru may be non-zero
  4259  002000                     	endif
  4260  002000                     	if	0	;tblptru may be non-zero
  4261  002000                     	endif
  4262  002000  0008               	tblrd		*
  4263  002002  CFF5 F092          	movff	tablat,sprintf@c
  4264  002006  5192               	movf	sprintf@c& (0+255),w,b
  4265                           
  4266                           ; Switch size 1, requested type "speed"
  4267                           ; Number of cases is 4, Range of values is 0 to 120
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           13     7 (average)
  4271                           ;	Chosen strategy is simple_byte
  4272  002008  E101 D094          	bz	l18876
  4273  00200C  0A58               	xorlw	88	; case 88
  4274  00200E  E005               	bz	l18826
  4275  002010  0A2B               	xorlw	43	; case 115
  4276  002012  E099               	bz	l18790
  4277  002014  0A0B               	xorlw	11	; case 120
  4278  002016  E001 D081          	bnz	l18874
  4279  00201A                     l18826:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;doprnt.c: 1273: {
  4283                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4284  00201A  518B               	movf	sprintf@ap& (0+255),w,b
  4285  00201C  6ED9               	movwf	fsr2l,c
  4286  00201E  6ADA               	clrf	fsr2h,c
  4287  002020  CFDE F088          	movff	postinc2,sprintf@val
  4288  002024  CFDD F089          	movff	postdec2,sprintf@val+1
  4289                           
  4290                           ; BSR set to: 0
  4291  002028  0E02               	movlw	2
  4292  00202A  278B               	addwf	sprintf@ap& (0+255),f,b
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;doprnt.c: 1287: }
  4296                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4297  00202C  0E01               	movlw	1
  4298  00202E  6F92               	movwf	sprintf@c& (0+255),b
  4299  002030                     l18836:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4303  002030  5192               	movf	sprintf@c& (0+255),w,b
  4304  002032  0D02               	mullw	2
  4305  002034  0E7D               	movlw	low _hexpowers
  4306  002036  24F3               	addwf	prodl,w,c
  4307  002038  6EF6               	movwf	tblptrl,c
  4308  00203A  0EFF               	movlw	high _hexpowers
  4309  00203C  20F4               	addwfc	prodh,w,c
  4310  00203E  6EF7               	movwf	tblptrh,c
  4311  002040                     	if	0	;There are less than 3 active tblptr bytes
  4312  002040                     	endif
  4313  002040  0009               	tblrd		*+
  4314  002042  50F5               	movf	tablat,w,c
  4315  002044  5D88               	subwf	sprintf@val& (0+255),w,b
  4316  002046  0009               	tblrd		*+
  4317  002048  50F5               	movf	tablat,w,c
  4318  00204A  5989               	subwfb	(sprintf@val+1)& (0+255),w,b
  4319  00204C  E304               	bnc	l18844
  4320                           
  4321                           ; BSR set to: 0
  4322  00204E  2B92               	incf	sprintf@c& (0+255),f,b
  4323                           
  4324                           ; BSR set to: 0
  4325  002050  0E04               	movlw	4
  4326  002052  1992               	xorwf	sprintf@c& (0+255),w,b
  4327  002054  E1ED               	bnz	l18836
  4328  002056                     l18844:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;doprnt.c: 1381: if(width > c)
  4332  002056  0E80               	movlw	128
  4333  002058  BF92               	btfsc	sprintf@c& (0+255),7,b
  4334  00205A  0E7F               	movlw	127
  4335  00205C  6F82               	movwf	??_sprintf& (0+255),b
  4336  00205E  5190               	movf	sprintf@width& (0+255),w,b
  4337  002060  5D92               	subwf	sprintf@c& (0+255),w,b
  4338  002062  5191               	movf	(sprintf@width+1)& (0+255),w,b
  4339  002064  0A80               	xorlw	128
  4340  002066  5982               	subwfb	??_sprintf& (0+255),w,b
  4341  002068  E207               	bc	l1023
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;doprnt.c: 1382: width -= c;
  4345  00206A  5192               	movf	sprintf@c& (0+255),w,b
  4346  00206C  5F90               	subwf	sprintf@width& (0+255),f,b
  4347  00206E  0E00               	movlw	0
  4348  002070  BF92               	btfsc	sprintf@c& (0+255),7,b
  4349  002072  0EFF               	movlw	255
  4350  002074  5B91               	subwfb	(sprintf@width+1)& (0+255),f,b
  4351  002076  D002               	goto	l1024
  4352  002078                     l1023:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;doprnt.c: 1383: else
  4356                           ;doprnt.c: 1384: width = 0;
  4357  002078  6B90               	clrf	sprintf@width& (0+255),b
  4358  00207A  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4359  00207C                     l1024:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;doprnt.c: 1387: if(flag & 0x04) {
  4363  00207C  A587               	btfss	sprintf@flag& (0+255),2,b
  4364  00207E  D00F               	goto	l18856
  4365  002080                     
  4366                           ; BSR set to: 0
  4367                           ;doprnt.c: 1415: if(width)
  4368  002080  5190               	movf	sprintf@width& (0+255),w,b
  4369  002082  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4370  002084  E01D               	bz	l1029
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4374  002086  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4375  00208A  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4376  00208E  0E30               	movlw	48
  4377  002090  6EDF               	movwf	indf2,c
  4378                           
  4379                           ; BSR set to: 0
  4380  002092  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4381  002094  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;doprnt.c: 1418: while(--width);
  4385  002096  0790               	decf	sprintf@width& (0+255),f,b
  4386  002098  A0D8               	btfss	status,0,c
  4387  00209A  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4388  00209C  D7F1               	goto	L14
  4389  00209E                     l18856:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;doprnt.c: 1422: {
  4393                           ;doprnt.c: 1424: if(width
  4394                           ;doprnt.c: 1428: )
  4395  00209E  5190               	movf	sprintf@width& (0+255),w,b
  4396  0020A0  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4397  0020A2  E00E               	bz	l1029
  4398  0020A4                     l18858:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4402  0020A4  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4403  0020A8  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4404  0020AC  0E20               	movlw	32
  4405  0020AE  6EDF               	movwf	indf2,c
  4406                           
  4407                           ; BSR set to: 0
  4408  0020B0  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4409  0020B2  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;doprnt.c: 1431: while(--width);
  4413  0020B4  0790               	decf	sprintf@width& (0+255),f,b
  4414  0020B6  A0D8               	btfss	status,0,c
  4415  0020B8  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4416  0020BA  5190               	movf	sprintf@width& (0+255),w,b
  4417  0020BC  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4418  0020BE  E1F2               	bnz	l18858
  4419  0020C0                     l1029:
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;doprnt.c: 1469: }
  4423                           ;doprnt.c: 1472: prec = c;
  4424  0020C0  C092  F08A         	movff	sprintf@c,sprintf@prec
  4425                           
  4426                           ;doprnt.c: 1474: while(prec--) {
  4427  0020C4  D028               	goto	l18872
  4428  0020C6                     l18864:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;doprnt.c: 1478: {
  4432                           ;doprnt.c: 1499: {
  4433                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4434  0020C6  C088  F073         	movff	sprintf@val,___lwdiv@dividend
  4435  0020CA  C089  F074         	movff	sprintf@val+1,___lwdiv@dividend+1
  4436  0020CE  518A               	movf	sprintf@prec& (0+255),w,b
  4437  0020D0  0D02               	mullw	2
  4438  0020D2  0E7D               	movlw	low _hexpowers
  4439  0020D4  24F3               	addwf	prodl,w,c
  4440  0020D6  6EF6               	movwf	tblptrl,c
  4441  0020D8  0EFF               	movlw	high _hexpowers
  4442  0020DA  20F4               	addwfc	prodh,w,c
  4443  0020DC  6EF7               	movwf	tblptrh,c
  4444  0020DE                     	if	0	;There are less than 3 active tblptr bytes
  4445  0020DE                     	endif
  4446  0020DE  0009               	tblrd		*+
  4447  0020E0  CFF5 F075          	movff	tablat,___lwdiv@divisor
  4448  0020E4  000A               	tblrd		*-
  4449  0020E6  CFF5 F076          	movff	tablat,___lwdiv@divisor+1
  4450  0020EA  EC98  F036         	call	___lwdiv	;wreg free
  4451  0020EE  5173               	movf	?___lwdiv& (0+255),w,b
  4452  0020F0  0B0F               	andlw	15
  4453  0020F2  6F86               	movwf	sprintf@idx& (0+255),b
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4457  0020F4  0EBA               	movlw	low STR_10
  4458  0020F6  2586               	addwf	sprintf@idx& (0+255),w,b
  4459  0020F8  6EF6               	movwf	tblptrl,c
  4460  0020FA  6AF7               	clrf	tblptrh,c
  4461  0020FC  0EFF               	movlw	high STR_10
  4462  0020FE  22F7               	addwfc	tblptrh,f,c
  4463  002100                     	if	0	;There are less than 3 active tblptr bytes
  4464  002100                     	endif
  4465  002100  0008               	tblrd		*
  4466  002102  CFF5 F092          	movff	tablat,sprintf@c
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;doprnt.c: 1508: }
  4470                           ;doprnt.c: 1523: }
  4471                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4472  002106  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4473  00210A  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4474  00210E  C092  FFDF         	movff	sprintf@c,indf2
  4475                           
  4476                           ; BSR set to: 0
  4477  002112  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4478  002114  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4479  002116                     l18872:
  4480                           
  4481                           ; BSR set to: 0
  4482  002116  078A               	decf	sprintf@prec& (0+255),f,b
  4483  002118  298A               	incf	sprintf@prec& (0+255),w,b
  4484  00211A  E1D5               	bnz	l18864
  4485  00211C                     l18874:
  4486                           
  4487                           ; BSR set to: 0
  4488  00211C  C07C  FFF6         	movff	sprintf@f,tblptrl
  4489  002120  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4490  002124  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4491  002126  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4492  002128                     	if	0	;tblptru may be non-zero
  4493  002128                     	endif
  4494  002128                     	if	0	;tblptru may be non-zero
  4495  002128                     	endif
  4496  002128  0008               	tblrd		*
  4497  00212A  CFF5 F092          	movff	tablat,sprintf@c
  4498  00212E  5192               	movf	sprintf@c& (0+255),w,b
  4499  002130  E001 D6B6          	bnz	l18766
  4500  002134                     l18876:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;doprnt.c: 1538: *sp = 0;
  4504  002134  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4505  002138  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4506  00213C  6ADF               	clrf	indf2,c
  4507                           
  4508                           ; BSR set to: 0
  4509  00213E  0C00               	retlw	0	;funcret
  4510  002140                     __end_of_sprintf:
  4511                           	opt stack 0
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           postinc0	equ	0xFEE
  4519                           wreg	equ	0xFE8
  4520                           postdec1	equ	0xFE5
  4521                           fsr1h	equ	0xFE2
  4522                           fsr1l	equ	0xFE1
  4523                           indf2	equ	0xFDF
  4524                           postinc2	equ	0xFDE
  4525                           postdec2	equ	0xFDD
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function _isdigit *****************
  4531 ;; Defined at:
  4532 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  c               1    wreg     unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  c               1   21[BANK0 ] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;		None               void
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : F/0
  4543 ;;		On exit  : F/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;Total ram usage:        3 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    5
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_sprintf
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text2
  4561  007402                     __ptext2:
  4562                           	opt stack 0
  4563  007402                     _isdigit:
  4564                           	opt stack 24
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;incstack = 0
  4568                           ;isdigit@c stored from wreg
  4569  007402  6F75               	movwf	isdigit@c& (0+255),b
  4570  007404  0100               	movlb	0	; () banked
  4571  007406  6B74               	clrf	_isdigit$4813& (0+255),b
  4572                           
  4573                           ; BSR set to: 0
  4574  007408  0E3A               	movlw	58
  4575  00740A  6175               	cpfslt	isdigit@c& (0+255),b
  4576  00740C  D005               	goto	l14374
  4577                           
  4578                           ; BSR set to: 0
  4579  00740E  0E2F               	movlw	47
  4580  007410  6575               	cpfsgt	isdigit@c& (0+255),b
  4581  007412  D002               	goto	l14374
  4582                           
  4583                           ; BSR set to: 0
  4584  007414  0E01               	movlw	1
  4585  007416  6F74               	movwf	_isdigit$4813& (0+255),b
  4586  007418                     l14374:
  4587                           
  4588                           ; BSR set to: 0
  4589  007418  C074  F073         	movff	_isdigit$4813,??_isdigit
  4590  00741C  3173               	rrcf	??_isdigit& (0+255),w,b
  4591                           
  4592                           ; BSR set to: 0
  4593  00741E  0012               	return		;funcret
  4594  007420                     __end_of_isdigit:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           postinc0	equ	0xFEE
  4603                           wreg	equ	0xFE8
  4604                           postdec1	equ	0xFE5
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function ___wmul *****************
  4615 ;; Defined at:
  4616 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  multiplier      2   19[BANK0 ] unsigned int 
  4619 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  product         2   23[BANK0 ] unsigned int 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2   19[BANK0 ] unsigned int 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, prodl, prodh
  4626 ;; Tracked objects:
  4627 ;;		On entry : F/0
  4628 ;;		On exit  : F/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;Total ram usage:        6 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    5
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_sprintf
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text3
  4646  0072DC                     __ptext3:
  4647                           	opt stack 0
  4648  0072DC                     ___wmul:
  4649                           	opt stack 24
  4650                           
  4651                           ; BSR set to: 0
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;incstack = 0
  4655  0072DC  5173               	movf	___wmul@multiplier& (0+255),w,b
  4656  0072DE  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4657  0072E0  CFF3 F077          	movff	prodl,___wmul@product
  4658  0072E4  CFF4 F078          	movff	prodh,___wmul@product+1
  4659  0072E8  5173               	movf	___wmul@multiplier& (0+255),w,b
  4660  0072EA  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4661  0072EC  50F3               	movf	prodl,w,c
  4662  0072EE  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4663  0072F0  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4664  0072F2  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4665  0072F4  50F3               	movf	prodl,w,c
  4666  0072F6  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4667                           
  4668                           ; BSR set to: 0
  4669  0072F8  C077  F073         	movff	___wmul@product,?___wmul
  4670  0072FC  C078  F074         	movff	___wmul@product+1,?___wmul+1
  4671                           
  4672                           ; BSR set to: 0
  4673  007300  0012               	return		;funcret
  4674  007302                     __end_of___wmul:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           postinc0	equ	0xFEE
  4683                           wreg	equ	0xFE8
  4684                           postdec1	equ	0xFE5
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           fsr2h	equ	0xFDA
  4691                           fsr2l	equ	0xFD9
  4692                           status	equ	0xFD8
  4693                           
  4694 ;; *************** function _isButtonPressed *****************
  4695 ;; Defined at:
  4696 ;;		line 475 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  index           1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  index           1   21[BANK0 ] unsigned char 
  4701 ;;  mask            1   22[BANK0 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : F/1
  4708 ;;		On exit  : F/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;Total ram usage:        4 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    5
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text4
  4726  007302                     __ptext4:
  4727                           	opt stack 0
  4728  007302                     _isButtonPressed:
  4729                           	opt stack 25
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;incstack = 0
  4733                           ;isButtonPressed@index stored from wreg
  4734  007302  0100               	movlb	0	; () banked
  4735  007304  6F75               	movwf	isButtonPressed@index& (0+255),b
  4736                           
  4737                           ;system.c: 477: uint8_t mask=(1<<index);
  4738  007306  C075  F073         	movff	isButtonPressed@index,??_isButtonPressed
  4739  00730A  0E01               	movlw	1
  4740  00730C  6F74               	movwf	(??_isButtonPressed+1)& (0+255),b
  4741  00730E  2B73               	incf	??_isButtonPressed& (0+255),f,b
  4742  007310  D002               	goto	u16744
  4743  007312                     u16745:
  4744  007312  90D8               	bcf	status,0,c
  4745  007314  3774               	rlcf	(??_isButtonPressed+1)& (0+255),f,b
  4746  007316                     u16744:
  4747  007316  2F73               	decfsz	??_isButtonPressed& (0+255),f,b
  4748  007318  D7FC               	goto	u16745
  4749  00731A  0100               	movlb	0	; () banked
  4750  00731C  5174               	movf	(??_isButtonPressed+1)& (0+255),w,b
  4751  00731E  6F76               	movwf	isButtonPressed@mask& (0+255),b
  4752                           
  4753                           ;system.c: 478: return((switches & mask)>0);
  4754  007320  1446               	andwf	_switches,w,c
  4755  007322  A4D8               	btfss	status,2,c
  4756  007324  0C01               	retlw	1
  4757                           
  4758                           ; BSR set to: 0
  4759  007326  0C00               	retlw	0	;funcret
  4760  007328                     __end_of_isButtonPressed:
  4761                           	opt stack 0
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           postinc0	equ	0xFEE
  4769                           wreg	equ	0xFE8
  4770                           postdec1	equ	0xFE5
  4771                           fsr1h	equ	0xFE2
  4772                           fsr1l	equ	0xFE1
  4773                           indf2	equ	0xFDF
  4774                           postinc2	equ	0xFDE
  4775                           postdec2	equ	0xFDD
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function _Read_MAC_Address *****************
  4781 ;; Defined at:
  4782 ;;		line 153 in file "../src/mainRFD.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  addr8           6   34[BANK0 ] unsigned char [6]
  4787 ;;  address         2   40[BANK0 ] struct addr_t_def
  4788 ;;  i               1   44[BANK0 ] unsigned char 
  4789 ;;  j               1    0        unsigned char 
  4790 ;;  pAddress        1   42[BANK0 ] PTR unsigned char 
  4791 ;;		 -> Read_MAC_Address@address(2), 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2   31[BANK0 ] struct addr_t_def
  4794 ;; Registers used:
  4795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : F/1
  4798 ;;		On exit  : F/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;Total ram usage:       14 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    8
  4808 ;; This function calls:
  4809 ;;		_EEPROMRead
  4810 ;;		_memcpy
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text5
  4817  006CE6                     __ptext5:
  4818                           	opt stack 0
  4819  006CE6                     _Read_MAC_Address:
  4820                           	opt stack 22
  4821                           
  4822                           ; BSR set to: 1
  4823                           ;mainRFD.c: 155: uint8_t addr8[6];
  4824                           ;mainRFD.c: 156: addr_t address;
  4825                           ;mainRFD.c: 157: uint8_t *pAddress=(uint8_t*)&address;
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;incstack = 0
  4829  006CE6  0E88               	movlw	low Read_MAC_Address@address
  4830  006CE8  0100               	movlb	0	; () banked
  4831  006CEA  6F8A               	movwf	Read_MAC_Address@pAddress& (0+255),b
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;mainRFD.c: 160: for(i=0;i<6;i++)
  4835                           
  4836                           ; BSR set to: 0
  4837  006CEC  6B8C               	clrf	Read_MAC_Address@i& (0+255),b
  4838  006CEE                     l18700:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;mainRFD.c: 161: {
  4842                           ;mainRFD.c: 162: EEPROMRead(&(addr8[6-1-i]), 0xFA+i, 1);
  4843  006CEE  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  4844  006CF0  0805               	sublw	5
  4845  006CF2  6F81               	movwf	??_Read_MAC_Address& (0+255),b
  4846  006CF4  5181               	movf	??_Read_MAC_Address& (0+255),w,b
  4847  006CF6  0F82               	addlw	low Read_MAC_Address@addr8
  4848  006CF8  6F75               	movwf	EEPROMRead@dest& (0+255),b
  4849  006CFA  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  4850  006CFC  0FFA               	addlw	250
  4851  006CFE  6F76               	movwf	EEPROMRead@addr& (0+255),b
  4852  006D00  0E01               	movlw	1
  4853  006D02  6F77               	movwf	EEPROMRead@count& (0+255),b
  4854  006D04  ECA0  F038         	call	_EEPROMRead	;wreg free
  4855                           
  4856                           ; BSR set to: 0
  4857  006D08  2B8C               	incf	Read_MAC_Address@i& (0+255),f,b
  4858                           
  4859                           ; BSR set to: 0
  4860  006D0A  0E05               	movlw	5
  4861  006D0C  658C               	cpfsgt	Read_MAC_Address@i& (0+255),b
  4862  006D0E  D7EF               	goto	l18700
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;mainRFD.c: 180: else
  4866                           ;mainRFD.c: 181: {
  4867                           ;mainRFD.c: 182: memcpy(pAddress,addr8,2);
  4868  006D10  C08A  F075         	movff	Read_MAC_Address@pAddress,memcpy@d1
  4869  006D14  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  4870  006D16  0E82               	movlw	low Read_MAC_Address@addr8
  4871  006D18  6F77               	movwf	memcpy@s1& (0+255),b
  4872  006D1A  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  4873  006D1C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  4874  006D1E  0E02               	movlw	2
  4875  006D20  6F79               	movwf	memcpy@n& (0+255),b
  4876  006D22  EC54  F035         	call	_memcpy	;wreg free
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;mainRFD.c: 183: }
  4880                           ;mainRFD.c: 184: return address;
  4881  006D26  C088  F07F         	movff	Read_MAC_Address@address,?_Read_MAC_Address
  4882  006D2A  C089  F080         	movff	Read_MAC_Address@address+1,?_Read_MAC_Address+1
  4883                           
  4884                           ; BSR set to: 0
  4885  006D2E  0012               	return		;funcret
  4886  006D30                     __end_of_Read_MAC_Address:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           postinc0	equ	0xFEE
  4895                           wreg	equ	0xFE8
  4896                           postdec1	equ	0xFE5
  4897                           fsr1h	equ	0xFE2
  4898                           fsr1l	equ	0xFE1
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           fsr2h	equ	0xFDA
  4903                           fsr2l	equ	0xFD9
  4904                           status	equ	0xFD8
  4905                           
  4906 ;; *************** function _EEPROMRead *****************
  4907 ;; Defined at:
  4908 ;;		line 138 in file "../src/mainRFD.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  dest            1   21[BANK0 ] PTR unsigned char 
  4911 ;;		 -> Read_MAC_Address@addr8(6), 
  4912 ;;  addr            1   22[BANK0 ] unsigned char 
  4913 ;;  count           1   23[BANK0 ] unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : F/0
  4922 ;;		On exit  : F/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4925 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4928 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;Total ram usage:        3 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    7
  4932 ;; This function calls:
  4933 ;;		_SPIGet2
  4934 ;;		_SPIPut2
  4935 ;; This function is called by:
  4936 ;;		_Read_MAC_Address
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text6
  4941  007140                     __ptext6:
  4942                           	opt stack 0
  4943  007140                     _EEPROMRead:
  4944                           	opt stack 22
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;mainRFD.c: 140: GIE=0;
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;incstack = 0
  4951  007140  9EF2               	bcf	intcon,7,c	;volatile
  4952                           
  4953                           ;mainRFD.c: 141: LATDbits.LATD5 = 0;
  4954  007142  9A8C               	bcf	3980,5,c	;volatile
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;mainRFD.c: 142: SPIPut2(0x03);
  4958  007144  0E03               	movlw	3
  4959  007146  EC5C  F03A         	call	_SPIPut2
  4960                           
  4961                           ;mainRFD.c: 143: SPIPut2(addr);
  4962  00714A  0100               	movlb	0	; () banked
  4963  00714C  5176               	movf	EEPROMRead@addr& (0+255),w,b
  4964  00714E  EC5C  F03A         	call	_SPIPut2
  4965                           
  4966                           ;mainRFD.c: 144: while( count )
  4967  007152  D009               	goto	l14198
  4968  007154                     l14192:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;mainRFD.c: 145: {
  4972                           ;mainRFD.c: 146: *dest++ = SPIGet2();
  4973  007154  5175               	movf	EEPROMRead@dest& (0+255),w,b
  4974  007156  6ED9               	movwf	fsr2l,c
  4975  007158  6ADA               	clrf	fsr2h,c
  4976  00715A  ECEA  F03A         	call	_SPIGet2	;wreg free
  4977  00715E  6EDF               	movwf	indf2,c
  4978  007160  0100               	movlb	0	; () banked
  4979  007162  2B75               	incf	EEPROMRead@dest& (0+255),f,b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;mainRFD.c: 147: count--;
  4983  007164  0777               	decf	EEPROMRead@count& (0+255),f,b
  4984  007166                     l14198:
  4985  007166  0100               	movlb	0	; () banked
  4986  007168  5177               	movf	EEPROMRead@count& (0+255),w,b
  4987  00716A  E1F4               	bnz	l14192
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;mainRFD.c: 148: }
  4991                           ;mainRFD.c: 149: LATDbits.LATD5 = 1;
  4992  00716C  8A8C               	bsf	3980,5,c	;volatile
  4993                           
  4994                           ;mainRFD.c: 150: GIE=1;
  4995  00716E  8EF2               	bsf	intcon,7,c	;volatile
  4996                           
  4997                           ; BSR set to: 0
  4998  007170  0012               	return		;funcret
  4999  007172                     __end_of_EEPROMRead:
  5000                           	opt stack 0
  5001                           tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           prodh	equ	0xFF4
  5006                           prodl	equ	0xFF3
  5007                           intcon	equ	0xFF2
  5008                           postinc0	equ	0xFEE
  5009                           wreg	equ	0xFE8
  5010                           postdec1	equ	0xFE5
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           indf2	equ	0xFDF
  5014                           postinc2	equ	0xFDE
  5015                           postdec2	equ	0xFDD
  5016                           fsr2h	equ	0xFDA
  5017                           fsr2l	equ	0xFD9
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _SPIGet2 *****************
  5021 ;; Defined at:
  5022 ;;		line 383 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      unsigned char 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : F/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    6
  5043 ;; This function calls:
  5044 ;;		_SPIPut2
  5045 ;; This function is called by:
  5046 ;;		_EEPROMRead
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text7
  5051  0075D4                     __ptext7:
  5052                           	opt stack 0
  5053  0075D4                     _SPIGet2:
  5054                           	opt stack 22
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;spi.c: 408: SPIPut2(0x00);
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;incstack = 0
  5061  0075D4  0E00               	movlw	0
  5062  0075D6  EC5C  F03A         	call	_SPIPut2
  5063                           
  5064                           ;spi.c: 409: return SSP2BUF;
  5065  0075DA  5075               	movf	3957,w,c	;volatile
  5066  0075DC  0012               	return		;funcret
  5067  0075DE                     __end_of_SPIGet2:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           postdec1	equ	0xFE5
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           indf2	equ	0xFDF
  5082                           postinc2	equ	0xFDE
  5083                           postdec2	equ	0xFDD
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function _MiApp_UnicastAddress *****************
  5089 ;; Defined at:
  5090 ;;		line 224 in file "../src/Bridge.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  DestinationA    2   71[BANK1 ] PTR unsigned char 
  5093 ;;		 -> main@addr(2), 
  5094 ;;  Origin          2   73[BANK1 ] PTR unsigned char 
  5095 ;;		 -> NULL(0), 
  5096 ;;  SecEn           1   75[BANK1 ] unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  src             2  127[BANK0 ] struct addr_t_def
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      unsigned char 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : F/1
  5105 ;;		On exit  : F/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5108 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5111 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;Total ram usage:        7 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:   15
  5115 ;; This function calls:
  5116 ;;		_NetworkUnicastData
  5117 ;;		_memcpy
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text8
  5124  006FF6                     __ptext8:
  5125                           	opt stack 0
  5126  006FF6                     _MiApp_UnicastAddress:
  5127                           	opt stack 15
  5128                           
  5129                           ; BSR set to: 1
  5130                           ;Bridge.c: 226: addr_t src;
  5131                           ;Bridge.c: 227: memcpy(src.bytes,DestinationAddress,2);
  5132                           
  5133                           ;incstack = 0
  5134  006FF6  0EDF               	movlw	low MiApp_UnicastAddress@src
  5135  006FF8  0100               	movlb	0	; () banked
  5136  006FFA  6F75               	movwf	memcpy@d1& (0+255),b
  5137  006FFC  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  5138  006FFE  C147  F077         	movff	MiApp_UnicastAddress@DestinationAddress,memcpy@s1
  5139  007002  C148  F078         	movff	MiApp_UnicastAddress@DestinationAddress+1,memcpy@s1+1
  5140  007006  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5141  007008  0E02               	movlw	2
  5142  00700A  6F79               	movwf	memcpy@n& (0+255),b
  5143  00700C  EC54  F035         	call	_memcpy	;wreg free
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;Bridge.c: 228: return(NetworkUnicastData(src, TxBuffer, TxData,SecEn));
  5147  007010  C0DF  F140         	movff	MiApp_UnicastAddress@src,NetworkUnicastData@address
  5148  007014  C0E0  F141         	movff	MiApp_UnicastAddress@src+1,NetworkUnicastData@address+1
  5149  007018  0E88               	movlw	low _TxBuffer
  5150  00701A  0101               	movlb	1	; () banked
  5151  00701C  6F42               	movwf	NetworkUnicastData@data& (0+255),b
  5152  00701E  0E07               	movlw	high _TxBuffer
  5153  007020  6F43               	movwf	(NetworkUnicastData@data+1)& (0+255),b
  5154  007022  C1D2  F144         	movff	_TxData,NetworkUnicastData@size
  5155  007026  6B45               	clrf	(NetworkUnicastData@size+1)& (0+255),b
  5156  007028  C14B  F146         	movff	MiApp_UnicastAddress@SecEn,NetworkUnicastData@isSecure
  5157  00702C  EF5C  F025         	goto	_NetworkUnicastData	;wreg free
  5158  007030                     __end_of_MiApp_UnicastAddress:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           postinc0	equ	0xFEE
  5168                           wreg	equ	0xFE8
  5169                           postdec1	equ	0xFE5
  5170                           fsr1h	equ	0xFE2
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           fsr2h	equ	0xFDA
  5176                           fsr2l	equ	0xFD9
  5177                           status	equ	0xFD8
  5178                           
  5179 ;; *************** function _NetworkUnicastData *****************
  5180 ;; Defined at:
  5181 ;;		line 237 in file "../NetworkBridge.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  address         2   64[BANK1 ] struct addr_t_def
  5184 ;;  data            2   66[BANK1 ] PTR unsigned char 
  5185 ;;		 -> TxBuffer(64), 
  5186 ;;  size            2   68[BANK1 ] unsigned int 
  5187 ;;  isSecure        1   70[BANK1 ] unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  mAddress        2  124[BANK0 ] PTR struct addr_t_def
  5190 ;;		 -> MyAddress(2), 
  5191 ;;  res             1  126[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : F/1
  5198 ;;		On exit  : F/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5201 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;Total ram usage:       10 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:   14
  5208 ;; This function calls:
  5209 ;;		_CoordinatorAddress
  5210 ;;		_CoordinatorGenericAddress
  5211 ;;		_DeviceManagerBufferDeviceData
  5212 ;;		_DeviceManagerGetDeviceType
  5213 ;;		_NetworkGetDeviceType
  5214 ;;		_NetworkManagerGetMyAddress
  5215 ;;		_TMSendDataToRFD
  5216 ;;		_TMSendFormedPacketTowardsCoordinator
  5217 ;;		_isSameAddress
  5218 ;; This function is called by:
  5219 ;;		_MiApp_UnicastAddress
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text9
  5224  004AB8                     __ptext9:
  5225                           	opt stack 0
  5226  004AB8                     _NetworkUnicastData:
  5227                           	opt stack 15
  5228                           
  5229                           ; BSR set to: 1
  5230                           ;NetworkBridge.c: 239: bool res=0;
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;incstack = 0
  5234  004AB8  0100               	movlb	0	; () banked
  5235  004ABA  6BDE               	clrf	NetworkUnicastData@res& (0+255),b
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;NetworkBridge.c: 240: addr_t *mAddress=NetworkManagerGetMyAddress();
  5239  004ABC  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
  5240  004AC0  C073  F0DC         	movff	?_NetworkManagerGetMyAddress,NetworkUnicastData@mAddress
  5241  004AC4  C074  F0DD         	movff	?_NetworkManagerGetMyAddress+1,NetworkUnicastData@mAddress+1
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;NetworkBridge.c: 241: if(NetworkGetDeviceType()==DeviceCoordinator)
  5245  004AC8  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  5246  004ACC  0900               	iorlw	0
  5247  004ACE  E14C               	bnz	l18460
  5248                           
  5249                           ; BSR set to: 1
  5250                           ;NetworkBridge.c: 242: {
  5251                           ;NetworkBridge.c: 243: if( (isSameAddress(address,*mAddress)==0) && (isSameAddress(addre
      +                          ss,CoordinatorGenericAddress())==0) )
  5252  004AD0  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5253  004AD4  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5254  004AD8  C0DC  FFD9         	movff	NetworkUnicastData@mAddress,fsr2l
  5255  004ADC  C0DD  FFDA         	movff	NetworkUnicastData@mAddress+1,fsr2h
  5256  004AE0  CFDE F07F          	movff	postinc2,isSameAddress@a2
  5257  004AE4  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  5258  004AE8  ECBA  F039         	call	_isSameAddress	;wreg free
  5259  004AEC  0900               	iorlw	0
  5260  004AEE  E179               	bnz	l18468
  5261                           
  5262                           ; BSR set to: 0
  5263  004AF0  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5264  004AF4  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5265  004AF8  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
  5266  004AFC  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  5267  004B00  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  5268  004B04  ECBA  F039         	call	_isSameAddress	;wreg free
  5269  004B08  0900               	iorlw	0
  5270  004B0A  E16B               	bnz	l18468
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;NetworkBridge.c: 244: {
  5274                           ;NetworkBridge.c: 246: if(DeviceManagerGetDeviceType(address)==DeviceSleepingRFD)
  5275  004B0C  C140  F081         	movff	NetworkUnicastData@address,DeviceManagerGetDeviceType@address
  5276  004B10  C141  F082         	movff	NetworkUnicastData@address+1,DeviceManagerGetDeviceType@address+1
  5277  004B14  EC14  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  5278  004B18  0A02               	xorlw	2
  5279  004B1A  E113               	bnz	l18458
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;NetworkBridge.c: 247: {
  5283                           ;NetworkBridge.c: 250: res=DeviceManagerBufferDeviceData(address,data,size,isSecure,0);
  5284  004B1C  C140  F07F         	movff	NetworkUnicastData@address,DeviceManagerBufferDeviceData@address
  5285  004B20  C141  F080         	movff	NetworkUnicastData@address+1,DeviceManagerBufferDeviceData@address+1
  5286  004B24  C142  F081         	movff	NetworkUnicastData@data,DeviceManagerBufferDeviceData@data
  5287  004B28  C143  F082         	movff	NetworkUnicastData@data+1,DeviceManagerBufferDeviceData@data+1
  5288  004B2C  C144  F083         	movff	NetworkUnicastData@size,DeviceManagerBufferDeviceData@size
  5289  004B30  C145  F084         	movff	NetworkUnicastData@size+1,DeviceManagerBufferDeviceData@size+1
  5290  004B34  C146  F085         	movff	NetworkUnicastData@isSecure,DeviceManagerBufferDeviceData@isSecure
  5291  004B38  6B86               	clrf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  5292  004B3A  ECF4  F03A         	call	_DeviceManagerBufferDeviceData	;wreg free
  5293  004B3E  0100               	movlb	0	; () banked
  5294  004B40  D04F               	goto	L1
  5295  004B42                     l18458:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;NetworkBridge.c: 253: {
  5299                           ;NetworkBridge.c: 254: res=TMSendDataToRFD(address,PacketData,data,size, isSecure);
  5300  004B42  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  5301  004B46  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  5302  004B4A  0E23               	movlw	35
  5303  004B4C  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  5304  004B4E  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5305  004B52  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5306  004B56  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5307  004B5A  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5308  004B5E  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5309  004B62  ECFC  F035         	call	_TMSendDataToRFD	;wreg free
  5310  004B66  D03C               	goto	L1
  5311  004B68                     l18460:
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;NetworkBridge.c: 258: {
  5315                           ;NetworkBridge.c: 259: if( (isSameAddress(address,CoordinatorAddress())==1) || (isSameAd
      +                          dress(address,CoordinatorGenericAddress())==1) )
  5316  004B68  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5317  004B6C  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5318  004B70  ECEF  F03A         	call	_CoordinatorAddress	;wreg free
  5319  004B74  C073  F07F         	movff	?_CoordinatorAddress,isSameAddress@a2
  5320  004B78  C074  F080         	movff	?_CoordinatorAddress+1,isSameAddress@a2+1
  5321  004B7C  ECBA  F039         	call	_isSameAddress	;wreg free
  5322  004B80  06E8               	decf	wreg,f,c
  5323  004B82  E00E               	bz	l18464
  5324                           
  5325                           ; BSR set to: 0
  5326  004B84  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5327  004B88  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5328  004B8C  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
  5329  004B90  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  5330  004B94  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  5331  004B98  ECBA  F039         	call	_isSameAddress	;wreg free
  5332  004B9C  06E8               	decf	wreg,f,c
  5333  004B9E  E10E               	bnz	l18466
  5334  004BA0                     l18464:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;NetworkBridge.c: 260: {
  5338                           ;NetworkBridge.c: 261: res=TMSendFormedPacketTowardsCoordinator(data,size,0, isSecure);
  5339  004BA0  C142  F08A         	movff	NetworkUnicastData@data,TMSendFormedPacketTowardsCoordinator@data
  5340  004BA4  C143  F08B         	movff	NetworkUnicastData@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  5341  004BA8  C144  F08C         	movff	NetworkUnicastData@size,TMSendFormedPacketTowardsCoordinator@size
  5342  004BAC  C145  F08D         	movff	NetworkUnicastData@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  5343  004BB0  6B8E               	clrf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  5344  004BB2  C146  F08F         	movff	NetworkUnicastData@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  5345  004BB6  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  5346  004BBA  D012               	goto	L1
  5347  004BBC                     l18466:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;NetworkBridge.c: 263: {
  5351                           ;NetworkBridge.c: 264: res=TMSendDataToRFD(address,PacketRoutedData,data,size, isSecure)
      +                          ;
  5352  004BBC  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  5353  004BC0  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  5354  004BC4  0E26               	movlw	38
  5355  004BC6  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  5356  004BC8  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5357  004BCC  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5358  004BD0  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5359  004BD4  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5360  004BD8  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5361  004BDC  ECFC  F035         	call	_TMSendDataToRFD	;wreg free
  5362  004BE0                     L1:
  5363  004BE0  6FDE               	movwf	NetworkUnicastData@res& (0+255),b
  5364  004BE2                     l18468:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;NetworkBridge.c: 265: }
  5368                           ;NetworkBridge.c: 266: }
  5369                           ;NetworkBridge.c: 267: return(res);
  5370  004BE2  51DE               	movf	NetworkUnicastData@res& (0+255),w,b
  5371                           
  5372                           ; BSR set to: 0
  5373  004BE4  0012               	return		;funcret
  5374  004BE6                     __end_of_NetworkUnicastData:
  5375                           	opt stack 0
  5376                           tblptru	equ	0xFF8
  5377                           tblptrh	equ	0xFF7
  5378                           tblptrl	equ	0xFF6
  5379                           tablat	equ	0xFF5
  5380                           prodh	equ	0xFF4
  5381                           prodl	equ	0xFF3
  5382                           intcon	equ	0xFF2
  5383                           postinc0	equ	0xFEE
  5384                           wreg	equ	0xFE8
  5385                           postdec1	equ	0xFE5
  5386                           fsr1h	equ	0xFE2
  5387                           fsr1l	equ	0xFE1
  5388                           indf2	equ	0xFDF
  5389                           postinc2	equ	0xFDE
  5390                           postdec2	equ	0xFDD
  5391                           fsr2h	equ	0xFDA
  5392                           fsr2l	equ	0xFD9
  5393                           status	equ	0xFD8
  5394                           
  5395 ;; *************** function _MiApp_SearchConnection *****************
  5396 ;; Defined at:
  5397 ;;		line 344 in file "../src/Bridge.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  ScanDuartion    1    wreg     unsigned char 
  5400 ;;  ChannelMap      4  170[BANK1 ] unsigned long 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  ScanDuartion    1    8[BANK2 ] unsigned char 
  5403 ;;  mask            4   15[BANK2 ] unsigned long 
  5404 ;;  tStart          4    9[BANK2 ] struct MIWI_TICK_t
  5405 ;;  msDuration      2   13[BANK2 ] unsigned int 
  5406 ;;  i               1   20[BANK2 ] unsigned char 
  5407 ;;  res             1   19[BANK2 ] unsigned char 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      unsigned char 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : F/1
  5414 ;;		On exit  : F/2
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5417 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Totals:         0       0       4      21       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;Total ram usage:       25 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:   17
  5424 ;; This function calls:
  5425 ;;		_MiApp_DiscardMessage
  5426 ;;		_MiApp_MessageAvailable
  5427 ;;		_MiApp_SetChannel
  5428 ;;		_MiWi_TickGetMs
  5429 ;;		_NetworkSendDiscoverRequest
  5430 ;;		_memset
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text10
  5437  004982                     __ptext10:
  5438                           	opt stack 0
  5439  004982                     _MiApp_SearchConnection:
  5440                           	opt stack 13
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;incstack = 0
  5444                           ;MiApp_SearchConnection@ScanDuartion stored from wreg
  5445  004982  0102               	movlb	2	; () banked
  5446  004984  6F6B               	movwf	MiApp_SearchConnection@ScanDuartion& (0+255),b
  5447                           
  5448                           ;Bridge.c: 346: uint8_t res=0xff;
  5449  004986  6976               	setf	MiApp_SearchConnection@res& (0+255),b
  5450                           
  5451                           ; BSR set to: 2
  5452                           ;Bridge.c: 347: uint8_t i;
  5453                           ;Bridge.c: 348: MIWI_TICK tStart;
  5454                           ;Bridge.c: 349: uint32_t mask=(1<<1);
  5455  004988  0E02               	movlw	2
  5456  00498A  6F72               	movwf	MiApp_SearchConnection@mask& (0+255),b
  5457  00498C  6B73               	clrf	(MiApp_SearchConnection@mask+1)& (0+255),b
  5458  00498E  6B74               	clrf	(MiApp_SearchConnection@mask+2)& (0+255),b
  5459  004990  6B75               	clrf	(MiApp_SearchConnection@mask+3)& (0+255),b
  5460                           
  5461                           ; BSR set to: 2
  5462                           ;Bridge.c: 350: uint16_t msDuration=((uint16_t)ScanDuartion)<<5;
  5463  004992  516B               	movf	MiApp_SearchConnection@ScanDuartion& (0+255),w,b
  5464  004994  6F63               	movwf	??_MiApp_SearchConnection& (0+255),b
  5465  004996  6B64               	clrf	(??_MiApp_SearchConnection+1)& (0+255),b
  5466  004998  0E05               	movlw	5
  5467  00499A                     u23045:
  5468  00499A  90D8               	bcf	status,0,c
  5469  00499C  3763               	rlcf	??_MiApp_SearchConnection& (0+255),f,b
  5470  00499E  3764               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
  5471  0049A0  2EE8               	decfsz	wreg,f,c
  5472  0049A2  D7FB               	goto	u23045
  5473  0049A4  C263  F270         	movff	??_MiApp_SearchConnection,MiApp_SearchConnection@msDuration
  5474  0049A8  C264  F271         	movff	??_MiApp_SearchConnection+1,MiApp_SearchConnection@msDuration+1
  5475                           
  5476                           ; BSR set to: 2
  5477                           ;Bridge.c: 351: memset(ActiveScanResults,0x00,sizeof(ActiveScanResults));
  5478  0049AC  0ECD               	movlw	low _ActiveScanResults
  5479  0049AE  0100               	movlb	0	; () banked
  5480  0049B0  6F73               	movwf	memset@p1& (0+255),b
  5481  0049B2  0E03               	movlw	high _ActiveScanResults
  5482  0049B4  6F74               	movwf	(memset@p1+1)& (0+255),b
  5483  0049B6  6B76               	clrf	(memset@c+1)& (0+255),b
  5484  0049B8  6B75               	clrf	memset@c& (0+255),b
  5485  0049BA  6B78               	clrf	(memset@n+1)& (0+255),b
  5486  0049BC  0E19               	movlw	25
  5487  0049BE  6F77               	movwf	memset@n& (0+255),b
  5488  0049C0  EC2F  F039         	call	_memset	;wreg free
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;Bridge.c: 352: for(i=1;i<32;i++)
  5492  0049C4  0E01               	movlw	1
  5493  0049C6  0102               	movlb	2	; () banked
  5494  0049C8  6F77               	movwf	MiApp_SearchConnection@i& (0+255),b
  5495  0049CA                     l18894:
  5496                           
  5497                           ; BSR set to: 2
  5498                           ;Bridge.c: 353: {
  5499                           ;Bridge.c: 354: if((mask & ChannelMap)>0)
  5500  0049CA  0101               	movlb	1	; () banked
  5501  0049CC  51AA               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
  5502  0049CE  0102               	movlb	2	; () banked
  5503  0049D0  1572               	andwf	MiApp_SearchConnection@mask& (0+255),w,b
  5504  0049D2  6F63               	movwf	??_MiApp_SearchConnection& (0+255),b
  5505  0049D4  0101               	movlb	1	; () banked
  5506  0049D6  51AB               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
  5507  0049D8  0102               	movlb	2	; () banked
  5508  0049DA  1573               	andwf	(MiApp_SearchConnection@mask+1)& (0+255),w,b
  5509  0049DC  6F64               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  5510  0049DE  0101               	movlb	1	; () banked
  5511  0049E0  51AC               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
  5512  0049E2  0102               	movlb	2	; () banked
  5513  0049E4  1574               	andwf	(MiApp_SearchConnection@mask+2)& (0+255),w,b
  5514  0049E6  6F65               	movwf	(??_MiApp_SearchConnection+2)& (0+255),b
  5515  0049E8  0101               	movlb	1	; () banked
  5516  0049EA  51AD               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
  5517  0049EC  0102               	movlb	2	; () banked
  5518  0049EE  1575               	andwf	(MiApp_SearchConnection@mask+3)& (0+255),w,b
  5519  0049F0  6F66               	movwf	(??_MiApp_SearchConnection+3)& (0+255),b
  5520  0049F2  5163               	movf	??_MiApp_SearchConnection& (0+255),w,b
  5521  0049F4  1164               	iorwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  5522  0049F6  1165               	iorwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  5523  0049F8  1166               	iorwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  5524  0049FA  E040               	bz	l18910
  5525                           
  5526                           ; BSR set to: 2
  5527                           ;Bridge.c: 355: {
  5528                           ;Bridge.c: 356: ActiveScanChannel=i;
  5529  0049FC  C277  F1CC         	movff	MiApp_SearchConnection@i,_ActiveScanChannel
  5530                           
  5531                           ; BSR set to: 2
  5532                           ;Bridge.c: 357: MiApp_SetChannel(ActiveScanChannel);
  5533  004A00  0101               	movlb	1	; () banked
  5534  004A02  51CC               	movf	_ActiveScanChannel& (0+255),w,b
  5535  004A04  ECE4  F03A         	call	_MiApp_SetChannel
  5536                           
  5537                           ;Bridge.c: 358: NetworkSendDiscoverRequest();
  5538  004A08  EC4E  F032         	call	_NetworkSendDiscoverRequest	;wreg free
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;Bridge.c: 359: tStart=MiWi_TickGetMs();
  5542  004A0C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
  5543  004A10  C07F  F26C         	movff	?_MiWi_TickGetMs,MiApp_SearchConnection@tStart
  5544  004A14  C080  F26D         	movff	?_MiWi_TickGetMs+1,MiApp_SearchConnection@tStart+1
  5545  004A18  C081  F26E         	movff	?_MiWi_TickGetMs+2,MiApp_SearchConnection@tStart+2
  5546  004A1C  C082  F26F         	movff	?_MiWi_TickGetMs+3,MiApp_SearchConnection@tStart+3
  5547  004A20                     l18904:
  5548                           
  5549                           ;Bridge.c: 361: {
  5550                           ;Bridge.c: 362: if(MiApp_MessageAvailable())
  5551  004A20  ECA2  F028         	call	_MiApp_MessageAvailable	;wreg free
  5552  004A24  0900               	iorlw	0
  5553  004A26  E002               	bz	l602
  5554                           
  5555                           ; BSR set to: 1
  5556                           ;Bridge.c: 363: {
  5557                           ;Bridge.c: 364: MiApp_DiscardMessage();
  5558  004A28  EC23  F03B         	call	_MiApp_DiscardMessage	;wreg free
  5559  004A2C                     l602:
  5560                           
  5561                           ; BSR set to: 1
  5562  004A2C  0004               	clrwdt		;# 
  5563                           
  5564                           ;Bridge.c: 367: }while((MiWi_TickGetMs().Val - tStart.Val)<msDuration);
  5565  004A2E  0102               	movlb	2	; () banked
  5566  004A30  5170               	movf	MiApp_SearchConnection@msDuration& (0+255),w,b
  5567  004A32  6F63               	movwf	??_MiApp_SearchConnection& (0+255),b
  5568  004A34  5171               	movf	(MiApp_SearchConnection@msDuration+1)& (0+255),w,b
  5569  004A36  6F64               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  5570  004A38  6B65               	clrf	(??_MiApp_SearchConnection+2)& (0+255),b
  5571  004A3A  6B66               	clrf	(??_MiApp_SearchConnection+3)& (0+255),b
  5572  004A3C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
  5573  004A40  0102               	movlb	2	; () banked
  5574  004A42  516C               	movf	MiApp_SearchConnection@tStart& (0+255),w,b
  5575  004A44  0100               	movlb	0	; () banked
  5576  004A46  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  5577  004A48  0102               	movlb	2	; () banked
  5578  004A4A  6F67               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
  5579  004A4C  516D               	movf	(MiApp_SearchConnection@tStart+1)& (0+255),w,b
  5580  004A4E  0100               	movlb	0	; () banked
  5581  004A50  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  5582  004A52  0102               	movlb	2	; () banked
  5583  004A54  6F68               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
  5584  004A56  516E               	movf	(MiApp_SearchConnection@tStart+2)& (0+255),w,b
  5585  004A58  0100               	movlb	0	; () banked
  5586  004A5A  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  5587  004A5C  0102               	movlb	2	; () banked
  5588  004A5E  6F69               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
  5589  004A60  516F               	movf	(MiApp_SearchConnection@tStart+3)& (0+255),w,b
  5590  004A62  0100               	movlb	0	; () banked
  5591  004A64  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  5592  004A66  0102               	movlb	2	; () banked
  5593  004A68  6F6A               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
  5594  004A6A  5163               	movf	??_MiApp_SearchConnection& (0+255),w,b
  5595  004A6C  5D67               	subwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
  5596  004A6E  5164               	movf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  5597  004A70  5968               	subwfb	(??_MiApp_SearchConnection+5)& (0+255),w,b
  5598  004A72  5165               	movf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  5599  004A74  5969               	subwfb	(??_MiApp_SearchConnection+6)& (0+255),w,b
  5600  004A76  5166               	movf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  5601  004A78  596A               	subwfb	(??_MiApp_SearchConnection+7)& (0+255),w,b
  5602  004A7A  E3D2               	bnc	l18904
  5603  004A7C                     l18910:
  5604                           
  5605                           ; BSR set to: 2
  5606                           ;Bridge.c: 368: }
  5607                           ;Bridge.c: 369: mask<<=1;
  5608  004A7C  90D8               	bcf	status,0,c
  5609  004A7E  3772               	rlcf	MiApp_SearchConnection@mask& (0+255),f,b
  5610  004A80  3773               	rlcf	(MiApp_SearchConnection@mask+1)& (0+255),f,b
  5611  004A82  3774               	rlcf	(MiApp_SearchConnection@mask+2)& (0+255),f,b
  5612  004A84  3775               	rlcf	(MiApp_SearchConnection@mask+3)& (0+255),f,b
  5613  004A86  2B77               	incf	MiApp_SearchConnection@i& (0+255),f,b
  5614                           
  5615                           ; BSR set to: 2
  5616  004A88  0E1F               	movlw	31
  5617  004A8A  6577               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  5618  004A8C  D79E               	goto	l18894
  5619                           
  5620                           ; BSR set to: 2
  5621                           ;Bridge.c: 370: }
  5622                           ;Bridge.c: 371: for(i=0;i<5;i++)
  5623  004A8E  6B77               	clrf	MiApp_SearchConnection@i& (0+255),b
  5624  004A90                     l18918:
  5625                           
  5626                           ; BSR set to: 2
  5627                           ;Bridge.c: 372: {
  5628                           ;Bridge.c: 373: if(ActiveScanResults[i].Flags==0)
  5629  004A90  5177               	movf	MiApp_SearchConnection@i& (0+255),w,b
  5630  004A92  0D05               	mullw	5
  5631  004A94  0ED1               	movlw	low (_ActiveScanResults+4)
  5632  004A96  24F3               	addwf	prodl,w,c
  5633  004A98  6ED9               	movwf	fsr2l,c
  5634  004A9A  0E03               	movlw	high (_ActiveScanResults+4)
  5635  004A9C  20F4               	addwfc	prodh,w,c
  5636  004A9E  6EDA               	movwf	fsr2h,c
  5637  004AA0  50DF               	movf	indf2,w,c
  5638  004AA2  E004               	bz	l18926
  5639                           
  5640                           ; BSR set to: 2
  5641  004AA4  2B77               	incf	MiApp_SearchConnection@i& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 2
  5644  004AA6  0E04               	movlw	4
  5645  004AA8  6577               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  5646  004AAA  D7F2               	goto	l18918
  5647  004AAC                     l18926:
  5648                           
  5649                           ; BSR set to: 2
  5650                           ;Bridge.c: 376: }
  5651                           ;Bridge.c: 377: }
  5652                           ;Bridge.c: 378: if(i>0)
  5653  004AAC  5177               	movf	MiApp_SearchConnection@i& (0+255),w,b
  5654  004AAE  E002               	bz	l18930
  5655                           
  5656                           ; BSR set to: 2
  5657                           ;Bridge.c: 379: {
  5658                           ;Bridge.c: 380: res=i;
  5659  004AB0  C277  F276         	movff	MiApp_SearchConnection@i,MiApp_SearchConnection@res
  5660  004AB4                     l18930:
  5661                           
  5662                           ; BSR set to: 2
  5663                           ;Bridge.c: 381: }
  5664                           ;Bridge.c: 382: return(res);
  5665  004AB4  5176               	movf	MiApp_SearchConnection@res& (0+255),w,b
  5666                           
  5667                           ; BSR set to: 2
  5668  004AB6  0012               	return		;funcret
  5669  004AB8                     __end_of_MiApp_SearchConnection:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           intcon	equ	0xFF2
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           postdec1	equ	0xFE5
  5681                           fsr1h	equ	0xFE2
  5682                           fsr1l	equ	0xFE1
  5683                           indf2	equ	0xFDF
  5684                           postinc2	equ	0xFDE
  5685                           postdec2	equ	0xFDD
  5686                           fsr2h	equ	0xFDA
  5687                           fsr2l	equ	0xFD9
  5688                           status	equ	0xFD8
  5689                           
  5690 ;; *************** function _NetworkSendDiscoverRequest *****************
  5691 ;; Defined at:
  5692 ;;		line 395 in file "../NetworkManager.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  5697 ;;  address         2   68[BANK1 ] struct addr_t_def
  5698 ;;  dhdr            2   66[BANK1 ] PTR struct net_data_head
  5699 ;;		 -> NetworkSendDiscoverRequest@databuff(64), 
  5700 ;;  size            2   64[BANK1 ] unsigned int 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/2
  5707 ;;		On exit  : F/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Totals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;Total ram usage:       70 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    9
  5717 ;; This function calls:
  5718 ;;		_BroadcastManagerDelaySend
  5719 ;;		_NetworkAddressSizeGet
  5720 ;;		_NetworkPrepareSendPacket
  5721 ;;		_memset
  5722 ;; This function is called by:
  5723 ;;		_MiApp_SearchConnection
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text11
  5728  00649C                     __ptext11:
  5729                           	opt stack 0
  5730  00649C                     _NetworkSendDiscoverRequest:
  5731                           	opt stack 20
  5732                           
  5733                           ;NetworkManager.c: 397: addr_t address;
  5734                           ;NetworkManager.c: 398: uint16_t size;
  5735                           ;NetworkManager.c: 399: uint8_t databuff[64];
  5736                           ;NetworkManager.c: 400: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  5737                           
  5738                           ; BSR set to: 2
  5739                           ;incstack = 0
  5740  00649C  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  5741  00649E  0101               	movlb	1	; () banked
  5742  0064A0  6F42               	movwf	NetworkSendDiscoverRequest@dhdr& (0+255),b
  5743  0064A2  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  5744  0064A4  6F43               	movwf	(NetworkSendDiscoverRequest@dhdr+1)& (0+255),b
  5745                           
  5746                           ; BSR set to: 1
  5747                           ;NetworkManager.c: 401: memset(address.bytes,0xff,NetworkAddressSizeGet());
  5748  0064A6  0E44               	movlw	low NetworkSendDiscoverRequest@address
  5749  0064A8  0100               	movlb	0	; () banked
  5750  0064AA  6F73               	movwf	memset@p1& (0+255),b
  5751  0064AC  0E01               	movlw	high NetworkSendDiscoverRequest@address
  5752  0064AE  6F74               	movwf	(memset@p1+1)& (0+255),b
  5753  0064B0  6B76               	clrf	(memset@c+1)& (0+255),b
  5754  0064B2  6975               	setf	memset@c& (0+255),b
  5755  0064B4  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
  5756  0064B8  0100               	movlb	0	; () banked
  5757  0064BA  6F77               	movwf	memset@n& (0+255),b
  5758  0064BC  6B78               	clrf	(memset@n+1)& (0+255),b
  5759  0064BE  EC2F  F039         	call	_memset	;wreg free
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;NetworkManager.c: 402: size=NetworkPrepareSendPacket(address,databuff,PacketScanRequest
      +                          ,(0),0);
  5763  0064C2  C144  F07F         	movff	NetworkSendDiscoverRequest@address,NetworkPrepareSendPacket@address
  5764  0064C6  C145  F080         	movff	NetworkSendDiscoverRequest@address+1,NetworkPrepareSendPacket@address+1
  5765  0064CA  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  5766  0064CC  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  5767  0064CE  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  5768  0064D0  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  5769  0064D2  0E27               	movlw	39
  5770  0064D4  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  5771  0064D6  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  5772  0064D8  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  5773  0064DA  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  5774  0064DC  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  5775  0064DE  EC07  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  5776  0064E2  C07F  F140         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverRequest@size
  5777  0064E6  C080  F141         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverRequest@size+1
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;NetworkManager.c: 403: dhdr->Hops=0;
  5781  0064EA  C142  FFD9         	movff	NetworkSendDiscoverRequest@dhdr,fsr2l
  5782  0064EE  C143  FFDA         	movff	NetworkSendDiscoverRequest@dhdr+1,fsr2h
  5783  0064F2  6ADF               	clrf	indf2,c
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;NetworkManager.c: 404: BroadcastManagerDelaySend(databuff,size,0,1);
  5787  0064F4  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  5788  0064F6  6F9F               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  5789  0064F8  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  5790  0064FA  6FA0               	movwf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  5791  0064FC  C140  F0A1         	movff	NetworkSendDiscoverRequest@size,BroadcastManagerDelaySend@size
  5792  006500  C141  F0A2         	movff	NetworkSendDiscoverRequest@size+1,BroadcastManagerDelaySend@size+1
  5793  006504  6BA3               	clrf	BroadcastManagerDelaySend@isSecure& (0+255),b
  5794  006506  0E01               	movlw	1
  5795  006508  6FA4               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  5796  00650A  EFAD  F01C         	goto	_BroadcastManagerDelaySend	;wreg free
  5797  00650E                     __end_of_NetworkSendDiscoverRequest:
  5798                           	opt stack 0
  5799                           tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           postinc0	equ	0xFEE
  5807                           wreg	equ	0xFE8
  5808                           postdec1	equ	0xFE5
  5809                           fsr1h	equ	0xFE2
  5810                           fsr1l	equ	0xFE1
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _MiApp_MessageAvailable *****************
  5819 ;; Defined at:
  5820 ;;		line 236 in file "../src/Bridge.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  src             2  168[BANK1 ] struct addr_t_def
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      unsigned char 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : F/1
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        6 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:   16
  5841 ;; This function calls:
  5842 ;;		_AddNodeToNetworkTable
  5843 ;;		_MiMAC_ReceivedPacket
  5844 ;;		_MiWi_TickGetMs
  5845 ;;		_NetworkManagerTask
  5846 ;;		_TimeTickISR
  5847 ;;		_memcpy
  5848 ;;		_radioReceivedPacket
  5849 ;; This function is called by:
  5850 ;;		_main
  5851 ;;		_MiApp_SearchConnection
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text12
  5856  005144                     __ptext12:
  5857                           	opt stack 0
  5858  005144                     _MiApp_MessageAvailable:
  5859                           	opt stack 13
  5860                           
  5861                           ;Bridge.c: 238: addr_t src;
  5862                           ;Bridge.c: 239: static MIWI_TICK tStart={0};
  5863                           ;Bridge.c: 241: if((MiWi_TickGetMs().Val - tStart.Val)>=1)
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;incstack = 0
  5867  005144  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
  5868  005148  0102               	movlb	2	; () banked
  5869  00514A  5124               	movf	MiApp_MessageAvailable@tStart& (0+255),w,b
  5870  00514C  0100               	movlb	0	; () banked
  5871  00514E  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  5872  005150  6FE3               	movwf	??_MiApp_MessageAvailable& (0+255),b
  5873  005152  0102               	movlb	2	; () banked
  5874  005154  5125               	movf	(MiApp_MessageAvailable@tStart+1)& (0+255),w,b
  5875  005156  0100               	movlb	0	; () banked
  5876  005158  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  5877  00515A  6FE4               	movwf	(??_MiApp_MessageAvailable+1)& (0+255),b
  5878  00515C  0102               	movlb	2	; () banked
  5879  00515E  5126               	movf	(MiApp_MessageAvailable@tStart+2)& (0+255),w,b
  5880  005160  0100               	movlb	0	; () banked
  5881  005162  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  5882  005164  6FE5               	movwf	(??_MiApp_MessageAvailable+2)& (0+255),b
  5883  005166  0102               	movlb	2	; () banked
  5884  005168  5127               	movf	(MiApp_MessageAvailable@tStart+3)& (0+255),w,b
  5885  00516A  0100               	movlb	0	; () banked
  5886  00516C  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  5887  00516E  6FE6               	movwf	(??_MiApp_MessageAvailable+3)& (0+255),b
  5888  005170  51E3               	movf	??_MiApp_MessageAvailable& (0+255),w,b
  5889  005172  11E4               	iorwf	(??_MiApp_MessageAvailable+1)& (0+255),w,b
  5890  005174  11E5               	iorwf	(??_MiApp_MessageAvailable+2)& (0+255),w,b
  5891  005176  11E6               	iorwf	(??_MiApp_MessageAvailable+3)& (0+255),w,b
  5892  005178  E00C               	bz	l18296
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;Bridge.c: 242: {
  5896                           ;Bridge.c: 243: tStart=MiWi_TickGetMs();
  5897  00517A  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
  5898  00517E  C07F  F224         	movff	?_MiWi_TickGetMs,MiApp_MessageAvailable@tStart
  5899  005182  C080  F225         	movff	?_MiWi_TickGetMs+1,MiApp_MessageAvailable@tStart+1
  5900  005186  C081  F226         	movff	?_MiWi_TickGetMs+2,MiApp_MessageAvailable@tStart+2
  5901  00518A  C082  F227         	movff	?_MiWi_TickGetMs+3,MiApp_MessageAvailable@tStart+3
  5902                           
  5903                           ;Bridge.c: 244: TimeTickISR();
  5904  00518E  ECB9  F038         	call	_TimeTickISR	;wreg free
  5905  005192                     l18296:
  5906                           
  5907                           ;Bridge.c: 245: }
  5908                           ;Bridge.c: 246: NetworkManagerTask();
  5909  005192  EC91  F00C         	call	_NetworkManagerTask	;wreg free
  5910                           
  5911                           ;Bridge.c: 247: if(MiMAC_ReceivedPacket()==1)
  5912  005196  ECA1  F007         	call	_MiMAC_ReceivedPacket	;wreg free
  5913  00519A  06E8               	decf	wreg,f,c
  5914  00519C  E12E               	bnz	l18304
  5915                           
  5916                           ;Bridge.c: 248: {
  5917                           ;Bridge.c: 249: memcpy(src.bytes,MACRxPacket.SourceAddress,sizeof(src));
  5918  00519E  0EA8               	movlw	low MiApp_MessageAvailable@src
  5919  0051A0  0100               	movlb	0	; () banked
  5920  0051A2  6F75               	movwf	memcpy@d1& (0+255),b
  5921  0051A4  0E01               	movlw	high MiApp_MessageAvailable@src
  5922  0051A6  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  5923  0051A8  C234  F077         	movff	_MACRxPacket+1,memcpy@s1
  5924  0051AC  C235  F078         	movff	_MACRxPacket+2,memcpy@s1+1
  5925  0051B0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5926  0051B2  0E02               	movlw	2
  5927  0051B4  6F79               	movwf	memcpy@n& (0+255),b
  5928  0051B6  EC54  F035         	call	_memcpy	;wreg free
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;Bridge.c: 250: radioReceivedPacket(src,MACRxPacket.SourcePANID,MACRxPacket.Payload,MACR
      +                          xPacket.PayloadLen,MACRxPacket.RSSIValue,MACRxPacket.flags.bits.broadcast,MACRxPacket.fl
      +                          ags.bits.secEn);
  5932  0051BA  C1A8  F186         	movff	MiApp_MessageAvailable@src,radioReceivedPacket@source
  5933  0051BE  C1A9  F187         	movff	MiApp_MessageAvailable@src+1,radioReceivedPacket@source+1
  5934  0051C2  C23B  F188         	movff	_MACRxPacket+8,radioReceivedPacket@PANID
  5935  0051C6  C23C  F189         	movff	_MACRxPacket+9,radioReceivedPacket@PANID+1
  5936  0051CA  C236  F18A         	movff	_MACRxPacket+3,radioReceivedPacket@data
  5937  0051CE  C237  F18B         	movff	_MACRxPacket+4,radioReceivedPacket@data+1
  5938  0051D2  C238  F18C         	movff	_MACRxPacket+5,radioReceivedPacket@size
  5939  0051D6  0101               	movlb	1	; () banked
  5940  0051D8  6B8D               	clrf	(radioReceivedPacket@size+1)& (0+255),b
  5941  0051DA  C239  F18E         	movff	_MACRxPacket+6,radioReceivedPacket@rssi
  5942  0051DE  0102               	movlb	2	; () banked
  5943  0051E0  0E00               	movlw	0
  5944  0051E2  B533               	btfsc	_MACRxPacket& (0+255),2,b
  5945  0051E4  0E01               	movlw	1
  5946  0051E6  0101               	movlb	1	; () banked
  5947  0051E8  6F8F               	movwf	radioReceivedPacket@isBroadcast& (0+255),b
  5948  0051EA  0102               	movlb	2	; () banked
  5949  0051EC  0E00               	movlw	0
  5950  0051EE  B733               	btfsc	_MACRxPacket& (0+255),3,b
  5951  0051F0  0E01               	movlw	1
  5952  0051F2  0101               	movlb	1	; () banked
  5953  0051F4  6F90               	movwf	radioReceivedPacket@isSecure& (0+255),b
  5954  0051F6  EC51  F002         	call	_radioReceivedPacket	;wreg free
  5955  0051FA                     l18304:
  5956                           
  5957                           ;Bridge.c: 251: }
  5958                           ;Bridge.c: 253: if(UserMessageAvailable==1)
  5959  0051FA  0101               	movlb	1	; () banked
  5960  0051FC  05D3               	decf	_UserMessageAvailable& (0+255),w,b
  5961  0051FE  E118               	bnz	l18310
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;Bridge.c: 254: {
  5965                           ;Bridge.c: 255: memcpy(src.bytes,rxMessage.SourceAddress,sizeof(src));
  5966  005200  0EA8               	movlw	low MiApp_MessageAvailable@src
  5967  005202  0100               	movlb	0	; () banked
  5968  005204  6F75               	movwf	memcpy@d1& (0+255),b
  5969  005206  0E01               	movlw	high MiApp_MessageAvailable@src
  5970  005208  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  5971  00520A  C242  F077         	movff	_rxMessage+3,memcpy@s1
  5972  00520E  C243  F078         	movff	_rxMessage+4,memcpy@s1+1
  5973  005212  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5974  005214  0E02               	movlw	2
  5975  005216  6F79               	movwf	memcpy@n& (0+255),b
  5976  005218  EC54  F035         	call	_memcpy	;wreg free
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;Bridge.c: 256: AddNodeToNetworkTable(src,rxMessage.SourcePANID.Val);
  5980  00521C  C1A8  F081         	movff	MiApp_MessageAvailable@src,AddNodeToNetworkTable@address
  5981  005220  C1A9  F082         	movff	MiApp_MessageAvailable@src+1,AddNodeToNetworkTable@address+1
  5982  005224  C240  F083         	movff	_rxMessage+1,AddNodeToNetworkTable@PANID
  5983  005228  C241  F084         	movff	_rxMessage+2,AddNodeToNetworkTable@PANID+1
  5984  00522C  EC8D  F018         	call	_AddNodeToNetworkTable	;wreg free
  5985  005230                     l18310:
  5986                           
  5987                           ;Bridge.c: 257: }
  5988                           ;Bridge.c: 259: return(UserMessageAvailable);
  5989  005230  0101               	movlb	1	; () banked
  5990  005232  51D3               	movf	_UserMessageAvailable& (0+255),w,b
  5991                           
  5992                           ; BSR set to: 1
  5993  005234  0012               	return		;funcret
  5994  005236                     __end_of_MiApp_MessageAvailable:
  5995                           	opt stack 0
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           postinc0	equ	0xFEE
  6004                           wreg	equ	0xFE8
  6005                           postdec1	equ	0xFE5
  6006                           fsr1h	equ	0xFE2
  6007                           fsr1l	equ	0xFE1
  6008                           indf2	equ	0xFDF
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _radioReceivedPacket *****************
  6016 ;; Defined at:
  6017 ;;		line 48 in file "../NetworkBridge.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  source          2  134[BANK1 ] struct addr_t_def
  6020 ;;  PANID           2  136[BANK1 ] unsigned int 
  6021 ;;  data            2  138[BANK1 ] PTR unsigned char 
  6022 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6023 ;;  size            2  140[BANK1 ] unsigned int 
  6024 ;;  rssi            1  142[BANK1 ] unsigned char 
  6025 ;;  isBroadcast     1  143[BANK1 ] unsigned char 
  6026 ;;  isSecure        1  144[BANK1 ] unsigned char 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  bt              2  158[BANK1 ] unsigned int 
  6029 ;;  crc             4  154[BANK1 ] unsigned long 
  6030 ;;  dhdr            2  166[BANK1 ] PTR struct net_data_head
  6031 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6032 ;;  parent          2  164[BANK1 ] struct addr_t_def
  6033 ;;  child           2  162[BANK1 ] struct addr_t_def
  6034 ;;  rhdr            2  160[BANK1 ] PTR struct net_routing_h
  6035 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6036 ;;  myAddr          2  151[BANK1 ] PTR struct addr_t_def
  6037 ;;		 -> MyAddress(2), 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : F/1
  6044 ;;		On exit  : E/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6047 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6048 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;Total ram usage:       34 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:   15
  6054 ;; This function calls:
  6055 ;;		_BlinkRedLED
  6056 ;;		_BroadcastManagerDelaySend
  6057 ;;		_CoordinatorGenericAddress
  6058 ;;		_DeviceManagerBufferDeviceData
  6059 ;;		_DeviceManagerGetDeviceType
  6060 ;;		_GetRouteAddressOfChild
  6061 ;;		_IsMemberOfNetwork
  6062 ;;		_IsNetworkDevice
  6063 ;;		_LE_RemoveNeighborDevice
  6064 ;;		_LE_processReceivedMessage
  6065 ;;		_NetworkDiscoveredEvent
  6066 ;;		_NetworkGetDeviceType
  6067 ;;		_NetworkGetPANID
  6068 ;;		_NetworkGetParentAddress
  6069 ;;		_NetworkManagerGetMyAddress
  6070 ;;		_NetworkManagerProcessIncomingData
  6071 ;;		_NetworkSendDiscoverResponse
  6072 ;;		_RouteManagerProcessReceive
  6073 ;;		_TMSendFormedPacketTowardsCoordinator
  6074 ;;		_TunnelManagerGetTunnel
  6075 ;;		_TunnelManagerInvalidateTunnel
  6076 ;;		_TunnelManagerSetTunnel
  6077 ;;		_crc32
  6078 ;;		_isBroadcastAddress
  6079 ;;		_isKnownPacket
  6080 ;;		_isSameAddress
  6081 ;;		_memcpy
  6082 ;;		_radioDiscardPacket
  6083 ;;		_radioUnicast
  6084 ;; This function is called by:
  6085 ;;		_MiApp_MessageAvailable
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text13
  6090  0004A2                     __ptext13:
  6091                           	opt stack 0
  6092  0004A2                     _radioReceivedPacket:
  6093                           	opt stack 13
  6094                           
  6095                           ; BSR set to: 1
  6096                           ;NetworkBridge.c: 50: net_routing_header_t *rhdr=(net_routing_header_t*)data;
  6097                           
  6098                           ; BSR set to: 1
  6099                           ;incstack = 0
  6100  0004A2  C18A  F1A0         	movff	radioReceivedPacket@data,radioReceivedPacket@rhdr
  6101  0004A6  C18B  F1A1         	movff	radioReceivedPacket@data+1,radioReceivedPacket@rhdr+1
  6102                           
  6103                           ;NetworkBridge.c: 51: net_data_header_t *dhdr=(net_data_header_t*)data;
  6104  0004AA  C18A  F1A6         	movff	radioReceivedPacket@data,radioReceivedPacket@dhdr
  6105  0004AE  C18B  F1A7         	movff	radioReceivedPacket@data+1,radioReceivedPacket@dhdr+1
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;NetworkBridge.c: 52: addr_t* myAddr=NetworkManagerGetMyAddress();
  6109  0004B2  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
  6110  0004B6  C073  F197         	movff	?_NetworkManagerGetMyAddress,radioReceivedPacket@myAddr
  6111  0004BA  C074  F198         	movff	?_NetworkManagerGetMyAddress+1,radioReceivedPacket@myAddr+1
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;NetworkBridge.c: 53: uint32_t crc=0;
  6115  0004BE  0101               	movlb	1	; () banked
  6116  0004C0  6B9A               	clrf	radioReceivedPacket@crc& (0+255),b
  6117  0004C2  6B9B               	clrf	(radioReceivedPacket@crc+1)& (0+255),b
  6118  0004C4  6B9C               	clrf	(radioReceivedPacket@crc+2)& (0+255),b
  6119  0004C6  6B9D               	clrf	(radioReceivedPacket@crc+3)& (0+255),b
  6120                           
  6121                           ; BSR set to: 1
  6122                           ;NetworkBridge.c: 54: addr_t child,parent;
  6123                           ;NetworkBridge.c: 57: crc=crc32(crc,(uint8_t*)&data[1], size);
  6124  0004C8  C19A  F073         	movff	radioReceivedPacket@crc,crc32@crc
  6125  0004CC  C19B  F074         	movff	radioReceivedPacket@crc+1,crc32@crc+1
  6126  0004D0  C19C  F075         	movff	radioReceivedPacket@crc+2,crc32@crc+2
  6127  0004D4  C19D  F076         	movff	radioReceivedPacket@crc+3,crc32@crc+3
  6128  0004D8  298A               	incf	radioReceivedPacket@data& (0+255),w,b
  6129  0004DA  0100               	movlb	0	; () banked
  6130  0004DC  6F77               	movwf	crc32@buf& (0+255),b
  6131  0004DE  0E00               	movlw	0
  6132  0004E0  0101               	movlb	1	; () banked
  6133  0004E2  218B               	addwfc	(radioReceivedPacket@data+1)& (0+255),w,b
  6134  0004E4  0100               	movlb	0	; () banked
  6135  0004E6  6F78               	movwf	(crc32@buf+1)& (0+255),b
  6136  0004E8  C18C  F079         	movff	radioReceivedPacket@size,crc32@size
  6137  0004EC  C18D  F07A         	movff	radioReceivedPacket@size+1,crc32@size+1
  6138  0004F0  ECBC  F02D         	call	_crc32	;wreg free
  6139  0004F4  C073  F19A         	movff	?_crc32,radioReceivedPacket@crc
  6140  0004F8  C074  F19B         	movff	?_crc32+1,radioReceivedPacket@crc+1
  6141  0004FC  C075  F19C         	movff	?_crc32+2,radioReceivedPacket@crc+2
  6142  000500  C076  F19D         	movff	?_crc32+3,radioReceivedPacket@crc+3
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;NetworkBridge.c: 59: if(isKnownPacket(crc)==0)
  6146  000504  C19A  F0AB         	movff	radioReceivedPacket@crc,isKnownPacket@hash
  6147  000508  C19B  F0AC         	movff	radioReceivedPacket@crc+1,isKnownPacket@hash+1
  6148  00050C  C19C  F0AD         	movff	radioReceivedPacket@crc+2,isKnownPacket@hash+2
  6149  000510  C19D  F0AE         	movff	radioReceivedPacket@crc+3,isKnownPacket@hash+3
  6150  000514  ECA0  F010         	call	_isKnownPacket	;wreg free
  6151  000518  0900               	iorlw	0
  6152  00051A  E002 EF10  F03A    	bnz	_MiMAC_DiscardPacket
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;NetworkBridge.c: 60: {
  6156                           ;NetworkBridge.c: 61: if( (isBroadcast==1) && (rhdr->packettype==PacketRouting) )
  6157  000520  0101               	movlb	1	; () banked
  6158  000522  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6159  000524  E159               	bnz	l18024
  6160                           
  6161                           ; BSR set to: 1
  6162  000526  EE20 F002          	lfsr	2,2
  6163  00052A  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6164  00052C  26D9               	addwf	fsr2l,f,c
  6165  00052E  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6166  000530  22DA               	addwfc	fsr2h,f,c
  6167  000532  0E22               	movlw	34
  6168  000534  18DE               	xorwf	postinc2,w,c
  6169  000536  E150               	bnz	l18024
  6170                           
  6171                           ; BSR set to: 1
  6172                           ;NetworkBridge.c: 62: {
  6173                           ;NetworkBridge.c: 65: uint16_t bt;
  6174                           ;NetworkBridge.c: 66: memcpy(&bt,source.bytes,2);
  6175  000538  0E9E               	movlw	low radioReceivedPacket@bt
  6176  00053A  0100               	movlb	0	; () banked
  6177  00053C  6F75               	movwf	memcpy@d1& (0+255),b
  6178  00053E  0E01               	movlw	high radioReceivedPacket@bt
  6179  000540  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6180  000542  0E86               	movlw	low radioReceivedPacket@source
  6181  000544  6F77               	movwf	memcpy@s1& (0+255),b
  6182  000546  0E01               	movlw	high radioReceivedPacket@source
  6183  000548  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  6184  00054A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6185  00054C  0E02               	movlw	2
  6186  00054E  6F79               	movwf	memcpy@n& (0+255),b
  6187  000550  EC54  F035         	call	_memcpy	;wreg free
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;NetworkBridge.c: 67: rhdr->etx=rhdr->etx ^ (((uint16_t)(~bt))+(uint16_t)0x3497);
  6191  000554  0101               	movlb	1	; () banked
  6192  000556  EE20 F006          	lfsr	2,6
  6193  00055A  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6194  00055C  26D9               	addwf	fsr2l,f,c
  6195  00055E  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6196  000560  22DA               	addwfc	fsr2h,f,c
  6197  000562  CFDE F191          	movff	postinc2,??_radioReceivedPacket
  6198  000566  CFDD F192          	movff	postdec2,??_radioReceivedPacket+1
  6199  00056A  0E97               	movlw	151
  6200  00056C  6F93               	movwf	(??_radioReceivedPacket+2)& (0+255),b
  6201  00056E  0E34               	movlw	52
  6202  000570  6F94               	movwf	(??_radioReceivedPacket+3)& (0+255),b
  6203  000572  1D9E               	comf	radioReceivedPacket@bt& (0+255),w,b
  6204  000574  6F95               	movwf	(??_radioReceivedPacket+4)& (0+255),b
  6205  000576  1D9F               	comf	(radioReceivedPacket@bt+1)& (0+255),w,b
  6206  000578  6F96               	movwf	(??_radioReceivedPacket+5)& (0+255),b
  6207  00057A  5193               	movf	(??_radioReceivedPacket+2)& (0+255),w,b
  6208  00057C  2795               	addwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6209  00057E  5194               	movf	(??_radioReceivedPacket+3)& (0+255),w,b
  6210  000580  2396               	addwfc	(??_radioReceivedPacket+5)& (0+255),f,b
  6211  000582  5191               	movf	??_radioReceivedPacket& (0+255),w,b
  6212  000584  1B95               	xorwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6213  000586  5192               	movf	(??_radioReceivedPacket+1)& (0+255),w,b
  6214  000588  1B96               	xorwf	(??_radioReceivedPacket+5)& (0+255),f,b
  6215  00058A  EE20 F006          	lfsr	2,6
  6216  00058E  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6217  000590  26D9               	addwf	fsr2l,f,c
  6218  000592  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6219  000594  22DA               	addwfc	fsr2h,f,c
  6220  000596  C195  FFDE         	movff	??_radioReceivedPacket+4,postinc2
  6221  00059A  C196  FFDD         	movff	??_radioReceivedPacket+5,postdec2
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;NetworkBridge.c: 69: LE_processReceivedMessage(&source,data,size,rssi);
  6225  00059E  0E86               	movlw	low radioReceivedPacket@source
  6226  0005A0  0100               	movlb	0	; () banked
  6227  0005A2  6F9F               	movwf	LE_processReceivedMessage@source& (0+255),b
  6228  0005A4  0E01               	movlw	high radioReceivedPacket@source
  6229  0005A6  6FA0               	movwf	(LE_processReceivedMessage@source+1)& (0+255),b
  6230  0005A8  C18A  F0A1         	movff	radioReceivedPacket@data,LE_processReceivedMessage@data
  6231  0005AC  C18B  F0A2         	movff	radioReceivedPacket@data+1,LE_processReceivedMessage@data+1
  6232  0005B0  C18C  F0A3         	movff	radioReceivedPacket@size,LE_processReceivedMessage@len
  6233  0005B4  C18E  F0A4         	movff	radioReceivedPacket@rssi,LE_processReceivedMessage@rssi
  6234  0005B8  EC25  F024         	call	_LE_processReceivedMessage	;wreg free
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;NetworkBridge.c: 70: RouteManagerProcessReceive(&source,data,size);
  6238  0005BC  0E86               	movlw	low radioReceivedPacket@source
  6239  0005BE  6F9D               	movwf	RouteManagerProcessReceive@source& (0+255),b
  6240  0005C0  0E01               	movlw	high radioReceivedPacket@source
  6241  0005C2  6F9E               	movwf	(RouteManagerProcessReceive@source+1)& (0+255),b
  6242  0005C4  C18A  F09F         	movff	radioReceivedPacket@data,RouteManagerProcessReceive@data
  6243  0005C8  C18B  F0A0         	movff	radioReceivedPacket@data+1,RouteManagerProcessReceive@data+1
  6244  0005CC  C18C  F0A1         	movff	radioReceivedPacket@size,RouteManagerProcessReceive@len
  6245  0005D0  EC49  F022         	call	_RouteManagerProcessReceive	;wreg free
  6246                           
  6247                           ;NetworkBridge.c: 71: }else if( (NetworkGetDeviceType()!=DeviceCoordinator) || (IsNetwor
      +                          kDevice(dhdr->origin,(dhdr->flags & 0x07))==1) )
  6248  0005D4  EF30  F03B         	goto	_radioDiscardPacket
  6249  0005D8                     l18024:
  6250                           
  6251                           ; BSR set to: 1
  6252  0005D8  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6253  0005DC  0900               	iorlw	0
  6254  0005DE  E119               	bnz	l18028
  6255                           
  6256                           ; BSR set to: 1
  6257  0005E0  EE20 F006          	lfsr	2,6
  6258  0005E4  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6259  0005E6  26D9               	addwf	fsr2l,f,c
  6260  0005E8  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6261  0005EA  22DA               	addwfc	fsr2h,f,c
  6262  0005EC  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
  6263  0005F0  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
  6264  0005F4  EE20 F003          	lfsr	2,3
  6265  0005F8  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6266  0005FA  26D9               	addwf	fsr2l,f,c
  6267  0005FC  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6268  0005FE  22DA               	addwfc	fsr2h,f,c
  6269  000600  50DF               	movf	indf2,w,c
  6270  000602  0B07               	andlw	7
  6271  000604  0100               	movlb	0	; () banked
  6272  000606  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
  6273  000608  ECE5  F01B         	call	_IsNetworkDevice	;wreg free
  6274  00060C  06E8               	decf	wreg,f,c
  6275  00060E  E001 D280          	bnz	l18182
  6276  000612                     l18028:
  6277                           
  6278                           ;NetworkBridge.c: 72: {
  6279                           ;NetworkBridge.c: 75: if( (isBroadcast==1) && (rhdr->packettype==PacketScanRequest) )
  6280  000612  0101               	movlb	1	; () banked
  6281  000614  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6282  000616  E112               	bnz	l18036
  6283                           
  6284                           ; BSR set to: 1
  6285  000618  EE20 F002          	lfsr	2,2
  6286  00061C  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6287  00061E  26D9               	addwf	fsr2l,f,c
  6288  000620  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6289  000622  22DA               	addwfc	fsr2h,f,c
  6290  000624  0E27               	movlw	39
  6291  000626  18DE               	xorwf	postinc2,w,c
  6292  000628  E109               	bnz	l18036
  6293                           
  6294                           ; BSR set to: 1
  6295                           ;NetworkBridge.c: 76: {
  6296                           ;NetworkBridge.c: 77: if(IsMemberOfNetwork()==1)
  6297  00062A  EC38  F03B         	call	_IsMemberOfNetwork	;wreg free
  6298  00062E  06E8               	decf	wreg,f,c
  6299  000630  E001 D26F          	bnz	l18182
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;NetworkBridge.c: 78: {
  6303                           ;NetworkBridge.c: 80: NetworkSendDiscoverResponse();
  6304  000634  EC25  F031         	call	_NetworkSendDiscoverResponse	;wreg free
  6305  000638  EF30  F03B         	goto	_radioDiscardPacket
  6306  00063C                     l18036:
  6307                           
  6308                           ; BSR set to: 1
  6309  00063C  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6310  00063E  E11A               	bnz	l18044
  6311                           
  6312                           ; BSR set to: 1
  6313  000640  EE20 F002          	lfsr	2,2
  6314  000644  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6315  000646  26D9               	addwf	fsr2l,f,c
  6316  000648  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6317  00064A  22DA               	addwfc	fsr2h,f,c
  6318  00064C  0E28               	movlw	40
  6319  00064E  18DE               	xorwf	postinc2,w,c
  6320  000650  E111               	bnz	l18044
  6321                           
  6322                           ; BSR set to: 1
  6323                           ;NetworkBridge.c: 83: {
  6324                           ;NetworkBridge.c: 84: if(PANID!=0xffff)
  6325  000652  2988               	incf	radioReceivedPacket@PANID& (0+255),w,b
  6326  000654  E103               	bnz	u21900
  6327  000656  2989               	incf	(radioReceivedPacket@PANID+1)& (0+255),w,b
  6328  000658  E101 D25B          	bz	l18182
  6329  00065C                     u21900:
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;NetworkBridge.c: 85: {
  6333                           ;NetworkBridge.c: 86: NetworkDiscoveredEvent(PANID, rssi);
  6334  00065C  C188  F073         	movff	radioReceivedPacket@PANID,NetworkDiscoveredEvent@PANID
  6335  000660  C189  F074         	movff	radioReceivedPacket@PANID+1,NetworkDiscoveredEvent@PANID+1
  6336  000664  C18E  F075         	movff	radioReceivedPacket@rssi,NetworkDiscoveredEvent@rssi
  6337  000668  0100               	movlb	0	; () banked
  6338  00066A  6B76               	clrf	(NetworkDiscoveredEvent@rssi+1)& (0+255),b
  6339  00066C  EC14  F01B         	call	_NetworkDiscoveredEvent	;wreg free
  6340                           
  6341                           ;NetworkBridge.c: 87: }
  6342                           ;NetworkBridge.c: 88: }else if( (dhdr->packettype==PacketData) || (dhdr->packettype==Pac
      +                          ketCheckin)
  6343  000670  EF30  F03B         	goto	_radioDiscardPacket
  6344  000674                     l18044:
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;NetworkBridge.c: 89: || (dhdr->packettype==PacketCheckinReply) ||(dhdr->packettype==Pac
      +                          ketRoutedData)
  6348                           ;NetworkBridge.c: 90: || (dhdr->packettype==PacketRFDRequestData) )
  6349  000674  EE20 F002          	lfsr	2,2
  6350  000678  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6351  00067A  26D9               	addwf	fsr2l,f,c
  6352  00067C  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6353  00067E  22DA               	addwfc	fsr2h,f,c
  6354  000680  0E23               	movlw	35
  6355  000682  18DE               	xorwf	postinc2,w,c
  6356  000684  E025               	bz	l18054
  6357                           
  6358                           ; BSR set to: 1
  6359  000686  EE20 F002          	lfsr	2,2
  6360  00068A  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6361  00068C  26D9               	addwf	fsr2l,f,c
  6362  00068E  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6363  000690  22DA               	addwfc	fsr2h,f,c
  6364  000692  0E24               	movlw	36
  6365  000694  18DE               	xorwf	postinc2,w,c
  6366  000696  E01C               	bz	l18054
  6367                           
  6368                           ; BSR set to: 1
  6369  000698  EE20 F002          	lfsr	2,2
  6370  00069C  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6371  00069E  26D9               	addwf	fsr2l,f,c
  6372  0006A0  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6373  0006A2  22DA               	addwfc	fsr2h,f,c
  6374  0006A4  0E25               	movlw	37
  6375  0006A6  18DE               	xorwf	postinc2,w,c
  6376  0006A8  E013               	bz	l18054
  6377                           
  6378                           ; BSR set to: 1
  6379  0006AA  EE20 F002          	lfsr	2,2
  6380  0006AE  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6381  0006B0  26D9               	addwf	fsr2l,f,c
  6382  0006B2  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6383  0006B4  22DA               	addwfc	fsr2h,f,c
  6384  0006B6  0E26               	movlw	38
  6385  0006B8  18DE               	xorwf	postinc2,w,c
  6386  0006BA  E00A               	bz	l18054
  6387                           
  6388                           ; BSR set to: 1
  6389  0006BC  EE20 F002          	lfsr	2,2
  6390  0006C0  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6391  0006C2  26D9               	addwf	fsr2l,f,c
  6392  0006C4  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6393  0006C6  22DA               	addwfc	fsr2h,f,c
  6394  0006C8  0E29               	movlw	41
  6395  0006CA  18DE               	xorwf	postinc2,w,c
  6396  0006CC  E001 D221          	bnz	l18182
  6397  0006D0                     l18054:
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;NetworkBridge.c: 91: {
  6401                           ;NetworkBridge.c: 92: BlinkRedLED();
  6402  0006D0  ECC6  F03A         	call	_BlinkRedLED	;wreg free
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;NetworkBridge.c: 93: if( (isSameAddress(*myAddr,dhdr->target)) || (isBroadcastAddress(d
      +                          hdr->target))
  6406                           ;NetworkBridge.c: 94: || ((NetworkGetDeviceType()==DeviceCoordinator) && (isSameAddress(
      +                          CoordinatorGenericAddress(),dhdr->target)) ) )
  6407  0006D4  C197  FFD9         	movff	radioReceivedPacket@myAddr,fsr2l
  6408  0006D8  C198  FFDA         	movff	radioReceivedPacket@myAddr+1,fsr2h
  6409  0006DC  CFDE F07D          	movff	postinc2,isSameAddress@a1
  6410  0006E0  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  6411  0006E4  0101               	movlb	1	; () banked
  6412  0006E6  EE20 F004          	lfsr	2,4
  6413  0006EA  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6414  0006EC  26D9               	addwf	fsr2l,f,c
  6415  0006EE  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6416  0006F0  22DA               	addwfc	fsr2h,f,c
  6417  0006F2  CFDE F07F          	movff	postinc2,isSameAddress@a2
  6418  0006F6  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  6419  0006FA  ECBA  F039         	call	_isSameAddress	;wreg free
  6420  0006FE  0900               	iorlw	0
  6421  000700  E128               	bnz	l18064
  6422                           
  6423                           ; BSR set to: 0
  6424  000702  0101               	movlb	1	; () banked
  6425  000704  EE20 F004          	lfsr	2,4
  6426  000708  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6427  00070A  26D9               	addwf	fsr2l,f,c
  6428  00070C  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6429  00070E  22DA               	addwfc	fsr2h,f,c
  6430  000710  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  6431  000714  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  6432  000718  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  6433  00071C  0900               	iorlw	0
  6434  00071E  E119               	bnz	l18064
  6435                           
  6436                           ; BSR set to: 0
  6437  000720  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6438  000724  0900               	iorlw	0
  6439  000726  E17F               	bnz	l18088
  6440                           
  6441                           ; BSR set to: 1
  6442  000728  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
  6443  00072C  C07B  F07D         	movff	?_CoordinatorGenericAddress,isSameAddress@a1
  6444  000730  C07C  F07E         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a1+1
  6445  000734  0101               	movlb	1	; () banked
  6446  000736  EE20 F004          	lfsr	2,4
  6447  00073A  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6448  00073C  26D9               	addwf	fsr2l,f,c
  6449  00073E  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6450  000740  22DA               	addwfc	fsr2h,f,c
  6451  000742  CFDE F07F          	movff	postinc2,isSameAddress@a2
  6452  000746  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  6453  00074A  ECBA  F039         	call	_isSameAddress	;wreg free
  6454  00074E  0900               	iorlw	0
  6455  000750  E06A               	bz	l18088
  6456  000752                     l18064:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;NetworkBridge.c: 95: {
  6460                           ;NetworkBridge.c: 98: if( (dhdr->Hops>0) && ((isBroadcastAddress(dhdr->target) ) || ((is
      +                          Broadcast==1) && (NetworkGetDeviceType()==DeviceCoordinator) ) ))
  6461  000752  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6462  000756  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6463  00075A  50DF               	movf	indf2,w,c
  6464  00075C  E029               	bz	l18076
  6465                           
  6466                           ; BSR set to: 0
  6467  00075E  0101               	movlb	1	; () banked
  6468  000760  EE20 F004          	lfsr	2,4
  6469  000764  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6470  000766  26D9               	addwf	fsr2l,f,c
  6471  000768  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6472  00076A  22DA               	addwfc	fsr2h,f,c
  6473  00076C  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  6474  000770  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  6475  000774  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  6476  000778  0900               	iorlw	0
  6477  00077A  E107               	bnz	l18072
  6478                           
  6479                           ; BSR set to: 0
  6480  00077C  0101               	movlb	1	; () banked
  6481  00077E  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6482  000780  E117               	bnz	l18076
  6483                           
  6484                           ; BSR set to: 1
  6485  000782  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6486  000786  0900               	iorlw	0
  6487  000788  E113               	bnz	l18076
  6488  00078A                     l18072:
  6489                           
  6490                           ;NetworkBridge.c: 99: {
  6491                           ;NetworkBridge.c: 100: dhdr->Hops--;
  6492  00078A  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6493  00078E  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6494  000792  06DF               	decf	indf2,f,c
  6495                           
  6496                           ;NetworkBridge.c: 101: BroadcastManagerDelaySend(data,size,isSecure,0);
  6497  000794  C18A  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  6498  000798  C18B  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  6499  00079C  C18C  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  6500  0007A0  C18D  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  6501  0007A4  C190  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  6502  0007A8  0100               	movlb	0	; () banked
  6503  0007AA  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  6504  0007AC  ECAD  F01C         	call	_BroadcastManagerDelaySend	;wreg free
  6505  0007B0                     l18076:
  6506                           
  6507                           ;NetworkBridge.c: 102: }
  6508                           ;NetworkBridge.c: 103: if(isBroadcast==0)
  6509  0007B0  0101               	movlb	1	; () banked
  6510  0007B2  518F               	movf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6511  0007B4  E119               	bnz	l18084
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;NetworkBridge.c: 104: {
  6515                           ;NetworkBridge.c: 105: child=dhdr->origin;
  6516  0007B6  EE20 F006          	lfsr	2,6
  6517  0007BA  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6518  0007BC  26D9               	addwf	fsr2l,f,c
  6519  0007BE  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6520  0007C0  22DA               	addwfc	fsr2h,f,c
  6521  0007C2  CFDE F1A2          	movff	postinc2,radioReceivedPacket@child
  6522  0007C6  CFDD F1A3          	movff	postdec2,radioReceivedPacket@child+1
  6523                           
  6524                           ; BSR set to: 1
  6525                           ;NetworkBridge.c: 106: parent=source;
  6526  0007CA  C186  F1A4         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  6527  0007CE  C187  F1A5         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;NetworkBridge.c: 107: TunnelManagerSetTunnel(&child, &parent);
  6531  0007D2  0EA2               	movlw	low radioReceivedPacket@child
  6532  0007D4  0100               	movlb	0	; () banked
  6533  0007D6  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  6534  0007D8  0E01               	movlw	high radioReceivedPacket@child
  6535  0007DA  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  6536  0007DC  0EA4               	movlw	low radioReceivedPacket@parent
  6537  0007DE  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  6538  0007E0  0E01               	movlw	high radioReceivedPacket@parent
  6539  0007E2  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  6540  0007E4  ECD7  F011         	call	_TunnelManagerSetTunnel	;wreg free
  6541  0007E8                     l18084:
  6542                           
  6543                           ;NetworkBridge.c: 108: }
  6544                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  6545  0007E8  0101               	movlb	1	; () banked
  6546  0007EA  EE20 F004          	lfsr	2,4
  6547  0007EE  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6548  0007F0  26D9               	addwf	fsr2l,f,c
  6549  0007F2  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6550  0007F4  22DA               	addwfc	fsr2h,f,c
  6551  0007F6  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  6552  0007FA  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  6553  0007FE  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  6554  000802  0101               	movlb	1	; () banked
  6555  000804  6F99               	movwf	_radioReceivedPacket$5364& (0+255),b
  6556                           
  6557                           ; BSR set to: 1
  6558                           ;NetworkBridge.c: 108: }
  6559                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  6560  000806  C18A  F0DC         	movff	radioReceivedPacket@data,NetworkManagerProcessIncomingData@data
  6561  00080A  C18B  F0DD         	movff	radioReceivedPacket@data+1,NetworkManagerProcessIncomingData@data+1
  6562  00080E  C18C  F0DE         	movff	radioReceivedPacket@size,NetworkManagerProcessIncomingData@size
  6563  000812  C18D  F0DF         	movff	radioReceivedPacket@size+1,NetworkManagerProcessIncomingData@size+1
  6564  000816  C199  F0E0         	movff	_radioReceivedPacket$5364,NetworkManagerProcessIncomingData@isBroadcast
  6565  00081A  C190  F0E1         	movff	radioReceivedPacket@isSecure,NetworkManagerProcessIncomingData@isSecure
  6566  00081E  EC7C  F016         	call	_NetworkManagerProcessIncomingData	;wreg free
  6567                           
  6568                           ;NetworkBridge.c: 111: }else
  6569  000822  EF30  F03B         	goto	_radioDiscardPacket
  6570  000826                     l18088:
  6571                           
  6572                           ;NetworkBridge.c: 112: {
  6573                           ;NetworkBridge.c: 114: if(isBroadcast==1)
  6574  000826  0101               	movlb	1	; () banked
  6575  000828  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6576  00082A  E11C               	bnz	l18096
  6577                           
  6578                           ; BSR set to: 1
  6579                           ;NetworkBridge.c: 115: {
  6580                           ;NetworkBridge.c: 116: if(dhdr->Hops>0)
  6581  00082C  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6582  000830  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6583  000834  50DF               	movf	indf2,w,c
  6584  000836  E101 D16C          	bz	l18182
  6585                           
  6586                           ; BSR set to: 1
  6587                           ;NetworkBridge.c: 117: {
  6588                           ;NetworkBridge.c: 118: dhdr->Hops--;
  6589  00083A  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6590  00083E  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6591  000842  06DF               	decf	indf2,f,c
  6592  000844                     l18094:
  6593                           
  6594                           ;NetworkBridge.c: 119: BroadcastManagerDelaySend(data,size,isSecure,0);
  6595  000844  C18A  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  6596  000848  C18B  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  6597  00084C  C18C  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  6598  000850  C18D  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  6599  000854  C190  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  6600  000858  0100               	movlb	0	; () banked
  6601  00085A  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  6602  00085C  ECAD  F01C         	call	_BroadcastManagerDelaySend	;wreg free
  6603  000860  EF30  F03B         	goto	_radioDiscardPacket
  6604  000864                     l18096:
  6605                           
  6606                           ; BSR set to: 1
  6607  000864  EE20 F004          	lfsr	2,4
  6608  000868  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6609  00086A  26D9               	addwf	fsr2l,f,c
  6610  00086C  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6611  00086E  22DA               	addwfc	fsr2h,f,c
  6612  000870  CFDE F07D          	movff	postinc2,isSameAddress@a1
  6613  000874  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  6614  000878  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
  6615  00087C  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  6616  000880  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  6617  000884  ECBA  F039         	call	_isSameAddress	;wreg free
  6618  000888  06E8               	decf	wreg,f,c
  6619  00088A  E12B               	bnz	l18106
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;NetworkBridge.c: 122: {
  6623                           ;NetworkBridge.c: 124: child=dhdr->origin;
  6624  00088C  0101               	movlb	1	; () banked
  6625  00088E  EE20 F006          	lfsr	2,6
  6626  000892  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6627  000894  26D9               	addwf	fsr2l,f,c
  6628  000896  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6629  000898  22DA               	addwfc	fsr2h,f,c
  6630  00089A  CFDE F1A2          	movff	postinc2,radioReceivedPacket@child
  6631  00089E  CFDD F1A3          	movff	postdec2,radioReceivedPacket@child+1
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;NetworkBridge.c: 125: parent=source;
  6635  0008A2  C186  F1A4         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  6636  0008A6  C187  F1A5         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  6637                           
  6638                           ; BSR set to: 1
  6639                           ;NetworkBridge.c: 126: TunnelManagerSetTunnel(&child, &parent);
  6640  0008AA  0EA2               	movlw	low radioReceivedPacket@child
  6641  0008AC  0100               	movlb	0	; () banked
  6642  0008AE  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  6643  0008B0  0E01               	movlw	high radioReceivedPacket@child
  6644  0008B2  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  6645  0008B4  0EA4               	movlw	low radioReceivedPacket@parent
  6646  0008B6  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  6647  0008B8  0E01               	movlw	high radioReceivedPacket@parent
  6648  0008BA  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  6649  0008BC  ECD7  F011         	call	_TunnelManagerSetTunnel	;wreg free
  6650  0008C0                     l18104:
  6651                           
  6652                           ;NetworkBridge.c: 127: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
  6653  0008C0  C18A  F08A         	movff	radioReceivedPacket@data,TMSendFormedPacketTowardsCoordinator@data
  6654  0008C4  C18B  F08B         	movff	radioReceivedPacket@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  6655  0008C8  C18C  F08C         	movff	radioReceivedPacket@size,TMSendFormedPacketTowardsCoordinator@size
  6656  0008CC  C18D  F08D         	movff	radioReceivedPacket@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  6657  0008D0  0E01               	movlw	1
  6658  0008D2  0100               	movlb	0	; () banked
  6659  0008D4  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  6660  0008D6  C190  F08F         	movff	radioReceivedPacket@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  6661  0008DA  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  6662                           
  6663                           ;NetworkBridge.c: 128: }else
  6664  0008DE  EF30  F03B         	goto	_radioDiscardPacket
  6665  0008E2                     l18106:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;NetworkBridge.c: 129: {
  6669                           ;NetworkBridge.c: 138: if(dhdr->packettype==PacketRoutedData)
  6670  0008E2  0101               	movlb	1	; () banked
  6671  0008E4  EE20 F002          	lfsr	2,2
  6672  0008E8  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6673  0008EA  26D9               	addwf	fsr2l,f,c
  6674  0008EC  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6675  0008EE  22DA               	addwfc	fsr2h,f,c
  6676  0008F0  0E26               	movlw	38
  6677  0008F2  18DE               	xorwf	postinc2,w,c
  6678  0008F4  E125               	bnz	l1136
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;NetworkBridge.c: 139: {
  6682                           ;NetworkBridge.c: 142: child=dhdr->origin;
  6683  0008F6  EE20 F006          	lfsr	2,6
  6684  0008FA  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6685  0008FC  26D9               	addwf	fsr2l,f,c
  6686  0008FE  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6687  000900  22DA               	addwfc	fsr2h,f,c
  6688  000902  CFDE F1A2          	movff	postinc2,radioReceivedPacket@child
  6689  000906  CFDD F1A3          	movff	postdec2,radioReceivedPacket@child+1
  6690                           
  6691                           ; BSR set to: 1
  6692                           ;NetworkBridge.c: 143: parent=source;
  6693  00090A  C186  F1A4         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  6694  00090E  C187  F1A5         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  6695                           
  6696                           ; BSR set to: 1
  6697                           ;NetworkBridge.c: 144: TunnelManagerSetTunnel(&child, &parent);
  6698  000912  0EA2               	movlw	low radioReceivedPacket@child
  6699  000914  0100               	movlb	0	; () banked
  6700  000916  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  6701  000918  0E01               	movlw	high radioReceivedPacket@child
  6702  00091A  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  6703  00091C  0EA4               	movlw	low radioReceivedPacket@parent
  6704  00091E  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  6705  000920  0E01               	movlw	high radioReceivedPacket@parent
  6706  000922  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  6707  000924  ECD7  F011         	call	_TunnelManagerSetTunnel	;wreg free
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;NetworkBridge.c: 145: if(NetworkGetDeviceType()==DeviceCoordinator)
  6711  000928  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6712  00092C  0900               	iorlw	0
  6713  00092E  E108               	bnz	l1136
  6714                           
  6715                           ; BSR set to: 1
  6716                           ;NetworkBridge.c: 146: {
  6717                           ;NetworkBridge.c: 147: dhdr->packettype=PacketData;
  6718  000930  EE20 F002          	lfsr	2,2
  6719  000934  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6720  000936  26D9               	addwf	fsr2l,f,c
  6721  000938  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6722  00093A  22DA               	addwfc	fsr2h,f,c
  6723  00093C  0E23               	movlw	35
  6724  00093E  6EDF               	movwf	indf2,c
  6725  000940                     l1136:
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;NetworkBridge.c: 148: }
  6729                           ;NetworkBridge.c: 149: }
  6730                           ;NetworkBridge.c: 150: child=dhdr->target;
  6731  000940  EE20 F004          	lfsr	2,4
  6732  000944  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6733  000946  26D9               	addwf	fsr2l,f,c
  6734  000948  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6735  00094A  22DA               	addwfc	fsr2h,f,c
  6736  00094C  CFDE F1A2          	movff	postinc2,radioReceivedPacket@child
  6737  000950  CFDD F1A3          	movff	postdec2,radioReceivedPacket@child+1
  6738                           
  6739                           ; BSR set to: 1
  6740                           ;NetworkBridge.c: 151: if(DeviceManagerGetDeviceType(child)==DeviceSleepingRFD)
  6741  000954  C1A2  F081         	movff	radioReceivedPacket@child,DeviceManagerGetDeviceType@address
  6742  000958  C1A3  F082         	movff	radioReceivedPacket@child+1,DeviceManagerGetDeviceType@address+1
  6743  00095C  EC14  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  6744  000960  0A02               	xorlw	2
  6745  000962  E114               	bnz	l18122
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;NetworkBridge.c: 152: {
  6749                           ;NetworkBridge.c: 154: DeviceManagerBufferDeviceData(child,data,size,isSecure,1);
  6750  000964  C1A2  F07F         	movff	radioReceivedPacket@child,DeviceManagerBufferDeviceData@address
  6751  000968  C1A3  F080         	movff	radioReceivedPacket@child+1,DeviceManagerBufferDeviceData@address+1
  6752  00096C  C18A  F081         	movff	radioReceivedPacket@data,DeviceManagerBufferDeviceData@data
  6753  000970  C18B  F082         	movff	radioReceivedPacket@data+1,DeviceManagerBufferDeviceData@data+1
  6754  000974  C18C  F083         	movff	radioReceivedPacket@size,DeviceManagerBufferDeviceData@size
  6755  000978  C18D  F084         	movff	radioReceivedPacket@size+1,DeviceManagerBufferDeviceData@size+1
  6756  00097C  C190  F085         	movff	radioReceivedPacket@isSecure,DeviceManagerBufferDeviceData@isSecure
  6757  000980  0E01               	movlw	1
  6758  000982  6F86               	movwf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  6759  000984  ECF4  F03A         	call	_DeviceManagerBufferDeviceData	;wreg free
  6760                           
  6761                           ;NetworkBridge.c: 155: }else
  6762  000988  EF30  F03B         	goto	_radioDiscardPacket
  6763  00098C                     l18122:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;NetworkBridge.c: 156: {
  6767                           ;NetworkBridge.c: 157: parent = TunnelManagerGetTunnel(child);
  6768  00098C  C1A2  F0AB         	movff	radioReceivedPacket@child,TunnelManagerGetTunnel@device
  6769  000990  C1A3  F0AC         	movff	radioReceivedPacket@child+1,TunnelManagerGetTunnel@device+1
  6770  000994  ECA7  F01F         	call	_TunnelManagerGetTunnel	;wreg free
  6771  000998  C0AB  F1A4         	movff	?_TunnelManagerGetTunnel,radioReceivedPacket@parent
  6772  00099C  C0AC  F1A5         	movff	?_TunnelManagerGetTunnel+1,radioReceivedPacket@parent+1
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;NetworkBridge.c: 158: if(isBroadcastAddress(parent)==1)
  6776  0009A0  C1A4  F07B         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  6777  0009A4  C1A5  F07C         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  6778  0009A8  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  6779  0009AC  06E8               	decf	wreg,f,c
  6780  0009AE  E17C               	bnz	l18168
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;NetworkBridge.c: 159: {
  6784                           ;NetworkBridge.c: 160: if(dhdr->packettype==PacketRoutedData)
  6785  0009B0  0101               	movlb	1	; () banked
  6786  0009B2  EE20 F002          	lfsr	2,2
  6787  0009B6  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6788  0009B8  26D9               	addwf	fsr2l,f,c
  6789  0009BA  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6790  0009BC  22DA               	addwfc	fsr2h,f,c
  6791  0009BE  0E26               	movlw	38
  6792  0009C0  18DE               	xorwf	postinc2,w,c
  6793  0009C2  E001 D0A0          	bnz	l18178
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;NetworkBridge.c: 161: {
  6797                           ;NetworkBridge.c: 162: parent=GetRouteAddressOfChild(dhdr->target);
  6798  0009C6  EE20 F004          	lfsr	2,4
  6799  0009CA  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6800  0009CC  26D9               	addwf	fsr2l,f,c
  6801  0009CE  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6802  0009D0  22DA               	addwfc	fsr2h,f,c
  6803  0009D2  CFDE F08B          	movff	postinc2,GetRouteAddressOfChild@child
  6804  0009D6  CFDD F08C          	movff	postdec2,GetRouteAddressOfChild@child+1
  6805  0009DA  EC4E  F034         	call	_GetRouteAddressOfChild	;wreg free
  6806  0009DE  C08B  F1A4         	movff	?_GetRouteAddressOfChild,radioReceivedPacket@parent
  6807  0009E2  C08C  F1A5         	movff	?_GetRouteAddressOfChild+1,radioReceivedPacket@parent+1
  6808                           
  6809                           ;NetworkBridge.c: 163: if(isBroadcastAddress(parent)==0)
  6810  0009E6  C1A4  F07B         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  6811  0009EA  C1A5  F07C         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  6812  0009EE  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  6813  0009F2  0900               	iorlw	0
  6814  0009F4  E145               	bnz	l18154
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;NetworkBridge.c: 164: {
  6818                           ;NetworkBridge.c: 166: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  6819  0009F6  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6820  0009FA  0900               	iorlw	0
  6821  0009FC  E00F               	bz	l18138
  6822                           
  6823                           ; BSR set to: 1
  6824  0009FE  C1A4  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  6825  000A02  C1A5  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  6826  000A06  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
  6827  000A0A  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  6828  000A0E  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  6829  000A12  ECBA  F039         	call	_isSameAddress	;wreg free
  6830  000A16  0900               	iorlw	0
  6831  000A18  E001 D752          	bnz	l18104
  6832  000A1C                     l18138:
  6833                           
  6834                           ;NetworkBridge.c: 170: {
  6835                           ;NetworkBridge.c: 171: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  6836  000A1C  C1A4  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  6837  000A20  C1A5  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  6838  000A24  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
  6839  000A28  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  6840  000A2C  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  6841  000A30  C18A  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  6842  000A34  C18B  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  6843  000A38  C18C  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  6844  000A3C  C190  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  6845  000A40  ECD3  F035         	call	_radioUnicast	;wreg free
  6846  000A44  0900               	iorlw	0
  6847  000A46  E165               	bnz	l18182
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;NetworkBridge.c: 172: {
  6851                           ;NetworkBridge.c: 173: LE_RemoveNeighborDevice(parent);
  6852  000A48  C1A4  F097         	movff	radioReceivedPacket@parent,LE_RemoveNeighborDevice@device
  6853  000A4C  C1A5  F098         	movff	radioReceivedPacket@parent+1,LE_RemoveNeighborDevice@device+1
  6854  000A50  EC29  F033         	call	_LE_RemoveNeighborDevice	;wreg free
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;NetworkBridge.c: 174: if(isSameAddress(dhdr->target,parent)==1)
  6858  000A54  0101               	movlb	1	; () banked
  6859  000A56  EE20 F004          	lfsr	2,4
  6860  000A5A  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6861  000A5C  26D9               	addwf	fsr2l,f,c
  6862  000A5E  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6863  000A60  22DA               	addwfc	fsr2h,f,c
  6864  000A62  CFDE F07D          	movff	postinc2,isSameAddress@a1
  6865  000A66  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  6866  000A6A  C1A4  F07F         	movff	radioReceivedPacket@parent,isSameAddress@a2
  6867  000A6E  C1A5  F080         	movff	radioReceivedPacket@parent+1,isSameAddress@a2+1
  6868  000A72  ECBA  F039         	call	_isSameAddress	;wreg free
  6869  000A76  06E8               	decf	wreg,f,c
  6870  000A78  E14C               	bnz	l18182
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;NetworkBridge.c: 175: {
  6874                           ;NetworkBridge.c: 178: if(NetworkGetDeviceType()==DeviceCoordinator)
  6875  000A7A  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6876  000A7E  D002               	goto	L15
  6877  000A80                     l18154:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;NetworkBridge.c: 193: {
  6881                           ;NetworkBridge.c: 195: if(NetworkGetDeviceType()==DeviceCoordinator)
  6882  000A80  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6883  000A84                     L15:
  6884  000A84  0900               	iorlw	0
  6885  000A86  E001 D71B          	bnz	l18104
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;NetworkBridge.c: 196: {
  6889                           ;NetworkBridge.c: 198: dhdr->Hops=20;
  6890  000A8A  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6891  000A8E  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6892  000A92  0E14               	movlw	20
  6893  000A94  6EDF               	movwf	indf2,c
  6894                           
  6895                           ; BSR set to: 1
  6896                           ;NetworkBridge.c: 199: dhdr->packettype=PacketData;
  6897  000A96  EE20 F002          	lfsr	2,2
  6898  000A9A  51A6               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6899  000A9C  26D9               	addwf	fsr2l,f,c
  6900  000A9E  51A7               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6901  000AA0  22DA               	addwfc	fsr2h,f,c
  6902  000AA2  0E23               	movlw	35
  6903  000AA4                     L2:
  6904  000AA4  6EDF               	movwf	indf2,c
  6905  000AA6  D6CE               	goto	l18094
  6906  000AA8                     l18168:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;NetworkBridge.c: 213: {
  6910                           ;NetworkBridge.c: 215: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  6911  000AA8  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  6912  000AAC  0900               	iorlw	0
  6913  000AAE  E00F               	bz	l18174
  6914                           
  6915                           ; BSR set to: 1
  6916  000AB0  C1A4  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  6917  000AB4  C1A5  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  6918  000AB8  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
  6919  000ABC  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  6920  000AC0  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  6921  000AC4  ECBA  F039         	call	_isSameAddress	;wreg free
  6922  000AC8  0900               	iorlw	0
  6923  000ACA  E001 D6F9          	bnz	l18104
  6924  000ACE                     l18174:
  6925                           
  6926                           ;NetworkBridge.c: 219: {
  6927                           ;NetworkBridge.c: 220: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  6928  000ACE  C1A4  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  6929  000AD2  C1A5  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  6930  000AD6  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
  6931  000ADA  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  6932  000ADE  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  6933  000AE2  C18A  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  6934  000AE6  C18B  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  6935  000AEA  C18C  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  6936  000AEE  C190  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  6937  000AF2  ECD3  F035         	call	_radioUnicast	;wreg free
  6938  000AF6  0900               	iorlw	0
  6939  000AF8  E10C               	bnz	l18182
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;NetworkBridge.c: 221: {
  6943                           ;NetworkBridge.c: 222: TunnelManagerInvalidateTunnel(child);
  6944  000AFA  C1A2  F081         	movff	radioReceivedPacket@child,TunnelManagerInvalidateTunnel@device
  6945  000AFE  C1A3  F082         	movff	radioReceivedPacket@child+1,TunnelManagerInvalidateTunnel@device+1
  6946  000B02  EC42  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
  6947  000B06                     l18178:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;NetworkBridge.c: 223: dhdr->Hops=20;
  6951  000B06  C1A6  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6952  000B0A  C1A7  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6953  000B0E  0E14               	movlw	20
  6954  000B10  D7C9               	goto	L2
  6955  000B12                     l18182:
  6956                           
  6957                           ;NetworkBridge.c: 225: }
  6958                           ;NetworkBridge.c: 226: }
  6959                           ;NetworkBridge.c: 227: }
  6960                           ;NetworkBridge.c: 228: }
  6961                           ;NetworkBridge.c: 229: }
  6962                           ;NetworkBridge.c: 230: }
  6963                           ;NetworkBridge.c: 231: }
  6964                           ;NetworkBridge.c: 232: }
  6965                           ;NetworkBridge.c: 233: }
  6966                           ;NetworkBridge.c: 234: radioDiscardPacket();
  6967  000B12  EF30  F03B         	goto	_radioDiscardPacket	;wreg free
  6968  000B16                     __end_of_radioReceivedPacket:
  6969                           	opt stack 0
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           intcon	equ	0xFF2
  6977                           postinc0	equ	0xFEE
  6978                           wreg	equ	0xFE8
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _radioDiscardPacket *****************
  6990 ;; Defined at:
  6991 ;;		line 143 in file "../src/Bridge.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : E/0
  7002 ;;		On exit  : E/0
  7003 ;;		Unchanged: E/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    6
  7012 ;; This function calls:
  7013 ;;		_MiMAC_DiscardPacket
  7014 ;; This function is called by:
  7015 ;;		_radioReceivedPacket
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text14
  7020  007660                     __ptext14:
  7021                           	opt stack 0
  7022  007660                     _radioDiscardPacket:
  7023                           	opt stack 21
  7024                           
  7025                           ;Bridge.c: 145: MiMAC_DiscardPacket();
  7026                           
  7027                           ;incstack = 0
  7028  007660  EF10  F03A         	goto	_MiMAC_DiscardPacket	;wreg free
  7029  007664                     __end_of_radioDiscardPacket:
  7030                           	opt stack 0
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           postinc0	equ	0xFEE
  7039                           wreg	equ	0xFE8
  7040                           postdec1	equ	0xFE5
  7041                           fsr1h	equ	0xFE2
  7042                           fsr1l	equ	0xFE1
  7043                           indf2	equ	0xFDF
  7044                           postinc2	equ	0xFDE
  7045                           postdec2	equ	0xFDD
  7046                           fsr2h	equ	0xFDA
  7047                           fsr2l	equ	0xFD9
  7048                           status	equ	0xFD8
  7049                           
  7050 ;; *************** function _MiMAC_DiscardPacket *****************
  7051 ;; Defined at:
  7052 ;;		line 1131 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7061 ;; Tracked objects:
  7062 ;;		On entry : E/0
  7063 ;;		On exit  : E/0
  7064 ;;		Unchanged: E/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    5
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_radioDiscardPacket
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text15
  7081  007420                     __ptext15:
  7082                           	opt stack 0
  7083  007420                     _MiMAC_DiscardPacket:
  7084                           	opt stack 21
  7085                           
  7086                           ;drv_mrf_miwi_mesh_89xa.c: 1133: if( ReceivedBankIndex < 2 )
  7087                           
  7088                           ;incstack = 0
  7089  007420  0E02               	movlw	2
  7090  007422  603F               	cpfslt	_ReceivedBankIndex,c
  7091  007424  0C02               	retlw	2
  7092                           
  7093                           ;drv_mrf_miwi_mesh_89xa.c: 1134: {
  7094                           ;drv_mrf_miwi_mesh_89xa.c: 1135: RxPacket[ReceivedBankIndex].flags.Val = 0;
  7095  007426  503F               	movf	_ReceivedBankIndex,w,c
  7096  007428  0D47               	mullw	71
  7097  00742A  0E1E               	movlw	low _RxPacket
  7098  00742C  24F3               	addwf	prodl,w,c
  7099  00742E  6ED9               	movwf	fsr2l,c
  7100  007430  0E03               	movlw	high _RxPacket
  7101  007432  20F4               	addwfc	prodh,w,c
  7102  007434  6EDA               	movwf	fsr2h,c
  7103  007436  0E00               	movlw	0
  7104  007438  6ADF               	clrf	indf2,c
  7105                           
  7106                           ;drv_mrf_miwi_mesh_89xa.c: 1136: ReceivedBankIndex = 0xFF;
  7107  00743A  683F               	setf	_ReceivedBankIndex,c
  7108  00743C  0012               	return		;funcret
  7109  00743E                     __end_of_MiMAC_DiscardPacket:
  7110                           	opt stack 0
  7111                           tblptru	equ	0xFF8
  7112                           tblptrh	equ	0xFF7
  7113                           tblptrl	equ	0xFF6
  7114                           tablat	equ	0xFF5
  7115                           prodh	equ	0xFF4
  7116                           prodl	equ	0xFF3
  7117                           intcon	equ	0xFF2
  7118                           postinc0	equ	0xFEE
  7119                           wreg	equ	0xFE8
  7120                           postdec1	equ	0xFE5
  7121                           fsr1h	equ	0xFE2
  7122                           fsr1l	equ	0xFE1
  7123                           indf2	equ	0xFDF
  7124                           postinc2	equ	0xFDE
  7125                           postdec2	equ	0xFDD
  7126                           fsr2h	equ	0xFDA
  7127                           fsr2l	equ	0xFD9
  7128                           status	equ	0xFD8
  7129                           
  7130 ;; *************** function _isKnownPacket *****************
  7131 ;; Defined at:
  7132 ;;		line 17 in file "../Cache.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  hash            4   75[BANK0 ] unsigned long 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  zeros          12   85[BANK0 ] unsigned char [12]
  7137 ;;  OldestTick      8  104[BANK0 ] struct TickMS_t_def
  7138 ;;  i               2  112[BANK0 ] unsigned int 
  7139 ;;  emptyindex      2  102[BANK0 ] unsigned int 
  7140 ;;  index           2  100[BANK0 ] unsigned int 
  7141 ;;  oldestindex     2   98[BANK0 ] unsigned int 
  7142 ;;  unknown         1   97[BANK0 ] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      unsigned char 
  7145 ;; Registers used:
  7146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : F/0
  7149 ;;		On exit  : F/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;Total ram usage:       39 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    9
  7159 ;; This function calls:
  7160 ;;		_MSTickGet
  7161 ;;		_MSTickGetDiffNow
  7162 ;;		_memcmp
  7163 ;;		_memset
  7164 ;; This function is called by:
  7165 ;;		_radioReceivedPacket
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text16
  7170  002140                     __ptext16:
  7171                           	opt stack 0
  7172  002140                     _isKnownPacket:
  7173                           	opt stack 18
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;Cache.c: 19: uint16_t i;
  7177                           ;Cache.c: 20: uint16_t oldestindex=0xffff;
  7178                           
  7179                           ;incstack = 0
  7180  002140  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  7181  002142  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  7182                           
  7183                           ;Cache.c: 21: uint16_t emptyindex=0xffff;
  7184  002144  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  7185  002146  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;Cache.c: 23: bool unknown=1;
  7189  002148  0E01               	movlw	1
  7190  00214A  6FC1               	movwf	isKnownPacket@unknown& (0+255),b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;Cache.c: 24: uint8_t zeros[sizeof(HashCache_t)];;
  7194                           ;Cache.c: 26: TickMS OldestTick;
  7195                           ;Cache.c: 28: memset(&OldestTick,0xff,sizeof(OldestTick));
  7196  00214C  0EC8               	movlw	low isKnownPacket@OldestTick
  7197  00214E  6F73               	movwf	memset@p1& (0+255),b
  7198  002150  6B74               	clrf	(memset@p1+1)& (0+255),b
  7199  002152  6B76               	clrf	(memset@c+1)& (0+255),b
  7200  002154  6975               	setf	memset@c& (0+255),b
  7201  002156  6B78               	clrf	(memset@n+1)& (0+255),b
  7202  002158  0E08               	movlw	8
  7203  00215A  6F77               	movwf	memset@n& (0+255),b
  7204  00215C  EC2F  F039         	call	_memset	;wreg free
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;Cache.c: 29: memset(zeros,0x00,sizeof(zeros));
  7208  002160  0EB5               	movlw	low isKnownPacket@zeros
  7209  002162  6F73               	movwf	memset@p1& (0+255),b
  7210  002164  6B74               	clrf	(memset@p1+1)& (0+255),b
  7211  002166  6B76               	clrf	(memset@c+1)& (0+255),b
  7212  002168  6B75               	clrf	memset@c& (0+255),b
  7213  00216A  6B78               	clrf	(memset@n+1)& (0+255),b
  7214  00216C  0E0C               	movlw	12
  7215  00216E  6F77               	movwf	memset@n& (0+255),b
  7216  002170  EC2F  F039         	call	_memset	;wreg free
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;Cache.c: 31: for(i=0;i<30;i++)
  7220  002174  6BD0               	clrf	isKnownPacket@i& (0+255),b
  7221  002176  6BD1               	clrf	(isKnownPacket@i+1)& (0+255),b
  7222  002178                     l17288:
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;Cache.c: 32: {
  7226                           ;Cache.c: 33: if(((OldestTick.msb>hc_table[i].RxTimeMs.msb) || ((OldestTick.msb==hc_tabl
      +                          e[i].RxTimeMs.msb) && (OldestTick.lsb>=hc_table[i].RxTimeMs.lsb) ) )==1)
  7227  002178  0E0C               	movlw	12
  7228  00217A  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7229  00217C  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7230  002180  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7231  002184  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7232  002186  50F3               	movf	prodl,w,c
  7233  002188  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7234  00218A  0EA0               	movlw	low (_hc_table+8)
  7235  00218C  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7236  00218E  6ED9               	movwf	fsr2l,c
  7237  002190  0E0A               	movlw	high (_hc_table+8)
  7238  002192  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7239  002194  6EDA               	movwf	fsr2h,c
  7240  002196  51CC               	movf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7241  002198  5CDE               	subwf	postinc2,w,c
  7242  00219A  51CD               	movf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7243  00219C  58DE               	subwfb	postinc2,w,c
  7244  00219E  51CE               	movf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7245  0021A0  58DE               	subwfb	postinc2,w,c
  7246  0021A2  51CF               	movf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7247  0021A4  58DE               	subwfb	postinc2,w,c
  7248  0021A6  E333               	bnc	l17294
  7249                           
  7250                           ; BSR set to: 0
  7251  0021A8  0E0C               	movlw	12
  7252  0021AA  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7253  0021AC  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7254  0021B0  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7255  0021B4  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7256  0021B6  50F3               	movf	prodl,w,c
  7257  0021B8  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7258  0021BA  0EA0               	movlw	low (_hc_table+8)
  7259  0021BC  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7260  0021BE  6ED9               	movwf	fsr2l,c
  7261  0021C0  0E0A               	movlw	high (_hc_table+8)
  7262  0021C2  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7263  0021C4  6EDA               	movwf	fsr2h,c
  7264  0021C6  50DE               	movf	postinc2,w,c
  7265  0021C8  19CC               	xorwf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7266  0021CA  E13B               	bnz	l17298
  7267  0021CC  50DE               	movf	postinc2,w,c
  7268  0021CE  19CD               	xorwf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7269  0021D0  E138               	bnz	l17298
  7270  0021D2  50DE               	movf	postinc2,w,c
  7271  0021D4  19CE               	xorwf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7272  0021D6  E135               	bnz	l17298
  7273  0021D8  50DE               	movf	postinc2,w,c
  7274  0021DA  19CF               	xorwf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7275  0021DC  E132               	bnz	l17298
  7276                           
  7277                           ; BSR set to: 0
  7278  0021DE  0E0C               	movlw	12
  7279  0021E0  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7280  0021E2  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7281  0021E6  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7282  0021EA  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7283  0021EC  50F3               	movf	prodl,w,c
  7284  0021EE  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7285  0021F0  0E9C               	movlw	low (_hc_table+4)
  7286  0021F2  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7287  0021F4  6ED9               	movwf	fsr2l,c
  7288  0021F6  0E0A               	movlw	high (_hc_table+4)
  7289  0021F8  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7290  0021FA  6EDA               	movwf	fsr2h,c
  7291  0021FC  50DE               	movf	postinc2,w,c
  7292  0021FE  5DC8               	subwf	isKnownPacket@OldestTick& (0+255),w,b
  7293  002200  50DE               	movf	postinc2,w,c
  7294  002202  59C9               	subwfb	(isKnownPacket@OldestTick+1)& (0+255),w,b
  7295  002204  50DE               	movf	postinc2,w,c
  7296  002206  59CA               	subwfb	(isKnownPacket@OldestTick+2)& (0+255),w,b
  7297  002208  50DE               	movf	postinc2,w,c
  7298  00220A  59CB               	subwfb	(isKnownPacket@OldestTick+3)& (0+255),w,b
  7299  00220C  E31A               	bnc	l17298
  7300  00220E                     l17294:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;Cache.c: 34: {
  7304                           ;Cache.c: 35: OldestTick=hc_table[i].RxTimeMs;
  7305  00220E  0E0C               	movlw	12
  7306  002210  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7307  002212  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7308  002216  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7309  00221A  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7310  00221C  50F3               	movf	prodl,w,c
  7311  00221E  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7312  002220  0E9C               	movlw	low (_hc_table+4)
  7313  002222  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7314  002224  6ED9               	movwf	fsr2l,c
  7315  002226  0E0A               	movlw	high (_hc_table+4)
  7316  002228  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7317  00222A  6EDA               	movwf	fsr2h,c
  7318  00222C  EE10  F0C8         	lfsr	1,isKnownPacket@OldestTick
  7319  002230  0E07               	movlw	7
  7320  002232                     u20551:
  7321  002232  CFDB FFE3          	movff	plusw2,plusw1
  7322  002236  06E8               	decf	wreg,f,c
  7323  002238  E2FC               	bc	u20551
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;Cache.c: 36: oldestindex=i;
  7327  00223A  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  7328  00223E  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  7329  002242                     l17298:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;Cache.c: 37: }
  7333                           ;Cache.c: 38: if((emptyindex==0xffff) && (memcmp((uint8_t*)&hc_table[i],zeros,sizeof(zer
      +                          os))==0) )
  7334  002242  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  7335  002244  E120               	bnz	l17304
  7336  002246  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  7337  002248  E11E               	bnz	l17304
  7338                           
  7339                           ; BSR set to: 0
  7340  00224A  0E0C               	movlw	12
  7341  00224C  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7342  00224E  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7343  002252  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7344  002256  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7345  002258  50F3               	movf	prodl,w,c
  7346  00225A  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7347  00225C  0E98               	movlw	low _hc_table
  7348  00225E  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7349  002260  6F73               	movwf	memcmp@s1& (0+255),b
  7350  002262  0E0A               	movlw	high _hc_table
  7351  002264  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7352  002266  6F74               	movwf	(memcmp@s1+1)& (0+255),b
  7353  002268  0EB5               	movlw	low isKnownPacket@zeros
  7354  00226A  6F75               	movwf	memcmp@s2& (0+255),b
  7355  00226C  6B76               	clrf	(memcmp@s2+1)& (0+255),b
  7356  00226E  6B78               	clrf	(memcmp@n+1)& (0+255),b
  7357  002270  0E0C               	movlw	12
  7358  002272  6F77               	movwf	memcmp@n& (0+255),b
  7359  002274  ECFE  F034         	call	_memcmp	;wreg free
  7360  002278  5173               	movf	?_memcmp& (0+255),w,b
  7361  00227A  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
  7362  00227C  E104               	bnz	l17304
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;Cache.c: 39: {
  7366                           ;Cache.c: 40: emptyindex=i;
  7367  00227E  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  7368  002282  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  7369  002286                     l17304:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;Cache.c: 41: }
  7373                           ;Cache.c: 42: if( hc_table[i].Hash==hash )
  7374  002286  0E0C               	movlw	12
  7375  002288  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7376  00228A  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7377  00228E  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7378  002292  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7379  002294  50F3               	movf	prodl,w,c
  7380  002296  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7381  002298  0E98               	movlw	low _hc_table
  7382  00229A  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7383  00229C  6ED9               	movwf	fsr2l,c
  7384  00229E  0E0A               	movlw	high _hc_table
  7385  0022A0  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7386  0022A2  6EDA               	movwf	fsr2h,c
  7387  0022A4  51AB               	movf	isKnownPacket@hash& (0+255),w,b
  7388  0022A6  18DE               	xorwf	postinc2,w,c
  7389  0022A8  E138               	bnz	l17310
  7390  0022AA  51AC               	movf	(isKnownPacket@hash+1)& (0+255),w,b
  7391  0022AC  18DE               	xorwf	postinc2,w,c
  7392  0022AE  E135               	bnz	l17310
  7393  0022B0  51AD               	movf	(isKnownPacket@hash+2)& (0+255),w,b
  7394  0022B2  18DE               	xorwf	postinc2,w,c
  7395  0022B4  E132               	bnz	l17310
  7396  0022B6  51AE               	movf	(isKnownPacket@hash+3)& (0+255),w,b
  7397  0022B8  18DE               	xorwf	postinc2,w,c
  7398  0022BA  E12F               	bnz	l17310
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;Cache.c: 43: {
  7402                           ;Cache.c: 44: if(MSTickGetDiffNow(hc_table[i].RxTimeMs)<((SPAN)2*1000ULL))
  7403  0022BC  0E0C               	movlw	12
  7404  0022BE  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7405  0022C0  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7406  0022C4  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7407  0022C8  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7408  0022CA  50F3               	movf	prodl,w,c
  7409  0022CC  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7410  0022CE  0E9C               	movlw	low (_hc_table+4)
  7411  0022D0  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7412  0022D2  6ED9               	movwf	fsr2l,c
  7413  0022D4  0E0A               	movlw	high (_hc_table+4)
  7414  0022D6  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7415  0022D8  6EDA               	movwf	fsr2h,c
  7416  0022DA  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
  7417  0022DE  0E07               	movlw	7
  7418  0022E0                     u20591:
  7419  0022E0  CFDB FFEB          	movff	plusw2,plusw0
  7420  0022E4  06E8               	decf	wreg,f,c
  7421  0022E6  E2FC               	bc	u20591
  7422  0022E8  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
  7423  0022EC  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
  7424  0022EE  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
  7425  0022F0  E10F               	bnz	l1710
  7426  0022F2  0ED0               	movlw	208
  7427  0022F4  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
  7428  0022F6  0E07               	movlw	7
  7429  0022F8  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
  7430  0022FA  E20A               	bc	l1710
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;Cache.c: 45: {
  7434                           ;Cache.c: 46: emptyindex=i;
  7435  0022FC  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  7436  002300  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  7437                           
  7438                           ;Cache.c: 47: oldestindex=i;
  7439  002304  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  7440  002308  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  7441                           
  7442                           ;Cache.c: 48: unknown=0;
  7443  00230C  6BC1               	clrf	isKnownPacket@unknown& (0+255),b
  7444                           
  7445                           ;Cache.c: 49: }else
  7446  00230E  D00D               	goto	l17314
  7447  002310                     l1710:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;Cache.c: 50: {
  7451                           ;Cache.c: 51: emptyindex=0xffff;
  7452  002310  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  7453  002312  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  7454                           
  7455                           ;Cache.c: 52: oldestindex=0xffff;
  7456  002314  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  7457  002316  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  7458  002318  D008               	goto	l17314
  7459  00231A                     l17310:
  7460                           
  7461                           ; BSR set to: 0
  7462  00231A  4BD0               	infsnz	isKnownPacket@i& (0+255),f,b
  7463  00231C  2BD1               	incf	(isKnownPacket@i+1)& (0+255),f,b
  7464                           
  7465                           ; BSR set to: 0
  7466  00231E  51D1               	movf	(isKnownPacket@i+1)& (0+255),w,b
  7467  002320  E104               	bnz	u20610
  7468  002322  0E1E               	movlw	30
  7469  002324  5DD0               	subwf	isKnownPacket@i& (0+255),w,b
  7470  002326  E201 D727          	bnc	l17288
  7471  00232A                     u20610:
  7472  00232A                     l17314:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;Cache.c: 55: }
  7476                           ;Cache.c: 56: }
  7477                           ;Cache.c: 57: if(emptyindex!=0xffff)
  7478  00232A  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  7479  00232C  E102               	bnz	u20620
  7480  00232E  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  7481  002330  E005               	bz	l1712
  7482  002332                     u20620:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;Cache.c: 58: {
  7486                           ;Cache.c: 59: index=emptyindex;
  7487  002332  C0C6  F0C4         	movff	isKnownPacket@emptyindex,isKnownPacket@index
  7488  002336  C0C7  F0C5         	movff	isKnownPacket@emptyindex+1,isKnownPacket@index+1
  7489                           
  7490                           ;Cache.c: 60: }else
  7491  00233A  D004               	goto	l17318
  7492  00233C                     l1712:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;Cache.c: 61: {
  7496                           ;Cache.c: 62: index=oldestindex;
  7497  00233C  C0C2  F0C4         	movff	isKnownPacket@oldestindex,isKnownPacket@index
  7498  002340  C0C3  F0C5         	movff	isKnownPacket@oldestindex+1,isKnownPacket@index+1
  7499  002344                     l17318:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;Cache.c: 63: }
  7503                           ;Cache.c: 64: if(index!=0xffff)
  7504  002344  29C4               	incf	isKnownPacket@index& (0+255),w,b
  7505  002346  E102               	bnz	u20630
  7506  002348  29C5               	incf	(isKnownPacket@index+1)& (0+255),w,b
  7507  00234A  E02D               	bz	l17324
  7508  00234C                     u20630:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;Cache.c: 65: {
  7512                           ;Cache.c: 66: hc_table[index].Hash=hash;
  7513  00234C  0E0C               	movlw	12
  7514  00234E  03C4               	mulwf	isKnownPacket@index& (0+255),b
  7515  002350  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7516  002354  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7517  002358  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  7518  00235A  50F3               	movf	prodl,w,c
  7519  00235C  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7520  00235E  0E98               	movlw	low _hc_table
  7521  002360  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7522  002362  6ED9               	movwf	fsr2l,c
  7523  002364  0E0A               	movlw	high _hc_table
  7524  002366  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7525  002368  6EDA               	movwf	fsr2h,c
  7526  00236A  C0AB  FFDE         	movff	isKnownPacket@hash,postinc2
  7527  00236E  C0AC  FFDE         	movff	isKnownPacket@hash+1,postinc2
  7528  002372  C0AD  FFDE         	movff	isKnownPacket@hash+2,postinc2
  7529  002376  C0AE  FFDE         	movff	isKnownPacket@hash+3,postinc2
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;Cache.c: 67: hc_table[index].RxTimeMs=MSTickGet();
  7533  00237A  EC4F  F038         	call	_MSTickGet	;wreg free
  7534  00237E  0E0C               	movlw	12
  7535  002380  03C4               	mulwf	isKnownPacket@index& (0+255),b
  7536  002382  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7537  002386  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7538  00238A  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  7539  00238C  50F3               	movf	prodl,w,c
  7540  00238E  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7541  002390  0E9C               	movlw	low (_hc_table+4)
  7542  002392  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7543  002394  6ED9               	movwf	fsr2l,c
  7544  002396  0E0A               	movlw	high (_hc_table+4)
  7545  002398  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7546  00239A  6EDA               	movwf	fsr2h,c
  7547  00239C  0E07               	movlw	7
  7548  00239E                     u20641:
  7549  00239E  CFEB FFDB          	movff	plusw0,plusw2
  7550  0023A2  06E8               	decf	wreg,f,c
  7551  0023A4  E2FC               	bc	u20641
  7552  0023A6                     l17324:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;Cache.c: 68: }
  7556                           ;Cache.c: 69: return(!unknown);
  7557  0023A6  51C1               	movf	isKnownPacket@unknown& (0+255),w,b
  7558  0023A8  B4D8               	btfsc	status,2,c
  7559  0023AA  0C01               	retlw	1
  7560                           
  7561                           ; BSR set to: 0
  7562  0023AC  0C00               	retlw	0	;funcret
  7563  0023AE                     __end_of_isKnownPacket:
  7564                           	opt stack 0
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           postinc0	equ	0xFEE
  7573                           plusw0	equ	0xFEB
  7574                           wreg	equ	0xFE8
  7575                           postdec1	equ	0xFE5
  7576                           plusw1	equ	0xFE3
  7577                           fsr1h	equ	0xFE2
  7578                           fsr1l	equ	0xFE1
  7579                           indf2	equ	0xFDF
  7580                           postinc2	equ	0xFDE
  7581                           postdec2	equ	0xFDD
  7582                           plusw2	equ	0xFDB
  7583                           fsr2h	equ	0xFDA
  7584                           fsr2l	equ	0xFD9
  7585                           status	equ	0xFD8
  7586                           
  7587 ;; *************** function _crc32 *****************
  7588 ;; Defined at:
  7589 ;;		line 52 in file "../CRC32.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  crc             4   19[BANK0 ] unsigned long 
  7592 ;;  buf             2   23[BANK0 ] PTR unsigned char 
  7593 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  7594 ;;  size            2   25[BANK0 ] unsigned int 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  p               2   37[BANK0 ] PTR unsigned char 
  7597 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   19[BANK0 ] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7602 ;; Tracked objects:
  7603 ;;		On entry : F/0
  7604 ;;		On exit  : F/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7607 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7608 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7610 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7611 ;;Total ram usage:       20 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    5
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_radioReceivedPacket
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text17
  7622  005B78                     __ptext17:
  7623                           	opt stack 0
  7624  005B78                     _crc32:
  7625                           	opt stack 22
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;CRC32.c: 54: uint8_t *p;
  7629                           ;CRC32.c: 56: p = buf;
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;incstack = 0
  7633  005B78  C077  F085         	movff	crc32@buf,crc32@p
  7634  005B7C  C078  F086         	movff	crc32@buf+1,crc32@p+1
  7635                           
  7636                           ;CRC32.c: 57: crc = crc ^ ~0U;
  7637  005B80  1F73               	comf	crc32@crc& (0+255),f,b
  7638  005B82  1F74               	comf	(crc32@crc+1)& (0+255),f,b
  7639                           
  7640                           ;CRC32.c: 59: while (size--)
  7641  005B84  D038               	goto	l17268
  7642  005B86                     l17264:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;CRC32.c: 60: crc = crc32_table[(crc ^ *p++) & 0xFF] ^ (crc >> 8);
  7646  005B86  C085  FFD9         	movff	crc32@p,fsr2l
  7647  005B8A  C086  FFDA         	movff	crc32@p+1,fsr2h
  7648  005B8E  50DF               	movf	indf2,w,c
  7649  005B90  1973               	xorwf	crc32@crc& (0+255),w,b
  7650  005B92  6F7B               	movwf	??_crc32& (0+255),b
  7651  005B94  0E00               	movlw	0
  7652  005B96  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  7653  005B98  6F7C               	movwf	(??_crc32+1)& (0+255),b
  7654  005B9A  6B7C               	clrf	(??_crc32+1)& (0+255),b
  7655  005B9C  90D8               	bcf	status,0,c
  7656  005B9E  377B               	rlcf	??_crc32& (0+255),f,b
  7657  005BA0  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  7658  005BA2  90D8               	bcf	status,0,c
  7659  005BA4  377B               	rlcf	??_crc32& (0+255),f,b
  7660  005BA6  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  7661  005BA8  0EFD               	movlw	low _crc32_table
  7662  005BAA  257B               	addwf	??_crc32& (0+255),w,b
  7663  005BAC  6EF6               	movwf	tblptrl,c
  7664  005BAE  0EFA               	movlw	high _crc32_table
  7665  005BB0  217C               	addwfc	(??_crc32+1)& (0+255),w,b
  7666  005BB2  6EF7               	movwf	tblptrh,c
  7667  005BB4                     	if	0	;There are less than 3 active tblptr bytes
  7668  005BB4                     	endif
  7669  005BB4  0009               	tblrd		*+
  7670  005BB6  CFF5 F07D          	movff	tablat,??_crc32+2
  7671  005BBA  0009               	tblrd		*+
  7672  005BBC  CFF5 F07E          	movff	tablat,??_crc32+3
  7673  005BC0  0009               	tblrd		*+
  7674  005BC2  CFF5 F07F          	movff	tablat,??_crc32+4
  7675  005BC6  0009               	tblrd		*+
  7676  005BC8  CFF5 F080          	movff	tablat,??_crc32+5
  7677  005BCC  5174               	movf	(crc32@crc+1)& (0+255),w,b
  7678  005BCE  6F81               	movwf	(??_crc32+6)& (0+255),b
  7679  005BD0  5175               	movf	(crc32@crc+2)& (0+255),w,b
  7680  005BD2  6F82               	movwf	(??_crc32+7)& (0+255),b
  7681  005BD4  5176               	movf	(crc32@crc+3)& (0+255),w,b
  7682  005BD6  6F83               	movwf	(??_crc32+8)& (0+255),b
  7683  005BD8  6B84               	clrf	(??_crc32+9)& (0+255),b
  7684  005BDA  517D               	movf	(??_crc32+2)& (0+255),w,b
  7685  005BDC  1981               	xorwf	(??_crc32+6)& (0+255),w,b
  7686  005BDE  6F73               	movwf	crc32@crc& (0+255),b
  7687  005BE0  517E               	movf	(??_crc32+3)& (0+255),w,b
  7688  005BE2  1982               	xorwf	(??_crc32+7)& (0+255),w,b
  7689  005BE4  6F74               	movwf	(crc32@crc+1)& (0+255),b
  7690  005BE6  517F               	movf	(??_crc32+4)& (0+255),w,b
  7691  005BE8  1983               	xorwf	(??_crc32+8)& (0+255),w,b
  7692  005BEA  6F75               	movwf	(crc32@crc+2)& (0+255),b
  7693  005BEC  5180               	movf	(??_crc32+5)& (0+255),w,b
  7694  005BEE  1984               	xorwf	(??_crc32+9)& (0+255),w,b
  7695  005BF0  6F76               	movwf	(crc32@crc+3)& (0+255),b
  7696                           
  7697                           ; BSR set to: 0
  7698  005BF2  4B85               	infsnz	crc32@p& (0+255),f,b
  7699  005BF4  2B86               	incf	(crc32@p+1)& (0+255),f,b
  7700  005BF6                     l17268:
  7701                           
  7702                           ; BSR set to: 0
  7703  005BF6  0779               	decf	crc32@size& (0+255),f,b
  7704  005BF8  A0D8               	btfss	status,0,c
  7705  005BFA  077A               	decf	(crc32@size+1)& (0+255),f,b
  7706  005BFC  2979               	incf	crc32@size& (0+255),w,b
  7707  005BFE  E1C3               	bnz	l17264
  7708  005C00  297A               	incf	(crc32@size+1)& (0+255),w,b
  7709  005C02  E1C1               	bnz	l17264
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;CRC32.c: 62: return crc ^ ~0U;
  7713  005C04  0EFF               	movlw	255
  7714  005C06  1973               	xorwf	crc32@crc& (0+255),w,b
  7715  005C08  6F73               	movwf	?_crc32& (0+255),b
  7716  005C0A  0EFF               	movlw	255
  7717  005C0C  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  7718  005C0E  6F74               	movwf	(?_crc32+1)& (0+255),b
  7719  005C10  0E00               	movlw	0
  7720  005C12  1975               	xorwf	(crc32@crc+2)& (0+255),w,b
  7721  005C14  6F75               	movwf	(?_crc32+2)& (0+255),b
  7722  005C16  0E00               	movlw	0
  7723  005C18  1976               	xorwf	(crc32@crc+3)& (0+255),w,b
  7724  005C1A  6F76               	movwf	(?_crc32+3)& (0+255),b
  7725                           
  7726                           ; BSR set to: 0
  7727  005C1C  0012               	return		;funcret
  7728  005C1E                     __end_of_crc32:
  7729                           	opt stack 0
  7730                           tblptru	equ	0xFF8
  7731                           tblptrh	equ	0xFF7
  7732                           tblptrl	equ	0xFF6
  7733                           tablat	equ	0xFF5
  7734                           prodh	equ	0xFF4
  7735                           prodl	equ	0xFF3
  7736                           intcon	equ	0xFF2
  7737                           postinc0	equ	0xFEE
  7738                           plusw0	equ	0xFEB
  7739                           wreg	equ	0xFE8
  7740                           postdec1	equ	0xFE5
  7741                           plusw1	equ	0xFE3
  7742                           fsr1h	equ	0xFE2
  7743                           fsr1l	equ	0xFE1
  7744                           indf2	equ	0xFDF
  7745                           postinc2	equ	0xFDE
  7746                           postdec2	equ	0xFDD
  7747                           plusw2	equ	0xFDB
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752 ;; *************** function _TunnelManagerSetTunnel *****************
  7753 ;; Defined at:
  7754 ;;		line 22 in file "../TunnelManager.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  device          2   47[BANK0 ] PTR struct addr_t_def
  7757 ;;		 -> radioReceivedPacket@child(2), 
  7758 ;;  parent          2   49[BANK0 ] PTR struct addr_t_def
  7759 ;;		 -> radioReceivedPacket@parent(2), 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  OldestTick      8   63[BANK0 ] struct TickMS_t_def
  7762 ;;  trec            8    0        struct TickMS_t_def
  7763 ;;  i               2   71[BANK0 ] unsigned int 
  7764 ;;  index           2   61[BANK0 ] unsigned int 
  7765 ;;  emptyindex      2   59[BANK0 ] unsigned int 
  7766 ;;  oldestindex     2   57[BANK0 ] unsigned int 
  7767 ;;  unknown         1    0        unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : F/0
  7774 ;;		On exit  : F/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;Total ram usage:       26 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    8
  7784 ;; This function calls:
  7785 ;;		_MSTickGet
  7786 ;;		_NetworkAddressSizeGet
  7787 ;;		_isSameAddress
  7788 ;;		_memcpy
  7789 ;;		_memset
  7790 ;; This function is called by:
  7791 ;;		_radioReceivedPacket
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text18
  7796  0023AE                     __ptext18:
  7797                           	opt stack 0
  7798  0023AE                     _TunnelManagerSetTunnel:
  7799                           	opt stack 19
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;TunnelManager.c: 24: uint16_t i;
  7803                           ;TunnelManager.c: 25: uint16_t oldestindex=0xffff;
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;incstack = 0
  7807  0023AE  6999               	setf	TunnelManagerSetTunnel@oldestindex& (0+255),b
  7808  0023B0  699A               	setf	(TunnelManagerSetTunnel@oldestindex+1)& (0+255),b
  7809                           
  7810                           ;TunnelManager.c: 26: uint16_t emptyindex=0xffff;
  7811  0023B2  699B               	setf	TunnelManagerSetTunnel@emptyindex& (0+255),b
  7812  0023B4  699C               	setf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),b
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;TunnelManager.c: 29: TickMS trec;
  7816                           ;TunnelManager.c: 31: TickMS OldestTick;
  7817                           ;TunnelManager.c: 33: memset(&OldestTick,0xff,sizeof(OldestTick));
  7818  0023B6  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  7819  0023B8  6F73               	movwf	memset@p1& (0+255),b
  7820  0023BA  6B74               	clrf	(memset@p1+1)& (0+255),b
  7821  0023BC  6B76               	clrf	(memset@c+1)& (0+255),b
  7822  0023BE  6975               	setf	memset@c& (0+255),b
  7823  0023C0  6B78               	clrf	(memset@n+1)& (0+255),b
  7824  0023C2  0E08               	movlw	8
  7825  0023C4  6F77               	movwf	memset@n& (0+255),b
  7826  0023C6  EC2F  F039         	call	_memset	;wreg free
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;TunnelManager.c: 35: for(i=0;i<10;i++)
  7830  0023CA  6BA7               	clrf	TunnelManagerSetTunnel@i& (0+255),b
  7831  0023CC  6BA8               	clrf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7832  0023CE                     l17440:
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;TunnelManager.c: 36: {
  7836                           ;TunnelManager.c: 37: if(((OldestTick.msb>tunnels[i].TxTime.msb) || ((OldestTick.msb==tu
      +                          nnels[i].TxTime.msb) && (OldestTick.lsb>=tunnels[i].TxTime.lsb) ) )==1)
  7837  0023CE  0E0C               	movlw	12
  7838  0023D0  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7839  0023D2  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7840  0023D6  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7841  0023DA  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7842  0023DC  50F3               	movf	prodl,w,c
  7843  0023DE  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7844  0023E0  0E04               	movlw	low (_tunnels+4)
  7845  0023E2  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7846  0023E4  6ED9               	movwf	fsr2l,c
  7847  0023E6  0E04               	movlw	high (_tunnels+4)
  7848  0023E8  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7849  0023EA  6EDA               	movwf	fsr2h,c
  7850  0023EC  51A3               	movf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  7851  0023EE  5CDE               	subwf	postinc2,w,c
  7852  0023F0  51A4               	movf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  7853  0023F2  58DE               	subwfb	postinc2,w,c
  7854  0023F4  51A5               	movf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  7855  0023F6  58DE               	subwfb	postinc2,w,c
  7856  0023F8  51A6               	movf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  7857  0023FA  58DE               	subwfb	postinc2,w,c
  7858  0023FC  E333               	bnc	l17446
  7859                           
  7860                           ; BSR set to: 0
  7861  0023FE  0E0C               	movlw	12
  7862  002400  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7863  002402  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7864  002406  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7865  00240A  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7866  00240C  50F3               	movf	prodl,w,c
  7867  00240E  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7868  002410  0E04               	movlw	low (_tunnels+4)
  7869  002412  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7870  002414  6ED9               	movwf	fsr2l,c
  7871  002416  0E04               	movlw	high (_tunnels+4)
  7872  002418  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7873  00241A  6EDA               	movwf	fsr2h,c
  7874  00241C  50DE               	movf	postinc2,w,c
  7875  00241E  19A3               	xorwf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  7876  002420  E13C               	bnz	l17450
  7877  002422  50DE               	movf	postinc2,w,c
  7878  002424  19A4               	xorwf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  7879  002426  E139               	bnz	l17450
  7880  002428  50DE               	movf	postinc2,w,c
  7881  00242A  19A5               	xorwf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  7882  00242C  E136               	bnz	l17450
  7883  00242E  50DE               	movf	postinc2,w,c
  7884  002430  19A6               	xorwf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  7885  002432  E133               	bnz	l17450
  7886                           
  7887                           ; BSR set to: 0
  7888  002434  0E0C               	movlw	12
  7889  002436  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7890  002438  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7891  00243C  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7892  002440  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7893  002442  50F3               	movf	prodl,w,c
  7894  002444  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7895  002446  0E00               	movlw	low _tunnels
  7896  002448  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7897  00244A  6ED9               	movwf	fsr2l,c
  7898  00244C  0E04               	movlw	high _tunnels
  7899  00244E  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7900  002450  6EDA               	movwf	fsr2h,c
  7901  002452  50DE               	movf	postinc2,w,c
  7902  002454  5D9F               	subwf	TunnelManagerSetTunnel@OldestTick& (0+255),w,b
  7903  002456  50DE               	movf	postinc2,w,c
  7904  002458  59A0               	subwfb	(TunnelManagerSetTunnel@OldestTick+1)& (0+255),w,b
  7905  00245A  50DE               	movf	postinc2,w,c
  7906  00245C  59A1               	subwfb	(TunnelManagerSetTunnel@OldestTick+2)& (0+255),w,b
  7907  00245E  50DE               	movf	postinc2,w,c
  7908  002460  59A2               	subwfb	(TunnelManagerSetTunnel@OldestTick+3)& (0+255),w,b
  7909  002462  E31B               	bnc	l17450
  7910  002464                     l17446:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;TunnelManager.c: 38: {
  7914                           ;TunnelManager.c: 39: memcpy(&OldestTick,&tunnels[i].TxTime,sizeof(TickMS));
  7915  002464  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  7916  002466  6F75               	movwf	memcpy@d1& (0+255),b
  7917  002468  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  7918  00246A  0E0C               	movlw	12
  7919  00246C  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7920  00246E  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7921  002472  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7922  002476  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7923  002478  50F3               	movf	prodl,w,c
  7924  00247A  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7925  00247C  0E00               	movlw	low _tunnels
  7926  00247E  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7927  002480  6F77               	movwf	memcpy@s1& (0+255),b
  7928  002482  0E04               	movlw	high _tunnels
  7929  002484  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7930  002486  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  7931  002488  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  7932  00248A  0E08               	movlw	8
  7933  00248C  6F79               	movwf	memcpy@n& (0+255),b
  7934  00248E  EC54  F035         	call	_memcpy	;wreg free
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;TunnelManager.c: 40: oldestindex=i;
  7938  002492  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  7939  002496  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  7940  00249A                     l17450:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;TunnelManager.c: 41: }
  7944                           ;TunnelManager.c: 42: if( (emptyindex==0xffff) && (((tunnels[i].TxTime.msb==0) && (tunne
      +                          ls[i].TxTime.lsb==0))==1) )
  7945  00249A  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  7946  00249C  E12E               	bnz	l17458
  7947  00249E  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  7948  0024A0  E12C               	bnz	l17458
  7949                           
  7950                           ; BSR set to: 0
  7951  0024A2  0E0C               	movlw	12
  7952  0024A4  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7953  0024A6  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7954  0024AA  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7955  0024AE  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7956  0024B0  50F3               	movf	prodl,w,c
  7957  0024B2  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7958  0024B4  0E04               	movlw	low (_tunnels+4)
  7959  0024B6  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7960  0024B8  6ED9               	movwf	fsr2l,c
  7961  0024BA  0E04               	movlw	high (_tunnels+4)
  7962  0024BC  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7963  0024BE  6EDA               	movwf	fsr2h,c
  7964  0024C0  50DE               	movf	postinc2,w,c
  7965  0024C2  10DE               	iorwf	postinc2,w,c
  7966  0024C4  10DE               	iorwf	postinc2,w,c
  7967  0024C6  10DE               	iorwf	postinc2,w,c
  7968  0024C8  E118               	bnz	l17458
  7969                           
  7970                           ; BSR set to: 0
  7971  0024CA  0E0C               	movlw	12
  7972  0024CC  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  7973  0024CE  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  7974  0024D2  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  7975  0024D6  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  7976  0024D8  50F3               	movf	prodl,w,c
  7977  0024DA  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  7978  0024DC  0E00               	movlw	low _tunnels
  7979  0024DE  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  7980  0024E0  6ED9               	movwf	fsr2l,c
  7981  0024E2  0E04               	movlw	high _tunnels
  7982  0024E4  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  7983  0024E6  6EDA               	movwf	fsr2h,c
  7984  0024E8  50DE               	movf	postinc2,w,c
  7985  0024EA  10DE               	iorwf	postinc2,w,c
  7986  0024EC  10DE               	iorwf	postinc2,w,c
  7987  0024EE  10DE               	iorwf	postinc2,w,c
  7988  0024F0  E104               	bnz	l17458
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;TunnelManager.c: 43: {
  7992                           ;TunnelManager.c: 44: emptyindex=i;
  7993  0024F2  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  7994  0024F6  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  7995  0024FA                     l17458:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;TunnelManager.c: 47: {
  7999                           ;TunnelManager.c: 48: trec=tunnels[i].TxTime;
  8000  0024FA  C08F  FFD9         	movff	TunnelManagerSetTunnel@device,fsr2l
  8001  0024FE  C090  FFDA         	movff	TunnelManagerSetTunnel@device+1,fsr2h
  8002  002502  CFDE F07D          	movff	postinc2,isSameAddress@a1
  8003  002506  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  8004  00250A  0E0C               	movlw	12
  8005  00250C  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8006  00250E  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8007  002512  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8008  002516  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8009  002518  50F3               	movf	prodl,w,c
  8010  00251A  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8011  00251C  0E08               	movlw	low (_tunnels+8)
  8012  00251E  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8013  002520  6ED9               	movwf	fsr2l,c
  8014  002522  0E04               	movlw	high (_tunnels+8)
  8015  002524  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8016  002526  6EDA               	movwf	fsr2h,c
  8017  002528  CFDE F07F          	movff	postinc2,isSameAddress@a2
  8018  00252C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  8019  002530  ECBA  F039         	call	_isSameAddress	;wreg free
  8020  002534  06E8               	decf	wreg,f,c
  8021  002536  E109               	bnz	l17462
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;TunnelManager.c: 49: emptyindex=i;
  8025  002538  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  8026  00253C  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  8027                           
  8028                           ;TunnelManager.c: 51: unknown=0;
  8029  002540  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  8030  002544  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  8031                           
  8032                           ;TunnelManager.c: 52: break;
  8033  002548  D008               	goto	l17466
  8034  00254A                     l17462:
  8035                           
  8036                           ; BSR set to: 0
  8037  00254A  4BA7               	infsnz	TunnelManagerSetTunnel@i& (0+255),f,b
  8038  00254C  2BA8               	incf	(TunnelManagerSetTunnel@i+1)& (0+255),f,b
  8039                           
  8040                           ; BSR set to: 0
  8041  00254E  51A8               	movf	(TunnelManagerSetTunnel@i+1)& (0+255),w,b
  8042  002550  E104               	bnz	u20890
  8043  002552  0E0A               	movlw	10
  8044  002554  5DA7               	subwf	TunnelManagerSetTunnel@i& (0+255),w,b
  8045  002556  E201 D73A          	bnc	l17440
  8046  00255A                     u20890:
  8047  00255A                     l17466:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;TunnelManager.c: 53: }
  8051                           ;TunnelManager.c: 54: }
  8052                           ;TunnelManager.c: 55: if(emptyindex!=0xffff)
  8053  00255A  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  8054  00255C  E102               	bnz	u20900
  8055  00255E  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  8056  002560  E005               	bz	l1661
  8057  002562                     u20900:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;TunnelManager.c: 56: {
  8061                           ;TunnelManager.c: 57: index=emptyindex;
  8062  002562  C09B  F09D         	movff	TunnelManagerSetTunnel@emptyindex,TunnelManagerSetTunnel@index
  8063  002566  C09C  F09E         	movff	TunnelManagerSetTunnel@emptyindex+1,TunnelManagerSetTunnel@index+1
  8064                           
  8065                           ;TunnelManager.c: 58: }else
  8066  00256A  D004               	goto	l17470
  8067  00256C                     l1661:
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;TunnelManager.c: 59: {
  8071                           ;TunnelManager.c: 60: index=oldestindex;
  8072  00256C  C099  F09D         	movff	TunnelManagerSetTunnel@oldestindex,TunnelManagerSetTunnel@index
  8073  002570  C09A  F09E         	movff	TunnelManagerSetTunnel@oldestindex+1,TunnelManagerSetTunnel@index+1
  8074  002574                     l17470:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;TunnelManager.c: 61: }
  8078                           ;TunnelManager.c: 62: if(index!=0xffff)
  8079  002574  299D               	incf	TunnelManagerSetTunnel@index& (0+255),w,b
  8080  002576  E103               	bnz	u20910
  8081  002578  299E               	incf	(TunnelManagerSetTunnel@index+1)& (0+255),w,b
  8082  00257A  B4D8               	btfsc	status,2,c
  8083  00257C  0012               	return	
  8084  00257E                     u20910:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;TunnelManager.c: 63: {
  8088                           ;TunnelManager.c: 64: memcpy(&tunnels[index].devAddress,device,NetworkAddressSizeGet());
  8089  00257E  0E0C               	movlw	12
  8090  002580  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8091  002582  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8092  002586  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8093  00258A  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8094  00258C  50F3               	movf	prodl,w,c
  8095  00258E  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8096  002590  0E08               	movlw	low (_tunnels+8)
  8097  002592  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8098  002594  6F75               	movwf	memcpy@d1& (0+255),b
  8099  002596  0E04               	movlw	high (_tunnels+8)
  8100  002598  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8101  00259A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  8102  00259C  C08F  F077         	movff	TunnelManagerSetTunnel@device,memcpy@s1
  8103  0025A0  C090  F078         	movff	TunnelManagerSetTunnel@device+1,memcpy@s1+1
  8104  0025A4  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
  8105  0025A8  0100               	movlb	0	; () banked
  8106  0025AA  6F79               	movwf	memcpy@n& (0+255),b
  8107  0025AC  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8108  0025AE  EC54  F035         	call	_memcpy	;wreg free
  8109                           
  8110                           ;TunnelManager.c: 65: memcpy(&tunnels[index].parent,parent,NetworkAddressSizeGet());
  8111  0025B2  0E0C               	movlw	12
  8112  0025B4  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8113  0025B6  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8114  0025BA  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8115  0025BE  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8116  0025C0  50F3               	movf	prodl,w,c
  8117  0025C2  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8118  0025C4  0E0A               	movlw	low (_tunnels+10)
  8119  0025C6  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8120  0025C8  6F75               	movwf	memcpy@d1& (0+255),b
  8121  0025CA  0E04               	movlw	high (_tunnels+10)
  8122  0025CC  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8123  0025CE  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  8124  0025D0  C091  F077         	movff	TunnelManagerSetTunnel@parent,memcpy@s1
  8125  0025D4  C092  F078         	movff	TunnelManagerSetTunnel@parent+1,memcpy@s1+1
  8126  0025D8  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
  8127  0025DC  0100               	movlb	0	; () banked
  8128  0025DE  6F79               	movwf	memcpy@n& (0+255),b
  8129  0025E0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8130  0025E2  EC54  F035         	call	_memcpy	;wreg free
  8131                           
  8132                           ;TunnelManager.c: 66: tunnels[index].TxTime=MSTickGet();
  8133  0025E6  EC4F  F038         	call	_MSTickGet	;wreg free
  8134  0025EA  0E0C               	movlw	12
  8135  0025EC  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8136  0025EE  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8137  0025F2  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8138  0025F6  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8139  0025F8  50F3               	movf	prodl,w,c
  8140  0025FA  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8141  0025FC  0E00               	movlw	low _tunnels
  8142  0025FE  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8143  002600  6ED9               	movwf	fsr2l,c
  8144  002602  0E04               	movlw	high _tunnels
  8145  002604  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8146  002606  6EDA               	movwf	fsr2h,c
  8147  002608  0E07               	movlw	7
  8148  00260A                     u20921:
  8149  00260A  CFEB FFDB          	movff	plusw0,plusw2
  8150  00260E  06E8               	decf	wreg,f,c
  8151  002610  E2FC               	bc	u20921
  8152                           
  8153                           ; BSR set to: 0
  8154  002612  0012               	return		;funcret
  8155  002614                     __end_of_TunnelManagerSetTunnel:
  8156                           	opt stack 0
  8157                           tblptru	equ	0xFF8
  8158                           tblptrh	equ	0xFF7
  8159                           tblptrl	equ	0xFF6
  8160                           tablat	equ	0xFF5
  8161                           prodh	equ	0xFF4
  8162                           prodl	equ	0xFF3
  8163                           intcon	equ	0xFF2
  8164                           postinc0	equ	0xFEE
  8165                           plusw0	equ	0xFEB
  8166                           wreg	equ	0xFE8
  8167                           postdec1	equ	0xFE5
  8168                           plusw1	equ	0xFE3
  8169                           fsr1h	equ	0xFE2
  8170                           fsr1l	equ	0xFE1
  8171                           indf2	equ	0xFDF
  8172                           postinc2	equ	0xFDE
  8173                           postdec2	equ	0xFDD
  8174                           plusw2	equ	0xFDB
  8175                           fsr2h	equ	0xFDA
  8176                           fsr2l	equ	0xFD9
  8177                           status	equ	0xFD8
  8178                           
  8179 ;; *************** function _RouteManagerProcessReceive *****************
  8180 ;; Defined at:
  8181 ;;		line 310 in file "../RouteManager.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  source          2   61[BANK0 ] PTR struct addr_t_def
  8184 ;;		 -> radioReceivedPacket@source(2), 
  8185 ;;  data            2   63[BANK0 ] PTR unsigned char 
  8186 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8187 ;;  len             1   65[BANK0 ] unsigned char 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  rcvBeacon       2   72[BANK0 ] PTR struct net_routing_h
  8190 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8191 ;;  from            2   70[BANK0 ] struct addr_t_def
  8192 ;;  congested       1   69[BANK0 ] unsigned char 
  8193 ;;  res             1    0        enum E180
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      enum E179
  8196 ;; Registers used:
  8197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : F/0
  8200 ;;		On exit  : E/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8203 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8204 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;Total ram usage:       13 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:   11
  8210 ;; This function calls:
  8211 ;;		_BeaconManagerTrigger
  8212 ;;		_LE_InsertNeighbor
  8213 ;;		_LE_PinNeighbor
  8214 ;;		_NetworkAddressSizeGet
  8215 ;;		_RouteManagerSetNeighborCongested
  8216 ;;		_RouterEvicted
  8217 ;;		_isInvalidAddress
  8218 ;;		_memcpy
  8219 ;;		_routingTableUpdateEntry
  8220 ;; This function is called by:
  8221 ;;		_radioReceivedPacket
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text19
  8226  004492                     __ptext19:
  8227                           	opt stack 0
  8228  004492                     _RouteManagerProcessReceive:
  8229                           	opt stack 16
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;RouteManager.c: 313: addr_t from;
  8233                           ;RouteManager.c: 314: net_routing_header_t* rcvBeacon;
  8234                           ;RouteManager.c: 315: bool congested;
  8235                           ;RouteManager.c: 316: rcvBeacon=(net_routing_header_t*)data;
  8236                           
  8237                           ; BSR set to: 0
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;incstack = 0
  8241  004492  C09F  F0A8         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8242  004496  C0A0  F0A9         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;RouteManager.c: 318: if ( (len >= sizeof (net_routing_header_t)) && (rcvBeacon->packett
      +                          ype==PacketRouting) )
  8246  00449A  0E09               	movlw	9
  8247  00449C  65A1               	cpfsgt	RouteManagerProcessReceive@len& (0+255),b
  8248  00449E  0C09               	retlw	9
  8249                           
  8250                           ; BSR set to: 0
  8251  0044A0  EE20 F002          	lfsr	2,2
  8252  0044A4  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8253  0044A6  26D9               	addwf	fsr2l,f,c
  8254  0044A8  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8255  0044AA  22DA               	addwfc	fsr2h,f,c
  8256  0044AC  0E22               	movlw	34
  8257  0044AE  18DE               	xorwf	postinc2,w,c
  8258  0044B0  A4D8               	btfss	status,2,c
  8259  0044B2  0012               	return	
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;RouteManager.c: 319: {
  8263                           ;RouteManager.c: 321: memcpy(&from,source,NetworkAddressSizeGet());
  8264  0044B4  0EA6               	movlw	low RouteManagerProcessReceive@from
  8265  0044B6  6F75               	movwf	memcpy@d1& (0+255),b
  8266  0044B8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  8267  0044BA  C09D  F077         	movff	RouteManagerProcessReceive@source,memcpy@s1
  8268  0044BE  C09E  F078         	movff	RouteManagerProcessReceive@source+1,memcpy@s1+1
  8269  0044C2  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
  8270  0044C6  0100               	movlb	0	; () banked
  8271  0044C8  6F79               	movwf	memcpy@n& (0+255),b
  8272  0044CA  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8273  0044CC  EC54  F035         	call	_memcpy	;wreg free
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;RouteManager.c: 322: rcvBeacon = (net_routing_header_t*) data;
  8277  0044D0  C09F  F0A8         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8278  0044D4  C0A0  F0A9         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;RouteManager.c: 324: congested = (rcvBeacon->options.congested==1);
  8282  0044D8  EE20 F003          	lfsr	2,3
  8283  0044DC  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8284  0044DE  26D9               	addwf	fsr2l,f,c
  8285  0044E0  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8286  0044E2  22DA               	addwfc	fsr2h,f,c
  8287  0044E4  0E00               	movlw	0
  8288  0044E6  B8DF               	btfsc	indf2,4,c
  8289  0044E8  0E01               	movlw	1
  8290  0044EA  6FA5               	movwf	RouteManagerProcessReceive@congested& (0+255),b
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;RouteManager.c: 331: if( (!isInvalidAddress(rcvBeacon->parent)) && (rcvBeacon->options.
      +                          deviceType!=DeviceSleepingRFD) && (rcvBeacon->options.hasroute==1) )
  8294  0044EC  EE20 F004          	lfsr	2,4
  8295  0044F0  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8296  0044F2  26D9               	addwf	fsr2l,f,c
  8297  0044F4  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8298  0044F6  22DA               	addwfc	fsr2h,f,c
  8299  0044F8  CFDE F086          	movff	postinc2,isInvalidAddress@address
  8300  0044FC  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
  8301  004500  ECD8  F03A         	call	_isInvalidAddress	;wreg free
  8302  004504  0900               	iorlw	0
  8303  004506  E153               	bnz	l17410
  8304                           
  8305                           ; BSR set to: 0
  8306  004508  EE20 F003          	lfsr	2,3
  8307  00450C  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8308  00450E  26D9               	addwf	fsr2l,f,c
  8309  004510  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8310  004512  22DA               	addwfc	fsr2h,f,c
  8311  004514  50DF               	movf	223,w,c
  8312  004516  0B07               	andlw	7
  8313  004518  0A02               	xorlw	2
  8314  00451A  E049               	bz	l17410
  8315                           
  8316                           ; BSR set to: 0
  8317  00451C  EE20 F003          	lfsr	2,3
  8318  004520  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8319  004522  26D9               	addwf	fsr2l,f,c
  8320  004524  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8321  004526  22DA               	addwfc	fsr2h,f,c
  8322  004528  A6DF               	btfss	indf2,3,c
  8323  00452A  D041               	goto	l17410
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;RouteManager.c: 332: {
  8327                           ;RouteManager.c: 335: if (rcvBeacon->etx == 0)
  8328  00452C  EE20 F006          	lfsr	2,6
  8329  004530  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8330  004532  26D9               	addwf	fsr2l,f,c
  8331  004534  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8332  004536  22DA               	addwfc	fsr2h,f,c
  8333  004538  50DE               	movf	postinc2,w,c
  8334  00453A  10DE               	iorwf	postinc2,w,c
  8335  00453C  E115               	bnz	l17406
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;RouteManager.c: 336: {
  8339                           ;RouteManager.c: 338: LE_InsertNeighbor(from, rcvBeacon->options.deviceType);
  8340  00453E  C0A6  F097         	movff	RouteManagerProcessReceive@from,LE_InsertNeighbor@neighbor
  8341  004542  C0A7  F098         	movff	RouteManagerProcessReceive@from+1,LE_InsertNeighbor@neighbor+1
  8342  004546  EE20 F003          	lfsr	2,3
  8343  00454A  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8344  00454C  26D9               	addwf	fsr2l,f,c
  8345  00454E  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8346  004550  22DA               	addwfc	fsr2h,f,c
  8347  004552  50DF               	movf	223,w,c
  8348  004554  0B07               	andlw	7
  8349  004556  6F99               	movwf	LE_InsertNeighbor@devType& (0+255),b
  8350  004558  EC1A  F030         	call	_LE_InsertNeighbor	;wreg free
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;RouteManager.c: 339: LE_PinNeighbor(from);
  8354  00455C  C0A6  F085         	movff	RouteManagerProcessReceive@from,LE_PinNeighbor@neighbor
  8355  004560  C0A7  F086         	movff	RouteManagerProcessReceive@from+1,LE_PinNeighbor@neighbor+1
  8356  004564  ECDD  F037         	call	_LE_PinNeighbor	;wreg free
  8357  004568                     l17406:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;RouteManager.c: 340: }
  8361                           ;RouteManager.c: 343: routingTableUpdateEntry(from, rcvBeacon->parent, rcvBeacon->etx);
  8362  004568  C0A6  F08F         	movff	RouteManagerProcessReceive@from,routingTableUpdateEntry@from
  8363  00456C  C0A7  F090         	movff	RouteManagerProcessReceive@from+1,routingTableUpdateEntry@from+1
  8364  004570  EE20 F004          	lfsr	2,4
  8365  004574  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8366  004576  26D9               	addwf	fsr2l,f,c
  8367  004578  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8368  00457A  22DA               	addwfc	fsr2h,f,c
  8369  00457C  CFDE F091          	movff	postinc2,routingTableUpdateEntry@parent
  8370  004580  CFDD F092          	movff	postdec2,routingTableUpdateEntry@parent+1
  8371  004584  EE20 F006          	lfsr	2,6
  8372  004588  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8373  00458A  26D9               	addwf	fsr2l,f,c
  8374  00458C  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8375  00458E  22DA               	addwfc	fsr2h,f,c
  8376  004590  CFDE F093          	movff	postinc2,routingTableUpdateEntry@etx
  8377  004594  CFDD F094          	movff	postdec2,routingTableUpdateEntry@etx+1
  8378  004598  EC1B  F027         	call	_routingTableUpdateEntry	;wreg free
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;RouteManager.c: 344: RouteManagerSetNeighborCongested(from, congested);
  8382  00459C  C0A6  F073         	movff	RouteManagerProcessReceive@from,RouteManagerSetNeighborCongested@n
  8383  0045A0  C0A7  F074         	movff	RouteManagerProcessReceive@from+1,RouteManagerSetNeighborCongested@n+1
  8384  0045A4  C0A5  F075         	movff	RouteManagerProcessReceive@congested,RouteManagerSetNeighborCongested@congested
  8385  0045A8  EC43  F03B         	call	_RouteManagerSetNeighborCongested	;wreg free
  8386                           
  8387                           ;RouteManager.c: 345: }else
  8388  0045AC  D006               	goto	l17412
  8389  0045AE                     l17410:
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;RouteManager.c: 346: {
  8393                           ;RouteManager.c: 348: RouterEvicted(from);
  8394  0045AE  C0A6  F08F         	movff	RouteManagerProcessReceive@from,RouterEvicted@address
  8395  0045B2  C0A7  F090         	movff	RouteManagerProcessReceive@from+1,RouterEvicted@address+1
  8396  0045B6  EC0F  F02E         	call	_RouterEvicted	;wreg free
  8397  0045BA                     l17412:
  8398                           
  8399                           ;RouteManager.c: 349: }
  8400                           ;RouteManager.c: 351: if (rcvBeacon->options.pull==1)
  8401  0045BA  0100               	movlb	0	; () banked
  8402  0045BC  EE20 F003          	lfsr	2,3
  8403  0045C0  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8404  0045C2  26D9               	addwf	fsr2l,f,c
  8405  0045C4  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8406  0045C6  22DA               	addwfc	fsr2h,f,c
  8407  0045C8  BADF               	btfsc	indf2,5,c
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;RouteManager.c: 352: {
  8411                           ;RouteManager.c: 353: BeaconManagerTrigger();
  8412  0045CA  EC32  F03B         	call	_BeaconManagerTrigger	;wreg free
  8413  0045CE  0012               	return		;funcret
  8414  0045D0                     __end_of_RouteManagerProcessReceive:
  8415                           	opt stack 0
  8416                           tblptru	equ	0xFF8
  8417                           tblptrh	equ	0xFF7
  8418                           tblptrl	equ	0xFF6
  8419                           tablat	equ	0xFF5
  8420                           prodh	equ	0xFF4
  8421                           prodl	equ	0xFF3
  8422                           intcon	equ	0xFF2
  8423                           postinc0	equ	0xFEE
  8424                           plusw0	equ	0xFEB
  8425                           wreg	equ	0xFE8
  8426                           postdec1	equ	0xFE5
  8427                           plusw1	equ	0xFE3
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           postinc2	equ	0xFDE
  8432                           postdec2	equ	0xFDD
  8433                           plusw2	equ	0xFDB
  8434                           fsr2h	equ	0xFDA
  8435                           fsr2l	equ	0xFD9
  8436                           status	equ	0xFD8
  8437                           
  8438 ;; *************** function _routingTableUpdateEntry *****************
  8439 ;; Defined at:
  8440 ;;		line 247 in file "../RouteManager.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  from            2   47[BANK0 ] struct addr_t_def
  8443 ;;  parent          2   49[BANK0 ] struct addr_t_def
  8444 ;;  etx             2   51[BANK0 ] unsigned int 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  linkEtx         2   53[BANK0 ] unsigned int 
  8447 ;;  idx             1   55[BANK0 ] unsigned char 
  8448 ;;  res             1    0        enum E180
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      enum E180
  8451 ;; Registers used:
  8452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : F/0
  8455 ;;		On exit  : F/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8458 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8459 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8461 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;Total ram usage:        9 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    9
  8465 ;; This function calls:
  8466 ;;		_LELinkQualityGet
  8467 ;;		_passLinkEtxThreshold
  8468 ;;		_routingTableFind
  8469 ;; This function is called by:
  8470 ;;		_RouteManagerProcessReceive
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text20
  8475  004E36                     __ptext20:
  8476                           	opt stack 0
  8477  004E36                     _routingTableUpdateEntry:
  8478                           	opt stack 17
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;RouteManager.c: 249: uint8_t idx;
  8482                           ;RouteManager.c: 250: error_t res;
  8483                           ;RouteManager.c: 251: uint16_t linkEtx;
  8484                           ;RouteManager.c: 252: linkEtx = LELinkQualityGet(from,0);
  8485                           
  8486                           ;incstack = 0
  8487  004E36  C08F  F085         	movff	routingTableUpdateEntry@from,LELinkQualityGet@address
  8488  004E3A  C090  F086         	movff	routingTableUpdateEntry@from+1,LELinkQualityGet@address+1
  8489  004E3E  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
  8490  004E40  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
  8491  004E42  EC87  F032         	call	_LELinkQualityGet	;wreg free
  8492  004E46  C085  F095         	movff	?_LELinkQualityGet,routingTableUpdateEntry@linkEtx
  8493  004E4A  C086  F096         	movff	?_LELinkQualityGet+1,routingTableUpdateEntry@linkEtx+1
  8494                           
  8495                           ;RouteManager.c: 254: idx = routingTableFind(from);
  8496  004E4E  C08F  F088         	movff	routingTableUpdateEntry@from,routingTableFind@neighbor
  8497  004E52  C090  F089         	movff	routingTableUpdateEntry@from+1,routingTableFind@neighbor+1
  8498  004E56  EC5C  F033         	call	_routingTableFind	;wreg free
  8499  004E5A  6F97               	movwf	routingTableUpdateEntry@idx& (0+255),b
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;RouteManager.c: 256: {
  8503                           ;RouteManager.c: 258: res=err_FAIL;
  8504  004E5C  0E0A               	movlw	10
  8505  004E5E  1997               	xorwf	routingTableUpdateEntry@idx& (0+255),w,b
  8506  004E60  E101               	bnz	l16946
  8507  004E62  0012               	return	
  8508  004E64                     l16946:
  8509                           
  8510                           ; BSR set to: 0
  8511  004E64  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8512  004E66  19E7               	xorwf	_routingTableActive& (0+255),w,b
  8513  004E68  11E8               	iorwf	(_routingTableActive+1)& (0+255),w,b
  8514  004E6A  E143               	bnz	l16954
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;RouteManager.c: 260: {
  8518                           ;RouteManager.c: 262: if (passLinkEtxThreshold(linkEtx))
  8519  004E6C  C095  F073         	movff	routingTableUpdateEntry@linkEtx,passLinkEtxThreshold@etx
  8520  004E70  C096  F074         	movff	routingTableUpdateEntry@linkEtx+1,passLinkEtxThreshold@etx+1
  8521  004E74  ECB2  F03A         	call	_passLinkEtxThreshold	;wreg free
  8522  004E78  0900               	iorlw	0
  8523  004E7A  B4D8               	btfsc	status,2,c
  8524  004E7C  0012               	return	
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;RouteManager.c: 263: {
  8528                           ;RouteManager.c: 264: routingTable[idx].neighbor = from;
  8529  004E7E  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8530  004E80  0D09               	mullw	9
  8531  004E82  0E98               	movlw	low _routingTable
  8532  004E84  24F3               	addwf	prodl,w,c
  8533  004E86  6ED9               	movwf	fsr2l,c
  8534  004E88  0E06               	movlw	high _routingTable
  8535  004E8A  20F4               	addwfc	prodh,w,c
  8536  004E8C  6EDA               	movwf	fsr2h,c
  8537  004E8E  C08F  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  8538  004E92  C090  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  8539                           
  8540                           ;RouteManager.c: 265: routingTable[idx].info.parent = parent;
  8541  004E96  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8542  004E98  0D09               	mullw	9
  8543  004E9A  0E9A               	movlw	low (_routingTable+2)
  8544  004E9C  24F3               	addwf	prodl,w,c
  8545  004E9E  6ED9               	movwf	fsr2l,c
  8546  004EA0  0E06               	movlw	high (_routingTable+2)
  8547  004EA2  20F4               	addwfc	prodh,w,c
  8548  004EA4  6EDA               	movwf	fsr2h,c
  8549  004EA6  C091  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  8550  004EAA  C092  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  8551                           
  8552                           ;RouteManager.c: 266: routingTable[idx].info.etx = etx;
  8553  004EAE  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8554  004EB0  0D09               	mullw	9
  8555  004EB2  0E9C               	movlw	low (_routingTable+4)
  8556  004EB4  24F3               	addwf	prodl,w,c
  8557  004EB6  6ED9               	movwf	fsr2l,c
  8558  004EB8  0E06               	movlw	high (_routingTable+4)
  8559  004EBA  20F4               	addwfc	prodh,w,c
  8560  004EBC  6EDA               	movwf	fsr2h,c
  8561  004EBE  C093  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  8562  004EC2  C094  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  8563                           
  8564                           ;RouteManager.c: 267: routingTable[idx].info.haveHeard = 1;
  8565  004EC6  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8566  004EC8  0D09               	mullw	9
  8567  004ECA  0E9E               	movlw	low (_routingTable+6)
  8568  004ECC  24F3               	addwf	prodl,w,c
  8569  004ECE  6ED9               	movwf	fsr2l,c
  8570  004ED0  0E06               	movlw	high (_routingTable+6)
  8571  004ED2  20F4               	addwfc	prodh,w,c
  8572  004ED4  6EDA               	movwf	fsr2h,c
  8573  004ED6  0E01               	movlw	1
  8574  004ED8  6EDF               	movwf	indf2,c
  8575                           
  8576                           ;RouteManager.c: 268: routingTable[idx].info.congested = 0;
  8577  004EDA  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8578  004EDC  0D09               	mullw	9
  8579  004EDE  0E9F               	movlw	low (_routingTable+7)
  8580  004EE0  24F3               	addwf	prodl,w,c
  8581  004EE2  6ED9               	movwf	fsr2l,c
  8582  004EE4  0E06               	movlw	high (_routingTable+7)
  8583  004EE6  20F4               	addwfc	prodh,w,c
  8584  004EE8  6EDA               	movwf	fsr2h,c
  8585  004EEA  6ADF               	clrf	indf2,c
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;RouteManager.c: 269: routingTableActive++;
  8589  004EEC  4BE7               	infsnz	_routingTableActive& (0+255),f,b
  8590  004EEE  2BE8               	incf	(_routingTableActive+1)& (0+255),f,b
  8591  004EF0  0C00               	retlw	0
  8592  004EF2                     l16954:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;RouteManager.c: 272: {
  8596                           ;RouteManager.c: 274: routingTable[idx].neighbor = from;
  8597  004EF2  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8598  004EF4  0D09               	mullw	9
  8599  004EF6  0E98               	movlw	low _routingTable
  8600  004EF8  24F3               	addwf	prodl,w,c
  8601  004EFA  6ED9               	movwf	fsr2l,c
  8602  004EFC  0E06               	movlw	high _routingTable
  8603  004EFE  20F4               	addwfc	prodh,w,c
  8604  004F00  6EDA               	movwf	fsr2h,c
  8605  004F02  C08F  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  8606  004F06  C090  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  8607                           
  8608                           ;RouteManager.c: 275: routingTable[idx].info.parent = parent;
  8609  004F0A  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8610  004F0C  0D09               	mullw	9
  8611  004F0E  0E9A               	movlw	low (_routingTable+2)
  8612  004F10  24F3               	addwf	prodl,w,c
  8613  004F12  6ED9               	movwf	fsr2l,c
  8614  004F14  0E06               	movlw	high (_routingTable+2)
  8615  004F16  20F4               	addwfc	prodh,w,c
  8616  004F18  6EDA               	movwf	fsr2h,c
  8617  004F1A  C091  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  8618  004F1E  C092  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  8619                           
  8620                           ;RouteManager.c: 276: routingTable[idx].info.etx = etx;
  8621  004F22  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8622  004F24  0D09               	mullw	9
  8623  004F26  0E9C               	movlw	low (_routingTable+4)
  8624  004F28  24F3               	addwf	prodl,w,c
  8625  004F2A  6ED9               	movwf	fsr2l,c
  8626  004F2C  0E06               	movlw	high (_routingTable+4)
  8627  004F2E  20F4               	addwfc	prodh,w,c
  8628  004F30  6EDA               	movwf	fsr2h,c
  8629  004F32  C093  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  8630  004F36  C094  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  8631                           
  8632                           ;RouteManager.c: 277: routingTable[idx].info.haveHeard = 1;
  8633  004F3A  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8634  004F3C  0D09               	mullw	9
  8635  004F3E  0E9E               	movlw	low (_routingTable+6)
  8636  004F40  24F3               	addwf	prodl,w,c
  8637  004F42  6ED9               	movwf	fsr2l,c
  8638  004F44  0E06               	movlw	high (_routingTable+6)
  8639  004F46  20F4               	addwfc	prodh,w,c
  8640  004F48  6EDA               	movwf	fsr2h,c
  8641  004F4A  0E01               	movlw	1
  8642  004F4C  6EDF               	movwf	indf2,c
  8643  004F4E  0C01               	retlw	1
  8644  004F50                     __end_of_routingTableUpdateEntry:
  8645                           	opt stack 0
  8646                           tblptru	equ	0xFF8
  8647                           tblptrh	equ	0xFF7
  8648                           tblptrl	equ	0xFF6
  8649                           tablat	equ	0xFF5
  8650                           prodh	equ	0xFF4
  8651                           prodl	equ	0xFF3
  8652                           intcon	equ	0xFF2
  8653                           postinc0	equ	0xFEE
  8654                           plusw0	equ	0xFEB
  8655                           wreg	equ	0xFE8
  8656                           postdec1	equ	0xFE5
  8657                           plusw1	equ	0xFE3
  8658                           fsr1h	equ	0xFE2
  8659                           fsr1l	equ	0xFE1
  8660                           indf2	equ	0xFDF
  8661                           postinc2	equ	0xFDE
  8662                           postdec2	equ	0xFDD
  8663                           plusw2	equ	0xFDB
  8664                           fsr2h	equ	0xFDA
  8665                           fsr2l	equ	0xFD9
  8666                           status	equ	0xFD8
  8667                           
  8668 ;; *************** function _RouteManagerSetNeighborCongested *****************
  8669 ;; Defined at:
  8670 ;;		line 294 in file "../RouteManager.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  n               2   19[BANK0 ] struct addr_t_def
  8673 ;;  congested       1   21[BANK0 ] unsigned char 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		None
  8680 ;; Tracked objects:
  8681 ;;		On entry : F/0
  8682 ;;		On exit  : F/0
  8683 ;;		Unchanged: F/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;Total ram usage:        3 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    5
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_RouteManagerProcessReceive
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text21
  8700  007686                     __ptext21:
  8701                           	opt stack 0
  8702  007686                     _RouteManagerSetNeighborCongested:
  8703                           	opt stack 21
  8704                           
  8705                           ; BSR set to: 0
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;incstack = 0
  8709  007686  0012               	return		;funcret
  8710  007688                     __end_of_RouteManagerSetNeighborCongested:
  8711                           	opt stack 0
  8712                           tblptru	equ	0xFF8
  8713                           tblptrh	equ	0xFF7
  8714                           tblptrl	equ	0xFF6
  8715                           tablat	equ	0xFF5
  8716                           prodh	equ	0xFF4
  8717                           prodl	equ	0xFF3
  8718                           intcon	equ	0xFF2
  8719                           postinc0	equ	0xFEE
  8720                           plusw0	equ	0xFEB
  8721                           wreg	equ	0xFE8
  8722                           postdec1	equ	0xFE5
  8723                           plusw1	equ	0xFE3
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           plusw2	equ	0xFDB
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8
  8733                           
  8734 ;; *************** function _LE_InsertNeighbor *****************
  8735 ;; Defined at:
  8736 ;;		line 240 in file "../LinkEstimator.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  neighbor        2   55[BANK0 ] struct addr_t_def
  8739 ;;  devType         1   57[BANK0 ] enum E144
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  nidx            1   60[BANK0 ] unsigned char 
  8742 ;;  res             1    0        enum E179
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      enum E180
  8745 ;; Registers used:
  8746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : F/0
  8749 ;;		On exit  : F/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8752 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;Total ram usage:        6 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:   10
  8759 ;; This function calls:
  8760 ;;		_RouterEvicted
  8761 ;;		_le_findEmptyNeighborIdx
  8762 ;;		_le_findIdx
  8763 ;;		_le_findWorstNeighborIdx
  8764 ;;		_le_initNeighborIdx
  8765 ;; This function is called by:
  8766 ;;		_RouteManagerProcessReceive
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text22
  8771  006034                     __ptext22:
  8772                           	opt stack 0
  8773  006034                     _LE_InsertNeighbor:
  8774                           	opt stack 16
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;LinkEstimator.c: 244: nidx = le_findIdx(neighbor);
  8778                           
  8779                           ; BSR set to: 0
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;incstack = 0
  8783  006034  C097  F081         	movff	LE_InsertNeighbor@neighbor,le_findIdx@ll_addr
  8784  006038  C098  F082         	movff	LE_InsertNeighbor@neighbor+1,le_findIdx@ll_addr+1
  8785  00603C  EC7B  F034         	call	_le_findIdx	;wreg free
  8786  006040  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;LinkEstimator.c: 245: if (nidx != 0xff)
  8790  006042  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  8791  006044  E001               	bz	l16966
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;LinkEstimator.c: 249: }else
  8795  006046  0012               	return	
  8796  006048                     l16966:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;LinkEstimator.c: 250: {
  8800                           ;LinkEstimator.c: 251: nidx = le_findEmptyNeighborIdx();
  8801  006048  EC24  F036         	call	_le_findEmptyNeighborIdx	;wreg free
  8802  00604C  0100               	movlb	0	; () banked
  8803  00604E  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
  8804  006050  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;LinkEstimator.c: 252: if (nidx != 0xff)
  8808  006052  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  8809  006054  E017               	bz	l16976
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;LinkEstimator.c: 253: {
  8813                           ;LinkEstimator.c: 255: le_initNeighborIdx(nidx, neighbor);
  8814  006056  C097  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
  8815  00605A  C098  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
  8816  00605E  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  8817  006060  ECE6  F030         	call	_le_initNeighborIdx
  8818  006064                     l16972:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;LinkEstimator.c: 256: neighbor_tbl[nidx].flags|=(devType<<4);
  8822  006064  C099  F09A         	movff	LE_InsertNeighbor@devType,??_LE_InsertNeighbor
  8823  006068  3B9A               	swapf	??_LE_InsertNeighbor& (0+255),f,b
  8824  00606A  0EF0               	movlw	240
  8825  00606C  179A               	andwf	??_LE_InsertNeighbor& (0+255),f,b
  8826  00606E  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  8827  006070  0D0B               	mullw	11
  8828  006072  0E05               	movlw	low (_neighbor_tbl+5)
  8829  006074  24F3               	addwf	prodl,w,c
  8830  006076  6ED9               	movwf	fsr2l,c
  8831  006078  0E05               	movlw	high (_neighbor_tbl+5)
  8832  00607A  20F4               	addwfc	prodh,w,c
  8833  00607C  6EDA               	movwf	fsr2h,c
  8834  00607E  519A               	movf	??_LE_InsertNeighbor& (0+255),w,b
  8835  006080  12DF               	iorwf	indf2,f,c
  8836  006082  0012               	return	
  8837  006084                     l16976:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;LinkEstimator.c: 259: {
  8841                           ;LinkEstimator.c: 260: nidx = le_findWorstNeighborIdx(10);
  8842  006084  0E0A               	movlw	10
  8843  006086  ECF3  F025         	call	_le_findWorstNeighborIdx
  8844  00608A  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
  8845  00608C  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;LinkEstimator.c: 261: if (nidx != 0xff)
  8849  00608E  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  8850  006090  B4D8               	btfsc	status,2,c
  8851  006092  0012               	return	
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;LinkEstimator.c: 262: {
  8855                           ;LinkEstimator.c: 265: RouterEvicted(neighbor_tbl[nidx].ll_addr);
  8856  006094  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  8857  006096  0D0B               	mullw	11
  8858  006098  0E00               	movlw	low _neighbor_tbl
  8859  00609A  24F3               	addwf	prodl,w,c
  8860  00609C  6ED9               	movwf	fsr2l,c
  8861  00609E  0E05               	movlw	high _neighbor_tbl
  8862  0060A0  20F4               	addwfc	prodh,w,c
  8863  0060A2  6EDA               	movwf	fsr2h,c
  8864  0060A4  CFDE F08F          	movff	postinc2,RouterEvicted@address
  8865  0060A8  CFDD F090          	movff	postdec2,RouterEvicted@address+1
  8866  0060AC  EC0F  F02E         	call	_RouterEvicted	;wreg free
  8867                           
  8868                           ;LinkEstimator.c: 266: le_initNeighborIdx(nidx, neighbor);
  8869  0060B0  C097  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
  8870  0060B4  C098  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
  8871  0060B8  0100               	movlb	0	; () banked
  8872  0060BA  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  8873  0060BC  ECE6  F030         	call	_le_initNeighborIdx
  8874  0060C0  D7D1               	goto	l16972
  8875  0060C2                     __end_of_LE_InsertNeighbor:
  8876                           	opt stack 0
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           intcon	equ	0xFF2
  8884                           postinc0	equ	0xFEE
  8885                           plusw0	equ	0xFEB
  8886                           wreg	equ	0xFE8
  8887                           postdec1	equ	0xFE5
  8888                           plusw1	equ	0xFE3
  8889                           fsr1h	equ	0xFE2
  8890                           fsr1l	equ	0xFE1
  8891                           indf2	equ	0xFDF
  8892                           postinc2	equ	0xFDE
  8893                           postdec2	equ	0xFDD
  8894                           plusw2	equ	0xFDB
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function _NetworkSendDiscoverResponse *****************
  8900 ;; Defined at:
  8901 ;;		line 407 in file "../NetworkManager.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  8906 ;;  address         2   68[BANK1 ] struct addr_t_def
  8907 ;;  dhdr            2   66[BANK1 ] PTR struct net_data_head
  8908 ;;		 -> NetworkSendDiscoverResponse@databuff(64), 
  8909 ;;  size            2   64[BANK1 ] unsigned int 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : F/0
  8916 ;;		On exit  : F/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Totals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;Total ram usage:       70 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    9
  8926 ;; This function calls:
  8927 ;;		_BroadcastManagerDelaySend
  8928 ;;		_NetworkAddressSizeGet
  8929 ;;		_NetworkPrepareSendPacket
  8930 ;;		_isNetworkSecurityEnabled
  8931 ;;		_memset
  8932 ;; This function is called by:
  8933 ;;		_radioReceivedPacket
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text23
  8938  00624A                     __ptext23:
  8939                           	opt stack 0
  8940  00624A                     _NetworkSendDiscoverResponse:
  8941                           	opt stack 18
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;NetworkManager.c: 409: addr_t address;
  8945                           ;NetworkManager.c: 410: uint16_t size;
  8946                           ;NetworkManager.c: 411: uint8_t databuff[64];
  8947                           ;NetworkManager.c: 412: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;incstack = 0
  8951  00624A  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  8952  00624C  0101               	movlb	1	; () banked
  8953  00624E  6F42               	movwf	NetworkSendDiscoverResponse@dhdr& (0+255),b
  8954  006250  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  8955  006252  6F43               	movwf	(NetworkSendDiscoverResponse@dhdr+1)& (0+255),b
  8956                           
  8957                           ; BSR set to: 1
  8958                           ;NetworkManager.c: 413: memset(address.bytes,0xff,NetworkAddressSizeGet());
  8959  006254  0E44               	movlw	low NetworkSendDiscoverResponse@address
  8960  006256  0100               	movlb	0	; () banked
  8961  006258  6F73               	movwf	memset@p1& (0+255),b
  8962  00625A  0E01               	movlw	high NetworkSendDiscoverResponse@address
  8963  00625C  6F74               	movwf	(memset@p1+1)& (0+255),b
  8964  00625E  6B76               	clrf	(memset@c+1)& (0+255),b
  8965  006260  6975               	setf	memset@c& (0+255),b
  8966  006262  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
  8967  006266  0100               	movlb	0	; () banked
  8968  006268  6F77               	movwf	memset@n& (0+255),b
  8969  00626A  6B78               	clrf	(memset@n+1)& (0+255),b
  8970  00626C  EC2F  F039         	call	_memset	;wreg free
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;NetworkManager.c: 414: size=NetworkPrepareSendPacket(address,databuff,PacketScanRespons
      +                          e,(0),0);
  8974  006270  C144  F07F         	movff	NetworkSendDiscoverResponse@address,NetworkPrepareSendPacket@address
  8975  006274  C145  F080         	movff	NetworkSendDiscoverResponse@address+1,NetworkPrepareSendPacket@address+1
  8976  006278  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  8977  00627A  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  8978  00627C  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  8979  00627E  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  8980  006280  0E28               	movlw	40
  8981  006282  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  8982  006284  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  8983  006286  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  8984  006288  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  8985  00628A  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  8986  00628C  EC07  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  8987  006290  C07F  F140         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverResponse@size
  8988  006294  C080  F141         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverResponse@size+1
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;NetworkManager.c: 415: dhdr->Hops=0;
  8992  006298  C142  FFD9         	movff	NetworkSendDiscoverResponse@dhdr,fsr2l
  8993  00629C  C143  FFDA         	movff	NetworkSendDiscoverResponse@dhdr+1,fsr2h
  8994  0062A0  6ADF               	clrf	indf2,c
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;NetworkManager.c: 416: BroadcastManagerDelaySend(databuff,size,isNetworkSecurityEnabled
      +                          (),1);
  8998  0062A2  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  8999  0062A4  6F9F               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  9000  0062A6  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  9001  0062A8  6FA0               	movwf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  9002  0062AA  C140  F0A1         	movff	NetworkSendDiscoverResponse@size,BroadcastManagerDelaySend@size
  9003  0062AE  C141  F0A2         	movff	NetworkSendDiscoverResponse@size+1,BroadcastManagerDelaySend@size+1
  9004  0062B2  EC27  F03B         	call	_isNetworkSecurityEnabled	;wreg free
  9005  0062B6  0100               	movlb	0	; () banked
  9006  0062B8  6FA3               	movwf	BroadcastManagerDelaySend@isSecure& (0+255),b
  9007  0062BA  0E01               	movlw	1
  9008  0062BC  6FA4               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  9009  0062BE  EFAD  F01C         	goto	_BroadcastManagerDelaySend	;wreg free
  9010  0062C2                     __end_of_NetworkSendDiscoverResponse:
  9011                           	opt stack 0
  9012                           tblptru	equ	0xFF8
  9013                           tblptrh	equ	0xFF7
  9014                           tblptrl	equ	0xFF6
  9015                           tablat	equ	0xFF5
  9016                           prodh	equ	0xFF4
  9017                           prodl	equ	0xFF3
  9018                           intcon	equ	0xFF2
  9019                           postinc0	equ	0xFEE
  9020                           plusw0	equ	0xFEB
  9021                           wreg	equ	0xFE8
  9022                           postdec1	equ	0xFE5
  9023                           plusw1	equ	0xFE3
  9024                           fsr1h	equ	0xFE2
  9025                           fsr1l	equ	0xFE1
  9026                           indf2	equ	0xFDF
  9027                           postinc2	equ	0xFDE
  9028                           postdec2	equ	0xFDD
  9029                           plusw2	equ	0xFDB
  9030                           fsr2h	equ	0xFDA
  9031                           fsr2l	equ	0xFD9
  9032                           status	equ	0xFD8
  9033                           
  9034 ;; *************** function _NetworkManagerProcessIncomingData *****************
  9035 ;; Defined at:
  9036 ;;		line 276 in file "../NetworkManager.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  data            2  124[BANK0 ] PTR unsigned char 
  9039 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9040 ;;  size            2  126[BANK0 ] unsigned int 
  9041 ;;  isBroadcast     1  128[BANK0 ] unsigned char 
  9042 ;;  isSecure        1  129[BANK0 ] unsigned char 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  buffer         64   64[BANK1 ] unsigned char [64]
  9045 ;;  dHdr            2  132[BANK1 ] PTR struct net_data_head
  9046 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9047 ;;  packetsize      2  129[BANK1 ] unsigned int 
  9048 ;;  isSecurePack    1  131[BANK1 ] unsigned char 
  9049 ;;  isFormed        1  128[BANK1 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      void 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : F/1
  9056 ;;		On exit  : E/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Totals:         0       7      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;Total ram usage:       77 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   14
  9066 ;; This function calls:
  9067 ;;		_BeaconManagerTrigger
  9068 ;;		_DeviceManagerGetDeviceData
  9069 ;;		_IsNetworkDevice
  9070 ;;		_NetworkDataArrivedEvent
  9071 ;;		_NetworkGetDeviceType
  9072 ;;		_TMSendDataToRFD
  9073 ;;		_TMSendFormedPacketToRFD
  9074 ;;		_isInvalidAddress
  9075 ;;		_memcpy
  9076 ;; This function is called by:
  9077 ;;		_radioReceivedPacket
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text24
  9082  002CF8                     __ptext24:
  9083                           	opt stack 0
  9084  002CF8                     _NetworkManagerProcessIncomingData:
  9085                           	opt stack 13
  9086                           
  9087                           ; BSR set to: 1
  9088                           ;NetworkManager.c: 278: net_data_header_t *dHdr=(net_data_header_t*)data;
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;incstack = 0
  9092  002CF8  C0DC  F184         	movff	NetworkManagerProcessIncomingData@data,NetworkManagerProcessIncomingData@dHdr
  9093  002CFC  C0DD  F185         	movff	NetworkManagerProcessIncomingData@data+1,NetworkManagerProcessIncomingData@dHdr+1
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;NetworkManager.c: 279: uint16_t packetsize;
  9097                           ;NetworkManager.c: 280: uint8_t buffer[64];
  9098                           ;NetworkManager.c: 281: bool isSecurePacket;
  9099                           ;NetworkManager.c: 282: bool isFormed;
  9100                           ;NetworkManager.c: 284: if(NetworkGetDeviceType()==DeviceCoordinator)
  9101  002D00  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  9102  002D04  0900               	iorlw	0
  9103  002D06  E001 D0B3          	bnz	l17508
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;NetworkManager.c: 285: {
  9107                           ;NetworkManager.c: 286: if(IsNetworkDevice(dHdr->origin,(dHdr->flags & 0x07))==1)
  9108  002D0A  EE20 F006          	lfsr	2,6
  9109  002D0E  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9110  002D10  26D9               	addwf	fsr2l,f,c
  9111  002D12  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9112  002D14  22DA               	addwfc	fsr2h,f,c
  9113  002D16  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
  9114  002D1A  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
  9115  002D1E  EE20 F003          	lfsr	2,3
  9116  002D22  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9117  002D24  26D9               	addwf	fsr2l,f,c
  9118  002D26  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9119  002D28  22DA               	addwfc	fsr2h,f,c
  9120  002D2A  50DF               	movf	indf2,w,c
  9121  002D2C  0B07               	andlw	7
  9122  002D2E  0100               	movlb	0	; () banked
  9123  002D30  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
  9124  002D32  ECE5  F01B         	call	_IsNetworkDevice	;wreg free
  9125  002D36  06E8               	decf	wreg,f,c
  9126  002D38  E101 D087          	bz	l17506
  9127  002D3C  0012               	return	
  9128  002D3E                     l17482:
  9129                           
  9130                           ; BSR set to: 1
  9131                           ;NetworkManager.c: 293: packetsize=DeviceManagerGetDeviceData(dHdr->origin,buffer,&isSec
      +                          urePacket,&isFormed);
  9132  002D3E  EE20 F006          	lfsr	2,6
  9133  002D42  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9134  002D44  26D9               	addwf	fsr2l,f,c
  9135  002D46  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9136  002D48  22DA               	addwfc	fsr2h,f,c
  9137  002D4A  CFDE F081          	movff	postinc2,DeviceManagerGetDeviceData@address
  9138  002D4E  CFDD F082          	movff	postdec2,DeviceManagerGetDeviceData@address+1
  9139  002D52  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9140  002D54  0100               	movlb	0	; () banked
  9141  002D56  6F83               	movwf	DeviceManagerGetDeviceData@data& (0+255),b
  9142  002D58  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9143  002D5A  6F84               	movwf	(DeviceManagerGetDeviceData@data+1)& (0+255),b
  9144  002D5C  0E83               	movlw	low NetworkManagerProcessIncomingData@isSecurePacket
  9145  002D5E  6F85               	movwf	DeviceManagerGetDeviceData@isSecure& (0+255),b
  9146  002D60  0E01               	movlw	high NetworkManagerProcessIncomingData@isSecurePacket
  9147  002D62  6F86               	movwf	(DeviceManagerGetDeviceData@isSecure+1)& (0+255),b
  9148  002D64  0E80               	movlw	low NetworkManagerProcessIncomingData@isFormed
  9149  002D66  6F87               	movwf	DeviceManagerGetDeviceData@isFormed& (0+255),b
  9150  002D68  0E01               	movlw	high NetworkManagerProcessIncomingData@isFormed
  9151  002D6A  6F88               	movwf	(DeviceManagerGetDeviceData@isFormed+1)& (0+255),b
  9152  002D6C  ECC0  F03A         	call	_DeviceManagerGetDeviceData	;wreg free
  9153  002D70  C081  F181         	movff	?_DeviceManagerGetDeviceData,NetworkManagerProcessIncomingData@packetsize
  9154  002D74  C082  F182         	movff	?_DeviceManagerGetDeviceData+1,NetworkManagerProcessIncomingData@packetsize+1
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;NetworkManager.c: 294: if(packetsize>0)
  9158  002D78  0101               	movlb	1	; () banked
  9159  002D7A  5181               	movf	NetworkManagerProcessIncomingData@packetsize& (0+255),w,b
  9160  002D7C  1182               	iorwf	(NetworkManagerProcessIncomingData@packetsize+1)& (0+255),w,b
  9161  002D7E  B4D8               	btfsc	status,2,c
  9162  002D80  0012               	return	
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;NetworkManager.c: 295: {
  9166                           ;NetworkManager.c: 296: if(isFormed==1)
  9167  002D82  0580               	decf	NetworkManagerProcessIncomingData@isFormed& (0+255),w,b
  9168  002D84  E117               	bnz	l17490
  9169                           
  9170                           ; BSR set to: 1
  9171                           ;NetworkManager.c: 297: {
  9172                           ;NetworkManager.c: 298: TMSendFormedPacketToRFD(dHdr->origin, buffer, packetsize, isSecu
      +                          rePacket);
  9173  002D86  EE20 F006          	lfsr	2,6
  9174  002D8A  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9175  002D8C  26D9               	addwf	fsr2l,f,c
  9176  002D8E  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9177  002D90  22DA               	addwfc	fsr2h,f,c
  9178  002D92  CFDE F0C5          	movff	postinc2,TMSendFormedPacketToRFD@device
  9179  002D96  CFDD F0C6          	movff	postdec2,TMSendFormedPacketToRFD@device+1
  9180  002D9A  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9181  002D9C  0100               	movlb	0	; () banked
  9182  002D9E  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
  9183  002DA0  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9184  002DA2  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
  9185  002DA4  C181  F0C9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendFormedPacketToRFD@size
  9186  002DA8  C182  F0CA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendFormedPacketToRFD@size+1
  9187  002DAC  C183  F0CB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendFormedPacketToRFD@isSecure
  9188  002DB0  EF0A  F013         	goto	_TMSendFormedPacketToRFD	;wreg free
  9189  002DB4                     l17490:
  9190                           
  9191                           ; BSR set to: 1
  9192                           ;NetworkManager.c: 300: {
  9193                           ;NetworkManager.c: 301: TMSendDataToRFD(dHdr->origin,PacketData,buffer,packetsize,isSecu
      +                          rePacket);
  9194  002DB4  EE20 F006          	lfsr	2,6
  9195  002DB8  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9196  002DBA  26D9               	addwf	fsr2l,f,c
  9197  002DBC  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9198  002DBE  22DA               	addwfc	fsr2h,f,c
  9199  002DC0  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
  9200  002DC4  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
  9201  002DC8  0E23               	movlw	35
  9202  002DCA  0100               	movlb	0	; () banked
  9203  002DCC  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  9204  002DCE  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9205  002DD0  6FD7               	movwf	TMSendDataToRFD@data& (0+255),b
  9206  002DD2  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9207  002DD4  6FD8               	movwf	(TMSendDataToRFD@data+1)& (0+255),b
  9208  002DD6  C181  F0D9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendDataToRFD@size
  9209  002DDA  C182  F0DA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendDataToRFD@size+1
  9210  002DDE  C183  F0DB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendDataToRFD@isSecure
  9211  002DE2  EFFC  F035         	goto	_TMSendDataToRFD	;wreg free
  9212  002DE6                     l17492:
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;NetworkManager.c: 307: TMSendDataToRFD(dHdr->origin,PacketCheckinReply,(0),0, isSecure)
      +                          ;
  9216  002DE6  EE20 F006          	lfsr	2,6
  9217  002DEA  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9218  002DEC  26D9               	addwf	fsr2l,f,c
  9219  002DEE  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9220  002DF0  22DA               	addwfc	fsr2h,f,c
  9221  002DF2  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
  9222  002DF6  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
  9223  002DFA  0E25               	movlw	37
  9224  002DFC  0100               	movlb	0	; () banked
  9225  002DFE  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  9226  002E00  6BD7               	clrf	TMSendDataToRFD@data& (0+255),b
  9227  002E02  6BD8               	clrf	(TMSendDataToRFD@data+1)& (0+255),b
  9228  002E04  6BDA               	clrf	(TMSendDataToRFD@size+1)& (0+255),b
  9229  002E06  6BD9               	clrf	TMSendDataToRFD@size& (0+255),b
  9230  002E08  C0E1  F0DB         	movff	NetworkManagerProcessIncomingData@isSecure,TMSendDataToRFD@isSecure
  9231  002E0C  EFFC  F035         	goto	_TMSendDataToRFD	;wreg free
  9232  002E10                     l17494:
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;NetworkManager.c: 315: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
  9236  002E10  51D8               	movf	_userDataAvailable& (0+255),w,b
  9237  002E12  A4D8               	btfss	status,2,c
  9238  002E14  0012               	return	
  9239                           
  9240                           ; BSR set to: 1
  9241  002E16  0100               	movlb	0	; () banked
  9242  002E18  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9243  002E1A  E104               	bnz	u20980
  9244  002E1C  0E0B               	movlw	11
  9245  002E1E  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9246  002E20  A0D8               	btfss	status,0,c
  9247  002E22  0012               	return	
  9248  002E24                     u20980:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;NetworkManager.c: 316: {
  9252                           ;NetworkManager.c: 317: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
  9253  002E24  0EC8               	movlw	low _userdata
  9254  002E26  6F75               	movwf	memcpy@d1& (0+255),b
  9255  002E28  0E07               	movlw	high _userdata
  9256  002E2A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9257  002E2C  0E0A               	movlw	10
  9258  002E2E  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
  9259  002E30  6F77               	movwf	memcpy@s1& (0+255),b
  9260  002E32  0E00               	movlw	0
  9261  002E34  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
  9262  002E36  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  9263  002E38  0EF6               	movlw	246
  9264  002E3A  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9265  002E3C  6F79               	movwf	memcpy@n& (0+255),b
  9266  002E3E  0EFF               	movlw	255
  9267  002E40  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9268  002E42  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  9269  002E44  EC54  F035         	call	_memcpy	;wreg free
  9270  002E48  D054               	goto	L16
  9271  002E4A                     l17506:
  9272                           
  9273                           ; BSR set to: 0
  9274  002E4A  0101               	movlb	1	; () banked
  9275  002E4C  EE20 F002          	lfsr	2,2
  9276  002E50  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9277  002E52  26D9               	addwf	fsr2l,f,c
  9278  002E54  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9279  002E56  22DA               	addwfc	fsr2h,f,c
  9280  002E58  50DF               	movf	indf2,w,c
  9281                           
  9282                           ; Switch size 1, requested type "speed"
  9283                           ; Number of cases is 4, Range of values is 35 to 41
  9284                           ; switch strategies available:
  9285                           ; Name         Instructions Cycles
  9286                           ; simple_byte           13     7 (average)
  9287                           ;	Chosen strategy is simple_byte
  9288  002E5A  0A23               	xorlw	35	; case 35
  9289  002E5C  E0D9               	bz	l17494
  9290  002E5E  0A07               	xorlw	7	; case 36
  9291  002E60  E0C2               	bz	l17492
  9292  002E62  0A01               	xorlw	1	; case 37
  9293  002E64  B4D8               	btfsc	status,2,c
  9294  002E66  0012               	return	
  9295  002E68  0A0C               	xorlw	12	; case 41
  9296  002E6A  E101 D768          	bz	l17482
  9297                           
  9298                           ;NetworkManager.c: 327: }
  9299                           ;NetworkManager.c: 328: }else
  9300  002E6E  0012               	return	
  9301  002E70                     l17508:
  9302                           
  9303                           ; BSR set to: 1
  9304                           ;NetworkManager.c: 329: {
  9305                           ;NetworkManager.c: 330: if(dHdr->packettype==PacketCheckinReply)
  9306  002E70  EE20 F002          	lfsr	2,2
  9307  002E74  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9308  002E76  26D9               	addwf	fsr2l,f,c
  9309  002E78  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9310  002E7A  22DA               	addwfc	fsr2h,f,c
  9311  002E7C  0E25               	movlw	37
  9312  002E7E  18DE               	xorwf	postinc2,w,c
  9313  002E80  E11C               	bnz	l17522
  9314                           
  9315                           ; BSR set to: 1
  9316                           ;NetworkManager.c: 331: {
  9317                           ;NetworkManager.c: 332: if( (routeInfo.hasCheckedIn==0) && (isInvalidAddress(routeInfo.p
      +                          arent)==0) )
  9318  002E82  51DF               	movf	(_routeInfo+6)& (0+255),w,b
  9319  002E84  E10C               	bnz	l17518
  9320                           
  9321                           ; BSR set to: 1
  9322  002E86  C1D9  F086         	movff	_routeInfo,isInvalidAddress@address
  9323  002E8A  C1DA  F087         	movff	_routeInfo+1,isInvalidAddress@address+1
  9324  002E8E  ECD8  F03A         	call	_isInvalidAddress	;wreg free
  9325  002E92  0900               	iorlw	0
  9326  002E94  E104               	bnz	l17518
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;NetworkManager.c: 333: {
  9330                           ;NetworkManager.c: 335: BeaconManagerTrigger();
  9331  002E96  EC32  F03B         	call	_BeaconManagerTrigger	;wreg free
  9332                           
  9333                           ; BSR set to: 1
  9334                           ;NetworkManager.c: 336: routeInfo.hasCheckedIn=1;
  9335  002E9A  0E01               	movlw	1
  9336  002E9C  6FDF               	movwf	(_routeInfo+6)& (0+255),b
  9337  002E9E                     l17518:
  9338                           
  9339                           ;NetworkManager.c: 337: }
  9340                           ;NetworkManager.c: 338: CoordinatorAddr=dHdr->origin;
  9341  002E9E  0101               	movlb	1	; () banked
  9342  002EA0  EE20 F006          	lfsr	2,6
  9343  002EA4  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9344  002EA6  26D9               	addwf	fsr2l,f,c
  9345  002EA8  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9346  002EAA  22DA               	addwfc	fsr2h,f,c
  9347  002EAC  CFDE F1E6          	movff	postinc2,_CoordinatorAddr
  9348  002EB0  CFDD F1E7          	movff	postdec2,_CoordinatorAddr+1
  9349                           
  9350                           ; BSR set to: 1
  9351                           ;NetworkManager.c: 339: nState=netOperating;
  9352  002EB4  0E04               	movlw	4
  9353  002EB6  6FD5               	movwf	_nState& (0+255),b
  9354                           
  9355                           ;NetworkManager.c: 340: }else
  9356  002EB8  0C04               	retlw	4
  9357  002EBA                     l17522:
  9358                           
  9359                           ; BSR set to: 1
  9360                           ;NetworkManager.c: 341: {
  9361                           ;NetworkManager.c: 343: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
  9362  002EBA  51D8               	movf	_userDataAvailable& (0+255),w,b
  9363  002EBC  A4D8               	btfss	status,2,c
  9364  002EBE  0012               	return	
  9365                           
  9366                           ; BSR set to: 1
  9367  002EC0  0100               	movlb	0	; () banked
  9368  002EC2  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9369  002EC4  E104               	bnz	u21030
  9370  002EC6  0E0B               	movlw	11
  9371  002EC8  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9372  002ECA  A0D8               	btfss	status,0,c
  9373  002ECC  0012               	return	
  9374  002ECE                     u21030:
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;NetworkManager.c: 344: {
  9378                           ;NetworkManager.c: 345: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
  9379  002ECE  0EC8               	movlw	low _userdata
  9380  002ED0  6F75               	movwf	memcpy@d1& (0+255),b
  9381  002ED2  0E07               	movlw	high _userdata
  9382  002ED4  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9383  002ED6  0E0A               	movlw	10
  9384  002ED8  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
  9385  002EDA  6F77               	movwf	memcpy@s1& (0+255),b
  9386  002EDC  0E00               	movlw	0
  9387  002EDE  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
  9388  002EE0  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  9389  002EE2  0EF6               	movlw	246
  9390  002EE4  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9391  002EE6  6F79               	movwf	memcpy@n& (0+255),b
  9392  002EE8  0EFF               	movlw	255
  9393  002EEA  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9394  002EEC  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  9395  002EEE  EC54  F035         	call	_memcpy	;wreg free
  9396  002EF2                     L16:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;NetworkManager.c: 346: userDataAvailable=1;
  9400  002EF2  0E01               	movlw	1
  9401  002EF4  0101               	movlb	1	; () banked
  9402  002EF6  6FD8               	movwf	_userDataAvailable& (0+255),b
  9403                           
  9404                           ; BSR set to: 1
  9405                           ;NetworkManager.c: 347: NetworkDataArrivedEvent(dHdr->origin,userdata,size-sizeof(net_da
      +                          ta_header_t),isBroadcast);
  9406  002EF8  EE20 F006          	lfsr	2,6
  9407  002EFC  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9408  002EFE  26D9               	addwf	fsr2l,f,c
  9409  002F00  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9410  002F02  22DA               	addwfc	fsr2h,f,c
  9411  002F04  CFDE F07B          	movff	postinc2,NetworkDataArrivedEvent@source
  9412  002F08  CFDD F07C          	movff	postdec2,NetworkDataArrivedEvent@source+1
  9413  002F0C  0EC8               	movlw	low _userdata
  9414  002F0E  0100               	movlb	0	; () banked
  9415  002F10  6F7D               	movwf	NetworkDataArrivedEvent@data& (0+255),b
  9416  002F12  0E07               	movlw	high _userdata
  9417  002F14  6F7E               	movwf	(NetworkDataArrivedEvent@data+1)& (0+255),b
  9418  002F16  0EF6               	movlw	246
  9419  002F18  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9420  002F1A  6F7F               	movwf	NetworkDataArrivedEvent@size& (0+255),b
  9421  002F1C  0EFF               	movlw	255
  9422  002F1E  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9423  002F20  6F80               	movwf	(NetworkDataArrivedEvent@size+1)& (0+255),b
  9424  002F22  C0E0  F081         	movff	NetworkManagerProcessIncomingData@isBroadcast,NetworkDataArrivedEvent@isBroadcast
  9425  002F26  EF7F  F035         	goto	_NetworkDataArrivedEvent	;wreg free
  9426  002F2A                     __end_of_NetworkManagerProcessIncomingData:
  9427                           	opt stack 0
  9428                           tblptru	equ	0xFF8
  9429                           tblptrh	equ	0xFF7
  9430                           tblptrl	equ	0xFF6
  9431                           tablat	equ	0xFF5
  9432                           prodh	equ	0xFF4
  9433                           prodl	equ	0xFF3
  9434                           intcon	equ	0xFF2
  9435                           postinc0	equ	0xFEE
  9436                           plusw0	equ	0xFEB
  9437                           wreg	equ	0xFE8
  9438                           postdec1	equ	0xFE5
  9439                           plusw1	equ	0xFE3
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           plusw2	equ	0xFDB
  9446                           fsr2h	equ	0xFDA
  9447                           fsr2l	equ	0xFD9
  9448                           status	equ	0xFD8
  9449                           
  9450 ;; *************** function _TMSendDataToRFD *****************
  9451 ;; Defined at:
  9452 ;;		line 195 in file "../TransportManager.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  device          2  116[BANK0 ] struct addr_t_def
  9455 ;;  pType           1  118[BANK0 ] enum E232
  9456 ;;  data            2  119[BANK0 ] PTR unsigned char 
  9457 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), NULL(0), TxBuffer(64), 
  9458 ;;  size            2  121[BANK0 ] unsigned int 
  9459 ;;  isSecure        1  123[BANK0 ] unsigned char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      unsigned char 
  9464 ;; Registers used:
  9465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9466 ;; Tracked objects:
  9467 ;;		On entry : F/0
  9468 ;;		On exit  : F/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9472 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9474 ;;      Totals:         0       8      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9475 ;;Total ram usage:       72 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:   13
  9478 ;; This function calls:
  9479 ;;		_NetworkPrepareSendPacket
  9480 ;;		_TMSendFormedPacketToRFD
  9481 ;; This function is called by:
  9482 ;;		_NetworkUnicastData
  9483 ;;		_NetworkManagerProcessIncomingData
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text25
  9488  006BF8                     __ptext25:
  9489                           	opt stack 0
  9490  006BF8                     _TMSendDataToRFD:
  9491                           	opt stack 15
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;TransportManager.c: 197: uint8_t databuff[64];
  9495                           ;TransportManager.c: 198: size=NetworkPrepareSendPacket(device,databuff,pType,data,size)
      +                          ;
  9496                           
  9497                           ;incstack = 0
  9498  006BF8  C0D4  F07F         	movff	TMSendDataToRFD@device,NetworkPrepareSendPacket@address
  9499  006BFC  C0D5  F080         	movff	TMSendDataToRFD@device+1,NetworkPrepareSendPacket@address+1
  9500  006C00  0E00               	movlw	low TMSendDataToRFD@databuff
  9501  006C02  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  9502  006C04  0E01               	movlw	high TMSendDataToRFD@databuff
  9503  006C06  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  9504  006C08  C0D6  F083         	movff	TMSendDataToRFD@pType,NetworkPrepareSendPacket@pType
  9505  006C0C  C0D7  F084         	movff	TMSendDataToRFD@data,NetworkPrepareSendPacket@data
  9506  006C10  C0D8  F085         	movff	TMSendDataToRFD@data+1,NetworkPrepareSendPacket@data+1
  9507  006C14  C0D9  F086         	movff	TMSendDataToRFD@size,NetworkPrepareSendPacket@size
  9508  006C18  C0DA  F087         	movff	TMSendDataToRFD@size+1,NetworkPrepareSendPacket@size+1
  9509  006C1C  EC07  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  9510  006C20  C07F  F0D9         	movff	?_NetworkPrepareSendPacket,TMSendDataToRFD@size
  9511  006C24  C080  F0DA         	movff	?_NetworkPrepareSendPacket+1,TMSendDataToRFD@size+1
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;TransportManager.c: 199: return(TMSendFormedPacketToRFD(device, databuff, size, isSecur
      +                          e));
  9515  006C28  C0D4  F0C5         	movff	TMSendDataToRFD@device,TMSendFormedPacketToRFD@device
  9516  006C2C  C0D5  F0C6         	movff	TMSendDataToRFD@device+1,TMSendFormedPacketToRFD@device+1
  9517  006C30  0E00               	movlw	low TMSendDataToRFD@databuff
  9518  006C32  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
  9519  006C34  0E01               	movlw	high TMSendDataToRFD@databuff
  9520  006C36  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
  9521  006C38  C0D9  F0C9         	movff	TMSendDataToRFD@size,TMSendFormedPacketToRFD@size
  9522  006C3C  C0DA  F0CA         	movff	TMSendDataToRFD@size+1,TMSendFormedPacketToRFD@size+1
  9523  006C40  C0DB  F0CB         	movff	TMSendDataToRFD@isSecure,TMSendFormedPacketToRFD@isSecure
  9524  006C44  EF0A  F013         	goto	_TMSendFormedPacketToRFD	;wreg free
  9525  006C48                     __end_of_TMSendDataToRFD:
  9526                           	opt stack 0
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           postinc0	equ	0xFEE
  9535                           plusw0	equ	0xFEB
  9536                           wreg	equ	0xFE8
  9537                           postdec1	equ	0xFE5
  9538                           plusw1	equ	0xFE3
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           indf2	equ	0xFDF
  9542                           postinc2	equ	0xFDE
  9543                           postdec2	equ	0xFDD
  9544                           plusw2	equ	0xFDB
  9545                           fsr2h	equ	0xFDA
  9546                           fsr2l	equ	0xFD9
  9547                           status	equ	0xFD8
  9548                           
  9549 ;; *************** function _TMSendFormedPacketToRFD *****************
  9550 ;; Defined at:
  9551 ;;		line 202 in file "../TransportManager.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  device          2  101[BANK0 ] struct addr_t_def
  9554 ;;  data            2  103[BANK0 ] PTR unsigned char 
  9555 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
  9556 ;;  size            2  105[BANK0 ] unsigned int 
  9557 ;;  isSecure        1  107[BANK0 ] unsigned char 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  parent          2  114[BANK0 ] struct addr_t_def
  9560 ;;  dhdr            2  112[BANK0 ] PTR struct net_data_head
  9561 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
  9562 ;;  myaddr          2  109[BANK0 ] PTR struct addr_t_def
  9563 ;;		 -> MyAddress(2), 
  9564 ;;  res             1  111[BANK0 ] unsigned char 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      unsigned char 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : F/0
  9571 ;;		On exit  : F/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9574 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;Total ram usage:       15 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:   12
  9581 ;; This function calls:
  9582 ;;		_BroadcastManagerDelaySend
  9583 ;;		_GetRouteAddressOfChild
  9584 ;;		_LE_RemoveNeighborDevice
  9585 ;;		_NetworkGetDeviceType
  9586 ;;		_NetworkGetPANID
  9587 ;;		_NetworkGetParentAddress
  9588 ;;		_NetworkManagerGetMyAddress
  9589 ;;		_TMSendFormedPacketTowardsCoordinator
  9590 ;;		_TunnelManagerGetTunnel
  9591 ;;		_TunnelManagerInvalidateTunnel
  9592 ;;		_isBroadcastAddress
  9593 ;;		_isSameAddress
  9594 ;;		_radioUnicast
  9595 ;; This function is called by:
  9596 ;;		_TMSendDataToRFD
  9597 ;;		_NetworkManagerProcessIncomingData
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text26
  9602  002614                     __ptext26:
  9603                           	opt stack 0
  9604  002614                     _TMSendFormedPacketToRFD:
  9605                           	opt stack 15
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;TransportManager.c: 204: bool res=1;
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;incstack = 0
  9612  002614  0E01               	movlw	1
  9613  002616  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;TransportManager.c: 205: addr_t parent;
  9617                           ;TransportManager.c: 206: addr_t *myaddr=NetworkManagerGetMyAddress();
  9618  002618  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
  9619  00261C  C073  F0CD         	movff	?_NetworkManagerGetMyAddress,TMSendFormedPacketToRFD@myaddr
  9620  002620  C074  F0CE         	movff	?_NetworkManagerGetMyAddress+1,TMSendFormedPacketToRFD@myaddr+1
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;TransportManager.c: 207: net_data_header_t *dhdr=(net_data_header_t*)data;
  9624  002624  C0C7  F0D0         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketToRFD@dhdr
  9625  002628  C0C8  F0D1         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketToRFD@dhdr+1
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;TransportManager.c: 209: parent = TunnelManagerGetTunnel(device);
  9629  00262C  C0C5  F0AB         	movff	TMSendFormedPacketToRFD@device,TunnelManagerGetTunnel@device
  9630  002630  C0C6  F0AC         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerGetTunnel@device+1
  9631  002634  ECA7  F01F         	call	_TunnelManagerGetTunnel	;wreg free
  9632  002638  C0AB  F0D2         	movff	?_TunnelManagerGetTunnel,TMSendFormedPacketToRFD@parent
  9633  00263C  C0AC  F0D3         	movff	?_TunnelManagerGetTunnel+1,TMSendFormedPacketToRFD@parent+1
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;TransportManager.c: 210: if(isBroadcastAddress(parent)==1)
  9637  002640  C0D2  F07B         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
  9638  002644  C0D3  F07C         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
  9639  002648  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  9640  00264C  06E8               	decf	wreg,f,c
  9641  00264E  E001 D0AB          	bnz	l16756
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;TransportManager.c: 211: {
  9645                           ;TransportManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
  9646  002652  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  9647  002656  0900               	iorlw	0
  9648  002658  E115               	bnz	l16728
  9649                           
  9650                           ; BSR set to: 1
  9651                           ;TransportManager.c: 213: {
  9652                           ;TransportManager.c: 214: dhdr->Hops=20;
  9653  00265A  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
  9654  00265E  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
  9655  002662  0E14               	movlw	20
  9656  002664  6EDF               	movwf	indf2,c
  9657                           
  9658                           ; BSR set to: 1
  9659                           ;TransportManager.c: 215: BroadcastManagerDelaySend(data,size,isSecure,0);
  9660  002666  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
  9661  00266A  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
  9662  00266E  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
  9663  002672  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
  9664  002676  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
  9665  00267A  0100               	movlb	0	; () banked
  9666  00267C  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  9667  00267E  ECAD  F01C         	call	_BroadcastManagerDelaySend	;wreg free
  9668                           
  9669                           ;TransportManager.c: 216: }else
  9670  002682  D0F9               	goto	l16776
  9671  002684                     l16728:
  9672                           
  9673                           ; BSR set to: 1
  9674                           ;TransportManager.c: 217: {
  9675                           ;TransportManager.c: 219: parent=GetRouteAddressOfChild(device);
  9676  002684  C0C5  F08B         	movff	TMSendFormedPacketToRFD@device,GetRouteAddressOfChild@child
  9677  002688  C0C6  F08C         	movff	TMSendFormedPacketToRFD@device+1,GetRouteAddressOfChild@child+1
  9678  00268C  EC4E  F034         	call	_GetRouteAddressOfChild	;wreg free
  9679  002690  C08B  F0D2         	movff	?_GetRouteAddressOfChild,TMSendFormedPacketToRFD@parent
  9680  002694  C08C  F0D3         	movff	?_GetRouteAddressOfChild+1,TMSendFormedPacketToRFD@parent+1
  9681                           
  9682                           ;TransportManager.c: 220: if(isBroadcastAddress(parent)==0)
  9683  002698  C0D2  F07B         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
  9684  00269C  C0D3  F07C         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
  9685  0026A0  ECE1  F036         	call	_isBroadcastAddress	;wreg free
  9686  0026A4  0900               	iorlw	0
  9687  0026A6  E160               	bnz	l16750
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;TransportManager.c: 221: {
  9691                           ;TransportManager.c: 224: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
  9692  0026A8  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
  9693  0026AC  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
  9694  0026B0  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
  9695  0026B4  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  9696  0026B8  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  9697  0026BC  ECBA  F039         	call	_isSameAddress	;wreg free
  9698  0026C0  0900               	iorlw	0
  9699  0026C2  E014               	bz	l16738
  9700                           
  9701                           ; BSR set to: 0
  9702  0026C4  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  9703  0026C8  0900               	iorlw	0
  9704  0026CA  E010               	bz	l16738
  9705                           
  9706                           ; BSR set to: 1
  9707                           ;TransportManager.c: 225: {
  9708                           ;TransportManager.c: 226: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
  9709  0026CC  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
  9710  0026D0  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  9711  0026D4  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
  9712  0026D8  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  9713  0026DC  0E01               	movlw	1
  9714  0026DE  0100               	movlb	0	; () banked
  9715  0026E0  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  9716  0026E2  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  9717  0026E6  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  9718  0026EA  D093               	goto	L4
  9719  0026EC                     l16738:
  9720                           
  9721                           ;TransportManager.c: 228: {
  9722                           ;TransportManager.c: 229: res=radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)
      +                          ;
  9723  0026EC  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
  9724  0026F0  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
  9725  0026F4  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
  9726  0026F8  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  9727  0026FC  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  9728  002700  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
  9729  002704  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
  9730  002708  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
  9731  00270C  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
  9732  002710  ECD3  F035         	call	_radioUnicast	;wreg free
  9733  002714  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;TransportManager.c: 230: if(res==0)
  9737  002716  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
  9738  002718  E001 D0AD          	bnz	l16776
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;TransportManager.c: 231: {
  9742                           ;TransportManager.c: 232: LE_RemoveNeighborDevice(parent);
  9743  00271C  C0D2  F097         	movff	TMSendFormedPacketToRFD@parent,LE_RemoveNeighborDevice@device
  9744  002720  C0D3  F098         	movff	TMSendFormedPacketToRFD@parent+1,LE_RemoveNeighborDevice@device+1
  9745  002724  EC29  F033         	call	_LE_RemoveNeighborDevice	;wreg free
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;TransportManager.c: 233: if(dhdr->packettype==PacketData)
  9749  002728  EE20 F002          	lfsr	2,2
  9750  00272C  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
  9751  00272E  26D9               	addwf	fsr2l,f,c
  9752  002730  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
  9753  002732  22DA               	addwfc	fsr2h,f,c
  9754  002734  0E23               	movlw	35
  9755  002736  18DE               	xorwf	postinc2,w,c
  9756  002738  E108               	bnz	l16748
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;TransportManager.c: 234: {
  9760                           ;TransportManager.c: 235: dhdr->packettype=PacketRoutedData;
  9761  00273A  EE20 F002          	lfsr	2,2
  9762  00273E  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
  9763  002740  26D9               	addwf	fsr2l,f,c
  9764  002742  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
  9765  002744  22DA               	addwfc	fsr2h,f,c
  9766  002746  0E26               	movlw	38
  9767  002748  6EDF               	movwf	indf2,c
  9768  00274A                     l16748:
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;TransportManager.c: 236: }
  9772                           ;TransportManager.c: 237: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
  9773  00274A  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
  9774  00274E  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  9775  002752  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
  9776  002756  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  9777  00275A  0E01               	movlw	1
  9778  00275C  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  9779  00275E  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  9780  002762  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  9781  002766  D055               	goto	L4
  9782  002768                     l16750:
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;TransportManager.c: 241: {
  9786                           ;TransportManager.c: 242: if(dhdr->packettype==PacketData)
  9787  002768  EE20 F002          	lfsr	2,2
  9788  00276C  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
  9789  00276E  26D9               	addwf	fsr2l,f,c
  9790  002770  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
  9791  002772  22DA               	addwfc	fsr2h,f,c
  9792  002774  0E23               	movlw	35
  9793  002776  18DE               	xorwf	postinc2,w,c
  9794  002778  E108               	bnz	l16754
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;TransportManager.c: 243: {
  9798                           ;TransportManager.c: 244: dhdr->packettype=PacketRoutedData;
  9799  00277A  EE20 F002          	lfsr	2,2
  9800  00277E  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
  9801  002780  26D9               	addwf	fsr2l,f,c
  9802  002782  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
  9803  002784  22DA               	addwfc	fsr2h,f,c
  9804  002786  0E26               	movlw	38
  9805  002788  6EDF               	movwf	indf2,c
  9806  00278A                     l16754:
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;TransportManager.c: 245: }
  9810                           ;TransportManager.c: 246: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
  9811  00278A  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
  9812  00278E  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  9813  002792  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
  9814  002796  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  9815  00279A  0E01               	movlw	1
  9816  00279C  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  9817  00279E  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  9818  0027A2  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;TransportManager.c: 247: }
  9822                           ;TransportManager.c: 248: }
  9823                           ;TransportManager.c: 249: }else
  9824  0027A6  D067               	goto	l16776
  9825  0027A8                     l16756:
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;TransportManager.c: 250: {
  9829                           ;TransportManager.c: 252: if(isSameAddress(parent,*myaddr))
  9830  0027A8  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
  9831  0027AC  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
  9832  0027B0  C0CD  FFD9         	movff	TMSendFormedPacketToRFD@myaddr,fsr2l
  9833  0027B4  C0CE  FFDA         	movff	TMSendFormedPacketToRFD@myaddr+1,fsr2h
  9834  0027B8  CFDE F07F          	movff	postinc2,isSameAddress@a2
  9835  0027BC  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  9836  0027C0  ECBA  F039         	call	_isSameAddress	;wreg free
  9837  0027C4  0900               	iorlw	0
  9838  0027C6  E004               	bz	l16760
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;TransportManager.c: 253: {
  9842                           ;TransportManager.c: 254: parent=device;
  9843  0027C8  C0C5  F0D2         	movff	TMSendFormedPacketToRFD@device,TMSendFormedPacketToRFD@parent
  9844  0027CC  C0C6  F0D3         	movff	TMSendFormedPacketToRFD@device+1,TMSendFormedPacketToRFD@parent+1
  9845  0027D0                     l16760:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;TransportManager.c: 255: }
  9849                           ;TransportManager.c: 256: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
  9850  0027D0  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
  9851  0027D4  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
  9852  0027D8  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
  9853  0027DC  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  9854  0027E0  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  9855  0027E4  ECBA  F039         	call	_isSameAddress	;wreg free
  9856  0027E8  0900               	iorlw	0
  9857  0027EA  E015               	bz	l16766
  9858                           
  9859                           ; BSR set to: 0
  9860  0027EC  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
  9861  0027F0  0900               	iorlw	0
  9862  0027F2  E011               	bz	l16766
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;TransportManager.c: 257: {
  9866                           ;TransportManager.c: 258: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
  9867  0027F4  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
  9868  0027F8  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  9869  0027FC  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
  9870  002800  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  9871  002804  0E01               	movlw	1
  9872  002806  0100               	movlb	0	; () banked
  9873  002808  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  9874  00280A  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  9875  00280E  ECFF  F020         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  9876  002812                     L4:
  9877  002812  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
  9878                           
  9879                           ;TransportManager.c: 259: }else
  9880  002814  D030               	goto	l16776
  9881  002816                     l16766:
  9882                           
  9883                           ;TransportManager.c: 260: {
  9884                           ;TransportManager.c: 261: res=radioUnicast(parent,NetworkGetPANID(),data,size,isSecure);
  9885  002816  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
  9886  00281A  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
  9887  00281E  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
  9888  002822  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  9889  002826  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  9890  00282A  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
  9891  00282E  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
  9892  002832  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
  9893  002836  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
  9894  00283A  ECD3  F035         	call	_radioUnicast	;wreg free
  9895  00283E  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;TransportManager.c: 262: if(res==0)
  9899  002840  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
  9900  002842  E119               	bnz	l16776
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;TransportManager.c: 263: {
  9904                           ;TransportManager.c: 264: TunnelManagerInvalidateTunnel(device);
  9905  002844  C0C5  F081         	movff	TMSendFormedPacketToRFD@device,TunnelManagerInvalidateTunnel@device
  9906  002848  C0C6  F082         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerInvalidateTunnel@device+1
  9907  00284C  EC42  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;TransportManager.c: 265: dhdr->Hops=20;
  9911  002850  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
  9912  002854  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
  9913  002858  0E14               	movlw	20
  9914  00285A  6EDF               	movwf	indf2,c
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;TransportManager.c: 266: BroadcastManagerDelaySend(data,size,isSecure,0);
  9918  00285C  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
  9919  002860  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
  9920  002864  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
  9921  002868  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
  9922  00286C  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
  9923  002870  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  9924  002872  ECAD  F01C         	call	_BroadcastManagerDelaySend	;wreg free
  9925  002876                     l16776:
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;TransportManager.c: 267: }
  9929                           ;TransportManager.c: 268: }
  9930                           ;TransportManager.c: 269: }
  9931                           ;TransportManager.c: 270: return(res);
  9932  002876  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
  9933                           
  9934                           ; BSR set to: 0
  9935  002878  0012               	return		;funcret
  9936  00287A                     __end_of_TMSendFormedPacketToRFD:
  9937                           	opt stack 0
  9938                           tblptru	equ	0xFF8
  9939                           tblptrh	equ	0xFF7
  9940                           tblptrl	equ	0xFF6
  9941                           tablat	equ	0xFF5
  9942                           prodh	equ	0xFF4
  9943                           prodl	equ	0xFF3
  9944                           intcon	equ	0xFF2
  9945                           postinc0	equ	0xFEE
  9946                           plusw0	equ	0xFEB
  9947                           wreg	equ	0xFE8
  9948                           postdec1	equ	0xFE5
  9949                           plusw1	equ	0xFE3
  9950                           fsr1h	equ	0xFE2
  9951                           fsr1l	equ	0xFE1
  9952                           indf2	equ	0xFDF
  9953                           postinc2	equ	0xFDE
  9954                           postdec2	equ	0xFDD
  9955                           plusw2	equ	0xFDB
  9956                           fsr2h	equ	0xFDA
  9957                           fsr2l	equ	0xFD9
  9958                           status	equ	0xFD8
  9959                           
  9960 ;; *************** function _TunnelManagerInvalidateTunnel *****************
  9961 ;; Defined at:
  9962 ;;		line 96 in file "../TunnelManager.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  device          2   33[BANK0 ] struct addr_t_def
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  i               2   39[BANK0 ] unsigned int 
  9967 ;;  addr            2   37[BANK0 ] struct addr_t_def
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : F/0
  9974 ;;		On exit  : F/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9978 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9979 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9980 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9981 ;;Total ram usage:        8 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    7
  9984 ;; This function calls:
  9985 ;;		_NetworkAddressSizeGet
  9986 ;;		_isSameAddress
  9987 ;;		_memcpy
  9988 ;;		_memset
  9989 ;; This function is called by:
  9990 ;;		_radioReceivedPacket
  9991 ;;		_TMSendFormedPacketToRFD
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           	psect	text27
  9996  005E84                     __ptext27:
  9997                           	opt stack 0
  9998  005E84                     _TunnelManagerInvalidateTunnel:
  9999                           	opt stack 19
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;TunnelManager.c: 98: uint16_t i;
 10003                           ;TunnelManager.c: 99: addr_t addr;
 10004                           ;TunnelManager.c: 101: memcpy((uint8_t*)&addr,&device,NetworkAddressSizeGet());
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;incstack = 0
 10008  005E84  0E85               	movlw	low TunnelManagerInvalidateTunnel@addr
 10009  005E86  6F75               	movwf	memcpy@d1& (0+255),b
 10010  005E88  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10011  005E8A  0E81               	movlw	low TunnelManagerInvalidateTunnel@device
 10012  005E8C  6F77               	movwf	memcpy@s1& (0+255),b
 10013  005E8E  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 10014  005E90  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 10015  005E94  0100               	movlb	0	; () banked
 10016  005E96  6F79               	movwf	memcpy@n& (0+255),b
 10017  005E98  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10018  005E9A  EC54  F035         	call	_memcpy	;wreg free
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;TunnelManager.c: 103: for(i=0;i<10;i++)
 10022  005E9E  6B87               	clrf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10023  005EA0  6B88               	clrf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10024  005EA2                     l16368:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;TunnelManager.c: 104: {
 10028                           ;TunnelManager.c: 105: if(isSameAddress(addr,tunnels[i].devAddress)==1)
 10029  005EA2  C085  F07D         	movff	TunnelManagerInvalidateTunnel@addr,isSameAddress@a1
 10030  005EA6  C086  F07E         	movff	TunnelManagerInvalidateTunnel@addr+1,isSameAddress@a1+1
 10031  005EAA  0E0C               	movlw	12
 10032  005EAC  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10033  005EAE  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 10034  005EB2  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 10035  005EB6  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10036  005EB8  50F3               	movf	prodl,w,c
 10037  005EBA  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 10038  005EBC  0E08               	movlw	low (_tunnels+8)
 10039  005EBE  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 10040  005EC0  6ED9               	movwf	fsr2l,c
 10041  005EC2  0E04               	movlw	high (_tunnels+8)
 10042  005EC4  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 10043  005EC6  6EDA               	movwf	fsr2h,c
 10044  005EC8  CFDE F07F          	movff	postinc2,isSameAddress@a2
 10045  005ECC  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 10046  005ED0  ECBA  F039         	call	_isSameAddress	;wreg free
 10047  005ED4  06E8               	decf	wreg,f,c
 10048  005ED6  E116               	bnz	l16372
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;TunnelManager.c: 106: {
 10052                           ;TunnelManager.c: 107: memset(&tunnels[i].TxTime,0x00,sizeof(TickMS));
 10053  005ED8  0E0C               	movlw	12
 10054  005EDA  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10055  005EDC  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 10056  005EE0  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 10057  005EE4  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10058  005EE6  50F3               	movf	prodl,w,c
 10059  005EE8  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 10060  005EEA  0E00               	movlw	low _tunnels
 10061  005EEC  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 10062  005EEE  6F73               	movwf	memset@p1& (0+255),b
 10063  005EF0  0E04               	movlw	high _tunnels
 10064  005EF2  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 10065  005EF4  6F74               	movwf	(memset@p1+1)& (0+255),b
 10066  005EF6  6B76               	clrf	(memset@c+1)& (0+255),b
 10067  005EF8  6B75               	clrf	memset@c& (0+255),b
 10068  005EFA  6B78               	clrf	(memset@n+1)& (0+255),b
 10069  005EFC  0E08               	movlw	8
 10070  005EFE  6F77               	movwf	memset@n& (0+255),b
 10071  005F00  EC2F  F039         	call	_memset	;wreg free
 10072  005F04                     l16372:
 10073                           
 10074                           ; BSR set to: 0
 10075  005F04  4B87               	infsnz	TunnelManagerInvalidateTunnel@i& (0+255),f,b
 10076  005F06  2B88               	incf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),f,b
 10077                           
 10078                           ; BSR set to: 0
 10079  005F08  5188               	movf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),w,b
 10080  005F0A  E103               	bnz	u19260
 10081  005F0C  0E0A               	movlw	10
 10082  005F0E  5D87               	subwf	TunnelManagerInvalidateTunnel@i& (0+255),w,b
 10083  005F10  E3C8               	bnc	l16368
 10084  005F12                     u19260:
 10085                           
 10086                           ; BSR set to: 0
 10087  005F12  0012               	return		;funcret
 10088  005F14                     __end_of_TunnelManagerInvalidateTunnel:
 10089                           	opt stack 0
 10090                           tblptru	equ	0xFF8
 10091                           tblptrh	equ	0xFF7
 10092                           tblptrl	equ	0xFF6
 10093                           tablat	equ	0xFF5
 10094                           prodh	equ	0xFF4
 10095                           prodl	equ	0xFF3
 10096                           intcon	equ	0xFF2
 10097                           postinc0	equ	0xFEE
 10098                           plusw0	equ	0xFEB
 10099                           wreg	equ	0xFE8
 10100                           postdec1	equ	0xFE5
 10101                           plusw1	equ	0xFE3
 10102                           fsr1h	equ	0xFE2
 10103                           fsr1l	equ	0xFE1
 10104                           indf2	equ	0xFDF
 10105                           postinc2	equ	0xFDE
 10106                           postdec2	equ	0xFDD
 10107                           plusw2	equ	0xFDB
 10108                           fsr2h	equ	0xFDA
 10109                           fsr2l	equ	0xFD9
 10110                           status	equ	0xFD8
 10111                           
 10112 ;; *************** function _TunnelManagerGetTunnel *****************
 10113 ;; Defined at:
 10114 ;;		line 70 in file "../TunnelManager.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  device          2   75[BANK0 ] struct addr_t_def
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  trec            8   83[BANK0 ] struct TickMS_t_def
 10119 ;;  i               2   95[BANK0 ] unsigned int 
 10120 ;;  retAddr         2   93[BANK0 ] struct addr_t_def
 10121 ;;  addr            2   91[BANK0 ] struct addr_t_def
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  2   75[BANK0 ] struct addr_t_def
 10124 ;; Registers used:
 10125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10126 ;; Tracked objects:
 10127 ;;		On entry : F/0
 10128 ;;		On exit  : F/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10132 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10133 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10134 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10135 ;;Total ram usage:       22 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; Hardware stack levels required when called:    9
 10138 ;; This function calls:
 10139 ;;		_MSTickGetDiffNow
 10140 ;;		_NetworkAddressSizeGet
 10141 ;;		_isSameAddress
 10142 ;;		_memcpy
 10143 ;;		_memset
 10144 ;; This function is called by:
 10145 ;;		_radioReceivedPacket
 10146 ;;		_TMSendFormedPacketToRFD
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text28
 10151  003F4E                     __ptext28:
 10152                           	opt stack 0
 10153  003F4E                     _TunnelManagerGetTunnel:
 10154                           	opt stack 17
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;TunnelManager.c: 72: addr_t retAddr;
 10158                           ;TunnelManager.c: 73: uint16_t i;
 10159                           ;TunnelManager.c: 74: TickMS trec;
 10160                           ;TunnelManager.c: 75: addr_t addr;
 10161                           ;TunnelManager.c: 77: memset(&retAddr,0xff,sizeof(retAddr));
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;incstack = 0
 10165  003F4E  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 10166  003F50  6F73               	movwf	memset@p1& (0+255),b
 10167  003F52  6B74               	clrf	(memset@p1+1)& (0+255),b
 10168  003F54  6B76               	clrf	(memset@c+1)& (0+255),b
 10169  003F56  6975               	setf	memset@c& (0+255),b
 10170  003F58  6B78               	clrf	(memset@n+1)& (0+255),b
 10171  003F5A  0E02               	movlw	2
 10172  003F5C  6F77               	movwf	memset@n& (0+255),b
 10173  003F5E  EC2F  F039         	call	_memset	;wreg free
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;TunnelManager.c: 78: memcpy((uint8_t*)&addr,(uint8_t*)&device,NetworkAddressSizeGet());
 10177  003F62  0EBB               	movlw	low TunnelManagerGetTunnel@addr
 10178  003F64  6F75               	movwf	memcpy@d1& (0+255),b
 10179  003F66  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10180  003F68  0EAB               	movlw	low TunnelManagerGetTunnel@device
 10181  003F6A  6F77               	movwf	memcpy@s1& (0+255),b
 10182  003F6C  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 10183  003F6E  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 10184  003F72  0100               	movlb	0	; () banked
 10185  003F74  6F79               	movwf	memcpy@n& (0+255),b
 10186  003F76  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10187  003F78  EC54  F035         	call	_memcpy	;wreg free
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;TunnelManager.c: 80: for(i=0;i<10;i++)
 10191  003F7C  6BBF               	clrf	TunnelManagerGetTunnel@i& (0+255),b
 10192  003F7E  6BC0               	clrf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10193  003F80                     l16318:
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;TunnelManager.c: 81: {
 10197                           ;TunnelManager.c: 82: if((isSameAddress(addr,tunnels[i].devAddress)==1) && (((tunnels[i]
      +                          .TxTime.msb==0) && (tunnels[i].TxTime.lsb==0))==0))
 10198  003F80  C0BB  F07D         	movff	TunnelManagerGetTunnel@addr,isSameAddress@a1
 10199  003F84  C0BC  F07E         	movff	TunnelManagerGetTunnel@addr+1,isSameAddress@a1+1
 10200  003F88  0E0C               	movlw	12
 10201  003F8A  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10202  003F8C  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10203  003F90  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10204  003F94  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10205  003F96  50F3               	movf	prodl,w,c
 10206  003F98  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10207  003F9A  0E08               	movlw	low (_tunnels+8)
 10208  003F9C  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10209  003F9E  6ED9               	movwf	fsr2l,c
 10210  003FA0  0E04               	movlw	high (_tunnels+8)
 10211  003FA2  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10212  003FA4  6EDA               	movwf	fsr2h,c
 10213  003FA6  CFDE F07F          	movff	postinc2,isSameAddress@a2
 10214  003FAA  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 10215  003FAE  ECBA  F039         	call	_isSameAddress	;wreg free
 10216  003FB2  06E8               	decf	wreg,f,c
 10217  003FB4  E16C               	bnz	l16330
 10218                           
 10219                           ; BSR set to: 0
 10220  003FB6  0E0C               	movlw	12
 10221  003FB8  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10222  003FBA  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10223  003FBE  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10224  003FC2  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10225  003FC4  50F3               	movf	prodl,w,c
 10226  003FC6  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10227  003FC8  0E04               	movlw	low (_tunnels+4)
 10228  003FCA  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10229  003FCC  6ED9               	movwf	fsr2l,c
 10230  003FCE  0E04               	movlw	high (_tunnels+4)
 10231  003FD0  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10232  003FD2  6EDA               	movwf	fsr2h,c
 10233  003FD4  50DE               	movf	postinc2,w,c
 10234  003FD6  10DE               	iorwf	postinc2,w,c
 10235  003FD8  10DE               	iorwf	postinc2,w,c
 10236  003FDA  10DE               	iorwf	postinc2,w,c
 10237  003FDC  E114               	bnz	l16324
 10238                           
 10239                           ; BSR set to: 0
 10240  003FDE  0E0C               	movlw	12
 10241  003FE0  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10242  003FE2  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10243  003FE6  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10244  003FEA  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10245  003FEC  50F3               	movf	prodl,w,c
 10246  003FEE  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10247  003FF0  0E00               	movlw	low _tunnels
 10248  003FF2  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10249  003FF4  6ED9               	movwf	fsr2l,c
 10250  003FF6  0E04               	movlw	high _tunnels
 10251  003FF8  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10252  003FFA  6EDA               	movwf	fsr2h,c
 10253  003FFC  50DE               	movf	postinc2,w,c
 10254  003FFE  10DE               	iorwf	postinc2,w,c
 10255  004000  10DE               	iorwf	postinc2,w,c
 10256  004002  10DE               	iorwf	postinc2,w,c
 10257  004004  E044               	bz	l16330
 10258  004006                     l16324:
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;TunnelManager.c: 83: {
 10262                           ;TunnelManager.c: 84: trec=tunnels[i].TxTime;
 10263  004006  0E0C               	movlw	12
 10264  004008  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10265  00400A  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10266  00400E  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10267  004012  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10268  004014  50F3               	movf	prodl,w,c
 10269  004016  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10270  004018  0E00               	movlw	low _tunnels
 10271  00401A  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10272  00401C  6ED9               	movwf	fsr2l,c
 10273  00401E  0E04               	movlw	high _tunnels
 10274  004020  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10275  004022  6EDA               	movwf	fsr2h,c
 10276  004024  EE10  F0B3         	lfsr	1,TunnelManagerGetTunnel@trec
 10277  004028  0E07               	movlw	7
 10278  00402A                     u19181:
 10279  00402A  CFDB FFE3          	movff	plusw2,plusw1
 10280  00402E  06E8               	decf	wreg,f,c
 10281  004030  E2FC               	bc	u19181
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;TunnelManager.c: 86: if(MSTickGetDiffNow(trec)<tmTimeout)
 10285  004032  EE20  F0B3         	lfsr	2,TunnelManagerGetTunnel@trec
 10286  004036  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 10287  00403A  0E07               	movlw	7
 10288  00403C                     u19191:
 10289  00403C  CFDB FFEB          	movff	plusw2,plusw0
 10290  004040  06E8               	decf	wreg,f,c
 10291  004042  E2FC               	bc	u19191
 10292  004044  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 10293  004048  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 10294  00404A  E121               	bnz	l16330
 10295  00404C  0E60               	movlw	96
 10296  00404E  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 10297  004050  0E5B               	movlw	91
 10298  004052  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 10299  004054  0E03               	movlw	3
 10300  004056  5991               	subwfb	(?_MSTickGetDiffNow+2)& (0+255),w,b
 10301  004058  E21A               	bc	l16330
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;TunnelManager.c: 87: {
 10305                           ;TunnelManager.c: 88: memcpy((uint8_t*)&retAddr,(uint8_t*)&tunnels[i].parent,NetworkAddr
      +                          essSizeGet());
 10306  00405A  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 10307  00405C  6F75               	movwf	memcpy@d1& (0+255),b
 10308  00405E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10309  004060  0E0C               	movlw	12
 10310  004062  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10311  004064  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10312  004068  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10313  00406C  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10314  00406E  50F3               	movf	prodl,w,c
 10315  004070  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10316  004072  0E0A               	movlw	low (_tunnels+10)
 10317  004074  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10318  004076  6F77               	movwf	memcpy@s1& (0+255),b
 10319  004078  0E04               	movlw	high (_tunnels+10)
 10320  00407A  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10321  00407C  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 10322  00407E  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 10323  004082  0100               	movlb	0	; () banked
 10324  004084  6F79               	movwf	memcpy@n& (0+255),b
 10325  004086  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10326  004088  EC54  F035         	call	_memcpy	;wreg free
 10327                           
 10328                           ;TunnelManager.c: 89: break;
 10329  00408C  D008               	goto	l1668
 10330  00408E                     l16330:
 10331                           
 10332                           ; BSR set to: 0
 10333  00408E  4BBF               	infsnz	TunnelManagerGetTunnel@i& (0+255),f,b
 10334  004090  2BC0               	incf	(TunnelManagerGetTunnel@i+1)& (0+255),f,b
 10335                           
 10336                           ; BSR set to: 0
 10337  004092  51C0               	movf	(TunnelManagerGetTunnel@i+1)& (0+255),w,b
 10338  004094  E104               	bnz	u19210
 10339  004096  0E0A               	movlw	10
 10340  004098  5DBF               	subwf	TunnelManagerGetTunnel@i& (0+255),w,b
 10341  00409A  E201 D771          	bnc	l16318
 10342  00409E                     u19210:
 10343  00409E                     l1668:
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;TunnelManager.c: 90: }
 10347                           ;TunnelManager.c: 91: }
 10348                           ;TunnelManager.c: 92: }
 10349                           ;TunnelManager.c: 93: return(retAddr);
 10350  00409E  C0BD  F0AB         	movff	TunnelManagerGetTunnel@retAddr,?_TunnelManagerGetTunnel
 10351  0040A2  C0BE  F0AC         	movff	TunnelManagerGetTunnel@retAddr+1,?_TunnelManagerGetTunnel+1
 10352                           
 10353                           ; BSR set to: 0
 10354  0040A6  0012               	return		;funcret
 10355  0040A8                     __end_of_TunnelManagerGetTunnel:
 10356                           	opt stack 0
 10357                           tblptru	equ	0xFF8
 10358                           tblptrh	equ	0xFF7
 10359                           tblptrl	equ	0xFF6
 10360                           tablat	equ	0xFF5
 10361                           prodh	equ	0xFF4
 10362                           prodl	equ	0xFF3
 10363                           intcon	equ	0xFF2
 10364                           postinc0	equ	0xFEE
 10365                           plusw0	equ	0xFEB
 10366                           wreg	equ	0xFE8
 10367                           postdec1	equ	0xFE5
 10368                           plusw1	equ	0xFE3
 10369                           fsr1h	equ	0xFE2
 10370                           fsr1l	equ	0xFE1
 10371                           indf2	equ	0xFDF
 10372                           postinc2	equ	0xFDE
 10373                           postdec2	equ	0xFDD
 10374                           plusw2	equ	0xFDB
 10375                           fsr2h	equ	0xFDA
 10376                           fsr2l	equ	0xFD9
 10377                           status	equ	0xFD8
 10378                           
 10379 ;; *************** function _TMSendFormedPacketTowardsCoordinator *****************
 10380 ;; Defined at:
 10381 ;;		line 151 in file "../TransportManager.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  data            2   42[BANK0 ] PTR unsigned char 
 10384 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), RxPacket.Payload(64), RxPacket(142),
      + 
 10385 ;;		 -> TxBuffer(64), 
 10386 ;;  size            2   44[BANK0 ] unsigned int 
 10387 ;;  isFormed        1   46[BANK0 ] unsigned char 
 10388 ;;  isSecure        1   47[BANK0 ] unsigned char 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;  i               2   51[BANK0 ] unsigned int 
 10391 ;;  res             1   50[BANK0 ] unsigned char 
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      unsigned char 
 10394 ;; Registers used:
 10395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : F/0
 10398 ;;		On exit  : F/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10401 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10402 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10405 ;;Total ram usage:       11 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; Hardware stack levels required when called:    9
 10408 ;; This function calls:
 10409 ;;		_NetworkHasRoute
 10410 ;;		_memcpy
 10411 ;; This function is called by:
 10412 ;;		_radioReceivedPacket
 10413 ;;		_NetworkUnicastData
 10414 ;;		_TMSendFormedPacketToRFD
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text29
 10419  0041FE                     __ptext29:
 10420                           	opt stack 0
 10421  0041FE                     _TMSendFormedPacketTowardsCoordinator:
 10422                           	opt stack 19
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;TransportManager.c: 153: bool res=0;
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;incstack = 0
 10429  0041FE  6B92               	clrf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;TransportManager.c: 154: uint16_t i;
 10433                           ;TransportManager.c: 155: if(size>64-1)
 10434  004200  518D               	movf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),w,b
 10435  004202  E103               	bnz	u19080
 10436  004204  0E40               	movlw	64
 10437  004206  5D8C               	subwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),w,b
 10438  004208  E303               	bnc	l16272
 10439  00420A                     u19080:
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;TransportManager.c: 156: {
 10443                           ;TransportManager.c: 157: size=64-1;
 10444  00420A  6B8D               	clrf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),b
 10445  00420C  0E3F               	movlw	63
 10446  00420E  6F8C               	movwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),b
 10447  004210                     l16272:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;TransportManager.c: 158: }
 10451                           ;TransportManager.c: 160: for(i=0;i<2;i++)
 10452  004210  6B93               	clrf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10453  004212  6B94               	clrf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10454  004214                     l16278:
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;TransportManager.c: 161: {
 10458                           ;TransportManager.c: 162: if(TMQ[i].TMQState==TMQIdle)
 10459  004214  0E4C               	movlw	76
 10460  004216  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10461  004218  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10462  00421C  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10463  004220  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10464  004222  50F3               	movf	prodl,w,c
 10465  004224  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10466  004226  0E4B               	movlw	low (_TMQ+75)
 10467  004228  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10468  00422A  6ED9               	movwf	fsr2l,c
 10469  00422C  0E06               	movlw	high (_TMQ+75)
 10470  00422E  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10471  004230  6EDA               	movwf	fsr2h,c
 10472  004232  50DF               	movf	indf2,w,c
 10473  004234  E007               	bz	l16286
 10474                           
 10475                           ; BSR set to: 0
 10476  004236  4B93               	infsnz	TMSendFormedPacketTowardsCoordinator@i& (0+255),f,b
 10477  004238  2B94               	incf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),f,b
 10478                           
 10479                           ; BSR set to: 0
 10480  00423A  5194               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 10481  00423C  E103               	bnz	u19100
 10482  00423E  0E02               	movlw	2
 10483  004240  5D93               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 10484  004242  E3E8               	bnc	l16278
 10485  004244                     u19100:
 10486  004244                     l16286:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;TransportManager.c: 165: }
 10490                           ;TransportManager.c: 166: }
 10491                           ;TransportManager.c: 167: if( (i<2) && (NetworkHasRoute()==1) )
 10492  004244  5194               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 10493  004246  E17E               	bnz	l16304
 10494  004248  0E02               	movlw	2
 10495  00424A  5D93               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 10496  00424C  E27B               	bc	l16304
 10497                           
 10498                           ; BSR set to: 0
 10499  00424E  EC18  F038         	call	_NetworkHasRoute	;wreg free
 10500  004252  06E8               	decf	wreg,f,c
 10501  004254  E177               	bnz	l16304
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;TransportManager.c: 168: {
 10505                           ;TransportManager.c: 169: memcpy(TMQ[i].data,data,size);
 10506  004256  0E4C               	movlw	76
 10507  004258  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10508  00425A  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10509  00425E  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10510  004262  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10511  004264  50F3               	movf	prodl,w,c
 10512  004266  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10513  004268  0E00               	movlw	low _TMQ
 10514  00426A  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10515  00426C  6F75               	movwf	memcpy@d1& (0+255),b
 10516  00426E  0E06               	movlw	high _TMQ
 10517  004270  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10518  004272  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 10519  004274  C08A  F077         	movff	TMSendFormedPacketTowardsCoordinator@data,memcpy@s1
 10520  004278  C08B  F078         	movff	TMSendFormedPacketTowardsCoordinator@data+1,memcpy@s1+1
 10521  00427C  C08C  F079         	movff	TMSendFormedPacketTowardsCoordinator@size,memcpy@n
 10522  004280  C08D  F07A         	movff	TMSendFormedPacketTowardsCoordinator@size+1,memcpy@n+1
 10523  004284  EC54  F035         	call	_memcpy	;wreg free
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;TransportManager.c: 170: TMQ[i].datasize=size;
 10527  004288  0E4C               	movlw	76
 10528  00428A  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10529  00428C  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10530  004290  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10531  004294  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10532  004296  50F3               	movf	prodl,w,c
 10533  004298  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10534  00429A  0E40               	movlw	low (_TMQ+64)
 10535  00429C  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10536  00429E  6ED9               	movwf	fsr2l,c
 10537  0042A0  0E06               	movlw	high (_TMQ+64)
 10538  0042A2  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10539  0042A4  6EDA               	movwf	fsr2h,c
 10540  0042A6  C08C  FFDF         	movff	TMSendFormedPacketTowardsCoordinator@size,indf2
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;TransportManager.c: 171: TMQ[i].retryCount=0;
 10544  0042AA  0E4C               	movlw	76
 10545  0042AC  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10546  0042AE  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10547  0042B2  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10548  0042B6  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10549  0042B8  50F3               	movf	prodl,w,c
 10550  0042BA  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10551  0042BC  0E49               	movlw	low (_TMQ+73)
 10552  0042BE  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10553  0042C0  6ED9               	movwf	fsr2l,c
 10554  0042C2  0E06               	movlw	high (_TMQ+73)
 10555  0042C4  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10556  0042C6  6EDA               	movwf	fsr2h,c
 10557  0042C8  6ADF               	clrf	indf2,c
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;TransportManager.c: 172: TMQ[i].TMQState=TMQSend;
 10561  0042CA  0E4C               	movlw	76
 10562  0042CC  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10563  0042CE  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10564  0042D2  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10565  0042D6  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10566  0042D8  50F3               	movf	prodl,w,c
 10567  0042DA  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10568  0042DC  0E4B               	movlw	low (_TMQ+75)
 10569  0042DE  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10570  0042E0  6ED9               	movwf	fsr2l,c
 10571  0042E2  0E06               	movlw	high (_TMQ+75)
 10572  0042E4  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10573  0042E6  6EDA               	movwf	fsr2h,c
 10574  0042E8  0E01               	movlw	1
 10575  0042EA  6EDF               	movwf	indf2,c
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;TransportManager.c: 173: TMQ[i].flags.isFormedPacket=isFormed;
 10579  0042EC  0E4C               	movlw	76
 10580  0042EE  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10581  0042F0  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10582  0042F4  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10583  0042F8  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10584  0042FA  50F3               	movf	prodl,w,c
 10585  0042FC  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10586  0042FE  0E4A               	movlw	low (_TMQ+74)
 10587  004300  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10588  004302  6ED9               	movwf	fsr2l,c
 10589  004304  0E06               	movlw	high (_TMQ+74)
 10590  004306  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10591  004308  6EDA               	movwf	fsr2h,c
 10592  00430A  B18E               	btfsc	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),0,b
 10593  00430C  D002               	bra	u19135
 10594  00430E  90DF               	bcf	indf2,0,c
 10595  004310  D001               	bra	u19136
 10596  004312                     u19135:
 10597  004312  80DF               	bsf	indf2,0,c
 10598  004314                     u19136:
 10599                           
 10600                           ; BSR set to: 6
 10601                           ;TransportManager.c: 174: TMQ[i].flags.isSecure=isSecure;
 10602  004314  0E4C               	movlw	76
 10603  004316  0100               	movlb	0	; () banked
 10604  004318  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10605  00431A  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10606  00431E  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10607  004322  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10608  004324  50F3               	movf	prodl,w,c
 10609  004326  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10610  004328  0E4A               	movlw	low (_TMQ+74)
 10611  00432A  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10612  00432C  6ED9               	movwf	fsr2l,c
 10613  00432E  0E06               	movlw	high (_TMQ+74)
 10614  004330  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10615  004332  6EDA               	movwf	fsr2h,c
 10616  004334  B18F               	btfsc	TMSendFormedPacketTowardsCoordinator@isSecure& (0+255),0,b
 10617  004336  D002               	bra	u19145
 10618  004338  92DF               	bcf	indf2,1,c
 10619  00433A  D001               	bra	u19146
 10620  00433C                     u19145:
 10621  00433C  82DF               	bsf	indf2,1,c
 10622  00433E                     u19146:
 10623                           
 10624                           ; BSR set to: 6
 10625                           ;TransportManager.c: 175: res=1;
 10626  00433E  0E01               	movlw	1
 10627  004340  0100               	movlb	0	; () banked
 10628  004342  6F92               	movwf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 10629  004344                     l16304:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;TransportManager.c: 176: }
 10633                           ;TransportManager.c: 177: return(res);
 10634  004344  5192               	movf	TMSendFormedPacketTowardsCoordinator@res& (0+255),w,b
 10635                           
 10636                           ; BSR set to: 0
 10637  004346  0012               	return		;funcret
 10638  004348                     __end_of_TMSendFormedPacketTowardsCoordinator:
 10639                           	opt stack 0
 10640                           tblptru	equ	0xFF8
 10641                           tblptrh	equ	0xFF7
 10642                           tblptrl	equ	0xFF6
 10643                           tablat	equ	0xFF5
 10644                           prodh	equ	0xFF4
 10645                           prodl	equ	0xFF3
 10646                           intcon	equ	0xFF2
 10647                           postinc0	equ	0xFEE
 10648                           plusw0	equ	0xFEB
 10649                           wreg	equ	0xFE8
 10650                           postdec1	equ	0xFE5
 10651                           plusw1	equ	0xFE3
 10652                           fsr1h	equ	0xFE2
 10653                           fsr1l	equ	0xFE1
 10654                           indf2	equ	0xFDF
 10655                           postinc2	equ	0xFDE
 10656                           postdec2	equ	0xFDD
 10657                           plusw2	equ	0xFDB
 10658                           fsr2h	equ	0xFDA
 10659                           fsr2l	equ	0xFD9
 10660                           status	equ	0xFD8
 10661                           
 10662 ;; *************** function _LE_RemoveNeighborDevice *****************
 10663 ;; Defined at:
 10664 ;;		line 519 in file "../LinkEstimator.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  device          2   55[BANK0 ] struct addr_t_def
 10667 ;; Auto vars:     Size  Location     Type
 10668 ;;  i               2   59[BANK0 ] unsigned int 
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  1    wreg      void 
 10671 ;; Registers used:
 10672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10673 ;; Tracked objects:
 10674 ;;		On entry : F/0
 10675 ;;		On exit  : F/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10682 ;;Total ram usage:        6 bytes
 10683 ;; Hardware stack levels used:    1
 10684 ;; Hardware stack levels required when called:   10
 10685 ;; This function calls:
 10686 ;;		_RouterEvicted
 10687 ;;		_le_findIdx
 10688 ;; This function is called by:
 10689 ;;		_radioReceivedPacket
 10690 ;;		_TMSendFormedPacketToRFD
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text30
 10695  006652                     __ptext30:
 10696                           	opt stack 0
 10697  006652                     _LE_RemoveNeighborDevice:
 10698                           	opt stack 16
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;LinkEstimator.c: 521: uint16_t i=le_findIdx(device);
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;incstack = 0
 10705  006652  C097  F081         	movff	LE_RemoveNeighborDevice@device,le_findIdx@ll_addr
 10706  006656  C098  F082         	movff	LE_RemoveNeighborDevice@device+1,le_findIdx@ll_addr+1
 10707  00665A  EC7B  F034         	call	_le_findIdx	;wreg free
 10708  00665E  6F9B               	movwf	LE_RemoveNeighborDevice@i& (0+255),b
 10709  006660  6B9C               	clrf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;LinkEstimator.c: 522: if(i != 0xff)
 10713  006662  299B               	incf	LE_RemoveNeighborDevice@i& (0+255),w,b
 10714  006664  119C               	iorwf	(LE_RemoveNeighborDevice@i+1)& (0+255),w,b
 10715  006666  B4D8               	btfsc	status,2,c
 10716  006668  0012               	return	
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;LinkEstimator.c: 523: {
 10720                           ;LinkEstimator.c: 524: RouterEvicted(neighbor_tbl[i].ll_addr);
 10721  00666A  0E0B               	movlw	11
 10722  00666C  039B               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 10723  00666E  CFF3 F099          	movff	prodl,??_LE_RemoveNeighborDevice
 10724  006672  CFF4 F09A          	movff	prodh,??_LE_RemoveNeighborDevice+1
 10725  006676  039C               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 10726  006678  50F3               	movf	prodl,w,c
 10727  00667A  279A               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 10728  00667C  0E00               	movlw	low _neighbor_tbl
 10729  00667E  2599               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 10730  006680  6ED9               	movwf	fsr2l,c
 10731  006682  0E05               	movlw	high _neighbor_tbl
 10732  006684  219A               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 10733  006686  6EDA               	movwf	fsr2h,c
 10734  006688  CFDE F08F          	movff	postinc2,RouterEvicted@address
 10735  00668C  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 10736  006690  EC0F  F02E         	call	_RouterEvicted	;wreg free
 10737                           
 10738                           ;LinkEstimator.c: 525: neighbor_tbl[i].flags=0;
 10739  006694  0E0B               	movlw	11
 10740  006696  0100               	movlb	0	; () banked
 10741  006698  039B               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 10742  00669A  CFF3 F099          	movff	prodl,??_LE_RemoveNeighborDevice
 10743  00669E  CFF4 F09A          	movff	prodh,??_LE_RemoveNeighborDevice+1
 10744  0066A2  039C               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 10745  0066A4  50F3               	movf	prodl,w,c
 10746  0066A6  279A               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 10747  0066A8  0E05               	movlw	low (_neighbor_tbl+5)
 10748  0066AA  2599               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 10749  0066AC  6ED9               	movwf	fsr2l,c
 10750  0066AE  0E05               	movlw	high (_neighbor_tbl+5)
 10751  0066B0  219A               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 10752  0066B2  6EDA               	movwf	fsr2h,c
 10753  0066B4  6ADF               	clrf	indf2,c
 10754                           
 10755                           ; BSR set to: 0
 10756  0066B6  0C00               	retlw	0	;funcret
 10757  0066B8                     __end_of_LE_RemoveNeighborDevice:
 10758                           	opt stack 0
 10759                           tblptru	equ	0xFF8
 10760                           tblptrh	equ	0xFF7
 10761                           tblptrl	equ	0xFF6
 10762                           tablat	equ	0xFF5
 10763                           prodh	equ	0xFF4
 10764                           prodl	equ	0xFF3
 10765                           intcon	equ	0xFF2
 10766                           postinc0	equ	0xFEE
 10767                           plusw0	equ	0xFEB
 10768                           wreg	equ	0xFE8
 10769                           postdec1	equ	0xFE5
 10770                           plusw1	equ	0xFE3
 10771                           fsr1h	equ	0xFE2
 10772                           fsr1l	equ	0xFE1
 10773                           indf2	equ	0xFDF
 10774                           postinc2	equ	0xFDE
 10775                           postdec2	equ	0xFDD
 10776                           plusw2	equ	0xFDB
 10777                           fsr2h	equ	0xFDA
 10778                           fsr2l	equ	0xFD9
 10779                           status	equ	0xFD8
 10780                           
 10781 ;; *************** function _GetRouteAddressOfChild *****************
 10782 ;; Defined at:
 10783 ;;		line 438 in file "../RouteManager.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  child           2   43[BANK0 ] struct addr_t_def
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;  i               2   47[BANK0 ] unsigned int 
 10788 ;;  res             2   45[BANK0 ] struct addr_t_def
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  2   43[BANK0 ] struct addr_t_def
 10791 ;; Registers used:
 10792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : F/1
 10795 ;;		On exit  : E/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10801 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10802 ;;Total ram usage:        6 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    8
 10805 ;; This function calls:
 10806 ;;		_CoordinatorAddress
 10807 ;;		_LE_GetNeighborDeviceType
 10808 ;;		_RoutingTableFindDeviceOrParent
 10809 ;;		_le_findIdx
 10810 ;; This function is called by:
 10811 ;;		_radioReceivedPacket
 10812 ;;		_TMSendFormedPacketToRFD
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           	psect	text31
 10817  00689C                     __ptext31:
 10818                           	opt stack 0
 10819  00689C                     _GetRouteAddressOfChild:
 10820                           	opt stack 18
 10821                           
 10822                           ; BSR set to: 1
 10823                           ;RouteManager.c: 440: uint16_t i;
 10824                           ;RouteManager.c: 441: addr_t res;
 10825                           ;RouteManager.c: 442: i=le_findIdx(child);
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;incstack = 0
 10829  00689C  C08B  F081         	movff	GetRouteAddressOfChild@child,le_findIdx@ll_addr
 10830  0068A0  C08C  F082         	movff	GetRouteAddressOfChild@child+1,le_findIdx@ll_addr+1
 10831  0068A4  EC7B  F034         	call	_le_findIdx	;wreg free
 10832  0068A8  6F8F               	movwf	GetRouteAddressOfChild@i& (0+255),b
 10833  0068AA  6B90               	clrf	(GetRouteAddressOfChild@i+1)& (0+255),b
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;RouteManager.c: 443: res=child;
 10837  0068AC  C08B  F08D         	movff	GetRouteAddressOfChild@child,GetRouteAddressOfChild@res
 10838  0068B0  C08C  F08E         	movff	GetRouteAddressOfChild@child+1,GetRouteAddressOfChild@res+1
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;RouteManager.c: 444: if(i==0xff)
 10842  0068B4  298F               	incf	GetRouteAddressOfChild@i& (0+255),w,b
 10843  0068B6  1190               	iorwf	(GetRouteAddressOfChild@i+1)& (0+255),w,b
 10844  0068B8  E10B               	bnz	l16342
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;RouteManager.c: 445: {
 10848                           ;RouteManager.c: 447: res=RoutingTableFindDeviceOrParent(child);
 10849  0068BA  C08B  F081         	movff	GetRouteAddressOfChild@child,RoutingTableFindDeviceOrParent@address
 10850  0068BE  C08C  F082         	movff	GetRouteAddressOfChild@child+1,RoutingTableFindDeviceOrParent@address+1
 10851  0068C2  EC10  F02D         	call	_RoutingTableFindDeviceOrParent	;wreg free
 10852  0068C6  C081  F08D         	movff	?_RoutingTableFindDeviceOrParent,GetRouteAddressOfChild@res
 10853  0068CA  C082  F08E         	movff	?_RoutingTableFindDeviceOrParent+1,GetRouteAddressOfChild@res+1
 10854                           
 10855                           ;RouteManager.c: 448: }else if(LE_GetNeighborDeviceType(i)==DeviceSleepingRFD)
 10856  0068CE  D00E               	goto	l16346
 10857  0068D0                     l16342:
 10858                           
 10859                           ; BSR set to: 0
 10860  0068D0  C08F  F073         	movff	GetRouteAddressOfChild@i,LE_GetNeighborDeviceType@index
 10861  0068D4  C090  F074         	movff	GetRouteAddressOfChild@i+1,LE_GetNeighborDeviceType@index+1
 10862  0068D8  EC83  F037         	call	_LE_GetNeighborDeviceType	;wreg free
 10863  0068DC  0A02               	xorlw	2
 10864  0068DE  E106               	bnz	l16346
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;RouteManager.c: 449: {
 10868                           ;RouteManager.c: 450: res=CoordinatorAddress();
 10869  0068E0  ECEF  F03A         	call	_CoordinatorAddress	;wreg free
 10870  0068E4  C073  F08D         	movff	?_CoordinatorAddress,GetRouteAddressOfChild@res
 10871  0068E8  C074  F08E         	movff	?_CoordinatorAddress+1,GetRouteAddressOfChild@res+1
 10872  0068EC                     l16346:
 10873                           
 10874                           ;RouteManager.c: 451: }
 10875                           ;RouteManager.c: 452: return(res);
 10876  0068EC  C08D  F08B         	movff	GetRouteAddressOfChild@res,?_GetRouteAddressOfChild
 10877  0068F0  C08E  F08C         	movff	GetRouteAddressOfChild@res+1,?_GetRouteAddressOfChild+1
 10878  0068F4  0012               	return		;funcret
 10879  0068F6                     __end_of_GetRouteAddressOfChild:
 10880                           	opt stack 0
 10881                           tblptru	equ	0xFF8
 10882                           tblptrh	equ	0xFF7
 10883                           tblptrl	equ	0xFF6
 10884                           tablat	equ	0xFF5
 10885                           prodh	equ	0xFF4
 10886                           prodl	equ	0xFF3
 10887                           intcon	equ	0xFF2
 10888                           postinc0	equ	0xFEE
 10889                           plusw0	equ	0xFEB
 10890                           wreg	equ	0xFE8
 10891                           postdec1	equ	0xFE5
 10892                           plusw1	equ	0xFE3
 10893                           fsr1h	equ	0xFE2
 10894                           fsr1l	equ	0xFE1
 10895                           indf2	equ	0xFDF
 10896                           postinc2	equ	0xFDE
 10897                           postdec2	equ	0xFDD
 10898                           plusw2	equ	0xFDB
 10899                           fsr2h	equ	0xFDA
 10900                           fsr2l	equ	0xFD9
 10901                           status	equ	0xFD8
 10902                           
 10903 ;; *************** function _RoutingTableFindDeviceOrParent *****************
 10904 ;; Defined at:
 10905 ;;		line 413 in file "../RouteManager.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  address         2   33[BANK0 ] struct addr_t_def
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;  entry           2   41[BANK0 ] PTR struct routing_table
 10910 ;;		 -> routingTable(90), 
 10911 ;;  res             2   39[BANK0 ] struct addr_t_def
 10912 ;;  i               2   37[BANK0 ] unsigned int 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  2   33[BANK0 ] struct addr_t_def
 10915 ;; Registers used:
 10916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : F/0
 10919 ;;		On exit  : F/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10923 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10925 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;Total ram usage:       10 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    7
 10929 ;; This function calls:
 10930 ;;		_NetworkAddressSizeGet
 10931 ;;		_isSameAddress
 10932 ;;		_memset
 10933 ;; This function is called by:
 10934 ;;		_GetRouteAddressOfChild
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text32
 10939  005A20                     __ptext32:
 10940                           	opt stack 0
 10941  005A20                     _RoutingTableFindDeviceOrParent:
 10942                           	opt stack 18
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;RouteManager.c: 415: uint16_t i;
 10946                           ;RouteManager.c: 416: routing_table_entry_t *entry;
 10947                           ;RouteManager.c: 417: addr_t res;
 10948                           ;RouteManager.c: 419: memset(res.bytes,0xff,NetworkAddressSizeGet());
 10949                           
 10950                           ;incstack = 0
 10951  005A20  0E87               	movlw	low RoutingTableFindDeviceOrParent@res
 10952  005A22  6F73               	movwf	memset@p1& (0+255),b
 10953  005A24  6B74               	clrf	(memset@p1+1)& (0+255),b
 10954  005A26  6B76               	clrf	(memset@c+1)& (0+255),b
 10955  005A28  6975               	setf	memset@c& (0+255),b
 10956  005A2A  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 10957  005A2E  0100               	movlb	0	; () banked
 10958  005A30  6F77               	movwf	memset@n& (0+255),b
 10959  005A32  6B78               	clrf	(memset@n+1)& (0+255),b
 10960  005A34  EC2F  F039         	call	_memset	;wreg free
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;RouteManager.c: 421: for (i = 0; i < routingTableActive; i++)
 10964  005A38  6B85               	clrf	RoutingTableFindDeviceOrParent@i& (0+255),b
 10965  005A3A  6B86               	clrf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 10966  005A3C  D03D               	goto	l16078
 10967  005A3E                     l16064:
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;RouteManager.c: 422: {
 10971                           ;RouteManager.c: 423: entry = &routingTable[i];
 10972  005A3E  0E09               	movlw	9
 10973  005A40  0385               	mulwf	RoutingTableFindDeviceOrParent@i& (0+255),b
 10974  005A42  CFF3 F083          	movff	prodl,??_RoutingTableFindDeviceOrParent
 10975  005A46  CFF4 F084          	movff	prodh,??_RoutingTableFindDeviceOrParent+1
 10976  005A4A  0386               	mulwf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 10977  005A4C  50F3               	movf	prodl,w,c
 10978  005A4E  2784               	addwf	(??_RoutingTableFindDeviceOrParent+1)& (0+255),f,b
 10979  005A50  0E98               	movlw	low _routingTable
 10980  005A52  2583               	addwf	??_RoutingTableFindDeviceOrParent& (0+255),w,b
 10981  005A54  6F89               	movwf	RoutingTableFindDeviceOrParent@entry& (0+255),b
 10982  005A56  0E06               	movlw	high _routingTable
 10983  005A58  2184               	addwfc	(??_RoutingTableFindDeviceOrParent+1)& (0+255),w,b
 10984  005A5A  6F8A               	movwf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),b
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;RouteManager.c: 425: if (isSameAddress(entry->neighbor, address)==1)
 10988  005A5C  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 10989  005A60  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 10990  005A64  CFDE F07D          	movff	postinc2,isSameAddress@a1
 10991  005A68  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 10992  005A6C  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 10993  005A70  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 10994  005A74  ECBA  F039         	call	_isSameAddress	;wreg free
 10995  005A78  06E8               	decf	wreg,f,c
 10996  005A7A  E101               	bnz	l16072
 10997  005A7C  D012               	goto	l16074
 10998  005A7E                     l16072:
 10999                           
 11000                           ; BSR set to: 0
 11001  005A7E  EE20 F002          	lfsr	2,2
 11002  005A82  5189               	movf	RoutingTableFindDeviceOrParent@entry& (0+255),w,b
 11003  005A84  26D9               	addwf	fsr2l,f,c
 11004  005A86  518A               	movf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),w,b
 11005  005A88  22DA               	addwfc	fsr2h,f,c
 11006  005A8A  CFDE F07D          	movff	postinc2,isSameAddress@a1
 11007  005A8E  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 11008  005A92  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 11009  005A96  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 11010  005A9A  ECBA  F039         	call	_isSameAddress	;wreg free
 11011  005A9E  06E8               	decf	wreg,f,c
 11012  005AA0  E109               	bnz	l16076
 11013  005AA2                     l16074:
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;RouteManager.c: 430: {
 11017                           ;RouteManager.c: 431: res=entry->neighbor;
 11018  005AA2  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 11019  005AA6  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 11020  005AAA  CFDE F087          	movff	postinc2,RoutingTableFindDeviceOrParent@res
 11021  005AAE  CFDD F088          	movff	postdec2,RoutingTableFindDeviceOrParent@res+1
 11022                           
 11023                           ;RouteManager.c: 432: break;
 11024  005AB2  D007               	goto	l1342
 11025  005AB4                     l16076:
 11026                           
 11027                           ; BSR set to: 0
 11028  005AB4  4B85               	infsnz	RoutingTableFindDeviceOrParent@i& (0+255),f,b
 11029  005AB6  2B86               	incf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),f,b
 11030  005AB8                     l16078:
 11031                           
 11032                           ; BSR set to: 0
 11033  005AB8  51E7               	movf	_routingTableActive& (0+255),w,b
 11034  005ABA  5D85               	subwf	RoutingTableFindDeviceOrParent@i& (0+255),w,b
 11035  005ABC  51E8               	movf	(_routingTableActive+1)& (0+255),w,b
 11036  005ABE  5986               	subwfb	(RoutingTableFindDeviceOrParent@i+1)& (0+255),w,b
 11037  005AC0  E3BE               	bnc	l16064
 11038  005AC2                     l1342:
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;RouteManager.c: 433: }
 11042                           ;RouteManager.c: 434: }
 11043                           ;RouteManager.c: 435: return(res);
 11044  005AC2  C087  F081         	movff	RoutingTableFindDeviceOrParent@res,?_RoutingTableFindDeviceOrParent
 11045  005AC6  C088  F082         	movff	RoutingTableFindDeviceOrParent@res+1,?_RoutingTableFindDeviceOrParent+1
 11046                           
 11047                           ; BSR set to: 0
 11048  005ACA  0012               	return		;funcret
 11049  005ACC                     __end_of_RoutingTableFindDeviceOrParent:
 11050                           	opt stack 0
 11051                           tblptru	equ	0xFF8
 11052                           tblptrh	equ	0xFF7
 11053                           tblptrl	equ	0xFF6
 11054                           tablat	equ	0xFF5
 11055                           prodh	equ	0xFF4
 11056                           prodl	equ	0xFF3
 11057                           intcon	equ	0xFF2
 11058                           postinc0	equ	0xFEE
 11059                           plusw0	equ	0xFEB
 11060                           wreg	equ	0xFE8
 11061                           postdec1	equ	0xFE5
 11062                           plusw1	equ	0xFE3
 11063                           fsr1h	equ	0xFE2
 11064                           fsr1l	equ	0xFE1
 11065                           indf2	equ	0xFDF
 11066                           postinc2	equ	0xFDE
 11067                           postdec2	equ	0xFDD
 11068                           plusw2	equ	0xFDB
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function _LE_GetNeighborDeviceType *****************
 11074 ;; Defined at:
 11075 ;;		line 509 in file "../LinkEstimator.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  index           2   19[BANK0 ] unsigned int 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  dev             1   24[BANK0 ] enum E144
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      enum E145
 11082 ;; Registers used:
 11083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11084 ;; Tracked objects:
 11085 ;;		On entry : F/0
 11086 ;;		On exit  : F/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11092 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11093 ;;Total ram usage:        6 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    5
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_GetRouteAddressOfChild
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text33
 11104  006F06                     __ptext33:
 11105                           	opt stack 0
 11106  006F06                     _LE_GetNeighborDeviceType:
 11107                           	opt stack 20
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;LinkEstimator.c: 511: DeviceType_t dev=DeviceRFD;
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;incstack = 0
 11114  006F06  0E01               	movlw	1
 11115  006F08  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;LinkEstimator.c: 512: if(index<=20)
 11119  006F0A  5174               	movf	(LE_GetNeighborDeviceType@index+1)& (0+255),w,b
 11120  006F0C  E118               	bnz	l16106
 11121  006F0E  0E15               	movlw	21
 11122  006F10  5D73               	subwf	LE_GetNeighborDeviceType@index& (0+255),w,b
 11123  006F12  E215               	bc	l16106
 11124                           
 11125                           ; BSR set to: 0
 11126                           ;LinkEstimator.c: 513: {
 11127                           ;LinkEstimator.c: 514: dev=(DeviceType_t)((neighbor_tbl[index].flags & 0x70)>>4);
 11128  006F14  0E0B               	movlw	11
 11129  006F16  0373               	mulwf	LE_GetNeighborDeviceType@index& (0+255),b
 11130  006F18  CFF3 F075          	movff	prodl,??_LE_GetNeighborDeviceType
 11131  006F1C  CFF4 F076          	movff	prodh,??_LE_GetNeighborDeviceType+1
 11132  006F20  0374               	mulwf	(LE_GetNeighborDeviceType@index+1)& (0+255),b
 11133  006F22  50F3               	movf	prodl,w,c
 11134  006F24  2776               	addwf	(??_LE_GetNeighborDeviceType+1)& (0+255),f,b
 11135  006F26  0E05               	movlw	low (_neighbor_tbl+5)
 11136  006F28  2575               	addwf	??_LE_GetNeighborDeviceType& (0+255),w,b
 11137  006F2A  6ED9               	movwf	fsr2l,c
 11138  006F2C  0E05               	movlw	high (_neighbor_tbl+5)
 11139  006F2E  2176               	addwfc	(??_LE_GetNeighborDeviceType+1)& (0+255),w,b
 11140  006F30  6EDA               	movwf	fsr2h,c
 11141  006F32  50DF               	movf	indf2,w,c
 11142  006F34  6F77               	movwf	(??_LE_GetNeighborDeviceType+2)& (0+255),b
 11143  006F36  3977               	swapf	(??_LE_GetNeighborDeviceType+2)& (0+255),w,b
 11144  006F38  0B0F               	andlw	15
 11145  006F3A  0B07               	andlw	7
 11146  006F3C  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 11147  006F3E                     l16106:
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;LinkEstimator.c: 515: }
 11151                           ;LinkEstimator.c: 516: return(dev);
 11152  006F3E  5178               	movf	LE_GetNeighborDeviceType@dev& (0+255),w,b
 11153                           
 11154                           ; BSR set to: 0
 11155  006F40  0012               	return		;funcret
 11156  006F42                     __end_of_LE_GetNeighborDeviceType:
 11157                           	opt stack 0
 11158                           tblptru	equ	0xFF8
 11159                           tblptrh	equ	0xFF7
 11160                           tblptrl	equ	0xFF6
 11161                           tablat	equ	0xFF5
 11162                           prodh	equ	0xFF4
 11163                           prodl	equ	0xFF3
 11164                           intcon	equ	0xFF2
 11165                           postinc0	equ	0xFEE
 11166                           plusw0	equ	0xFEB
 11167                           wreg	equ	0xFE8
 11168                           postdec1	equ	0xFE5
 11169                           plusw1	equ	0xFE3
 11170                           fsr1h	equ	0xFE2
 11171                           fsr1l	equ	0xFE1
 11172                           indf2	equ	0xFDF
 11173                           postinc2	equ	0xFDE
 11174                           postdec2	equ	0xFDD
 11175                           plusw2	equ	0xFDB
 11176                           fsr2h	equ	0xFDA
 11177                           fsr2l	equ	0xFD9
 11178                           status	equ	0xFD8
 11179                           
 11180 ;; *************** function _CoordinatorAddress *****************
 11181 ;; Defined at:
 11182 ;;		line 265 in file "../NetworkManager.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;		None
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  2   19[BANK0 ] struct addr_t_def
 11189 ;; Registers used:
 11190 ;;		None
 11191 ;; Tracked objects:
 11192 ;;		On entry : E/1
 11193 ;;		On exit  : E/0
 11194 ;;		Unchanged: E/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;Total ram usage:        2 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    5
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_NetworkUnicastData
 11207 ;;		_GetRouteAddressOfChild
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text34
 11212  0075DE                     __ptext34:
 11213                           	opt stack 0
 11214  0075DE                     _CoordinatorAddress:
 11215                           	opt stack 20
 11216                           
 11217                           ;NetworkManager.c: 267: return(CoordinatorAddr);
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;incstack = 0
 11221  0075DE  C1E6  F073         	movff	_CoordinatorAddr,?_CoordinatorAddress
 11222  0075E2  C1E7  F074         	movff	_CoordinatorAddr+1,?_CoordinatorAddress+1
 11223  0075E6  0012               	return		;funcret
 11224  0075E8                     __end_of_CoordinatorAddress:
 11225                           	opt stack 0
 11226                           tblptru	equ	0xFF8
 11227                           tblptrh	equ	0xFF7
 11228                           tblptrl	equ	0xFF6
 11229                           tablat	equ	0xFF5
 11230                           prodh	equ	0xFF4
 11231                           prodl	equ	0xFF3
 11232                           intcon	equ	0xFF2
 11233                           postinc0	equ	0xFEE
 11234                           plusw0	equ	0xFEB
 11235                           wreg	equ	0xFE8
 11236                           postdec1	equ	0xFE5
 11237                           plusw1	equ	0xFE3
 11238                           fsr1h	equ	0xFE2
 11239                           fsr1l	equ	0xFE1
 11240                           indf2	equ	0xFDF
 11241                           postinc2	equ	0xFDE
 11242                           postdec2	equ	0xFDD
 11243                           plusw2	equ	0xFDB
 11244                           fsr2h	equ	0xFDA
 11245                           fsr2l	equ	0xFD9
 11246                           status	equ	0xFD8
 11247                           
 11248 ;; *************** function _BroadcastManagerDelaySend *****************
 11249 ;; Defined at:
 11250 ;;		line 52 in file "../BroadcastManager.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  pkt             2   63[BANK0 ] PTR unsigned char 
 11253 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), TMSendDataToRFD@databuff(64), 
 11254 ;;		 -> NetworkBroadcastData@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 11255 ;;  size            2   65[BANK0 ] unsigned int 
 11256 ;;  isSecure        1   67[BANK0 ] unsigned char 
 11257 ;;  isInterPan      1   68[BANK0 ] unsigned char 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  i               2   76[BANK0 ] unsigned int 
 11260 ;;  res             1   75[BANK0 ] unsigned char 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      unsigned char 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : F/0
 11267 ;;		On exit  : F/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;Total ram usage:       15 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    8
 11277 ;; This function calls:
 11278 ;;		_AddMSToTick
 11279 ;;		_MSTickGet
 11280 ;;		_krnd
 11281 ;;		_memcpy
 11282 ;; This function is called by:
 11283 ;;		_radioReceivedPacket
 11284 ;;		_TMSendFormedPacketToRFD
 11285 ;;		_NetworkSendDiscoverRequest
 11286 ;;		_NetworkSendDiscoverResponse
 11287 ;;		_NetworkBroadcastData
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text35
 11292  00395A                     __ptext35:
 11293                           	opt stack 0
 11294  00395A                     _BroadcastManagerDelaySend:
 11295                           	opt stack 18
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;BroadcastManager.c: 54: bool res=0;
 11299                           
 11300                           ;incstack = 0
 11301  00395A  6BAB               	clrf	BroadcastManagerDelaySend@res& (0+255),b
 11302                           
 11303                           ;BroadcastManager.c: 55: uint16_t i;
 11304                           ;BroadcastManager.c: 56: for(i=0;i<6;i++)
 11305  00395C  6BAC               	clrf	BroadcastManagerDelaySend@i& (0+255),b
 11306  00395E  6BAD               	clrf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11307  003960                     l16238:
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;BroadcastManager.c: 57: {
 11311                           ;BroadcastManager.c: 58: if(((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==1)
 11312  003960  0E4A               	movlw	74
 11313  003962  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11314  003964  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11315  003968  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11316  00396C  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11317  00396E  50F3               	movf	prodl,w,c
 11318  003970  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11319  003972  0EE0               	movlw	low (_RbcQ+4)
 11320  003974  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11321  003976  6ED9               	movwf	fsr2l,c
 11322  003978  0E08               	movlw	high (_RbcQ+4)
 11323  00397A  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11324  00397C  6EDA               	movwf	fsr2h,c
 11325  00397E  50DE               	movf	postinc2,w,c
 11326  003980  10DE               	iorwf	postinc2,w,c
 11327  003982  10DE               	iorwf	postinc2,w,c
 11328  003984  10DE               	iorwf	postinc2,w,c
 11329  003986  E001 D0A3          	bnz	l16258
 11330                           
 11331                           ; BSR set to: 0
 11332  00398A  0E4A               	movlw	74
 11333  00398C  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11334  00398E  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11335  003992  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11336  003996  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11337  003998  50F3               	movf	prodl,w,c
 11338  00399A  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11339  00399C  0EDC               	movlw	low _RbcQ
 11340  00399E  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11341  0039A0  6ED9               	movwf	fsr2l,c
 11342  0039A2  0E08               	movlw	high _RbcQ
 11343  0039A4  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11344  0039A6  6EDA               	movwf	fsr2h,c
 11345  0039A8  50DE               	movf	postinc2,w,c
 11346  0039AA  10DE               	iorwf	postinc2,w,c
 11347  0039AC  10DE               	iorwf	postinc2,w,c
 11348  0039AE  10DE               	iorwf	postinc2,w,c
 11349  0039B0  E001 D08E          	bnz	l16258
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;BroadcastManager.c: 59: {
 11353                           ;BroadcastManager.c: 60: memcpy(RbcQ[i].pkt,pkt,size);
 11354  0039B4  0E4A               	movlw	74
 11355  0039B6  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11356  0039B8  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11357  0039BC  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11358  0039C0  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11359  0039C2  50F3               	movf	prodl,w,c
 11360  0039C4  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11361  0039C6  0EE4               	movlw	low (_RbcQ+8)
 11362  0039C8  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11363  0039CA  6F75               	movwf	memcpy@d1& (0+255),b
 11364  0039CC  0E08               	movlw	high (_RbcQ+8)
 11365  0039CE  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11366  0039D0  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 11367  0039D2  C09F  F077         	movff	BroadcastManagerDelaySend@pkt,memcpy@s1
 11368  0039D6  C0A0  F078         	movff	BroadcastManagerDelaySend@pkt+1,memcpy@s1+1
 11369  0039DA  C0A1  F079         	movff	BroadcastManagerDelaySend@size,memcpy@n
 11370  0039DE  C0A2  F07A         	movff	BroadcastManagerDelaySend@size+1,memcpy@n+1
 11371  0039E2  EC54  F035         	call	_memcpy	;wreg free
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;BroadcastManager.c: 61: RbcQ[i].pktSize=size;
 11375  0039E6  0E4A               	movlw	74
 11376  0039E8  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11377  0039EA  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11378  0039EE  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11379  0039F2  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11380  0039F4  50F3               	movf	prodl,w,c
 11381  0039F6  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11382  0039F8  0E24               	movlw	low (_RbcQ+72)
 11383  0039FA  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11384  0039FC  6ED9               	movwf	fsr2l,c
 11385  0039FE  0E09               	movlw	high (_RbcQ+72)
 11386  003A00  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11387  003A02  6EDA               	movwf	fsr2h,c
 11388  003A04  C0A1  FFDF         	movff	BroadcastManagerDelaySend@size,indf2
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;BroadcastManager.c: 62: RbcQ[i].TxTime=AddMSToTick(MSTickGet(),(krnd() & 0x3f));
 11392  003A08  EC4F  F038         	call	_MSTickGet	;wreg free
 11393  003A0C  CFE9 FFD9          	movff	fsr0l,fsr2l
 11394  003A10  CFEA FFDA          	movff	fsr0h,fsr2h
 11395  003A14  EE00  F08F         	lfsr	0,AddMSToTick@tick
 11396  003A18  0E07               	movlw	7
 11397  003A1A                     u19031:
 11398  003A1A  CFDB FFEB          	movff	plusw2,plusw0
 11399  003A1E  06E8               	decf	wreg,f,c
 11400  003A20  E2FC               	bc	u19031
 11401  003A22  ECEF  F01E         	call	_krnd	;wreg free
 11402  003A26  0E3F               	movlw	63
 11403  003A28  1573               	andwf	?_krnd& (0+255),w,b
 11404  003A2A  6F97               	movwf	AddMSToTick@ms& (0+255),b
 11405  003A2C  6B98               	clrf	(AddMSToTick@ms+1)& (0+255),b
 11406  003A2E  6B99               	clrf	(AddMSToTick@ms+2)& (0+255),b
 11407  003A30  6B9A               	clrf	(AddMSToTick@ms+3)& (0+255),b
 11408  003A32  EC61  F030         	call	_AddMSToTick	;wreg free
 11409  003A36  0E4A               	movlw	74
 11410  003A38  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11411  003A3A  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11412  003A3E  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11413  003A42  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11414  003A44  50F3               	movf	prodl,w,c
 11415  003A46  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11416  003A48  0EDC               	movlw	low _RbcQ
 11417  003A4A  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11418  003A4C  6ED9               	movwf	fsr2l,c
 11419  003A4E  0E08               	movlw	high _RbcQ
 11420  003A50  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11421  003A52  6EDA               	movwf	fsr2h,c
 11422  003A54  0E07               	movlw	7
 11423  003A56                     u19041:
 11424  003A56  CFEB FFDB          	movff	plusw0,plusw2
 11425  003A5A  06E8               	decf	wreg,f,c
 11426  003A5C  E2FC               	bc	u19041
 11427                           
 11428                           ;BroadcastManager.c: 63: RbcQ[i].Flags=0;
 11429  003A5E  0E4A               	movlw	74
 11430  003A60  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11431  003A62  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11432  003A66  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11433  003A6A  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11434  003A6C  50F3               	movf	prodl,w,c
 11435  003A6E  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11436  003A70  0E25               	movlw	low (_RbcQ+73)
 11437  003A72  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11438  003A74  6ED9               	movwf	fsr2l,c
 11439  003A76  0E09               	movlw	high (_RbcQ+73)
 11440  003A78  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11441  003A7A  6EDA               	movwf	fsr2h,c
 11442  003A7C  6ADF               	clrf	indf2,c
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;BroadcastManager.c: 64: if(isSecure==1)
 11446  003A7E  05A3               	decf	BroadcastManagerDelaySend@isSecure& (0+255),w,b
 11447  003A80  E111               	bnz	l16252
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;BroadcastManager.c: 65: {
 11451                           ;BroadcastManager.c: 66: RbcQ[i].Flags|=(1<<0);
 11452  003A82  0E4A               	movlw	74
 11453  003A84  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11454  003A86  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11455  003A8A  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11456  003A8E  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11457  003A90  50F3               	movf	prodl,w,c
 11458  003A92  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11459  003A94  0E25               	movlw	low (_RbcQ+73)
 11460  003A96  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11461  003A98  6ED9               	movwf	fsr2l,c
 11462  003A9A  0E09               	movlw	high (_RbcQ+73)
 11463  003A9C  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11464  003A9E  6EDA               	movwf	fsr2h,c
 11465  003AA0  0E00               	movlw	0
 11466  003AA2  80DB               	bsf	plusw2,0,c
 11467  003AA4                     l16252:
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;BroadcastManager.c: 67: }
 11471                           ;BroadcastManager.c: 68: if(isInterPan==1)
 11472  003AA4  05A4               	decf	BroadcastManagerDelaySend@isInterPan& (0+255),w,b
 11473  003AA6  E111               	bnz	l16256
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;BroadcastManager.c: 69: {
 11477                           ;BroadcastManager.c: 70: RbcQ[i].Flags|=(1<<1);
 11478  003AA8  0E4A               	movlw	74
 11479  003AAA  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11480  003AAC  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11481  003AB0  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11482  003AB4  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11483  003AB6  50F3               	movf	prodl,w,c
 11484  003AB8  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11485  003ABA  0E25               	movlw	low (_RbcQ+73)
 11486  003ABC  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11487  003ABE  6ED9               	movwf	fsr2l,c
 11488  003AC0  0E09               	movlw	high (_RbcQ+73)
 11489  003AC2  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11490  003AC4  6EDA               	movwf	fsr2h,c
 11491  003AC6  0E00               	movlw	0
 11492  003AC8  82DB               	bsf	plusw2,1,c
 11493  003ACA                     l16256:
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;BroadcastManager.c: 71: }
 11497                           ;BroadcastManager.c: 72: res=1;
 11498  003ACA  0E01               	movlw	1
 11499  003ACC  6FAB               	movwf	BroadcastManagerDelaySend@res& (0+255),b
 11500                           
 11501                           ;BroadcastManager.c: 73: break;
 11502  003ACE  D008               	goto	l16262
 11503  003AD0                     l16258:
 11504                           
 11505                           ; BSR set to: 0
 11506  003AD0  4BAC               	infsnz	BroadcastManagerDelaySend@i& (0+255),f,b
 11507  003AD2  2BAD               	incf	(BroadcastManagerDelaySend@i+1)& (0+255),f,b
 11508                           
 11509                           ; BSR set to: 0
 11510  003AD4  51AD               	movf	(BroadcastManagerDelaySend@i+1)& (0+255),w,b
 11511  003AD6  E104               	bnz	u19070
 11512  003AD8  0E06               	movlw	6
 11513  003ADA  5DAC               	subwf	BroadcastManagerDelaySend@i& (0+255),w,b
 11514  003ADC  E201 D740          	bnc	l16238
 11515  003AE0                     u19070:
 11516  003AE0                     l16262:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;BroadcastManager.c: 74: }
 11520                           ;BroadcastManager.c: 75: }
 11521                           ;BroadcastManager.c: 76: return(res);
 11522  003AE0  51AB               	movf	BroadcastManagerDelaySend@res& (0+255),w,b
 11523                           
 11524                           ; BSR set to: 0
 11525  003AE2  0012               	return		;funcret
 11526  003AE4                     __end_of_BroadcastManagerDelaySend:
 11527                           	opt stack 0
 11528                           tblptru	equ	0xFF8
 11529                           tblptrh	equ	0xFF7
 11530                           tblptrl	equ	0xFF6
 11531                           tablat	equ	0xFF5
 11532                           prodh	equ	0xFF4
 11533                           prodl	equ	0xFF3
 11534                           intcon	equ	0xFF2
 11535                           postinc0	equ	0xFEE
 11536                           plusw0	equ	0xFEB
 11537                           fsr0h	equ	0xFEA
 11538                           fsr0l	equ	0xFE9
 11539                           wreg	equ	0xFE8
 11540                           postdec1	equ	0xFE5
 11541                           plusw1	equ	0xFE3
 11542                           fsr1h	equ	0xFE2
 11543                           fsr1l	equ	0xFE1
 11544                           indf2	equ	0xFDF
 11545                           postinc2	equ	0xFDE
 11546                           postdec2	equ	0xFDD
 11547                           plusw2	equ	0xFDB
 11548                           fsr2h	equ	0xFDA
 11549                           fsr2l	equ	0xFD9
 11550                           status	equ	0xFD8
 11551                           
 11552 ;; *************** function _AddMSToTick *****************
 11553 ;; Defined at:
 11554 ;;		line 57 in file "../TimeTick.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 11557 ;;  ms              4   55[BANK0 ] unsigned long 
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;		None
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  8   47[BANK0 ] struct TickMS_t_def
 11562 ;; Registers used:
 11563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 11564 ;; Tracked objects:
 11565 ;;		On entry : F/0
 11566 ;;		On exit  : F/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11569 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;Total ram usage:       16 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    5
 11576 ;; This function calls:
 11577 ;;		Nothing
 11578 ;; This function is called by:
 11579 ;;		_BroadcastManagerDelaySend
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text36
 11584  0060C2                     __ptext36:
 11585                           	opt stack 0
 11586  0060C2                     _AddMSToTick:
 11587                           	opt stack 20
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;TimeTick.c: 59: if((0xffffffff-tick.lsb)>=ms)
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;incstack = 0
 11594  0060C2  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 11595  0060C6  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 11596  0060CA  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 11597  0060CE  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 11598  0060D2  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 11599  0060D4  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 11600  0060D6  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 11601  0060D8  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 11602  0060DA  5197               	movf	AddMSToTick@ms& (0+255),w,b
 11603  0060DC  5D9B               	subwf	??_AddMSToTick& (0+255),w,b
 11604  0060DE  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 11605  0060E0  599C               	subwfb	(??_AddMSToTick+1)& (0+255),w,b
 11606  0060E2  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 11607  0060E4  599D               	subwfb	(??_AddMSToTick+2)& (0+255),w,b
 11608  0060E6  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 11609  0060E8  599E               	subwfb	(??_AddMSToTick+3)& (0+255),w,b
 11610  0060EA  E309               	bnc	l16140
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;TimeTick.c: 60: {
 11614                           ;TimeTick.c: 61: tick.lsb+=ms;
 11615  0060EC  5197               	movf	AddMSToTick@ms& (0+255),w,b
 11616  0060EE  278F               	addwf	AddMSToTick@tick& (0+255),f,b
 11617  0060F0  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 11618  0060F2  2390               	addwfc	(AddMSToTick@tick+1)& (0+255),f,b
 11619  0060F4  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 11620  0060F6  2391               	addwfc	(AddMSToTick@tick+2)& (0+255),f,b
 11621  0060F8  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 11622  0060FA  2392               	addwfc	(AddMSToTick@tick+3)& (0+255),f,b
 11623                           
 11624                           ;TimeTick.c: 62: }else
 11625  0060FC  D01D               	goto	l16142
 11626  0060FE                     l16140:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;TimeTick.c: 63: {
 11630                           ;TimeTick.c: 64: tick.lsb=ms-(0xffffffff-tick.lsb);
 11631  0060FE  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 11632  006102  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 11633  006106  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 11634  00610A  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 11635  00610E  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 11636  006110  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 11637  006112  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 11638  006114  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 11639  006116  519B               	movf	??_AddMSToTick& (0+255),w,b
 11640  006118  5D97               	subwf	AddMSToTick@ms& (0+255),w,b
 11641  00611A  6F8F               	movwf	AddMSToTick@tick& (0+255),b
 11642  00611C  519C               	movf	(??_AddMSToTick+1)& (0+255),w,b
 11643  00611E  5998               	subwfb	(AddMSToTick@ms+1)& (0+255),w,b
 11644  006120  6F90               	movwf	(AddMSToTick@tick+1)& (0+255),b
 11645  006122  519D               	movf	(??_AddMSToTick+2)& (0+255),w,b
 11646  006124  5999               	subwfb	(AddMSToTick@ms+2)& (0+255),w,b
 11647  006126  6F91               	movwf	(AddMSToTick@tick+2)& (0+255),b
 11648  006128  519E               	movf	(??_AddMSToTick+3)& (0+255),w,b
 11649  00612A  599A               	subwfb	(AddMSToTick@ms+3)& (0+255),w,b
 11650  00612C  6F92               	movwf	(AddMSToTick@tick+3)& (0+255),b
 11651                           
 11652                           ;TimeTick.c: 65: tick.msb++;
 11653  00612E  2B93               	incf	(AddMSToTick@tick+4)& (0+255),f,b
 11654  006130  0E00               	movlw	0
 11655  006132  2394               	addwfc	(AddMSToTick@tick+5)& (0+255),f,b
 11656  006134  2395               	addwfc	(AddMSToTick@tick+6)& (0+255),f,b
 11657  006136  2396               	addwfc	(AddMSToTick@tick+7)& (0+255),f,b
 11658  006138                     l16142:
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;TimeTick.c: 66: }
 11662                           ;TimeTick.c: 67: return(tick);
 11663  006138  EE20  F08F         	lfsr	2,AddMSToTick@tick
 11664  00613C  EE00  F08F         	lfsr	0,?_AddMSToTick
 11665  006140  0E07               	movlw	7
 11666  006142                     u18901:
 11667  006142  CFDB FFEB          	movff	plusw2,plusw0
 11668  006146  06E8               	decf	wreg,f,c
 11669  006148  E2FC               	bc	u18901
 11670                           
 11671                           ; BSR set to: 0
 11672  00614A  0012               	return		;funcret
 11673  00614C                     __end_of_AddMSToTick:
 11674                           	opt stack 0
 11675                           tblptru	equ	0xFF8
 11676                           tblptrh	equ	0xFF7
 11677                           tblptrl	equ	0xFF6
 11678                           tablat	equ	0xFF5
 11679                           prodh	equ	0xFF4
 11680                           prodl	equ	0xFF3
 11681                           intcon	equ	0xFF2
 11682                           postinc0	equ	0xFEE
 11683                           plusw0	equ	0xFEB
 11684                           fsr0h	equ	0xFEA
 11685                           fsr0l	equ	0xFE9
 11686                           wreg	equ	0xFE8
 11687                           postdec1	equ	0xFE5
 11688                           plusw1	equ	0xFE3
 11689                           fsr1h	equ	0xFE2
 11690                           fsr1l	equ	0xFE1
 11691                           indf2	equ	0xFDF
 11692                           postinc2	equ	0xFDE
 11693                           postdec2	equ	0xFDD
 11694                           plusw2	equ	0xFDB
 11695                           fsr2h	equ	0xFDA
 11696                           fsr2l	equ	0xFD9
 11697                           status	equ	0xFD8
 11698                           
 11699 ;; *************** function _NetworkDataArrivedEvent *****************
 11700 ;; Defined at:
 11701 ;;		line 268 in file "../src/Bridge.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  source          2   27[BANK0 ] struct addr_t_def
 11704 ;;  data            2   29[BANK0 ] PTR unsigned char 
 11705 ;;		 -> userdata(54), 
 11706 ;;  size            2   31[BANK0 ] unsigned int 
 11707 ;;  isBroadcast     1   33[BANK0 ] unsigned char 
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : F/0
 11716 ;;		On exit  : F/1
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11719 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11722 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11723 ;;Total ram usage:        7 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:    6
 11726 ;; This function calls:
 11727 ;;		_memset
 11728 ;; This function is called by:
 11729 ;;		_NetworkManagerProcessIncomingData
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text37
 11734  006AFE                     __ptext37:
 11735                           	opt stack 0
 11736  006AFE                     _NetworkDataArrivedEvent:
 11737                           	opt stack 20
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;Bridge.c: 270: srcAddress=source;
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;incstack = 0
 11744  006AFE  C07B  F25F         	movff	NetworkDataArrivedEvent@source,_srcAddress
 11745  006B02  C07C  F260         	movff	NetworkDataArrivedEvent@source+1,_srcAddress+1
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;Bridge.c: 271: memset(&rxMessage,0x00,sizeof(rxMessage));
 11749  006B06  0E3F               	movlw	low _rxMessage
 11750  006B08  6F73               	movwf	memset@p1& (0+255),b
 11751  006B0A  0E02               	movlw	high _rxMessage
 11752  006B0C  6F74               	movwf	(memset@p1+1)& (0+255),b
 11753  006B0E  6B76               	clrf	(memset@c+1)& (0+255),b
 11754  006B10  6B75               	clrf	memset@c& (0+255),b
 11755  006B12  6B78               	clrf	(memset@n+1)& (0+255),b
 11756  006B14  0E0A               	movlw	10
 11757  006B16  6F77               	movwf	memset@n& (0+255),b
 11758  006B18  EC2F  F039         	call	_memset	;wreg free
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;Bridge.c: 272: rxMessage.Payload=data;
 11762  006B1C  C07D  F244         	movff	NetworkDataArrivedEvent@data,_rxMessage+5
 11763  006B20  C07E  F245         	movff	NetworkDataArrivedEvent@data+1,_rxMessage+6
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;Bridge.c: 273: rxMessage.PayloadSize=size;
 11767  006B24  C07F  F246         	movff	NetworkDataArrivedEvent@size,_rxMessage+7
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;Bridge.c: 274: rxMessage.SourceAddress=srcAddress.bytes;
 11771  006B28  0E5F               	movlw	low _srcAddress
 11772  006B2A  0102               	movlb	2	; () banked
 11773  006B2C  6F42               	movwf	(_rxMessage+3)& (0+255),b
 11774  006B2E  0E02               	movlw	high _srcAddress
 11775  006B30  6F43               	movwf	(_rxMessage+4)& (0+255),b
 11776                           
 11777                           ; BSR set to: 2
 11778                           ;Bridge.c: 275: rxMessage.SourcePANID.Val=myPANID;
 11779  006B32  C0EB  F240         	movff	_myPANID,_rxMessage+1
 11780  006B36  C0EC  F241         	movff	_myPANID+1,_rxMessage+2
 11781                           
 11782                           ; BSR set to: 2
 11783                           ;Bridge.c: 276: rxMessage.flags.bits.broadcast=isBroadcast;
 11784  006B3A  513F               	movf	_rxMessage& (0+255),w,b
 11785  006B3C  0100               	movlb	0	; () banked
 11786  006B3E  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 11787  006B40  0BFC               	andlw	-4
 11788  006B42  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 11789  006B44  0102               	movlb	2	; () banked
 11790  006B46  6F3F               	movwf	_rxMessage& (0+255),b
 11791                           
 11792                           ; BSR set to: 2
 11793                           ;Bridge.c: 277: rxMessage.flags.bits.srcPrsnt=1;
 11794  006B48  8D3F               	bsf	_rxMessage& (0+255),6,b
 11795                           
 11796                           ; BSR set to: 2
 11797                           ;Bridge.c: 278: UserMessageAvailable=1;
 11798  006B4A  0E01               	movlw	1
 11799  006B4C  0101               	movlb	1	; () banked
 11800  006B4E  6FD3               	movwf	_UserMessageAvailable& (0+255),b
 11801                           
 11802                           ; BSR set to: 1
 11803  006B50  0C01               	retlw	1	;funcret
 11804  006B52                     __end_of_NetworkDataArrivedEvent:
 11805                           	opt stack 0
 11806                           tblptru	equ	0xFF8
 11807                           tblptrh	equ	0xFF7
 11808                           tblptrl	equ	0xFF6
 11809                           tablat	equ	0xFF5
 11810                           prodh	equ	0xFF4
 11811                           prodl	equ	0xFF3
 11812                           intcon	equ	0xFF2
 11813                           postinc0	equ	0xFEE
 11814                           plusw0	equ	0xFEB
 11815                           fsr0h	equ	0xFEA
 11816                           fsr0l	equ	0xFE9
 11817                           wreg	equ	0xFE8
 11818                           postdec1	equ	0xFE5
 11819                           plusw1	equ	0xFE3
 11820                           fsr1h	equ	0xFE2
 11821                           fsr1l	equ	0xFE1
 11822                           indf2	equ	0xFDF
 11823                           postinc2	equ	0xFDE
 11824                           postdec2	equ	0xFDD
 11825                           plusw2	equ	0xFDB
 11826                           fsr2h	equ	0xFDA
 11827                           fsr2l	equ	0xFD9
 11828                           status	equ	0xFD8
 11829                           
 11830 ;; *************** function _IsNetworkDevice *****************
 11831 ;; Defined at:
 11832 ;;		line 47 in file "../DeviceManager.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  address         2   47[BANK0 ] struct addr_t_def
 11835 ;;  devType         1   49[BANK0 ] enum E145
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  oldest          8   52[BANK0 ] struct TickMS_t_def
 11838 ;;  i               2   63[BANK0 ] unsigned int 
 11839 ;;  empty           2   61[BANK0 ] unsigned int 
 11840 ;;  res             1   60[BANK0 ] unsigned char 
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      unsigned char 
 11843 ;; Registers used:
 11844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : F/0
 11847 ;;		On exit  : F/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11850 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11851 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11853 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11854 ;;Total ram usage:       18 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    8
 11857 ;; This function calls:
 11858 ;;		_MSTickGet
 11859 ;;		_NetworkAddressSizeGet
 11860 ;;		_isInvalidAddress
 11861 ;;		_isSameAddress
 11862 ;;		_memcpy
 11863 ;;		_memset
 11864 ;; This function is called by:
 11865 ;;		_radioReceivedPacket
 11866 ;;		_NetworkManagerProcessIncomingData
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text38
 11871  0037CA                     __ptext38:
 11872                           	opt stack 0
 11873  0037CA                     _IsNetworkDevice:
 11874                           	opt stack 18
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;DeviceManager.c: 49: uint16_t i;
 11878                           ;DeviceManager.c: 50: uint16_t empty=0xffff;
 11879                           
 11880                           ; BSR set to: 1
 11881                           ;incstack = 0
 11882  0037CA  699D               	setf	IsNetworkDevice@empty& (0+255),b
 11883  0037CC  699E               	setf	(IsNetworkDevice@empty+1)& (0+255),b
 11884                           
 11885                           ;DeviceManager.c: 51: TickMS oldest;
 11886                           ;DeviceManager.c: 52: bool res=0;
 11887  0037CE  6B9C               	clrf	IsNetworkDevice@res& (0+255),b
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;DeviceManager.c: 54: memset(&oldest,0x00,sizeof(oldest));
 11891  0037D0  0E94               	movlw	low IsNetworkDevice@oldest
 11892  0037D2  6F73               	movwf	memset@p1& (0+255),b
 11893  0037D4  6B74               	clrf	(memset@p1+1)& (0+255),b
 11894  0037D6  6B76               	clrf	(memset@c+1)& (0+255),b
 11895  0037D8  6B75               	clrf	memset@c& (0+255),b
 11896  0037DA  6B78               	clrf	(memset@n+1)& (0+255),b
 11897  0037DC  0E08               	movlw	8
 11898  0037DE  6F77               	movwf	memset@n& (0+255),b
 11899  0037E0  EC2F  F039         	call	_memset	;wreg free
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;DeviceManager.c: 56: for(i=0;i<20;i++)
 11903  0037E4  6B9F               	clrf	IsNetworkDevice@i& (0+255),b
 11904  0037E6  6BA0               	clrf	(IsNetworkDevice@i+1)& (0+255),b
 11905  0037E8                     l16820:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;DeviceManager.c: 57: {
 11909                           ;DeviceManager.c: 58: if(isSameAddress(address,list[i].address)==1)
 11910  0037E8  C08F  F07D         	movff	IsNetworkDevice@address,isSameAddress@a1
 11911  0037EC  C090  F07E         	movff	IsNetworkDevice@address+1,isSameAddress@a1+1
 11912  0037F0  0E0B               	movlw	11
 11913  0037F2  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 11914  0037F4  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 11915  0037F8  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 11916  0037FC  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 11917  0037FE  50F3               	movf	prodl,w,c
 11918  003800  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 11919  003802  0E00               	movlw	low _list
 11920  003804  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 11921  003806  6ED9               	movwf	fsr2l,c
 11922  003808  0E08               	movlw	high _list
 11923  00380A  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 11924  00380C  6EDA               	movwf	fsr2h,c
 11925  00380E  CFDE F07F          	movff	postinc2,isSameAddress@a2
 11926  003812  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 11927  003816  ECBA  F039         	call	_isSameAddress	;wreg free
 11928  00381A  06E8               	decf	wreg,f,c
 11929  00381C  E12A               	bnz	l16830
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;DeviceManager.c: 59: {
 11933                           ;DeviceManager.c: 60: list[i].LastHeard=MSTickGet();
 11934  00381E  EC4F  F038         	call	_MSTickGet	;wreg free
 11935  003822  0E0B               	movlw	11
 11936  003824  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 11937  003826  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 11938  00382A  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 11939  00382E  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 11940  003830  50F3               	movf	prodl,w,c
 11941  003832  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 11942  003834  0E02               	movlw	low (_list+2)
 11943  003836  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 11944  003838  6ED9               	movwf	fsr2l,c
 11945  00383A  0E08               	movlw	high (_list+2)
 11946  00383C  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 11947  00383E  6EDA               	movwf	fsr2h,c
 11948  003840  0E07               	movlw	7
 11949  003842                     u19801:
 11950  003842  CFEB FFDB          	movff	plusw0,plusw2
 11951  003846  06E8               	decf	wreg,f,c
 11952  003848  E2FC               	bc	u19801
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;DeviceManager.c: 61: list[i].devType=devType;
 11956  00384A  0E0B               	movlw	11
 11957  00384C  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 11958  00384E  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 11959  003852  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 11960  003856  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 11961  003858  50F3               	movf	prodl,w,c
 11962  00385A  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 11963  00385C  0E0A               	movlw	low (_list+10)
 11964  00385E  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 11965  003860  6ED9               	movwf	fsr2l,c
 11966  003862  0E08               	movlw	high (_list+10)
 11967  003864  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 11968  003866  6EDA               	movwf	fsr2h,c
 11969  003868  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;DeviceManager.c: 62: res=1;
 11973  00386C  0E01               	movlw	1
 11974  00386E  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 11975                           
 11976                           ;DeviceManager.c: 63: break;
 11977  003870  D026               	goto	l16840
 11978  003872                     l16830:
 11979                           
 11980                           ; BSR set to: 0
 11981  003872  0E0B               	movlw	11
 11982  003874  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 11983  003876  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 11984  00387A  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 11985  00387E  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 11986  003880  50F3               	movf	prodl,w,c
 11987  003882  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 11988  003884  0E00               	movlw	low _list
 11989  003886  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 11990  003888  6ED9               	movwf	fsr2l,c
 11991  00388A  0E08               	movlw	high _list
 11992  00388C  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 11993  00388E  6EDA               	movwf	fsr2h,c
 11994  003890  CFDE F086          	movff	postinc2,isInvalidAddress@address
 11995  003894  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 11996  003898  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 11997  00389C  0900               	iorlw	0
 11998  00389E  E008               	bz	l16836
 11999                           
 12000                           ; BSR set to: 0
 12001  0038A0  299D               	incf	IsNetworkDevice@empty& (0+255),w,b
 12002  0038A2  E106               	bnz	l16836
 12003  0038A4  299E               	incf	(IsNetworkDevice@empty+1)& (0+255),w,b
 12004  0038A6  E104               	bnz	l16836
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;DeviceManager.c: 65: {
 12008                           ;DeviceManager.c: 66: empty=i;
 12009  0038A8  C09F  F09D         	movff	IsNetworkDevice@i,IsNetworkDevice@empty
 12010  0038AC  C0A0  F09E         	movff	IsNetworkDevice@i+1,IsNetworkDevice@empty+1
 12011  0038B0                     l16836:
 12012                           
 12013                           ; BSR set to: 0
 12014  0038B0  4B9F               	infsnz	IsNetworkDevice@i& (0+255),f,b
 12015  0038B2  2BA0               	incf	(IsNetworkDevice@i+1)& (0+255),f,b
 12016                           
 12017                           ; BSR set to: 0
 12018  0038B4  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 12019  0038B6  E103               	bnz	u19830
 12020  0038B8  0E14               	movlw	20
 12021  0038BA  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 12022  0038BC  E395               	bnc	l16820
 12023  0038BE                     u19830:
 12024  0038BE                     l16840:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;DeviceManager.c: 67: }
 12028                           ;DeviceManager.c: 68: }
 12029                           ;DeviceManager.c: 69: if(i>=20)
 12030  0038BE  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 12031  0038C0  E103               	bnz	u19840
 12032  0038C2  0E14               	movlw	20
 12033  0038C4  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 12034  0038C6  E347               	bnc	l16850
 12035  0038C8                     u19840:
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;DeviceManager.c: 70: {
 12039                           ;DeviceManager.c: 72: if(empty<20)
 12040  0038C8  519E               	movf	(IsNetworkDevice@empty+1)& (0+255),w,b
 12041  0038CA  E145               	bnz	l16850
 12042  0038CC  0E14               	movlw	20
 12043  0038CE  5D9D               	subwf	IsNetworkDevice@empty& (0+255),w,b
 12044  0038D0  E242               	bc	l16850
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;DeviceManager.c: 73: {
 12048                           ;DeviceManager.c: 74: memcpy(list[empty].address.bytes,address.bytes,NetworkAddressSizeG
      +                          et());
 12049  0038D2  0E0B               	movlw	11
 12050  0038D4  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12051  0038D6  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12052  0038DA  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12053  0038DE  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12054  0038E0  50F3               	movf	prodl,w,c
 12055  0038E2  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12056  0038E4  0E00               	movlw	low _list
 12057  0038E6  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12058  0038E8  6F75               	movwf	memcpy@d1& (0+255),b
 12059  0038EA  0E08               	movlw	high _list
 12060  0038EC  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12061  0038EE  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 12062  0038F0  0E8F               	movlw	low IsNetworkDevice@address
 12063  0038F2  6F77               	movwf	memcpy@s1& (0+255),b
 12064  0038F4  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 12065  0038F6  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 12066  0038FA  0100               	movlb	0	; () banked
 12067  0038FC  6F79               	movwf	memcpy@n& (0+255),b
 12068  0038FE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 12069  003900  EC54  F035         	call	_memcpy	;wreg free
 12070                           
 12071                           ;DeviceManager.c: 75: list[empty].LastHeard=MSTickGet();
 12072  003904  EC4F  F038         	call	_MSTickGet	;wreg free
 12073  003908  0E0B               	movlw	11
 12074  00390A  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12075  00390C  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12076  003910  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12077  003914  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12078  003916  50F3               	movf	prodl,w,c
 12079  003918  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12080  00391A  0E02               	movlw	low (_list+2)
 12081  00391C  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12082  00391E  6ED9               	movwf	fsr2l,c
 12083  003920  0E08               	movlw	high (_list+2)
 12084  003922  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12085  003924  6EDA               	movwf	fsr2h,c
 12086  003926  0E07               	movlw	7
 12087  003928                     u19861:
 12088  003928  CFEB FFDB          	movff	plusw0,plusw2
 12089  00392C  06E8               	decf	wreg,f,c
 12090  00392E  E2FC               	bc	u19861
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;DeviceManager.c: 76: list[empty].devType=devType;
 12094  003930  0E0B               	movlw	11
 12095  003932  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12096  003934  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12097  003938  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12098  00393C  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12099  00393E  50F3               	movf	prodl,w,c
 12100  003940  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12101  003942  0E0A               	movlw	low (_list+10)
 12102  003944  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12103  003946  6ED9               	movwf	fsr2l,c
 12104  003948  0E08               	movlw	high (_list+10)
 12105  00394A  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12106  00394C  6EDA               	movwf	fsr2h,c
 12107  00394E  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;DeviceManager.c: 77: res=1;
 12111  003952  0E01               	movlw	1
 12112  003954  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 12113  003956                     l16850:
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;DeviceManager.c: 78: }
 12117                           ;DeviceManager.c: 79: }
 12118                           ;DeviceManager.c: 83: return(res);
 12119  003956  519C               	movf	IsNetworkDevice@res& (0+255),w,b
 12120                           
 12121                           ; BSR set to: 0
 12122  003958  0012               	return		;funcret
 12123  00395A                     __end_of_IsNetworkDevice:
 12124                           	opt stack 0
 12125                           tblptru	equ	0xFF8
 12126                           tblptrh	equ	0xFF7
 12127                           tblptrl	equ	0xFF6
 12128                           tablat	equ	0xFF5
 12129                           prodh	equ	0xFF4
 12130                           prodl	equ	0xFF3
 12131                           intcon	equ	0xFF2
 12132                           postinc0	equ	0xFEE
 12133                           plusw0	equ	0xFEB
 12134                           fsr0h	equ	0xFEA
 12135                           fsr0l	equ	0xFE9
 12136                           wreg	equ	0xFE8
 12137                           postdec1	equ	0xFE5
 12138                           plusw1	equ	0xFE3
 12139                           fsr1h	equ	0xFE2
 12140                           fsr1l	equ	0xFE1
 12141                           indf2	equ	0xFDF
 12142                           postinc2	equ	0xFDE
 12143                           postdec2	equ	0xFDD
 12144                           plusw2	equ	0xFDB
 12145                           fsr2h	equ	0xFDA
 12146                           fsr2l	equ	0xFD9
 12147                           status	equ	0xFD8
 12148                           
 12149 ;; *************** function _DeviceManagerGetDeviceData *****************
 12150 ;; Defined at:
 12151 ;;		line 185 in file "../DeviceManager.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  address         2   33[BANK0 ] struct addr_t_def
 12154 ;;  data            2   35[BANK0 ] PTR unsigned char 
 12155 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), 
 12156 ;;  isSecure        2   37[BANK0 ] PTR unsigned char 
 12157 ;;		 -> NetworkManagerProcessIncomingData@isSecurePacket(1), 
 12158 ;;  isFormed        2   39[BANK0 ] PTR unsigned char 
 12159 ;;		 -> NetworkManagerProcessIncomingData@isFormed(1), 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  devBuffer       2    0        PTR struct devDataBuffer
 12162 ;;		 -> NULL(0), 
 12163 ;;  j               2    0        unsigned int 
 12164 ;;  recordLen       2    0        unsigned int 
 12165 ;;  index           2    0        unsigned int 
 12166 ;;  size            2    0        unsigned int 
 12167 ;;  i               2    0        unsigned int 
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  2   33[BANK0 ] unsigned int 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0, cstack
 12172 ;; Tracked objects:
 12173 ;;		On entry : F/0
 12174 ;;		On exit  : F/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12178 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12180 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12181 ;;Total ram usage:       20 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    7
 12184 ;; This function calls:
 12185 ;;		_NetworkAddressSizeGet
 12186 ;;		_isSameAddress
 12187 ;;		_memcpy
 12188 ;; This function is called by:
 12189 ;;		_NetworkManagerProcessIncomingData
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text39
 12194  007580                     __ptext39:
 12195                           	opt stack 0
 12196  007580                     _DeviceManagerGetDeviceData:
 12197                           	opt stack 19
 12198                           
 12199                           ; BSR set to: 0
 12200                           
 12201                           ; BSR set to: 0
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;incstack = 0
 12205  007580  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 12206                           
 12207                           ; BSR set to: 1
 12208                           ;DeviceManager.c: 218: }
 12209                           ;DeviceManager.c: 219: return(size);
 12210                           
 12211                           ; BSR set to: 1
 12212                           
 12213                           ; BSR set to: 1
 12214  007584  0100               	movlb	0	; () banked
 12215  007586  6B81               	clrf	?_DeviceManagerGetDeviceData& (0+255),b
 12216  007588  6B82               	clrf	(?_DeviceManagerGetDeviceData+1)& (0+255),b
 12217                           
 12218                           ; BSR set to: 0
 12219  00758A  0012               	return		;funcret
 12220  00758C                     __end_of_DeviceManagerGetDeviceData:
 12221                           	opt stack 0
 12222                           tblptru	equ	0xFF8
 12223                           tblptrh	equ	0xFF7
 12224                           tblptrl	equ	0xFF6
 12225                           tablat	equ	0xFF5
 12226                           prodh	equ	0xFF4
 12227                           prodl	equ	0xFF3
 12228                           intcon	equ	0xFF2
 12229                           postinc0	equ	0xFEE
 12230                           plusw0	equ	0xFEB
 12231                           fsr0h	equ	0xFEA
 12232                           fsr0l	equ	0xFE9
 12233                           wreg	equ	0xFE8
 12234                           postdec1	equ	0xFE5
 12235                           plusw1	equ	0xFE3
 12236                           fsr1h	equ	0xFE2
 12237                           fsr1l	equ	0xFE1
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           postdec2	equ	0xFDD
 12241                           plusw2	equ	0xFDB
 12242                           fsr2h	equ	0xFDA
 12243                           fsr2l	equ	0xFD9
 12244                           status	equ	0xFD8
 12245                           
 12246 ;; *************** function _NetworkDiscoveredEvent *****************
 12247 ;; Defined at:
 12248 ;;		line 385 in file "../src/Bridge.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  PANID           2   19[BANK0 ] unsigned int 
 12251 ;;  rssi            2   21[BANK0 ] unsigned int 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;  i               2   29[BANK0 ] unsigned int 
 12254 ;;  empty           2   27[BANK0 ] unsigned int 
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      void 
 12257 ;; Registers used:
 12258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12259 ;; Tracked objects:
 12260 ;;		On entry : F/0
 12261 ;;		On exit  : F/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12267 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12268 ;;Total ram usage:       12 bytes
 12269 ;; Hardware stack levels used:    1
 12270 ;; Hardware stack levels required when called:    5
 12271 ;; This function calls:
 12272 ;;		Nothing
 12273 ;; This function is called by:
 12274 ;;		_radioReceivedPacket
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           	psect	text40
 12279  003628                     __ptext40:
 12280                           	opt stack 0
 12281  003628                     _NetworkDiscoveredEvent:
 12282                           	opt stack 22
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;Bridge.c: 387: uint16_t i;
 12286                           ;Bridge.c: 388: uint16_t empty=0xffff;
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;incstack = 0
 12290  003628  697B               	setf	NetworkDiscoveredEvent@empty& (0+255),b
 12291  00362A  697C               	setf	(NetworkDiscoveredEvent@empty+1)& (0+255),b
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;Bridge.c: 389: pcnt1++;
 12295  00362C  0102               	movlb	2	; () banked
 12296  00362E  4B2F               	infsnz	_pcnt1& (0+255),f,b	;volatile
 12297  003630  2B30               	incf	(_pcnt1+1)& (0+255),f,b	;volatile
 12298                           
 12299                           ; BSR set to: 2
 12300                           ;Bridge.c: 390: for(i=0;i<5;i++)
 12301  003632  0100               	movlb	0	; () banked
 12302  003634  6B7D               	clrf	NetworkDiscoveredEvent@i& (0+255),b
 12303  003636  6B7E               	clrf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12304  003638                     l17196:
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;Bridge.c: 391: {
 12308                           ;Bridge.c: 392: if( (ActiveScanResults[i].PANID.Val==PANID) && (ActiveScanResults[i].Cha
      +                          nnel==ActiveScanChannel) )
 12309  003638  0E05               	movlw	5
 12310  00363A  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12311  00363C  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12312  003640  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12313  003644  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12314  003646  50F3               	movf	prodl,w,c
 12315  003648  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12316  00364A  0ECE               	movlw	low (_ActiveScanResults+1)
 12317  00364C  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12318  00364E  6ED9               	movwf	fsr2l,c
 12319  003650  0E03               	movlw	high (_ActiveScanResults+1)
 12320  003652  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12321  003654  6EDA               	movwf	fsr2h,c
 12322  003656  5173               	movf	NetworkDiscoveredEvent@PANID& (0+255),w,b
 12323  003658  18DE               	xorwf	postinc2,w,c
 12324  00365A  E140               	bnz	l17204
 12325  00365C  5174               	movf	(NetworkDiscoveredEvent@PANID+1)& (0+255),w,b
 12326  00365E  18DE               	xorwf	postinc2,w,c
 12327  003660  E13D               	bnz	l17204
 12328                           
 12329                           ; BSR set to: 0
 12330  003662  0E05               	movlw	5
 12331  003664  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12332  003666  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12333  00366A  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12334  00366E  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12335  003670  50F3               	movf	prodl,w,c
 12336  003672  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12337  003674  0ECD               	movlw	low _ActiveScanResults
 12338  003676  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12339  003678  6ED9               	movwf	fsr2l,c
 12340  00367A  0E03               	movlw	high _ActiveScanResults
 12341  00367C  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12342  00367E  6EDA               	movwf	fsr2h,c
 12343  003680  0101               	movlb	1	; () banked
 12344  003682  51CC               	movf	_ActiveScanChannel& (0+255),w,b
 12345  003684  18DE               	xorwf	postinc2,w,c
 12346  003686  E12A               	bnz	l17204
 12347                           
 12348                           ; BSR set to: 1
 12349                           ;Bridge.c: 393: {
 12350                           ;Bridge.c: 394: if(ActiveScanResults[i].RSSIValue<rssi)
 12351  003688  0E05               	movlw	5
 12352  00368A  0100               	movlb	0	; () banked
 12353  00368C  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12354  00368E  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12355  003692  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12356  003696  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12357  003698  50F3               	movf	prodl,w,c
 12358  00369A  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12359  00369C  0ED0               	movlw	low (_ActiveScanResults+3)
 12360  00369E  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12361  0036A0  6ED9               	movwf	fsr2l,c
 12362  0036A2  0E03               	movlw	high (_ActiveScanResults+3)
 12363  0036A4  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12364  0036A6  6EDA               	movwf	fsr2h,c
 12365  0036A8  50DF               	movf	indf2,w,c
 12366  0036AA  6F79               	movwf	(??_NetworkDiscoveredEvent+2)& (0+255),b
 12367  0036AC  6B7A               	clrf	(??_NetworkDiscoveredEvent+3)& (0+255),b
 12368  0036AE  5175               	movf	NetworkDiscoveredEvent@rssi& (0+255),w,b
 12369  0036B0  5D79               	subwf	(??_NetworkDiscoveredEvent+2)& (0+255),w,b
 12370  0036B2  5176               	movf	(NetworkDiscoveredEvent@rssi+1)& (0+255),w,b
 12371  0036B4  597A               	subwfb	(??_NetworkDiscoveredEvent+3)& (0+255),w,b
 12372  0036B6  E233               	bc	l17214
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;Bridge.c: 395: {
 12376                           ;Bridge.c: 396: ActiveScanResults[i].RSSIValue=rssi;
 12377  0036B8  0E05               	movlw	5
 12378  0036BA  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12379  0036BC  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12380  0036C0  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12381  0036C4  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12382  0036C6  50F3               	movf	prodl,w,c
 12383  0036C8  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12384  0036CA  0ED0               	movlw	low (_ActiveScanResults+3)
 12385  0036CC  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12386  0036CE  6ED9               	movwf	fsr2l,c
 12387  0036D0  0E03               	movlw	high (_ActiveScanResults+3)
 12388  0036D2  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12389  0036D4  6EDA               	movwf	fsr2h,c
 12390  0036D6  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 12391  0036DA  D021               	goto	l17214
 12392  0036DC                     l17204:
 12393                           
 12394                           ;Bridge.c: 399: }
 12395                           ;Bridge.c: 400: if( (ActiveScanResults[i].Flags==0) && (empty==0xffff) )
 12396  0036DC  0E05               	movlw	5
 12397  0036DE  0100               	movlb	0	; () banked
 12398  0036E0  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12399  0036E2  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12400  0036E6  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12401  0036EA  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12402  0036EC  50F3               	movf	prodl,w,c
 12403  0036EE  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12404  0036F0  0ED1               	movlw	low (_ActiveScanResults+4)
 12405  0036F2  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12406  0036F4  6ED9               	movwf	fsr2l,c
 12407  0036F6  0E03               	movlw	high (_ActiveScanResults+4)
 12408  0036F8  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12409  0036FA  6EDA               	movwf	fsr2h,c
 12410  0036FC  50DF               	movf	indf2,w,c
 12411  0036FE  E108               	bnz	l17210
 12412                           
 12413                           ; BSR set to: 0
 12414  003700  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 12415  003702  E106               	bnz	l17210
 12416  003704  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 12417  003706  E104               	bnz	l17210
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;Bridge.c: 401: {
 12421                           ;Bridge.c: 402: empty=i;
 12422  003708  C07D  F07B         	movff	NetworkDiscoveredEvent@i,NetworkDiscoveredEvent@empty
 12423  00370C  C07E  F07C         	movff	NetworkDiscoveredEvent@i+1,NetworkDiscoveredEvent@empty+1
 12424  003710                     l17210:
 12425                           
 12426                           ; BSR set to: 0
 12427  003710  4B7D               	infsnz	NetworkDiscoveredEvent@i& (0+255),f,b
 12428  003712  2B7E               	incf	(NetworkDiscoveredEvent@i+1)& (0+255),f,b
 12429                           
 12430                           ; BSR set to: 0
 12431  003714  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 12432  003716  E103               	bnz	u20440
 12433  003718  0E05               	movlw	5
 12434  00371A  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 12435  00371C  E38D               	bnc	l17196
 12436  00371E                     u20440:
 12437  00371E                     l17214:
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;Bridge.c: 403: }
 12441                           ;Bridge.c: 404: }
 12442                           ;Bridge.c: 405: if(i>=5)
 12443  00371E  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 12444  003720  E104               	bnz	u20450
 12445  003722  0E05               	movlw	5
 12446  003724  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 12447  003726  A0D8               	btfss	status,0,c
 12448  003728  0012               	return	
 12449  00372A                     u20450:
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;Bridge.c: 406: {
 12453                           ;Bridge.c: 407: if(empty!=0xffff)
 12454  00372A  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 12455  00372C  E103               	bnz	u20460
 12456  00372E  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 12457  003730  B4D8               	btfsc	status,2,c
 12458  003732  0012               	return	
 12459  003734                     u20460:
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;Bridge.c: 408: {
 12463                           ;Bridge.c: 409: i=empty;
 12464  003734  C07B  F07D         	movff	NetworkDiscoveredEvent@empty,NetworkDiscoveredEvent@i
 12465  003738  C07C  F07E         	movff	NetworkDiscoveredEvent@empty+1,NetworkDiscoveredEvent@i+1
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;Bridge.c: 411: ActiveScanResults[i].Flags=1;
 12469  00373C  0E05               	movlw	5
 12470  00373E  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12471  003740  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12472  003744  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12473  003748  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12474  00374A  50F3               	movf	prodl,w,c
 12475  00374C  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12476  00374E  0ED1               	movlw	low (_ActiveScanResults+4)
 12477  003750  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12478  003752  6ED9               	movwf	fsr2l,c
 12479  003754  0E03               	movlw	high (_ActiveScanResults+4)
 12480  003756  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12481  003758  6EDA               	movwf	fsr2h,c
 12482  00375A  0E01               	movlw	1
 12483  00375C  6EDF               	movwf	indf2,c
 12484                           
 12485                           ;Bridge.c: 412: ActiveScanResults[i].PANID.Val=PANID;
 12486  00375E  0E05               	movlw	5
 12487  003760  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12488  003762  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12489  003766  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12490  00376A  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12491  00376C  50F3               	movf	prodl,w,c
 12492  00376E  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12493  003770  0ECE               	movlw	low (_ActiveScanResults+1)
 12494  003772  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12495  003774  6ED9               	movwf	fsr2l,c
 12496  003776  0E03               	movlw	high (_ActiveScanResults+1)
 12497  003778  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12498  00377A  6EDA               	movwf	fsr2h,c
 12499  00377C  C073  FFDE         	movff	NetworkDiscoveredEvent@PANID,postinc2
 12500  003780  C074  FFDD         	movff	NetworkDiscoveredEvent@PANID+1,postdec2
 12501                           
 12502                           ;Bridge.c: 413: ActiveScanResults[i].RSSIValue=rssi;
 12503  003784  0E05               	movlw	5
 12504  003786  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12505  003788  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12506  00378C  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12507  003790  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12508  003792  50F3               	movf	prodl,w,c
 12509  003794  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12510  003796  0ED0               	movlw	low (_ActiveScanResults+3)
 12511  003798  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12512  00379A  6ED9               	movwf	fsr2l,c
 12513  00379C  0E03               	movlw	high (_ActiveScanResults+3)
 12514  00379E  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12515  0037A0  6EDA               	movwf	fsr2h,c
 12516  0037A2  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 12517                           
 12518                           ;Bridge.c: 414: ActiveScanResults[i].Channel=ActiveScanChannel;
 12519  0037A6  0E05               	movlw	5
 12520  0037A8  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12521  0037AA  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12522  0037AE  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12523  0037B2  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12524  0037B4  50F3               	movf	prodl,w,c
 12525  0037B6  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12526  0037B8  0ECD               	movlw	low _ActiveScanResults
 12527  0037BA  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12528  0037BC  6ED9               	movwf	fsr2l,c
 12529  0037BE  0E03               	movlw	high _ActiveScanResults
 12530  0037C0  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12531  0037C2  6EDA               	movwf	fsr2h,c
 12532  0037C4  C1CC  FFDF         	movff	_ActiveScanChannel,indf2
 12533                           
 12534                           ; BSR set to: 0
 12535  0037C8  0012               	return		;funcret
 12536  0037CA                     __end_of_NetworkDiscoveredEvent:
 12537                           	opt stack 0
 12538                           tblptru	equ	0xFF8
 12539                           tblptrh	equ	0xFF7
 12540                           tblptrl	equ	0xFF6
 12541                           tablat	equ	0xFF5
 12542                           prodh	equ	0xFF4
 12543                           prodl	equ	0xFF3
 12544                           intcon	equ	0xFF2
 12545                           postinc0	equ	0xFEE
 12546                           plusw0	equ	0xFEB
 12547                           fsr0h	equ	0xFEA
 12548                           fsr0l	equ	0xFE9
 12549                           wreg	equ	0xFE8
 12550                           postdec1	equ	0xFE5
 12551                           plusw1	equ	0xFE3
 12552                           fsr1h	equ	0xFE2
 12553                           fsr1l	equ	0xFE1
 12554                           indf2	equ	0xFDF
 12555                           postinc2	equ	0xFDE
 12556                           postdec2	equ	0xFDD
 12557                           plusw2	equ	0xFDB
 12558                           fsr2h	equ	0xFDA
 12559                           fsr2l	equ	0xFD9
 12560                           status	equ	0xFD8
 12561                           
 12562 ;; *************** function _LE_processReceivedMessage *****************
 12563 ;; Defined at:
 12564 ;;		line 425 in file "../LinkEstimator.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;  source          2   63[BANK0 ] PTR struct addr_t_def
 12567 ;;		 -> radioReceivedPacket@source(2), 
 12568 ;;  data            2   65[BANK0 ] PTR unsigned char 
 12569 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 12570 ;;  len             1   67[BANK0 ] unsigned char 
 12571 ;;  rssi            1   68[BANK0 ] unsigned char 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  ll_addr         2   75[BANK0 ] struct addr_t_def
 12574 ;;  bhdr            2   73[BANK0 ] PTR struct net_routing_h
 12575 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 12576 ;;  hdr             2   71[BANK0 ] PTR struct linkest_heade
 12577 ;;		 -> RxPacket.lnk_header(2), RxPacket(142), 
 12578 ;;  nidx            1   77[BANK0 ] unsigned char 
 12579 ;;  res             1    0        enum E179
 12580 ;;  num_entries     1    0        unsigned char 
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      enum E179
 12583 ;; Registers used:
 12584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : F/0
 12587 ;;		On exit  : F/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;Total ram usage:       15 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:   10
 12597 ;; This function calls:
 12598 ;;		_NetworkAddressSizeGet
 12599 ;;		_RouteManagerShouldInsert
 12600 ;;		_RouterEvicted
 12601 ;;		_le_findEmptyNeighborIdx
 12602 ;;		_le_findIdx
 12603 ;;		_le_findRandomNeighborIdx
 12604 ;;		_le_findWorstNeighborIdx
 12605 ;;		_le_initNeighborIdx
 12606 ;;		_le_updateNeighborEntryIdx
 12607 ;;		_memcpy
 12608 ;; This function is called by:
 12609 ;;		_radioReceivedPacket
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text41
 12614  00484A                     __ptext41:
 12615                           	opt stack 0
 12616  00484A                     _LE_processReceivedMessage:
 12617                           	opt stack 17
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;LinkEstimator.c: 428: uint8_t nidx;
 12621                           ;LinkEstimator.c: 429: uint8_t num_entries;
 12622                           ;LinkEstimator.c: 430: net_routing_header_t *bhdr;
 12623                           ;LinkEstimator.c: 431: linkest_header_t* hdr;
 12624                           ;LinkEstimator.c: 432: addr_t ll_addr;
 12625                           ;LinkEstimator.c: 434: bhdr=(net_routing_header_t*)data;
 12626                           
 12627                           ; BSR set to: 0
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;incstack = 0
 12631  00484A  C0A1  F0A9         	movff	LE_processReceivedMessage@data,LE_processReceivedMessage@bhdr
 12632  00484E  C0A2  F0AA         	movff	LE_processReceivedMessage@data+1,LE_processReceivedMessage@bhdr+1
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;LinkEstimator.c: 436: if ( (len >= sizeof (net_routing_header_t)) && (bhdr->packettype=
      +                          =PacketRouting) )
 12636  004852  0E09               	movlw	9
 12637  004854  65A3               	cpfsgt	LE_processReceivedMessage@len& (0+255),b
 12638  004856  0C09               	retlw	9
 12639                           
 12640                           ; BSR set to: 0
 12641  004858  EE20 F002          	lfsr	2,2
 12642  00485C  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 12643  00485E  26D9               	addwf	fsr2l,f,c
 12644  004860  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 12645  004862  22DA               	addwfc	fsr2h,f,c
 12646  004864  0E22               	movlw	34
 12647  004866  18DE               	xorwf	postinc2,w,c
 12648  004868  A4D8               	btfss	status,2,c
 12649  00486A  0012               	return	
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;LinkEstimator.c: 437: {
 12653                           ;LinkEstimator.c: 438: hdr = &bhdr->lnk_header;
 12654  00486C  0E08               	movlw	8
 12655  00486E  25A9               	addwf	LE_processReceivedMessage@bhdr& (0+255),w,b
 12656  004870  6FA7               	movwf	LE_processReceivedMessage@hdr& (0+255),b
 12657  004872  0E00               	movlw	0
 12658  004874  21AA               	addwfc	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 12659  004876  6FA8               	movwf	(LE_processReceivedMessage@hdr+1)& (0+255),b
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;LinkEstimator.c: 441: num_entries = hdr->count;
 12663  004878  0EAB               	movlw	low LE_processReceivedMessage@ll_addr
 12664  00487A  6F75               	movwf	memcpy@d1& (0+255),b
 12665  00487C  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 12666  00487E  C09F  F077         	movff	LE_processReceivedMessage@source,memcpy@s1
 12667  004882  C0A0  F078         	movff	LE_processReceivedMessage@source+1,memcpy@s1+1
 12668  004886  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 12669  00488A  0100               	movlb	0	; () banked
 12670  00488C  6F79               	movwf	memcpy@n& (0+255),b
 12671  00488E  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 12672  004890  EC54  F035         	call	_memcpy	;wreg free
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;LinkEstimator.c: 457: nidx = le_findIdx(ll_addr);
 12676  004894  C0AB  F081         	movff	LE_processReceivedMessage@ll_addr,le_findIdx@ll_addr
 12677  004898  C0AC  F082         	movff	LE_processReceivedMessage@ll_addr+1,le_findIdx@ll_addr+1
 12678  00489C  EC7B  F034         	call	_le_findIdx	;wreg free
 12679  0048A0  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;LinkEstimator.c: 458: if (nidx != 0xff)
 12683  0048A2  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 12684  0048A4  E001               	bz	l17346
 12685  0048A6  D01C               	goto	l17354
 12686  0048A8                     l17346:
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;LinkEstimator.c: 463: {
 12690                           ;LinkEstimator.c: 464: nidx = le_findEmptyNeighborIdx();
 12691  0048A8  EC24  F036         	call	_le_findEmptyNeighborIdx	;wreg free
 12692  0048AC  0100               	movlb	0	; () banked
 12693  0048AE  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
 12694  0048B0  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 12695                           
 12696                           ; BSR set to: 0
 12697                           ;LinkEstimator.c: 465: if (nidx != 0xff)
 12698  0048B2  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 12699  0048B4  E027               	bz	l17356
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;LinkEstimator.c: 466: {
 12703                           ;LinkEstimator.c: 468: le_initNeighborIdx(nidx, ll_addr);
 12704  0048B6  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 12705  0048BA  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 12706  0048BE  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12707  0048C0  ECE6  F030         	call	_le_initNeighborIdx
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;LinkEstimator.c: 469: neighbor_tbl[nidx].lastseq = hdr->lnkSeqNum;
 12711  0048C4  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 12712  0048C8  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 12713  0048CC  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12714  0048CE  0D0B               	mullw	11
 12715  0048D0  0E02               	movlw	low (_neighbor_tbl+2)
 12716  0048D2  24F3               	addwf	prodl,w,c
 12717  0048D4  6EE1               	movwf	fsr1l,c
 12718  0048D6  0E05               	movlw	high (_neighbor_tbl+2)
 12719  0048D8  20F4               	addwfc	prodh,w,c
 12720  0048DA  6EE2               	movwf	fsr1h,c
 12721  0048DC  CFDF FFE7          	movff	indf2,indf1
 12722  0048E0                     l17354:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;LinkEstimator.c: 470: le_updateNeighborEntryIdx(nidx, hdr->lnkSeqNum, bhdr->options.dev
      +                          iceType);
 12726  0048E0  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 12727  0048E4  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 12728  0048E8  50DF               	movf	indf2,w,c
 12729  0048EA  6F99               	movwf	le_updateNeighborEntryIdx@seq& (0+255),b
 12730  0048EC  EE20 F003          	lfsr	2,3
 12731  0048F0  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 12732  0048F2  26D9               	addwf	fsr2l,f,c
 12733  0048F4  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 12734  0048F6  22DA               	addwfc	fsr2h,f,c
 12735  0048F8  50DF               	movf	223,w,c
 12736  0048FA  0B07               	andlw	7
 12737  0048FC  6F9A               	movwf	le_updateNeighborEntryIdx@dev& (0+255),b
 12738  0048FE  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12739  004900  EF54  F020         	goto	_le_updateNeighborEntryIdx
 12740  004904                     l17356:
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;LinkEstimator.c: 472: {
 12744                           ;LinkEstimator.c: 473: nidx = le_findWorstNeighborIdx(EvictETXThreshold);
 12745  004904  0E41               	movlw	65
 12746  004906  ECF3  F025         	call	_le_findWorstNeighborIdx
 12747  00490A  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
 12748  00490C  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;LinkEstimator.c: 474: if (nidx != 0xff)
 12752  00490E  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 12753  004910  E00F               	bz	l17364
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;LinkEstimator.c: 475: {
 12757                           ;LinkEstimator.c: 478: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 12758  004912  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12759  004914  0D0B               	mullw	11
 12760  004916  0E00               	movlw	low _neighbor_tbl
 12761  004918  24F3               	addwf	prodl,w,c
 12762  00491A  6ED9               	movwf	fsr2l,c
 12763  00491C  0E05               	movlw	high _neighbor_tbl
 12764  00491E  20F4               	addwfc	prodh,w,c
 12765  004920  6EDA               	movwf	fsr2h,c
 12766  004922  CFDE F08F          	movff	postinc2,RouterEvicted@address
 12767  004926  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 12768  00492A  EC0F  F02E         	call	_RouterEvicted	;wreg free
 12769  00492E  D021               	goto	l17374
 12770  004930                     l17364:
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;LinkEstimator.c: 481: {
 12774                           ;LinkEstimator.c: 488: if (rssi>=rssiThreshold)
 12775  004930  0E18               	movlw	24
 12776  004932  65A4               	cpfsgt	LE_processReceivedMessage@rssi& (0+255),b
 12777  004934  0C18               	retlw	24
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;LinkEstimator.c: 489: {
 12781                           ;LinkEstimator.c: 490: if(RouteManagerShouldInsert(bhdr)==1)
 12782  004936  C0A9  F088         	movff	LE_processReceivedMessage@bhdr,RouteManagerShouldInsert@hdr
 12783  00493A  C0AA  F089         	movff	LE_processReceivedMessage@bhdr+1,RouteManagerShouldInsert@hdr+1
 12784  00493E  EC77  F02A         	call	_RouteManagerShouldInsert	;wreg free
 12785  004942  06E8               	decf	wreg,f,c
 12786  004944  A4D8               	btfss	status,2,c
 12787  004946  0012               	return	
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;LinkEstimator.c: 491: {
 12791                           ;LinkEstimator.c: 492: nidx = le_findRandomNeighborIdx();
 12792  004948  EC69  F019         	call	_le_findRandomNeighborIdx	;wreg free
 12793  00494C  5184               	movf	?_le_findRandomNeighborIdx& (0+255),w,b
 12794  00494E  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;LinkEstimator.c: 493: if (nidx != 0xff)
 12798  004950  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 12799  004952  B4D8               	btfsc	status,2,c
 12800  004954  0012               	return	
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;LinkEstimator.c: 494: {
 12804                           ;LinkEstimator.c: 495: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 12805  004956  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12806  004958  0D0B               	mullw	11
 12807  00495A  0E00               	movlw	low _neighbor_tbl
 12808  00495C  24F3               	addwf	prodl,w,c
 12809  00495E  6ED9               	movwf	fsr2l,c
 12810  004960  0E05               	movlw	high _neighbor_tbl
 12811  004962  20F4               	addwfc	prodh,w,c
 12812  004964  6EDA               	movwf	fsr2h,c
 12813  004966  CFDE F08F          	movff	postinc2,RouterEvicted@address
 12814  00496A  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 12815  00496E  EC0F  F02E         	call	_RouterEvicted	;wreg free
 12816  004972                     l17374:
 12817                           
 12818                           ;LinkEstimator.c: 496: le_initNeighborIdx(nidx, ll_addr);
 12819  004972  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 12820  004976  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 12821  00497A  0100               	movlb	0	; () banked
 12822  00497C  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 12823  00497E  EFE6  F030         	goto	_le_initNeighborIdx
 12824  004982                     __end_of_LE_processReceivedMessage:
 12825                           	opt stack 0
 12826                           tblptru	equ	0xFF8
 12827                           tblptrh	equ	0xFF7
 12828                           tblptrl	equ	0xFF6
 12829                           tablat	equ	0xFF5
 12830                           prodh	equ	0xFF4
 12831                           prodl	equ	0xFF3
 12832                           intcon	equ	0xFF2
 12833                           postinc0	equ	0xFEE
 12834                           plusw0	equ	0xFEB
 12835                           fsr0h	equ	0xFEA
 12836                           fsr0l	equ	0xFE9
 12837                           wreg	equ	0xFE8
 12838                           indf1	equ	0xFE7
 12839                           postdec1	equ	0xFE5
 12840                           plusw1	equ	0xFE3
 12841                           fsr1h	equ	0xFE2
 12842                           fsr1l	equ	0xFE1
 12843                           indf2	equ	0xFDF
 12844                           postinc2	equ	0xFDE
 12845                           postdec2	equ	0xFDD
 12846                           plusw2	equ	0xFDB
 12847                           fsr2h	equ	0xFDA
 12848                           fsr2l	equ	0xFD9
 12849                           status	equ	0xFD8
 12850                           
 12851 ;; *************** function _le_updateNeighborEntryIdx *****************
 12852 ;; Defined at:
 12853 ;;		line 339 in file "../LinkEstimator.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  idx             1    wreg     unsigned char 
 12856 ;;  seq             1   57[BANK0 ] unsigned char 
 12857 ;;  dev             1   58[BANK0 ] enum E144
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  idx             1   62[BANK0 ] unsigned char 
 12860 ;;  packetGap       1   61[BANK0 ] unsigned char 
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : F/0
 12867 ;;		On exit  : F/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;Total ram usage:        6 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    8
 12877 ;; This function calls:
 12878 ;;		_le_initNeighborIdx
 12879 ;;		_le_updateNeighborTableEst
 12880 ;; This function is called by:
 12881 ;;		_LE_processReceivedMessage
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text42
 12886  0040A8                     __ptext42:
 12887                           	opt stack 0
 12888  0040A8                     _le_updateNeighborEntryIdx:
 12889                           	opt stack 18
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;incstack = 0
 12893                           ;le_updateNeighborEntryIdx@idx stored from wreg
 12894  0040A8  6F9E               	movwf	le_updateNeighborEntryIdx@idx& (0+255),b
 12895                           
 12896                           ;LinkEstimator.c: 341: uint8_t packetGap;
 12897                           ;LinkEstimator.c: 343: if (neighbor_tbl[idx].flags & 0x4)
 12898  0040AA  0100               	movlb	0	; () banked
 12899  0040AC  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12900  0040AE  0D0B               	mullw	11
 12901  0040B0  0E05               	movlw	low (_neighbor_tbl+5)
 12902  0040B2  24F3               	addwf	prodl,w,c
 12903  0040B4  6ED9               	movwf	fsr2l,c
 12904  0040B6  0E05               	movlw	high (_neighbor_tbl+5)
 12905  0040B8  20F4               	addwfc	prodh,w,c
 12906  0040BA  6EDA               	movwf	fsr2h,c
 12907  0040BC  A4DF               	btfss	indf2,2,c
 12908  0040BE  D00A               	goto	l1549
 12909                           
 12910                           ; BSR set to: 5
 12911                           ;LinkEstimator.c: 344: {
 12912                           ;LinkEstimator.c: 346: neighbor_tbl[idx].flags &= ~0x4;
 12913  0040C0  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12914  0040C2  0D0B               	mullw	11
 12915  0040C4  0E05               	movlw	low (_neighbor_tbl+5)
 12916  0040C6  24F3               	addwf	prodl,w,c
 12917  0040C8  6ED9               	movwf	fsr2l,c
 12918  0040CA  0E05               	movlw	high (_neighbor_tbl+5)
 12919  0040CC  20F4               	addwfc	prodh,w,c
 12920  0040CE  6EDA               	movwf	fsr2h,c
 12921  0040D0  0EFB               	movlw	251
 12922  0040D2  16DF               	andwf	indf2,f,c
 12923  0040D4                     l1549:
 12924                           
 12925                           ;LinkEstimator.c: 347: }
 12926                           ;LinkEstimator.c: 349: neighbor_tbl[idx].flags|=(dev<<4);
 12927  0040D4  C09A  F09B         	movff	le_updateNeighborEntryIdx@dev,??_le_updateNeighborEntryIdx
 12928  0040D8  0100               	movlb	0	; () banked
 12929  0040DA  3B9B               	swapf	??_le_updateNeighborEntryIdx& (0+255),f,b
 12930  0040DC  0EF0               	movlw	240
 12931  0040DE  179B               	andwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 12932  0040E0  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12933  0040E2  0D0B               	mullw	11
 12934  0040E4  0E05               	movlw	low (_neighbor_tbl+5)
 12935  0040E6  24F3               	addwf	prodl,w,c
 12936  0040E8  6ED9               	movwf	fsr2l,c
 12937  0040EA  0E05               	movlw	high (_neighbor_tbl+5)
 12938  0040EC  20F4               	addwfc	prodh,w,c
 12939  0040EE  6EDA               	movwf	fsr2h,c
 12940  0040F0  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 12941  0040F2  12DF               	iorwf	indf2,f,c
 12942                           
 12943                           ;LinkEstimator.c: 351: packetGap = seq - neighbor_tbl[idx].lastseq;
 12944  0040F4  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12945  0040F6  0D0B               	mullw	11
 12946  0040F8  0E02               	movlw	low (_neighbor_tbl+2)
 12947  0040FA  24F3               	addwf	prodl,w,c
 12948  0040FC  6ED9               	movwf	fsr2l,c
 12949  0040FE  0E05               	movlw	high (_neighbor_tbl+2)
 12950  004100  20F4               	addwfc	prodh,w,c
 12951  004102  6EDA               	movwf	fsr2h,c
 12952  004104  50DF               	movf	indf2,w,c
 12953  004106  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 12954  004108  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 12955  00410A  5D99               	subwf	le_updateNeighborEntryIdx@seq& (0+255),w,b
 12956  00410C  6F9D               	movwf	le_updateNeighborEntryIdx@packetGap& (0+255),b
 12957                           
 12958                           ;LinkEstimator.c: 354: neighbor_tbl[idx].lastseq = seq;
 12959  00410E  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12960  004110  0D0B               	mullw	11
 12961  004112  0E02               	movlw	low (_neighbor_tbl+2)
 12962  004114  24F3               	addwf	prodl,w,c
 12963  004116  6ED9               	movwf	fsr2l,c
 12964  004118  0E05               	movlw	high (_neighbor_tbl+2)
 12965  00411A  20F4               	addwfc	prodh,w,c
 12966  00411C  6EDA               	movwf	fsr2h,c
 12967  00411E  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 12968                           
 12969                           ;LinkEstimator.c: 355: neighbor_tbl[idx].rcvcnt++;
 12970  004122  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12971  004124  0D0B               	mullw	11
 12972  004126  0E03               	movlw	low (_neighbor_tbl+3)
 12973  004128  24F3               	addwf	prodl,w,c
 12974  00412A  6ED9               	movwf	fsr2l,c
 12975  00412C  0E05               	movlw	high (_neighbor_tbl+3)
 12976  00412E  20F4               	addwfc	prodh,w,c
 12977  004130  6EDA               	movwf	fsr2h,c
 12978  004132  2ADF               	incf	indf2,f,c
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;LinkEstimator.c: 356: if (packetGap > 0)
 12982  004134  519D               	movf	le_updateNeighborEntryIdx@packetGap& (0+255),w,b
 12983  004136  E00D               	bz	l17076
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;LinkEstimator.c: 357: {
 12987                           ;LinkEstimator.c: 358: neighbor_tbl[idx].failcnt += packetGap - 1;
 12988  004138  C09D  F09B         	movff	le_updateNeighborEntryIdx@packetGap,??_le_updateNeighborEntryIdx
 12989  00413C  079B               	decf	??_le_updateNeighborEntryIdx& (0+255),f,b
 12990  00413E  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 12991  004140  0D0B               	mullw	11
 12992  004142  0E04               	movlw	low (_neighbor_tbl+4)
 12993  004144  24F3               	addwf	prodl,w,c
 12994  004146  6ED9               	movwf	fsr2l,c
 12995  004148  0E05               	movlw	high (_neighbor_tbl+4)
 12996  00414A  20F4               	addwfc	prodh,w,c
 12997  00414C  6EDA               	movwf	fsr2h,c
 12998  00414E  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 12999  004150  26DF               	addwf	indf2,f,c
 13000  004152                     l17076:
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;LinkEstimator.c: 359: }
 13004                           ;LinkEstimator.c: 361: if (packetGap > 10)
 13005  004152  0E0A               	movlw	10
 13006  004154  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 13007  004156  D024               	goto	l17084
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;LinkEstimator.c: 362: {
 13011                           ;LinkEstimator.c: 363: le_initNeighborIdx(idx, neighbor_tbl[idx].ll_addr);
 13012  004158  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13013  00415A  0D0B               	mullw	11
 13014  00415C  0E00               	movlw	low _neighbor_tbl
 13015  00415E  24F3               	addwf	prodl,w,c
 13016  004160  6ED9               	movwf	fsr2l,c
 13017  004162  0E05               	movlw	high _neighbor_tbl
 13018  004164  20F4               	addwfc	prodh,w,c
 13019  004166  6EDA               	movwf	fsr2h,c
 13020  004168  CFDE F073          	movff	postinc2,le_initNeighborIdx@ll_addr
 13021  00416C  CFDD F074          	movff	postdec2,le_initNeighborIdx@ll_addr+1
 13022  004170  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13023  004172  ECE6  F030         	call	_le_initNeighborIdx
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;LinkEstimator.c: 364: neighbor_tbl[idx].lastseq = seq;
 13027  004176  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13028  004178  0D0B               	mullw	11
 13029  00417A  0E02               	movlw	low (_neighbor_tbl+2)
 13030  00417C  24F3               	addwf	prodl,w,c
 13031  00417E  6ED9               	movwf	fsr2l,c
 13032  004180  0E05               	movlw	high (_neighbor_tbl+2)
 13033  004182  20F4               	addwfc	prodh,w,c
 13034  004184  6EDA               	movwf	fsr2h,c
 13035  004186  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;LinkEstimator.c: 365: neighbor_tbl[idx].rcvcnt = 1;
 13039  00418A  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13040  00418C  0D0B               	mullw	11
 13041  00418E  0E03               	movlw	low (_neighbor_tbl+3)
 13042  004190  24F3               	addwf	prodl,w,c
 13043  004192  6ED9               	movwf	fsr2l,c
 13044  004194  0E05               	movlw	high (_neighbor_tbl+3)
 13045  004196  20F4               	addwfc	prodh,w,c
 13046  004198  6EDA               	movwf	fsr2h,c
 13047  00419A  0E01               	movlw	1
 13048  00419C  6EDF               	movwf	indf2,c
 13049                           
 13050                           ;LinkEstimator.c: 366: } else if (((neighbor_tbl[idx].rcvcnt + neighbor_tbl[idx].failcnt
      +                          ) >= 3)
 13051  00419E  0C01               	retlw	1
 13052  0041A0                     l17084:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;LinkEstimator.c: 367: || (packetGap >= 3))
 13056  0041A0  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13057  0041A2  0D0B               	mullw	11
 13058  0041A4  0E03               	movlw	low (_neighbor_tbl+3)
 13059  0041A6  24F3               	addwf	prodl,w,c
 13060  0041A8  6ED9               	movwf	fsr2l,c
 13061  0041AA  0E05               	movlw	high (_neighbor_tbl+3)
 13062  0041AC  20F4               	addwfc	prodh,w,c
 13063  0041AE  6EDA               	movwf	fsr2h,c
 13064  0041B0  50DF               	movf	indf2,w,c
 13065  0041B2  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 13066  0041B4  6B9C               	clrf	(??_le_updateNeighborEntryIdx+1)& (0+255),b
 13067  0041B6  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13068  0041B8  0D0B               	mullw	11
 13069  0041BA  0E04               	movlw	low (_neighbor_tbl+4)
 13070  0041BC  24F3               	addwf	prodl,w,c
 13071  0041BE  6ED9               	movwf	fsr2l,c
 13072  0041C0  0E05               	movlw	high (_neighbor_tbl+4)
 13073  0041C2  20F4               	addwfc	prodh,w,c
 13074  0041C4  6EDA               	movwf	fsr2h,c
 13075  0041C6  50DF               	movf	indf2,w,c
 13076  0041C8  279B               	addwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 13077  0041CA  0E00               	movlw	0
 13078  0041CC  239C               	addwfc	(??_le_updateNeighborEntryIdx+1)& (0+255),f,b
 13079  0041CE  BF9C               	btfsc	(??_le_updateNeighborEntryIdx+1)& (0+255),7,b
 13080  0041D0  D005               	goto	l17086
 13081  0041D2  519C               	movf	(??_le_updateNeighborEntryIdx+1)& (0+255),w,b
 13082  0041D4  E106               	bnz	l17088
 13083  0041D6  0E03               	movlw	3
 13084  0041D8  5D9B               	subwf	??_le_updateNeighborEntryIdx& (0+255),w,b
 13085  0041DA  E203               	bc	l17088
 13086  0041DC                     l17086:
 13087                           
 13088                           ; BSR set to: 0
 13089  0041DC  0E02               	movlw	2
 13090  0041DE  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 13091  0041E0  0C02               	retlw	2
 13092  0041E2                     l17088:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;LinkEstimator.c: 368: {
 13096                           ;LinkEstimator.c: 369: le_updateNeighborTableEst(neighbor_tbl[idx].ll_addr);
 13097  0041E2  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13098  0041E4  0D0B               	mullw	11
 13099  0041E6  0E00               	movlw	low _neighbor_tbl
 13100  0041E8  24F3               	addwf	prodl,w,c
 13101  0041EA  6ED9               	movwf	fsr2l,c
 13102  0041EC  0E05               	movlw	high _neighbor_tbl
 13103  0041EE  20F4               	addwfc	prodh,w,c
 13104  0041F0  6EDA               	movwf	fsr2h,c
 13105  0041F2  CFDE F088          	movff	postinc2,le_updateNeighborTableEst@n
 13106  0041F6  CFDD F089          	movff	postdec2,le_updateNeighborTableEst@n+1
 13107  0041FA  EFF7  F00D         	goto	_le_updateNeighborTableEst	;wreg free
 13108  0041FE                     __end_of_le_updateNeighborEntryIdx:
 13109                           	opt stack 0
 13110                           tblptru	equ	0xFF8
 13111                           tblptrh	equ	0xFF7
 13112                           tblptrl	equ	0xFF6
 13113                           tablat	equ	0xFF5
 13114                           prodh	equ	0xFF4
 13115                           prodl	equ	0xFF3
 13116                           intcon	equ	0xFF2
 13117                           postinc0	equ	0xFEE
 13118                           plusw0	equ	0xFEB
 13119                           fsr0h	equ	0xFEA
 13120                           fsr0l	equ	0xFE9
 13121                           wreg	equ	0xFE8
 13122                           indf1	equ	0xFE7
 13123                           postdec1	equ	0xFE5
 13124                           plusw1	equ	0xFE3
 13125                           fsr1h	equ	0xFE2
 13126                           fsr1l	equ	0xFE1
 13127                           indf2	equ	0xFDF
 13128                           postinc2	equ	0xFDE
 13129                           postdec2	equ	0xFDD
 13130                           plusw2	equ	0xFDB
 13131                           fsr2h	equ	0xFDA
 13132                           fsr2l	equ	0xFD9
 13133                           status	equ	0xFD8
 13134                           
 13135 ;; *************** function _le_updateNeighborTableEst *****************
 13136 ;; Defined at:
 13137 ;;		line 297 in file "../LinkEstimator.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  n               2   40[BANK0 ] struct addr_t_def
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;  ne              2   55[BANK0 ] PTR struct neighbor_tabl
 13142 ;;		 -> neighbor_tbl(220), 
 13143 ;;  newEst          2   52[BANK0 ] unsigned int 
 13144 ;;  i               1   54[BANK0 ] unsigned char 
 13145 ;;  totalPkt        1   51[BANK0 ] unsigned char 
 13146 ;;  minPkt          1    0        unsigned char 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1    wreg      void 
 13149 ;; Registers used:
 13150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13151 ;; Tracked objects:
 13152 ;;		On entry : F/0
 13153 ;;		On exit  : F/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13158 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13159 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13160 ;;Total ram usage:       17 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:    7
 13163 ;; This function calls:
 13164 ;;		___lldiv
 13165 ;;		___lwdiv
 13166 ;;		_isSameAddress
 13167 ;;		_le_computeETX
 13168 ;;		_le_updateETX
 13169 ;; This function is called by:
 13170 ;;		_le_updateNeighborEntryIdx
 13171 ;; This function uses a non-reentrant model
 13172 ;;
 13173                           
 13174                           	psect	text43
 13175  001BEE                     __ptext43:
 13176                           	opt stack 0
 13177  001BEE                     _le_updateNeighborTableEst:
 13178                           	opt stack 18
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;LinkEstimator.c: 306: for (i = 0; i < 20; i++)
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;incstack = 0
 13185  001BEE  6B96               	clrf	le_updateNeighborTableEst@i& (0+255),b
 13186  001BF0                     l16682:
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;LinkEstimator.c: 307: {
 13190                           ;LinkEstimator.c: 308: ne = &neighbor_tbl[i];
 13191  001BF0  5196               	movf	le_updateNeighborTableEst@i& (0+255),w,b
 13192  001BF2  0D0B               	mullw	11
 13193  001BF4  0E00               	movlw	low _neighbor_tbl
 13194  001BF6  24F3               	addwf	prodl,w,c
 13195  001BF8  6F97               	movwf	le_updateNeighborTableEst@ne& (0+255),b
 13196  001BFA  0E05               	movlw	high _neighbor_tbl
 13197  001BFC  20F4               	addwfc	prodh,w,c
 13198  001BFE  6F98               	movwf	(le_updateNeighborTableEst@ne+1)& (0+255),b
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;LinkEstimator.c: 309: if (isSameAddress(ne->ll_addr, n))
 13202  001C00  C097  FFD9         	movff	le_updateNeighborTableEst@ne,fsr2l
 13203  001C04  C098  FFDA         	movff	le_updateNeighborTableEst@ne+1,fsr2h
 13204  001C08  CFDE F07D          	movff	postinc2,isSameAddress@a1
 13205  001C0C  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 13206  001C10  C088  F07F         	movff	le_updateNeighborTableEst@n,isSameAddress@a2
 13207  001C14  C089  F080         	movff	le_updateNeighborTableEst@n+1,isSameAddress@a2+1
 13208  001C18  ECBA  F039         	call	_isSameAddress	;wreg free
 13209  001C1C  0900               	iorlw	0
 13210  001C1E  E101 D137          	bz	l16708
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;LinkEstimator.c: 310: {
 13214                           ;LinkEstimator.c: 311: if (ne->flags & 0x1)
 13215  001C22  EE20 F005          	lfsr	2,5
 13216  001C26  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13217  001C28  26D9               	addwf	fsr2l,f,c
 13218  001C2A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13219  001C2C  22DA               	addwfc	fsr2h,f,c
 13220  001C2E  A0DF               	btfss	indf2,0,c
 13221  001C30  D12F               	goto	l16708
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;LinkEstimator.c: 312: {
 13225                           ;LinkEstimator.c: 314: totalPkt = ne->rcvcnt + ne->failcnt;
 13226  001C32  EE20 F004          	lfsr	2,4
 13227  001C36  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13228  001C38  26D9               	addwf	fsr2l,f,c
 13229  001C3A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13230  001C3C  22DA               	addwfc	fsr2h,f,c
 13231  001C3E  50DF               	movf	indf2,w,c
 13232  001C40  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13233  001C42  EE20 F003          	lfsr	2,3
 13234  001C46  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13235  001C48  26D9               	addwf	fsr2l,f,c
 13236  001C4A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13237  001C4C  22DA               	addwfc	fsr2h,f,c
 13238  001C4E  50DF               	movf	indf2,w,c
 13239  001C50  258A               	addwf	??_le_updateNeighborTableEst& (0+255),w,b
 13240  001C52  6F93               	movwf	le_updateNeighborTableEst@totalPkt& (0+255),b
 13241                           
 13242                           ;LinkEstimator.c: 316: if ((ne->flags & 0x2)==0)
 13243  001C54  EE20 F005          	lfsr	2,5
 13244  001C58  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13245  001C5A  26D9               	addwf	fsr2l,f,c
 13246  001C5C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13247  001C5E  22DA               	addwfc	fsr2h,f,c
 13248  001C60  B2DF               	btfsc	indf2,1,c
 13249  001C62  D073               	goto	l16696
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;LinkEstimator.c: 317: {
 13253                           ;LinkEstimator.c: 318: newEst = (250UL * ne->rcvcnt) / totalPkt;
 13254  001C64  EE20 F003          	lfsr	2,3
 13255  001C68  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13256  001C6A  26D9               	addwf	fsr2l,f,c
 13257  001C6C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13258  001C6E  22DA               	addwfc	fsr2h,f,c
 13259  001C70  50DF               	movf	indf2,w,c
 13260  001C72  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13261  001C74  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 13262  001C78  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13263  001C7A  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13264  001C7C  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13265  001C7E  0EFA               	movlw	250
 13266  001C80  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13267  001C82  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 13268  001C86  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 13269  001C8A  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 13270  001C8C  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 13271  001C8E  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13272  001C90  50F3               	movf	prodl,w,c
 13273  001C92  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13274  001C94  50F4               	movf	prodh,w,c
 13275  001C96  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13276  001C98  0E00               	movlw	0
 13277  001C9A  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13278  001C9C  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13279  001C9E  50F3               	movf	prodl,w,c
 13280  001CA0  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13281  001CA2  50F4               	movf	prodh,w,c
 13282  001CA4  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13283  001CA6  0E00               	movlw	0
 13284  001CA8  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13285  001CAA  0EFA               	movlw	250
 13286  001CAC  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13287  001CAE  50F3               	movf	prodl,w,c
 13288  001CB0  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13289  001CB2  50F4               	movf	prodh,w,c
 13290  001CB4  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13291  001CB6  0E00               	movlw	0
 13292  001CB8  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13293  001CBA  50F3               	movf	prodl,w,c
 13294  001CBC  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13295  001CBE  50F4               	movf	prodh,w,c
 13296  001CC0  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13297  001CC2  0E00               	movlw	0
 13298  001CC4  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13299  001CC6  50F3               	movf	prodl,w,c
 13300  001CC8  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13301  001CCA  50F4               	movf	prodh,w,c
 13302  001CCC  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13303  001CCE  0EFA               	movlw	250
 13304  001CD0  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13305  001CD2  50F3               	movf	prodl,w,c
 13306  001CD4  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13307  001CD6  0E00               	movlw	0
 13308  001CD8  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13309  001CDA  50F3               	movf	prodl,w,c
 13310  001CDC  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13311  001CDE  0E00               	movlw	0
 13312  001CE0  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13313  001CE2  50F3               	movf	prodl,w,c
 13314  001CE4  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13315  001CE6  0E00               	movlw	0
 13316  001CE8  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13317  001CEA  50F3               	movf	prodl,w,c
 13318  001CEC  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13319  001CEE  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 13320  001CF2  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 13321  001CF6  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 13322  001CFA  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 13323  001CFE  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 13324  001D00  6F77               	movwf	___lldiv@divisor& (0+255),b
 13325  001D02  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 13326  001D04  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 13327  001D06  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 13328  001D08  ECD9  F031         	call	___lldiv	;wreg free
 13329  001D0C  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 13330  001D10  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;LinkEstimator.c: 319: ne->inquality = newEst;
 13334  001D14  EE20 F006          	lfsr	2,6
 13335  001D18  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13336  001D1A  26D9               	addwf	fsr2l,f,c
 13337  001D1C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13338  001D1E  22DA               	addwfc	fsr2h,f,c
 13339  001D20  C094  FFDF         	movff	le_updateNeighborTableEst@newEst,indf2
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;LinkEstimator.c: 320: ne->etx = le_computeETX(ne->inquality);
 13343  001D24  EE20 F006          	lfsr	2,6
 13344  001D28  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13345  001D2A  26D9               	addwf	fsr2l,f,c
 13346  001D2C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13347  001D2E  22DA               	addwfc	fsr2h,f,c
 13348  001D30  50DF               	movf	indf2,w,c
 13349  001D32  EC45  F037         	call	_le_computeETX
 13350  001D36  EE20 F007          	lfsr	2,7
 13351  001D3A  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13352  001D3C  26D9               	addwf	fsr2l,f,c
 13353  001D3E  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13354  001D40  22DA               	addwfc	fsr2h,f,c
 13355  001D42  C07B  FFDE         	movff	?_le_computeETX,postinc2
 13356  001D46  C07C  FFDD         	movff	?_le_computeETX+1,postdec2
 13357  001D4A                     l16696:
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;LinkEstimator.c: 321: }
 13361                           ;LinkEstimator.c: 323: ne->flags |= 0x2;
 13362  001D4A  EE20 F005          	lfsr	2,5
 13363  001D4E  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13364  001D50  26D9               	addwf	fsr2l,f,c
 13365  001D52  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13366  001D54  22DA               	addwfc	fsr2h,f,c
 13367  001D56  0E00               	movlw	0
 13368  001D58  82DB               	bsf	plusw2,1,c
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;LinkEstimator.c: 325: newEst = (250UL * ne->rcvcnt) / totalPkt;
 13372  001D5A  EE20 F003          	lfsr	2,3
 13373  001D5E  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13374  001D60  26D9               	addwf	fsr2l,f,c
 13375  001D62  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13376  001D64  22DA               	addwfc	fsr2h,f,c
 13377  001D66  50DF               	movf	indf2,w,c
 13378  001D68  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13379  001D6A  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 13380  001D6E  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13381  001D70  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13382  001D72  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13383  001D74  0EFA               	movlw	250
 13384  001D76  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13385  001D78  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 13386  001D7C  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 13387  001D80  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 13388  001D82  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 13389  001D84  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13390  001D86  50F3               	movf	prodl,w,c
 13391  001D88  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13392  001D8A  50F4               	movf	prodh,w,c
 13393  001D8C  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13394  001D8E  0E00               	movlw	0
 13395  001D90  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13396  001D92  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13397  001D94  50F3               	movf	prodl,w,c
 13398  001D96  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13399  001D98  50F4               	movf	prodh,w,c
 13400  001D9A  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13401  001D9C  0E00               	movlw	0
 13402  001D9E  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13403  001DA0  0EFA               	movlw	250
 13404  001DA2  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13405  001DA4  50F3               	movf	prodl,w,c
 13406  001DA6  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13407  001DA8  50F4               	movf	prodh,w,c
 13408  001DAA  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13409  001DAC  0E00               	movlw	0
 13410  001DAE  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13411  001DB0  50F3               	movf	prodl,w,c
 13412  001DB2  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13413  001DB4  50F4               	movf	prodh,w,c
 13414  001DB6  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13415  001DB8  0E00               	movlw	0
 13416  001DBA  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13417  001DBC  50F3               	movf	prodl,w,c
 13418  001DBE  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13419  001DC0  50F4               	movf	prodh,w,c
 13420  001DC2  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13421  001DC4  0EFA               	movlw	250
 13422  001DC6  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13423  001DC8  50F3               	movf	prodl,w,c
 13424  001DCA  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13425  001DCC  0E00               	movlw	0
 13426  001DCE  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13427  001DD0  50F3               	movf	prodl,w,c
 13428  001DD2  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13429  001DD4  0E00               	movlw	0
 13430  001DD6  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13431  001DD8  50F3               	movf	prodl,w,c
 13432  001DDA  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13433  001DDC  0E00               	movlw	0
 13434  001DDE  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13435  001DE0  50F3               	movf	prodl,w,c
 13436  001DE2  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13437  001DE4  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 13438  001DE8  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 13439  001DEC  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 13440  001DF0  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 13441  001DF4  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 13442  001DF6  6F77               	movwf	___lldiv@divisor& (0+255),b
 13443  001DF8  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 13444  001DFA  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 13445  001DFC  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 13446  001DFE  ECD9  F031         	call	___lldiv	;wreg free
 13447  001E02  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 13448  001E06  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;LinkEstimator.c: 327: ne->inquality = (8 * (uint16_t) ne->inquality + (10 - 8) * newEst
      +                          ) / 10;
 13452  001E0A  EE20 F006          	lfsr	2,6
 13453  001E0E  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13454  001E10  26D9               	addwf	fsr2l,f,c
 13455  001E12  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13456  001E14  22DA               	addwfc	fsr2h,f,c
 13457  001E16  C094  F08A         	movff	le_updateNeighborTableEst@newEst,??_le_updateNeighborTableEst
 13458  001E1A  C095  F08B         	movff	le_updateNeighborTableEst@newEst+1,??_le_updateNeighborTableEst+1
 13459  001E1E  90D8               	bcf	status,0,c
 13460  001E20  378A               	rlcf	??_le_updateNeighborTableEst& (0+255),f,b
 13461  001E22  378B               	rlcf	(??_le_updateNeighborTableEst+1)& (0+255),f,b
 13462  001E24  EE10 F006          	lfsr	1,6
 13463  001E28  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13464  001E2A  26E1               	addwf	fsr1l,f,c
 13465  001E2C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13466  001E2E  22E2               	addwfc	fsr1h,f,c
 13467  001E30  50E7               	movf	indf1,w,c
 13468  001E32  0D08               	mullw	8
 13469  001E34  518A               	movf	??_le_updateNeighborTableEst& (0+255),w,b
 13470  001E36  24F3               	addwf	prodl,w,c
 13471  001E38  6F73               	movwf	___lwdiv@dividend& (0+255),b
 13472  001E3A  518B               	movf	(??_le_updateNeighborTableEst+1)& (0+255),w,b
 13473  001E3C  20F4               	addwfc	prodh,w,c
 13474  001E3E  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 13475  001E40  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 13476  001E42  0E0A               	movlw	10
 13477  001E44  6F75               	movwf	___lwdiv@divisor& (0+255),b
 13478  001E46  EC98  F036         	call	___lwdiv	;wreg free
 13479  001E4A  5173               	movf	?___lwdiv& (0+255),w,b
 13480  001E4C  6EDF               	movwf	indf2,c
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;LinkEstimator.c: 328: ne->rcvcnt = 0;
 13484  001E4E  EE20 F003          	lfsr	2,3
 13485  001E52  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13486  001E54  26D9               	addwf	fsr2l,f,c
 13487  001E56  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13488  001E58  22DA               	addwfc	fsr2h,f,c
 13489  001E5A  6ADF               	clrf	indf2,c
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;LinkEstimator.c: 329: ne->failcnt = 0;
 13493  001E5C  EE20 F004          	lfsr	2,4
 13494  001E60  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13495  001E62  26D9               	addwf	fsr2l,f,c
 13496  001E64  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13497  001E66  22DA               	addwfc	fsr2h,f,c
 13498  001E68  6ADF               	clrf	indf2,c
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;LinkEstimator.c: 330: le_updateETX(ne, le_computeETX(ne->inquality));
 13502  001E6A  C097  F080         	movff	le_updateNeighborTableEst@ne,le_updateETX@ne
 13503  001E6E  C098  F081         	movff	le_updateNeighborTableEst@ne+1,le_updateETX@ne+1
 13504  001E72  EE20 F006          	lfsr	2,6
 13505  001E76  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13506  001E78  26D9               	addwf	fsr2l,f,c
 13507  001E7A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13508  001E7C  22DA               	addwfc	fsr2h,f,c
 13509  001E7E  50DF               	movf	indf2,w,c
 13510  001E80  EC45  F037         	call	_le_computeETX
 13511  001E84  C07B  F082         	movff	?_le_computeETX,le_updateETX@newEst
 13512  001E88  C07C  F083         	movff	?_le_computeETX+1,le_updateETX@newEst+1
 13513  001E8C  ECEF  F033         	call	_le_updateETX	;wreg free
 13514  001E90                     l16708:
 13515                           
 13516                           ; BSR set to: 0
 13517  001E90  2B96               	incf	le_updateNeighborTableEst@i& (0+255),f,b
 13518                           
 13519                           ; BSR set to: 0
 13520  001E92  0E13               	movlw	19
 13521  001E94  6596               	cpfsgt	le_updateNeighborTableEst@i& (0+255),b
 13522  001E96  D6AC               	goto	l16682
 13523  001E98  0C13               	retlw	19
 13524  001E9A                     __end_of_le_updateNeighborTableEst:
 13525                           	opt stack 0
 13526                           tblptru	equ	0xFF8
 13527                           tblptrh	equ	0xFF7
 13528                           tblptrl	equ	0xFF6
 13529                           tablat	equ	0xFF5
 13530                           prodh	equ	0xFF4
 13531                           prodl	equ	0xFF3
 13532                           intcon	equ	0xFF2
 13533                           postinc0	equ	0xFEE
 13534                           plusw0	equ	0xFEB
 13535                           fsr0h	equ	0xFEA
 13536                           fsr0l	equ	0xFE9
 13537                           wreg	equ	0xFE8
 13538                           indf1	equ	0xFE7
 13539                           postdec1	equ	0xFE5
 13540                           plusw1	equ	0xFE3
 13541                           fsr1h	equ	0xFE2
 13542                           fsr1l	equ	0xFE1
 13543                           indf2	equ	0xFDF
 13544                           postinc2	equ	0xFDE
 13545                           postdec2	equ	0xFDD
 13546                           plusw2	equ	0xFDB
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function _le_updateETX *****************
 13552 ;; Defined at:
 13553 ;;		line 292 in file "../LinkEstimator.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  ne              2   32[BANK0 ] PTR struct neighbor_tabl
 13556 ;;		 -> neighbor_tbl(220), 
 13557 ;;  newEst          2   34[BANK0 ] unsigned int 
 13558 ;; Auto vars:     Size  Location     Type
 13559 ;;		None
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  1    wreg      void 
 13562 ;; Registers used:
 13563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13564 ;; Tracked objects:
 13565 ;;		On entry : F/0
 13566 ;;		On exit  : F/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;Total ram usage:        8 bytes
 13574 ;; Hardware stack levels used:    1
 13575 ;; Hardware stack levels required when called:    6
 13576 ;; This function calls:
 13577 ;;		___lwdiv
 13578 ;; This function is called by:
 13579 ;;		_le_updateNeighborTableEst
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           	psect	text44
 13584  0067DE                     __ptext44:
 13585                           	opt stack 0
 13586  0067DE                     _le_updateETX:
 13587                           	opt stack 18
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;LinkEstimator.c: 294: ne->etx = ((uint16_t) 8 * ne->etx + (uint16_t) (10 - 8) * newEst)
      +                           / 10;
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;incstack = 0
 13594  0067DE  C082  F084         	movff	le_updateETX@newEst,??_le_updateETX
 13595  0067E2  C083  F085         	movff	le_updateETX@newEst+1,??_le_updateETX+1
 13596  0067E6  90D8               	bcf	status,0,c
 13597  0067E8  3784               	rlcf	??_le_updateETX& (0+255),f,b
 13598  0067EA  3785               	rlcf	(??_le_updateETX+1)& (0+255),f,b
 13599  0067EC  EE20 F007          	lfsr	2,7
 13600  0067F0  5180               	movf	le_updateETX@ne& (0+255),w,b
 13601  0067F2  26D9               	addwf	fsr2l,f,c
 13602  0067F4  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 13603  0067F6  22DA               	addwfc	fsr2h,f,c
 13604  0067F8  CFDE F086          	movff	postinc2,??_le_updateETX+2
 13605  0067FC  CFDD F087          	movff	postdec2,??_le_updateETX+3
 13606  006800  90D8               	bcf	status,0,c
 13607  006802  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 13608  006804  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 13609  006806  90D8               	bcf	status,0,c
 13610  006808  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 13611  00680A  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 13612  00680C  90D8               	bcf	status,0,c
 13613  00680E  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 13614  006810  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 13615  006812  5184               	movf	??_le_updateETX& (0+255),w,b
 13616  006814  2586               	addwf	(??_le_updateETX+2)& (0+255),w,b
 13617  006816  6F73               	movwf	___lwdiv@dividend& (0+255),b
 13618  006818  5185               	movf	(??_le_updateETX+1)& (0+255),w,b
 13619  00681A  2187               	addwfc	(??_le_updateETX+3)& (0+255),w,b
 13620  00681C  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 13621  00681E  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 13622  006820  0E0A               	movlw	10
 13623  006822  6F75               	movwf	___lwdiv@divisor& (0+255),b
 13624  006824  EC98  F036         	call	___lwdiv	;wreg free
 13625  006828  EE20 F007          	lfsr	2,7
 13626  00682C  5180               	movf	le_updateETX@ne& (0+255),w,b
 13627  00682E  26D9               	addwf	fsr2l,f,c
 13628  006830  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 13629  006832  22DA               	addwfc	fsr2h,f,c
 13630  006834  C073  FFDE         	movff	?___lwdiv,postinc2
 13631  006838  C074  FFDD         	movff	?___lwdiv+1,postdec2
 13632                           
 13633                           ; BSR set to: 0
 13634  00683C  0012               	return		;funcret
 13635  00683E                     __end_of_le_updateETX:
 13636                           	opt stack 0
 13637                           tblptru	equ	0xFF8
 13638                           tblptrh	equ	0xFF7
 13639                           tblptrl	equ	0xFF6
 13640                           tablat	equ	0xFF5
 13641                           prodh	equ	0xFF4
 13642                           prodl	equ	0xFF3
 13643                           intcon	equ	0xFF2
 13644                           postinc0	equ	0xFEE
 13645                           plusw0	equ	0xFEB
 13646                           fsr0h	equ	0xFEA
 13647                           fsr0l	equ	0xFE9
 13648                           wreg	equ	0xFE8
 13649                           indf1	equ	0xFE7
 13650                           postdec1	equ	0xFE5
 13651                           plusw1	equ	0xFE3
 13652                           fsr1h	equ	0xFE2
 13653                           fsr1l	equ	0xFE1
 13654                           indf2	equ	0xFDF
 13655                           postinc2	equ	0xFDE
 13656                           postdec2	equ	0xFDD
 13657                           plusw2	equ	0xFDB
 13658                           fsr2h	equ	0xFDA
 13659                           fsr2l	equ	0xFD9
 13660                           status	equ	0xFD8
 13661                           
 13662 ;; *************** function _le_computeETX *****************
 13663 ;; Defined at:
 13664 ;;		line 278 in file "../LinkEstimator.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;  q1              1    wreg     unsigned char 
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;  q1              1   29[BANK0 ] unsigned char 
 13669 ;;  q               2   30[BANK0 ] unsigned int 
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  2   27[BANK0 ] unsigned int 
 13672 ;; Registers used:
 13673 ;;		wreg, status,2, status,0, cstack
 13674 ;; Tracked objects:
 13675 ;;		On entry : F/0
 13676 ;;		On exit  : F/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;Total ram usage:        5 bytes
 13684 ;; Hardware stack levels used:    1
 13685 ;; Hardware stack levels required when called:    6
 13686 ;; This function calls:
 13687 ;;		___awdiv
 13688 ;; This function is called by:
 13689 ;;		_le_updateNeighborTableEst
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693                           	psect	text45
 13694  006E8A                     __ptext45:
 13695                           	opt stack 0
 13696  006E8A                     _le_computeETX:
 13697                           	opt stack 18
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;incstack = 0
 13701                           ;le_computeETX@q1 stored from wreg
 13702  006E8A  6F7D               	movwf	le_computeETX@q1& (0+255),b
 13703                           
 13704                           ;LinkEstimator.c: 280: uint16_t q=0xffff;
 13705  006E8C  0100               	movlb	0	; () banked
 13706  006E8E  697E               	setf	le_computeETX@q& (0+255),b
 13707  006E90  697F               	setf	(le_computeETX@q+1)& (0+255),b
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;LinkEstimator.c: 281: if (q1 > 0)
 13711  006E92  517D               	movf	le_computeETX@q1& (0+255),w,b
 13712  006E94  E014               	bz	l1532
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;LinkEstimator.c: 282: {
 13716                           ;LinkEstimator.c: 283: q = 2500 / q1;
 13717  006E96  0E09               	movlw	9
 13718  006E98  6F74               	movwf	(___awdiv@dividend+1)& (0+255),b
 13719  006E9A  0EC4               	movlw	196
 13720  006E9C  6F73               	movwf	___awdiv@dividend& (0+255),b
 13721  006E9E  C07D  F075         	movff	le_computeETX@q1,___awdiv@divisor
 13722  006EA2  6B76               	clrf	(___awdiv@divisor+1)& (0+255),b
 13723  006EA4  EC61  F031         	call	___awdiv	;wreg free
 13724  006EA8  C073  F07E         	movff	?___awdiv,le_computeETX@q
 13725  006EAC  C074  F07F         	movff	?___awdiv+1,le_computeETX@q+1
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;LinkEstimator.c: 284: if (q > 250)
 13729  006EB0  517F               	movf	(le_computeETX@q+1)& (0+255),w,b
 13730  006EB2  E103               	bnz	u19280
 13731  006EB4  0EFB               	movlw	251
 13732  006EB6  5D7E               	subwf	le_computeETX@q& (0+255),w,b
 13733  006EB8  E302               	bnc	l1532
 13734  006EBA                     u19280:
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;LinkEstimator.c: 285: {
 13738                           ;LinkEstimator.c: 286: q = 0xffff;
 13739  006EBA  697E               	setf	le_computeETX@q& (0+255),b
 13740  006EBC  697F               	setf	(le_computeETX@q+1)& (0+255),b
 13741  006EBE                     l1532:
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;LinkEstimator.c: 287: }
 13745                           ;LinkEstimator.c: 288: }
 13746                           ;LinkEstimator.c: 289: return(q);
 13747  006EBE  C07E  F07B         	movff	le_computeETX@q,?_le_computeETX
 13748  006EC2  C07F  F07C         	movff	le_computeETX@q+1,?_le_computeETX+1
 13749                           
 13750                           ; BSR set to: 0
 13751  006EC6  0012               	return		;funcret
 13752  006EC8                     __end_of_le_computeETX:
 13753                           	opt stack 0
 13754                           tblptru	equ	0xFF8
 13755                           tblptrh	equ	0xFF7
 13756                           tblptrl	equ	0xFF6
 13757                           tablat	equ	0xFF5
 13758                           prodh	equ	0xFF4
 13759                           prodl	equ	0xFF3
 13760                           intcon	equ	0xFF2
 13761                           postinc0	equ	0xFEE
 13762                           plusw0	equ	0xFEB
 13763                           fsr0h	equ	0xFEA
 13764                           fsr0l	equ	0xFE9
 13765                           wreg	equ	0xFE8
 13766                           indf1	equ	0xFE7
 13767                           postdec1	equ	0xFE5
 13768                           plusw1	equ	0xFE3
 13769                           fsr1h	equ	0xFE2
 13770                           fsr1l	equ	0xFE1
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           postdec2	equ	0xFDD
 13774                           plusw2	equ	0xFDB
 13775                           fsr2h	equ	0xFDA
 13776                           fsr2l	equ	0xFD9
 13777                           status	equ	0xFD8
 13778                           
 13779 ;; *************** function ___awdiv *****************
 13780 ;; Defined at:
 13781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  dividend        2   19[BANK0 ] int 
 13784 ;;  divisor         2   21[BANK0 ] int 
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  quotient        2   25[BANK0 ] int 
 13787 ;;  sign            1   24[BANK0 ] unsigned char 
 13788 ;;  counter         1   23[BANK0 ] unsigned char 
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  2   19[BANK0 ] int 
 13791 ;; Registers used:
 13792 ;;		wreg, status,2, status,0
 13793 ;; Tracked objects:
 13794 ;;		On entry : F/0
 13795 ;;		On exit  : F/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13798 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13801 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13802 ;;Total ram usage:        8 bytes
 13803 ;; Hardware stack levels used:    1
 13804 ;; Hardware stack levels required when called:    5
 13805 ;; This function calls:
 13806 ;;		Nothing
 13807 ;; This function is called by:
 13808 ;;		_le_computeETX
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           	psect	text46
 13813  0062C2                     __ptext46:
 13814                           	opt stack 0
 13815  0062C2                     ___awdiv:
 13816                           	opt stack 18
 13817                           
 13818                           ; BSR set to: 0
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;incstack = 0
 13822  0062C2  6B78               	clrf	___awdiv@sign& (0+255),b
 13823                           
 13824                           ; BSR set to: 0
 13825  0062C4  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13826  0062C6  D006               	goto	l16154
 13827                           
 13828                           ; BSR set to: 0
 13829  0062C8  6D75               	negf	___awdiv@divisor& (0+255),b
 13830  0062CA  1F76               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13831  0062CC  B0D8               	btfsc	status,0,c
 13832  0062CE  2B76               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13833                           
 13834                           ; BSR set to: 0
 13835  0062D0  0E01               	movlw	1
 13836  0062D2  6F78               	movwf	___awdiv@sign& (0+255),b
 13837  0062D4                     l16154:
 13838                           
 13839                           ; BSR set to: 0
 13840  0062D4  AF74               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13841  0062D6  D006               	goto	l16160
 13842                           
 13843                           ; BSR set to: 0
 13844  0062D8  6D73               	negf	___awdiv@dividend& (0+255),b
 13845  0062DA  1F74               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13846  0062DC  B0D8               	btfsc	status,0,c
 13847  0062DE  2B74               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13848                           
 13849                           ; BSR set to: 0
 13850  0062E0  0E01               	movlw	1
 13851  0062E2  1B78               	xorwf	___awdiv@sign& (0+255),f,b
 13852  0062E4                     l16160:
 13853                           
 13854                           ; BSR set to: 0
 13855  0062E4  6B79               	clrf	___awdiv@quotient& (0+255),b
 13856  0062E6  6B7A               	clrf	(___awdiv@quotient+1)& (0+255),b
 13857                           
 13858                           ; BSR set to: 0
 13859  0062E8  5175               	movf	___awdiv@divisor& (0+255),w,b
 13860  0062EA  1176               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13861  0062EC  E01B               	bz	l16182
 13862                           
 13863                           ; BSR set to: 0
 13864  0062EE  0E01               	movlw	1
 13865  0062F0  6F77               	movwf	___awdiv@counter& (0+255),b
 13866  0062F2  D004               	goto	l16168
 13867  0062F4                     l16166:
 13868                           
 13869                           ; BSR set to: 0
 13870  0062F4  90D8               	bcf	status,0,c
 13871  0062F6  3775               	rlcf	___awdiv@divisor& (0+255),f,b
 13872  0062F8  3776               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13873  0062FA  2B77               	incf	___awdiv@counter& (0+255),f,b
 13874  0062FC                     l16168:
 13875                           
 13876                           ; BSR set to: 0
 13877  0062FC  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13878  0062FE  D7FA               	goto	l16166
 13879  006300                     l16170:
 13880                           
 13881                           ; BSR set to: 0
 13882  006300  90D8               	bcf	status,0,c
 13883  006302  3779               	rlcf	___awdiv@quotient& (0+255),f,b
 13884  006304  377A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13885                           
 13886                           ; BSR set to: 0
 13887  006306  5175               	movf	___awdiv@divisor& (0+255),w,b
 13888  006308  5D73               	subwf	___awdiv@dividend& (0+255),w,b
 13889  00630A  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13890  00630C  5974               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13891  00630E  E305               	bnc	l16178
 13892                           
 13893                           ; BSR set to: 0
 13894  006310  5175               	movf	___awdiv@divisor& (0+255),w,b
 13895  006312  5F73               	subwf	___awdiv@dividend& (0+255),f,b
 13896  006314  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13897  006316  5B74               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13898                           
 13899                           ; BSR set to: 0
 13900  006318  8179               	bsf	___awdiv@quotient& (0+255),0,b
 13901  00631A                     l16178:
 13902                           
 13903                           ; BSR set to: 0
 13904  00631A  90D8               	bcf	status,0,c
 13905  00631C  3376               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13906  00631E  3375               	rrcf	___awdiv@divisor& (0+255),f,b
 13907                           
 13908                           ; BSR set to: 0
 13909  006320  2F77               	decfsz	___awdiv@counter& (0+255),f,b
 13910  006322  D7EE               	goto	l16170
 13911  006324                     l16182:
 13912                           
 13913                           ; BSR set to: 0
 13914  006324  5178               	movf	___awdiv@sign& (0+255),w,b
 13915  006326  E004               	bz	l16186
 13916                           
 13917                           ; BSR set to: 0
 13918  006328  6D79               	negf	___awdiv@quotient& (0+255),b
 13919  00632A  1F7A               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13920  00632C  B0D8               	btfsc	status,0,c
 13921  00632E  2B7A               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13922  006330                     l16186:
 13923                           
 13924                           ; BSR set to: 0
 13925  006330  C079  F073         	movff	___awdiv@quotient,?___awdiv
 13926  006334  C07A  F074         	movff	___awdiv@quotient+1,?___awdiv+1
 13927                           
 13928                           ; BSR set to: 0
 13929  006338  0012               	return		;funcret
 13930  00633A                     __end_of___awdiv:
 13931                           	opt stack 0
 13932                           tblptru	equ	0xFF8
 13933                           tblptrh	equ	0xFF7
 13934                           tblptrl	equ	0xFF6
 13935                           tablat	equ	0xFF5
 13936                           prodh	equ	0xFF4
 13937                           prodl	equ	0xFF3
 13938                           intcon	equ	0xFF2
 13939                           postinc0	equ	0xFEE
 13940                           plusw0	equ	0xFEB
 13941                           fsr0h	equ	0xFEA
 13942                           fsr0l	equ	0xFE9
 13943                           wreg	equ	0xFE8
 13944                           indf1	equ	0xFE7
 13945                           postdec1	equ	0xFE5
 13946                           plusw1	equ	0xFE3
 13947                           fsr1h	equ	0xFE2
 13948                           fsr1l	equ	0xFE1
 13949                           indf2	equ	0xFDF
 13950                           postinc2	equ	0xFDE
 13951                           postdec2	equ	0xFDD
 13952                           plusw2	equ	0xFDB
 13953                           fsr2h	equ	0xFDA
 13954                           fsr2l	equ	0xFD9
 13955                           status	equ	0xFD8
 13956                           
 13957 ;; *************** function ___lldiv *****************
 13958 ;; Defined at:
 13959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;  dividend        4   19[BANK0 ] unsigned long 
 13962 ;;  divisor         4   23[BANK0 ] unsigned long 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  quotient        4   28[BANK0 ] unsigned long 
 13965 ;;  counter         1   27[BANK0 ] unsigned char 
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  4   19[BANK0 ] unsigned long 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2, status,0
 13970 ;; Tracked objects:
 13971 ;;		On entry : F/0
 13972 ;;		On exit  : F/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13975 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13979 ;;Total ram usage:       13 bytes
 13980 ;; Hardware stack levels used:    1
 13981 ;; Hardware stack levels required when called:    5
 13982 ;; This function calls:
 13983 ;;		Nothing
 13984 ;; This function is called by:
 13985 ;;		_le_updateNeighborTableEst
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text47
 13990  0063B2                     __ptext47:
 13991                           	opt stack 0
 13992  0063B2                     ___lldiv:
 13993                           	opt stack 19
 13994                           
 13995                           ; BSR set to: 0
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;incstack = 0
 13999  0063B2  6B7C               	clrf	___lldiv@quotient& (0+255),b
 14000  0063B4  6B7D               	clrf	(___lldiv@quotient+1)& (0+255),b
 14001  0063B6  6B7E               	clrf	(___lldiv@quotient+2)& (0+255),b
 14002  0063B8  6B7F               	clrf	(___lldiv@quotient+3)& (0+255),b
 14003                           
 14004                           ; BSR set to: 0
 14005  0063BA  5177               	movf	___lldiv@divisor& (0+255),w,b
 14006  0063BC  1178               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14007  0063BE  1179               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14008  0063C0  117A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14009  0063C2  E029               	bz	l2565
 14010                           
 14011                           ; BSR set to: 0
 14012  0063C4  0E01               	movlw	1
 14013  0063C6  6F7B               	movwf	___lldiv@counter& (0+255),b
 14014  0063C8  D006               	goto	l16406
 14015  0063CA                     l16404:
 14016                           
 14017                           ; BSR set to: 0
 14018  0063CA  90D8               	bcf	status,0,c
 14019  0063CC  3777               	rlcf	___lldiv@divisor& (0+255),f,b
 14020  0063CE  3778               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14021  0063D0  3779               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14022  0063D2  377A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14023  0063D4  2B7B               	incf	___lldiv@counter& (0+255),f,b
 14024  0063D6                     l16406:
 14025                           
 14026                           ; BSR set to: 0
 14027  0063D6  AF7A               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14028  0063D8  D7F8               	goto	l16404
 14029  0063DA                     l16408:
 14030                           
 14031                           ; BSR set to: 0
 14032  0063DA  90D8               	bcf	status,0,c
 14033  0063DC  377C               	rlcf	___lldiv@quotient& (0+255),f,b
 14034  0063DE  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14035  0063E0  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14036  0063E2  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14037                           
 14038                           ; BSR set to: 0
 14039  0063E4  5177               	movf	___lldiv@divisor& (0+255),w,b
 14040  0063E6  5D73               	subwf	___lldiv@dividend& (0+255),w,b
 14041  0063E8  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14042  0063EA  5974               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14043  0063EC  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14044  0063EE  5975               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14045  0063F0  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14046  0063F2  5976               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14047  0063F4  E309               	bnc	l16416
 14048                           
 14049                           ; BSR set to: 0
 14050  0063F6  5177               	movf	___lldiv@divisor& (0+255),w,b
 14051  0063F8  5F73               	subwf	___lldiv@dividend& (0+255),f,b
 14052  0063FA  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14053  0063FC  5B74               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14054  0063FE  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14055  006400  5B75               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14056  006402  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14057  006404  5B76               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14058                           
 14059                           ; BSR set to: 0
 14060  006406  817C               	bsf	___lldiv@quotient& (0+255),0,b
 14061  006408                     l16416:
 14062                           
 14063                           ; BSR set to: 0
 14064  006408  90D8               	bcf	status,0,c
 14065  00640A  337A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14066  00640C  3379               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14067  00640E  3378               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14068  006410  3377               	rrcf	___lldiv@divisor& (0+255),f,b
 14069                           
 14070                           ; BSR set to: 0
 14071  006412  2F7B               	decfsz	___lldiv@counter& (0+255),f,b
 14072  006414  D7E2               	goto	l16408
 14073  006416                     l2565:
 14074                           
 14075                           ; BSR set to: 0
 14076  006416  C07C  F073         	movff	___lldiv@quotient,?___lldiv
 14077  00641A  C07D  F074         	movff	___lldiv@quotient+1,?___lldiv+1
 14078  00641E  C07E  F075         	movff	___lldiv@quotient+2,?___lldiv+2
 14079  006422  C07F  F076         	movff	___lldiv@quotient+3,?___lldiv+3
 14080                           
 14081                           ; BSR set to: 0
 14082  006426  0012               	return		;funcret
 14083  006428                     __end_of___lldiv:
 14084                           	opt stack 0
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           postinc0	equ	0xFEE
 14093                           plusw0	equ	0xFEB
 14094                           fsr0h	equ	0xFEA
 14095                           fsr0l	equ	0xFE9
 14096                           wreg	equ	0xFE8
 14097                           indf1	equ	0xFE7
 14098                           postdec1	equ	0xFE5
 14099                           plusw1	equ	0xFE3
 14100                           fsr1h	equ	0xFE2
 14101                           fsr1l	equ	0xFE1
 14102                           indf2	equ	0xFDF
 14103                           postinc2	equ	0xFDE
 14104                           postdec2	equ	0xFDD
 14105                           plusw2	equ	0xFDB
 14106                           fsr2h	equ	0xFDA
 14107                           fsr2l	equ	0xFD9
 14108                           status	equ	0xFD8
 14109                           
 14110 ;; *************** function _le_initNeighborIdx *****************
 14111 ;; Defined at:
 14112 ;;		line 160 in file "../LinkEstimator.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;  i               1    wreg     unsigned char 
 14115 ;;  ll_addr         2   19[BANK0 ] struct addr_t_def
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;  i               1   21[BANK0 ] unsigned char 
 14118 ;;  ne              2   22[BANK0 ] PTR struct neighbor_tabl
 14119 ;;		 -> neighbor_tbl(220), 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14124 ;; Tracked objects:
 14125 ;;		On entry : F/0
 14126 ;;		On exit  : F/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14130 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14132 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14133 ;;Total ram usage:        5 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; Hardware stack levels required when called:    5
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_LE_InsertNeighbor
 14140 ;;		_le_updateNeighborEntryIdx
 14141 ;;		_LE_processReceivedMessage
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text48
 14146  0061CC                     __ptext48:
 14147                           	opt stack 0
 14148  0061CC                     _le_initNeighborIdx:
 14149                           	opt stack 20
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;incstack = 0
 14153                           ;le_initNeighborIdx@i stored from wreg
 14154  0061CC  6F75               	movwf	le_initNeighborIdx@i& (0+255),b
 14155                           
 14156                           ;LinkEstimator.c: 162: neighbor_table_entry_t *ne;
 14157                           ;LinkEstimator.c: 163: ne = &neighbor_tbl[i];
 14158  0061CE  0100               	movlb	0	; () banked
 14159  0061D0  5175               	movf	le_initNeighborIdx@i& (0+255),w,b
 14160  0061D2  0D0B               	mullw	11
 14161  0061D4  0E00               	movlw	low _neighbor_tbl
 14162  0061D6  24F3               	addwf	prodl,w,c
 14163  0061D8  6F76               	movwf	le_initNeighborIdx@ne& (0+255),b
 14164  0061DA  0E05               	movlw	high _neighbor_tbl
 14165  0061DC  20F4               	addwfc	prodh,w,c
 14166  0061DE  6F77               	movwf	(le_initNeighborIdx@ne+1)& (0+255),b
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;LinkEstimator.c: 164: ne->ll_addr = ll_addr;
 14170  0061E0  C076  FFD9         	movff	le_initNeighborIdx@ne,fsr2l
 14171  0061E4  C077  FFDA         	movff	le_initNeighborIdx@ne+1,fsr2h
 14172  0061E8  C073  FFDE         	movff	le_initNeighborIdx@ll_addr,postinc2
 14173  0061EC  C074  FFDD         	movff	le_initNeighborIdx@ll_addr+1,postdec2
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;LinkEstimator.c: 165: ne->lastseq = 0;
 14177  0061F0  EE20 F002          	lfsr	2,2
 14178  0061F4  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14179  0061F6  26D9               	addwf	fsr2l,f,c
 14180  0061F8  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14181  0061FA  22DA               	addwfc	fsr2h,f,c
 14182  0061FC  6ADF               	clrf	indf2,c
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;LinkEstimator.c: 166: ne->rcvcnt = 0;
 14186  0061FE  EE20 F003          	lfsr	2,3
 14187  006202  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14188  006204  26D9               	addwf	fsr2l,f,c
 14189  006206  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14190  006208  22DA               	addwfc	fsr2h,f,c
 14191  00620A  6ADF               	clrf	indf2,c
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;LinkEstimator.c: 167: ne->failcnt = 0;
 14195  00620C  EE20 F004          	lfsr	2,4
 14196  006210  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14197  006212  26D9               	addwf	fsr2l,f,c
 14198  006214  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14199  006216  22DA               	addwfc	fsr2h,f,c
 14200  006218  6ADF               	clrf	indf2,c
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;LinkEstimator.c: 168: ne->flags = (0x4 | 0x1);
 14204  00621A  EE20 F005          	lfsr	2,5
 14205  00621E  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14206  006220  26D9               	addwf	fsr2l,f,c
 14207  006222  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14208  006224  22DA               	addwfc	fsr2h,f,c
 14209  006226  0E05               	movlw	5
 14210  006228  6EDF               	movwf	indf2,c
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;LinkEstimator.c: 169: ne->inquality = 0;
 14214  00622A  EE20 F006          	lfsr	2,6
 14215  00622E  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14216  006230  26D9               	addwf	fsr2l,f,c
 14217  006232  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14218  006234  22DA               	addwfc	fsr2h,f,c
 14219  006236  6ADF               	clrf	indf2,c
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;LinkEstimator.c: 170: ne->etx = 0;
 14223  006238  EE20 F007          	lfsr	2,7
 14224  00623C  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14225  00623E  26D9               	addwf	fsr2l,f,c
 14226  006240  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14227  006242  22DA               	addwfc	fsr2h,f,c
 14228  006244  6ADE               	clrf	postinc2,c
 14229  006246  6ADD               	clrf	postdec2,c
 14230                           
 14231                           ; BSR set to: 0
 14232  006248  0C00               	retlw	0	;funcret
 14233  00624A                     __end_of_le_initNeighborIdx:
 14234                           	opt stack 0
 14235                           tblptru	equ	0xFF8
 14236                           tblptrh	equ	0xFF7
 14237                           tblptrl	equ	0xFF6
 14238                           tablat	equ	0xFF5
 14239                           prodh	equ	0xFF4
 14240                           prodl	equ	0xFF3
 14241                           intcon	equ	0xFF2
 14242                           postinc0	equ	0xFEE
 14243                           plusw0	equ	0xFEB
 14244                           fsr0h	equ	0xFEA
 14245                           fsr0l	equ	0xFE9
 14246                           wreg	equ	0xFE8
 14247                           indf1	equ	0xFE7
 14248                           postdec1	equ	0xFE5
 14249                           plusw1	equ	0xFE3
 14250                           fsr1h	equ	0xFE2
 14251                           fsr1l	equ	0xFE1
 14252                           indf2	equ	0xFDF
 14253                           postinc2	equ	0xFDE
 14254                           postdec2	equ	0xFDD
 14255                           plusw2	equ	0xFDB
 14256                           fsr2h	equ	0xFDA
 14257                           fsr2l	equ	0xFD9
 14258                           status	equ	0xFD8
 14259                           
 14260 ;; *************** function _le_findWorstNeighborIdx *****************
 14261 ;; Defined at:
 14262 ;;		line 173 in file "../LinkEstimator.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  thresholdETX    1    wreg     unsigned char 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  thresholdETX    1   37[BANK0 ] unsigned char 
 14267 ;;  i               2   46[BANK0 ] unsigned int 
 14268 ;;  worstETX        2   44[BANK0 ] unsigned int 
 14269 ;;  thisETX         2   42[BANK0 ] unsigned int 
 14270 ;;  res             2   40[BANK0 ] unsigned int 
 14271 ;;  worstNeighbo    2   38[BANK0 ] unsigned int 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  2   33[BANK0 ] unsigned int 
 14274 ;; Registers used:
 14275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14276 ;; Tracked objects:
 14277 ;;		On entry : F/0
 14278 ;;		On exit  : F/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;Total ram usage:       15 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:    7
 14288 ;; This function calls:
 14289 ;;		_NetworkGetParentAddress
 14290 ;;		_isSameAddress
 14291 ;; This function is called by:
 14292 ;;		_LE_InsertNeighbor
 14293 ;;		_LE_processReceivedMessage
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text49
 14298  004BE6                     __ptext49:
 14299                           	opt stack 0
 14300  004BE6                     _le_findWorstNeighborIdx:
 14301                           	opt stack 18
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;incstack = 0
 14305                           ;le_findWorstNeighborIdx@thresholdETX stored from wreg
 14306  004BE6  6F85               	movwf	le_findWorstNeighborIdx@thresholdETX& (0+255),b
 14307                           
 14308                           ;LinkEstimator.c: 179: worstNeighborIdx = 0xff;
 14309  004BE8  0100               	movlb	0	; () banked
 14310  004BEA  6B87               	clrf	(le_findWorstNeighborIdx@worstNeighborIdx+1)& (0+255),b
 14311  004BEC  6986               	setf	le_findWorstNeighborIdx@worstNeighborIdx& (0+255),b
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;LinkEstimator.c: 180: worstETX = 0;
 14315  004BEE  6B8C               	clrf	le_findWorstNeighborIdx@worstETX& (0+255),b
 14316  004BF0  6B8D               	clrf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),b
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;LinkEstimator.c: 181: for (i = 0; i < 20; i++)
 14320  004BF2  6B8E               	clrf	le_findWorstNeighborIdx@i& (0+255),b
 14321  004BF4  6B8F               	clrf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14322  004BF6                     l16624:
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;LinkEstimator.c: 182: {
 14326                           ;LinkEstimator.c: 183: if (!(neighbor_tbl[i].flags & 0x1))
 14327  004BF6  0E0B               	movlw	11
 14328  004BF8  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14329  004BFA  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14330  004BFE  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14331  004C02  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14332  004C04  50F3               	movf	prodl,w,c
 14333  004C06  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14334  004C08  0E05               	movlw	low (_neighbor_tbl+5)
 14335  004C0A  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14336  004C0C  6ED9               	movwf	fsr2l,c
 14337  004C0E  0E05               	movlw	high (_neighbor_tbl+5)
 14338  004C10  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14339  004C12  6EDA               	movwf	fsr2h,c
 14340  004C14  A0DF               	btfss	indf2,0,c
 14341  004C16  D060               	goto	l16646
 14342                           
 14343                           ; BSR set to: 5
 14344                           ;LinkEstimator.c: 187: }
 14345                           ;LinkEstimator.c: 188: if (!(neighbor_tbl[i].flags & 0x2))
 14346  004C18  0E0B               	movlw	11
 14347  004C1A  0100               	movlb	0	; () banked
 14348  004C1C  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14349  004C1E  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14350  004C22  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14351  004C26  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14352  004C28  50F3               	movf	prodl,w,c
 14353  004C2A  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14354  004C2C  0E05               	movlw	low (_neighbor_tbl+5)
 14355  004C2E  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14356  004C30  6ED9               	movwf	fsr2l,c
 14357  004C32  0E05               	movlw	high (_neighbor_tbl+5)
 14358  004C34  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14359  004C36  6EDA               	movwf	fsr2h,c
 14360  004C38  A2DF               	btfss	indf2,1,c
 14361  004C3A  D04E               	goto	l16646
 14362                           
 14363                           ; BSR set to: 5
 14364                           ;LinkEstimator.c: 192: }
 14365                           ;LinkEstimator.c: 193: if (neighbor_tbl[i].flags & 0x8)
 14366  004C3C  0E0B               	movlw	11
 14367  004C3E  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14368  004C40  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14369  004C44  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14370  004C48  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14371  004C4A  50F3               	movf	prodl,w,c
 14372  004C4C  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14373  004C4E  0E05               	movlw	low (_neighbor_tbl+5)
 14374  004C50  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14375  004C52  6ED9               	movwf	fsr2l,c
 14376  004C54  0E05               	movlw	high (_neighbor_tbl+5)
 14377  004C56  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14378  004C58  6EDA               	movwf	fsr2h,c
 14379  004C5A  B6DF               	btfsc	indf2,3,c
 14380  004C5C  D03D               	goto	l16646
 14381                           
 14382                           ; BSR set to: 5
 14383                           ;LinkEstimator.c: 197: }
 14384                           ;LinkEstimator.c: 198: if(isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress(
      +                          )) )
 14385  004C5E  0E0B               	movlw	11
 14386  004C60  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14387  004C62  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14388  004C66  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14389  004C6A  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14390  004C6C  50F3               	movf	prodl,w,c
 14391  004C6E  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14392  004C70  0E00               	movlw	low _neighbor_tbl
 14393  004C72  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14394  004C74  6ED9               	movwf	fsr2l,c
 14395  004C76  0E05               	movlw	high _neighbor_tbl
 14396  004C78  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14397  004C7A  6EDA               	movwf	fsr2h,c
 14398  004C7C  CFDE F07D          	movff	postinc2,isSameAddress@a1
 14399  004C80  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 14400  004C84  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 14401  004C88  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 14402  004C8C  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 14403  004C90  ECBA  F039         	call	_isSameAddress	;wreg free
 14404  004C94  0900               	iorlw	0
 14405  004C96  E120               	bnz	l16646
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;LinkEstimator.c: 201: }
 14409                           ;LinkEstimator.c: 203: thisETX = neighbor_tbl[i].etx;
 14410  004C98  0E0B               	movlw	11
 14411  004C9A  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14412  004C9C  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14413  004CA0  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14414  004CA4  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14415  004CA6  50F3               	movf	prodl,w,c
 14416  004CA8  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14417  004CAA  0E07               	movlw	low (_neighbor_tbl+7)
 14418  004CAC  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14419  004CAE  6ED9               	movwf	fsr2l,c
 14420  004CB0  0E05               	movlw	high (_neighbor_tbl+7)
 14421  004CB2  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14422  004CB4  6EDA               	movwf	fsr2h,c
 14423  004CB6  CFDE F08A          	movff	postinc2,le_findWorstNeighborIdx@thisETX
 14424  004CBA  CFDD F08B          	movff	postdec2,le_findWorstNeighborIdx@thisETX+1
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;LinkEstimator.c: 204: if (thisETX >= worstETX)
 14428  004CBE  518C               	movf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 14429  004CC0  5D8A               	subwf	le_findWorstNeighborIdx@thisETX& (0+255),w,b
 14430  004CC2  518D               	movf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 14431  004CC4  598B               	subwfb	(le_findWorstNeighborIdx@thisETX+1)& (0+255),w,b
 14432  004CC6  E308               	bnc	l16646
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;LinkEstimator.c: 205: {
 14436                           ;LinkEstimator.c: 206: worstNeighborIdx = i;
 14437  004CC8  C08E  F086         	movff	le_findWorstNeighborIdx@i,le_findWorstNeighborIdx@worstNeighborIdx
 14438  004CCC  C08F  F087         	movff	le_findWorstNeighborIdx@i+1,le_findWorstNeighborIdx@worstNeighborIdx+1
 14439                           
 14440                           ;LinkEstimator.c: 207: worstETX = thisETX;
 14441  004CD0  C08A  F08C         	movff	le_findWorstNeighborIdx@thisETX,le_findWorstNeighborIdx@worstETX
 14442  004CD4  C08B  F08D         	movff	le_findWorstNeighborIdx@thisETX+1,le_findWorstNeighborIdx@worstETX+1
 14443  004CD8                     l16646:
 14444  004CD8  0100               	movlb	0	; () banked
 14445  004CDA  4B8E               	infsnz	le_findWorstNeighborIdx@i& (0+255),f,b
 14446  004CDC  2B8F               	incf	(le_findWorstNeighborIdx@i+1)& (0+255),f,b
 14447                           
 14448                           ; BSR set to: 0
 14449  004CDE  518F               	movf	(le_findWorstNeighborIdx@i+1)& (0+255),w,b
 14450  004CE0  E103               	bnz	u19560
 14451  004CE2  0E14               	movlw	20
 14452  004CE4  5D8E               	subwf	le_findWorstNeighborIdx@i& (0+255),w,b
 14453  004CE6  E387               	bnc	l16624
 14454  004CE8                     u19560:
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;LinkEstimator.c: 208: }
 14458                           ;LinkEstimator.c: 209: }
 14459                           ;LinkEstimator.c: 211: if (worstETX >= thresholdETX)
 14460  004CE8  5185               	movf	le_findWorstNeighborIdx@thresholdETX& (0+255),w,b
 14461  004CEA  6F83               	movwf	??_le_findWorstNeighborIdx& (0+255),b
 14462  004CEC  6B84               	clrf	(??_le_findWorstNeighborIdx+1)& (0+255),b
 14463  004CEE  5183               	movf	??_le_findWorstNeighborIdx& (0+255),w,b
 14464  004CF0  5D8C               	subwf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 14465  004CF2  5184               	movf	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14466  004CF4  598D               	subwfb	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 14467  004CF6  E305               	bnc	l16654
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;LinkEstimator.c: 212: {
 14471                           ;LinkEstimator.c: 213: res=worstNeighborIdx;
 14472  004CF8  C086  F088         	movff	le_findWorstNeighborIdx@worstNeighborIdx,le_findWorstNeighborIdx@res
 14473  004CFC  C087  F089         	movff	le_findWorstNeighborIdx@worstNeighborIdx+1,le_findWorstNeighborIdx@res+1
 14474                           
 14475                           ;LinkEstimator.c: 214: } else
 14476  004D00  D003               	goto	l16656
 14477  004D02                     l16654:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;LinkEstimator.c: 215: {
 14481                           ;LinkEstimator.c: 216: res=0xff;
 14482  004D02  0E00               	movlw	0
 14483  004D04  6B89               	clrf	(le_findWorstNeighborIdx@res+1)& (0+255),b
 14484  004D06  6988               	setf	le_findWorstNeighborIdx@res& (0+255),b
 14485  004D08                     l16656:
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;LinkEstimator.c: 217: }
 14489                           ;LinkEstimator.c: 219: return(res);
 14490  004D08  C088  F081         	movff	le_findWorstNeighborIdx@res,?_le_findWorstNeighborIdx
 14491  004D0C  C089  F082         	movff	le_findWorstNeighborIdx@res+1,?_le_findWorstNeighborIdx+1
 14492                           
 14493                           ; BSR set to: 0
 14494  004D10  0012               	return		;funcret
 14495  004D12                     __end_of_le_findWorstNeighborIdx:
 14496                           	opt stack 0
 14497                           tblptru	equ	0xFF8
 14498                           tblptrh	equ	0xFF7
 14499                           tblptrl	equ	0xFF6
 14500                           tablat	equ	0xFF5
 14501                           prodh	equ	0xFF4
 14502                           prodl	equ	0xFF3
 14503                           intcon	equ	0xFF2
 14504                           postinc0	equ	0xFEE
 14505                           plusw0	equ	0xFEB
 14506                           fsr0h	equ	0xFEA
 14507                           fsr0l	equ	0xFE9
 14508                           wreg	equ	0xFE8
 14509                           indf1	equ	0xFE7
 14510                           postdec1	equ	0xFE5
 14511                           plusw1	equ	0xFE3
 14512                           fsr1h	equ	0xFE2
 14513                           fsr1l	equ	0xFE1
 14514                           indf2	equ	0xFDF
 14515                           postinc2	equ	0xFDE
 14516                           postdec2	equ	0xFDD
 14517                           plusw2	equ	0xFDB
 14518                           fsr2h	equ	0xFDA
 14519                           fsr2l	equ	0xFD9
 14520                           status	equ	0xFD8
 14521                           
 14522 ;; *************** function _le_findRandomNeighborIdx *****************
 14523 ;; Defined at:
 14524 ;;		line 373 in file "../LinkEstimator.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;		None
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;  i               2   44[BANK0 ] unsigned int 
 14529 ;;  res             2   41[BANK0 ] unsigned int 
 14530 ;;  num_eligible    1   43[BANK0 ] unsigned char 
 14531 ;;  cnt             1   40[BANK0 ] unsigned char 
 14532 ;; Return value:  Size  Location     Type
 14533 ;;                  2   36[BANK0 ] unsigned int 
 14534 ;; Registers used:
 14535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14536 ;; Tracked objects:
 14537 ;;		On entry : F/0
 14538 ;;		On exit  : F/0
 14539 ;;		Unchanged: 0/0
 14540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14542 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14544 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14545 ;;Total ram usage:       10 bytes
 14546 ;; Hardware stack levels used:    1
 14547 ;; Hardware stack levels required when called:    7
 14548 ;; This function calls:
 14549 ;;		_NetworkGetParentAddress
 14550 ;;		___lwmod
 14551 ;;		_isSameAddress
 14552 ;;		_krnd
 14553 ;; This function is called by:
 14554 ;;		_LE_processReceivedMessage
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text50
 14559  0032D2                     __ptext50:
 14560                           	opt stack 0
 14561  0032D2                     _le_findRandomNeighborIdx:
 14562                           	opt stack 19
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;LinkEstimator.c: 375: uint16_t i;
 14566                           ;LinkEstimator.c: 376: uint16_t res=0xff;
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;incstack = 0
 14570  0032D2  6B8A               	clrf	(le_findRandomNeighborIdx@res+1)& (0+255),b
 14571  0032D4  6989               	setf	le_findRandomNeighborIdx@res& (0+255),b
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;LinkEstimator.c: 377: uint8_t cnt;
 14575                           ;LinkEstimator.c: 378: uint8_t num_eligible_eviction;
 14576                           ;LinkEstimator.c: 380: num_eligible_eviction = 0;
 14577  0032D6  6B8B               	clrf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),b
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;LinkEstimator.c: 381: for (i = 0; i < 20; i++)
 14581  0032D8  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 14582  0032DA  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14583  0032DC                     l17100:
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;LinkEstimator.c: 382: {
 14587                           ;LinkEstimator.c: 383: if (neighbor_tbl[i].flags & 0x1)
 14588  0032DC  0E0B               	movlw	11
 14589  0032DE  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14590  0032E0  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14591  0032E4  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14592  0032E8  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14593  0032EA  50F3               	movf	prodl,w,c
 14594  0032EC  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14595  0032EE  0E05               	movlw	low (_neighbor_tbl+5)
 14596  0032F0  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14597  0032F2  6ED9               	movwf	fsr2l,c
 14598  0032F4  0E05               	movlw	high (_neighbor_tbl+5)
 14599  0032F6  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14600  0032F8  6EDA               	movwf	fsr2h,c
 14601  0032FA  A0DF               	btfss	indf2,0,c
 14602  0032FC  D041               	goto	l1561
 14603                           
 14604                           ; BSR set to: 5
 14605                           ;LinkEstimator.c: 384: {
 14606                           ;LinkEstimator.c: 385: if((isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress
      +                          ()) ) )
 14607  0032FE  0E0B               	movlw	11
 14608  003300  0100               	movlb	0	; () banked
 14609  003302  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14610  003304  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14611  003308  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14612  00330C  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14613  00330E  50F3               	movf	prodl,w,c
 14614  003310  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14615  003312  0E00               	movlw	low _neighbor_tbl
 14616  003314  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14617  003316  6ED9               	movwf	fsr2l,c
 14618  003318  0E05               	movlw	high _neighbor_tbl
 14619  00331A  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14620  00331C  6EDA               	movwf	fsr2h,c
 14621  00331E  CFDE F07D          	movff	postinc2,isSameAddress@a1
 14622  003322  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 14623  003326  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 14624  00332A  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 14625  00332E  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 14626  003332  ECBA  F039         	call	_isSameAddress	;wreg free
 14627  003336  0900               	iorlw	0
 14628  003338  E123               	bnz	l1561
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;LinkEstimator.c: 389: neighbor_tbl[i].flags & 0x2)
 14632  00333A  0E0B               	movlw	11
 14633  00333C  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14634  00333E  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14635  003342  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14636  003346  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14637  003348  50F3               	movf	prodl,w,c
 14638  00334A  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14639  00334C  0E05               	movlw	low (_neighbor_tbl+5)
 14640  00334E  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14641  003350  6ED9               	movwf	fsr2l,c
 14642  003352  0E05               	movlw	high (_neighbor_tbl+5)
 14643  003354  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14644  003356  6EDA               	movwf	fsr2h,c
 14645  003358  B6DF               	btfsc	indf2,3,c
 14646  00335A  D012               	goto	l1561
 14647                           
 14648                           ; BSR set to: 5
 14649  00335C  0E0B               	movlw	11
 14650  00335E  0100               	movlb	0	; () banked
 14651  003360  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14652  003362  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14653  003366  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14654  00336A  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14655  00336C  50F3               	movf	prodl,w,c
 14656  00336E  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14657  003370  0E05               	movlw	low (_neighbor_tbl+5)
 14658  003372  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14659  003374  6ED9               	movwf	fsr2l,c
 14660  003376  0E05               	movlw	high (_neighbor_tbl+5)
 14661  003378  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14662  00337A  6EDA               	movwf	fsr2h,c
 14663  00337C  A2DF               	btfss	indf2,1,c
 14664                           
 14665                           ; BSR set to: 5
 14666                           ;LinkEstimator.c: 392: {
 14667                           ;LinkEstimator.c: 393: num_eligible_eviction++;
 14668  00337E  2B8B               	incf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),f,b
 14669  003380                     l1561:
 14670  003380  0100               	movlb	0	; () banked
 14671  003382  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 14672  003384  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 14673                           
 14674                           ; BSR set to: 0
 14675  003386  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 14676  003388  E103               	bnz	u20310
 14677  00338A  0E14               	movlw	20
 14678  00338C  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 14679  00338E  E3A6               	bnc	l17100
 14680  003390                     u20310:
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;LinkEstimator.c: 394: }
 14684                           ;LinkEstimator.c: 395: }
 14685                           ;LinkEstimator.c: 396: }
 14686                           ;LinkEstimator.c: 398: if (num_eligible_eviction > 0)
 14687  003390  518B               	movf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),w,b
 14688  003392  E070               	bz	l1568
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;LinkEstimator.c: 399: {
 14692                           ;LinkEstimator.c: 400: cnt = ((uint16_t)krnd()) % num_eligible_eviction;
 14693  003394  ECEF  F01E         	call	_krnd	;wreg free
 14694  003398  C073  F07F         	movff	?_krnd,___lwmod@dividend
 14695  00339C  C074  F080         	movff	?_krnd+1,___lwmod@dividend+1
 14696  0033A0  C08B  F081         	movff	le_findRandomNeighborIdx@num_eligible_eviction,___lwmod@divisor
 14697  0033A4  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 14698  0033A6  EC64  F037         	call	___lwmod	;wreg free
 14699  0033AA  517F               	movf	?___lwmod& (0+255),w,b
 14700  0033AC  6F88               	movwf	le_findRandomNeighborIdx@cnt& (0+255),b
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;LinkEstimator.c: 402: for (i = 0; i < 20; i++)
 14704  0033AE  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 14705  0033B0  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14706  0033B2                     l17124:
 14707                           
 14708                           ; BSR set to: 0
 14709                           ;LinkEstimator.c: 403: {
 14710                           ;LinkEstimator.c: 404: if ((neighbor_tbl[i].flags & 0x1)>0)
 14711  0033B2  0E0B               	movlw	11
 14712  0033B4  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14713  0033B6  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14714  0033BA  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14715  0033BE  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14716  0033C0  50F3               	movf	prodl,w,c
 14717  0033C2  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14718  0033C4  0E05               	movlw	low (_neighbor_tbl+5)
 14719  0033C6  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14720  0033C8  6ED9               	movwf	fsr2l,c
 14721  0033CA  0E05               	movlw	high (_neighbor_tbl+5)
 14722  0033CC  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14723  0033CE  6EDA               	movwf	fsr2h,c
 14724  0033D0  A0DF               	btfss	indf2,0,c
 14725  0033D2  D048               	goto	l17136
 14726                           
 14727                           ; BSR set to: 5
 14728                           ;LinkEstimator.c: 405: {
 14729                           ;LinkEstimator.c: 406: if ( ((neighbor_tbl[i].flags & 0x8)>0) &&
 14730                           ;LinkEstimator.c: 407: ((neighbor_tbl[i].flags & 0x2)>0) )
 14731  0033D4  0E0B               	movlw	11
 14732  0033D6  0100               	movlb	0	; () banked
 14733  0033D8  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14734  0033DA  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14735  0033DE  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14736  0033E2  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14737  0033E4  50F3               	movf	prodl,w,c
 14738  0033E6  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14739  0033E8  0E05               	movlw	low (_neighbor_tbl+5)
 14740  0033EA  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14741  0033EC  6ED9               	movwf	fsr2l,c
 14742  0033EE  0E05               	movlw	high (_neighbor_tbl+5)
 14743  0033F0  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14744  0033F2  6EDA               	movwf	fsr2h,c
 14745  0033F4  A6DF               	btfss	indf2,3,c
 14746  0033F6  D036               	goto	l17136
 14747                           
 14748                           ; BSR set to: 5
 14749  0033F8  0E0B               	movlw	11
 14750  0033FA  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14751  0033FC  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14752  003400  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14753  003404  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14754  003406  50F3               	movf	prodl,w,c
 14755  003408  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14756  00340A  0E05               	movlw	low (_neighbor_tbl+5)
 14757  00340C  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14758  00340E  6ED9               	movwf	fsr2l,c
 14759  003410  0E05               	movlw	high (_neighbor_tbl+5)
 14760  003412  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14761  003414  6EDA               	movwf	fsr2h,c
 14762  003416  A2DF               	btfss	indf2,1,c
 14763  003418  D025               	goto	l17136
 14764                           
 14765                           ; BSR set to: 5
 14766                           ;LinkEstimator.c: 408: {
 14767                           ;LinkEstimator.c: 409: if( (isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddres
      +                          s()) )==0)
 14768  00341A  0E0B               	movlw	11
 14769  00341C  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 14770  00341E  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 14771  003422  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 14772  003426  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 14773  003428  50F3               	movf	prodl,w,c
 14774  00342A  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 14775  00342C  0E00               	movlw	low _neighbor_tbl
 14776  00342E  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 14777  003430  6ED9               	movwf	fsr2l,c
 14778  003432  0E05               	movlw	high _neighbor_tbl
 14779  003434  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 14780  003436  6EDA               	movwf	fsr2h,c
 14781  003438  CFDE F07D          	movff	postinc2,isSameAddress@a1
 14782  00343C  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 14783  003440  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 14784  003444  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 14785  003448  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 14786  00344C  ECBA  F039         	call	_isSameAddress	;wreg free
 14787  003450  0900               	iorlw	0
 14788  003452  E108               	bnz	l17136
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;LinkEstimator.c: 410: {
 14792                           ;LinkEstimator.c: 411: if (cnt-- == 0)
 14793  003454  0788               	decf	le_findRandomNeighborIdx@cnt& (0+255),f,b
 14794  003456  2988               	incf	le_findRandomNeighborIdx@cnt& (0+255),w,b
 14795  003458  E105               	bnz	l17136
 14796                           
 14797                           ; BSR set to: 0
 14798                           ;LinkEstimator.c: 412: {
 14799                           ;LinkEstimator.c: 413: res=i;
 14800  00345A  C08C  F089         	movff	le_findRandomNeighborIdx@i,le_findRandomNeighborIdx@res
 14801  00345E  C08D  F08A         	movff	le_findRandomNeighborIdx@i+1,le_findRandomNeighborIdx@res+1
 14802                           
 14803                           ;LinkEstimator.c: 414: break;
 14804  003462  D008               	goto	l1568
 14805  003464                     l17136:
 14806  003464  0100               	movlb	0	; () banked
 14807  003466  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 14808  003468  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 14809                           
 14810                           ; BSR set to: 0
 14811  00346A  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 14812  00346C  E103               	bnz	u20380
 14813  00346E  0E14               	movlw	20
 14814  003470  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 14815  003472  E39F               	bnc	l17124
 14816  003474                     u20380:
 14817  003474                     l1568:
 14818                           
 14819                           ; BSR set to: 0
 14820                           ;LinkEstimator.c: 415: }
 14821                           ;LinkEstimator.c: 416: }
 14822                           ;LinkEstimator.c: 417: }
 14823                           ;LinkEstimator.c: 418: }
 14824                           ;LinkEstimator.c: 419: }
 14825                           ;LinkEstimator.c: 420: }
 14826                           ;LinkEstimator.c: 421: return res;
 14827  003474  C089  F084         	movff	le_findRandomNeighborIdx@res,?_le_findRandomNeighborIdx
 14828  003478  C08A  F085         	movff	le_findRandomNeighborIdx@res+1,?_le_findRandomNeighborIdx+1
 14829                           
 14830                           ; BSR set to: 0
 14831  00347C  0012               	return		;funcret
 14832  00347E                     __end_of_le_findRandomNeighborIdx:
 14833                           	opt stack 0
 14834                           tblptru	equ	0xFF8
 14835                           tblptrh	equ	0xFF7
 14836                           tblptrl	equ	0xFF6
 14837                           tablat	equ	0xFF5
 14838                           prodh	equ	0xFF4
 14839                           prodl	equ	0xFF3
 14840                           intcon	equ	0xFF2
 14841                           postinc0	equ	0xFEE
 14842                           plusw0	equ	0xFEB
 14843                           fsr0h	equ	0xFEA
 14844                           fsr0l	equ	0xFE9
 14845                           wreg	equ	0xFE8
 14846                           indf1	equ	0xFE7
 14847                           postdec1	equ	0xFE5
 14848                           plusw1	equ	0xFE3
 14849                           fsr1h	equ	0xFE2
 14850                           fsr1l	equ	0xFE1
 14851                           indf2	equ	0xFDF
 14852                           postinc2	equ	0xFDE
 14853                           postdec2	equ	0xFDD
 14854                           plusw2	equ	0xFDB
 14855                           fsr2h	equ	0xFDA
 14856                           fsr2l	equ	0xFD9
 14857                           status	equ	0xFD8
 14858                           
 14859 ;; *************** function _le_findEmptyNeighborIdx *****************
 14860 ;; Defined at:
 14861 ;;		line 222 in file "../LinkEstimator.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;		None
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  i               2   25[BANK0 ] unsigned int 
 14866 ;;  res             2   23[BANK0 ] unsigned int 
 14867 ;; Return value:  Size  Location     Type
 14868 ;;                  2   19[BANK0 ] unsigned int 
 14869 ;; Registers used:
 14870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14871 ;; Tracked objects:
 14872 ;;		On entry : F/0
 14873 ;;		On exit  : A/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14877 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14879 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;Total ram usage:        8 bytes
 14881 ;; Hardware stack levels used:    1
 14882 ;; Hardware stack levels required when called:    5
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_LE_InsertNeighbor
 14887 ;;		_LE_processReceivedMessage
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text51
 14892  006C48                     __ptext51:
 14893                           	opt stack 0
 14894  006C48                     _le_findEmptyNeighborIdx:
 14895                           	opt stack 20
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;LinkEstimator.c: 224: uint16_t i;
 14899                           ;LinkEstimator.c: 225: uint16_t res=0xff;
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;incstack = 0
 14903  006C48  6B78               	clrf	(le_findEmptyNeighborIdx@res+1)& (0+255),b
 14904  006C4A  6977               	setf	le_findEmptyNeighborIdx@res& (0+255),b
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;LinkEstimator.c: 226: for (i = 0; i < 20; i++)
 14908  006C4C  6B79               	clrf	le_findEmptyNeighborIdx@i& (0+255),b
 14909  006C4E  6B7A               	clrf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 14910  006C50                     l16668:
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;LinkEstimator.c: 227: {
 14914                           ;LinkEstimator.c: 228: if (neighbor_tbl[i].flags & 0x1)
 14915  006C50  0E0B               	movlw	11
 14916  006C52  0379               	mulwf	le_findEmptyNeighborIdx@i& (0+255),b
 14917  006C54  CFF3 F075          	movff	prodl,??_le_findEmptyNeighborIdx
 14918  006C58  CFF4 F076          	movff	prodh,??_le_findEmptyNeighborIdx+1
 14919  006C5C  037A               	mulwf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 14920  006C5E  50F3               	movf	prodl,w,c
 14921  006C60  2776               	addwf	(??_le_findEmptyNeighborIdx+1)& (0+255),f,b
 14922  006C62  0E05               	movlw	low (_neighbor_tbl+5)
 14923  006C64  2575               	addwf	??_le_findEmptyNeighborIdx& (0+255),w,b
 14924  006C66  6ED9               	movwf	fsr2l,c
 14925  006C68  0E05               	movlw	high (_neighbor_tbl+5)
 14926  006C6A  2176               	addwfc	(??_le_findEmptyNeighborIdx+1)& (0+255),w,b
 14927  006C6C  6EDA               	movwf	fsr2h,c
 14928  006C6E  0105               	movlb	5	; () banked
 14929  006C70  B0DF               	btfsc	indf2,0,c
 14930  006C72  D005               	goto	l16672
 14931                           
 14932                           ; BSR set to: 5
 14933                           ;LinkEstimator.c: 231: else
 14934                           ;LinkEstimator.c: 232: {
 14935                           ;LinkEstimator.c: 233: res=i;
 14936  006C74  C079  F077         	movff	le_findEmptyNeighborIdx@i,le_findEmptyNeighborIdx@res
 14937  006C78  C07A  F078         	movff	le_findEmptyNeighborIdx@i+1,le_findEmptyNeighborIdx@res+1
 14938                           
 14939                           ;LinkEstimator.c: 234: break;
 14940  006C7C  D008               	goto	l1518
 14941  006C7E                     l16672:
 14942                           
 14943                           ; BSR set to: 5
 14944  006C7E  0100               	movlb	0	; () banked
 14945  006C80  4B79               	infsnz	le_findEmptyNeighborIdx@i& (0+255),f,b
 14946  006C82  2B7A               	incf	(le_findEmptyNeighborIdx@i+1)& (0+255),f,b
 14947                           
 14948                           ; BSR set to: 0
 14949  006C84  517A               	movf	(le_findEmptyNeighborIdx@i+1)& (0+255),w,b
 14950  006C86  E103               	bnz	u19590
 14951  006C88  0E14               	movlw	20
 14952  006C8A  5D79               	subwf	le_findEmptyNeighborIdx@i& (0+255),w,b
 14953  006C8C  E3E1               	bnc	l16668
 14954  006C8E                     u19590:
 14955  006C8E                     l1518:
 14956                           
 14957                           ;LinkEstimator.c: 235: }
 14958                           ;LinkEstimator.c: 236: }
 14959                           ;LinkEstimator.c: 237: return res;
 14960  006C8E  C077  F073         	movff	le_findEmptyNeighborIdx@res,?_le_findEmptyNeighborIdx
 14961  006C92  C078  F074         	movff	le_findEmptyNeighborIdx@res+1,?_le_findEmptyNeighborIdx+1
 14962  006C96  0012               	return		;funcret
 14963  006C98                     __end_of_le_findEmptyNeighborIdx:
 14964                           	opt stack 0
 14965                           tblptru	equ	0xFF8
 14966                           tblptrh	equ	0xFF7
 14967                           tblptrl	equ	0xFF6
 14968                           tablat	equ	0xFF5
 14969                           prodh	equ	0xFF4
 14970                           prodl	equ	0xFF3
 14971                           intcon	equ	0xFF2
 14972                           postinc0	equ	0xFEE
 14973                           plusw0	equ	0xFEB
 14974                           fsr0h	equ	0xFEA
 14975                           fsr0l	equ	0xFE9
 14976                           wreg	equ	0xFE8
 14977                           indf1	equ	0xFE7
 14978                           postdec1	equ	0xFE5
 14979                           plusw1	equ	0xFE3
 14980                           fsr1h	equ	0xFE2
 14981                           fsr1l	equ	0xFE1
 14982                           indf2	equ	0xFDF
 14983                           postinc2	equ	0xFDE
 14984                           postdec2	equ	0xFDD
 14985                           plusw2	equ	0xFDB
 14986                           fsr2h	equ	0xFDA
 14987                           fsr2l	equ	0xFD9
 14988                           status	equ	0xFD8
 14989                           
 14990 ;; *************** function _RouteManagerShouldInsert *****************
 14991 ;; Defined at:
 14992 ;;		line 371 in file "../RouteManager.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  hdr             2   40[BANK0 ] PTR struct net_routing_h
 14995 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  rcvBeacon       2   53[BANK0 ] PTR struct net_routing_h
 14998 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 14999 ;;  i               2   50[BANK0 ] int 
 15000 ;;  entry           2   48[BANK0 ] PTR struct routing_table
 15001 ;;		 -> routingTable(90), 
 15002 ;;  neighEtx        2   46[BANK0 ] unsigned int 
 15003 ;;  pathEtx         2   44[BANK0 ] unsigned int 
 15004 ;;  found           1   52[BANK0 ] unsigned char 
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      unsigned char 
 15007 ;; Registers used:
 15008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15009 ;; Tracked objects:
 15010 ;;		On entry : F/0
 15011 ;;		On exit  : F/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15015 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15016 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15017 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15018 ;;Total ram usage:       15 bytes
 15019 ;; Hardware stack levels used:    1
 15020 ;; Hardware stack levels required when called:    8
 15021 ;; This function calls:
 15022 ;;		_NetworkGetParentAddress
 15023 ;;		_isInvalidAddress
 15024 ;;		_isSameAddress
 15025 ;; This function is called by:
 15026 ;;		_LE_processReceivedMessage
 15027 ;; This function uses a non-reentrant model
 15028 ;;
 15029                           
 15030                           	psect	text52
 15031  0054EE                     __ptext52:
 15032                           	opt stack 0
 15033  0054EE                     _RouteManagerShouldInsert:
 15034                           	opt stack 18
 15035                           
 15036                           ; BSR set to: 0
 15037                           ;RouteManager.c: 373: bool found = 0;
 15038                           
 15039                           ;incstack = 0
 15040  0054EE  6B94               	clrf	RouteManagerShouldInsert@found& (0+255),b
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;RouteManager.c: 374: uint16_t pathEtx;
 15044                           ;RouteManager.c: 375: uint16_t neighEtx;
 15045                           ;RouteManager.c: 376: int i;
 15046                           ;RouteManager.c: 377: routing_table_entry_t* entry;
 15047                           ;RouteManager.c: 378: net_routing_header_t* rcvBeacon=hdr;
 15048  0054F0  C088  F095         	movff	RouteManagerShouldInsert@hdr,RouteManagerShouldInsert@rcvBeacon
 15049  0054F4  C089  F096         	movff	RouteManagerShouldInsert@hdr+1,RouteManagerShouldInsert@rcvBeacon+1
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;RouteManager.c: 382: if (isInvalidAddress(rcvBeacon->parent)==0)
 15053  0054F8  EE20 F004          	lfsr	2,4
 15054  0054FC  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15055  0054FE  26D9               	addwf	fsr2l,f,c
 15056  005500  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15057  005502  22DA               	addwfc	fsr2h,f,c
 15058  005504  CFDE F086          	movff	postinc2,isInvalidAddress@address
 15059  005508  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 15060  00550C  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 15061  005510  0900               	iorlw	0
 15062  005512  E156               	bnz	l17018
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;RouteManager.c: 383: {
 15066                           ;RouteManager.c: 385: if (rcvBeacon->etx == 0)
 15067  005514  EE20 F006          	lfsr	2,6
 15068  005518  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15069  00551A  26D9               	addwf	fsr2l,f,c
 15070  00551C  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15071  00551E  22DA               	addwfc	fsr2h,f,c
 15072  005520  50DE               	movf	postinc2,w,c
 15073  005522  10DE               	iorwf	postinc2,w,c
 15074  005524  E103               	bnz	l17000
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;RouteManager.c: 386: {
 15078                           ;RouteManager.c: 387: found=1;
 15079  005526  0E01               	movlw	1
 15080  005528  6F94               	movwf	RouteManagerShouldInsert@found& (0+255),b
 15081                           
 15082                           ;RouteManager.c: 388: }else
 15083  00552A  D04A               	goto	l17018
 15084  00552C                     l17000:
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;RouteManager.c: 389: {
 15088                           ;RouteManager.c: 390: pathEtx = rcvBeacon->etx;
 15089  00552C  EE20 F006          	lfsr	2,6
 15090  005530  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15091  005532  26D9               	addwf	fsr2l,f,c
 15092  005534  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15093  005536  22DA               	addwfc	fsr2h,f,c
 15094  005538  CFDE F08C          	movff	postinc2,RouteManagerShouldInsert@pathEtx
 15095  00553C  CFDD F08D          	movff	postdec2,RouteManagerShouldInsert@pathEtx+1
 15096                           
 15097                           ; BSR set to: 0
 15098                           ;RouteManager.c: 393: for (i = 0; i < routingTableActive && !found; i++)
 15099  005540  6B92               	clrf	RouteManagerShouldInsert@i& (0+255),b
 15100  005542  6B93               	clrf	(RouteManagerShouldInsert@i+1)& (0+255),b
 15101  005544  D035               	goto	l17014
 15102  005546                     l17004:
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;RouteManager.c: 394: {
 15106                           ;RouteManager.c: 395: entry = &routingTable[i];
 15107  005546  0E09               	movlw	9
 15108  005548  0392               	mulwf	RouteManagerShouldInsert@i& (0+255),b
 15109  00554A  CFF3 F08A          	movff	prodl,??_RouteManagerShouldInsert
 15110  00554E  CFF4 F08B          	movff	prodh,??_RouteManagerShouldInsert+1
 15111  005552  0393               	mulwf	(RouteManagerShouldInsert@i+1)& (0+255),b
 15112  005554  50F3               	movf	prodl,w,c
 15113  005556  278B               	addwf	(??_RouteManagerShouldInsert+1)& (0+255),f,b
 15114  005558  0E98               	movlw	low _routingTable
 15115  00555A  258A               	addwf	??_RouteManagerShouldInsert& (0+255),w,b
 15116  00555C  6F90               	movwf	RouteManagerShouldInsert@entry& (0+255),b
 15117  00555E  0E06               	movlw	high _routingTable
 15118  005560  218B               	addwfc	(??_RouteManagerShouldInsert+1)& (0+255),w,b
 15119  005562  6F91               	movwf	(RouteManagerShouldInsert@entry+1)& (0+255),b
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;RouteManager.c: 397: if (isSameAddress(entry->neighbor, NetworkGetParentAddress())==0)
 15123  005564  C090  FFD9         	movff	RouteManagerShouldInsert@entry,fsr2l
 15124  005568  C091  FFDA         	movff	RouteManagerShouldInsert@entry+1,fsr2h
 15125  00556C  CFDE F07D          	movff	postinc2,isSameAddress@a1
 15126  005570  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 15127  005574  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 15128  005578  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 15129  00557C  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 15130  005580  ECBA  F039         	call	_isSameAddress	;wreg free
 15131  005584  0900               	iorlw	0
 15132  005586  E112               	bnz	l17012
 15133                           
 15134                           ; BSR set to: 0
 15135                           ;RouteManager.c: 398: {
 15136                           ;RouteManager.c: 399: neighEtx = entry->info.etx;
 15137  005588  EE20 F004          	lfsr	2,4
 15138  00558C  5190               	movf	RouteManagerShouldInsert@entry& (0+255),w,b
 15139  00558E  26D9               	addwf	fsr2l,f,c
 15140  005590  5191               	movf	(RouteManagerShouldInsert@entry+1)& (0+255),w,b
 15141  005592  22DA               	addwfc	fsr2h,f,c
 15142  005594  CFDE F08E          	movff	postinc2,RouteManagerShouldInsert@neighEtx
 15143  005598  CFDD F08F          	movff	postdec2,RouteManagerShouldInsert@neighEtx+1
 15144                           
 15145                           ; BSR set to: 0
 15146                           ;RouteManager.c: 400: found |= (pathEtx < neighEtx);
 15147  00559C  518E               	movf	RouteManagerShouldInsert@neighEtx& (0+255),w,b
 15148  00559E  5D8C               	subwf	RouteManagerShouldInsert@pathEtx& (0+255),w,b
 15149  0055A0  518F               	movf	(RouteManagerShouldInsert@neighEtx+1)& (0+255),w,b
 15150  0055A2  598D               	subwfb	(RouteManagerShouldInsert@pathEtx+1)& (0+255),w,b
 15151  0055A4  0E01               	movlw	1
 15152  0055A6  B0D8               	btfsc	status,0,c
 15153  0055A8  0E00               	movlw	0
 15154  0055AA  1394               	iorwf	RouteManagerShouldInsert@found& (0+255),f,b
 15155  0055AC                     l17012:
 15156                           
 15157                           ; BSR set to: 0
 15158  0055AC  4B92               	infsnz	RouteManagerShouldInsert@i& (0+255),f,b
 15159  0055AE  2B93               	incf	(RouteManagerShouldInsert@i+1)& (0+255),f,b
 15160  0055B0                     l17014:
 15161                           
 15162                           ; BSR set to: 0
 15163  0055B0  51E7               	movf	_routingTableActive& (0+255),w,b
 15164  0055B2  5D92               	subwf	RouteManagerShouldInsert@i& (0+255),w,b
 15165  0055B4  51E8               	movf	(_routingTableActive+1)& (0+255),w,b
 15166  0055B6  5993               	subwfb	(RouteManagerShouldInsert@i+1)& (0+255),w,b
 15167  0055B8  E203               	bc	l17018
 15168                           
 15169                           ; BSR set to: 0
 15170  0055BA  5194               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 15171  0055BC  E101               	bnz	l17018
 15172  0055BE  D7C3               	goto	l17004
 15173  0055C0                     l17018:
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;RouteManager.c: 401: }
 15177                           ;RouteManager.c: 402: }
 15178                           ;RouteManager.c: 403: }
 15179                           ;RouteManager.c: 404: }
 15180                           ;RouteManager.c: 405: return found;
 15181  0055C0  5194               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 15182                           
 15183                           ; BSR set to: 0
 15184  0055C2  0012               	return		;funcret
 15185  0055C4                     __end_of_RouteManagerShouldInsert:
 15186                           	opt stack 0
 15187                           tblptru	equ	0xFF8
 15188                           tblptrh	equ	0xFF7
 15189                           tblptrl	equ	0xFF6
 15190                           tablat	equ	0xFF5
 15191                           prodh	equ	0xFF4
 15192                           prodl	equ	0xFF3
 15193                           intcon	equ	0xFF2
 15194                           postinc0	equ	0xFEE
 15195                           plusw0	equ	0xFEB
 15196                           fsr0h	equ	0xFEA
 15197                           fsr0l	equ	0xFE9
 15198                           wreg	equ	0xFE8
 15199                           indf1	equ	0xFE7
 15200                           postdec1	equ	0xFE5
 15201                           plusw1	equ	0xFE3
 15202                           fsr1h	equ	0xFE2
 15203                           fsr1l	equ	0xFE1
 15204                           indf2	equ	0xFDF
 15205                           postinc2	equ	0xFDE
 15206                           postdec2	equ	0xFDD
 15207                           plusw2	equ	0xFDB
 15208                           fsr2h	equ	0xFDA
 15209                           fsr2l	equ	0xFD9
 15210                           status	equ	0xFD8
 15211                           
 15212 ;; *************** function _DeviceManagerGetDeviceType *****************
 15213 ;; Defined at:
 15214 ;;		line 106 in file "../DeviceManager.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;  address         2   33[BANK0 ] struct addr_t_def
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;  i               2   38[BANK0 ] unsigned int 
 15219 ;;  dev             1   37[BANK0 ] enum E145
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1    wreg      enum E144
 15222 ;; Registers used:
 15223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15224 ;; Tracked objects:
 15225 ;;		On entry : E/0
 15226 ;;		On exit  : F/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;Total ram usage:        7 bytes
 15234 ;; Hardware stack levels used:    1
 15235 ;; Hardware stack levels required when called:    7
 15236 ;; This function calls:
 15237 ;;		_isSameAddress
 15238 ;; This function is called by:
 15239 ;;		_radioReceivedPacket
 15240 ;;		_NetworkUnicastData
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244                           	psect	text53
 15245  006428                     __ptext53:
 15246                           	opt stack 0
 15247  006428                     _DeviceManagerGetDeviceType:
 15248                           	opt stack 21
 15249                           
 15250                           ;DeviceManager.c: 108: uint16_t i;
 15251                           ;DeviceManager.c: 109: DeviceType_t dev=DeviceRFD;
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;incstack = 0
 15255  006428  0E01               	movlw	1
 15256  00642A  0100               	movlb	0	; () banked
 15257  00642C  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;DeviceManager.c: 110: for(i=0;i<20;i++)
 15261  00642E  6B86               	clrf	DeviceManagerGetDeviceType@i& (0+255),b
 15262  006430  6B87               	clrf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15263  006432                     l17540:
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;DeviceManager.c: 111: {
 15267                           ;DeviceManager.c: 112: if(isSameAddress(address,list[i].address)==1)
 15268  006432  C081  F07D         	movff	DeviceManagerGetDeviceType@address,isSameAddress@a1
 15269  006436  C082  F07E         	movff	DeviceManagerGetDeviceType@address+1,isSameAddress@a1+1
 15270  00643A  0E0B               	movlw	11
 15271  00643C  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 15272  00643E  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 15273  006442  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 15274  006446  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15275  006448  50F3               	movf	prodl,w,c
 15276  00644A  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 15277  00644C  0E00               	movlw	low _list
 15278  00644E  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 15279  006450  6ED9               	movwf	fsr2l,c
 15280  006452  0E08               	movlw	high _list
 15281  006454  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 15282  006456  6EDA               	movwf	fsr2h,c
 15283  006458  CFDE F07F          	movff	postinc2,isSameAddress@a2
 15284  00645C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 15285  006460  ECBA  F039         	call	_isSameAddress	;wreg free
 15286  006464  06E8               	decf	wreg,f,c
 15287  006466  E111               	bnz	l17544
 15288                           
 15289                           ; BSR set to: 0
 15290                           ;DeviceManager.c: 113: {
 15291                           ;DeviceManager.c: 114: dev=list[i].devType;
 15292  006468  0E0B               	movlw	11
 15293  00646A  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 15294  00646C  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 15295  006470  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 15296  006474  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15297  006476  50F3               	movf	prodl,w,c
 15298  006478  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 15299  00647A  0E0A               	movlw	low (_list+10)
 15300  00647C  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 15301  00647E  6ED9               	movwf	fsr2l,c
 15302  006480  0E08               	movlw	high (_list+10)
 15303  006482  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 15304  006484  6EDA               	movwf	fsr2h,c
 15305  006486  50DF               	movf	indf2,w,c
 15306  006488  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 15307  00648A                     l17544:
 15308                           
 15309                           ; BSR set to: 0
 15310  00648A  4B86               	infsnz	DeviceManagerGetDeviceType@i& (0+255),f,b
 15311  00648C  2B87               	incf	(DeviceManagerGetDeviceType@i+1)& (0+255),f,b
 15312                           
 15313                           ; BSR set to: 0
 15314  00648E  5187               	movf	(DeviceManagerGetDeviceType@i+1)& (0+255),w,b
 15315  006490  E103               	bnz	u21050
 15316  006492  0E14               	movlw	20
 15317  006494  5D86               	subwf	DeviceManagerGetDeviceType@i& (0+255),w,b
 15318  006496  E3CD               	bnc	l17540
 15319  006498                     u21050:
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;DeviceManager.c: 115: }
 15323                           ;DeviceManager.c: 116: }
 15324                           ;DeviceManager.c: 117: return(dev);
 15325  006498  5185               	movf	DeviceManagerGetDeviceType@dev& (0+255),w,b
 15326                           
 15327                           ; BSR set to: 0
 15328  00649A  0012               	return		;funcret
 15329  00649C                     __end_of_DeviceManagerGetDeviceType:
 15330                           	opt stack 0
 15331                           tblptru	equ	0xFF8
 15332                           tblptrh	equ	0xFF7
 15333                           tblptrl	equ	0xFF6
 15334                           tablat	equ	0xFF5
 15335                           prodh	equ	0xFF4
 15336                           prodl	equ	0xFF3
 15337                           intcon	equ	0xFF2
 15338                           postinc0	equ	0xFEE
 15339                           plusw0	equ	0xFEB
 15340                           fsr0h	equ	0xFEA
 15341                           fsr0l	equ	0xFE9
 15342                           wreg	equ	0xFE8
 15343                           indf1	equ	0xFE7
 15344                           postdec1	equ	0xFE5
 15345                           plusw1	equ	0xFE3
 15346                           fsr1h	equ	0xFE2
 15347                           fsr1l	equ	0xFE1
 15348                           indf2	equ	0xFDF
 15349                           postinc2	equ	0xFDE
 15350                           postdec2	equ	0xFDD
 15351                           plusw2	equ	0xFDB
 15352                           fsr2h	equ	0xFDA
 15353                           fsr2l	equ	0xFD9
 15354                           status	equ	0xFD8
 15355                           
 15356 ;; *************** function _DeviceManagerBufferDeviceData *****************
 15357 ;; Defined at:
 15358 ;;		line 120 in file "../DeviceManager.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;  address         2   31[BANK0 ] struct addr_t_def
 15361 ;;  data            2   33[BANK0 ] PTR unsigned char 
 15362 ;;		 -> RxPacket.Payload(64), RxPacket(142), TxBuffer(64), 
 15363 ;;  size            2   35[BANK0 ] unsigned int 
 15364 ;;  isSecure        1   37[BANK0 ] unsigned char 
 15365 ;;  isFormed        1   38[BANK0 ] unsigned char 
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;  devBuffer       2    0        PTR struct devDataBuffer
 15368 ;;		 -> NULL(0), 
 15369 ;;  i               2    0        unsigned int 
 15370 ;;  empty           2   44[BANK0 ] unsigned int 
 15371 ;;  recordLen       2    0        unsigned int 
 15372 ;;  index           2    0        unsigned int 
 15373 ;;  res             1    0        unsigned char 
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      unsigned char 
 15376 ;; Registers used:
 15377 ;;		wreg, status,2, status,0, cstack
 15378 ;; Tracked objects:
 15379 ;;		On entry : F/0
 15380 ;;		On exit  : F/1
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15384 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;Total ram usage:       19 bytes
 15388 ;; Hardware stack levels used:    1
 15389 ;; Hardware stack levels required when called:    6
 15390 ;; This function calls:
 15391 ;;		_NetworkAddressSizeGet
 15392 ;;		_memcpy
 15393 ;; This function is called by:
 15394 ;;		_radioReceivedPacket
 15395 ;;		_NetworkUnicastData
 15396 ;; This function uses a non-reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text54
 15400  0075E8                     __ptext54:
 15401                           	opt stack 0
 15402  0075E8                     _DeviceManagerBufferDeviceData:
 15403                           	opt stack 22
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;DeviceManager.c: 123: uint16_t i;
 15407                           ;DeviceManager.c: 124: uint16_t empty=0xffff;
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;incstack = 0
 15411  0075E8  698C               	setf	DeviceManagerBufferDeviceData@empty& (0+255),b
 15412  0075EA  698D               	setf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),b
 15413                           
 15414                           ; BSR set to: 0
 15415  0075EC  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 15416                           
 15417                           ; BSR set to: 1
 15418                           
 15419                           ; BSR set to: 1
 15420                           ;DeviceManager.c: 178: }
 15421                           ;DeviceManager.c: 179: }
 15422                           ;DeviceManager.c: 180: }
 15423                           ;DeviceManager.c: 181: }
 15424                           ;DeviceManager.c: 182: return(res);
 15425                           
 15426                           ; BSR set to: 1
 15427                           ;DeviceManager.c: 129: if(devBuffers!=(0))
 15428  0075F0  0C00               	retlw	0	;funcret
 15429  0075F2                     __end_of_DeviceManagerBufferDeviceData:
 15430                           	opt stack 0
 15431                           tblptru	equ	0xFF8
 15432                           tblptrh	equ	0xFF7
 15433                           tblptrl	equ	0xFF6
 15434                           tablat	equ	0xFF5
 15435                           prodh	equ	0xFF4
 15436                           prodl	equ	0xFF3
 15437                           intcon	equ	0xFF2
 15438                           postinc0	equ	0xFEE
 15439                           plusw0	equ	0xFEB
 15440                           fsr0h	equ	0xFEA
 15441                           fsr0l	equ	0xFE9
 15442                           wreg	equ	0xFE8
 15443                           indf1	equ	0xFE7
 15444                           postdec1	equ	0xFE5
 15445                           plusw1	equ	0xFE3
 15446                           fsr1h	equ	0xFE2
 15447                           fsr1l	equ	0xFE1
 15448                           indf2	equ	0xFDF
 15449                           postinc2	equ	0xFDE
 15450                           postdec2	equ	0xFDD
 15451                           plusw2	equ	0xFDB
 15452                           fsr2h	equ	0xFDA
 15453                           fsr2l	equ	0xFD9
 15454                           status	equ	0xFD8
 15455                           
 15456 ;; *************** function _BlinkRedLED *****************
 15457 ;; Defined at:
 15458 ;;		line 584 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;		None
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;		None
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      void 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : F/1
 15469 ;;		On exit  : F/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15476 ;;Total ram usage:        0 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    6
 15479 ;; This function calls:
 15480 ;;		_LEDCommand
 15481 ;; This function is called by:
 15482 ;;		_radioReceivedPacket
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text55
 15487  00758C                     __ptext55:
 15488                           	opt stack 0
 15489  00758C                     _BlinkRedLED:
 15490                           	opt stack 21
 15491                           
 15492                           ; BSR set to: 1
 15493                           ;system.c: 586: LEDCommand(LEDRed,lCMD_Blink);
 15494                           
 15495                           ; BSR set to: 1
 15496                           ;incstack = 0
 15497  00758C  0E03               	movlw	3
 15498  00758E  0100               	movlb	0	; () banked
 15499  007590  6F73               	movwf	LEDCommand@cmd& (0+255),b
 15500  007592  0E02               	movlw	2
 15501  007594  EFA1  F037         	goto	_LEDCommand
 15502  007598                     __end_of_BlinkRedLED:
 15503                           	opt stack 0
 15504                           tblptru	equ	0xFF8
 15505                           tblptrh	equ	0xFF7
 15506                           tblptrl	equ	0xFF6
 15507                           tablat	equ	0xFF5
 15508                           prodh	equ	0xFF4
 15509                           prodl	equ	0xFF3
 15510                           intcon	equ	0xFF2
 15511                           postinc0	equ	0xFEE
 15512                           plusw0	equ	0xFEB
 15513                           fsr0h	equ	0xFEA
 15514                           fsr0l	equ	0xFE9
 15515                           wreg	equ	0xFE8
 15516                           indf1	equ	0xFE7
 15517                           postdec1	equ	0xFE5
 15518                           plusw1	equ	0xFE3
 15519                           fsr1h	equ	0xFE2
 15520                           fsr1l	equ	0xFE1
 15521                           indf2	equ	0xFDF
 15522                           postinc2	equ	0xFDE
 15523                           postdec2	equ	0xFDD
 15524                           plusw2	equ	0xFDB
 15525                           fsr2h	equ	0xFDA
 15526                           fsr2l	equ	0xFD9
 15527                           status	equ	0xFD8
 15528                           
 15529 ;; *************** function _LEDCommand *****************
 15530 ;; Defined at:
 15531 ;;		line 576 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;  led             1    wreg     enum E7918
 15534 ;;  cmd             1   19[BANK0 ] enum E7924
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;  led             1   21[BANK0 ] enum E7918
 15537 ;; Return value:  Size  Location     Type
 15538 ;;                  1    wreg      void 
 15539 ;; Registers used:
 15540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15541 ;; Tracked objects:
 15542 ;;		On entry : F/0
 15543 ;;		On exit  : F/0
 15544 ;;		Unchanged: 0/0
 15545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15546 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15550 ;;Total ram usage:        3 bytes
 15551 ;; Hardware stack levels used:    1
 15552 ;; Hardware stack levels required when called:    5
 15553 ;; This function calls:
 15554 ;;		Nothing
 15555 ;; This function is called by:
 15556 ;;		_BlinkRedLED
 15557 ;;		_main
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561                           	psect	text56
 15562  006F42                     __ptext56:
 15563                           	opt stack 0
 15564  006F42                     _LEDCommand:
 15565                           	opt stack 21
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;incstack = 0
 15569                           ;LEDCommand@led stored from wreg
 15570  006F42  6F75               	movwf	LEDCommand@led& (0+255),b
 15571                           
 15572                           ;system.c: 578: if( (LEDCmd[led]!=lCMD_On) && (LEDCmd[led]!=lCMD_Off) )
 15573  006F44  0EC2               	movlw	low _LEDCmd
 15574  006F46  0100               	movlb	0	; () banked
 15575  006F48  2575               	addwf	LEDCommand@led& (0+255),w,b
 15576  006F4A  6ED9               	movwf	fsr2l,c
 15577  006F4C  6ADA               	clrf	fsr2h,c
 15578  006F4E  0E01               	movlw	high _LEDCmd
 15579  006F50  22DA               	addwfc	fsr2h,f,c
 15580  006F52  0E02               	movlw	2
 15581  006F54  18DE               	xorwf	postinc2,w,c
 15582  006F56  B4D8               	btfsc	status,2,c
 15583  006F58  0012               	return	
 15584                           
 15585                           ; BSR set to: 0
 15586  006F5A  0EC2               	movlw	low _LEDCmd
 15587  006F5C  2575               	addwf	LEDCommand@led& (0+255),w,b
 15588  006F5E  6ED9               	movwf	fsr2l,c
 15589  006F60  6ADA               	clrf	fsr2h,c
 15590  006F62  0E01               	movlw	high _LEDCmd
 15591  006F64  22DA               	addwfc	fsr2h,f,c
 15592  006F66  04DE               	decf	postinc2,w,c
 15593  006F68  B4D8               	btfsc	status,2,c
 15594  006F6A  0012               	return	
 15595                           
 15596                           ; BSR set to: 0
 15597                           ;system.c: 579: {
 15598                           ;system.c: 580: LEDCmd[led]=cmd;
 15599  006F6C  0EC2               	movlw	low _LEDCmd
 15600  006F6E  2575               	addwf	LEDCommand@led& (0+255),w,b
 15601  006F70  6ED9               	movwf	fsr2l,c
 15602  006F72  6ADA               	clrf	fsr2h,c
 15603  006F74  0E01               	movlw	high _LEDCmd
 15604  006F76  22DA               	addwfc	fsr2h,f,c
 15605  006F78  C073  FFDF         	movff	LEDCommand@cmd,indf2
 15606                           
 15607                           ; BSR set to: 0
 15608  006F7C  0012               	return		;funcret
 15609  006F7E                     __end_of_LEDCommand:
 15610                           	opt stack 0
 15611                           tblptru	equ	0xFF8
 15612                           tblptrh	equ	0xFF7
 15613                           tblptrl	equ	0xFF6
 15614                           tablat	equ	0xFF5
 15615                           prodh	equ	0xFF4
 15616                           prodl	equ	0xFF3
 15617                           intcon	equ	0xFF2
 15618                           postinc0	equ	0xFEE
 15619                           plusw0	equ	0xFEB
 15620                           fsr0h	equ	0xFEA
 15621                           fsr0l	equ	0xFE9
 15622                           wreg	equ	0xFE8
 15623                           indf1	equ	0xFE7
 15624                           postdec1	equ	0xFE5
 15625                           plusw1	equ	0xFE3
 15626                           fsr1h	equ	0xFE2
 15627                           fsr1l	equ	0xFE1
 15628                           indf2	equ	0xFDF
 15629                           postinc2	equ	0xFDE
 15630                           postdec2	equ	0xFDD
 15631                           plusw2	equ	0xFDB
 15632                           fsr2h	equ	0xFDA
 15633                           fsr2l	equ	0xFD9
 15634                           status	equ	0xFD8
 15635                           
 15636 ;; *************** function _TimeTickISR *****************
 15637 ;; Defined at:
 15638 ;;		line 10 in file "../TimeTick.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;		None
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;		None
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1    wreg      void 
 15645 ;; Registers used:
 15646 ;;		wreg, status,2, status,0
 15647 ;; Tracked objects:
 15648 ;;		On entry : F/0
 15649 ;;		On exit  : F/2
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15656 ;;Total ram usage:        0 bytes
 15657 ;; Hardware stack levels used:    1
 15658 ;; Hardware stack levels required when called:    5
 15659 ;; This function calls:
 15660 ;;		Nothing
 15661 ;; This function is called by:
 15662 ;;		_MiApp_MessageAvailable
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text57
 15667  007172                     __ptext57:
 15668                           	opt stack 0
 15669  007172                     _TimeTickISR:
 15670                           	opt stack 23
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;TimeTick.c: 15: if(Tick_MS.lsb<0xffffffff)
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;incstack = 0
 15677  007172  0102               	movlb	2	; () banked
 15678  007174  2949               	incf	_Tick_MS& (0+255),w,b
 15679  007176  E106               	bnz	u21400
 15680  007178  294A               	incf	(_Tick_MS+1)& (0+255),w,b
 15681  00717A  E104               	bnz	u21400
 15682  00717C  294B               	incf	(_Tick_MS+2)& (0+255),w,b
 15683  00717E  E102               	bnz	u21400
 15684  007180  294C               	incf	(_Tick_MS+3)& (0+255),w,b
 15685  007182  E006               	bz	l2185
 15686  007184                     u21400:
 15687                           
 15688                           ; BSR set to: 2
 15689                           ;TimeTick.c: 16: {
 15690                           ;TimeTick.c: 17: Tick_MS.lsb++;
 15691  007184  2B49               	incf	_Tick_MS& (0+255),f,b
 15692  007186  0E00               	movlw	0
 15693  007188  234A               	addwfc	(_Tick_MS+1)& (0+255),f,b
 15694  00718A  234B               	addwfc	(_Tick_MS+2)& (0+255),f,b
 15695  00718C  234C               	addwfc	(_Tick_MS+3)& (0+255),f,b
 15696                           
 15697                           ;TimeTick.c: 18: }
 15698  00718E  0C00               	retlw	0
 15699  007190                     l2185:
 15700                           
 15701                           ; BSR set to: 2
 15702                           ;TimeTick.c: 19: else
 15703                           ;TimeTick.c: 20: {
 15704                           ;TimeTick.c: 21: Tick_MS.lsb=0;
 15705  007190  6B49               	clrf	_Tick_MS& (0+255),b
 15706  007192  6B4A               	clrf	(_Tick_MS+1)& (0+255),b
 15707  007194  6B4B               	clrf	(_Tick_MS+2)& (0+255),b
 15708  007196  6B4C               	clrf	(_Tick_MS+3)& (0+255),b
 15709                           
 15710                           ; BSR set to: 2
 15711                           ;TimeTick.c: 22: Tick_MS.msb++;
 15712  007198  2B4D               	incf	(_Tick_MS+4)& (0+255),f,b
 15713  00719A  0E00               	movlw	0
 15714  00719C  234E               	addwfc	(_Tick_MS+5)& (0+255),f,b
 15715  00719E  234F               	addwfc	(_Tick_MS+6)& (0+255),f,b
 15716  0071A0  2350               	addwfc	(_Tick_MS+7)& (0+255),f,b
 15717                           
 15718                           ; BSR set to: 2
 15719  0071A2  0C00               	retlw	0	;funcret
 15720  0071A4                     __end_of_TimeTickISR:
 15721                           	opt stack 0
 15722                           tblptru	equ	0xFF8
 15723                           tblptrh	equ	0xFF7
 15724                           tblptrl	equ	0xFF6
 15725                           tablat	equ	0xFF5
 15726                           prodh	equ	0xFF4
 15727                           prodl	equ	0xFF3
 15728                           intcon	equ	0xFF2
 15729                           postinc0	equ	0xFEE
 15730                           plusw0	equ	0xFEB
 15731                           fsr0h	equ	0xFEA
 15732                           fsr0l	equ	0xFE9
 15733                           wreg	equ	0xFE8
 15734                           indf1	equ	0xFE7
 15735                           postdec1	equ	0xFE5
 15736                           plusw1	equ	0xFE3
 15737                           fsr1h	equ	0xFE2
 15738                           fsr1l	equ	0xFE1
 15739                           indf2	equ	0xFDF
 15740                           postinc2	equ	0xFDE
 15741                           postdec2	equ	0xFDD
 15742                           plusw2	equ	0xFDB
 15743                           fsr2h	equ	0xFDA
 15744                           fsr2l	equ	0xFD9
 15745                           status	equ	0xFD8
 15746                           
 15747 ;; *************** function _NetworkManagerTask *****************
 15748 ;; Defined at:
 15749 ;;		line 53 in file "../NetworkManager.c"
 15750 ;; Parameters:    Size  Location     Type
 15751 ;;		None
 15752 ;; Auto vars:     Size  Location     Type
 15753 ;;  data           19   68[BANK1 ] unsigned char [19]
 15754 ;;  sz              2   87[BANK1 ] unsigned int 
 15755 ;; Return value:  Size  Location     Type
 15756 ;;                  1    wreg      void 
 15757 ;; Registers used:
 15758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15759 ;; Tracked objects:
 15760 ;;		On entry : D/0
 15761 ;;		On exit  : C/0
 15762 ;;		Unchanged: 0/0
 15763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15765 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15767 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15768 ;;Total ram usage:       25 bytes
 15769 ;; Hardware stack levels used:    1
 15770 ;; Hardware stack levels required when called:   14
 15771 ;; This function calls:
 15772 ;;		_BeaconManagerTask
 15773 ;;		_BroadcastManagerTask
 15774 ;;		_CoordinatorGenericAddress
 15775 ;;		_MSTickGet
 15776 ;;		_MSTickGetDiffNow
 15777 ;;		_MiApp_IsNetworkBusy
 15778 ;;		_NetworkGetDeviceType
 15779 ;;		_NetworkGetPANID
 15780 ;;		_NetworkGetParentAddress
 15781 ;;		_NetworkPrepareSendPacket
 15782 ;;		_RMRoutingTableCount
 15783 ;;		_RouteManagerPerformUpdate
 15784 ;;		_RouteManagerTask
 15785 ;;		_RouterEvicted
 15786 ;;		_TransportManagerTask
 15787 ;;		_isInvalidAddress
 15788 ;;		_isNetworkSecurityEnabled
 15789 ;;		_krnd
 15790 ;;		_radioUnicast
 15791 ;; This function is called by:
 15792 ;;		_MiApp_MessageAvailable
 15793 ;; This function uses a non-reentrant model
 15794 ;;
 15795                           
 15796                           	psect	text58
 15797  001922                     __ptext58:
 15798                           	opt stack 0
 15799  001922                     _NetworkManagerTask:
 15800                           	opt stack 14
 15801                           
 15802                           ;NetworkManager.c: 55: static TickMS tStart;
 15803                           ;NetworkManager.c: 56: static SPAN delay;
 15804                           ;NetworkManager.c: 57: uint8_t data[sizeof(net_data_header_t)+8+1];
 15805                           ;NetworkManager.c: 58: uint16_t sz;
 15806                           ;NetworkManager.c: 60: BeaconManagerTask();
 15807                           
 15808                           ; BSR set to: 2
 15809                           ;incstack = 0
 15810  001922  EC93  F029         	call	_BeaconManagerTask	;wreg free
 15811                           
 15812                           ;NetworkManager.c: 61: RouteManagerTask();
 15813  001926  ECBD  F036         	call	_RouteManagerTask	;wreg free
 15814                           
 15815                           ;NetworkManager.c: 62: BroadcastManagerTask();
 15816  00192A  EC95  F017         	call	_BroadcastManagerTask	;wreg free
 15817                           
 15818                           ;NetworkManager.c: 63: TransportManagerTask();
 15819  00192E  EC8B  F005         	call	_TransportManagerTask	;wreg free
 15820                           
 15821                           ;NetworkManager.c: 65: switch(nState)
 15822  001932  D147               	goto	l17874
 15823  001934                     l17792:
 15824                           
 15825                           ; BSR set to: 1
 15826                           ;NetworkManager.c: 68: if(NetworkGetDeviceType()==DeviceCoordinator)
 15827  001934  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 15828  001938  0900               	iorlw	0
 15829  00193A  E103               	bnz	l17796
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;NetworkManager.c: 69: {
 15833                           ;NetworkManager.c: 70: nState=netOperating;
 15834  00193C  0E04               	movlw	4
 15835  00193E  6FD5               	movwf	_nState& (0+255),b
 15836                           
 15837                           ;NetworkManager.c: 71: }else
 15838  001940  0C04               	retlw	4
 15839  001942                     l17796:
 15840                           
 15841                           ;NetworkManager.c: 72: {
 15842                           ;NetworkManager.c: 73: nState=netWaitRoutes;
 15843  001942  0E01               	movlw	1
 15844  001944  0101               	movlb	1	; () banked
 15845  001946  6FD5               	movwf	_nState& (0+255),b
 15846  001948  0C01               	retlw	1
 15847  00194A                     l17798:
 15848                           
 15849                           ; BSR set to: 1
 15850                           ;NetworkManager.c: 78: if(NetworkGetDeviceType()!=DeviceCoordinator)
 15851  00194A  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 15852  00194E  0900               	iorlw	0
 15853  001950  B4D8               	btfsc	status,2,c
 15854  001952  0012               	return	
 15855                           
 15856                           ; BSR set to: 1
 15857                           ;NetworkManager.c: 79: {
 15858                           ;NetworkManager.c: 80: if( (NetworkGetDeviceType()!=DeviceCoordinator) && isInvalidAddre
      +                          ss(NetworkGetParentAddress()) )
 15859  001954  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 15860  001958  0900               	iorlw	0
 15861  00195A  E00A               	bz	l17806
 15862                           
 15863                           ; BSR set to: 1
 15864  00195C  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 15865  001960  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 15866  001964  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 15867  001968  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 15868  00196C  0900               	iorlw	0
 15869  00196E  E1E9               	bnz	l17796
 15870  001970                     l17806:
 15871  001970  0101               	movlb	1	; () banked
 15872  001972  51DF               	movf	(_routeInfo+6)& (0+255),w,b
 15873  001974  A4D8               	btfss	status,2,c
 15874  001976  0012               	return	
 15875  001978                     l17808:
 15876                           
 15877                           ;NetworkManager.c: 84: {
 15878                           ;NetworkManager.c: 85: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 15879  001978  ECEF  F01E         	call	_krnd	;wreg free
 15880  00197C  5173               	movf	?_krnd& (0+255),w,b
 15881  00197E  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 15882  001980  0E03               	movlw	3
 15883  001982  1574               	andwf	(?_krnd+1)& (0+255),w,b
 15884  001984  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 15885  001986  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 15886  001988  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 15887  00198A  0EE8               	movlw	232
 15888  00198C  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 15889  00198E  0102               	movlb	2	; () banked
 15890  001990  6F28               	movwf	NetworkManagerTask@delay& (0+255),b
 15891  001992  0E03               	movlw	3
 15892  001994  0100               	movlb	0	; () banked
 15893  001996  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 15894  001998  0102               	movlb	2	; () banked
 15895  00199A  6F29               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 15896  00199C  0E00               	movlw	0
 15897  00199E  0100               	movlb	0	; () banked
 15898  0019A0  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 15899  0019A2  0102               	movlb	2	; () banked
 15900  0019A4  6F2A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 15901  0019A6  0E00               	movlw	0
 15902  0019A8  0100               	movlb	0	; () banked
 15903  0019AA  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 15904  0019AC  0102               	movlb	2	; () banked
 15905  0019AE  6F2B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 15906                           
 15907                           ; BSR set to: 2
 15908                           ;NetworkManager.c: 86: tStart=MSTickGet();
 15909  0019B0  EC4F  F038         	call	_MSTickGet	;wreg free
 15910  0019B4  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 15911  0019B8  0E07               	movlw	7
 15912  0019BA                     u21461:
 15913  0019BA  CFEB FFDB          	movff	plusw0,plusw2
 15914  0019BE  06E8               	decf	wreg,f,c
 15915  0019C0  E2FC               	bc	u21461
 15916  0019C2                     l17812:
 15917                           
 15918                           ;NetworkManager.c: 87: nState=netDelayBeforeCheckin;
 15919  0019C2  0E05               	movlw	5
 15920  0019C4  0101               	movlb	1	; () banked
 15921  0019C6  6FD5               	movwf	_nState& (0+255),b
 15922  0019C8  0C05               	retlw	5
 15923  0019CA                     l17814:
 15924                           
 15925                           ; BSR set to: 1
 15926                           ;NetworkManager.c: 93: if(RMRoutingTableCount()>0)
 15927  0019CA  ECF9  F03A         	call	_RMRoutingTableCount	;wreg free
 15928  0019CE  0100               	movlb	0	; () banked
 15929  0019D0  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 15930  0019D2  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 15931  0019D4  B4D8               	btfsc	status,2,c
 15932  0019D6  0012               	return	
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;NetworkManager.c: 94: {
 15936                           ;NetworkManager.c: 95: tStart=MSTickGet();
 15937  0019D8  EC4F  F038         	call	_MSTickGet	;wreg free
 15938  0019DC  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 15939  0019E0  0E07               	movlw	7
 15940  0019E2                     u21481:
 15941  0019E2  CFEB FFDB          	movff	plusw0,plusw2
 15942  0019E6  06E8               	decf	wreg,f,c
 15943  0019E8  E2FC               	bc	u21481
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;NetworkManager.c: 96: nState=netWaitBeforeRouteUpdates;
 15947  0019EA  0E02               	movlw	2
 15948  0019EC  0101               	movlb	1	; () banked
 15949  0019EE  6FD5               	movwf	_nState& (0+255),b
 15950  0019F0  0C02               	retlw	2
 15951  0019F2                     l17820:
 15952                           
 15953                           ; BSR set to: 1
 15954                           ;NetworkManager.c: 101: if(MSTickGetDiffNow(tStart)>((SPAN)2000))
 15955  0019F2  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 15956  0019F6  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 15957  0019FA  0E07               	movlw	7
 15958  0019FC                     u21491:
 15959  0019FC  CFDB FFEB          	movff	plusw2,plusw0
 15960  001A00  06E8               	decf	wreg,f,c
 15961  001A02  E2FC               	bc	u21491
 15962  001A04  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 15963  001A08  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 15964  001A0A  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 15965  001A0C  E107               	bnz	u21500
 15966  001A0E  0ED1               	movlw	209
 15967  001A10  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 15968  001A12  0E07               	movlw	7
 15969  001A14  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 15970  001A16  E202 EFF9  F03A    	bnc	_RMRoutingTableCount
 15971  001A1C                     u21500:
 15972                           
 15973                           ; BSR set to: 0
 15974                           ;NetworkManager.c: 102: {
 15975                           ;NetworkManager.c: 103: RouteManagerPerformUpdate();
 15976  001A1C  EC1D  F00B         	call	_RouteManagerPerformUpdate	;wreg free
 15977  001A20                     l17824:
 15978                           
 15979                           ;NetworkManager.c: 104: nState=netWaitParent;
 15980  001A20  0E03               	movlw	3
 15981  001A22  0101               	movlb	1	; () banked
 15982  001A24  6FD5               	movwf	_nState& (0+255),b
 15983                           
 15984                           ;NetworkManager.c: 105: }else if(RMRoutingTableCount()>2)
 15985  001A26  0C03               	retlw	3
 15986  001A28                     l17828:
 15987                           
 15988                           ; BSR set to: 1
 15989                           ;NetworkManager.c: 113: if(isInvalidAddress(NetworkGetParentAddress())==0)
 15990  001A28  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 15991  001A2C  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 15992  001A30  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 15993  001A34  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 15994  001A38  0900               	iorlw	0
 15995  001A3A  E126               	bnz	l17836
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;NetworkManager.c: 114: {
 15999                           ;NetworkManager.c: 115: tStart=MSTickGet();
 16000  001A3C  EC4F  F038         	call	_MSTickGet	;wreg free
 16001  001A40  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 16002  001A44  0E07               	movlw	7
 16003  001A46                     u21521:
 16004  001A46  CFEB FFDB          	movff	plusw0,plusw2
 16005  001A4A  06E8               	decf	wreg,f,c
 16006  001A4C  E2FC               	bc	u21521
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;NetworkManager.c: 117: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 16010  001A4E  ECEF  F01E         	call	_krnd	;wreg free
 16011  001A52  5173               	movf	?_krnd& (0+255),w,b
 16012  001A54  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 16013  001A56  0E03               	movlw	3
 16014  001A58  1574               	andwf	(?_krnd+1)& (0+255),w,b
 16015  001A5A  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 16016  001A5C  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 16017  001A5E  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 16018  001A60  0EE8               	movlw	232
 16019  001A62  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 16020  001A64  0102               	movlb	2	; () banked
 16021  001A66  6F28               	movwf	NetworkManagerTask@delay& (0+255),b
 16022  001A68  0E03               	movlw	3
 16023  001A6A  0100               	movlb	0	; () banked
 16024  001A6C  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 16025  001A6E  0102               	movlb	2	; () banked
 16026  001A70  6F29               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 16027  001A72  0E00               	movlw	0
 16028  001A74  0100               	movlb	0	; () banked
 16029  001A76  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 16030  001A78  0102               	movlb	2	; () banked
 16031  001A7A  6F2A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 16032  001A7C  0E00               	movlw	0
 16033  001A7E  0100               	movlb	0	; () banked
 16034  001A80  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 16035  001A82  0102               	movlb	2	; () banked
 16036  001A84  6F2B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 16037  001A86  D79D               	goto	l17812
 16038  001A88                     l17836:
 16039                           
 16040                           ; BSR set to: 0
 16041  001A88  ECF9  F03A         	call	_RMRoutingTableCount	;wreg free
 16042  001A8C  0100               	movlb	0	; () banked
 16043  001A8E  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 16044  001A90  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 16045  001A92  E101 D756          	bz	l17796
 16046  001A96  0012               	return	
 16047  001A98                     l17840:
 16048                           
 16049                           ; BSR set to: 1
 16050                           ;NetworkManager.c: 126: if(isInvalidAddress(NetworkGetParentAddress())==1)
 16051  001A98  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 16052  001A9C  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 16053  001AA0  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 16054  001AA4  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 16055  001AA8  06E8               	decf	wreg,f,c
 16056  001AAA  E0BA               	bz	l17824
 16057                           
 16058                           ; BSR set to: 0
 16059  001AAC  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 16060  001AB0  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16061  001AB4  0E07               	movlw	7
 16062  001AB6                     u21551:
 16063  001AB6  CFDB FFEB          	movff	plusw2,plusw0
 16064  001ABA  06E8               	decf	wreg,f,c
 16065  001ABC  E2FC               	bc	u21551
 16066  001ABE  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 16067  001AC2  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 16068  001AC4  0102               	movlb	2	; () banked
 16069  001AC6  5D28               	subwf	NetworkManagerTask@delay& (0+255),w,b
 16070  001AC8  0100               	movlb	0	; () banked
 16071  001ACA  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16072  001ACC  0102               	movlb	2	; () banked
 16073  001ACE  5929               	subwfb	(NetworkManagerTask@delay+1)& (0+255),w,b
 16074  001AD0  0100               	movlb	0	; () banked
 16075  001AD2  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16076  001AD4  0102               	movlb	2	; () banked
 16077  001AD6  592A               	subwfb	(NetworkManagerTask@delay+2)& (0+255),w,b
 16078  001AD8  0100               	movlb	0	; () banked
 16079  001ADA  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16080  001ADC  0102               	movlb	2	; () banked
 16081  001ADE  592B               	subwfb	(NetworkManagerTask@delay+3)& (0+255),w,b
 16082  001AE0  B0D8               	btfsc	status,0,c
 16083  001AE2  0012               	return	
 16084                           
 16085                           ; BSR set to: 2
 16086  001AE4  EC46  F03B         	call	_MiApp_IsNetworkBusy	;wreg free
 16087  001AE8  0900               	iorlw	0
 16088  001AEA  A4D8               	btfss	status,2,c
 16089  001AEC  0012               	return	
 16090                           
 16091                           ; BSR set to: 2
 16092                           ;NetworkManager.c: 130: {
 16093                           ;NetworkManager.c: 131: nst--;
 16094  001AEE  0101               	movlb	1	; () banked
 16095  001AF0  07D7               	decf	_nst& (0+255),f,b	;volatile
 16096                           
 16097                           ; BSR set to: 1
 16098                           ;NetworkManager.c: 132: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketCheckin,(0),0);
 16099  001AF2  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
 16100  001AF6  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 16101  001AFA  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 16102  001AFE  0E44               	movlw	low NetworkManagerTask@data
 16103  001B00  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 16104  001B02  0E01               	movlw	high NetworkManagerTask@data
 16105  001B04  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 16106  001B06  0E24               	movlw	36
 16107  001B08  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 16108  001B0A  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 16109  001B0C  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 16110  001B0E  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 16111  001B10  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 16112  001B12  EC07  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 16113  001B16  C07F  F157         	movff	?_NetworkPrepareSendPacket,NetworkManagerTask@sz
 16114  001B1A  C080  F158         	movff	?_NetworkPrepareSendPacket+1,NetworkManagerTask@sz+1
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;NetworkManager.c: 133: data[sz++]=NetworkGetDeviceType();
 16118  001B1E  0E44               	movlw	low NetworkManagerTask@data
 16119  001B20  0101               	movlb	1	; () banked
 16120  001B22  2557               	addwf	NetworkManagerTask@sz& (0+255),w,b
 16121  001B24  6ED9               	movwf	fsr2l,c
 16122  001B26  0E01               	movlw	high NetworkManagerTask@data
 16123  001B28  2158               	addwfc	(NetworkManagerTask@sz+1)& (0+255),w,b
 16124  001B2A  6EDA               	movwf	fsr2h,c
 16125  001B2C  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 16126  001B30  6EDF               	movwf	indf2,c
 16127                           
 16128                           ; BSR set to: 1
 16129  001B32  4B57               	infsnz	NetworkManagerTask@sz& (0+255),f,b
 16130  001B34  2B58               	incf	(NetworkManagerTask@sz+1)& (0+255),f,b
 16131                           
 16132                           ; BSR set to: 1
 16133                           ;NetworkManager.c: 135: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 16134  001B36  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 16135  001B3A  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 16136  001B3E  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 16137  001B42  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
 16138  001B46  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 16139  001B4A  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 16140  001B4E  0E44               	movlw	low NetworkManagerTask@data
 16141  001B50  0100               	movlb	0	; () banked
 16142  001B52  6FC0               	movwf	radioUnicast@data& (0+255),b
 16143  001B54  0E01               	movlw	high NetworkManagerTask@data
 16144  001B56  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 16145  001B58  C157  F0C2         	movff	NetworkManagerTask@sz,radioUnicast@datasize
 16146  001B5C  EC27  F03B         	call	_isNetworkSecurityEnabled	;wreg free
 16147  001B60  0100               	movlb	0	; () banked
 16148  001B62  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 16149  001B64  ECD3  F035         	call	_radioUnicast	;wreg free
 16150  001B68  0900               	iorlw	0
 16151  001B6A  E108               	bnz	l17860
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;NetworkManager.c: 136: {
 16155                           ;NetworkManager.c: 137: RouterEvicted(NetworkGetParentAddress());
 16156  001B6C  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 16157  001B70  C073  F08F         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 16158  001B74  C074  F090         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 16159  001B78  EC0F  F02E         	call	_RouterEvicted	;wreg free
 16160  001B7C                     l17860:
 16161                           
 16162                           ;NetworkManager.c: 138: }
 16163                           ;NetworkManager.c: 139: nState=netWaitReply;
 16164  001B7C  0E06               	movlw	6
 16165  001B7E  0101               	movlb	1	; () banked
 16166  001B80  6FD5               	movwf	_nState& (0+255),b
 16167                           
 16168                           ; BSR set to: 1
 16169                           ;NetworkManager.c: 140: tStart=MSTickGet();
 16170  001B82  EC4F  F038         	call	_MSTickGet	;wreg free
 16171  001B86  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 16172  001B8A  0E07               	movlw	7
 16173  001B8C                     u21591:
 16174  001B8C  CFEB FFDB          	movff	plusw0,plusw2
 16175  001B90  06E8               	decf	wreg,f,c
 16176  001B92  E2FC               	bc	u21591
 16177  001B94  0012               	return	
 16178  001B96                     l17864:
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;NetworkManager.c: 145: if(MSTickGetDiffNow(tStart)>((SPAN)1*1000ULL))
 16182  001B96  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 16183  001B9A  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16184  001B9E  0E07               	movlw	7
 16185  001BA0                     u21601:
 16186  001BA0  CFDB FFEB          	movff	plusw2,plusw0
 16187  001BA4  06E8               	decf	wreg,f,c
 16188  001BA6  E2FC               	bc	u21601
 16189  001BA8  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 16190  001BAC  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16191  001BAE  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16192  001BB0  E107               	bnz	u21610
 16193  001BB2  0EE9               	movlw	233
 16194  001BB4  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 16195  001BB6  0E03               	movlw	3
 16196  001BB8  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16197  001BBA  E301 D6DD          	bc	l17808
 16198  001BBE  0012               	return	
 16199  001BC0                     u21610:
 16200  001BC0  D6DB               	goto	l17808
 16201  001BC2                     l17874:
 16202  001BC2  0101               	movlb	1	; () banked
 16203  001BC4  51D5               	movf	_nState& (0+255),w,b
 16204                           
 16205                           ; Switch size 1, requested type "speed"
 16206                           ; Number of cases is 7, Range of values is 0 to 6
 16207                           ; switch strategies available:
 16208                           ; Name         Instructions Cycles
 16209                           ; simple_byte           22    12 (average)
 16210                           ;	Chosen strategy is simple_byte
 16211  001BC6  E101 D6B5          	bz	l17792
 16212  001BCA  0A01               	xorlw	1	; case 1
 16213  001BCC  E101 D6FD          	bz	l17814
 16214  001BD0  0A03               	xorlw	3	; case 2
 16215  001BD2  E101 D70E          	bz	l17820
 16216  001BD6  0A01               	xorlw	1	; case 3
 16217  001BD8  E101 D726          	bz	l17828
 16218  001BDC  0A07               	xorlw	7	; case 4
 16219  001BDE  E101 D6B4          	bz	l17798
 16220  001BE2  0A01               	xorlw	1	; case 5
 16221  001BE4  E101 D758          	bz	l17840
 16222  001BE8  0A03               	xorlw	3	; case 6
 16223  001BEA  E0D5               	bz	l17864
 16224  001BEC  0012               	return		;funcret
 16225  001BEE                     __end_of_NetworkManagerTask:
 16226                           	opt stack 0
 16227                           tblptru	equ	0xFF8
 16228                           tblptrh	equ	0xFF7
 16229                           tblptrl	equ	0xFF6
 16230                           tablat	equ	0xFF5
 16231                           prodh	equ	0xFF4
 16232                           prodl	equ	0xFF3
 16233                           intcon	equ	0xFF2
 16234                           postinc0	equ	0xFEE
 16235                           plusw0	equ	0xFEB
 16236                           fsr0h	equ	0xFEA
 16237                           fsr0l	equ	0xFE9
 16238                           wreg	equ	0xFE8
 16239                           indf1	equ	0xFE7
 16240                           postdec1	equ	0xFE5
 16241                           plusw1	equ	0xFE3
 16242                           fsr1h	equ	0xFE2
 16243                           fsr1l	equ	0xFE1
 16244                           indf2	equ	0xFDF
 16245                           postinc2	equ	0xFDE
 16246                           postdec2	equ	0xFDD
 16247                           plusw2	equ	0xFDB
 16248                           fsr2h	equ	0xFDA
 16249                           fsr2l	equ	0xFD9
 16250                           status	equ	0xFD8
 16251                           
 16252 ;; *************** function _TransportManagerTask *****************
 16253 ;; Defined at:
 16254 ;;		line 59 in file "../TransportManager.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 16259 ;;  i               2   66[BANK1 ] unsigned int 
 16260 ;;  sz              2   64[BANK1 ] unsigned int 
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  1    wreg      void 
 16263 ;; Registers used:
 16264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16265 ;; Tracked objects:
 16266 ;;		On entry : F/0
 16267 ;;		On exit  : E/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16271 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16273 ;;      Totals:         0       4      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16274 ;;Total ram usage:       72 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:   12
 16277 ;; This function calls:
 16278 ;;		_CoordinatorGenericAddress
 16279 ;;		_MSTickGet
 16280 ;;		_MSTickGetDiffNow
 16281 ;;		_NetworkGetPANID
 16282 ;;		_NetworkGetParentAddress
 16283 ;;		_NetworkHasRoute
 16284 ;;		_NetworkPrepareSendPacket
 16285 ;;		_RouterEvicted
 16286 ;;		_memcpy
 16287 ;;		_radioUnicast
 16288 ;; This function is called by:
 16289 ;;		_NetworkManagerTask
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           	psect	text59
 16294  000B16                     __ptext59:
 16295                           	opt stack 0
 16296  000B16                     _TransportManagerTask:
 16297                           	opt stack 15
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;TransportManager.c: 61: uint8_t databuff[64];
 16301                           ;TransportManager.c: 62: uint16_t i;
 16302                           ;TransportManager.c: 63: uint16_t sz;
 16303                           ;TransportManager.c: 64: switch(TMState)
 16304                           
 16305                           ;incstack = 0
 16306  000B16  D051               	goto	l17698
 16307  000B18                     l17672:
 16308                           
 16309                           ;TransportManager.c: 67: TMState=TMWaitRoute;
 16310  000B18  0E01               	movlw	1
 16311  000B1A  D005               	goto	L5
 16312  000B1C                     l17674:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;TransportManager.c: 71: if(NetworkHasRoute()==1)
 16316  000B1C  EC18  F038         	call	_NetworkHasRoute	;wreg free
 16317  000B20  06E8               	decf	wreg,f,c
 16318  000B22  E151               	bnz	l17700
 16319                           
 16320                           ; BSR set to: 0
 16321                           ;TransportManager.c: 72: {
 16322                           ;TransportManager.c: 73: TMState=TMOperating;
 16323  000B24  0E02               	movlw	2
 16324  000B26                     L5:
 16325  000B26  6E40               	movwf	_TMState,c
 16326  000B28  D04E               	goto	l17700
 16327  000B2A                     l17678:
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;TransportManager.c: 78: if(NetworkHasRoute()==0)
 16331  000B2A  EC18  F038         	call	_NetworkHasRoute	;wreg free
 16332  000B2E  0900               	iorlw	0
 16333  000B30  E14A               	bnz	l17700
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;TransportManager.c: 79: {
 16337                           ;TransportManager.c: 80: for(i=0;i<2;i++)
 16338  000B32  0101               	movlb	1	; () banked
 16339  000B34  6B42               	clrf	TransportManagerTask@i& (0+255),b
 16340  000B36  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 16341  000B38                     l17686:
 16342                           
 16343                           ; BSR set to: 1
 16344                           ;TransportManager.c: 81: {
 16345                           ;TransportManager.c: 82: if(TMQ[i].TMQState!=TMQIdle)
 16346  000B38  0E4C               	movlw	76
 16347  000B3A  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16348  000B3C  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16349  000B40  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16350  000B44  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16351  000B46  50F3               	movf	prodl,w,c
 16352  000B48  0100               	movlb	0	; () banked
 16353  000B4A  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16354  000B4C  0E4B               	movlw	low (_TMQ+75)
 16355  000B4E  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16356  000B50  6ED9               	movwf	fsr2l,c
 16357  000B52  0E06               	movlw	high (_TMQ+75)
 16358  000B54  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16359  000B56  6EDA               	movwf	fsr2h,c
 16360  000B58  50DF               	movf	indf2,w,c
 16361  000B5A  E026               	bz	l17690
 16362                           
 16363                           ; BSR set to: 0
 16364                           ;TransportManager.c: 83: {
 16365                           ;TransportManager.c: 84: TMQ[i].TMQState=TMQSend;
 16366  000B5C  0E4C               	movlw	76
 16367  000B5E  0101               	movlb	1	; () banked
 16368  000B60  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16369  000B62  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16370  000B66  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16371  000B6A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16372  000B6C  50F3               	movf	prodl,w,c
 16373  000B6E  0100               	movlb	0	; () banked
 16374  000B70  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16375  000B72  0E4B               	movlw	low (_TMQ+75)
 16376  000B74  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16377  000B76  6ED9               	movwf	fsr2l,c
 16378  000B78  0E06               	movlw	high (_TMQ+75)
 16379  000B7A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16380  000B7C  6EDA               	movwf	fsr2h,c
 16381  000B7E  0E01               	movlw	1
 16382  000B80  6EDF               	movwf	indf2,c
 16383                           
 16384                           ;TransportManager.c: 85: TMQ[i].retryCount=0;
 16385  000B82  0E4C               	movlw	76
 16386  000B84  0101               	movlb	1	; () banked
 16387  000B86  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16388  000B88  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16389  000B8C  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16390  000B90  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16391  000B92  50F3               	movf	prodl,w,c
 16392  000B94  0100               	movlb	0	; () banked
 16393  000B96  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16394  000B98  0E49               	movlw	low (_TMQ+73)
 16395  000B9A  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16396  000B9C  6ED9               	movwf	fsr2l,c
 16397  000B9E  0E06               	movlw	high (_TMQ+73)
 16398  000BA0  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16399  000BA2  6EDA               	movwf	fsr2h,c
 16400  000BA4  0E00               	movlw	0
 16401  000BA6  6EDF               	movwf	indf2,c
 16402  000BA8                     l17690:
 16403                           
 16404                           ; BSR set to: 0
 16405  000BA8  0101               	movlb	1	; () banked
 16406  000BAA  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 16407  000BAC  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 16408                           
 16409                           ; BSR set to: 1
 16410  000BAE  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 16411  000BB0  E1B3               	bnz	l17672
 16412  000BB2  0E02               	movlw	2
 16413  000BB4  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 16414  000BB6  E2B0               	bc	l17672
 16415  000BB8  D7BF               	goto	l17686
 16416  000BBA                     l17698:
 16417                           
 16418                           ; BSR set to: 0
 16419  000BBA  5040               	movf	_TMState,w,c
 16420                           
 16421                           ; Switch size 1, requested type "speed"
 16422                           ; Number of cases is 3, Range of values is 0 to 2
 16423                           ; switch strategies available:
 16424                           ; Name         Instructions Cycles
 16425                           ; simple_byte           10     6 (average)
 16426                           ;	Chosen strategy is simple_byte
 16427  000BBC  E0AD               	bz	l17672
 16428  000BBE  0A01               	xorlw	1	; case 1
 16429  000BC0  E0AD               	bz	l17674
 16430  000BC2  0A03               	xorlw	3	; case 2
 16431  000BC4  E0B2               	bz	l17678
 16432  000BC6                     l17700:
 16433                           
 16434                           ;TransportManager.c: 93: if(TMState==TMOperating)
 16435  000BC6  0E02               	movlw	2
 16436  000BC8  1840               	xorwf	_TMState,w,c
 16437  000BCA  A4D8               	btfss	status,2,c
 16438  000BCC  0012               	return	
 16439                           
 16440                           ;TransportManager.c: 94: {
 16441                           ;TransportManager.c: 95: for(i=0;i<2;i++)
 16442  000BCE  0101               	movlb	1	; () banked
 16443  000BD0  6B42               	clrf	TransportManagerTask@i& (0+255),b
 16444  000BD2  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 16445  000BD4  D195               	goto	l17742
 16446  000BD6                     l17708:
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;TransportManager.c: 103: if(TMQ[i].datasize>0)
 16450  000BD6  0E4C               	movlw	76
 16451  000BD8  0101               	movlb	1	; () banked
 16452  000BDA  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16453  000BDC  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16454  000BE0  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16455  000BE4  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16456  000BE6  50F3               	movf	prodl,w,c
 16457  000BE8  0100               	movlb	0	; () banked
 16458  000BEA  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16459  000BEC  0E40               	movlw	low (_TMQ+64)
 16460  000BEE  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16461  000BF0  6ED9               	movwf	fsr2l,c
 16462  000BF2  0E06               	movlw	high (_TMQ+64)
 16463  000BF4  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16464  000BF6  6EDA               	movwf	fsr2h,c
 16465  000BF8  50DF               	movf	indf2,w,c
 16466  000BFA  E101 D199          	bz	l17744
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;TransportManager.c: 104: {
 16470                           ;TransportManager.c: 105: if(TMQ[i].flags.isFormedPacket==0)
 16471  000BFE  0E4C               	movlw	76
 16472  000C00  0101               	movlb	1	; () banked
 16473  000C02  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16474  000C04  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16475  000C08  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16476  000C0C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16477  000C0E  50F3               	movf	prodl,w,c
 16478  000C10  0100               	movlb	0	; () banked
 16479  000C12  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16480  000C14  0E4A               	movlw	low (_TMQ+74)
 16481  000C16  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16482  000C18  6ED9               	movwf	fsr2l,c
 16483  000C1A  0E06               	movlw	high (_TMQ+74)
 16484  000C1C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16485  000C1E  6EDA               	movwf	fsr2h,c
 16486  000C20  0106               	movlb	6	; () banked
 16487  000C22  B0DF               	btfsc	indf2,0,c
 16488  000C24  D038               	goto	l17714
 16489                           
 16490                           ; BSR set to: 6
 16491                           ;TransportManager.c: 106: {
 16492                           ;TransportManager.c: 107: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),databu
      +                          ff,PacketData,TMQ[i].data,TMQ[i].datasize);
 16493  000C26  EC94  F039         	call	_CoordinatorGenericAddress	;wreg free
 16494  000C2A  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 16495  000C2E  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 16496  000C32  0E00               	movlw	low TransportManagerTask@databuff
 16497  000C34  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 16498  000C36  0E01               	movlw	high TransportManagerTask@databuff
 16499  000C38  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 16500  000C3A  0E23               	movlw	35
 16501  000C3C  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 16502  000C3E  0E4C               	movlw	76
 16503  000C40  0101               	movlb	1	; () banked
 16504  000C42  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16505  000C44  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16506  000C48  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16507  000C4C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16508  000C4E  50F3               	movf	prodl,w,c
 16509  000C50  0100               	movlb	0	; () banked
 16510  000C52  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16511  000C54  0E00               	movlw	low _TMQ
 16512  000C56  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16513  000C58  6F84               	movwf	NetworkPrepareSendPacket@data& (0+255),b
 16514  000C5A  0E06               	movlw	high _TMQ
 16515  000C5C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16516  000C5E  6F85               	movwf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 16517  000C60  0E4C               	movlw	76
 16518  000C62  0101               	movlb	1	; () banked
 16519  000C64  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16520  000C66  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 16521  000C6A  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 16522  000C6E  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16523  000C70  50F3               	movf	prodl,w,c
 16524  000C72  0100               	movlb	0	; () banked
 16525  000C74  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 16526  000C76  0E40               	movlw	low (_TMQ+64)
 16527  000C78  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 16528  000C7A  6ED9               	movwf	fsr2l,c
 16529  000C7C  0E06               	movlw	high (_TMQ+64)
 16530  000C7E  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 16531  000C80  6EDA               	movwf	fsr2h,c
 16532  000C82  50DF               	movf	indf2,w,c
 16533  000C84  6F86               	movwf	NetworkPrepareSendPacket@size& (0+255),b
 16534  000C86  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 16535  000C88  EC07  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 16536  000C8C  C07F  F140         	movff	?_NetworkPrepareSendPacket,TransportManagerTask@sz
 16537  000C90  C080  F141         	movff	?_NetworkPrepareSendPacket+1,TransportManagerTask@sz+1
 16538                           
 16539                           ;TransportManager.c: 108: }else
 16540  000C94  D041               	goto	l17718
 16541  000C96                     l17714:
 16542                           
 16543                           ; BSR set to: 6
 16544                           ;TransportManager.c: 109: {
 16545                           ;TransportManager.c: 110: memcpy(databuff,TMQ[i].data,TMQ[i].datasize);
 16546  000C96  0E00               	movlw	low TransportManagerTask@databuff
 16547  000C98  0100               	movlb	0	; () banked
 16548  000C9A  6F75               	movwf	memcpy@d1& (0+255),b
 16549  000C9C  0E01               	movlw	high TransportManagerTask@databuff
 16550  000C9E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 16551  000CA0  0E4C               	movlw	76
 16552  000CA2  0101               	movlb	1	; () banked
 16553  000CA4  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16554  000CA6  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16555  000CAA  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16556  000CAE  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16557  000CB0  50F3               	movf	prodl,w,c
 16558  000CB2  0100               	movlb	0	; () banked
 16559  000CB4  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16560  000CB6  0E00               	movlw	low _TMQ
 16561  000CB8  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16562  000CBA  6F77               	movwf	memcpy@s1& (0+255),b
 16563  000CBC  0E06               	movlw	high _TMQ
 16564  000CBE  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16565  000CC0  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 16566  000CC2  0E4C               	movlw	76
 16567  000CC4  0101               	movlb	1	; () banked
 16568  000CC6  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16569  000CC8  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 16570  000CCC  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 16571  000CD0  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16572  000CD2  50F3               	movf	prodl,w,c
 16573  000CD4  0100               	movlb	0	; () banked
 16574  000CD6  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 16575  000CD8  0E40               	movlw	low (_TMQ+64)
 16576  000CDA  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 16577  000CDC  6ED9               	movwf	fsr2l,c
 16578  000CDE  0E06               	movlw	high (_TMQ+64)
 16579  000CE0  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 16580  000CE2  6EDA               	movwf	fsr2h,c
 16581  000CE4  50DF               	movf	indf2,w,c
 16582  000CE6  6F79               	movwf	memcpy@n& (0+255),b
 16583  000CE8  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 16584  000CEA  EC54  F035         	call	_memcpy	;wreg free
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;TransportManager.c: 111: sz=TMQ[i].datasize;
 16588  000CEE  0E4C               	movlw	76
 16589  000CF0  0101               	movlb	1	; () banked
 16590  000CF2  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16591  000CF4  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16592  000CF8  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16593  000CFC  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16594  000CFE  50F3               	movf	prodl,w,c
 16595  000D00  0100               	movlb	0	; () banked
 16596  000D02  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16597  000D04  0E40               	movlw	low (_TMQ+64)
 16598  000D06  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16599  000D08  6ED9               	movwf	fsr2l,c
 16600  000D0A  0E06               	movlw	high (_TMQ+64)
 16601  000D0C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16602  000D0E  6EDA               	movwf	fsr2h,c
 16603  000D10  50DF               	movf	indf2,w,c
 16604  000D12  0101               	movlb	1	; () banked
 16605  000D14  6F40               	movwf	TransportManagerTask@sz& (0+255),b
 16606  000D16  6B41               	clrf	(TransportManagerTask@sz+1)& (0+255),b
 16607  000D18                     l17718:
 16608                           
 16609                           ;TransportManager.c: 112: }
 16610                           ;TransportManager.c: 113: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),da
      +                          tabuff,sz, TMQ[i].flags.isSecure)==1)
 16611  000D18  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 16612  000D1C  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 16613  000D20  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 16614  000D24  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
 16615  000D28  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 16616  000D2C  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 16617  000D30  0E00               	movlw	low TransportManagerTask@databuff
 16618  000D32  0100               	movlb	0	; () banked
 16619  000D34  6FC0               	movwf	radioUnicast@data& (0+255),b
 16620  000D36  0E01               	movlw	high TransportManagerTask@databuff
 16621  000D38  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 16622  000D3A  C140  F0C2         	movff	TransportManagerTask@sz,radioUnicast@datasize
 16623  000D3E  0E4C               	movlw	76
 16624  000D40  0101               	movlb	1	; () banked
 16625  000D42  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16626  000D44  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16627  000D48  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16628  000D4C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16629  000D4E  50F3               	movf	prodl,w,c
 16630  000D50  0100               	movlb	0	; () banked
 16631  000D52  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16632  000D54  0E4A               	movlw	low (_TMQ+74)
 16633  000D56  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16634  000D58  6ED9               	movwf	fsr2l,c
 16635  000D5A  0E06               	movlw	high (_TMQ+74)
 16636  000D5C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16637  000D5E  6EDA               	movwf	fsr2h,c
 16638  000D60  0E00               	movlw	0
 16639  000D62  B2DF               	btfsc	indf2,1,c
 16640  000D64  0E01               	movlw	1
 16641  000D66  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 16642  000D68  ECD3  F035         	call	_radioUnicast	;wreg free
 16643  000D6C  06E8               	decf	wreg,f,c
 16644  000D6E  E113               	bnz	l17722
 16645  000D70                     l17720:
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;TransportManager.c: 114: {
 16649                           ;TransportManager.c: 116: TMQ[i].TMQState=TMQIdle;
 16650  000D70  0E4C               	movlw	76
 16651  000D72  0101               	movlb	1	; () banked
 16652  000D74  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16653  000D76  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16654  000D7A  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16655  000D7E  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16656  000D80  50F3               	movf	prodl,w,c
 16657  000D82  0100               	movlb	0	; () banked
 16658  000D84  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16659  000D86  0E4B               	movlw	low (_TMQ+75)
 16660  000D88  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16661  000D8A  6ED9               	movwf	fsr2l,c
 16662  000D8C  0E06               	movlw	high (_TMQ+75)
 16663  000D8E  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16664  000D90  6EDA               	movwf	fsr2h,c
 16665  000D92  0E00               	movlw	0
 16666  000D94  D0B3               	goto	L7
 16667  000D96                     l17722:
 16668                           
 16669                           ; BSR set to: 0
 16670                           ;TransportManager.c: 118: {
 16671                           ;TransportManager.c: 120: TMQ[i].tick=MSTickGet();
 16672  000D96  EC4F  F038         	call	_MSTickGet	;wreg free
 16673  000D9A  0E4C               	movlw	76
 16674  000D9C  0101               	movlb	1	; () banked
 16675  000D9E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16676  000DA0  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16677  000DA4  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16678  000DA8  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16679  000DAA  50F3               	movf	prodl,w,c
 16680  000DAC  0100               	movlb	0	; () banked
 16681  000DAE  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16682  000DB0  0E41               	movlw	low (_TMQ+65)
 16683  000DB2  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16684  000DB4  6ED9               	movwf	fsr2l,c
 16685  000DB6  0E06               	movlw	high (_TMQ+65)
 16686  000DB8  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16687  000DBA  6EDA               	movwf	fsr2h,c
 16688  000DBC  0E07               	movlw	7
 16689  000DBE                     u21331:
 16690  000DBE  CFEB FFDB          	movff	plusw0,plusw2
 16691  000DC2  06E8               	decf	wreg,f,c
 16692  000DC4  E2FC               	bc	u21331
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;TransportManager.c: 121: TMQ[i].retryCount++;
 16696  000DC6  0E4C               	movlw	76
 16697  000DC8  0101               	movlb	1	; () banked
 16698  000DCA  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16699  000DCC  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16700  000DD0  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16701  000DD4  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16702  000DD6  50F3               	movf	prodl,w,c
 16703  000DD8  0100               	movlb	0	; () banked
 16704  000DDA  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16705  000DDC  0E49               	movlw	low (_TMQ+73)
 16706  000DDE  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16707  000DE0  6ED9               	movwf	fsr2l,c
 16708  000DE2  0E06               	movlw	high (_TMQ+73)
 16709  000DE4  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16710  000DE6  6EDA               	movwf	fsr2h,c
 16711  000DE8  2ADF               	incf	indf2,f,c
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;TransportManager.c: 122: if(TMQ[i].retryCount<3)
 16715  000DEA  0E4C               	movlw	76
 16716  000DEC  0101               	movlb	1	; () banked
 16717  000DEE  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16718  000DF0  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16719  000DF4  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16720  000DF8  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16721  000DFA  50F3               	movf	prodl,w,c
 16722  000DFC  0100               	movlb	0	; () banked
 16723  000DFE  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16724  000E00  0E49               	movlw	low (_TMQ+73)
 16725  000E02  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16726  000E04  6ED9               	movwf	fsr2l,c
 16727  000E06  0E06               	movlw	high (_TMQ+73)
 16728  000E08  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16729  000E0A  6EDA               	movwf	fsr2h,c
 16730  000E0C  0E03               	movlw	3
 16731  000E0E  60DF               	cpfslt	indf2,c
 16732  000E10  D013               	goto	l17730
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;TransportManager.c: 123: {
 16736                           ;TransportManager.c: 124: TMQ[i].TMQState=TMQWaitRetry;
 16737  000E12  0E4C               	movlw	76
 16738  000E14  0101               	movlb	1	; () banked
 16739  000E16  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16740  000E18  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16741  000E1C  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16742  000E20  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16743  000E22  50F3               	movf	prodl,w,c
 16744  000E24  0100               	movlb	0	; () banked
 16745  000E26  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16746  000E28  0E4B               	movlw	low (_TMQ+75)
 16747  000E2A  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16748  000E2C  6ED9               	movwf	fsr2l,c
 16749  000E2E  0E06               	movlw	high (_TMQ+75)
 16750  000E30  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16751  000E32  6EDA               	movwf	fsr2h,c
 16752  000E34  0E02               	movlw	2
 16753  000E36  D062               	goto	L7
 16754  000E38                     l17730:
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;TransportManager.c: 126: {
 16758                           ;TransportManager.c: 128: TMQ[i].TMQState=TMQWaitRetry;
 16759  000E38  0E4C               	movlw	76
 16760  000E3A  0101               	movlb	1	; () banked
 16761  000E3C  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16762  000E3E  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16763  000E42  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16764  000E46  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16765  000E48  50F3               	movf	prodl,w,c
 16766  000E4A  0100               	movlb	0	; () banked
 16767  000E4C  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16768  000E4E  0E4B               	movlw	low (_TMQ+75)
 16769  000E50  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16770  000E52  6ED9               	movwf	fsr2l,c
 16771  000E54  0E06               	movlw	high (_TMQ+75)
 16772  000E56  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16773  000E58  6EDA               	movwf	fsr2h,c
 16774  000E5A  0E02               	movlw	2
 16775  000E5C  6EDF               	movwf	indf2,c
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;TransportManager.c: 129: RouterEvicted(NetworkGetParentAddress());
 16779  000E5E  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 16780  000E62  C073  F08F         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 16781  000E66  C074  F090         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 16782  000E6A  EC0F  F02E         	call	_RouterEvicted	;wreg free
 16783  000E6E  D060               	goto	l17744
 16784  000E70                     l17734:
 16785                           
 16786                           ; BSR set to: 0
 16787                           ;TransportManager.c: 136: if(MSTickGetDiffNow(TMQ[i].tick)>((SPAN)4000))
 16788  000E70  0E4C               	movlw	76
 16789  000E72  0101               	movlb	1	; () banked
 16790  000E74  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16791  000E76  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16792  000E7A  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16793  000E7E  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16794  000E80  50F3               	movf	prodl,w,c
 16795  000E82  0100               	movlb	0	; () banked
 16796  000E84  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16797  000E86  0E41               	movlw	low (_TMQ+65)
 16798  000E88  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16799  000E8A  6ED9               	movwf	fsr2l,c
 16800  000E8C  0E06               	movlw	high (_TMQ+65)
 16801  000E8E  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16802  000E90  6EDA               	movwf	fsr2h,c
 16803  000E92  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16804  000E96  0E07               	movlw	7
 16805  000E98                     u21351:
 16806  000E98  CFDB FFEB          	movff	plusw2,plusw0
 16807  000E9C  06E8               	decf	wreg,f,c
 16808  000E9E  E2FC               	bc	u21351
 16809  000EA0  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 16810  000EA4  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16811  000EA6  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16812  000EA8  E105               	bnz	u21360
 16813  000EAA  0EA1               	movlw	161
 16814  000EAC  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 16815  000EAE  0E0F               	movlw	15
 16816  000EB0  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16817  000EB2  E33E               	bnc	l17744
 16818  000EB4                     u21360:
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;TransportManager.c: 137: {
 16822                           ;TransportManager.c: 138: TMQ[i].retryCount++;
 16823  000EB4  0E4C               	movlw	76
 16824  000EB6  0101               	movlb	1	; () banked
 16825  000EB8  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16826  000EBA  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16827  000EBE  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16828  000EC2  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16829  000EC4  50F3               	movf	prodl,w,c
 16830  000EC6  0100               	movlb	0	; () banked
 16831  000EC8  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16832  000ECA  0E49               	movlw	low (_TMQ+73)
 16833  000ECC  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16834  000ECE  6ED9               	movwf	fsr2l,c
 16835  000ED0  0E06               	movlw	high (_TMQ+73)
 16836  000ED2  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16837  000ED4  6EDA               	movwf	fsr2h,c
 16838  000ED6  2ADF               	incf	indf2,f,c
 16839                           
 16840                           ;TransportManager.c: 139: TMQ[i].TMQState=TMQSend;
 16841  000ED8  0E4C               	movlw	76
 16842  000EDA  0101               	movlb	1	; () banked
 16843  000EDC  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16844  000EDE  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16845  000EE2  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16846  000EE6  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16847  000EE8  50F3               	movf	prodl,w,c
 16848  000EEA  0100               	movlb	0	; () banked
 16849  000EEC  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16850  000EEE  0E4B               	movlw	low (_TMQ+75)
 16851  000EF0  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16852  000EF2  6ED9               	movwf	fsr2l,c
 16853  000EF4  0E06               	movlw	high (_TMQ+75)
 16854  000EF6  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16855  000EF8  6EDA               	movwf	fsr2h,c
 16856  000EFA  0E01               	movlw	1
 16857  000EFC                     L7:
 16858  000EFC  6EDF               	movwf	indf2,c
 16859  000EFE  D018               	goto	l17744
 16860  000F00                     l17742:
 16861                           
 16862                           ; BSR set to: 1
 16863  000F00  0E4C               	movlw	76
 16864  000F02  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16865  000F04  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16866  000F08  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16867  000F0C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16868  000F0E  50F3               	movf	prodl,w,c
 16869  000F10  0100               	movlb	0	; () banked
 16870  000F12  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16871  000F14  0E4B               	movlw	low (_TMQ+75)
 16872  000F16  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16873  000F18  6ED9               	movwf	fsr2l,c
 16874  000F1A  0E06               	movlw	high (_TMQ+75)
 16875  000F1C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16876  000F1E  6EDA               	movwf	fsr2h,c
 16877  000F20  50DF               	movf	indf2,w,c
 16878                           
 16879                           ; Switch size 1, requested type "speed"
 16880                           ; Number of cases is 3, Range of values is 0 to 2
 16881                           ; switch strategies available:
 16882                           ; Name         Instructions Cycles
 16883                           ; simple_byte           10     6 (average)
 16884                           ;	Chosen strategy is simple_byte
 16885  000F22  E006               	bz	l17744
 16886  000F24  0A01               	xorlw	1	; case 1
 16887  000F26  E101 D656          	bz	l17708
 16888  000F2A  0A03               	xorlw	3	; case 2
 16889  000F2C  E0A1               	bz	l17734
 16890  000F2E  D720               	goto	l17720
 16891  000F30                     l17744:
 16892  000F30  0101               	movlb	1	; () banked
 16893  000F32  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 16894  000F34  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 16895                           
 16896                           ; BSR set to: 1
 16897  000F36  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 16898  000F38  E103               	bnz	u21370
 16899  000F3A  0E02               	movlw	2
 16900  000F3C  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 16901  000F3E  E3E0               	bnc	l17742
 16902  000F40                     u21370:
 16903  000F40  0012               	return		;funcret
 16904  000F42                     __end_of_TransportManagerTask:
 16905                           	opt stack 0
 16906                           tblptru	equ	0xFF8
 16907                           tblptrh	equ	0xFF7
 16908                           tblptrl	equ	0xFF6
 16909                           tablat	equ	0xFF5
 16910                           prodh	equ	0xFF4
 16911                           prodl	equ	0xFF3
 16912                           intcon	equ	0xFF2
 16913                           postinc0	equ	0xFEE
 16914                           plusw0	equ	0xFEB
 16915                           fsr0h	equ	0xFEA
 16916                           fsr0l	equ	0xFE9
 16917                           wreg	equ	0xFE8
 16918                           indf1	equ	0xFE7
 16919                           postdec1	equ	0xFE5
 16920                           plusw1	equ	0xFE3
 16921                           fsr1h	equ	0xFE2
 16922                           fsr1l	equ	0xFE1
 16923                           indf2	equ	0xFDF
 16924                           postinc2	equ	0xFDE
 16925                           postdec2	equ	0xFDD
 16926                           plusw2	equ	0xFDB
 16927                           fsr2h	equ	0xFDA
 16928                           fsr2l	equ	0xFD9
 16929                           status	equ	0xFD8
 16930                           
 16931 ;; *************** function _radioUnicast *****************
 16932 ;; Defined at:
 16933 ;;		line 129 in file "../src/Bridge.c"
 16934 ;; Parameters:    Size  Location     Type
 16935 ;;  dest            2   92[BANK0 ] struct addr_t_def
 16936 ;;  PANID           2   94[BANK0 ] unsigned int 
 16937 ;;  data            2   96[BANK0 ] PTR unsigned char 
 16938 ;;		 -> NetworkIssueDataRequest@data(10), NetworkManagerProcessIncomingData@buffer(64), NetworkManagerTask@data(19), TMS
      +endDataToRFD@databuff(64), 
 16939 ;;		 -> TransportManagerTask@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 16940 ;;  datasize        1   98[BANK0 ] unsigned char 
 16941 ;;  isSecure        1   99[BANK0 ] unsigned char 
 16942 ;; Auto vars:     Size  Location     Type
 16943 ;;  i               1  100[BANK0 ] unsigned char 
 16944 ;; Return value:  Size  Location     Type
 16945 ;;                  1    wreg      unsigned char 
 16946 ;; Registers used:
 16947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16948 ;; Tracked objects:
 16949 ;;		On entry : C/1
 16950 ;;		On exit  : F/0
 16951 ;;		Unchanged: 0/0
 16952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16953 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16956 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;Total ram usage:        9 bytes
 16958 ;; Hardware stack levels used:    1
 16959 ;; Hardware stack levels required when called:   11
 16960 ;; This function calls:
 16961 ;;		_SendPacket
 16962 ;; This function is called by:
 16963 ;;		_radioReceivedPacket
 16964 ;;		_TransportManagerTask
 16965 ;;		_TMSendFormedPacketToRFD
 16966 ;;		_NetworkManagerTask
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           	psect	text60
 16971  006BA6                     __ptext60:
 16972                           	opt stack 0
 16973  006BA6                     _radioUnicast:
 16974                           	opt stack 15
 16975                           
 16976                           ;Bridge.c: 131: static addr_t addr;
 16977                           ;Bridge.c: 132: uint8_t i;
 16978                           ;Bridge.c: 133: addr=dest;
 16979                           
 16980                           ;incstack = 0
 16981  006BA6  C0BC  F261         	movff	radioUnicast@dest,radioUnicast@addr
 16982  006BAA  C0BD  F262         	movff	radioUnicast@dest+1,radioUnicast@addr+1
 16983                           
 16984                           ;Bridge.c: 134: TxIndex=0;
 16985  006BAE  6A41               	clrf	_TxIndex,c
 16986                           
 16987                           ;Bridge.c: 135: for(i=0;i<datasize;i++)
 16988  006BB0  0100               	movlb	0	; () banked
 16989  006BB2  6BC4               	clrf	radioUnicast@i& (0+255),b
 16990  006BB4  D010               	goto	l16220
 16991  006BB6                     l16214:
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;Bridge.c: 136: {
 16995                           ;Bridge.c: 137: TxBuff[TxIndex++]=data[i];
 16996  006BB6  51C4               	movf	radioUnicast@i& (0+255),w,b
 16997  006BB8  25C0               	addwf	radioUnicast@data& (0+255),w,b
 16998  006BBA  6ED9               	movwf	fsr2l,c
 16999  006BBC  0E00               	movlw	0
 17000  006BBE  21C1               	addwfc	(radioUnicast@data+1)& (0+255),w,b
 17001  006BC0  6EDA               	movwf	fsr2h,c
 17002  006BC2  0E48               	movlw	low _TxBuff
 17003  006BC4  2441               	addwf	_TxIndex,w,c
 17004  006BC6  6EE1               	movwf	fsr1l,c
 17005  006BC8  6AE2               	clrf	fsr1h,c
 17006  006BCA  0E07               	movlw	high _TxBuff
 17007  006BCC  22E2               	addwfc	fsr1h,f,c
 17008  006BCE  CFDF FFE7          	movff	indf2,indf1
 17009                           
 17010                           ; BSR set to: 0
 17011  006BD2  2A41               	incf	_TxIndex,f,c
 17012                           
 17013                           ; BSR set to: 0
 17014  006BD4  2BC4               	incf	radioUnicast@i& (0+255),f,b
 17015  006BD6                     l16220:
 17016                           
 17017                           ; BSR set to: 0
 17018  006BD6  51C2               	movf	radioUnicast@datasize& (0+255),w,b
 17019  006BD8  5DC4               	subwf	radioUnicast@i& (0+255),w,b
 17020  006BDA  E3ED               	bnc	l16214
 17021                           
 17022                           ; BSR set to: 0
 17023                           ;Bridge.c: 138: }
 17024                           ;Bridge.c: 139: return SendPacket(0,addr.bytes,PANID,0,isSecure);
 17025  006BDC  0E61               	movlw	low radioUnicast@addr
 17026  006BDE  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 17027  006BE0  0E02               	movlw	high radioUnicast@addr
 17028  006BE2  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 17029  006BE4  C0BE  F0B0         	movff	radioUnicast@PANID,SendPacket@destinationPANID
 17030  006BE8  C0BF  F0B1         	movff	radioUnicast@PANID+1,SendPacket@destinationPANID+1
 17031  006BEC  0E00               	movlw	0
 17032  006BEE  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 17033  006BF0  C0C3  F0B3         	movff	radioUnicast@isSecure,SendPacket@SecurityEnabled
 17034  006BF4  EF8A  F02F         	goto	_SendPacket
 17035  006BF8                     __end_of_radioUnicast:
 17036                           	opt stack 0
 17037                           tblptru	equ	0xFF8
 17038                           tblptrh	equ	0xFF7
 17039                           tblptrl	equ	0xFF6
 17040                           tablat	equ	0xFF5
 17041                           prodh	equ	0xFF4
 17042                           prodl	equ	0xFF3
 17043                           intcon	equ	0xFF2
 17044                           postinc0	equ	0xFEE
 17045                           plusw0	equ	0xFEB
 17046                           fsr0h	equ	0xFEA
 17047                           fsr0l	equ	0xFE9
 17048                           wreg	equ	0xFE8
 17049                           indf1	equ	0xFE7
 17050                           postdec1	equ	0xFE5
 17051                           plusw1	equ	0xFE3
 17052                           fsr1h	equ	0xFE2
 17053                           fsr1l	equ	0xFE1
 17054                           indf2	equ	0xFDF
 17055                           postinc2	equ	0xFDE
 17056                           postdec2	equ	0xFDD
 17057                           plusw2	equ	0xFDB
 17058                           fsr2h	equ	0xFDA
 17059                           fsr2l	equ	0xFD9
 17060                           status	equ	0xFD8
 17061                           
 17062 ;; *************** function _RouterEvicted *****************
 17063 ;; Defined at:
 17064 ;;		line 223 in file "../RouteManager.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;  address         2   47[BANK0 ] struct addr_t_def
 17067 ;; Auto vars:     Size  Location     Type
 17068 ;;  r               2   51[BANK0 ] PTR struct route_info_t_
 17069 ;;		 -> routeInfo(7), 
 17070 ;;  i               1   54[BANK0 ] unsigned char 
 17071 ;;  idx             1   53[BANK0 ] unsigned char 
 17072 ;; Return value:  Size  Location     Type
 17073 ;;                  1    wreg      void 
 17074 ;; Registers used:
 17075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17076 ;; Tracked objects:
 17077 ;;		On entry : C/0
 17078 ;;		On exit  : E/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17081 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17082 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17083 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17084 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17085 ;;Total ram usage:        8 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    9
 17088 ;; This function calls:
 17089 ;;		_NetworkGetMyRouteInfo
 17090 ;;		_RouteManagerRequestUpdate
 17091 ;;		_isSameAddress
 17092 ;;		_routeInfoInit
 17093 ;;		_routingTableFind
 17094 ;; This function is called by:
 17095 ;;		_RouteManagerProcessReceive
 17096 ;;		_LE_InsertNeighbor
 17097 ;;		_LE_processReceivedMessage
 17098 ;;		_LE_RemoveNeighborDevice
 17099 ;;		_TransportManagerTask
 17100 ;;		_NetworkManagerTask
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text61
 17105  005C1E                     __ptext61:
 17106                           	opt stack 0
 17107  005C1E                     _RouterEvicted:
 17108                           	opt stack 16
 17109                           
 17110                           ;RouteManager.c: 225: uint8_t idx, i;
 17111                           ;RouteManager.c: 226: route_info_t *r=NetworkGetMyRouteInfo();
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;incstack = 0
 17115  005C1E  ECD2  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 17116  005C22  C073  F093         	movff	?_NetworkGetMyRouteInfo,RouterEvicted@r
 17117  005C26  C074  F094         	movff	?_NetworkGetMyRouteInfo+1,RouterEvicted@r+1
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;RouteManager.c: 227: idx = routingTableFind(address);
 17121  005C2A  C08F  F088         	movff	RouterEvicted@address,routingTableFind@neighbor
 17122  005C2E  C090  F089         	movff	RouterEvicted@address+1,routingTableFind@neighbor+1
 17123  005C32  EC5C  F033         	call	_routingTableFind	;wreg free
 17124  005C36  6F95               	movwf	RouterEvicted@idx& (0+255),b
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;RouteManager.c: 229: if (idx != routingTableActive)
 17128  005C38  5195               	movf	RouterEvicted@idx& (0+255),w,b
 17129  005C3A  19E7               	xorwf	_routingTableActive& (0+255),w,b
 17130  005C3C  11E8               	iorwf	(_routingTableActive+1)& (0+255),w,b
 17131  005C3E  E024               	bz	l16052
 17132                           
 17133                           ; BSR set to: 0
 17134                           ;RouteManager.c: 230: {
 17135                           ;RouteManager.c: 231: routingTableActive--;
 17136  005C40  07E7               	decf	_routingTableActive& (0+255),f,b
 17137  005C42  A0D8               	btfss	status,0,c
 17138  005C44  07E8               	decf	(_routingTableActive+1)& (0+255),f,b
 17139                           
 17140                           ; BSR set to: 0
 17141                           ;RouteManager.c: 232: for (i = idx; i < routingTableActive; i++)
 17142  005C46  C095  F096         	movff	RouterEvicted@idx,RouterEvicted@i
 17143  005C4A  D016               	goto	l16050
 17144  005C4C                     l16046:
 17145                           
 17146                           ; BSR set to: 0
 17147                           ;RouteManager.c: 233: {
 17148                           ;RouteManager.c: 234: routingTable[i] = routingTable[i + 1];
 17149  005C4C  5196               	movf	RouterEvicted@i& (0+255),w,b
 17150  005C4E  0D09               	mullw	9
 17151  005C50  0EA1               	movlw	low (_routingTable+9)
 17152  005C52  24F3               	addwf	prodl,w,c
 17153  005C54  6ED9               	movwf	fsr2l,c
 17154  005C56  0E06               	movlw	high (_routingTable+9)
 17155  005C58  20F4               	addwfc	prodh,w,c
 17156  005C5A  6EDA               	movwf	fsr2h,c
 17157  005C5C  5196               	movf	RouterEvicted@i& (0+255),w,b
 17158  005C5E  0D09               	mullw	9
 17159  005C60  0E98               	movlw	low _routingTable
 17160  005C62  24F3               	addwf	prodl,w,c
 17161  005C64  6EE1               	movwf	fsr1l,c
 17162  005C66  0E06               	movlw	high _routingTable
 17163  005C68  20F4               	addwfc	prodh,w,c
 17164  005C6A  6EE2               	movwf	fsr1h,c
 17165  005C6C  0E08               	movlw	8
 17166  005C6E                     u18751:
 17167  005C6E  CFDB FFE3          	movff	plusw2,plusw1
 17168  005C72  06E8               	decf	wreg,f,c
 17169  005C74  E2FC               	bc	u18751
 17170                           
 17171                           ; BSR set to: 0
 17172  005C76  2B96               	incf	RouterEvicted@i& (0+255),f,b
 17173  005C78                     l16050:
 17174                           
 17175                           ; BSR set to: 0
 17176  005C78  5196               	movf	RouterEvicted@i& (0+255),w,b
 17177  005C7A  6F91               	movwf	??_RouterEvicted& (0+255),b
 17178  005C7C  6B92               	clrf	(??_RouterEvicted+1)& (0+255),b
 17179  005C7E  51E7               	movf	_routingTableActive& (0+255),w,b
 17180  005C80  5D91               	subwf	??_RouterEvicted& (0+255),w,b
 17181  005C82  51E8               	movf	(_routingTableActive+1)& (0+255),w,b
 17182  005C84  5992               	subwfb	(??_RouterEvicted+1)& (0+255),w,b
 17183  005C86  E3E2               	bnc	l16046
 17184  005C88                     l16052:
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;RouteManager.c: 235: }
 17188                           ;RouteManager.c: 236: }
 17189                           ;RouteManager.c: 238: if (isSameAddress(r->parent, address))
 17190  005C88  C093  FFD9         	movff	RouterEvicted@r,fsr2l
 17191  005C8C  C094  FFDA         	movff	RouterEvicted@r+1,fsr2h
 17192  005C90  CFDE F07D          	movff	postinc2,isSameAddress@a1
 17193  005C94  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 17194  005C98  C08F  F07F         	movff	RouterEvicted@address,isSameAddress@a2
 17195  005C9C  C090  F080         	movff	RouterEvicted@address+1,isSameAddress@a2+1
 17196  005CA0  ECBA  F039         	call	_isSameAddress	;wreg free
 17197  005CA4  0900               	iorlw	0
 17198  005CA6  B4D8               	btfsc	status,2,c
 17199  005CA8  0012               	return	
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;RouteManager.c: 239: {
 17203                           ;RouteManager.c: 240: routeInfoInit(r);
 17204  005CAA  C093  F07B         	movff	RouterEvicted@r,routeInfoInit@ri
 17205  005CAE  C094  F07C         	movff	RouterEvicted@r+1,routeInfoInit@ri+1
 17206  005CB2  ECD3  F034         	call	_routeInfoInit	;wreg free
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;RouteManager.c: 241: justEvictedParent = 1;
 17210  005CB6  0E01               	movlw	1
 17211  005CB8  6E44               	movwf	_justEvictedParent,c
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;RouteManager.c: 242: RouteManagerRequestUpdate();
 17215  005CBA  EF1B  F03B         	goto	_RouteManagerRequestUpdate	;wreg free
 17216  005CBE                     __end_of_RouterEvicted:
 17217                           	opt stack 0
 17218                           tblptru	equ	0xFF8
 17219                           tblptrh	equ	0xFF7
 17220                           tblptrl	equ	0xFF6
 17221                           tablat	equ	0xFF5
 17222                           prodh	equ	0xFF4
 17223                           prodl	equ	0xFF3
 17224                           intcon	equ	0xFF2
 17225                           postinc0	equ	0xFEE
 17226                           plusw0	equ	0xFEB
 17227                           fsr0h	equ	0xFEA
 17228                           fsr0l	equ	0xFE9
 17229                           wreg	equ	0xFE8
 17230                           indf1	equ	0xFE7
 17231                           postdec1	equ	0xFE5
 17232                           plusw1	equ	0xFE3
 17233                           fsr1h	equ	0xFE2
 17234                           fsr1l	equ	0xFE1
 17235                           indf2	equ	0xFDF
 17236                           postinc2	equ	0xFDE
 17237                           postdec2	equ	0xFDD
 17238                           plusw2	equ	0xFDB
 17239                           fsr2h	equ	0xFDA
 17240                           fsr2l	equ	0xFD9
 17241                           status	equ	0xFD8
 17242                           
 17243 ;; *************** function _routingTableFind *****************
 17244 ;; Defined at:
 17245 ;;		line 204 in file "../RouteManager.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;  neighbor        2   40[BANK0 ] struct addr_t_def
 17248 ;; Auto vars:     Size  Location     Type
 17249 ;;  res             2   44[BANK0 ] unsigned int 
 17250 ;;  i               1   46[BANK0 ] unsigned char 
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  1    wreg      unsigned char 
 17253 ;; Registers used:
 17254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17255 ;; Tracked objects:
 17256 ;;		On entry : A/0
 17257 ;;		On exit  : F/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17264 ;;Total ram usage:        7 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:    8
 17267 ;; This function calls:
 17268 ;;		_isInvalidAddress
 17269 ;;		_isSameAddress
 17270 ;; This function is called by:
 17271 ;;		_RouterEvicted
 17272 ;;		_routingTableUpdateEntry
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           	psect	text62
 17277  0066B8                     __ptext62:
 17278                           	opt stack 0
 17279  0066B8                     _routingTableFind:
 17280                           	opt stack 16
 17281                           
 17282                           ;RouteManager.c: 208: if (isInvalidAddress(neighbor))
 17283                           
 17284                           ;incstack = 0
 17285  0066B8  C088  F086         	movff	routingTableFind@neighbor,isInvalidAddress@address
 17286  0066BC  C089  F087         	movff	routingTableFind@neighbor+1,isInvalidAddress@address+1
 17287  0066C0  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 17288  0066C4  0900               	iorlw	0
 17289  0066C6  E005               	bz	l1285
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;RouteManager.c: 209: {
 17293                           ;RouteManager.c: 210: res=routingTableActive;
 17294  0066C8  C0E7  F08C         	movff	_routingTableActive,routingTableFind@res
 17295  0066CC  C0E8  F08D         	movff	_routingTableActive+1,routingTableFind@res+1
 17296                           
 17297                           ;RouteManager.c: 211: }else
 17298  0066D0  D022               	goto	l15974
 17299  0066D2                     l1285:
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;RouteManager.c: 212: {
 17303                           ;RouteManager.c: 213: for (i = 0; i < routingTableActive; i++)
 17304  0066D2  6B8E               	clrf	routingTableFind@i& (0+255),b
 17305  0066D4  D015               	goto	l15972
 17306  0066D6                     l15966:
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;RouteManager.c: 214: {
 17310                           ;RouteManager.c: 215: if (isSameAddress(routingTable[i].neighbor, neighbor))
 17311  0066D6  518E               	movf	routingTableFind@i& (0+255),w,b
 17312  0066D8  0D09               	mullw	9
 17313  0066DA  0E98               	movlw	low _routingTable
 17314  0066DC  24F3               	addwf	prodl,w,c
 17315  0066DE  6ED9               	movwf	fsr2l,c
 17316  0066E0  0E06               	movlw	high _routingTable
 17317  0066E2  20F4               	addwfc	prodh,w,c
 17318  0066E4  6EDA               	movwf	fsr2h,c
 17319  0066E6  CFDE F07D          	movff	postinc2,isSameAddress@a1
 17320  0066EA  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 17321  0066EE  C088  F07F         	movff	routingTableFind@neighbor,isSameAddress@a2
 17322  0066F2  C089  F080         	movff	routingTableFind@neighbor+1,isSameAddress@a2+1
 17323  0066F6  ECBA  F039         	call	_isSameAddress	;wreg free
 17324  0066FA  0900               	iorlw	0
 17325  0066FC  E109               	bnz	l1290
 17326                           
 17327                           ; BSR set to: 0
 17328  0066FE  2B8E               	incf	routingTableFind@i& (0+255),f,b
 17329  006700                     l15972:
 17330                           
 17331                           ; BSR set to: 0
 17332  006700  518E               	movf	routingTableFind@i& (0+255),w,b
 17333  006702  6F8A               	movwf	??_routingTableFind& (0+255),b
 17334  006704  6B8B               	clrf	(??_routingTableFind+1)& (0+255),b
 17335  006706  51E7               	movf	_routingTableActive& (0+255),w,b
 17336  006708  5D8A               	subwf	??_routingTableFind& (0+255),w,b
 17337  00670A  51E8               	movf	(_routingTableActive+1)& (0+255),w,b
 17338  00670C  598B               	subwfb	(??_routingTableFind+1)& (0+255),w,b
 17339  00670E  E3E3               	bnc	l15966
 17340  006710                     l1290:
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;RouteManager.c: 217: }
 17344                           ;RouteManager.c: 218: res=i;
 17345  006710  C08E  F08C         	movff	routingTableFind@i,routingTableFind@res
 17346  006714  6B8D               	clrf	(routingTableFind@res+1)& (0+255),b
 17347  006716                     l15974:
 17348                           
 17349                           ; BSR set to: 0
 17350                           ;RouteManager.c: 219: }
 17351                           ;RouteManager.c: 220: return res;
 17352  006716  518C               	movf	routingTableFind@res& (0+255),w,b
 17353                           
 17354                           ; BSR set to: 0
 17355  006718  0012               	return		;funcret
 17356  00671A                     __end_of_routingTableFind:
 17357                           	opt stack 0
 17358                           tblptru	equ	0xFF8
 17359                           tblptrh	equ	0xFF7
 17360                           tblptrl	equ	0xFF6
 17361                           tablat	equ	0xFF5
 17362                           prodh	equ	0xFF4
 17363                           prodl	equ	0xFF3
 17364                           intcon	equ	0xFF2
 17365                           postinc0	equ	0xFEE
 17366                           plusw0	equ	0xFEB
 17367                           fsr0h	equ	0xFEA
 17368                           fsr0l	equ	0xFE9
 17369                           wreg	equ	0xFE8
 17370                           indf1	equ	0xFE7
 17371                           postdec1	equ	0xFE5
 17372                           plusw1	equ	0xFE3
 17373                           fsr1h	equ	0xFE2
 17374                           fsr1l	equ	0xFE1
 17375                           indf2	equ	0xFDF
 17376                           postinc2	equ	0xFDE
 17377                           postdec2	equ	0xFDD
 17378                           plusw2	equ	0xFDB
 17379                           fsr2h	equ	0xFDA
 17380                           fsr2l	equ	0xFD9
 17381                           status	equ	0xFD8
 17382                           
 17383 ;; *************** function _routeInfoInit *****************
 17384 ;; Defined at:
 17385 ;;		line 195 in file "../RouteManager.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;  ri              2   27[BANK0 ] PTR struct route_info_t_
 17388 ;;		 -> routeInfo(7), 
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;		None
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1    wreg      void 
 17393 ;; Registers used:
 17394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17395 ;; Tracked objects:
 17396 ;;		On entry : F/0
 17397 ;;		On exit  : F/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17404 ;;Total ram usage:        2 bytes
 17405 ;; Hardware stack levels used:    1
 17406 ;; Hardware stack levels required when called:    6
 17407 ;; This function calls:
 17408 ;;		_NetworkAddressSizeGet
 17409 ;;		_memset
 17410 ;; This function is called by:
 17411 ;;		_RouterEvicted
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           	psect	text63
 17416  0069A6                     __ptext63:
 17417                           	opt stack 0
 17418  0069A6                     _routeInfoInit:
 17419                           	opt stack 18
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;RouteManager.c: 197: memset(&ri->parent, 0xFF, NetworkAddressSizeGet());
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;incstack = 0
 17426  0069A6  C07B  F073         	movff	routeInfoInit@ri,memset@p1
 17427  0069AA  C07C  F074         	movff	routeInfoInit@ri+1,memset@p1+1
 17428  0069AE  6B76               	clrf	(memset@c+1)& (0+255),b
 17429  0069B0  6975               	setf	memset@c& (0+255),b
 17430  0069B2  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 17431  0069B6  0100               	movlb	0	; () banked
 17432  0069B8  6F77               	movwf	memset@n& (0+255),b
 17433  0069BA  6B78               	clrf	(memset@n+1)& (0+255),b
 17434  0069BC  EC2F  F039         	call	_memset	;wreg free
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;RouteManager.c: 198: ri->etx = 0;
 17438  0069C0  EE20 F002          	lfsr	2,2
 17439  0069C4  517B               	movf	routeInfoInit@ri& (0+255),w,b
 17440  0069C6  26D9               	addwf	fsr2l,f,c
 17441  0069C8  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 17442  0069CA  22DA               	addwfc	fsr2h,f,c
 17443  0069CC  6ADE               	clrf	postinc2,c
 17444  0069CE  6ADD               	clrf	postdec2,c
 17445                           
 17446                           ; BSR set to: 0
 17447                           ;RouteManager.c: 199: ri->haveHeard = 0;
 17448  0069D0  EE20 F004          	lfsr	2,4
 17449  0069D4  517B               	movf	routeInfoInit@ri& (0+255),w,b
 17450  0069D6  26D9               	addwf	fsr2l,f,c
 17451  0069D8  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 17452  0069DA  22DA               	addwfc	fsr2h,f,c
 17453  0069DC  6ADF               	clrf	indf2,c
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;RouteManager.c: 200: ri->congested = 0;
 17457  0069DE  EE20 F005          	lfsr	2,5
 17458  0069E2  517B               	movf	routeInfoInit@ri& (0+255),w,b
 17459  0069E4  26D9               	addwf	fsr2l,f,c
 17460  0069E6  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 17461  0069E8  22DA               	addwfc	fsr2h,f,c
 17462  0069EA  6ADF               	clrf	indf2,c
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;RouteManager.c: 201: ri->hasCheckedIn=0;
 17466  0069EC  EE20 F006          	lfsr	2,6
 17467  0069F0  517B               	movf	routeInfoInit@ri& (0+255),w,b
 17468  0069F2  26D9               	addwf	fsr2l,f,c
 17469  0069F4  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 17470  0069F6  22DA               	addwfc	fsr2h,f,c
 17471  0069F8  6ADF               	clrf	indf2,c
 17472                           
 17473                           ; BSR set to: 0
 17474  0069FA  0C00               	retlw	0	;funcret
 17475  0069FC                     __end_of_routeInfoInit:
 17476                           	opt stack 0
 17477                           tblptru	equ	0xFF8
 17478                           tblptrh	equ	0xFF7
 17479                           tblptrl	equ	0xFF6
 17480                           tablat	equ	0xFF5
 17481                           prodh	equ	0xFF4
 17482                           prodl	equ	0xFF3
 17483                           intcon	equ	0xFF2
 17484                           postinc0	equ	0xFEE
 17485                           plusw0	equ	0xFEB
 17486                           fsr0h	equ	0xFEA
 17487                           fsr0l	equ	0xFE9
 17488                           wreg	equ	0xFE8
 17489                           indf1	equ	0xFE7
 17490                           postdec1	equ	0xFE5
 17491                           plusw1	equ	0xFE3
 17492                           fsr1h	equ	0xFE2
 17493                           fsr1l	equ	0xFE1
 17494                           indf2	equ	0xFDF
 17495                           postinc2	equ	0xFDE
 17496                           postdec2	equ	0xFDD
 17497                           plusw2	equ	0xFDB
 17498                           fsr2h	equ	0xFDA
 17499                           fsr2l	equ	0xFD9
 17500                           status	equ	0xFD8
 17501                           
 17502 ;; *************** function _RouteManagerRequestUpdate *****************
 17503 ;; Defined at:
 17504 ;;		line 185 in file "../RouteManager.c"
 17505 ;; Parameters:    Size  Location     Type
 17506 ;;		None
 17507 ;; Auto vars:     Size  Location     Type
 17508 ;;		None
 17509 ;; Return value:  Size  Location     Type
 17510 ;;                  1    wreg      void 
 17511 ;; Registers used:
 17512 ;;		wreg, status,2
 17513 ;; Tracked objects:
 17514 ;;		On entry : F/0
 17515 ;;		On exit  : F/1
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17522 ;;Total ram usage:        0 bytes
 17523 ;; Hardware stack levels used:    1
 17524 ;; Hardware stack levels required when called:    5
 17525 ;; This function calls:
 17526 ;;		Nothing
 17527 ;; This function is called by:
 17528 ;;		_RouterEvicted
 17529 ;; This function uses a non-reentrant model
 17530 ;;
 17531                           
 17532                           	psect	text64
 17533  007636                     __ptext64:
 17534                           	opt stack 0
 17535  007636                     _RouteManagerRequestUpdate:
 17536                           	opt stack 19
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;RouteManager.c: 187: RouteMgrUpdateRequired=1;
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;incstack = 0
 17543  007636  0E01               	movlw	1
 17544  007638  0101               	movlb	1	; () banked
 17545  00763A  6FD1               	movwf	_RouteMgrUpdateRequired& (0+255),b
 17546                           
 17547                           ; BSR set to: 1
 17548  00763C  0C01               	retlw	1	;funcret
 17549  00763E                     __end_of_RouteManagerRequestUpdate:
 17550                           	opt stack 0
 17551                           tblptru	equ	0xFF8
 17552                           tblptrh	equ	0xFF7
 17553                           tblptrl	equ	0xFF6
 17554                           tablat	equ	0xFF5
 17555                           prodh	equ	0xFF4
 17556                           prodl	equ	0xFF3
 17557                           intcon	equ	0xFF2
 17558                           postinc0	equ	0xFEE
 17559                           plusw0	equ	0xFEB
 17560                           fsr0h	equ	0xFEA
 17561                           fsr0l	equ	0xFE9
 17562                           wreg	equ	0xFE8
 17563                           indf1	equ	0xFE7
 17564                           postdec1	equ	0xFE5
 17565                           plusw1	equ	0xFE3
 17566                           fsr1h	equ	0xFE2
 17567                           fsr1l	equ	0xFE1
 17568                           indf2	equ	0xFDF
 17569                           postinc2	equ	0xFDE
 17570                           postdec2	equ	0xFDD
 17571                           plusw2	equ	0xFDB
 17572                           fsr2h	equ	0xFDA
 17573                           fsr2l	equ	0xFD9
 17574                           status	equ	0xFD8
 17575                           
 17576 ;; *************** function _NetworkPrepareSendPacket *****************
 17577 ;; Defined at:
 17578 ;;		line 358 in file "../NetworkManager.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  address         2   31[BANK0 ] struct addr_t_def
 17581 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 17582 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 17583 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 17584 ;;  pType           1   35[BANK0 ] enum E200
 17585 ;;  data            2   36[BANK0 ] PTR unsigned char 
 17586 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMQ(152), NULL(0), TxBuffer(64), 
 17587 ;;  size            2   38[BANK0 ] unsigned int 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;  nHdr            2   40[BANK0 ] PTR struct net_data_head
 17590 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 17591 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 17592 ;; Return value:  Size  Location     Type
 17593 ;;                  2   31[BANK0 ] unsigned int 
 17594 ;; Registers used:
 17595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17596 ;; Tracked objects:
 17597 ;;		On entry : F/0
 17598 ;;		On exit  : F/0
 17599 ;;		Unchanged: 0/0
 17600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17601 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17604 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17605 ;;Total ram usage:       11 bytes
 17606 ;; Hardware stack levels used:    1
 17607 ;; Hardware stack levels required when called:    6
 17608 ;; This function calls:
 17609 ;;		_NetworkAddressSizeGet
 17610 ;;		_NetworkGetDeviceType
 17611 ;;		_NetworkGetParentAddress
 17612 ;;		_NetworkManagerGetMyAddress
 17613 ;;		_NetworkSequence
 17614 ;;		_memcpy
 17615 ;; This function is called by:
 17616 ;;		_TransportManagerTask
 17617 ;;		_TMSendDataToRFD
 17618 ;;		_NetworkManagerTask
 17619 ;;		_NetworkSendDiscoverRequest
 17620 ;;		_NetworkSendDiscoverResponse
 17621 ;;		_NetworkBroadcastData
 17622 ;; This function uses a non-reentrant model
 17623 ;;
 17624                           
 17625                           	psect	text65
 17626  00540E                     __ptext65:
 17627                           	opt stack 0
 17628  00540E                     _NetworkPrepareSendPacket:
 17629                           	opt stack 21
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;NetworkManager.c: 360: net_data_header_t *nHdr;
 17633                           ;NetworkManager.c: 361: nHdr=(net_data_header_t*)buffer;
 17634                           
 17635                           ; BSR set to: 1
 17636                           ;incstack = 0
 17637  00540E  C081  F088         	movff	NetworkPrepareSendPacket@buffer,NetworkPrepareSendPacket@nHdr
 17638  005412  C082  F089         	movff	NetworkPrepareSendPacket@buffer+1,NetworkPrepareSendPacket@nHdr+1
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;NetworkManager.c: 363: nHdr->Hops=0;
 17642  005416  C088  FFD9         	movff	NetworkPrepareSendPacket@nHdr,fsr2l
 17643  00541A  C089  FFDA         	movff	NetworkPrepareSendPacket@nHdr+1,fsr2h
 17644  00541E  6ADF               	clrf	indf2,c
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;NetworkManager.c: 364: nHdr->flags=(NetworkGetDeviceType() & 0x07);
 17648  005420  EE20 F003          	lfsr	2,3
 17649  005424  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17650  005426  26D9               	addwf	fsr2l,f,c
 17651  005428  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17652  00542A  22DA               	addwfc	fsr2h,f,c
 17653  00542C  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 17654  005430  0B07               	andlw	7
 17655  005432  6EDF               	movwf	indf2,c
 17656                           
 17657                           ; BSR set to: 1
 17658                           ;NetworkManager.c: 365: memcpy(&nHdr->origin,NetworkManagerGetMyAddress(),NetworkAddress
      +                          SizeGet());
 17659  005434  0E06               	movlw	6
 17660  005436  0100               	movlb	0	; () banked
 17661  005438  2588               	addwf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17662  00543A  6F75               	movwf	memcpy@d1& (0+255),b
 17663  00543C  0E00               	movlw	0
 17664  00543E  2189               	addwfc	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17665  005440  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 17666  005442  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 17667  005446  C073  F077         	movff	?_NetworkManagerGetMyAddress,memcpy@s1
 17668  00544A  C074  F078         	movff	?_NetworkManagerGetMyAddress+1,memcpy@s1+1
 17669  00544E  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 17670  005452  0100               	movlb	0	; () banked
 17671  005454  6F79               	movwf	memcpy@n& (0+255),b
 17672  005456  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 17673  005458  EC54  F035         	call	_memcpy	;wreg free
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;NetworkManager.c: 366: nHdr->target=address;
 17677  00545C  EE20 F004          	lfsr	2,4
 17678  005460  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17679  005462  26D9               	addwf	fsr2l,f,c
 17680  005464  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17681  005466  22DA               	addwfc	fsr2h,f,c
 17682  005468  C07F  FFDE         	movff	NetworkPrepareSendPacket@address,postinc2
 17683  00546C  C080  FFDD         	movff	NetworkPrepareSendPacket@address+1,postdec2
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;NetworkManager.c: 367: nHdr->sequenceNumber=NetworkSequence();
 17687  005470  EE20 F001          	lfsr	2,1
 17688  005474  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17689  005476  26D9               	addwf	fsr2l,f,c
 17690  005478  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17691  00547A  22DA               	addwfc	fsr2h,f,c
 17692  00547C  EC1F  F03B         	call	_NetworkSequence	;wreg free
 17693  005480  6EDF               	movwf	indf2,c
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;NetworkManager.c: 368: nHdr->packettype=pType;
 17697  005482  0100               	movlb	0	; () banked
 17698  005484  EE20 F002          	lfsr	2,2
 17699  005488  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17700  00548A  26D9               	addwf	fsr2l,f,c
 17701  00548C  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17702  00548E  22DA               	addwfc	fsr2h,f,c
 17703  005490  C083  FFDF         	movff	NetworkPrepareSendPacket@pType,indf2
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;NetworkManager.c: 369: nHdr->parent=NetworkGetParentAddress();
 17707  005494  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 17708  005498  0100               	movlb	0	; () banked
 17709  00549A  EE20 F008          	lfsr	2,8
 17710  00549E  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 17711  0054A0  26D9               	addwf	fsr2l,f,c
 17712  0054A2  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 17713  0054A4  22DA               	addwfc	fsr2h,f,c
 17714  0054A6  C073  FFDE         	movff	?_NetworkGetParentAddress,postinc2
 17715  0054AA  C074  FFDD         	movff	?_NetworkGetParentAddress+1,postdec2
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;NetworkManager.c: 370: if((data!=(0)) && (size>0))
 17719  0054AE  5184               	movf	NetworkPrepareSendPacket@data& (0+255),w,b
 17720  0054B0  1185               	iorwf	(NetworkPrepareSendPacket@data+1)& (0+255),w,b
 17721  0054B2  E014               	bz	l2051
 17722                           
 17723                           ; BSR set to: 0
 17724  0054B4  5186               	movf	NetworkPrepareSendPacket@size& (0+255),w,b
 17725  0054B6  1187               	iorwf	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 17726  0054B8  E011               	bz	l2051
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;NetworkManager.c: 371: {
 17730                           ;NetworkManager.c: 372: memcpy(&buffer[sizeof(net_data_header_t)],data,size);
 17731  0054BA  0E0A               	movlw	10
 17732  0054BC  2581               	addwf	NetworkPrepareSendPacket@buffer& (0+255),w,b
 17733  0054BE  6F75               	movwf	memcpy@d1& (0+255),b
 17734  0054C0  0E00               	movlw	0
 17735  0054C2  2182               	addwfc	(NetworkPrepareSendPacket@buffer+1)& (0+255),w,b
 17736  0054C4  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 17737  0054C6  C084  F077         	movff	NetworkPrepareSendPacket@data,memcpy@s1
 17738  0054CA  C085  F078         	movff	NetworkPrepareSendPacket@data+1,memcpy@s1+1
 17739  0054CE  C086  F079         	movff	NetworkPrepareSendPacket@size,memcpy@n
 17740  0054D2  C087  F07A         	movff	NetworkPrepareSendPacket@size+1,memcpy@n+1
 17741  0054D6  EC54  F035         	call	_memcpy	;wreg free
 17742                           
 17743                           ;NetworkManager.c: 373: }else
 17744  0054DA  D002               	goto	l16476
 17745  0054DC                     l2051:
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;NetworkManager.c: 374: {
 17749                           ;NetworkManager.c: 375: size=0;
 17750  0054DC  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 17751  0054DE  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 17752  0054E0                     l16476:
 17753                           
 17754                           ; BSR set to: 0
 17755                           ;NetworkManager.c: 376: }
 17756                           ;NetworkManager.c: 377: return(size+sizeof(net_data_header_t));
 17757  0054E0  0E0A               	movlw	10
 17758  0054E2  2586               	addwf	NetworkPrepareSendPacket@size& (0+255),w,b
 17759  0054E4  6F7F               	movwf	?_NetworkPrepareSendPacket& (0+255),b
 17760  0054E6  0E00               	movlw	0
 17761  0054E8  2187               	addwfc	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 17762  0054EA  6F80               	movwf	(?_NetworkPrepareSendPacket+1)& (0+255),b
 17763                           
 17764                           ; BSR set to: 0
 17765  0054EC  0012               	return		;funcret
 17766  0054EE                     __end_of_NetworkPrepareSendPacket:
 17767                           	opt stack 0
 17768                           tblptru	equ	0xFF8
 17769                           tblptrh	equ	0xFF7
 17770                           tblptrl	equ	0xFF6
 17771                           tablat	equ	0xFF5
 17772                           prodh	equ	0xFF4
 17773                           prodl	equ	0xFF3
 17774                           intcon	equ	0xFF2
 17775                           postinc0	equ	0xFEE
 17776                           plusw0	equ	0xFEB
 17777                           fsr0h	equ	0xFEA
 17778                           fsr0l	equ	0xFE9
 17779                           wreg	equ	0xFE8
 17780                           indf1	equ	0xFE7
 17781                           postdec1	equ	0xFE5
 17782                           plusw1	equ	0xFE3
 17783                           fsr1h	equ	0xFE2
 17784                           fsr1l	equ	0xFE1
 17785                           indf2	equ	0xFDF
 17786                           postinc2	equ	0xFDE
 17787                           postdec2	equ	0xFDD
 17788                           plusw2	equ	0xFDB
 17789                           fsr2h	equ	0xFDA
 17790                           fsr2l	equ	0xFD9
 17791                           status	equ	0xFD8
 17792                           
 17793 ;; *************** function _NetworkSequence *****************
 17794 ;; Defined at:
 17795 ;;		line 270 in file "../NetworkManager.c"
 17796 ;; Parameters:    Size  Location     Type
 17797 ;;		None
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;		None
 17800 ;; Return value:  Size  Location     Type
 17801 ;;                  1    wreg      unsigned char 
 17802 ;; Registers used:
 17803 ;;		wreg, status,2, status,0
 17804 ;; Tracked objects:
 17805 ;;		On entry : F/0
 17806 ;;		On exit  : F/1
 17807 ;;		Unchanged: 0/0
 17808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;Total ram usage:        0 bytes
 17814 ;; Hardware stack levels used:    1
 17815 ;; Hardware stack levels required when called:    5
 17816 ;; This function calls:
 17817 ;;		Nothing
 17818 ;; This function is called by:
 17819 ;;		_NetworkPrepareSendPacket
 17820 ;; This function uses a non-reentrant model
 17821 ;;
 17822                           
 17823                           	psect	text66
 17824  00763E                     __ptext66:
 17825                           	opt stack 0
 17826  00763E                     _NetworkSequence:
 17827                           	opt stack 21
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;NetworkManager.c: 272: return(NetSeq++);
 17831                           
 17832                           ; BSR set to: 0
 17833                           ;incstack = 0
 17834  00763E  0101               	movlb	1	; () banked
 17835  007640  2BCE               	incf	_NetSeq& (0+255),f,b
 17836  007642  05CE               	decf	_NetSeq& (0+255),w,b
 17837                           
 17838                           ; BSR set to: 1
 17839  007644  0012               	return		;funcret
 17840  007646                     __end_of_NetworkSequence:
 17841                           	opt stack 0
 17842                           tblptru	equ	0xFF8
 17843                           tblptrh	equ	0xFF7
 17844                           tblptrl	equ	0xFF6
 17845                           tablat	equ	0xFF5
 17846                           prodh	equ	0xFF4
 17847                           prodl	equ	0xFF3
 17848                           intcon	equ	0xFF2
 17849                           postinc0	equ	0xFEE
 17850                           plusw0	equ	0xFEB
 17851                           fsr0h	equ	0xFEA
 17852                           fsr0l	equ	0xFE9
 17853                           wreg	equ	0xFE8
 17854                           indf1	equ	0xFE7
 17855                           postdec1	equ	0xFE5
 17856                           plusw1	equ	0xFE3
 17857                           fsr1h	equ	0xFE2
 17858                           fsr1l	equ	0xFE1
 17859                           indf2	equ	0xFDF
 17860                           postinc2	equ	0xFDE
 17861                           postdec2	equ	0xFDD
 17862                           plusw2	equ	0xFDB
 17863                           fsr2h	equ	0xFDA
 17864                           fsr2l	equ	0xFD9
 17865                           status	equ	0xFD8
 17866                           
 17867 ;; *************** function _CoordinatorGenericAddress *****************
 17868 ;; Defined at:
 17869 ;;		line 255 in file "../NetworkManager.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;		None
 17872 ;; Auto vars:     Size  Location     Type
 17873 ;;		None
 17874 ;; Return value:  Size  Location     Type
 17875 ;;                  2   27[BANK0 ] struct addr_t_def
 17876 ;; Registers used:
 17877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17878 ;; Tracked objects:
 17879 ;;		On entry : 8/0
 17880 ;;		On exit  : F/0
 17881 ;;		Unchanged: 0/0
 17882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17887 ;;Total ram usage:        2 bytes
 17888 ;; Hardware stack levels used:    1
 17889 ;; Hardware stack levels required when called:    6
 17890 ;; This function calls:
 17891 ;;		_NetworkAddressSizeGet
 17892 ;;		_memset
 17893 ;; This function is called by:
 17894 ;;		_radioReceivedPacket
 17895 ;;		_NetworkUnicastData
 17896 ;;		_TransportManagerTask
 17897 ;;		_NetworkManagerTask
 17898 ;; This function uses a non-reentrant model
 17899 ;;
 17900                           
 17901                           	psect	text67
 17902  007328                     __ptext67:
 17903                           	opt stack 0
 17904  007328                     _CoordinatorGenericAddress:
 17905                           	opt stack 22
 17906                           
 17907                           ;NetworkManager.c: 257: static addr_t address;
 17908                           ;NetworkManager.c: 261: memset(address.bytes,0x00,NetworkAddressSizeGet());
 17909                           
 17910                           ; BSR set to: 1
 17911                           ;incstack = 0
 17912  007328  0EE4               	movlw	low CoordinatorGenericAddress@address
 17913  00732A  0100               	movlb	0	; () banked
 17914  00732C  6F73               	movwf	memset@p1& (0+255),b
 17915  00732E  0E01               	movlw	high CoordinatorGenericAddress@address
 17916  007330  6F74               	movwf	(memset@p1+1)& (0+255),b
 17917  007332  6B76               	clrf	(memset@c+1)& (0+255),b
 17918  007334  6B75               	clrf	memset@c& (0+255),b
 17919  007336  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 17920  00733A  0100               	movlb	0	; () banked
 17921  00733C  6F77               	movwf	memset@n& (0+255),b
 17922  00733E  6B78               	clrf	(memset@n+1)& (0+255),b
 17923  007340  EC2F  F039         	call	_memset	;wreg free
 17924                           
 17925                           ; BSR set to: 0
 17926                           ;NetworkManager.c: 262: return(address);
 17927  007344  C1E4  F07B         	movff	CoordinatorGenericAddress@address,?_CoordinatorGenericAddress
 17928  007348  C1E5  F07C         	movff	CoordinatorGenericAddress@address+1,?_CoordinatorGenericAddress+1
 17929                           
 17930                           ; BSR set to: 0
 17931  00734C  0012               	return		;funcret
 17932  00734E                     __end_of_CoordinatorGenericAddress:
 17933                           	opt stack 0
 17934                           tblptru	equ	0xFF8
 17935                           tblptrh	equ	0xFF7
 17936                           tblptrl	equ	0xFF6
 17937                           tablat	equ	0xFF5
 17938                           prodh	equ	0xFF4
 17939                           prodl	equ	0xFF3
 17940                           intcon	equ	0xFF2
 17941                           postinc0	equ	0xFEE
 17942                           plusw0	equ	0xFEB
 17943                           fsr0h	equ	0xFEA
 17944                           fsr0l	equ	0xFE9
 17945                           wreg	equ	0xFE8
 17946                           indf1	equ	0xFE7
 17947                           postdec1	equ	0xFE5
 17948                           plusw1	equ	0xFE3
 17949                           fsr1h	equ	0xFE2
 17950                           fsr1l	equ	0xFE1
 17951                           indf2	equ	0xFDF
 17952                           postinc2	equ	0xFDE
 17953                           postdec2	equ	0xFDD
 17954                           plusw2	equ	0xFDB
 17955                           fsr2h	equ	0xFDA
 17956                           fsr2l	equ	0xFD9
 17957                           status	equ	0xFD8
 17958                           
 17959 ;; *************** function _RouteManagerTask *****************
 17960 ;; Defined at:
 17961 ;;		line 36 in file "../RouteManager.c"
 17962 ;; Parameters:    Size  Location     Type
 17963 ;;		None
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;		None
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      void 
 17968 ;; Registers used:
 17969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : F/1
 17972 ;;		On exit  : F/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;Total ram usage:        0 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:   12
 17982 ;; This function calls:
 17983 ;;		_MSTickGet
 17984 ;;		_MSTickGetDiffNow
 17985 ;;		_RouteManagerPerformUpdate
 17986 ;; This function is called by:
 17987 ;;		_NetworkManagerTask
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991                           	psect	text68
 17992  006D7A                     __ptext68:
 17993                           	opt stack 0
 17994  006D7A                     _RouteManagerTask:
 17995                           	opt stack 15
 17996                           
 17997                           ; BSR set to: 1
 17998                           ;RouteManager.c: 38: if( (RouteMgrUpdateRequired==1) || (MSTickGetDiffNow(tRouteMgr)>((S
      +                          PAN)50*1000ULL)) )
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;incstack = 0
 18002  006D7A  05D1               	decf	_RouteMgrUpdateRequired& (0+255),w,b
 18003  006D7C  E014               	bz	l17600
 18004                           
 18005                           ; BSR set to: 1
 18006  006D7E  EE22  F01C         	lfsr	2,_tRouteMgr
 18007  006D82  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 18008  006D86  0E07               	movlw	7
 18009  006D88                     u21071:
 18010  006D88  CFDB FFEB          	movff	plusw2,plusw0
 18011  006D8C  06E8               	decf	wreg,f,c
 18012  006D8E  E2FC               	bc	u21071
 18013  006D90  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 18014  006D94  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 18015  006D96  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 18016  006D98  E106               	bnz	u21080
 18017  006D9A  0E51               	movlw	81
 18018  006D9C  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 18019  006D9E  0EC3               	movlw	195
 18020  006DA0  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 18021  006DA2  A0D8               	btfss	status,0,c
 18022  006DA4  0012               	return	
 18023  006DA6                     u21080:
 18024  006DA6                     l17600:
 18025                           
 18026                           ;RouteManager.c: 39: {
 18027                           ;RouteManager.c: 40: RouteManagerPerformUpdate();
 18028  006DA6  EC1D  F00B         	call	_RouteManagerPerformUpdate	;wreg free
 18029                           
 18030                           ;RouteManager.c: 41: RouteMgrUpdateRequired=0;
 18031  006DAA  0101               	movlb	1	; () banked
 18032  006DAC  6BD1               	clrf	_RouteMgrUpdateRequired& (0+255),b
 18033                           
 18034                           ; BSR set to: 1
 18035                           ;RouteManager.c: 42: tRouteMgr=MSTickGet();
 18036  006DAE  EC4F  F038         	call	_MSTickGet	;wreg free
 18037  006DB2  EE22  F01C         	lfsr	2,_tRouteMgr
 18038  006DB6  0E07               	movlw	7
 18039  006DB8                     u21091:
 18040  006DB8  CFEB FFDB          	movff	plusw0,plusw2
 18041  006DBC  06E8               	decf	wreg,f,c
 18042  006DBE  E2FC               	bc	u21091
 18043                           
 18044                           ; BSR set to: 0
 18045  006DC0  0012               	return		;funcret
 18046  006DC2                     __end_of_RouteManagerTask:
 18047                           	opt stack 0
 18048                           tblptru	equ	0xFF8
 18049                           tblptrh	equ	0xFF7
 18050                           tblptrl	equ	0xFF6
 18051                           tablat	equ	0xFF5
 18052                           prodh	equ	0xFF4
 18053                           prodl	equ	0xFF3
 18054                           intcon	equ	0xFF2
 18055                           postinc0	equ	0xFEE
 18056                           plusw0	equ	0xFEB
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           indf1	equ	0xFE7
 18061                           postdec1	equ	0xFE5
 18062                           plusw1	equ	0xFE3
 18063                           fsr1h	equ	0xFE2
 18064                           fsr1l	equ	0xFE1
 18065                           indf2	equ	0xFDF
 18066                           postinc2	equ	0xFDE
 18067                           postdec2	equ	0xFDD
 18068                           plusw2	equ	0xFDB
 18069                           fsr2h	equ	0xFDA
 18070                           fsr2l	equ	0xFD9
 18071                           status	equ	0xFD8
 18072                           
 18073 ;; *************** function _RouteManagerPerformUpdate *****************
 18074 ;; Defined at:
 18075 ;;		line 46 in file "../RouteManager.c"
 18076 ;; Parameters:    Size  Location     Type
 18077 ;;		None
 18078 ;; Auto vars:     Size  Location     Type
 18079 ;;  r               2   67[BANK0 ] PTR struct route_info_t_
 18080 ;;		 -> routeInfo(7), 
 18081 ;;  entry           2   65[BANK0 ] PTR struct routing_table
 18082 ;;		 -> routingTable(90), 
 18083 ;;  minEtx          2   63[BANK0 ] unsigned int 
 18084 ;;  best            2   61[BANK0 ] PTR struct routing_table
 18085 ;;		 -> routingTable(90), NULL(0), 
 18086 ;;  currentEtx      2   59[BANK0 ] unsigned int 
 18087 ;;  pathEtx         2   57[BANK0 ] unsigned int 
 18088 ;;  i               2   55[BANK0 ] unsigned int 
 18089 ;;  linkEtx         2   53[BANK0 ] unsigned int 
 18090 ;; Return value:  Size  Location     Type
 18091 ;;                  1    wreg      void 
 18092 ;; Registers used:
 18093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18094 ;; Tracked objects:
 18095 ;;		On entry : E/0
 18096 ;;		On exit  : E/0
 18097 ;;		Unchanged: 0/0
 18098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18101 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18102 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18103 ;;Total ram usage:       18 bytes
 18104 ;; Hardware stack levels used:    1
 18105 ;; Hardware stack levels required when called:   11
 18106 ;; This function calls:
 18107 ;;		_BeaconManagerTrigger
 18108 ;;		_LELinkQualityGet
 18109 ;;		_LE_ClearDLQ
 18110 ;;		_LE_PinNeighbor
 18111 ;;		_LE_UnpinNeighbor
 18112 ;;		_NetworkGetDeviceType
 18113 ;;		_NetworkGetMyRouteInfo
 18114 ;;		_NetworkManagerGetMyAddress
 18115 ;;		_TransportManagerNoRoute
 18116 ;;		_TransportManagerRouteFound
 18117 ;;		_isInvalidAddress
 18118 ;;		_isSameAddress
 18119 ;;		_passLinkEtxThreshold
 18120 ;; This function is called by:
 18121 ;;		_RouteManagerTask
 18122 ;;		_NetworkManagerTask
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text69
 18127  00163A                     __ptext69:
 18128                           	opt stack 0
 18129  00163A                     _RouteManagerPerformUpdate:
 18130                           	opt stack 15
 18131                           
 18132                           ;RouteManager.c: 48: uint16_t i;
 18133                           ;RouteManager.c: 49: routing_table_entry_t* entry;
 18134                           ;RouteManager.c: 50: routing_table_entry_t* best;
 18135                           ;RouteManager.c: 51: uint16_t minEtx;
 18136                           ;RouteManager.c: 52: uint16_t currentEtx;
 18137                           ;RouteManager.c: 53: uint16_t linkEtx, pathEtx;
 18138                           ;RouteManager.c: 54: route_info_t *r=NetworkGetMyRouteInfo();
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;incstack = 0
 18142  00163A  ECD2  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 18143  00163E  C073  F0A3         	movff	?_NetworkGetMyRouteInfo,RouteManagerPerformUpdate@r
 18144  001642  C074  F0A4         	movff	?_NetworkGetMyRouteInfo+1,RouteManagerPerformUpdate@r+1
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;RouteManager.c: 56: if(NetworkGetDeviceType()!=DeviceCoordinator)
 18148  001646  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 18149  00164A  0900               	iorlw	0
 18150  00164C  B4D8               	btfsc	status,2,c
 18151  00164E  0012               	return	
 18152                           
 18153                           ; BSR set to: 1
 18154                           ;RouteManager.c: 57: {
 18155                           ;RouteManager.c: 58: best = (0);
 18156  001650  0100               	movlb	0	; () banked
 18157  001652  6B9D               	clrf	RouteManagerPerformUpdate@best& (0+255),b
 18158  001654  6B9E               	clrf	(RouteManagerPerformUpdate@best+1)& (0+255),b
 18159                           
 18160                           ;RouteManager.c: 60: minEtx = 0xffff;
 18161  001656  699F               	setf	RouteManagerPerformUpdate@minEtx& (0+255),b
 18162  001658  69A0               	setf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),b
 18163                           
 18164                           ;RouteManager.c: 62: currentEtx = 0xffff;
 18165  00165A  699B               	setf	RouteManagerPerformUpdate@currentEtx& (0+255),b
 18166  00165C  699C               	setf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),b
 18167                           
 18168                           ;RouteManager.c: 65: for (i = 0; i < routingTableActive; i++)
 18169  00165E  6B97               	clrf	RouteManagerPerformUpdate@i& (0+255),b
 18170  001660  6B98               	clrf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 18171  001662  D0B5               	goto	l16898
 18172  001664                     l16872:
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;RouteManager.c: 66: {
 18176                           ;RouteManager.c: 67: entry = &routingTable[i];
 18177  001664  0E09               	movlw	9
 18178  001666  0397               	mulwf	RouteManagerPerformUpdate@i& (0+255),b
 18179  001668  CFF3 F093          	movff	prodl,??_RouteManagerPerformUpdate
 18180  00166C  CFF4 F094          	movff	prodh,??_RouteManagerPerformUpdate+1
 18181  001670  0398               	mulwf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 18182  001672  50F3               	movf	prodl,w,c
 18183  001674  2794               	addwf	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 18184  001676  0E98               	movlw	low _routingTable
 18185  001678  2593               	addwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18186  00167A  6FA1               	movwf	RouteManagerPerformUpdate@entry& (0+255),b
 18187  00167C  0E06               	movlw	high _routingTable
 18188  00167E  2194               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18189  001680  6FA2               	movwf	(RouteManagerPerformUpdate@entry+1)& (0+255),b
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;RouteManager.c: 70: if (isInvalidAddress(entry->info.parent) || (isSameAddress(entry->i
      +                          nfo.parent, *NetworkManagerGetMyAddress())))
 18193  001682  EE20 F002          	lfsr	2,2
 18194  001686  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18195  001688  26D9               	addwf	fsr2l,f,c
 18196  00168A  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18197  00168C  22DA               	addwfc	fsr2h,f,c
 18198  00168E  CFDE F086          	movff	postinc2,isInvalidAddress@address
 18199  001692  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 18200  001696  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 18201  00169A  0900               	iorlw	0
 18202  00169C  E001 D095          	bnz	l16896
 18203                           
 18204                           ; BSR set to: 0
 18205  0016A0  EE20 F002          	lfsr	2,2
 18206  0016A4  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18207  0016A6  26D9               	addwf	fsr2l,f,c
 18208  0016A8  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18209  0016AA  22DA               	addwfc	fsr2h,f,c
 18210  0016AC  CFDE F07D          	movff	postinc2,isSameAddress@a1
 18211  0016B0  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 18212  0016B4  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 18213  0016B8  C073  FFD9         	movff	?_NetworkManagerGetMyAddress,fsr2l
 18214  0016BC  C074  FFDA         	movff	?_NetworkManagerGetMyAddress+1,fsr2h
 18215  0016C0  CFDE F07F          	movff	postinc2,isSameAddress@a2
 18216  0016C4  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 18217  0016C8  ECBA  F039         	call	_isSameAddress	;wreg free
 18218  0016CC  0900               	iorlw	0
 18219  0016CE  E17D               	bnz	l16896
 18220                           
 18221                           ; BSR set to: 0
 18222                           ;RouteManager.c: 74: {
 18223                           ;RouteManager.c: 75: linkEtx = LELinkQualityGet(entry->neighbor,0);
 18224  0016D0  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18225  0016D4  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18226  0016D8  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 18227  0016DC  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 18228  0016E0  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
 18229  0016E2  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
 18230  0016E4  EC87  F032         	call	_LELinkQualityGet	;wreg free
 18231  0016E8  C085  F095         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@linkEtx
 18232  0016EC  C086  F096         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@linkEtx+1
 18233                           
 18234                           ;RouteManager.c: 76: pathEtx = LELinkQualityGet(entry->neighbor,entry->info.etx);
 18235  0016F0  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18236  0016F4  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18237  0016F8  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 18238  0016FC  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 18239  001700  0100               	movlb	0	; () banked
 18240  001702  EE20 F004          	lfsr	2,4
 18241  001706  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18242  001708  26D9               	addwf	fsr2l,f,c
 18243  00170A  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18244  00170C  22DA               	addwfc	fsr2h,f,c
 18245  00170E  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 18246  001712  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 18247  001716  EC87  F032         	call	_LELinkQualityGet	;wreg free
 18248  00171A  C085  F099         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@pathEtx
 18249  00171E  C086  F09A         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@pathEtx+1
 18250                           
 18251                           ;RouteManager.c: 78: if (isSameAddress(entry->neighbor, r->parent))
 18252  001722  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18253  001726  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18254  00172A  CFDE F07D          	movff	postinc2,isSameAddress@a1
 18255  00172E  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 18256  001732  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18257  001736  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18258  00173A  CFDE F07F          	movff	postinc2,isSameAddress@a2
 18259  00173E  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 18260  001742  ECBA  F039         	call	_isSameAddress	;wreg free
 18261  001746  0900               	iorlw	0
 18262  001748  E023               	bz	l16886
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;RouteManager.c: 79: {
 18266                           ;RouteManager.c: 80: currentEtx = pathEtx;
 18267  00174A  C099  F09B         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@currentEtx
 18268  00174E  C09A  F09C         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@currentEtx+1
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;RouteManager.c: 82: r->etx = entry->info.etx;
 18272  001752  EE20 F004          	lfsr	2,4
 18273  001756  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18274  001758  26D9               	addwf	fsr2l,f,c
 18275  00175A  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18276  00175C  22DA               	addwfc	fsr2h,f,c
 18277  00175E  EE10 F002          	lfsr	1,2
 18278  001762  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18279  001764  26E1               	addwf	fsr1l,f,c
 18280  001766  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18281  001768  22E2               	addwfc	fsr1h,f,c
 18282  00176A  CFDE FFE6          	movff	postinc2,postinc1
 18283  00176E  CFDD FFE5          	movff	postdec2,postdec1
 18284                           
 18285                           ;RouteManager.c: 83: r->congested = entry->info.congested;
 18286  001772  EE20 F007          	lfsr	2,7
 18287  001776  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18288  001778  26D9               	addwf	fsr2l,f,c
 18289  00177A  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18290  00177C  22DA               	addwfc	fsr2h,f,c
 18291  00177E  EE10 F005          	lfsr	1,5
 18292  001782  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18293  001784  26E1               	addwf	fsr1l,f,c
 18294  001786  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18295  001788  22E2               	addwfc	fsr1h,f,c
 18296  00178A  CFDF FFE7          	movff	indf2,indf1
 18297                           
 18298                           ;RouteManager.c: 84: }else if((entry->info.congested) || (passLinkEtxThreshold(linkEtx)=
      +                          =0) )
 18299  00178E  D01D               	goto	l16896
 18300  001790                     l16886:
 18301                           
 18302                           ; BSR set to: 0
 18303  001790  EE20 F007          	lfsr	2,7
 18304  001794  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18305  001796  26D9               	addwf	fsr2l,f,c
 18306  001798  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18307  00179A  22DA               	addwfc	fsr2h,f,c
 18308  00179C  50DF               	movf	indf2,w,c
 18309  00179E  E115               	bnz	l16896
 18310                           
 18311                           ; BSR set to: 0
 18312  0017A0  C095  F073         	movff	RouteManagerPerformUpdate@linkEtx,passLinkEtxThreshold@etx
 18313  0017A4  C096  F074         	movff	RouteManagerPerformUpdate@linkEtx+1,passLinkEtxThreshold@etx+1
 18314  0017A8  ECB2  F03A         	call	_passLinkEtxThreshold	;wreg free
 18315  0017AC  0900               	iorlw	0
 18316  0017AE  E00D               	bz	l16896
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;RouteManager.c: 88: {
 18320                           ;RouteManager.c: 113: if (pathEtx < minEtx)
 18321  0017B0  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18322  0017B2  5D99               	subwf	RouteManagerPerformUpdate@pathEtx& (0+255),w,b
 18323  0017B4  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18324  0017B6  599A               	subwfb	(RouteManagerPerformUpdate@pathEtx+1)& (0+255),w,b
 18325  0017B8  E208               	bc	l16896
 18326                           
 18327                           ; BSR set to: 0
 18328                           ;RouteManager.c: 115: {
 18329                           ;RouteManager.c: 116: minEtx = pathEtx;
 18330  0017BA  C099  F09F         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@minEtx
 18331  0017BE  C09A  F0A0         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@minEtx+1
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;RouteManager.c: 117: best = entry;
 18335  0017C2  C0A1  F09D         	movff	RouteManagerPerformUpdate@entry,RouteManagerPerformUpdate@best
 18336  0017C6  C0A2  F09E         	movff	RouteManagerPerformUpdate@entry+1,RouteManagerPerformUpdate@best+1
 18337  0017CA                     l16896:
 18338                           
 18339                           ; BSR set to: 0
 18340  0017CA  4B97               	infsnz	RouteManagerPerformUpdate@i& (0+255),f,b
 18341  0017CC  2B98               	incf	(RouteManagerPerformUpdate@i+1)& (0+255),f,b
 18342  0017CE                     l16898:
 18343                           
 18344                           ; BSR set to: 0
 18345  0017CE  51E7               	movf	_routingTableActive& (0+255),w,b
 18346  0017D0  5D97               	subwf	RouteManagerPerformUpdate@i& (0+255),w,b
 18347  0017D2  51E8               	movf	(_routingTableActive+1)& (0+255),w,b
 18348  0017D4  5998               	subwfb	(RouteManagerPerformUpdate@i+1)& (0+255),w,b
 18349  0017D6  E201 D745          	bnc	l16872
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;RouteManager.c: 118: }
 18353                           ;RouteManager.c: 119: }
 18354                           ;RouteManager.c: 120: }
 18355                           ;RouteManager.c: 121: }
 18356                           ;RouteManager.c: 136: if (minEtx != 0xffff)
 18357  0017DA  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18358  0017DC  E103               	bnz	u19950
 18359  0017DE  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18360  0017E0  E101 D07F          	bz	l16922
 18361  0017E4                     u19950:
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;RouteManager.c: 137: {
 18365                           ;RouteManager.c: 138: if (currentEtx == 0xffff ||
 18366                           ;RouteManager.c: 139: ((1 == r->congested) && (minEtx < (r->etx + 10))) ||
 18367                           ;RouteManager.c: 140: ((minEtx + ParentSwitchThreshold) < currentEtx) )
 18368  0017E4  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18369  0017E6  E102               	bnz	u19960
 18370  0017E8  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18371  0017EA  E026               	bz	l16910
 18372  0017EC                     u19960:
 18373                           
 18374                           ; BSR set to: 0
 18375  0017EC  EE20 F005          	lfsr	2,5
 18376  0017F0  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18377  0017F2  26D9               	addwf	fsr2l,f,c
 18378  0017F4  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18379  0017F6  22DA               	addwfc	fsr2h,f,c
 18380  0017F8  04DE               	decf	postinc2,w,c
 18381  0017FA  E113               	bnz	l16908
 18382                           
 18383                           ; BSR set to: 0
 18384  0017FC  EE20 F002          	lfsr	2,2
 18385  001800  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18386  001802  26D9               	addwf	fsr2l,f,c
 18387  001804  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18388  001806  22DA               	addwfc	fsr2h,f,c
 18389  001808  CFDE F093          	movff	postinc2,??_RouteManagerPerformUpdate
 18390  00180C  CFDD F094          	movff	postdec2,??_RouteManagerPerformUpdate+1
 18391  001810  0E0A               	movlw	10
 18392  001812  2793               	addwf	??_RouteManagerPerformUpdate& (0+255),f,b
 18393  001814  0E00               	movlw	0
 18394  001816  2394               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 18395  001818  5193               	movf	??_RouteManagerPerformUpdate& (0+255),w,b
 18396  00181A  5D9F               	subwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18397  00181C  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18398  00181E  59A0               	subwfb	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18399  001820  E30B               	bnc	l16910
 18400  001822                     l16908:
 18401                           
 18402                           ; BSR set to: 0
 18403  001822  0E0F               	movlw	15
 18404  001824  259F               	addwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18405  001826  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 18406  001828  0E00               	movlw	0
 18407  00182A  21A0               	addwfc	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18408  00182C  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 18409  00182E  519B               	movf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18410  001830  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18411  001832  519C               	movf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18412  001834  5994               	subwfb	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18413  001836  E255               	bc	l16922
 18414  001838                     l16910:
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;RouteManager.c: 141: {
 18418                           ;RouteManager.c: 148: LE_UnpinNeighbor(r->parent);
 18419  001838  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18420  00183C  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18421  001840  CFDE F085          	movff	postinc2,LE_UnpinNeighbor@neighbor
 18422  001844  CFDD F086          	movff	postdec2,LE_UnpinNeighbor@neighbor+1
 18423  001848  ECBF  F037         	call	_LE_UnpinNeighbor	;wreg free
 18424                           
 18425                           ;RouteManager.c: 149: LE_PinNeighbor(best->neighbor);
 18426  00184C  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18427  001850  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18428  001854  CFDE F085          	movff	postinc2,LE_PinNeighbor@neighbor
 18429  001858  CFDD F086          	movff	postdec2,LE_PinNeighbor@neighbor+1
 18430  00185C  ECDD  F037         	call	_LE_PinNeighbor	;wreg free
 18431                           
 18432                           ;RouteManager.c: 150: LE_ClearDLQ(best->neighbor);
 18433  001860  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18434  001864  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18435  001868  CFDE F085          	movff	postinc2,LE_ClearDLQ@neighbor
 18436  00186C  CFDD F086          	movff	postdec2,LE_ClearDLQ@neighbor+1
 18437  001870  ECA9  F035         	call	_LE_ClearDLQ	;wreg free
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;RouteManager.c: 152: r->parent = best->neighbor;
 18441  001874  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18442  001878  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18443  00187C  C0A3  FFE1         	movff	RouteManagerPerformUpdate@r,fsr1l
 18444  001880  C0A4  FFE2         	movff	RouteManagerPerformUpdate@r+1,fsr1h
 18445  001884  CFDE FFE6          	movff	postinc2,postinc1
 18446  001888  CFDD FFE5          	movff	postdec2,postdec1
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;RouteManager.c: 153: r->etx = best->info.etx;
 18450  00188C  EE20 F004          	lfsr	2,4
 18451  001890  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 18452  001892  26D9               	addwf	fsr2l,f,c
 18453  001894  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 18454  001896  22DA               	addwfc	fsr2h,f,c
 18455  001898  EE10 F002          	lfsr	1,2
 18456  00189C  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18457  00189E  26E1               	addwf	fsr1l,f,c
 18458  0018A0  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18459  0018A2  22E2               	addwfc	fsr1h,f,c
 18460  0018A4  CFDE FFE6          	movff	postinc2,postinc1
 18461  0018A8  CFDD FFE5          	movff	postdec2,postdec1
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;RouteManager.c: 154: r->congested = best->info.congested;
 18465  0018AC  EE20 F007          	lfsr	2,7
 18466  0018B0  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 18467  0018B2  26D9               	addwf	fsr2l,f,c
 18468  0018B4  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 18469  0018B6  22DA               	addwfc	fsr2h,f,c
 18470  0018B8  EE10 F005          	lfsr	1,5
 18471  0018BC  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18472  0018BE  26E1               	addwf	fsr1l,f,c
 18473  0018C0  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18474  0018C2  22E2               	addwfc	fsr1h,f,c
 18475  0018C4  CFDF FFE7          	movff	indf2,indf1
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;RouteManager.c: 155: if (currentEtx - minEtx > 20)
 18479  0018C8  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18480  0018CA  5D9B               	subwf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18481  0018CC  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 18482  0018CE  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18483  0018D0  599C               	subwfb	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18484  0018D2  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 18485  0018D4  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18486  0018D6  E103               	bnz	u20000
 18487  0018D8  0E15               	movlw	21
 18488  0018DA  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18489  0018DC  E302               	bnc	l16922
 18490  0018DE                     u20000:
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;RouteManager.c: 156: {
 18494                           ;RouteManager.c: 157: BeaconManagerTrigger();
 18495  0018DE  EC32  F03B         	call	_BeaconManagerTrigger	;wreg free
 18496  0018E2                     l16922:
 18497                           
 18498                           ;RouteManager.c: 158: }
 18499                           ;RouteManager.c: 159: }
 18500                           ;RouteManager.c: 160: }
 18501                           ;RouteManager.c: 165: if (justEvictedParent && isInvalidAddress(r->parent))
 18502  0018E2  5044               	movf	_justEvictedParent,w,c
 18503  0018E4  E00F               	bz	l16928
 18504  0018E6  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18505  0018EA  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18506  0018EE  CFDE F086          	movff	postinc2,isInvalidAddress@address
 18507  0018F2  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 18508  0018F6  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 18509  0018FA  0900               	iorlw	0
 18510  0018FC  E003               	bz	l16928
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;RouteManager.c: 166: {
 18514                           ;RouteManager.c: 171: TransportManagerNoRoute();
 18515  0018FE  EC45  F03B         	call	_TransportManagerNoRoute	;wreg free
 18516                           
 18517                           ;RouteManager.c: 172: }else if (!justEvictedParent && currentEtx == 0xffff && minEtx != 
      +                          0xffff)
 18518  001902  D00D               	goto	l16936
 18519  001904                     l16928:
 18520  001904  5044               	movf	_justEvictedParent,w,c
 18521  001906  E10B               	bnz	l16936
 18522  001908  0100               	movlb	0	; () banked
 18523  00190A  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18524  00190C  E108               	bnz	l16936
 18525  00190E  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18526  001910  E106               	bnz	l16936
 18527                           
 18528                           ; BSR set to: 0
 18529  001912  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18530  001914  E102               	bnz	u20050
 18531  001916  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18532  001918  E002               	bz	l16936
 18533  00191A                     u20050:
 18534                           
 18535                           ; BSR set to: 0
 18536                           ;RouteManager.c: 173: {
 18537                           ;RouteManager.c: 178: TransportManagerRouteFound();
 18538  00191A  EC44  F03B         	call	_TransportManagerRouteFound	;wreg free
 18539  00191E                     l16936:
 18540                           
 18541                           ;RouteManager.c: 179: }
 18542                           ;RouteManager.c: 180: justEvictedParent = 0;
 18543  00191E  6A44               	clrf	_justEvictedParent,c
 18544  001920  0012               	return		;funcret
 18545  001922                     __end_of_RouteManagerPerformUpdate:
 18546                           	opt stack 0
 18547                           tblptru	equ	0xFF8
 18548                           tblptrh	equ	0xFF7
 18549                           tblptrl	equ	0xFF6
 18550                           tablat	equ	0xFF5
 18551                           prodh	equ	0xFF4
 18552                           prodl	equ	0xFF3
 18553                           intcon	equ	0xFF2
 18554                           postinc0	equ	0xFEE
 18555                           plusw0	equ	0xFEB
 18556                           fsr0h	equ	0xFEA
 18557                           fsr0l	equ	0xFE9
 18558                           wreg	equ	0xFE8
 18559                           indf1	equ	0xFE7
 18560                           postinc1	equ	0xFE6
 18561                           postdec1	equ	0xFE5
 18562                           plusw1	equ	0xFE3
 18563                           fsr1h	equ	0xFE2
 18564                           fsr1l	equ	0xFE1
 18565                           indf2	equ	0xFDF
 18566                           postinc2	equ	0xFDE
 18567                           postdec2	equ	0xFDD
 18568                           plusw2	equ	0xFDB
 18569                           fsr2h	equ	0xFDA
 18570                           fsr2l	equ	0xFD9
 18571                           status	equ	0xFD8
 18572                           
 18573 ;; *************** function _passLinkEtxThreshold *****************
 18574 ;; Defined at:
 18575 ;;		line 190 in file "../RouteManager.c"
 18576 ;; Parameters:    Size  Location     Type
 18577 ;;  etx             2   19[BANK0 ] unsigned int 
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;		None
 18580 ;; Return value:  Size  Location     Type
 18581 ;;                  1    wreg      unsigned char 
 18582 ;; Registers used:
 18583 ;;		wreg, status,2, status,0
 18584 ;; Tracked objects:
 18585 ;;		On entry : F/0
 18586 ;;		On exit  : F/0
 18587 ;;		Unchanged: 0/0
 18588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18593 ;;Total ram usage:        2 bytes
 18594 ;; Hardware stack levels used:    1
 18595 ;; Hardware stack levels required when called:    5
 18596 ;; This function calls:
 18597 ;;		Nothing
 18598 ;; This function is called by:
 18599 ;;		_RouteManagerPerformUpdate
 18600 ;;		_routingTableUpdateEntry
 18601 ;; This function uses a non-reentrant model
 18602 ;;
 18603                           
 18604                           	psect	text70
 18605  007564                     __ptext70:
 18606                           	opt stack 0
 18607  007564                     _passLinkEtxThreshold:
 18608                           	opt stack 20
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;RouteManager.c: 192: return (etx < rmETXThreshold);
 18612                           
 18613                           ;incstack = 0
 18614  007564  5174               	movf	(passLinkEtxThreshold@etx+1)& (0+255),w,b
 18615  007566  E104               	bnz	u19410
 18616  007568  0E32               	movlw	50
 18617  00756A  5D73               	subwf	passLinkEtxThreshold@etx& (0+255),w,b
 18618  00756C  A0D8               	btfss	status,0,c
 18619  00756E  0C01               	retlw	1
 18620  007570                     u19410:
 18621                           
 18622                           ; BSR set to: 0
 18623  007570  0C00               	retlw	0	;funcret
 18624  007572                     __end_of_passLinkEtxThreshold:
 18625                           	opt stack 0
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           intcon	equ	0xFF2
 18633                           postinc0	equ	0xFEE
 18634                           plusw0	equ	0xFEB
 18635                           fsr0h	equ	0xFEA
 18636                           fsr0l	equ	0xFE9
 18637                           wreg	equ	0xFE8
 18638                           indf1	equ	0xFE7
 18639                           postinc1	equ	0xFE6
 18640                           postdec1	equ	0xFE5
 18641                           plusw1	equ	0xFE3
 18642                           fsr1h	equ	0xFE2
 18643                           fsr1l	equ	0xFE1
 18644                           indf2	equ	0xFDF
 18645                           postinc2	equ	0xFDE
 18646                           postdec2	equ	0xFDD
 18647                           plusw2	equ	0xFDB
 18648                           fsr2h	equ	0xFDA
 18649                           fsr2l	equ	0xFD9
 18650                           status	equ	0xFD8
 18651                           
 18652 ;; *************** function _TransportManagerRouteFound *****************
 18653 ;; Defined at:
 18654 ;;		line 278 in file "../TransportManager.c"
 18655 ;; Parameters:    Size  Location     Type
 18656 ;;		None
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;		None
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  1    wreg      void 
 18661 ;; Registers used:
 18662 ;;		None
 18663 ;; Tracked objects:
 18664 ;;		On entry : F/0
 18665 ;;		On exit  : F/0
 18666 ;;		Unchanged: F/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18672 ;;Total ram usage:        0 bytes
 18673 ;; Hardware stack levels used:    1
 18674 ;; Hardware stack levels required when called:    5
 18675 ;; This function calls:
 18676 ;;		Nothing
 18677 ;; This function is called by:
 18678 ;;		_RouteManagerPerformUpdate
 18679 ;; This function uses a non-reentrant model
 18680 ;;
 18681                           
 18682                           	psect	text71
 18683  007688                     __ptext71:
 18684                           	opt stack 0
 18685  007688                     _TransportManagerRouteFound:
 18686                           	opt stack 20
 18687                           
 18688                           ; BSR set to: 0
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;incstack = 0
 18692  007688  0012               	return		;funcret
 18693  00768A                     __end_of_TransportManagerRouteFound:
 18694                           	opt stack 0
 18695                           tblptru	equ	0xFF8
 18696                           tblptrh	equ	0xFF7
 18697                           tblptrl	equ	0xFF6
 18698                           tablat	equ	0xFF5
 18699                           prodh	equ	0xFF4
 18700                           prodl	equ	0xFF3
 18701                           intcon	equ	0xFF2
 18702                           postinc0	equ	0xFEE
 18703                           plusw0	equ	0xFEB
 18704                           fsr0h	equ	0xFEA
 18705                           fsr0l	equ	0xFE9
 18706                           wreg	equ	0xFE8
 18707                           indf1	equ	0xFE7
 18708                           postinc1	equ	0xFE6
 18709                           postdec1	equ	0xFE5
 18710                           plusw1	equ	0xFE3
 18711                           fsr1h	equ	0xFE2
 18712                           fsr1l	equ	0xFE1
 18713                           indf2	equ	0xFDF
 18714                           postinc2	equ	0xFDE
 18715                           postdec2	equ	0xFDD
 18716                           plusw2	equ	0xFDB
 18717                           fsr2h	equ	0xFDA
 18718                           fsr2l	equ	0xFD9
 18719                           status	equ	0xFD8
 18720                           
 18721 ;; *************** function _TransportManagerNoRoute *****************
 18722 ;; Defined at:
 18723 ;;		line 273 in file "../TransportManager.c"
 18724 ;; Parameters:    Size  Location     Type
 18725 ;;		None
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      void 
 18730 ;; Registers used:
 18731 ;;		None
 18732 ;; Tracked objects:
 18733 ;;		On entry : F/0
 18734 ;;		On exit  : F/0
 18735 ;;		Unchanged: F/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;Total ram usage:        0 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; Hardware stack levels required when called:    5
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_RouteManagerPerformUpdate
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text72
 18752  00768A                     __ptext72:
 18753                           	opt stack 0
 18754  00768A                     _TransportManagerNoRoute:
 18755                           	opt stack 20
 18756                           
 18757                           ; BSR set to: 0
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;incstack = 0
 18761  00768A  0012               	return		;funcret
 18762  00768C                     __end_of_TransportManagerNoRoute:
 18763                           	opt stack 0
 18764                           tblptru	equ	0xFF8
 18765                           tblptrh	equ	0xFF7
 18766                           tblptrl	equ	0xFF6
 18767                           tablat	equ	0xFF5
 18768                           prodh	equ	0xFF4
 18769                           prodl	equ	0xFF3
 18770                           intcon	equ	0xFF2
 18771                           postinc0	equ	0xFEE
 18772                           plusw0	equ	0xFEB
 18773                           fsr0h	equ	0xFEA
 18774                           fsr0l	equ	0xFE9
 18775                           wreg	equ	0xFE8
 18776                           indf1	equ	0xFE7
 18777                           postinc1	equ	0xFE6
 18778                           postdec1	equ	0xFE5
 18779                           plusw1	equ	0xFE3
 18780                           fsr1h	equ	0xFE2
 18781                           fsr1l	equ	0xFE1
 18782                           indf2	equ	0xFDF
 18783                           postinc2	equ	0xFDE
 18784                           postdec2	equ	0xFDD
 18785                           plusw2	equ	0xFDB
 18786                           fsr2h	equ	0xFDA
 18787                           fsr2l	equ	0xFD9
 18788                           status	equ	0xFD8
 18789                           
 18790 ;; *************** function _LE_UnpinNeighbor *****************
 18791 ;; Defined at:
 18792 ;;		line 133 in file "../LinkEstimator.c"
 18793 ;; Parameters:    Size  Location     Type
 18794 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;  nidx            2   42[BANK0 ] unsigned int 
 18797 ;;  res             1    0        enum E179
 18798 ;; Return value:  Size  Location     Type
 18799 ;;                  1    wreg      enum E180
 18800 ;; Registers used:
 18801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18802 ;; Tracked objects:
 18803 ;;		On entry : F/0
 18804 ;;		On exit  : F/0
 18805 ;;		Unchanged: 0/0
 18806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18808 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18810 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18811 ;;Total ram usage:        7 bytes
 18812 ;; Hardware stack levels used:    1
 18813 ;; Hardware stack levels required when called:    8
 18814 ;; This function calls:
 18815 ;;		_le_findIdx
 18816 ;; This function is called by:
 18817 ;;		_RouteManagerPerformUpdate
 18818 ;; This function uses a non-reentrant model
 18819 ;;
 18820                           
 18821                           	psect	text73
 18822  006F7E                     __ptext73:
 18823                           	opt stack 0
 18824  006F7E                     _LE_UnpinNeighbor:
 18825                           	opt stack 17
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;LinkEstimator.c: 135: uint16_t nidx = le_findIdx(neighbor);
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;incstack = 0
 18832  006F7E  C085  F081         	movff	LE_UnpinNeighbor@neighbor,le_findIdx@ll_addr
 18833  006F82  C086  F082         	movff	LE_UnpinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 18834  006F86  EC7B  F034         	call	_le_findIdx	;wreg free
 18835  006F8A  6F8A               	movwf	LE_UnpinNeighbor@nidx& (0+255),b
 18836  006F8C  6B8B               	clrf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 18837                           
 18838                           ; BSR set to: 0
 18839                           ;LinkEstimator.c: 137: if (nidx != 0xff)
 18840                           
 18841                           ; BSR set to: 0
 18842  006F8E  298A               	incf	LE_UnpinNeighbor@nidx& (0+255),w,b
 18843  006F90  118B               	iorwf	(LE_UnpinNeighbor@nidx+1)& (0+255),w,b
 18844  006F92  B4D8               	btfsc	status,2,c
 18845  006F94  0012               	return	
 18846                           
 18847                           ; BSR set to: 0
 18848                           ;LinkEstimator.c: 138: {
 18849                           ;LinkEstimator.c: 139: neighbor_tbl[nidx].flags &= ~0x8;
 18850  006F96  0E0B               	movlw	11
 18851  006F98  038A               	mulwf	LE_UnpinNeighbor@nidx& (0+255),b
 18852  006F9A  CFF3 F087          	movff	prodl,??_LE_UnpinNeighbor
 18853  006F9E  CFF4 F088          	movff	prodh,??_LE_UnpinNeighbor+1
 18854  006FA2  038B               	mulwf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 18855  006FA4  50F3               	movf	prodl,w,c
 18856  006FA6  2788               	addwf	(??_LE_UnpinNeighbor+1)& (0+255),f,b
 18857  006FA8  0E05               	movlw	low (_neighbor_tbl+5)
 18858  006FAA  2587               	addwf	??_LE_UnpinNeighbor& (0+255),w,b
 18859  006FAC  6ED9               	movwf	fsr2l,c
 18860  006FAE  0E05               	movlw	high (_neighbor_tbl+5)
 18861  006FB0  2188               	addwfc	(??_LE_UnpinNeighbor+1)& (0+255),w,b
 18862  006FB2  6EDA               	movwf	fsr2h,c
 18863  006FB4  0EF7               	movlw	247
 18864  006FB6  16DF               	andwf	indf2,f,c
 18865                           
 18866                           ; BSR set to: 0
 18867                           
 18868                           ; BSR set to: 0
 18869  006FB8  0CF7               	retlw	247	;funcret
 18870  006FBA                     __end_of_LE_UnpinNeighbor:
 18871                           	opt stack 0
 18872                           tblptru	equ	0xFF8
 18873                           tblptrh	equ	0xFF7
 18874                           tblptrl	equ	0xFF6
 18875                           tablat	equ	0xFF5
 18876                           prodh	equ	0xFF4
 18877                           prodl	equ	0xFF3
 18878                           intcon	equ	0xFF2
 18879                           postinc0	equ	0xFEE
 18880                           plusw0	equ	0xFEB
 18881                           fsr0h	equ	0xFEA
 18882                           fsr0l	equ	0xFE9
 18883                           wreg	equ	0xFE8
 18884                           indf1	equ	0xFE7
 18885                           postinc1	equ	0xFE6
 18886                           postdec1	equ	0xFE5
 18887                           plusw1	equ	0xFE3
 18888                           fsr1h	equ	0xFE2
 18889                           fsr1l	equ	0xFE1
 18890                           indf2	equ	0xFDF
 18891                           postinc2	equ	0xFDE
 18892                           postdec2	equ	0xFDD
 18893                           plusw2	equ	0xFDB
 18894                           fsr2h	equ	0xFDA
 18895                           fsr2l	equ	0xFD9
 18896                           status	equ	0xFD8
 18897                           
 18898 ;; *************** function _LE_PinNeighbor *****************
 18899 ;; Defined at:
 18900 ;;		line 120 in file "../LinkEstimator.c"
 18901 ;; Parameters:    Size  Location     Type
 18902 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;  nidx            2   42[BANK0 ] unsigned int 
 18905 ;;  res             1    0        enum E179
 18906 ;; Return value:  Size  Location     Type
 18907 ;;                  1    wreg      enum E180
 18908 ;; Registers used:
 18909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18910 ;; Tracked objects:
 18911 ;;		On entry : F/0
 18912 ;;		On exit  : F/0
 18913 ;;		Unchanged: 0/0
 18914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18918 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18919 ;;Total ram usage:        7 bytes
 18920 ;; Hardware stack levels used:    1
 18921 ;; Hardware stack levels required when called:    8
 18922 ;; This function calls:
 18923 ;;		_le_findIdx
 18924 ;; This function is called by:
 18925 ;;		_RouteManagerPerformUpdate
 18926 ;;		_RouteManagerProcessReceive
 18927 ;; This function uses a non-reentrant model
 18928 ;;
 18929                           
 18930                           	psect	text74
 18931  006FBA                     __ptext74:
 18932                           	opt stack 0
 18933  006FBA                     _LE_PinNeighbor:
 18934                           	opt stack 18
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;LinkEstimator.c: 122: uint16_t nidx = le_findIdx(neighbor);
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;incstack = 0
 18941  006FBA  C085  F081         	movff	LE_PinNeighbor@neighbor,le_findIdx@ll_addr
 18942  006FBE  C086  F082         	movff	LE_PinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 18943  006FC2  EC7B  F034         	call	_le_findIdx	;wreg free
 18944  006FC6  6F8A               	movwf	LE_PinNeighbor@nidx& (0+255),b
 18945  006FC8  6B8B               	clrf	(LE_PinNeighbor@nidx+1)& (0+255),b
 18946                           
 18947                           ; BSR set to: 0
 18948                           ;LinkEstimator.c: 124: if (nidx != 0xff)
 18949                           
 18950                           ; BSR set to: 0
 18951  006FCA  298A               	incf	LE_PinNeighbor@nidx& (0+255),w,b
 18952  006FCC  118B               	iorwf	(LE_PinNeighbor@nidx+1)& (0+255),w,b
 18953  006FCE  B4D8               	btfsc	status,2,c
 18954  006FD0  0012               	return	
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;LinkEstimator.c: 125: {
 18958                           ;LinkEstimator.c: 126: neighbor_tbl[nidx].flags |= 0x8;
 18959  006FD2  0E0B               	movlw	11
 18960  006FD4  038A               	mulwf	LE_PinNeighbor@nidx& (0+255),b
 18961  006FD6  CFF3 F087          	movff	prodl,??_LE_PinNeighbor
 18962  006FDA  CFF4 F088          	movff	prodh,??_LE_PinNeighbor+1
 18963  006FDE  038B               	mulwf	(LE_PinNeighbor@nidx+1)& (0+255),b
 18964  006FE0  50F3               	movf	prodl,w,c
 18965  006FE2  2788               	addwf	(??_LE_PinNeighbor+1)& (0+255),f,b
 18966  006FE4  0E05               	movlw	low (_neighbor_tbl+5)
 18967  006FE6  2587               	addwf	??_LE_PinNeighbor& (0+255),w,b
 18968  006FE8  6ED9               	movwf	fsr2l,c
 18969  006FEA  0E05               	movlw	high (_neighbor_tbl+5)
 18970  006FEC  2188               	addwfc	(??_LE_PinNeighbor+1)& (0+255),w,b
 18971  006FEE  6EDA               	movwf	fsr2h,c
 18972  006FF0  0E00               	movlw	0
 18973  006FF2  86DB               	bsf	plusw2,3,c
 18974                           
 18975                           ; BSR set to: 0
 18976  006FF4  0C00               	retlw	0	;funcret
 18977  006FF6                     __end_of_LE_PinNeighbor:
 18978                           	opt stack 0
 18979                           tblptru	equ	0xFF8
 18980                           tblptrh	equ	0xFF7
 18981                           tblptrl	equ	0xFF6
 18982                           tablat	equ	0xFF5
 18983                           prodh	equ	0xFF4
 18984                           prodl	equ	0xFF3
 18985                           intcon	equ	0xFF2
 18986                           postinc0	equ	0xFEE
 18987                           plusw0	equ	0xFEB
 18988                           fsr0h	equ	0xFEA
 18989                           fsr0l	equ	0xFE9
 18990                           wreg	equ	0xFE8
 18991                           indf1	equ	0xFE7
 18992                           postinc1	equ	0xFE6
 18993                           postdec1	equ	0xFE5
 18994                           plusw1	equ	0xFE3
 18995                           fsr1h	equ	0xFE2
 18996                           fsr1l	equ	0xFE1
 18997                           indf2	equ	0xFDF
 18998                           postinc2	equ	0xFDE
 18999                           postdec2	equ	0xFDD
 19000                           plusw2	equ	0xFDB
 19001                           fsr2h	equ	0xFDA
 19002                           fsr2l	equ	0xFD9
 19003                           status	equ	0xFD8
 19004                           
 19005 ;; *************** function _LE_ClearDLQ *****************
 19006 ;; Defined at:
 19007 ;;		line 145 in file "../LinkEstimator.c"
 19008 ;; Parameters:    Size  Location     Type
 19009 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;  nidx            2   44[BANK0 ] unsigned int 
 19012 ;;  ne              2   42[BANK0 ] PTR struct neighbor_tabl
 19013 ;;		 -> neighbor_tbl(220), 
 19014 ;;  res             1    0        enum E179
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  1    wreg      enum E180
 19017 ;; Registers used:
 19018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : F/0
 19021 ;;		On exit  : F/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19025 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19027 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19028 ;;Total ram usage:        9 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:    8
 19031 ;; This function calls:
 19032 ;;		_le_findIdx
 19033 ;; This function is called by:
 19034 ;;		_RouteManagerPerformUpdate
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           	psect	text75
 19039  006B52                     __ptext75:
 19040                           	opt stack 0
 19041  006B52                     _LE_ClearDLQ:
 19042                           	opt stack 17
 19043                           
 19044                           ; BSR set to: 0
 19045                           ;LinkEstimator.c: 149: uint16_t nidx = le_findIdx(neighbor);
 19046                           
 19047                           ; BSR set to: 0
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;incstack = 0
 19051  006B52  C085  F081         	movff	LE_ClearDLQ@neighbor,le_findIdx@ll_addr
 19052  006B56  C086  F082         	movff	LE_ClearDLQ@neighbor+1,le_findIdx@ll_addr+1
 19053  006B5A  EC7B  F034         	call	_le_findIdx	;wreg free
 19054  006B5E  6F8C               	movwf	LE_ClearDLQ@nidx& (0+255),b
 19055  006B60  6B8D               	clrf	(LE_ClearDLQ@nidx+1)& (0+255),b
 19056                           
 19057                           ; BSR set to: 0
 19058                           ;LinkEstimator.c: 150: if (nidx != 0xff)
 19059  006B62  298C               	incf	LE_ClearDLQ@nidx& (0+255),w,b
 19060  006B64  118D               	iorwf	(LE_ClearDLQ@nidx+1)& (0+255),w,b
 19061  006B66  B4D8               	btfsc	status,2,c
 19062  006B68  0012               	return	
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;LinkEstimator.c: 151: {
 19066                           ;LinkEstimator.c: 152: ne = &neighbor_tbl[nidx];
 19067  006B6A  0E0B               	movlw	11
 19068  006B6C  038C               	mulwf	LE_ClearDLQ@nidx& (0+255),b
 19069  006B6E  CFF3 F087          	movff	prodl,??_LE_ClearDLQ
 19070  006B72  CFF4 F088          	movff	prodh,??_LE_ClearDLQ+1
 19071  006B76  038D               	mulwf	(LE_ClearDLQ@nidx+1)& (0+255),b
 19072  006B78  50F3               	movf	prodl,w,c
 19073  006B7A  2788               	addwf	(??_LE_ClearDLQ+1)& (0+255),f,b
 19074  006B7C  0E00               	movlw	low _neighbor_tbl
 19075  006B7E  2587               	addwf	??_LE_ClearDLQ& (0+255),w,b
 19076  006B80  6F8A               	movwf	LE_ClearDLQ@ne& (0+255),b
 19077  006B82  0E05               	movlw	high _neighbor_tbl
 19078  006B84  2188               	addwfc	(??_LE_ClearDLQ+1)& (0+255),w,b
 19079  006B86  6F8B               	movwf	(LE_ClearDLQ@ne+1)& (0+255),b
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;LinkEstimator.c: 153: ne->data_total = 0;
 19083  006B88  EE20 F00A          	lfsr	2,10
 19084  006B8C  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 19085  006B8E  26D9               	addwf	fsr2l,f,c
 19086  006B90  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 19087  006B92  22DA               	addwfc	fsr2h,f,c
 19088  006B94  6ADF               	clrf	indf2,c
 19089                           
 19090                           ; BSR set to: 0
 19091                           ;LinkEstimator.c: 154: ne->data_success = 0;
 19092  006B96  EE20 F009          	lfsr	2,9
 19093  006B9A  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 19094  006B9C  26D9               	addwf	fsr2l,f,c
 19095  006B9E  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 19096  006BA0  22DA               	addwfc	fsr2h,f,c
 19097  006BA2  6ADF               	clrf	indf2,c
 19098                           
 19099                           ; BSR set to: 0
 19100                           
 19101                           ; BSR set to: 0
 19102  006BA4  0C00               	retlw	0	;funcret
 19103  006BA6                     __end_of_LE_ClearDLQ:
 19104                           	opt stack 0
 19105                           tblptru	equ	0xFF8
 19106                           tblptrh	equ	0xFF7
 19107                           tblptrl	equ	0xFF6
 19108                           tablat	equ	0xFF5
 19109                           prodh	equ	0xFF4
 19110                           prodl	equ	0xFF3
 19111                           intcon	equ	0xFF2
 19112                           postinc0	equ	0xFEE
 19113                           plusw0	equ	0xFEB
 19114                           fsr0h	equ	0xFEA
 19115                           fsr0l	equ	0xFE9
 19116                           wreg	equ	0xFE8
 19117                           indf1	equ	0xFE7
 19118                           postinc1	equ	0xFE6
 19119                           postdec1	equ	0xFE5
 19120                           plusw1	equ	0xFE3
 19121                           fsr1h	equ	0xFE2
 19122                           fsr1l	equ	0xFE1
 19123                           indf2	equ	0xFDF
 19124                           postinc2	equ	0xFDE
 19125                           postdec2	equ	0xFDD
 19126                           plusw2	equ	0xFDB
 19127                           fsr2h	equ	0xFDA
 19128                           fsr2l	equ	0xFD9
 19129                           status	equ	0xFD8
 19130                           
 19131 ;; *************** function _BeaconManagerTrigger *****************
 19132 ;; Defined at:
 19133 ;;		line 152 in file "../BeaconManager.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      void 
 19140 ;; Registers used:
 19141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19142 ;; Tracked objects:
 19143 ;;		On entry : F/0
 19144 ;;		On exit  : F/1
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:   10
 19154 ;; This function calls:
 19155 ;;		_netResetInterval
 19156 ;; This function is called by:
 19157 ;;		_RouteManagerPerformUpdate
 19158 ;;		_RouteManagerProcessReceive
 19159 ;;		_NetworkManagerProcessIncomingData
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           	psect	text76
 19164  007664                     __ptext76:
 19165                           	opt stack 0
 19166  007664                     _BeaconManagerTrigger:
 19167                           	opt stack 16
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;BeaconManager.c: 154: netResetInterval();
 19171                           
 19172                           ; BSR set to: 0
 19173                           ;incstack = 0
 19174  007664  EF50  F03A         	goto	_netResetInterval	;wreg free
 19175  007668                     __end_of_BeaconManagerTrigger:
 19176                           	opt stack 0
 19177                           tblptru	equ	0xFF8
 19178                           tblptrh	equ	0xFF7
 19179                           tblptrl	equ	0xFF6
 19180                           tablat	equ	0xFF5
 19181                           prodh	equ	0xFF4
 19182                           prodl	equ	0xFF3
 19183                           intcon	equ	0xFF2
 19184                           postinc0	equ	0xFEE
 19185                           plusw0	equ	0xFEB
 19186                           fsr0h	equ	0xFEA
 19187                           fsr0l	equ	0xFE9
 19188                           wreg	equ	0xFE8
 19189                           indf1	equ	0xFE7
 19190                           postinc1	equ	0xFE6
 19191                           postdec1	equ	0xFE5
 19192                           plusw1	equ	0xFE3
 19193                           fsr1h	equ	0xFE2
 19194                           fsr1l	equ	0xFE1
 19195                           indf2	equ	0xFDF
 19196                           postinc2	equ	0xFDE
 19197                           postdec2	equ	0xFDD
 19198                           plusw2	equ	0xFDB
 19199                           fsr2h	equ	0xFDA
 19200                           fsr2l	equ	0xFD9
 19201                           status	equ	0xFD8
 19202                           
 19203 ;; *************** function _RMRoutingTableCount *****************
 19204 ;; Defined at:
 19205 ;;		line 408 in file "../RouteManager.c"
 19206 ;; Parameters:    Size  Location     Type
 19207 ;;		None
 19208 ;; Auto vars:     Size  Location     Type
 19209 ;;		None
 19210 ;; Return value:  Size  Location     Type
 19211 ;;                  2   19[BANK0 ] unsigned int 
 19212 ;; Registers used:
 19213 ;;		None
 19214 ;; Tracked objects:
 19215 ;;		On entry : C/1
 19216 ;;		On exit  : C/0
 19217 ;;		Unchanged: C/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19219 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;Total ram usage:        2 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:    5
 19226 ;; This function calls:
 19227 ;;		Nothing
 19228 ;; This function is called by:
 19229 ;;		_NetworkManagerTask
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text77
 19234  0075F2                     __ptext77:
 19235                           	opt stack 0
 19236  0075F2                     _RMRoutingTableCount:
 19237                           	opt stack 22
 19238                           
 19239                           ;RouteManager.c: 410: return(routingTableActive);
 19240                           
 19241                           ; BSR set to: 1
 19242                           ;incstack = 0
 19243  0075F2  C0E7  F073         	movff	_routingTableActive,?_RMRoutingTableCount
 19244  0075F6  C0E8  F074         	movff	_routingTableActive+1,?_RMRoutingTableCount+1
 19245  0075FA  0012               	return		;funcret
 19246  0075FC                     __end_of_RMRoutingTableCount:
 19247                           	opt stack 0
 19248                           tblptru	equ	0xFF8
 19249                           tblptrh	equ	0xFF7
 19250                           tblptrl	equ	0xFF6
 19251                           tablat	equ	0xFF5
 19252                           prodh	equ	0xFF4
 19253                           prodl	equ	0xFF3
 19254                           intcon	equ	0xFF2
 19255                           postinc0	equ	0xFEE
 19256                           plusw0	equ	0xFEB
 19257                           fsr0h	equ	0xFEA
 19258                           fsr0l	equ	0xFE9
 19259                           wreg	equ	0xFE8
 19260                           indf1	equ	0xFE7
 19261                           postinc1	equ	0xFE6
 19262                           postdec1	equ	0xFE5
 19263                           plusw1	equ	0xFE3
 19264                           fsr1h	equ	0xFE2
 19265                           fsr1l	equ	0xFE1
 19266                           indf2	equ	0xFDF
 19267                           postinc2	equ	0xFDE
 19268                           postdec2	equ	0xFDD
 19269                           plusw2	equ	0xFDB
 19270                           fsr2h	equ	0xFDA
 19271                           fsr2l	equ	0xFD9
 19272                           status	equ	0xFD8
 19273                           
 19274 ;; *************** function _MiApp_IsNetworkBusy *****************
 19275 ;; Defined at:
 19276 ;;		line 157 in file "../BeaconManager.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;		None
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;		None
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      unsigned char 
 19283 ;; Registers used:
 19284 ;;		wreg
 19285 ;; Tracked objects:
 19286 ;;		On entry : F/2
 19287 ;;		On exit  : F/2
 19288 ;;		Unchanged: F/0
 19289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19294 ;;Total ram usage:        0 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; Hardware stack levels required when called:    5
 19297 ;; This function calls:
 19298 ;;		Nothing
 19299 ;; This function is called by:
 19300 ;;		_NetworkManagerTask
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304                           	psect	text78
 19305  00768C                     __ptext78:
 19306                           	opt stack 0
 19307  00768C                     _MiApp_IsNetworkBusy:
 19308                           	opt stack 22
 19309                           
 19310                           ; BSR set to: 2
 19311                           
 19312                           ; BSR set to: 2
 19313                           ;BeaconManager.c: 159: return(0);
 19314                           
 19315                           ;incstack = 0
 19316  00768C  0C00               	retlw	0	;funcret
 19317  00768E                     __end_of_MiApp_IsNetworkBusy:
 19318                           	opt stack 0
 19319                           tblptru	equ	0xFF8
 19320                           tblptrh	equ	0xFF7
 19321                           tblptrl	equ	0xFF6
 19322                           tablat	equ	0xFF5
 19323                           prodh	equ	0xFF4
 19324                           prodl	equ	0xFF3
 19325                           intcon	equ	0xFF2
 19326                           postinc0	equ	0xFEE
 19327                           plusw0	equ	0xFEB
 19328                           fsr0h	equ	0xFEA
 19329                           fsr0l	equ	0xFE9
 19330                           wreg	equ	0xFE8
 19331                           indf1	equ	0xFE7
 19332                           postinc1	equ	0xFE6
 19333                           postdec1	equ	0xFE5
 19334                           plusw1	equ	0xFE3
 19335                           fsr1h	equ	0xFE2
 19336                           fsr1l	equ	0xFE1
 19337                           indf2	equ	0xFDF
 19338                           postinc2	equ	0xFDE
 19339                           postdec2	equ	0xFDD
 19340                           plusw2	equ	0xFDB
 19341                           fsr2h	equ	0xFDA
 19342                           fsr2l	equ	0xFD9
 19343                           status	equ	0xFD8
 19344                           
 19345 ;; *************** function _BroadcastManagerTask *****************
 19346 ;; Defined at:
 19347 ;;		line 29 in file "../BroadcastManager.c"
 19348 ;; Parameters:    Size  Location     Type
 19349 ;;		None
 19350 ;; Auto vars:     Size  Location     Type
 19351 ;;  i               2  111[BANK0 ] unsigned int 
 19352 ;;  PANID           2  109[BANK0 ] unsigned int 
 19353 ;; Return value:  Size  Location     Type
 19354 ;;                  1    wreg      void 
 19355 ;; Registers used:
 19356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19357 ;; Tracked objects:
 19358 ;;		On entry : F/0
 19359 ;;		On exit  : F/0
 19360 ;;		Unchanged: 0/0
 19361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19364 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19365 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19366 ;;Total ram usage:       14 bytes
 19367 ;; Hardware stack levels used:    1
 19368 ;; Hardware stack levels required when called:   12
 19369 ;; This function calls:
 19370 ;;		_MSTickGet
 19371 ;;		_NetworkGetPANID
 19372 ;;		_memset
 19373 ;;		_radioBroadcast
 19374 ;; This function is called by:
 19375 ;;		_NetworkManagerTask
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           	psect	text79
 19380  002F2A                     __ptext79:
 19381                           	opt stack 0
 19382  002F2A                     _BroadcastManagerTask:
 19383                           	opt stack 15
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;BroadcastManager.c: 31: uint16_t i;
 19387                           ;BroadcastManager.c: 32: uint16_t PANID;
 19388                           ;BroadcastManager.c: 34: for(i=0;i<6;i++)
 19389                           
 19390                           ; BSR set to: 2
 19391                           ;incstack = 0
 19392  002F2A  6BCF               	clrf	BroadcastManagerTask@i& (0+255),b
 19393  002F2C  6BD0               	clrf	(BroadcastManagerTask@i+1)& (0+255),b
 19394  002F2E                     l17646:
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;BroadcastManager.c: 35: {
 19398                           ;BroadcastManager.c: 36: if( (((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==0) &
      +                          & ((MSTickGet().msb>RbcQ[i].TxTime.msb) || ((MSTickGet().msb==RbcQ[i].TxTime.msb) && (MS
      +                          TickGet().lsb>=RbcQ[i].TxTime.lsb) ) ) )
 19399  002F2E  0E4A               	movlw	74
 19400  002F30  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19401  002F32  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19402  002F36  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19403  002F3A  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19404  002F3C  50F3               	movf	prodl,w,c
 19405  002F3E  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19406  002F40  0EE0               	movlw	low (_RbcQ+4)
 19407  002F42  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19408  002F44  6ED9               	movwf	fsr2l,c
 19409  002F46  0E08               	movlw	high (_RbcQ+4)
 19410  002F48  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19411  002F4A  6EDA               	movwf	fsr2h,c
 19412  002F4C  50DE               	movf	postinc2,w,c
 19413  002F4E  10DE               	iorwf	postinc2,w,c
 19414  002F50  10DE               	iorwf	postinc2,w,c
 19415  002F52  10DE               	iorwf	postinc2,w,c
 19416  002F54  E115               	bnz	l17650
 19417                           
 19418                           ; BSR set to: 0
 19419  002F56  0E4A               	movlw	74
 19420  002F58  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19421  002F5A  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19422  002F5E  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19423  002F62  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19424  002F64  50F3               	movf	prodl,w,c
 19425  002F66  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19426  002F68  0EDC               	movlw	low _RbcQ
 19427  002F6A  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19428  002F6C  6ED9               	movwf	fsr2l,c
 19429  002F6E  0E08               	movlw	high _RbcQ
 19430  002F70  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19431  002F72  6EDA               	movwf	fsr2h,c
 19432  002F74  50DE               	movf	postinc2,w,c
 19433  002F76  10DE               	iorwf	postinc2,w,c
 19434  002F78  10DE               	iorwf	postinc2,w,c
 19435  002F7A  10DE               	iorwf	postinc2,w,c
 19436  002F7C  E101 D0C4          	bz	l17666
 19437  002F80                     l17650:
 19438                           
 19439                           ; BSR set to: 0
 19440  002F80  EC4F  F038         	call	_MSTickGet	;wreg free
 19441  002F84  0E04               	movlw	4
 19442  002F86  26E9               	addwf	fsr0l,f,c
 19443  002F88  0E00               	movlw	0
 19444  002F8A  22EA               	addwfc	fsr0h,f,c
 19445  002F8C  0E4A               	movlw	74
 19446  002F8E  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19447  002F90  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 19448  002F94  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 19449  002F98  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19450  002F9A  50F3               	movf	prodl,w,c
 19451  002F9C  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19452  002F9E  0EE0               	movlw	low (_RbcQ+4)
 19453  002FA0  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19454  002FA2  6ED9               	movwf	fsr2l,c
 19455  002FA4  0E08               	movlw	high (_RbcQ+4)
 19456  002FA6  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19457  002FA8  6EDA               	movwf	fsr2h,c
 19458  002FAA  50EE               	movf	postinc0,w,c
 19459  002FAC  5CDE               	subwf	postinc2,w,c
 19460  002FAE  50EE               	movf	postinc0,w,c
 19461  002FB0  58DE               	subwfb	postinc2,w,c
 19462  002FB2  50EE               	movf	postinc0,w,c
 19463  002FB4  58DE               	subwfb	postinc2,w,c
 19464  002FB6  50EE               	movf	postinc0,w,c
 19465  002FB8  58DE               	subwfb	postinc2,w,c
 19466  002FBA  E33C               	bnc	l17656
 19467                           
 19468                           ; BSR set to: 0
 19469  002FBC  EC4F  F038         	call	_MSTickGet	;wreg free
 19470  002FC0  0E04               	movlw	4
 19471  002FC2  26E9               	addwf	fsr0l,f,c
 19472  002FC4  0E00               	movlw	0
 19473  002FC6  22EA               	addwfc	fsr0h,f,c
 19474  002FC8  0E4A               	movlw	74
 19475  002FCA  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19476  002FCC  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 19477  002FD0  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 19478  002FD4  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19479  002FD6  50F3               	movf	prodl,w,c
 19480  002FD8  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19481  002FDA  0EE0               	movlw	low (_RbcQ+4)
 19482  002FDC  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19483  002FDE  6ED9               	movwf	fsr2l,c
 19484  002FE0  0E08               	movlw	high (_RbcQ+4)
 19485  002FE2  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19486  002FE4  6EDA               	movwf	fsr2h,c
 19487  002FE6  50DE               	movf	postinc2,w,c
 19488  002FE8  18EE               	xorwf	postinc0,w,c
 19489  002FEA  E109               	bnz	u21191
 19490  002FEC  50DE               	movf	postinc2,w,c
 19491  002FEE  18EE               	xorwf	postinc0,w,c
 19492  002FF0  E106               	bnz	u21191
 19493  002FF2  50DE               	movf	postinc2,w,c
 19494  002FF4  18EE               	xorwf	postinc0,w,c
 19495  002FF6  E103               	bnz	u21191
 19496  002FF8  50DE               	movf	postinc2,w,c
 19497  002FFA  18EE               	xorwf	postinc0,w,c
 19498  002FFC  A4D8               	btfss	status,2,c
 19499  002FFE                     u21191:
 19500  002FFE  D084               	goto	l17666
 19501                           
 19502                           ; BSR set to: 0
 19503  003000  EC4F  F038         	call	_MSTickGet	;wreg free
 19504  003004  0E4A               	movlw	74
 19505  003006  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19506  003008  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 19507  00300C  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 19508  003010  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19509  003012  50F3               	movf	prodl,w,c
 19510  003014  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19511  003016  0EDC               	movlw	low _RbcQ
 19512  003018  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19513  00301A  6ED9               	movwf	fsr2l,c
 19514  00301C  0E08               	movlw	high _RbcQ
 19515  00301E  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19516  003020  6EDA               	movwf	fsr2h,c
 19517  003022  50DE               	movf	postinc2,w,c
 19518  003024  5CEE               	subwf	postinc0,w,c
 19519  003026  50DE               	movf	postinc2,w,c
 19520  003028  58EE               	subwfb	postinc0,w,c
 19521  00302A  50DE               	movf	postinc2,w,c
 19522  00302C  58EE               	subwfb	postinc0,w,c
 19523  00302E  50DE               	movf	postinc2,w,c
 19524  003030  58EE               	subwfb	postinc0,w,c
 19525  003032  E36A               	bnc	l17666
 19526  003034                     l17656:
 19527                           
 19528                           ; BSR set to: 0
 19529                           ;BroadcastManager.c: 37: {
 19530                           ;BroadcastManager.c: 39: if((RbcQ[i].Flags & (1<<1))>0)
 19531  003034  0E4A               	movlw	74
 19532  003036  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19533  003038  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19534  00303C  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19535  003040  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19536  003042  50F3               	movf	prodl,w,c
 19537  003044  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19538  003046  0E25               	movlw	low (_RbcQ+73)
 19539  003048  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19540  00304A  6ED9               	movwf	fsr2l,c
 19541  00304C  0E09               	movlw	high (_RbcQ+73)
 19542  00304E  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19543  003050  6EDA               	movwf	fsr2h,c
 19544  003052  A2DF               	btfss	indf2,1,c
 19545  003054  D003               	goto	l17660
 19546                           
 19547                           ; BSR set to: 0
 19548                           ;BroadcastManager.c: 40: {
 19549                           ;BroadcastManager.c: 41: PANID=0xffff;
 19550  003056  69CD               	setf	BroadcastManagerTask@PANID& (0+255),b
 19551  003058  69CE               	setf	(BroadcastManagerTask@PANID+1)& (0+255),b
 19552                           
 19553                           ;BroadcastManager.c: 42: }else
 19554  00305A  D006               	goto	l17662
 19555  00305C                     l17660:
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;BroadcastManager.c: 43: {
 19559                           ;BroadcastManager.c: 44: PANID=NetworkGetPANID();
 19560  00305C  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
 19561  003060  C073  F0CD         	movff	?_NetworkGetPANID,BroadcastManagerTask@PANID
 19562  003064  C074  F0CE         	movff	?_NetworkGetPANID+1,BroadcastManagerTask@PANID+1
 19563  003068                     l17662:
 19564                           
 19565                           ;BroadcastManager.c: 45: }
 19566                           ;BroadcastManager.c: 46: radioBroadcast(RbcQ[i].pkt,RbcQ[i].pktSize,PANID,(RbcQ[i].Flags
      +                           & (1<<0))>0);
 19567  003068  0E4A               	movlw	74
 19568  00306A  0100               	movlb	0	; () banked
 19569  00306C  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19570  00306E  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19571  003072  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19572  003076  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19573  003078  50F3               	movf	prodl,w,c
 19574  00307A  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19575  00307C  0EE4               	movlw	low (_RbcQ+8)
 19576  00307E  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19577  003080  6FBC               	movwf	radioBroadcast@data& (0+255),b
 19578  003082  0E08               	movlw	high (_RbcQ+8)
 19579  003084  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19580  003086  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 19581  003088  0E4A               	movlw	74
 19582  00308A  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19583  00308C  CFF3 F0C5          	movff	prodl,??_BroadcastManagerTask+2
 19584  003090  CFF4 F0C6          	movff	prodh,??_BroadcastManagerTask+3
 19585  003094  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19586  003096  50F3               	movf	prodl,w,c
 19587  003098  27C6               	addwf	(??_BroadcastManagerTask+3)& (0+255),f,b
 19588  00309A  0E24               	movlw	low (_RbcQ+72)
 19589  00309C  25C5               	addwf	(??_BroadcastManagerTask+2)& (0+255),w,b
 19590  00309E  6ED9               	movwf	fsr2l,c
 19591  0030A0  0E09               	movlw	high (_RbcQ+72)
 19592  0030A2  21C6               	addwfc	(??_BroadcastManagerTask+3)& (0+255),w,b
 19593  0030A4  6EDA               	movwf	fsr2h,c
 19594  0030A6  50DF               	movf	indf2,w,c
 19595  0030A8  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 19596  0030AA  C0CD  F0BF         	movff	BroadcastManagerTask@PANID,radioBroadcast@PANID
 19597  0030AE  C0CE  F0C0         	movff	BroadcastManagerTask@PANID+1,radioBroadcast@PANID+1
 19598  0030B2  0E4A               	movlw	74
 19599  0030B4  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19600  0030B6  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 19601  0030BA  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 19602  0030BE  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19603  0030C0  50F3               	movf	prodl,w,c
 19604  0030C2  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19605  0030C4  0E25               	movlw	low (_RbcQ+73)
 19606  0030C6  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19607  0030C8  6ED9               	movwf	fsr2l,c
 19608  0030CA  0E09               	movlw	high (_RbcQ+73)
 19609  0030CC  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19610  0030CE  6EDA               	movwf	fsr2h,c
 19611  0030D0  0E01               	movlw	1
 19612  0030D2  A0DF               	btfss	indf2,0,c
 19613  0030D4  0E00               	movlw	0
 19614  0030D6  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 19615  0030D8  EC1F  F034         	call	_radioBroadcast	;wreg free
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;BroadcastManager.c: 47: memset(&RbcQ[i].TxTime,0x00,sizeof(TickMS));
 19619  0030DC  0E4A               	movlw	74
 19620  0030DE  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19621  0030E0  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19622  0030E4  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19623  0030E8  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19624  0030EA  50F3               	movf	prodl,w,c
 19625  0030EC  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19626  0030EE  0EDC               	movlw	low _RbcQ
 19627  0030F0  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19628  0030F2  6F73               	movwf	memset@p1& (0+255),b
 19629  0030F4  0E08               	movlw	high _RbcQ
 19630  0030F6  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19631  0030F8  6F74               	movwf	(memset@p1+1)& (0+255),b
 19632  0030FA  6B76               	clrf	(memset@c+1)& (0+255),b
 19633  0030FC  6B75               	clrf	memset@c& (0+255),b
 19634  0030FE  6B78               	clrf	(memset@n+1)& (0+255),b
 19635  003100  0E08               	movlw	8
 19636  003102  6F77               	movwf	memset@n& (0+255),b
 19637  003104  EC2F  F039         	call	_memset	;wreg free
 19638  003108                     l17666:
 19639                           
 19640                           ; BSR set to: 0
 19641  003108  4BCF               	infsnz	BroadcastManagerTask@i& (0+255),f,b
 19642  00310A  2BD0               	incf	(BroadcastManagerTask@i+1)& (0+255),f,b
 19643                           
 19644                           ; BSR set to: 0
 19645  00310C  51D0               	movf	(BroadcastManagerTask@i+1)& (0+255),w,b
 19646  00310E  E104               	bnz	u21240
 19647  003110  0E06               	movlw	6
 19648  003112  5DCF               	subwf	BroadcastManagerTask@i& (0+255),w,b
 19649  003114  E201 D70B          	bnc	l17646
 19650  003118                     u21240:
 19651                           
 19652                           ; BSR set to: 0
 19653  003118  0012               	return		;funcret
 19654  00311A                     __end_of_BroadcastManagerTask:
 19655                           	opt stack 0
 19656                           tblptru	equ	0xFF8
 19657                           tblptrh	equ	0xFF7
 19658                           tblptrl	equ	0xFF6
 19659                           tablat	equ	0xFF5
 19660                           prodh	equ	0xFF4
 19661                           prodl	equ	0xFF3
 19662                           intcon	equ	0xFF2
 19663                           postinc0	equ	0xFEE
 19664                           plusw0	equ	0xFEB
 19665                           fsr0h	equ	0xFEA
 19666                           fsr0l	equ	0xFE9
 19667                           wreg	equ	0xFE8
 19668                           indf1	equ	0xFE7
 19669                           postinc1	equ	0xFE6
 19670                           postdec1	equ	0xFE5
 19671                           plusw1	equ	0xFE3
 19672                           fsr1h	equ	0xFE2
 19673                           fsr1l	equ	0xFE1
 19674                           indf2	equ	0xFDF
 19675                           postinc2	equ	0xFDE
 19676                           postdec2	equ	0xFDD
 19677                           plusw2	equ	0xFDB
 19678                           fsr2h	equ	0xFDA
 19679                           fsr2l	equ	0xFD9
 19680                           status	equ	0xFD8
 19681                           
 19682 ;; *************** function _BeaconManagerTask *****************
 19683 ;; Defined at:
 19684 ;;		line 46 in file "../BeaconManager.c"
 19685 ;; Parameters:    Size  Location     Type
 19686 ;;		None
 19687 ;; Auto vars:     Size  Location     Type
 19688 ;;		None
 19689 ;; Return value:  Size  Location     Type
 19690 ;;                  1    wreg      void 
 19691 ;; Registers used:
 19692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19693 ;; Tracked objects:
 19694 ;;		On entry : D/0
 19695 ;;		On exit  : F/1
 19696 ;;		Unchanged: 0/0
 19697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19702 ;;Total ram usage:        0 bytes
 19703 ;; Hardware stack levels used:    1
 19704 ;; Hardware stack levels required when called:   13
 19705 ;; This function calls:
 19706 ;;		_MSTickGet
 19707 ;;		_MSTickGetDiffNow
 19708 ;;		_netDecayInterval
 19709 ;;		_networkSendBeacon
 19710 ;; This function is called by:
 19711 ;;		_NetworkManagerTask
 19712 ;; This function uses a non-reentrant model
 19713 ;;
 19714                           
 19715                           	psect	text80
 19716  005326                     __ptext80:
 19717                           	opt stack 0
 19718  005326                     _BeaconManagerTask:
 19719                           	opt stack 14
 19720                           
 19721                           ;BeaconManager.c: 48: switch(BMState)
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;incstack = 0
 19725  005326  D068               	goto	l17634
 19726  005328                     l17610:
 19727                           
 19728                           ; BSR set to: 1
 19729                           ;BeaconManager.c: 51: BMState=BM_Idle;
 19730  005328  0E01               	movlw	1
 19731  00532A  6FCD               	movwf	_BMState& (0+255),b
 19732                           
 19733                           ;BeaconManager.c: 52: break;
 19734  00532C  0C01               	retlw	1
 19735  00532E                     l17612:
 19736                           
 19737                           ; BSR set to: 1
 19738                           ;BeaconManager.c: 58: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 19739  00532E  EE22  F014         	lfsr	2,_tInterval
 19740  005332  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 19741  005336  0E07               	movlw	7
 19742  005338                     u21101:
 19743  005338  CFDB FFEB          	movff	plusw2,plusw0
 19744  00533C  06E8               	decf	wreg,f,c
 19745  00533E  E2FC               	bc	u21101
 19746  005340  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 19747  005344  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 19748  005346  0101               	movlb	1	; () banked
 19749  005348  5DBA               	subwf	_intervalDelay& (0+255),w,b
 19750  00534A  0100               	movlb	0	; () banked
 19751  00534C  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19752  00534E  0101               	movlb	1	; () banked
 19753  005350  59BB               	subwfb	(_intervalDelay+1)& (0+255),w,b
 19754  005352  0100               	movlb	0	; () banked
 19755  005354  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19756  005356  0101               	movlb	1	; () banked
 19757  005358  59BC               	subwfb	(_intervalDelay+2)& (0+255),w,b
 19758  00535A  0100               	movlb	0	; () banked
 19759  00535C  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19760  00535E  0101               	movlb	1	; () banked
 19761  005360  59BD               	subwfb	(_intervalDelay+3)& (0+255),w,b
 19762  005362  B0D8               	btfsc	status,0,c
 19763  005364  0012               	return	
 19764                           
 19765                           ; BSR set to: 1
 19766                           ;BeaconManager.c: 59: {
 19767                           ;BeaconManager.c: 62: networkSendBeacon();
 19768  005366  EC61  F015         	call	_networkSendBeacon	;wreg free
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;BeaconManager.c: 63: intervalDelay=(currentInterval-intervalDelay);
 19772  00536A  0101               	movlb	1	; () banked
 19773  00536C  51BA               	movf	_intervalDelay& (0+255),w,b
 19774  00536E  5DB2               	subwf	_currentInterval& (0+255),w,b
 19775  005370  6FBA               	movwf	_intervalDelay& (0+255),b
 19776  005372  51BB               	movf	(_intervalDelay+1)& (0+255),w,b
 19777  005374  59B3               	subwfb	(_currentInterval+1)& (0+255),w,b
 19778  005376  6FBB               	movwf	(_intervalDelay+1)& (0+255),b
 19779  005378  51BC               	movf	(_intervalDelay+2)& (0+255),w,b
 19780  00537A  59B4               	subwfb	(_currentInterval+2)& (0+255),w,b
 19781  00537C  6FBC               	movwf	(_intervalDelay+2)& (0+255),b
 19782  00537E  51BD               	movf	(_intervalDelay+3)& (0+255),w,b
 19783  005380  59B5               	subwfb	(_currentInterval+3)& (0+255),w,b
 19784  005382  6FBD               	movwf	(_intervalDelay+3)& (0+255),b
 19785                           
 19786                           ; BSR set to: 1
 19787                           ;BeaconManager.c: 64: tInterval=MSTickGet();
 19788  005384  EC4F  F038         	call	_MSTickGet	;wreg free
 19789  005388  EE22  F014         	lfsr	2,_tInterval
 19790  00538C  0E07               	movlw	7
 19791  00538E                     u21121:
 19792  00538E  CFEB FFDB          	movff	plusw0,plusw2
 19793  005392  06E8               	decf	wreg,f,c
 19794  005394  E2FC               	bc	u21121
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;BeaconManager.c: 65: BMState=BM_WaitRemaining;
 19798  005396  0E03               	movlw	3
 19799  005398  0101               	movlb	1	; () banked
 19800  00539A  6FCD               	movwf	_BMState& (0+255),b
 19801  00539C  0C03               	retlw	3
 19802  00539E                     l17622:
 19803                           
 19804                           ; BSR set to: 1
 19805                           ;BeaconManager.c: 70: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 19806  00539E  EE22  F014         	lfsr	2,_tInterval
 19807  0053A2  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 19808  0053A6  0E07               	movlw	7
 19809  0053A8                     u21131:
 19810  0053A8  CFDB FFEB          	movff	plusw2,plusw0
 19811  0053AC  06E8               	decf	wreg,f,c
 19812  0053AE  E2FC               	bc	u21131
 19813  0053B0  ECA6  F030         	call	_MSTickGetDiffNow	;wreg free
 19814  0053B4  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 19815  0053B6  0101               	movlb	1	; () banked
 19816  0053B8  5DBA               	subwf	_intervalDelay& (0+255),w,b
 19817  0053BA  0100               	movlb	0	; () banked
 19818  0053BC  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19819  0053BE  0101               	movlb	1	; () banked
 19820  0053C0  59BB               	subwfb	(_intervalDelay+1)& (0+255),w,b
 19821  0053C2  0100               	movlb	0	; () banked
 19822  0053C4  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19823  0053C6  0101               	movlb	1	; () banked
 19824  0053C8  59BC               	subwfb	(_intervalDelay+2)& (0+255),w,b
 19825  0053CA  0100               	movlb	0	; () banked
 19826  0053CC  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19827  0053CE  0101               	movlb	1	; () banked
 19828  0053D0  59BD               	subwfb	(_intervalDelay+3)& (0+255),w,b
 19829  0053D2  B0D8               	btfsc	status,0,c
 19830  0053D4  0012               	return	
 19831                           
 19832                           ; BSR set to: 1
 19833                           ;BeaconManager.c: 71: {
 19834                           ;BeaconManager.c: 74: networkSendBeacon();
 19835  0053D6  EC61  F015         	call	_networkSendBeacon	;wreg free
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;BeaconManager.c: 75: netDecayInterval();
 19839  0053DA  EC34  F038         	call	_netDecayInterval	;wreg free
 19840                           
 19841                           ; BSR set to: 0
 19842                           ;BeaconManager.c: 76: tInterval=MSTickGet();
 19843  0053DE  EC4F  F038         	call	_MSTickGet	;wreg free
 19844  0053E2  EE22  F014         	lfsr	2,_tInterval
 19845  0053E6  0E07               	movlw	7
 19846  0053E8                     u21151:
 19847  0053E8  CFEB FFDB          	movff	plusw0,plusw2
 19848  0053EC  06E8               	decf	wreg,f,c
 19849  0053EE  E2FC               	bc	u21151
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;BeaconManager.c: 77: BMState=BM_WaitInitial;
 19853  0053F0  0E02               	movlw	2
 19854  0053F2  0101               	movlb	1	; () banked
 19855  0053F4  6FCD               	movwf	_BMState& (0+255),b
 19856  0053F6  0C02               	retlw	2
 19857  0053F8                     l17634:
 19858  0053F8  0101               	movlb	1	; () banked
 19859  0053FA  51CD               	movf	_BMState& (0+255),w,b
 19860                           
 19861                           ; Switch size 1, requested type "speed"
 19862                           ; Number of cases is 4, Range of values is 0 to 3
 19863                           ; switch strategies available:
 19864                           ; Name         Instructions Cycles
 19865                           ; simple_byte           13     7 (average)
 19866                           ;	Chosen strategy is simple_byte
 19867  0053FC  E095               	bz	l17610
 19868  0053FE  0A01               	xorlw	1	; case 1
 19869  005400  B4D8               	btfsc	status,2,c
 19870  005402  0012               	return	
 19871  005404  0A03               	xorlw	3	; case 2
 19872  005406  E093               	bz	l17612
 19873  005408  0A01               	xorlw	1	; case 3
 19874  00540A  E0C9               	bz	l17622
 19875                           
 19876                           ; BSR set to: 1
 19877  00540C  0012               	return		;funcret
 19878  00540E                     __end_of_BeaconManagerTask:
 19879                           	opt stack 0
 19880                           tblptru	equ	0xFF8
 19881                           tblptrh	equ	0xFF7
 19882                           tblptrl	equ	0xFF6
 19883                           tablat	equ	0xFF5
 19884                           prodh	equ	0xFF4
 19885                           prodl	equ	0xFF3
 19886                           intcon	equ	0xFF2
 19887                           postinc0	equ	0xFEE
 19888                           plusw0	equ	0xFEB
 19889                           fsr0h	equ	0xFEA
 19890                           fsr0l	equ	0xFE9
 19891                           wreg	equ	0xFE8
 19892                           indf1	equ	0xFE7
 19893                           postinc1	equ	0xFE6
 19894                           postdec1	equ	0xFE5
 19895                           plusw1	equ	0xFE3
 19896                           fsr1h	equ	0xFE2
 19897                           fsr1l	equ	0xFE1
 19898                           indf2	equ	0xFDF
 19899                           postinc2	equ	0xFDE
 19900                           postdec2	equ	0xFDD
 19901                           plusw2	equ	0xFDB
 19902                           fsr2h	equ	0xFDA
 19903                           fsr2l	equ	0xFD9
 19904                           status	equ	0xFD8
 19905                           
 19906 ;; *************** function _networkSendBeacon *****************
 19907 ;; Defined at:
 19908 ;;		line 86 in file "../BeaconManager.c"
 19909 ;; Parameters:    Size  Location     Type
 19910 ;;		None
 19911 ;; Auto vars:     Size  Location     Type
 19912 ;;  hdr             2  113[BANK0 ] PTR struct net_routing_h
 19913 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 19914 ;;  r               2  111[BANK0 ] PTR struct route_info_t_
 19915 ;;		 -> routeInfo(7), 
 19916 ;;  bt              2  109[BANK0 ] unsigned int 
 19917 ;;  adr             2  107[BANK0 ] PTR struct addr_t_def
 19918 ;;		 -> MyAddress(2), 
 19919 ;;  last            2  105[BANK0 ] PTR unsigned char 
 19920 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 19921 ;;  parent          2    0        struct addr_t_def
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  1    wreg      void 
 19924 ;; Registers used:
 19925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19926 ;; Tracked objects:
 19927 ;;		On entry : F/1
 19928 ;;		On exit  : F/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19932 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19933 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;Total ram usage:       16 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; Hardware stack levels required when called:   12
 19938 ;; This function calls:
 19939 ;;		_LEAppendNeighborInfo
 19940 ;;		_LELinkQualityGet
 19941 ;;		_NetworkAddressSizeGet
 19942 ;;		_NetworkGetDeviceType
 19943 ;;		_NetworkGetMyRouteInfo
 19944 ;;		_NetworkGetPANID
 19945 ;;		_NetworkHasRoute
 19946 ;;		_NetworkManagerGetMyAddress
 19947 ;;		_isInvalidAddress
 19948 ;;		_isNetworkSecurityEnabled
 19949 ;;		_memcpy
 19950 ;;		_memset
 19951 ;;		_radioBroadcast
 19952 ;; This function is called by:
 19953 ;;		_BeaconManagerTask
 19954 ;; This function uses a non-reentrant model
 19955 ;;
 19956                           
 19957                           	psect	text81
 19958  002AC2                     __ptext81:
 19959                           	opt stack 0
 19960  002AC2                     _networkSendBeacon:
 19961                           	opt stack 14
 19962                           
 19963                           ; BSR set to: 1
 19964                           ;BeaconManager.c: 88: net_routing_header_t *hdr;
 19965                           ;BeaconManager.c: 89: route_info_t *r=NetworkGetMyRouteInfo();
 19966                           
 19967                           ; BSR set to: 1
 19968                           ;incstack = 0
 19969  002AC2  ECD2  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 19970  002AC6  C073  F0CF         	movff	?_NetworkGetMyRouteInfo,networkSendBeacon@r
 19971  002ACA  C074  F0D0         	movff	?_NetworkGetMyRouteInfo+1,networkSendBeacon@r+1
 19972                           
 19973                           ; BSR set to: 0
 19974                           ;BeaconManager.c: 90: uint8_t* last;
 19975                           ;BeaconManager.c: 91: addr_t parent;
 19976                           ;BeaconManager.c: 93: memset(&beaconMessageBuffer,0x00,sizeof(beaconMessageBuffer));
 19977  002ACE  0E00               	movlw	low _beaconMessageBuffer
 19978  002AD0  6F73               	movwf	memset@p1& (0+255),b
 19979  002AD2  0E07               	movlw	high _beaconMessageBuffer
 19980  002AD4  6F74               	movwf	(memset@p1+1)& (0+255),b
 19981  002AD6  6B76               	clrf	(memset@c+1)& (0+255),b
 19982  002AD8  6B75               	clrf	memset@c& (0+255),b
 19983  002ADA  6B78               	clrf	(memset@n+1)& (0+255),b
 19984  002ADC  0E48               	movlw	72
 19985  002ADE  6F77               	movwf	memset@n& (0+255),b
 19986  002AE0  EC2F  F039         	call	_memset	;wreg free
 19987                           
 19988                           ; BSR set to: 0
 19989                           ;BeaconManager.c: 95: hdr=(net_routing_header_t*)beaconMessageBuffer.data;
 19990  002AE4  0E00               	movlw	low _beaconMessageBuffer
 19991  002AE6  6FD1               	movwf	networkSendBeacon@hdr& (0+255),b
 19992  002AE8  0E07               	movlw	high _beaconMessageBuffer
 19993  002AEA  6FD2               	movwf	(networkSendBeacon@hdr+1)& (0+255),b
 19994                           
 19995                           ;BeaconManager.c: 96: hdr->packettype=PacketRouting;
 19996  002AEC  EE20 F002          	lfsr	2,2
 19997  002AF0  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19998  002AF2  26D9               	addwf	fsr2l,f,c
 19999  002AF4  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20000  002AF6  22DA               	addwfc	fsr2h,f,c
 20001  002AF8  0E22               	movlw	34
 20002  002AFA  6EDF               	movwf	indf2,c
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;BeaconManager.c: 97: hdr->options.deviceType=NetworkGetDeviceType();
 20006  002AFC  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 20007  002B00  0100               	movlb	0	; () banked
 20008  002B02  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 20009  002B04  EE20 F003          	lfsr	2,3
 20010  002B08  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20011  002B0A  26D9               	addwf	fsr2l,f,c
 20012  002B0C  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20013  002B0E  22DA               	addwfc	fsr2h,f,c
 20014  002B10  50DF               	movf	223,w,c
 20015  002B12  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20016  002B14  0BF8               	andlw	-8
 20017  002B16  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20018  002B18  6EDF               	movwf	223,c
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;BeaconManager.c: 98: hdr->options.hasroute=NetworkHasRoute();
 20022  002B1A  EC18  F038         	call	_NetworkHasRoute	;wreg free
 20023  002B1E  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 20024  002B20  EE20 F003          	lfsr	2,3
 20025  002B24  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20026  002B26  26D9               	addwf	fsr2l,f,c
 20027  002B28  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20028  002B2A  22DA               	addwfc	fsr2h,f,c
 20029  002B2C  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 20030  002B2E  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 20031  002B30  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 20032  002B32  50DF               	movf	223,w,c
 20033  002B34  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20034  002B36  0BF7               	andlw	-9
 20035  002B38  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20036  002B3A  6EDF               	movwf	223,c
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;BeaconManager.c: 99: hdr->options.congested=r->congested;
 20040  002B3C  EE20 F005          	lfsr	2,5
 20041  002B40  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 20042  002B42  26D9               	addwf	fsr2l,f,c
 20043  002B44  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20044  002B46  22DA               	addwfc	fsr2h,f,c
 20045  002B48  50DF               	movf	indf2,w,c
 20046  002B4A  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 20047  002B4C  EE20 F003          	lfsr	2,3
 20048  002B50  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20049  002B52  26D9               	addwf	fsr2l,f,c
 20050  002B54  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20051  002B56  22DA               	addwfc	fsr2h,f,c
 20052  002B58  3BC3               	swapf	??_networkSendBeacon& (0+255),f,b
 20053  002B5A  50DF               	movf	223,w,c
 20054  002B5C  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20055  002B5E  0BEF               	andlw	-17
 20056  002B60  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 20057  002B62  6EDF               	movwf	223,c
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;BeaconManager.c: 100: hdr->sequenceNumber=netSequenceNumber++;
 20061  002B64  EE20 F001          	lfsr	2,1
 20062  002B68  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20063  002B6A  26D9               	addwf	fsr2l,f,c
 20064  002B6C  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20065  002B6E  22DA               	addwfc	fsr2h,f,c
 20066  002B70  C1D6  FFDF         	movff	_netSequenceNumber,indf2
 20067                           
 20068                           ; BSR set to: 0
 20069  002B74  0101               	movlb	1	; () banked
 20070  002B76  2BD6               	incf	_netSequenceNumber& (0+255),f,b
 20071                           
 20072                           ; BSR set to: 1
 20073                           ;BeaconManager.c: 101: memcpy(hdr->parent.bytes,r->parent.bytes,NetworkAddressSizeGet())
      +                          ;
 20074  002B78  0E04               	movlw	4
 20075  002B7A  0100               	movlb	0	; () banked
 20076  002B7C  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 20077  002B7E  6F75               	movwf	memcpy@d1& (0+255),b
 20078  002B80  0E00               	movlw	0
 20079  002B82  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 20080  002B84  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 20081  002B86  C0CF  F077         	movff	networkSendBeacon@r,memcpy@s1
 20082  002B8A  C0D0  F078         	movff	networkSendBeacon@r+1,memcpy@s1+1
 20083  002B8E  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 20084  002B92  0100               	movlb	0	; () banked
 20085  002B94  6F79               	movwf	memcpy@n& (0+255),b
 20086  002B96  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20087  002B98  EC54  F035         	call	_memcpy	;wreg free
 20088                           
 20089                           ; BSR set to: 0
 20090                           ;BeaconManager.c: 103: if(NetworkGetDeviceType()==DeviceCoordinator)
 20091  002B9C  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 20092  002BA0  0900               	iorlw	0
 20093  002BA2  E112               	bnz	l17044
 20094                           
 20095                           ; BSR set to: 1
 20096                           ;BeaconManager.c: 104: {
 20097                           ;BeaconManager.c: 105: hdr->etx=r->etx;
 20098  002BA4  0100               	movlb	0	; () banked
 20099  002BA6  EE20 F002          	lfsr	2,2
 20100  002BAA  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 20101  002BAC  26D9               	addwf	fsr2l,f,c
 20102  002BAE  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20103  002BB0  22DA               	addwfc	fsr2h,f,c
 20104  002BB2  EE10 F006          	lfsr	1,6
 20105  002BB6  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20106  002BB8  26E1               	addwf	fsr1l,f,c
 20107  002BBA  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20108  002BBC  22E2               	addwfc	fsr1h,f,c
 20109  002BBE  CFDE FFE6          	movff	postinc2,postinc1
 20110  002BC2  CFDD FFE5          	movff	postdec2,postdec1
 20111                           
 20112                           ;BeaconManager.c: 106: }else if(isInvalidAddress(r->parent))
 20113  002BC6  D03B               	goto	l17050
 20114  002BC8                     l17044:
 20115                           
 20116                           ; BSR set to: 1
 20117  002BC8  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 20118  002BCC  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 20119  002BD0  CFDE F086          	movff	postinc2,isInvalidAddress@address
 20120  002BD4  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 20121  002BD8  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 20122  002BDC  0900               	iorlw	0
 20123  002BDE  E010               	bz	l17048
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;BeaconManager.c: 107: {
 20127                           ;BeaconManager.c: 108: hdr->etx=0xffff;
 20128  002BE0  EE20 F006          	lfsr	2,6
 20129  002BE4  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20130  002BE6  26D9               	addwf	fsr2l,f,c
 20131  002BE8  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20132  002BEA  22DA               	addwfc	fsr2h,f,c
 20133  002BEC  68DE               	setf	postinc2,c
 20134  002BEE  68DD               	setf	postdec2,c
 20135                           
 20136                           ;BeaconManager.c: 109: hdr->options.pull=1;
 20137  002BF0  EE20 F003          	lfsr	2,3
 20138  002BF4  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20139  002BF6  26D9               	addwf	fsr2l,f,c
 20140  002BF8  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20141  002BFA  22DA               	addwfc	fsr2h,f,c
 20142  002BFC  8ADF               	bsf	indf2,5,c
 20143                           
 20144                           ;BeaconManager.c: 110: }else
 20145  002BFE  D01F               	goto	l17050
 20146  002C00                     l17048:
 20147                           
 20148                           ; BSR set to: 0
 20149                           ;BeaconManager.c: 111: {
 20150                           ;BeaconManager.c: 112: hdr->etx=LELinkQualityGet(r->parent,r->etx);
 20151  002C00  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 20152  002C04  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 20153  002C08  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 20154  002C0C  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 20155  002C10  EE20 F002          	lfsr	2,2
 20156  002C14  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 20157  002C16  26D9               	addwf	fsr2l,f,c
 20158  002C18  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20159  002C1A  22DA               	addwfc	fsr2h,f,c
 20160  002C1C  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 20161  002C20  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 20162  002C24  EC87  F032         	call	_LELinkQualityGet	;wreg free
 20163  002C28  0100               	movlb	0	; () banked
 20164  002C2A  EE20 F006          	lfsr	2,6
 20165  002C2E  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20166  002C30  26D9               	addwf	fsr2l,f,c
 20167  002C32  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20168  002C34  22DA               	addwfc	fsr2h,f,c
 20169  002C36  C085  FFDE         	movff	?_LELinkQualityGet,postinc2
 20170  002C3A  C086  FFDD         	movff	?_LELinkQualityGet+1,postdec2
 20171  002C3E                     l17050:
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;BeaconManager.c: 113: }
 20175                           ;BeaconManager.c: 115: uint16_t bt;
 20176                           ;BeaconManager.c: 116: addr_t *adr=NetworkManagerGetMyAddress();
 20177  002C3E  ECCC  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 20178  002C42  C073  F0CB         	movff	?_NetworkManagerGetMyAddress,networkSendBeacon@adr
 20179  002C46  C074  F0CC         	movff	?_NetworkManagerGetMyAddress+1,networkSendBeacon@adr+1
 20180                           
 20181                           ; BSR set to: 0
 20182                           ;BeaconManager.c: 117: memcpy(&bt,adr->bytes,2);
 20183  002C4A  0ECD               	movlw	low networkSendBeacon@bt
 20184  002C4C  6F75               	movwf	memcpy@d1& (0+255),b
 20185  002C4E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 20186  002C50  C0CB  F077         	movff	networkSendBeacon@adr,memcpy@s1
 20187  002C54  C0CC  F078         	movff	networkSendBeacon@adr+1,memcpy@s1+1
 20188  002C58  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20189  002C5A  0E02               	movlw	2
 20190  002C5C  6F79               	movwf	memcpy@n& (0+255),b
 20191  002C5E  EC54  F035         	call	_memcpy	;wreg free
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;BeaconManager.c: 118: hdr->etx=hdr->etx ^ ( ((uint16_t)(~bt)) + (uint16_t)0x3497 );
 20195  002C62  EE20 F006          	lfsr	2,6
 20196  002C66  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20197  002C68  26D9               	addwf	fsr2l,f,c
 20198  002C6A  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20199  002C6C  22DA               	addwfc	fsr2h,f,c
 20200  002C6E  CFDE F0C3          	movff	postinc2,??_networkSendBeacon
 20201  002C72  CFDD F0C4          	movff	postdec2,??_networkSendBeacon+1
 20202  002C76  0E97               	movlw	151
 20203  002C78  6FC5               	movwf	(??_networkSendBeacon+2)& (0+255),b
 20204  002C7A  0E34               	movlw	52
 20205  002C7C  6FC6               	movwf	(??_networkSendBeacon+3)& (0+255),b
 20206  002C7E  1DCD               	comf	networkSendBeacon@bt& (0+255),w,b
 20207  002C80  6FC7               	movwf	(??_networkSendBeacon+4)& (0+255),b
 20208  002C82  1DCE               	comf	(networkSendBeacon@bt+1)& (0+255),w,b
 20209  002C84  6FC8               	movwf	(??_networkSendBeacon+5)& (0+255),b
 20210  002C86  51C5               	movf	(??_networkSendBeacon+2)& (0+255),w,b
 20211  002C88  27C7               	addwf	(??_networkSendBeacon+4)& (0+255),f,b
 20212  002C8A  51C6               	movf	(??_networkSendBeacon+3)& (0+255),w,b
 20213  002C8C  23C8               	addwfc	(??_networkSendBeacon+5)& (0+255),f,b
 20214  002C8E  51C3               	movf	??_networkSendBeacon& (0+255),w,b
 20215  002C90  1BC7               	xorwf	(??_networkSendBeacon+4)& (0+255),f,b
 20216  002C92  51C4               	movf	(??_networkSendBeacon+1)& (0+255),w,b
 20217  002C94  1BC8               	xorwf	(??_networkSendBeacon+5)& (0+255),f,b
 20218  002C96  EE20 F006          	lfsr	2,6
 20219  002C9A  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20220  002C9C  26D9               	addwf	fsr2l,f,c
 20221  002C9E  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20222  002CA0  22DA               	addwfc	fsr2h,f,c
 20223  002CA2  C0C7  FFDE         	movff	??_networkSendBeacon+4,postinc2
 20224  002CA6  C0C8  FFDD         	movff	??_networkSendBeacon+5,postdec2
 20225                           
 20226                           ; BSR set to: 0
 20227                           ;BeaconManager.c: 120: last=LEAppendNeighborInfo((uint8_t*)&hdr->lnk_header,64-(uint32_t
      +                          )((uint8_t*)hdr-(uint8_t*)beaconMessageBuffer.data)-sizeof(net_routing_header_t)-14);
 20228  002CAA  0E08               	movlw	8
 20229  002CAC  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 20230  002CAE  6F84               	movwf	LEAppendNeighborInfo@data& (0+255),b
 20231  002CB0  0E00               	movlw	0
 20232  002CB2  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 20233  002CB4  6F85               	movwf	(LEAppendNeighborInfo@data+1)& (0+255),b
 20234  002CB6  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20235  002CB8  0828               	sublw	low (_beaconMessageBuffer+40)
 20236  002CBA  6F86               	movwf	LEAppendNeighborInfo@size& (0+255),b
 20237  002CBC  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20238  002CBE  A0D8               	btfss	status,0,c
 20239  002CC0  2AE8               	incf	wreg,f,c
 20240  002CC2  0807               	sublw	high (_beaconMessageBuffer+40)
 20241  002CC4  6F87               	movwf	(LEAppendNeighborInfo@size+1)& (0+255),b
 20242  002CC6  EC72  F01D         	call	_LEAppendNeighborInfo	;wreg free
 20243  002CCA  C084  F0C9         	movff	?_LEAppendNeighborInfo,networkSendBeacon@last
 20244  002CCE  C085  F0CA         	movff	?_LEAppendNeighborInfo+1,networkSendBeacon@last+1
 20245                           
 20246                           ; BSR set to: 0
 20247                           ;BeaconManager.c: 122: radioBroadcast(beaconMessageBuffer.data,(uint16_t)(last-(uint8_t*
      +                          )hdr),NetworkGetPANID(),isNetworkSecurityEnabled());
 20248  002CD2  0E00               	movlw	low _beaconMessageBuffer
 20249  002CD4  6FBC               	movwf	radioBroadcast@data& (0+255),b
 20250  002CD6  0E07               	movlw	high _beaconMessageBuffer
 20251  002CD8  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 20252  002CDA  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 20253  002CDC  5DC9               	subwf	networkSendBeacon@last& (0+255),w,b
 20254  002CDE  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 20255  002CE0  ECFE  F03A         	call	_NetworkGetPANID	;wreg free
 20256  002CE4  C073  F0BF         	movff	?_NetworkGetPANID,radioBroadcast@PANID
 20257  002CE8  C074  F0C0         	movff	?_NetworkGetPANID+1,radioBroadcast@PANID+1
 20258  002CEC  EC27  F03B         	call	_isNetworkSecurityEnabled	;wreg free
 20259  002CF0  0100               	movlb	0	; () banked
 20260  002CF2  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 20261  002CF4  EF1F  F034         	goto	_radioBroadcast	;wreg free
 20262  002CF8                     __end_of_networkSendBeacon:
 20263                           	opt stack 0
 20264                           tblptru	equ	0xFF8
 20265                           tblptrh	equ	0xFF7
 20266                           tblptrl	equ	0xFF6
 20267                           tablat	equ	0xFF5
 20268                           prodh	equ	0xFF4
 20269                           prodl	equ	0xFF3
 20270                           intcon	equ	0xFF2
 20271                           postinc0	equ	0xFEE
 20272                           plusw0	equ	0xFEB
 20273                           fsr0h	equ	0xFEA
 20274                           fsr0l	equ	0xFE9
 20275                           wreg	equ	0xFE8
 20276                           indf1	equ	0xFE7
 20277                           postinc1	equ	0xFE6
 20278                           postdec1	equ	0xFE5
 20279                           plusw1	equ	0xFE3
 20280                           fsr1h	equ	0xFE2
 20281                           fsr1l	equ	0xFE1
 20282                           indf2	equ	0xFDF
 20283                           postinc2	equ	0xFDE
 20284                           postdec2	equ	0xFDD
 20285                           plusw2	equ	0xFDB
 20286                           fsr2h	equ	0xFDA
 20287                           fsr2l	equ	0xFD9
 20288                           status	equ	0xFD8
 20289                           
 20290 ;; *************** function _radioBroadcast *****************
 20291 ;; Defined at:
 20292 ;;		line 110 in file "../src/Bridge.c"
 20293 ;; Parameters:    Size  Location     Type
 20294 ;;  data            2   92[BANK0 ] PTR unsigned char 
 20295 ;;		 -> RbcQ(444), beaconMessageBuffer(72), 
 20296 ;;  datasize        1   94[BANK0 ] unsigned char 
 20297 ;;  PANID           2   95[BANK0 ] unsigned int 
 20298 ;;  isSecure        1   97[BANK0 ] unsigned char 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;  i               1   98[BANK0 ] unsigned char 
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  1    wreg      unsigned char 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : F/0
 20307 ;;		On exit  : F/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20313 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20314 ;;Total ram usage:        7 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:   11
 20317 ;; This function calls:
 20318 ;;		_SendPacket
 20319 ;;		_memset
 20320 ;; This function is called by:
 20321 ;;		_networkSendBeacon
 20322 ;;		_BroadcastManagerTask
 20323 ;; This function uses a non-reentrant model
 20324 ;;
 20325                           
 20326                           	psect	text82
 20327  00683E                     __ptext82:
 20328                           	opt stack 0
 20329  00683E                     _radioBroadcast:
 20330                           	opt stack 15
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;Bridge.c: 112: static addr_t addr;
 20334                           ;Bridge.c: 113: uint8_t i;
 20335                           ;Bridge.c: 120: memset(addr.bytes,0xff,sizeof(addr));
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;incstack = 0
 20339  00683E  0EEA               	movlw	low radioBroadcast@addr
 20340  006840  6F73               	movwf	memset@p1& (0+255),b
 20341  006842  0E01               	movlw	high radioBroadcast@addr
 20342  006844  6F74               	movwf	(memset@p1+1)& (0+255),b
 20343  006846  6B76               	clrf	(memset@c+1)& (0+255),b
 20344  006848  6975               	setf	memset@c& (0+255),b
 20345  00684A  6B78               	clrf	(memset@n+1)& (0+255),b
 20346  00684C  0E02               	movlw	2
 20347  00684E  6F77               	movwf	memset@n& (0+255),b
 20348  006850  EC2F  F039         	call	_memset	;wreg free
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;Bridge.c: 121: TxIndex=0;
 20352  006854  6A41               	clrf	_TxIndex,c
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;Bridge.c: 122: for(i=0;i<datasize;i++)
 20356  006856  6BC2               	clrf	radioBroadcast@i& (0+255),b
 20357  006858  D010               	goto	l16448
 20358  00685A                     l16442:
 20359                           
 20360                           ; BSR set to: 0
 20361                           ;Bridge.c: 123: {
 20362                           ;Bridge.c: 124: TxBuff[TxIndex++]=data[i];
 20363  00685A  51C2               	movf	radioBroadcast@i& (0+255),w,b
 20364  00685C  25BC               	addwf	radioBroadcast@data& (0+255),w,b
 20365  00685E  6ED9               	movwf	fsr2l,c
 20366  006860  0E00               	movlw	0
 20367  006862  21BD               	addwfc	(radioBroadcast@data+1)& (0+255),w,b
 20368  006864  6EDA               	movwf	fsr2h,c
 20369  006866  0E48               	movlw	low _TxBuff
 20370  006868  2441               	addwf	_TxIndex,w,c
 20371  00686A  6EE1               	movwf	fsr1l,c
 20372  00686C  6AE2               	clrf	fsr1h,c
 20373  00686E  0E07               	movlw	high _TxBuff
 20374  006870  22E2               	addwfc	fsr1h,f,c
 20375  006872  CFDF FFE7          	movff	indf2,indf1
 20376                           
 20377                           ; BSR set to: 0
 20378  006876  2A41               	incf	_TxIndex,f,c
 20379                           
 20380                           ; BSR set to: 0
 20381  006878  2BC2               	incf	radioBroadcast@i& (0+255),f,b
 20382  00687A                     l16448:
 20383                           
 20384                           ; BSR set to: 0
 20385  00687A  51BE               	movf	radioBroadcast@datasize& (0+255),w,b
 20386  00687C  5DC2               	subwf	radioBroadcast@i& (0+255),w,b
 20387  00687E  E3ED               	bnc	l16442
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;Bridge.c: 125: }
 20391                           ;Bridge.c: 126: return SendPacket(1,addr.bytes,PANID,0,isSecure);
 20392                           ;	Return value of _radioBroadcast is never used
 20393  006880  0EEA               	movlw	low radioBroadcast@addr
 20394  006882  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 20395  006884  0E01               	movlw	high radioBroadcast@addr
 20396  006886  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 20397  006888  C0BF  F0B0         	movff	radioBroadcast@PANID,SendPacket@destinationPANID
 20398  00688C  C0C0  F0B1         	movff	radioBroadcast@PANID+1,SendPacket@destinationPANID+1
 20399  006890  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 20400  006892  C0C1  F0B3         	movff	radioBroadcast@isSecure,SendPacket@SecurityEnabled
 20401  006896  0E01               	movlw	1
 20402  006898  EF8A  F02F         	goto	_SendPacket
 20403  00689C                     __end_of_radioBroadcast:
 20404                           	opt stack 0
 20405                           tblptru	equ	0xFF8
 20406                           tblptrh	equ	0xFF7
 20407                           tblptrl	equ	0xFF6
 20408                           tablat	equ	0xFF5
 20409                           prodh	equ	0xFF4
 20410                           prodl	equ	0xFF3
 20411                           intcon	equ	0xFF2
 20412                           postinc0	equ	0xFEE
 20413                           plusw0	equ	0xFEB
 20414                           fsr0h	equ	0xFEA
 20415                           fsr0l	equ	0xFE9
 20416                           wreg	equ	0xFE8
 20417                           indf1	equ	0xFE7
 20418                           postinc1	equ	0xFE6
 20419                           postdec1	equ	0xFE5
 20420                           plusw1	equ	0xFE3
 20421                           fsr1h	equ	0xFE2
 20422                           fsr1l	equ	0xFE1
 20423                           indf2	equ	0xFDF
 20424                           postinc2	equ	0xFDE
 20425                           postdec2	equ	0xFDD
 20426                           plusw2	equ	0xFDB
 20427                           fsr2h	equ	0xFDA
 20428                           fsr2l	equ	0xFD9
 20429                           status	equ	0xFD8
 20430                           
 20431 ;; *************** function _SendPacket *****************
 20432 ;; Defined at:
 20433 ;;		line 67 in file "../src/Bridge.c"
 20434 ;; Parameters:    Size  Location     Type
 20435 ;;  Broadcast       1    wreg     unsigned char 
 20436 ;;  DestinationA    2   78[BANK0 ] PTR unsigned char 
 20437 ;;		 -> radioUnicast@addr(2), radioBroadcast@addr(2), 
 20438 ;;  destinationP    2   80[BANK0 ] unsigned int 
 20439 ;;  isCommand       1   82[BANK0 ] unsigned char 
 20440 ;;  SecurityEnab    1   83[BANK0 ] unsigned char 
 20441 ;; Auto vars:     Size  Location     Type
 20442 ;;  Broadcast       1   86[BANK0 ] unsigned char 
 20443 ;;  tParam          5   87[BANK0 ] struct .
 20444 ;;  status          1   85[BANK0 ] unsigned char 
 20445 ;; Return value:  Size  Location     Type
 20446 ;;                  1    wreg      unsigned char 
 20447 ;; Registers used:
 20448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20449 ;; Tracked objects:
 20450 ;;		On entry : F/0
 20451 ;;		On exit  : F/0
 20452 ;;		Unchanged: 0/0
 20453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20454 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20455 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20457 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20458 ;;Total ram usage:       14 bytes
 20459 ;; Hardware stack levels used:    1
 20460 ;; Hardware stack levels required when called:   10
 20461 ;; This function calls:
 20462 ;;		_MiMAC_SendPacket
 20463 ;; This function is called by:
 20464 ;;		_radioBroadcast
 20465 ;;		_radioUnicast
 20466 ;; This function uses a non-reentrant model
 20467 ;;
 20468                           
 20469                           	psect	text83
 20470  005F14                     __ptext83:
 20471                           	opt stack 0
 20472  005F14                     _SendPacket:
 20473                           	opt stack 15
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;incstack = 0
 20477                           ;SendPacket@Broadcast stored from wreg
 20478  005F14  6FB6               	movwf	SendPacket@Broadcast& (0+255),b
 20479                           
 20480                           ;Bridge.c: 69: MAC_TRANS_PARAM tParam;
 20481                           ;Bridge.c: 70: bool status;
 20482                           ;Bridge.c: 72: tParam.flags.Val = 0;
 20483  005F16  0100               	movlb	0	; () banked
 20484  005F18  6BB7               	clrf	SendPacket@tParam& (0+255),b
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;Bridge.c: 73: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 20488  005F1A  51B2               	movf	SendPacket@isCommand& (0+255),w,b
 20489  005F1C  E003               	bz	u18650
 20490  005F1E  6BB4               	clrf	??_SendPacket& (0+255),b
 20491  005F20  2BB4               	incf	??_SendPacket& (0+255),f,b
 20492  005F22  D002               	goto	u18668
 20493  005F24                     u18650:
 20494  005F24  0100               	movlb	0	; () banked
 20495  005F26  6BB4               	clrf	??_SendPacket& (0+255),b
 20496  005F28                     u18668:
 20497  005F28  51B7               	movf	SendPacket@tParam& (0+255),w,b
 20498  005F2A  19B4               	xorwf	??_SendPacket& (0+255),w,b
 20499  005F2C  0BFC               	andlw	-4
 20500  005F2E  19B4               	xorwf	??_SendPacket& (0+255),w,b
 20501  005F30  6FB7               	movwf	SendPacket@tParam& (0+255),b
 20502                           
 20503                           ;Bridge.c: 74: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 20504  005F32  51B6               	movf	SendPacket@Broadcast& (0+255),w,b
 20505  005F34  E103               	bnz	u18670
 20506  005F36  6BB4               	clrf	??_SendPacket& (0+255),b
 20507  005F38  2BB4               	incf	??_SendPacket& (0+255),f,b
 20508  005F3A  D002               	goto	u18688
 20509  005F3C                     u18670:
 20510  005F3C  0100               	movlb	0	; () banked
 20511  005F3E  6BB4               	clrf	??_SendPacket& (0+255),b
 20512  005F40                     u18688:
 20513  005F40  3BB4               	swapf	??_SendPacket& (0+255),f,b
 20514  005F42  47B4               	rlncf	??_SendPacket& (0+255),f,b
 20515  005F44  51B7               	movf	SendPacket@tParam& (0+255),w,b
 20516  005F46  19B4               	xorwf	??_SendPacket& (0+255),w,b
 20517  005F48  0BDF               	andlw	-33
 20518  005F4A  19B4               	xorwf	??_SendPacket& (0+255),w,b
 20519  005F4C  6FB7               	movwf	SendPacket@tParam& (0+255),b
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;Bridge.c: 75: tParam.flags.bits.broadcast = Broadcast;
 20523  005F4E  B1B6               	btfsc	SendPacket@Broadcast& (0+255),0,b
 20524  005F50  D002               	bra	u18695
 20525  005F52  95B7               	bcf	SendPacket@tParam& (0+255),2,b
 20526  005F54  D002               	bra	u18696
 20527  005F56                     u18695:
 20528  005F56  0100               	movlb	0	; () banked
 20529  005F58  85B7               	bsf	SendPacket@tParam& (0+255),2,b
 20530  005F5A                     u18696:
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;Bridge.c: 76: tParam.flags.bits.secEn = SecurityEnabled;
 20534  005F5A  B1B3               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 20535  005F5C  D002               	bra	u18705
 20536  005F5E  97B7               	bcf	SendPacket@tParam& (0+255),3,b
 20537  005F60  D002               	bra	u18706
 20538  005F62                     u18705:
 20539  005F62  0100               	movlb	0	; () banked
 20540  005F64  87B7               	bsf	SendPacket@tParam& (0+255),3,b
 20541  005F66                     u18706:
 20542                           
 20543                           ; BSR set to: 0
 20544                           ;Bridge.c: 85: tParam.flags.bits.destPrsnt = 1;
 20545  005F66  8DB7               	bsf	SendPacket@tParam& (0+255),6,b
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;Bridge.c: 98: tParam.flags.bits.sourcePrsnt = 1;
 20549  005F68  8FB7               	bsf	SendPacket@tParam& (0+255),7,b
 20550                           
 20551                           ;Bridge.c: 101: tParam.DestAddress = DestinationAddress;
 20552  005F6A  C0AE  F0B8         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 20553  005F6E  C0AF  F0B9         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;Bridge.c: 102: tParam.DestPANID.Val = destinationPANID;
 20557  005F72  C0B0  F0BA         	movff	SendPacket@destinationPANID,SendPacket@tParam+3
 20558  005F76  C0B1  F0BB         	movff	SendPacket@destinationPANID+1,SendPacket@tParam+4
 20559                           
 20560                           ; BSR set to: 0
 20561                           ;Bridge.c: 104: status = MiMAC_SendPacket(tParam, TxBuff, TxIndex);
 20562  005F7A  EE20  F0B7         	lfsr	2,SendPacket@tParam
 20563  005F7E  EE00  F0A2         	lfsr	0,MiMAC_SendPacket@transParam
 20564  005F82  0E04               	movlw	4
 20565  005F84                     u18711:
 20566  005F84  CFDB FFEB          	movff	plusw2,plusw0
 20567  005F88  06E8               	decf	wreg,f,c
 20568  005F8A  E2FC               	bc	u18711
 20569  005F8C  0E48               	movlw	low _TxBuff
 20570  005F8E  6FA7               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 20571  005F90  0E07               	movlw	high _TxBuff
 20572  005F92  6FA8               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 20573  005F94  C041  F0A9         	movff	_TxIndex,MiMAC_SendPacket@MACPayloadLen
 20574  005F98  EC3F  F01A         	call	_MiMAC_SendPacket	;wreg free
 20575  005F9C  6FB5               	movwf	SendPacket@status& (0+255),b
 20576                           
 20577                           ; BSR set to: 0
 20578                           ;Bridge.c: 105: TxIndex = 0;
 20579  005F9E  6A41               	clrf	_TxIndex,c
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;Bridge.c: 107: return status;
 20583  005FA0  51B5               	movf	SendPacket@status& (0+255),w,b
 20584                           
 20585                           ; BSR set to: 0
 20586  005FA2  0012               	return		;funcret
 20587  005FA4                     __end_of_SendPacket:
 20588                           	opt stack 0
 20589                           tblptru	equ	0xFF8
 20590                           tblptrh	equ	0xFF7
 20591                           tblptrl	equ	0xFF6
 20592                           tablat	equ	0xFF5
 20593                           prodh	equ	0xFF4
 20594                           prodl	equ	0xFF3
 20595                           intcon	equ	0xFF2
 20596                           postinc0	equ	0xFEE
 20597                           plusw0	equ	0xFEB
 20598                           fsr0h	equ	0xFEA
 20599                           fsr0l	equ	0xFE9
 20600                           wreg	equ	0xFE8
 20601                           indf1	equ	0xFE7
 20602                           postinc1	equ	0xFE6
 20603                           postdec1	equ	0xFE5
 20604                           plusw1	equ	0xFE3
 20605                           fsr1h	equ	0xFE2
 20606                           fsr1l	equ	0xFE1
 20607                           indf2	equ	0xFDF
 20608                           postinc2	equ	0xFDE
 20609                           postdec2	equ	0xFDD
 20610                           plusw2	equ	0xFDB
 20611                           fsr2h	equ	0xFDA
 20612                           fsr2l	equ	0xFD9
 20613                           status	equ	0xFD8
 20614                           
 20615 ;; *************** function _MiMAC_SendPacket *****************
 20616 ;; Defined at:
 20617 ;;		line 803 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 20618 ;; Parameters:    Size  Location     Type
 20619 ;;  transParam      5   66[BANK0 ] struct .
 20620 ;;  MACPayload      2   71[BANK0 ] PTR unsigned char 
 20621 ;;		 -> TxBuff(64), 
 20622 ;;  MACPayloadLe    1   73[BANK0 ] unsigned char 
 20623 ;; Auto vars:     Size  Location     Type
 20624 ;;  headerLen       1   75[BANK0 ] unsigned char 
 20625 ;;  TxIndex         1   77[BANK0 ] unsigned char 
 20626 ;;  i               1   76[BANK0 ] unsigned char 
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      unsigned char 
 20629 ;; Registers used:
 20630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : F/0
 20633 ;;		On exit  : F/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20636 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20637 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20639 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20640 ;;Total ram usage:       12 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:    9
 20643 ;; This function calls:
 20644 ;;		_CCM_Enc
 20645 ;;		_TxPacket
 20646 ;;		_memcpy
 20647 ;; This function is called by:
 20648 ;;		_SendPacket
 20649 ;; This function uses a non-reentrant model
 20650 ;;
 20651                           
 20652                           	psect	text84
 20653  00347E                     __ptext84:
 20654                           	opt stack 0
 20655  00347E                     _MiMAC_SendPacket:
 20656                           	opt stack 15
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;drv_mrf_miwi_mesh_89xa.c: 807: uint8_t i;
 20660                           ;drv_mrf_miwi_mesh_89xa.c: 808: uint8_t TxIndex;
 20661                           ;drv_mrf_miwi_mesh_89xa.c: 810: if( MACPayloadLen > 54 )
 20662                           
 20663                           ; BSR set to: 0
 20664                           ;incstack = 0
 20665  00347E  0E36               	movlw	54
 20666  003480  65A9               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 20667  003482  D001               	goto	l15852
 20668  003484  0C00               	retlw	0
 20669  003486                     l15852:
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;drv_mrf_miwi_mesh_89xa.c: 813: }
 20673                           ;drv_mrf_miwi_mesh_89xa.c: 825: if( transParam.flags.bits.packetType == 0x01 )
 20674  003486  51A2               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 20675  003488  0B03               	andlw	3
 20676  00348A  06E8               	decf	wreg,f,c
 20677  00348C  E101               	bnz	l793
 20678                           
 20679                           ; BSR set to: 0
 20680                           ;drv_mrf_miwi_mesh_89xa.c: 826: {
 20681                           ;drv_mrf_miwi_mesh_89xa.c: 827: transParam.flags.bits.sourcePrsnt = 1;
 20682  00348E  8FA2               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 20683  003490                     l793:
 20684                           
 20685                           ; BSR set to: 0
 20686                           ;drv_mrf_miwi_mesh_89xa.c: 828: }
 20687                           ;drv_mrf_miwi_mesh_89xa.c: 831: TxIndex = 0;
 20688  003490  6BAD               	clrf	MiMAC_SendPacket@TxIndex& (0+255),b
 20689                           
 20690                           ; BSR set to: 0
 20691                           ;drv_mrf_miwi_mesh_89xa.c: 833: MACTxBuffer[TxIndex++] = transParam.flags.Val;
 20692  003492  C0A2  F478         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 20693                           
 20694                           ; BSR set to: 0
 20695  003496  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;drv_mrf_miwi_mesh_89xa.c: 834: MACTxBuffer[TxIndex++] = MACSeq++;
 20699  003498  0E78               	movlw	low _MACTxBuffer
 20700  00349A  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20701  00349C  6ED9               	movwf	fsr2l,c
 20702  00349E  6ADA               	clrf	fsr2h,c
 20703  0034A0  0E04               	movlw	high _MACTxBuffer
 20704  0034A2  22DA               	addwfc	fsr2h,f,c
 20705  0034A4  C03D  FFDF         	movff	_MACSeq,indf2
 20706  0034A8  2A3D               	incf	_MACSeq,f,c
 20707  0034AA  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;drv_mrf_miwi_mesh_89xa.c: 839: }
 20711                           ;drv_mrf_miwi_mesh_89xa.c: 841: if( transParam.flags.bits.destPrsnt )
 20712                           
 20713                           ;drv_mrf_miwi_mesh_89xa.c: 837: {
 20714  0034AC  ADA2               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 20715  0034AE  D02A               	goto	l795
 20716                           
 20717                           ; BSR set to: 0
 20718                           ;drv_mrf_miwi_mesh_89xa.c: 842: {
 20719                           ;drv_mrf_miwi_mesh_89xa.c: 843: memcpy((uint8_t*)&MACTxBuffer[TxIndex],transParam.DestPA
      +                          NID.v,2);
 20720  0034B0  0E78               	movlw	low _MACTxBuffer
 20721  0034B2  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20722  0034B4  6F75               	movwf	memcpy@d1& (0+255),b
 20723  0034B6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 20724  0034B8  0E04               	movlw	high _MACTxBuffer
 20725  0034BA  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20726  0034BC  0EA5               	movlw	low (MiMAC_SendPacket@transParam+3)
 20727  0034BE  6F77               	movwf	memcpy@s1& (0+255),b
 20728  0034C0  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 20729  0034C2  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20730  0034C4  0E02               	movlw	2
 20731  0034C6  6F79               	movwf	memcpy@n& (0+255),b
 20732  0034C8  EC54  F035         	call	_memcpy	;wreg free
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;drv_mrf_miwi_mesh_89xa.c: 844: TxIndex+=2;
 20736  0034CC  0E02               	movlw	2
 20737  0034CE  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;drv_mrf_miwi_mesh_89xa.c: 845: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 20741  0034D0  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 20742  0034D2  D010               	goto	l15876
 20743  0034D4                     l15870:
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;drv_mrf_miwi_mesh_89xa.c: 846: {
 20747                           ;drv_mrf_miwi_mesh_89xa.c: 847: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 20748  0034D4  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 20749  0034D6  25A3               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 20750  0034D8  6ED9               	movwf	fsr2l,c
 20751  0034DA  0E00               	movlw	0
 20752  0034DC  21A4               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 20753  0034DE  6EDA               	movwf	fsr2h,c
 20754  0034E0  0E78               	movlw	low _MACTxBuffer
 20755  0034E2  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20756  0034E4  6EE1               	movwf	fsr1l,c
 20757  0034E6  6AE2               	clrf	fsr1h,c
 20758  0034E8  0E04               	movlw	high _MACTxBuffer
 20759  0034EA  22E2               	addwfc	fsr1h,f,c
 20760  0034EC  CFDF FFE7          	movff	indf2,indf1
 20761                           
 20762                           ; BSR set to: 0
 20763  0034F0  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20764                           
 20765                           ; BSR set to: 0
 20766  0034F2  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 20767  0034F4                     l15876:
 20768                           
 20769                           ; BSR set to: 0
 20770  0034F4  3036               	rrcf	_MACInitParams,w,c
 20771  0034F6  32E8               	rrcf	wreg,f,c
 20772  0034F8  32E8               	rrcf	wreg,f,c
 20773  0034FA  0B0F               	andlw	15
 20774  0034FC  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 20775  0034FE  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 20776  003500  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 20777  003502  E3E8               	bnc	l15870
 20778  003504                     l795:
 20779                           
 20780                           ; BSR set to: 0
 20781                           ;drv_mrf_miwi_mesh_89xa.c: 848: }
 20782                           ;drv_mrf_miwi_mesh_89xa.c: 849: }
 20783                           ;drv_mrf_miwi_mesh_89xa.c: 851: if( transParam.flags.bits.sourcePrsnt )
 20784  003504  AFA2               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 20785  003506  D02A               	goto	l799
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;drv_mrf_miwi_mesh_89xa.c: 852: {
 20789                           ;drv_mrf_miwi_mesh_89xa.c: 853: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&myPANID,2);
 20790  003508  0E78               	movlw	low _MACTxBuffer
 20791  00350A  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20792  00350C  6F75               	movwf	memcpy@d1& (0+255),b
 20793  00350E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 20794  003510  0E04               	movlw	high _MACTxBuffer
 20795  003512  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20796  003514  0EEB               	movlw	low _myPANID
 20797  003516  6F77               	movwf	memcpy@s1& (0+255),b
 20798  003518  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 20799  00351A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20800  00351C  0E02               	movlw	2
 20801  00351E  6F79               	movwf	memcpy@n& (0+255),b
 20802  003520  EC54  F035         	call	_memcpy	;wreg free
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;drv_mrf_miwi_mesh_89xa.c: 854: TxIndex+=2;
 20806  003524  0E02               	movlw	2
 20807  003526  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;drv_mrf_miwi_mesh_89xa.c: 855: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 20811  003528  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 20812  00352A  D010               	goto	l15890
 20813  00352C                     l15884:
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;drv_mrf_miwi_mesh_89xa.c: 856: {
 20817                           ;drv_mrf_miwi_mesh_89xa.c: 857: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 20818  00352C  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 20819  00352E  2437               	addwf	_MACInitParams+1,w,c
 20820  003530  6ED9               	movwf	fsr2l,c
 20821  003532  0E00               	movlw	0
 20822  003534  2038               	addwfc	_MACInitParams+2,w,c
 20823  003536  6EDA               	movwf	fsr2h,c
 20824  003538  0E78               	movlw	low _MACTxBuffer
 20825  00353A  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20826  00353C  6EE1               	movwf	fsr1l,c
 20827  00353E  6AE2               	clrf	fsr1h,c
 20828  003540  0E04               	movlw	high _MACTxBuffer
 20829  003542  22E2               	addwfc	fsr1h,f,c
 20830  003544  CFDF FFE7          	movff	indf2,indf1
 20831                           
 20832                           ; BSR set to: 0
 20833  003548  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20834                           
 20835                           ; BSR set to: 0
 20836  00354A  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 20837  00354C                     l15890:
 20838                           
 20839                           ; BSR set to: 0
 20840  00354C  3036               	rrcf	_MACInitParams,w,c
 20841  00354E  32E8               	rrcf	wreg,f,c
 20842  003550  32E8               	rrcf	wreg,f,c
 20843  003552  0B0F               	andlw	15
 20844  003554  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 20845  003556  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 20846  003558  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 20847  00355A  E3E8               	bnc	l15884
 20848  00355C                     l799:
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;drv_mrf_miwi_mesh_89xa.c: 858: }
 20852                           ;drv_mrf_miwi_mesh_89xa.c: 859: }
 20853                           ;drv_mrf_miwi_mesh_89xa.c: 862: if( transParam.flags.bits.secEn )
 20854  00355C  A7A2               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 20855  00355E  D048               	goto	l803
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;drv_mrf_miwi_mesh_89xa.c: 863: {
 20859                           ;drv_mrf_miwi_mesh_89xa.c: 864: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&OutgoingFrameCou
      +                          nter,4);
 20860  003560  0E78               	movlw	low _MACTxBuffer
 20861  003562  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20862  003564  6F75               	movwf	memcpy@d1& (0+255),b
 20863  003566  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 20864  003568  0E04               	movlw	high _MACTxBuffer
 20865  00356A  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20866  00356C  0E59               	movlw	low _OutgoingFrameCounter
 20867  00356E  6F77               	movwf	memcpy@s1& (0+255),b
 20868  003570  0E02               	movlw	high _OutgoingFrameCounter
 20869  003572  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 20870  003574  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20871  003576  0E04               	movlw	4
 20872  003578  6F79               	movwf	memcpy@n& (0+255),b
 20873  00357A  EC54  F035         	call	_memcpy	;wreg free
 20874                           
 20875                           ; BSR set to: 0
 20876                           ;drv_mrf_miwi_mesh_89xa.c: 865: TxIndex+=4;
 20877  00357E  0E04               	movlw	4
 20878  003580  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;drv_mrf_miwi_mesh_89xa.c: 866: OutgoingFrameCounter++;
 20882  003582  0102               	movlb	2	; () banked
 20883  003584  2B59               	incf	_OutgoingFrameCounter& (0+255),f,b
 20884  003586  0E00               	movlw	0
 20885  003588  235A               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 20886  00358A  235B               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 20887  00358C  235C               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 20888                           
 20889                           ; BSR set to: 2
 20890                           ;drv_mrf_miwi_mesh_89xa.c: 873: MACTxBuffer[TxIndex++] = 0x00;
 20891  00358E  0E78               	movlw	low _MACTxBuffer
 20892  003590  0100               	movlb	0	; () banked
 20893  003592  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20894  003594  6ED9               	movwf	fsr2l,c
 20895  003596  6ADA               	clrf	fsr2h,c
 20896  003598  0E04               	movlw	high _MACTxBuffer
 20897  00359A  22DA               	addwfc	fsr2h,f,c
 20898  00359C  6ADF               	clrf	indf2,c
 20899                           
 20900                           ; BSR set to: 0
 20901  00359E  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;drv_mrf_miwi_mesh_89xa.c: 875: {
 20905                           ;drv_mrf_miwi_mesh_89xa.c: 876: uint8_t headerLen;
 20906                           ;drv_mrf_miwi_mesh_89xa.c: 878: headerLen = TxIndex;
 20907  0035A0  C0AD  F0AB         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;drv_mrf_miwi_mesh_89xa.c: 880: for(i = 0; i < MACPayloadLen; i++)
 20911  0035A4  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 20912  0035A6  D010               	goto	l15912
 20913  0035A8                     l15906:
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;drv_mrf_miwi_mesh_89xa.c: 881: {
 20917                           ;drv_mrf_miwi_mesh_89xa.c: 882: MACTxBuffer[TxIndex++] = MACPayload[i];
 20918  0035A8  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 20919  0035AA  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 20920  0035AC  6ED9               	movwf	fsr2l,c
 20921  0035AE  0E00               	movlw	0
 20922  0035B0  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 20923  0035B2  6EDA               	movwf	fsr2h,c
 20924  0035B4  0E78               	movlw	low _MACTxBuffer
 20925  0035B6  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20926  0035B8  6EE1               	movwf	fsr1l,c
 20927  0035BA  6AE2               	clrf	fsr1h,c
 20928  0035BC  0E04               	movlw	high _MACTxBuffer
 20929  0035BE  22E2               	addwfc	fsr1h,f,c
 20930  0035C0  CFDF FFE7          	movff	indf2,indf1
 20931                           
 20932                           ; BSR set to: 0
 20933  0035C4  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20934                           
 20935                           ; BSR set to: 0
 20936  0035C6  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 20937  0035C8                     l15912:
 20938                           
 20939                           ; BSR set to: 0
 20940  0035C8  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 20941  0035CA  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 20942  0035CC  E3ED               	bnc	l15906
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;drv_mrf_miwi_mesh_89xa.c: 883: }
 20946                           ;drv_mrf_miwi_mesh_89xa.c: 903: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen
      +                          , key);
 20947  0035CE  0E78               	movlw	low _MACTxBuffer
 20948  0035D0  6F97               	movwf	CCM_Enc@text& (0+255),b
 20949  0035D2  0E04               	movlw	high _MACTxBuffer
 20950  0035D4  6F98               	movwf	(CCM_Enc@text+1)& (0+255),b
 20951  0035D6  C0AB  F099         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 20952  0035DA  C0A9  F09A         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 20953  0035DE  0E51               	movlw	low _key
 20954  0035E0  6F9B               	movwf	CCM_Enc@key& (0+255),b
 20955  0035E2  0E02               	movlw	high _key
 20956  0035E4  6F9C               	movwf	(CCM_Enc@key+1)& (0+255),b
 20957  0035E6  ECA4  F02B         	call	_CCM_Enc	;wreg free
 20958                           
 20959                           ; BSR set to: 0
 20960                           ;drv_mrf_miwi_mesh_89xa.c: 904: TxIndex += 2;
 20961  0035EA  0E02               	movlw	2
 20962  0035EC  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20963                           
 20964                           ;drv_mrf_miwi_mesh_89xa.c: 911: }
 20965                           ;drv_mrf_miwi_mesh_89xa.c: 912: }
 20966  0035EE  D015               	goto	l15926
 20967  0035F0                     l803:
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;drv_mrf_miwi_mesh_89xa.c: 913: else
 20971                           ;drv_mrf_miwi_mesh_89xa.c: 917: for(i = 0; i < MACPayloadLen; i++)
 20972  0035F0  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 20973  0035F2  D010               	goto	l15924
 20974  0035F4                     l15918:
 20975                           
 20976                           ; BSR set to: 0
 20977                           ;drv_mrf_miwi_mesh_89xa.c: 918: {
 20978                           ;drv_mrf_miwi_mesh_89xa.c: 919: MACTxBuffer[TxIndex++] = MACPayload[i];
 20979  0035F4  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 20980  0035F6  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 20981  0035F8  6ED9               	movwf	fsr2l,c
 20982  0035FA  0E00               	movlw	0
 20983  0035FC  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 20984  0035FE  6EDA               	movwf	fsr2h,c
 20985  003600  0E78               	movlw	low _MACTxBuffer
 20986  003602  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 20987  003604  6EE1               	movwf	fsr1l,c
 20988  003606  6AE2               	clrf	fsr1h,c
 20989  003608  0E04               	movlw	high _MACTxBuffer
 20990  00360A  22E2               	addwfc	fsr1h,f,c
 20991  00360C  CFDF FFE7          	movff	indf2,indf1
 20992                           
 20993                           ; BSR set to: 0
 20994  003610  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 20995                           
 20996                           ; BSR set to: 0
 20997  003612  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 20998  003614                     l15924:
 20999                           
 21000                           ; BSR set to: 0
 21001  003614  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 21002  003616  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 21003  003618  E3ED               	bnc	l15918
 21004  00361A                     l15926:
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;drv_mrf_miwi_mesh_89xa.c: 920: }
 21008                           ;drv_mrf_miwi_mesh_89xa.c: 922: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.
      +                          CCAEnable);
 21009  00361A  0E00               	movlw	0
 21010  00361C  B236               	btfsc	_MACInitParams,1,c
 21011  00361E  0E01               	movlw	1
 21012  003620  6F87               	movwf	TxPacket@CCA& (0+255),b
 21013  003622  51AD               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 21014  003624  EFA4  F021         	goto	_TxPacket
 21015  003628                     __end_of_MiMAC_SendPacket:
 21016                           	opt stack 0
 21017                           tblptru	equ	0xFF8
 21018                           tblptrh	equ	0xFF7
 21019                           tblptrl	equ	0xFF6
 21020                           tablat	equ	0xFF5
 21021                           prodh	equ	0xFF4
 21022                           prodl	equ	0xFF3
 21023                           intcon	equ	0xFF2
 21024                           postinc0	equ	0xFEE
 21025                           plusw0	equ	0xFEB
 21026                           fsr0h	equ	0xFEA
 21027                           fsr0l	equ	0xFE9
 21028                           wreg	equ	0xFE8
 21029                           indf1	equ	0xFE7
 21030                           postinc1	equ	0xFE6
 21031                           postdec1	equ	0xFE5
 21032                           plusw1	equ	0xFE3
 21033                           fsr1h	equ	0xFE2
 21034                           fsr1l	equ	0xFE1
 21035                           indf2	equ	0xFDF
 21036                           postinc2	equ	0xFDE
 21037                           postdec2	equ	0xFDD
 21038                           plusw2	equ	0xFDB
 21039                           fsr2h	equ	0xFDA
 21040                           fsr2l	equ	0xFD9
 21041                           status	equ	0xFD8
 21042                           
 21043 ;; *************** function _TxPacket *****************
 21044 ;; Defined at:
 21045 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 21046 ;; Parameters:    Size  Location     Type
 21047 ;;  TxPacketLen     1    wreg     unsigned char 
 21048 ;;  CCA             1   39[BANK0 ] unsigned char 
 21049 ;; Auto vars:     Size  Location     Type
 21050 ;;  TxPacketLen     1   59[BANK0 ] unsigned char 
 21051 ;;  j               2   56[BANK0 ] unsigned int 
 21052 ;;  delay           2   52[BANK0 ] unsigned int 
 21053 ;;  allowedTxFai    1   55[BANK0 ] unsigned char 
 21054 ;;  t2              4   48[BANK0 ] struct MIWI_TICK_t
 21055 ;;  t1              4   44[BANK0 ] struct MIWI_TICK_t
 21056 ;;  i               1   61[BANK0 ] unsigned char 
 21057 ;;  status          1   60[BANK0 ] unsigned char 
 21058 ;;  rssival         1   58[BANK0 ] unsigned char 
 21059 ;;  reTry           1   54[BANK0 ] unsigned char 
 21060 ;;  CCARetries      1    0        unsigned char 
 21061 ;; Return value:  Size  Location     Type
 21062 ;;                  1    wreg      unsigned char 
 21063 ;; Registers used:
 21064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21065 ;; Tracked objects:
 21066 ;;		On entry : F/0
 21067 ;;		On exit  : F/0
 21068 ;;		Unchanged: 0/0
 21069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21070 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21071 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21073 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21074 ;;Total ram usage:       23 bytes
 21075 ;; Hardware stack levels used:    1
 21076 ;; Hardware stack levels required when called:    8
 21077 ;; This function calls:
 21078 ;;		_DelayMs
 21079 ;;		_MiWi_TickGetMs
 21080 ;;		_RegisterRead
 21081 ;;		_RegisterSet
 21082 ;;		_SetRFMode
 21083 ;;		_WriteFIFO
 21084 ;;		_krnd
 21085 ;; This function is called by:
 21086 ;;		_MiMAC_SendPacket
 21087 ;; This function uses a non-reentrant model
 21088 ;;
 21089                           
 21090                           	psect	text85
 21091  004348                     __ptext85:
 21092                           	opt stack 0
 21093  004348                     _TxPacket:
 21094                           	opt stack 15
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;incstack = 0
 21098                           ;TxPacket@TxPacketLen stored from wreg
 21099  004348  6F9B               	movwf	TxPacket@TxPacketLen& (0+255),b
 21100                           
 21101                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 21102                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 21103                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 21104                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 21105                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 21106                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 21107  00434A  0E03               	movlw	3
 21108  00434C  0100               	movlb	0	; () banked
 21109  00434E  6F96               	movwf	TxPacket@reTry& (0+255),b
 21110                           
 21111                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 21112  004350  D099               	goto	l15806
 21113  004352                     l730:
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 21117                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 21118                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 21119  004352  6B97               	clrf	TxPacket@allowedTxFailure& (0+255),b
 21120  004354                     l731:
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 21124  004354  6A43               	clrf	_hasAck,c	;volatile
 21125                           
 21126                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 21127  004356  96F0               	bcf	intcon3,3,c	;volatile
 21128                           
 21129                           ; BSR set to: 0
 21130                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 21131  004358  0E20               	movlw	32
 21132  00435A  ECBF  F032         	call	_SetRFMode
 21133                           
 21134                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 21135  00435E  0E1A               	movlw	26
 21136  004360  0100               	movlb	0	; () banked
 21137  004362  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 21138  004364  0EC9               	movlw	201
 21139  004366  6F75               	movwf	RegisterSet@setting& (0+255),b
 21140  004368  EC44  F039         	call	_RegisterSet	;wreg free
 21141                           
 21142                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 21143  00436C  0100               	movlb	0	; () banked
 21144  00436E  519B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 21145  004370  ECA7  F039         	call	_WriteFIFO
 21146                           
 21147                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 21148  004374  0100               	movlb	0	; () banked
 21149  004376  6B9D               	clrf	TxPacket@i& (0+255),b
 21150  004378  D00B               	goto	l15744
 21151  00437A                     l15740:
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 21155                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 21156  00437A  0E78               	movlw	low _MACTxBuffer
 21157  00437C  259D               	addwf	TxPacket@i& (0+255),w,b
 21158  00437E  6ED9               	movwf	fsr2l,c
 21159  004380  6ADA               	clrf	fsr2h,c
 21160  004382  0E04               	movlw	high _MACTxBuffer
 21161  004384  22DA               	addwfc	fsr2h,f,c
 21162  004386  50DF               	movf	indf2,w,c
 21163  004388  ECA7  F039         	call	_WriteFIFO
 21164  00438C  0100               	movlb	0	; () banked
 21165  00438E  2B9D               	incf	TxPacket@i& (0+255),f,b
 21166  004390                     l15744:
 21167                           
 21168                           ; BSR set to: 0
 21169  004390  519B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 21170  004392  5D9D               	subwf	TxPacket@i& (0+255),w,b
 21171  004394  E3F2               	bnc	l15740
 21172                           
 21173                           ; BSR set to: 0
 21174                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 21175  004396  5187               	movf	TxPacket@CCA& (0+255),w,b
 21176  004398  E02C               	bz	l15774
 21177                           
 21178                           ; BSR set to: 0
 21179                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 21180                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 21181  00439A  6B9D               	clrf	TxPacket@i& (0+255),b
 21182  00439C                     l15754:
 21183                           
 21184                           ; BSR set to: 0
 21185                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 21186                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 21187  00439C  0E28               	movlw	40
 21188  00439E  ECD2  F038         	call	_RegisterRead
 21189  0043A2  6F9A               	movwf	TxPacket@rssival& (0+255),b
 21190                           
 21191                           ; BSR set to: 0
 21192                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 21193  0043A4  90D8               	bcf	status,0,c
 21194  0043A6  339A               	rrcf	TxPacket@rssival& (0+255),f,b
 21195                           
 21196                           ; BSR set to: 0
 21197                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 21198  0043A8  0E41               	movlw	65
 21199  0043AA  659A               	cpfsgt	TxPacket@rssival& (0+255),b
 21200  0043AC  D022               	goto	l15774
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 21204                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 21205                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 21206                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 21207  0043AE  ECEF  F01E         	call	_krnd	;wreg free
 21208  0043B2  0E1F               	movlw	31
 21209  0043B4  1773               	andwf	?_krnd& (0+255),f,b
 21210  0043B6  6B74               	clrf	(?_krnd+1)& (0+255),b
 21211  0043B8  0E08               	movlw	8
 21212  0043BA  2573               	addwf	?_krnd& (0+255),w,b
 21213  0043BC  6F94               	movwf	TxPacket@delay& (0+255),b
 21214  0043BE  0E00               	movlw	0
 21215  0043C0  2174               	addwfc	(?_krnd+1)& (0+255),w,b
 21216  0043C2  6F95               	movwf	(TxPacket@delay+1)& (0+255),b
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 21220  0043C4  6B98               	clrf	TxPacket@j& (0+255),b
 21221  0043C6  6B99               	clrf	(TxPacket@j+1)& (0+255),b
 21222  0043C8  D00B               	goto	l15768
 21223  0043CA                     l740:
 21224                           
 21225                           ; BSR set to: 0
 21226  0043CA  0004               	clrwdt		;# 
 21227                           
 21228                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 21229  0043CC  0E01               	movlw	1
 21230  0043CE  0100               	movlb	0	; () banked
 21231  0043D0  6F7B               	movwf	DelayMs@ms& (0+255),b
 21232  0043D2  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 21233  0043D4  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 21234  0043D6  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 21235  0043D8  ECAC  F02E         	call	_DelayMs	;wreg free
 21236                           
 21237                           ; BSR set to: 0
 21238  0043DC  4B98               	infsnz	TxPacket@j& (0+255),f,b
 21239  0043DE  2B99               	incf	(TxPacket@j+1)& (0+255),f,b
 21240  0043E0                     l15768:
 21241                           
 21242                           ; BSR set to: 0
 21243  0043E0  5194               	movf	TxPacket@delay& (0+255),w,b
 21244  0043E2  5D98               	subwf	TxPacket@j& (0+255),w,b
 21245  0043E4  5195               	movf	(TxPacket@delay+1)& (0+255),w,b
 21246  0043E6  5999               	subwfb	(TxPacket@j+1)& (0+255),w,b
 21247  0043E8  E3F0               	bnc	l740
 21248                           
 21249                           ; BSR set to: 0
 21250  0043EA  2B9D               	incf	TxPacket@i& (0+255),f,b
 21251                           
 21252                           ; BSR set to: 0
 21253  0043EC  0E03               	movlw	3
 21254  0043EE  659D               	cpfsgt	TxPacket@i& (0+255),b
 21255  0043F0  D7D5               	goto	l15754
 21256  0043F2                     l15774:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 21260                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 21261                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 21262                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 21263  0043F2  0E80               	movlw	128
 21264  0043F4  ECBF  F032         	call	_SetRFMode
 21265                           
 21266                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 21267  0043F8  86F0               	bsf	intcon3,3,c	;volatile
 21268  0043FA                     l15778:
 21269  0043FA  0100               	movlb	0	; () banked
 21270  0043FC  51E9               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 21271  0043FE  E102               	bnz	l747
 21272                           
 21273                           ; BSR set to: 0
 21274  004400  A0F0               	btfss	intcon3,0,c	;volatile
 21275  004402  D7FB               	goto	l15778
 21276  004404                     l747:
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 21280                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 21281  004404  6BE9               	clrf	_IRQ1_Received& (0+255),b	;volatile
 21282                           
 21283                           ; BSR set to: 0
 21284                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 21285  004406  0E20               	movlw	32
 21286  004408  ECBF  F032         	call	_SetRFMode
 21287                           
 21288                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 21289  00440C  0E60               	movlw	96
 21290  00440E  ECBF  F032         	call	_SetRFMode
 21291                           
 21292                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 21293  004412  0104               	movlb	4	; () banked
 21294  004414  AB78               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 21295  004416  D00E               	goto	l15792
 21296                           
 21297                           ; BSR set to: 4
 21298                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 21299                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 21300  004418  C479  F042         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 21301                           
 21302                           ; BSR set to: 4
 21303                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 21304  00441C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 21305  004420  C07F  F08C         	movff	?_MiWi_TickGetMs,TxPacket@t1
 21306  004424  C080  F08D         	movff	?_MiWi_TickGetMs+1,TxPacket@t1+1
 21307  004428  C081  F08E         	movff	?_MiWi_TickGetMs+2,TxPacket@t1+2
 21308  00442C  C082  F08F         	movff	?_MiWi_TickGetMs+3,TxPacket@t1+3
 21309  004430                     l15790:
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 21313                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 21314  004430  5043               	movf	_hasAck,w,c	;volatile
 21315  004432  E004               	bz	l15794
 21316  004434                     l15792:
 21317                           
 21318                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 21319                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 21320  004434  0E01               	movlw	1
 21321  004436  0100               	movlb	0	; () banked
 21322  004438  6F9C               	movwf	TxPacket@status& (0+255),b
 21323                           
 21324                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 21325  00443A  D029               	goto	l15808
 21326  00443C                     l15794:
 21327                           
 21328                           ; BSR set to: 0
 21329                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 21330                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 21331  00443C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 21332  004440  C07F  F090         	movff	?_MiWi_TickGetMs,TxPacket@t2
 21333  004444  C080  F091         	movff	?_MiWi_TickGetMs+1,TxPacket@t2+1
 21334  004448  C081  F092         	movff	?_MiWi_TickGetMs+2,TxPacket@t2+2
 21335  00444C  C082  F093         	movff	?_MiWi_TickGetMs+3,TxPacket@t2+3
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 21339  004450  518C               	movf	TxPacket@t1& (0+255),w,b
 21340  004452  5D90               	subwf	TxPacket@t2& (0+255),w,b
 21341  004454  6F88               	movwf	??_TxPacket& (0+255),b
 21342  004456  518D               	movf	(TxPacket@t1+1)& (0+255),w,b
 21343  004458  5991               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 21344  00445A  6F89               	movwf	(??_TxPacket+1)& (0+255),b
 21345  00445C  518E               	movf	(TxPacket@t1+2)& (0+255),w,b
 21346  00445E  5992               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 21347  004460  6F8A               	movwf	(??_TxPacket+2)& (0+255),b
 21348  004462  518F               	movf	(TxPacket@t1+3)& (0+255),w,b
 21349  004464  5993               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 21350  004466  6F8B               	movwf	(??_TxPacket+3)& (0+255),b
 21351  004468  518B               	movf	(??_TxPacket+3)& (0+255),w,b
 21352  00446A  118A               	iorwf	(??_TxPacket+2)& (0+255),w,b
 21353  00446C  1189               	iorwf	(??_TxPacket+1)& (0+255),w,b
 21354  00446E  E103               	bnz	u18430
 21355  004470  0E33               	movlw	51
 21356  004472  5D88               	subwf	??_TxPacket& (0+255),w,b
 21357  004474  E3DD               	bnc	l15790
 21358  004476                     u18430:
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 21362                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 21363                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 21364  004476  2B97               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 21365  004478  0597               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 21366  00447A  6F88               	movwf	??_TxPacket& (0+255),b
 21367  00447C  0E04               	movlw	4
 21368  00447E  6188               	cpfslt	??_TxPacket& (0+255),b
 21369  004480  D001               	goto	l15806
 21370  004482  D768               	goto	l731
 21371  004484                     l15806:
 21372                           
 21373                           ; BSR set to: 0
 21374  004484  0796               	decf	TxPacket@reTry& (0+255),f,b
 21375  004486  2996               	incf	TxPacket@reTry& (0+255),w,b
 21376  004488  E001 D763          	bnz	l730
 21377                           
 21378                           ; BSR set to: 0
 21379                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 21380                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 21381                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 21382  00448C  6B9C               	clrf	TxPacket@status& (0+255),b
 21383  00448E                     l15808:
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;drv_mrf_miwi_mesh_89xa.c: 468: return status;
 21387  00448E  519C               	movf	TxPacket@status& (0+255),w,b
 21388                           
 21389                           ; BSR set to: 0
 21390  004490  0012               	return		;funcret
 21391  004492                     __end_of_TxPacket:
 21392                           	opt stack 0
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           intcon3	equ	0xFF0
 21401                           postinc0	equ	0xFEE
 21402                           plusw0	equ	0xFEB
 21403                           fsr0h	equ	0xFEA
 21404                           fsr0l	equ	0xFE9
 21405                           wreg	equ	0xFE8
 21406                           indf1	equ	0xFE7
 21407                           postinc1	equ	0xFE6
 21408                           postdec1	equ	0xFE5
 21409                           plusw1	equ	0xFE3
 21410                           fsr1h	equ	0xFE2
 21411                           fsr1l	equ	0xFE1
 21412                           indf2	equ	0xFDF
 21413                           postinc2	equ	0xFDE
 21414                           postdec2	equ	0xFDD
 21415                           plusw2	equ	0xFDB
 21416                           fsr2h	equ	0xFDA
 21417                           fsr2l	equ	0xFD9
 21418                           status	equ	0xFD8
 21419                           
 21420 ;; *************** function _WriteFIFO *****************
 21421 ;; Defined at:
 21422 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;  Data            1    wreg     unsigned char 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  Data            1   21[BANK0 ] unsigned char 
 21427 ;;  IRQ1select      1   22[BANK0 ] unsigned char 
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      void 
 21430 ;; Registers used:
 21431 ;;		wreg, status,2, cstack
 21432 ;; Tracked objects:
 21433 ;;		On entry : F/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;Total ram usage:        2 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:    6
 21444 ;; This function calls:
 21445 ;;		_SPIPut
 21446 ;; This function is called by:
 21447 ;;		_TxPacket
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text86
 21452  00734E                     __ptext86:
 21453                           	opt stack 0
 21454  00734E                     _WriteFIFO:
 21455                           	opt stack 16
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;incstack = 0
 21459                           ;WriteFIFO@Data stored from wreg
 21460  00734E  6F75               	movwf	WriteFIFO@Data& (0+255),b
 21461                           
 21462                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 21463  007350  0E00               	movlw	0
 21464  007352  B6F0               	btfsc	intcon3,3,c	;volatile
 21465  007354  0E01               	movlw	1
 21466  007356  0100               	movlb	0	; () banked
 21467  007358  6F76               	movwf	WriteFIFO@IRQ1select& (0+255),b
 21468                           
 21469                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 21470  00735A  96F0               	bcf	intcon3,3,c	;volatile
 21471                           
 21472                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 21473  00735C  9A89               	bcf	3977,5,c	;volatile
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 21477  00735E  5175               	movf	WriteFIFO@Data& (0+255),w,b
 21478  007360  EC1F  F03A         	call	_SPIPut
 21479                           
 21480                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 21481  007364  8A89               	bsf	3977,5,c	;volatile
 21482                           
 21483                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 21484  007366  0100               	movlb	0	; () banked
 21485  007368  B176               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 21486  00736A  D002               	bra	u18125
 21487  00736C  96F0               	bcf	intcon3,3,c	;volatile
 21488  00736E  D001               	bra	u18126
 21489  007370                     u18125:
 21490  007370  86F0               	bsf	intcon3,3,c	;volatile
 21491  007372                     u18126:
 21492  007372  0012               	return		;funcret
 21493  007374                     __end_of_WriteFIFO:
 21494                           	opt stack 0
 21495                           tblptru	equ	0xFF8
 21496                           tblptrh	equ	0xFF7
 21497                           tblptrl	equ	0xFF6
 21498                           tablat	equ	0xFF5
 21499                           prodh	equ	0xFF4
 21500                           prodl	equ	0xFF3
 21501                           intcon	equ	0xFF2
 21502                           intcon3	equ	0xFF0
 21503                           postinc0	equ	0xFEE
 21504                           plusw0	equ	0xFEB
 21505                           fsr0h	equ	0xFEA
 21506                           fsr0l	equ	0xFE9
 21507                           wreg	equ	0xFE8
 21508                           indf1	equ	0xFE7
 21509                           postinc1	equ	0xFE6
 21510                           postdec1	equ	0xFE5
 21511                           plusw1	equ	0xFE3
 21512                           fsr1h	equ	0xFE2
 21513                           fsr1l	equ	0xFE1
 21514                           indf2	equ	0xFDF
 21515                           postinc2	equ	0xFDE
 21516                           postdec2	equ	0xFDD
 21517                           plusw2	equ	0xFDB
 21518                           fsr2h	equ	0xFDA
 21519                           fsr2l	equ	0xFD9
 21520                           status	equ	0xFD8
 21521                           
 21522 ;; *************** function _CCM_Enc *****************
 21523 ;; Defined at:
 21524 ;;		line 272 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 21525 ;; Parameters:    Size  Location     Type
 21526 ;;  text            2   55[BANK0 ] PTR unsigned char 
 21527 ;;		 -> MACTxBuffer(64), 
 21528 ;;  headerLen       1   57[BANK0 ] unsigned char 
 21529 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 21530 ;;  key             2   59[BANK0 ] PTR unsigned char 
 21531 ;;		 -> key(8), 
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;  i               1   65[BANK0 ] unsigned char 
 21534 ;; Return value:  Size  Location     Type
 21535 ;;                  1    wreg      void 
 21536 ;; Registers used:
 21537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21538 ;; Tracked objects:
 21539 ;;		On entry : F/0
 21540 ;;		On exit  : F/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21543 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21544 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21545 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21546 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21547 ;;Total ram usage:       11 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:    7
 21550 ;; This function calls:
 21551 ;;		_CBC_MAC
 21552 ;;		_CTR
 21553 ;; This function is called by:
 21554 ;;		_MiMAC_SendPacket
 21555 ;; This function uses a non-reentrant model
 21556 ;;
 21557                           
 21558                           	psect	text87
 21559  005748                     __ptext87:
 21560                           	opt stack 0
 21561  005748                     _CCM_Enc:
 21562                           	opt stack 16
 21563                           
 21564                           ; BSR set to: 0
 21565                           ;drv_mrf_miwi_mesh_security.c: 277: uint8_t i;
 21566                           ;drv_mrf_miwi_mesh_security.c: 284: CBC_MAC(text, (headerLen + payloadLen), key, tmpBloc
      +                          k);
 21567                           
 21568                           ;incstack = 0
 21569  005748  C097  F08A         	movff	CCM_Enc@text,CBC_MAC@text
 21570  00574C  C098  F08B         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 21571  005750  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 21572  005752  259A               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 21573  005754  6F8C               	movwf	CBC_MAC@len& (0+255),b
 21574  005756  C09B  F08D         	movff	CCM_Enc@key,CBC_MAC@key
 21575  00575A  C09C  F08E         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 21576  00575E  0EE0               	movlw	low _tmpBlock
 21577  005760  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 21578  005762  0E01               	movlw	high _tmpBlock
 21579  005764  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 21580  005766  EC66  F02D         	call	_CBC_MAC	;wreg free
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;drv_mrf_miwi_mesh_security.c: 286: for(i = 0; i < 4; i++)
 21584  00576A  6BA1               	clrf	CCM_Enc@i& (0+255),b
 21585  00576C                     l15820:
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;drv_mrf_miwi_mesh_security.c: 287: {
 21589                           ;drv_mrf_miwi_mesh_security.c: 288: text[headerLen + payloadLen + i] = tmpBlock[i];
 21590  00576C  0EE0               	movlw	low _tmpBlock
 21591  00576E  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 21592  005770  6ED9               	movwf	fsr2l,c
 21593  005772  6ADA               	clrf	fsr2h,c
 21594  005774  0E01               	movlw	high _tmpBlock
 21595  005776  22DA               	addwfc	fsr2h,f,c
 21596  005778  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 21597  00577A  2597               	addwf	CCM_Enc@text& (0+255),w,b
 21598  00577C  6F9D               	movwf	??_CCM_Enc& (0+255),b
 21599  00577E  0E00               	movlw	0
 21600  005780  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21601  005782  6F9E               	movwf	(??_CCM_Enc+1)& (0+255),b
 21602  005784  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21603  005786  279D               	addwf	??_CCM_Enc& (0+255),f,b
 21604  005788  0E00               	movlw	0
 21605  00578A  239E               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 21606  00578C  51A1               	movf	CCM_Enc@i& (0+255),w,b
 21607  00578E  259D               	addwf	??_CCM_Enc& (0+255),w,b
 21608  005790  6EE1               	movwf	fsr1l,c
 21609  005792  0E00               	movlw	0
 21610  005794  219E               	addwfc	(??_CCM_Enc+1)& (0+255),w,b
 21611  005796  6EE2               	movwf	fsr1h,c
 21612  005798  CFDF FFE7          	movff	indf2,indf1
 21613                           
 21614                           ; BSR set to: 0
 21615  00579C  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 21616                           
 21617                           ; BSR set to: 0
 21618  00579E  0E03               	movlw	3
 21619  0057A0  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 21620  0057A2  D7E4               	goto	l15820
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;drv_mrf_miwi_mesh_security.c: 289: }
 21624                           ;drv_mrf_miwi_mesh_security.c: 291: for(i = 0; i < 4-1; i++)
 21625  0057A4  6BA1               	clrf	CCM_Enc@i& (0+255),b
 21626  0057A6                     l15830:
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;drv_mrf_miwi_mesh_security.c: 292: {
 21630                           ;drv_mrf_miwi_mesh_security.c: 293: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21631  0057A6  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 21632  0057A8  5DA1               	subwf	CCM_Enc@i& (0+255),w,b
 21633  0057AA  E302               	bnc	l15834
 21634                           
 21635                           ; BSR set to: 0
 21636  0057AC  6B9F               	clrf	_CCM_Enc$2730& (0+255),b
 21637  0057AE  D008               	goto	L8
 21638  0057B0                     l15834:
 21639                           
 21640                           ; BSR set to: 0
 21641  0057B0  51A1               	movf	CCM_Enc@i& (0+255),w,b
 21642  0057B2  2597               	addwf	CCM_Enc@text& (0+255),w,b
 21643  0057B4  6ED9               	movwf	fsr2l,c
 21644  0057B6  0E00               	movlw	0
 21645  0057B8  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21646  0057BA  6EDA               	movwf	fsr2h,c
 21647  0057BC  50DF               	movf	indf2,w,c
 21648  0057BE  6F9F               	movwf	_CCM_Enc$2730& (0+255),b
 21649  0057C0                     L8:
 21650  0057C0  6BA0               	clrf	(_CCM_Enc$2730+1)& (0+255),b
 21651                           
 21652                           ; BSR set to: 0
 21653  0057C2  0EE0               	movlw	low _tmpBlock
 21654  0057C4  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 21655  0057C6  6ED9               	movwf	fsr2l,c
 21656  0057C8  6ADA               	clrf	fsr2h,c
 21657  0057CA  0E01               	movlw	high _tmpBlock
 21658  0057CC  22DA               	addwfc	fsr2h,f,c
 21659  0057CE  C09F  FFDF         	movff	_CCM_Enc$2730,indf2
 21660                           
 21661                           ; BSR set to: 0
 21662  0057D2  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 21663                           
 21664                           ; BSR set to: 0
 21665  0057D4  0E02               	movlw	2
 21666  0057D6  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 21667  0057D8  D7E6               	goto	l15830
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;drv_mrf_miwi_mesh_security.c: 294: }
 21671                           ;drv_mrf_miwi_mesh_security.c: 296: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBl
      +                          ock);
 21672  0057DA  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 21673  0057DC  2597               	addwf	CCM_Enc@text& (0+255),w,b
 21674  0057DE  6F8A               	movwf	CTR@text& (0+255),b
 21675  0057E0  0E00               	movlw	0
 21676  0057E2  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 21677  0057E4  6F8B               	movwf	(CTR@text+1)& (0+255),b
 21678  0057E6  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 21679  0057E8  0F04               	addlw	4
 21680  0057EA  6F8C               	movwf	CTR@len& (0+255),b
 21681  0057EC  C09B  F08D         	movff	CCM_Enc@key,CTR@key
 21682  0057F0  C09C  F08E         	movff	CCM_Enc@key+1,CTR@key+1
 21683  0057F4  0EE0               	movlw	low _tmpBlock
 21684  0057F6  6F8F               	movwf	CTR@nounce& (0+255),b
 21685  0057F8  0E01               	movlw	high _tmpBlock
 21686  0057FA  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 21687  0057FC  EF45  F02B         	goto	_CTR	;wreg free
 21688  005800                     __end_of_CCM_Enc:
 21689                           	opt stack 0
 21690                           tblptru	equ	0xFF8
 21691                           tblptrh	equ	0xFF7
 21692                           tblptrl	equ	0xFF6
 21693                           tablat	equ	0xFF5
 21694                           prodh	equ	0xFF4
 21695                           prodl	equ	0xFF3
 21696                           intcon	equ	0xFF2
 21697                           intcon3	equ	0xFF0
 21698                           postinc0	equ	0xFEE
 21699                           plusw0	equ	0xFEB
 21700                           fsr0h	equ	0xFEA
 21701                           fsr0l	equ	0xFE9
 21702                           wreg	equ	0xFE8
 21703                           indf1	equ	0xFE7
 21704                           postinc1	equ	0xFE6
 21705                           postdec1	equ	0xFE5
 21706                           plusw1	equ	0xFE3
 21707                           fsr1h	equ	0xFE2
 21708                           fsr1l	equ	0xFE1
 21709                           indf2	equ	0xFDF
 21710                           postinc2	equ	0xFDE
 21711                           postdec2	equ	0xFDD
 21712                           plusw2	equ	0xFDB
 21713                           fsr2h	equ	0xFDA
 21714                           fsr2l	equ	0xFD9
 21715                           status	equ	0xFD8
 21716                           
 21717 ;; *************** function _isNetworkSecurityEnabled *****************
 21718 ;; Defined at:
 21719 ;;		line 385 in file "../NetworkManager.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;		None
 21722 ;; Auto vars:     Size  Location     Type
 21723 ;;		None
 21724 ;; Return value:  Size  Location     Type
 21725 ;;                  1    wreg      unsigned char 
 21726 ;; Registers used:
 21727 ;;		wreg, status,2
 21728 ;; Tracked objects:
 21729 ;;		On entry : C/0
 21730 ;;		On exit  : F/1
 21731 ;;		Unchanged: 0/0
 21732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21737 ;;Total ram usage:        0 bytes
 21738 ;; Hardware stack levels used:    1
 21739 ;; Hardware stack levels required when called:    5
 21740 ;; This function calls:
 21741 ;;		Nothing
 21742 ;; This function is called by:
 21743 ;;		_networkSendBeacon
 21744 ;;		_NetworkManagerTask
 21745 ;;		_NetworkSendDiscoverResponse
 21746 ;; This function uses a non-reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text88
 21750  00764E                     __ptext88:
 21751                           	opt stack 0
 21752  00764E                     _isNetworkSecurityEnabled:
 21753                           	opt stack 21
 21754                           
 21755                           ;NetworkManager.c: 387: return(isNetworkTrafficSecure);
 21756                           
 21757                           ; BSR set to: 0
 21758                           ;incstack = 0
 21759  00764E  0101               	movlb	1	; () banked
 21760  007650  51D4               	movf	_isNetworkTrafficSecure& (0+255),w,b
 21761                           
 21762                           ; BSR set to: 1
 21763  007652  0012               	return		;funcret
 21764  007654                     __end_of_isNetworkSecurityEnabled:
 21765                           	opt stack 0
 21766                           tblptru	equ	0xFF8
 21767                           tblptrh	equ	0xFF7
 21768                           tblptrl	equ	0xFF6
 21769                           tablat	equ	0xFF5
 21770                           prodh	equ	0xFF4
 21771                           prodl	equ	0xFF3
 21772                           intcon	equ	0xFF2
 21773                           intcon3	equ	0xFF0
 21774                           postinc0	equ	0xFEE
 21775                           plusw0	equ	0xFEB
 21776                           fsr0h	equ	0xFEA
 21777                           fsr0l	equ	0xFE9
 21778                           wreg	equ	0xFE8
 21779                           indf1	equ	0xFE7
 21780                           postinc1	equ	0xFE6
 21781                           postdec1	equ	0xFE5
 21782                           plusw1	equ	0xFE3
 21783                           fsr1h	equ	0xFE2
 21784                           fsr1l	equ	0xFE1
 21785                           indf2	equ	0xFDF
 21786                           postinc2	equ	0xFDE
 21787                           postdec2	equ	0xFDD
 21788                           plusw2	equ	0xFDB
 21789                           fsr2h	equ	0xFDA
 21790                           fsr2l	equ	0xFD9
 21791                           status	equ	0xFD8
 21792                           
 21793 ;; *************** function _NetworkManagerGetMyAddress *****************
 21794 ;; Defined at:
 21795 ;;		line 235 in file "../NetworkManager.c"
 21796 ;; Parameters:    Size  Location     Type
 21797 ;;		None
 21798 ;; Auto vars:     Size  Location     Type
 21799 ;;		None
 21800 ;; Return value:  Size  Location     Type
 21801 ;;                  2   19[BANK0 ] PTR struct addr_t_def
 21802 ;; Registers used:
 21803 ;;		wreg, status,2, status,0
 21804 ;; Tracked objects:
 21805 ;;		On entry : E/0
 21806 ;;		On exit  : F/0
 21807 ;;		Unchanged: 0/0
 21808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21813 ;;Total ram usage:        2 bytes
 21814 ;; Hardware stack levels used:    1
 21815 ;; Hardware stack levels required when called:    5
 21816 ;; This function calls:
 21817 ;;		Nothing
 21818 ;; This function is called by:
 21819 ;;		_radioReceivedPacket
 21820 ;;		_NetworkUnicastData
 21821 ;;		_RouteManagerPerformUpdate
 21822 ;;		_networkSendBeacon
 21823 ;;		_TMSendFormedPacketToRFD
 21824 ;;		_NetworkPrepareSendPacket
 21825 ;; This function uses a non-reentrant model
 21826 ;;
 21827                           
 21828                           	psect	text89
 21829  007598                     __ptext89:
 21830                           	opt stack 0
 21831  007598                     _NetworkManagerGetMyAddress:
 21832                           	opt stack 21
 21833                           
 21834                           ;NetworkManager.c: 237: return (&MyAddress);
 21835                           
 21836                           ; BSR set to: 1
 21837                           ;incstack = 0
 21838  007598  0EF8               	movlw	low _MyAddress
 21839  00759A  0100               	movlb	0	; () banked
 21840  00759C  6F73               	movwf	?_NetworkManagerGetMyAddress& (0+255),b
 21841  00759E  0E01               	movlw	high _MyAddress
 21842  0075A0  6F74               	movwf	(?_NetworkManagerGetMyAddress+1)& (0+255),b
 21843                           
 21844                           ; BSR set to: 0
 21845  0075A2  0012               	return		;funcret
 21846  0075A4                     __end_of_NetworkManagerGetMyAddress:
 21847                           	opt stack 0
 21848                           tblptru	equ	0xFF8
 21849                           tblptrh	equ	0xFF7
 21850                           tblptrl	equ	0xFF6
 21851                           tablat	equ	0xFF5
 21852                           prodh	equ	0xFF4
 21853                           prodl	equ	0xFF3
 21854                           intcon	equ	0xFF2
 21855                           intcon3	equ	0xFF0
 21856                           postinc0	equ	0xFEE
 21857                           plusw0	equ	0xFEB
 21858                           fsr0h	equ	0xFEA
 21859                           fsr0l	equ	0xFE9
 21860                           wreg	equ	0xFE8
 21861                           indf1	equ	0xFE7
 21862                           postinc1	equ	0xFE6
 21863                           postdec1	equ	0xFE5
 21864                           plusw1	equ	0xFE3
 21865                           fsr1h	equ	0xFE2
 21866                           fsr1l	equ	0xFE1
 21867                           indf2	equ	0xFDF
 21868                           postinc2	equ	0xFDE
 21869                           postdec2	equ	0xFDD
 21870                           plusw2	equ	0xFDB
 21871                           fsr2h	equ	0xFDA
 21872                           fsr2l	equ	0xFD9
 21873                           status	equ	0xFD8
 21874                           
 21875 ;; *************** function _NetworkGetPANID *****************
 21876 ;; Defined at:
 21877 ;;		line 390 in file "../NetworkManager.c"
 21878 ;; Parameters:    Size  Location     Type
 21879 ;;		None
 21880 ;; Auto vars:     Size  Location     Type
 21881 ;;		None
 21882 ;; Return value:  Size  Location     Type
 21883 ;;                  2   19[BANK0 ] unsigned int 
 21884 ;; Registers used:
 21885 ;;		None
 21886 ;; Tracked objects:
 21887 ;;		On entry : C/1
 21888 ;;		On exit  : C/0
 21889 ;;		Unchanged: C/0
 21890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21895 ;;Total ram usage:        2 bytes
 21896 ;; Hardware stack levels used:    1
 21897 ;; Hardware stack levels required when called:    5
 21898 ;; This function calls:
 21899 ;;		Nothing
 21900 ;; This function is called by:
 21901 ;;		_radioReceivedPacket
 21902 ;;		_networkSendBeacon
 21903 ;;		_BroadcastManagerTask
 21904 ;;		_TransportManagerTask
 21905 ;;		_TMSendFormedPacketToRFD
 21906 ;;		_NetworkManagerTask
 21907 ;; This function uses a non-reentrant model
 21908 ;;
 21909                           
 21910                           	psect	text90
 21911  0075FC                     __ptext90:
 21912                           	opt stack 0
 21913  0075FC                     _NetworkGetPANID:
 21914                           	opt stack 21
 21915                           
 21916                           ;NetworkManager.c: 392: return(DEVPanID);
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;incstack = 0
 21920  0075FC  C1F4  F073         	movff	_DEVPanID,?_NetworkGetPANID
 21921  007600  C1F5  F074         	movff	_DEVPanID+1,?_NetworkGetPANID+1
 21922  007604  0012               	return		;funcret
 21923  007606                     __end_of_NetworkGetPANID:
 21924                           	opt stack 0
 21925                           tblptru	equ	0xFF8
 21926                           tblptrh	equ	0xFF7
 21927                           tblptrl	equ	0xFF6
 21928                           tablat	equ	0xFF5
 21929                           prodh	equ	0xFF4
 21930                           prodl	equ	0xFF3
 21931                           intcon	equ	0xFF2
 21932                           intcon3	equ	0xFF0
 21933                           postinc0	equ	0xFEE
 21934                           plusw0	equ	0xFEB
 21935                           fsr0h	equ	0xFEA
 21936                           fsr0l	equ	0xFE9
 21937                           wreg	equ	0xFE8
 21938                           indf1	equ	0xFE7
 21939                           postinc1	equ	0xFE6
 21940                           postdec1	equ	0xFE5
 21941                           plusw1	equ	0xFE3
 21942                           fsr1h	equ	0xFE2
 21943                           fsr1l	equ	0xFE1
 21944                           indf2	equ	0xFDF
 21945                           postinc2	equ	0xFDE
 21946                           postdec2	equ	0xFDD
 21947                           plusw2	equ	0xFDB
 21948                           fsr2h	equ	0xFDA
 21949                           fsr2l	equ	0xFD9
 21950                           status	equ	0xFD8
 21951                           
 21952 ;; *************** function _NetworkGetMyRouteInfo *****************
 21953 ;; Defined at:
 21954 ;;		line 240 in file "../NetworkManager.c"
 21955 ;; Parameters:    Size  Location     Type
 21956 ;;		None
 21957 ;; Auto vars:     Size  Location     Type
 21958 ;;		None
 21959 ;; Return value:  Size  Location     Type
 21960 ;;                  2   19[BANK0 ] PTR struct route_info_t_
 21961 ;; Registers used:
 21962 ;;		wreg, status,2, status,0
 21963 ;; Tracked objects:
 21964 ;;		On entry : C/0
 21965 ;;		On exit  : F/0
 21966 ;;		Unchanged: 0/0
 21967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21972 ;;Total ram usage:        2 bytes
 21973 ;; Hardware stack levels used:    1
 21974 ;; Hardware stack levels required when called:    5
 21975 ;; This function calls:
 21976 ;;		Nothing
 21977 ;; This function is called by:
 21978 ;;		_RouteManagerPerformUpdate
 21979 ;;		_RouterEvicted
 21980 ;;		_networkSendBeacon
 21981 ;; This function uses a non-reentrant model
 21982 ;;
 21983                           
 21984                           	psect	text91
 21985  0075A4                     __ptext91:
 21986                           	opt stack 0
 21987  0075A4                     _NetworkGetMyRouteInfo:
 21988                           	opt stack 19
 21989                           
 21990                           ;NetworkManager.c: 242: return(&routeInfo);
 21991                           
 21992                           ;incstack = 0
 21993  0075A4  0ED9               	movlw	low _routeInfo
 21994  0075A6  0100               	movlb	0	; () banked
 21995  0075A8  6F73               	movwf	?_NetworkGetMyRouteInfo& (0+255),b
 21996  0075AA  0E01               	movlw	high _routeInfo
 21997  0075AC  6F74               	movwf	(?_NetworkGetMyRouteInfo+1)& (0+255),b
 21998                           
 21999                           ; BSR set to: 0
 22000  0075AE  0012               	return		;funcret
 22001  0075B0                     __end_of_NetworkGetMyRouteInfo:
 22002                           	opt stack 0
 22003                           tblptru	equ	0xFF8
 22004                           tblptrh	equ	0xFF7
 22005                           tblptrl	equ	0xFF6
 22006                           tablat	equ	0xFF5
 22007                           prodh	equ	0xFF4
 22008                           prodl	equ	0xFF3
 22009                           intcon	equ	0xFF2
 22010                           intcon3	equ	0xFF0
 22011                           postinc0	equ	0xFEE
 22012                           plusw0	equ	0xFEB
 22013                           fsr0h	equ	0xFEA
 22014                           fsr0l	equ	0xFE9
 22015                           wreg	equ	0xFE8
 22016                           indf1	equ	0xFE7
 22017                           postinc1	equ	0xFE6
 22018                           postdec1	equ	0xFE5
 22019                           plusw1	equ	0xFE3
 22020                           fsr1h	equ	0xFE2
 22021                           fsr1l	equ	0xFE1
 22022                           indf2	equ	0xFDF
 22023                           postinc2	equ	0xFDE
 22024                           postdec2	equ	0xFDD
 22025                           plusw2	equ	0xFDB
 22026                           fsr2h	equ	0xFDA
 22027                           fsr2l	equ	0xFD9
 22028                           status	equ	0xFD8
 22029                           
 22030 ;; *************** function _LELinkQualityGet *****************
 22031 ;; Defined at:
 22032 ;;		line 70 in file "../LinkEstimator.c"
 22033 ;; Parameters:    Size  Location     Type
 22034 ;;  address         2   37[BANK0 ] struct addr_t_def
 22035 ;;  offset          2   39[BANK0 ] unsigned int 
 22036 ;; Auto vars:     Size  Location     Type
 22037 ;;  res             2   43[BANK0 ] unsigned int 
 22038 ;;  idx             1   45[BANK0 ] unsigned char 
 22039 ;; Return value:  Size  Location     Type
 22040 ;;                  2   37[BANK0 ] unsigned int 
 22041 ;; Registers used:
 22042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22043 ;; Tracked objects:
 22044 ;;		On entry : F/0
 22045 ;;		On exit  : A/0
 22046 ;;		Unchanged: 0/0
 22047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22051 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22052 ;;Total ram usage:        9 bytes
 22053 ;; Hardware stack levels used:    1
 22054 ;; Hardware stack levels required when called:    8
 22055 ;; This function calls:
 22056 ;;		_le_findIdx
 22057 ;; This function is called by:
 22058 ;;		_RouteManagerPerformUpdate
 22059 ;;		_routingTableUpdateEntry
 22060 ;;		_networkSendBeacon
 22061 ;; This function uses a non-reentrant model
 22062 ;;
 22063                           
 22064                           	psect	text92
 22065  00650E                     __ptext92:
 22066                           	opt stack 0
 22067  00650E                     _LELinkQualityGet:
 22068                           	opt stack 17
 22069                           
 22070                           ; BSR set to: 0
 22071                           ;LinkEstimator.c: 72: uint8_t idx;
 22072                           ;LinkEstimator.c: 73: uint16_t res=0xffff;
 22073                           
 22074                           ; BSR set to: 0
 22075                           ;incstack = 0
 22076  00650E  698B               	setf	LELinkQualityGet@res& (0+255),b
 22077  006510  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;LinkEstimator.c: 74: idx = le_findIdx(address);
 22081  006512  C085  F081         	movff	LELinkQualityGet@address,le_findIdx@ll_addr
 22082  006516  C086  F082         	movff	LELinkQualityGet@address+1,le_findIdx@ll_addr+1
 22083  00651A  EC7B  F034         	call	_le_findIdx	;wreg free
 22084  00651E  6F8D               	movwf	LELinkQualityGet@idx& (0+255),b
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;LinkEstimator.c: 75: if ( (idx != 0xff) && ((neighbor_tbl[idx].flags & 0x2)>0) )
 22088  006520  298D               	incf	LELinkQualityGet@idx& (0+255),w,b
 22089  006522  E028               	bz	l16496
 22090                           
 22091                           ; BSR set to: 0
 22092  006524  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 22093  006526  0D0B               	mullw	11
 22094  006528  0E05               	movlw	low (_neighbor_tbl+5)
 22095  00652A  24F3               	addwf	prodl,w,c
 22096  00652C  6ED9               	movwf	fsr2l,c
 22097  00652E  0E05               	movlw	high (_neighbor_tbl+5)
 22098  006530  20F4               	addwfc	prodh,w,c
 22099  006532  6EDA               	movwf	fsr2h,c
 22100  006534  0105               	movlb	5	; () banked
 22101  006536  A2DF               	btfss	indf2,1,c
 22102  006538  D01D               	goto	l16496
 22103                           
 22104                           ; BSR set to: 5
 22105                           ;LinkEstimator.c: 76: {
 22106                           ;LinkEstimator.c: 77: res=neighbor_tbl[idx].etx;
 22107  00653A  0100               	movlb	0	; () banked
 22108  00653C  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 22109  00653E  0D0B               	mullw	11
 22110  006540  0E07               	movlw	low (_neighbor_tbl+7)
 22111  006542  24F3               	addwf	prodl,w,c
 22112  006544  6ED9               	movwf	fsr2l,c
 22113  006546  0E05               	movlw	high (_neighbor_tbl+7)
 22114  006548  20F4               	addwfc	prodh,w,c
 22115  00654A  6EDA               	movwf	fsr2h,c
 22116  00654C  CFDE F08B          	movff	postinc2,LELinkQualityGet@res
 22117  006550  CFDD F08C          	movff	postdec2,LELinkQualityGet@res+1
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;LinkEstimator.c: 78: if((0xffff-res)<offset)
 22121  006554  1D8B               	comf	LELinkQualityGet@res& (0+255),w,b
 22122  006556  6F89               	movwf	??_LELinkQualityGet& (0+255),b
 22123  006558  1D8C               	comf	(LELinkQualityGet@res+1)& (0+255),w,b
 22124  00655A  6F8A               	movwf	(??_LELinkQualityGet+1)& (0+255),b
 22125  00655C  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 22126  00655E  5D89               	subwf	??_LELinkQualityGet& (0+255),w,b
 22127  006560  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 22128  006562  598A               	subwfb	(??_LELinkQualityGet+1)& (0+255),w,b
 22129  006564  E203               	bc	l16494
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;LinkEstimator.c: 79: {
 22133                           ;LinkEstimator.c: 80: res=0xffff;
 22134  006566  698B               	setf	LELinkQualityGet@res& (0+255),b
 22135  006568  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 22136                           
 22137                           ;LinkEstimator.c: 81: }else
 22138  00656A  D004               	goto	l16496
 22139  00656C                     l16494:
 22140                           
 22141                           ; BSR set to: 0
 22142                           ;LinkEstimator.c: 82: {
 22143                           ;LinkEstimator.c: 83: res+=offset;
 22144  00656C  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 22145  00656E  278B               	addwf	LELinkQualityGet@res& (0+255),f,b
 22146  006570  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 22147  006572  238C               	addwfc	(LELinkQualityGet@res+1)& (0+255),f,b
 22148  006574                     l16496:
 22149                           
 22150                           ;LinkEstimator.c: 84: }
 22151                           ;LinkEstimator.c: 85: }
 22152                           ;LinkEstimator.c: 86: return(res);
 22153  006574  C08B  F085         	movff	LELinkQualityGet@res,?_LELinkQualityGet
 22154  006578  C08C  F086         	movff	LELinkQualityGet@res+1,?_LELinkQualityGet+1
 22155  00657C  0012               	return		;funcret
 22156  00657E                     __end_of_LELinkQualityGet:
 22157                           	opt stack 0
 22158                           tblptru	equ	0xFF8
 22159                           tblptrh	equ	0xFF7
 22160                           tblptrl	equ	0xFF6
 22161                           tablat	equ	0xFF5
 22162                           prodh	equ	0xFF4
 22163                           prodl	equ	0xFF3
 22164                           intcon	equ	0xFF2
 22165                           intcon3	equ	0xFF0
 22166                           postinc0	equ	0xFEE
 22167                           plusw0	equ	0xFEB
 22168                           fsr0h	equ	0xFEA
 22169                           fsr0l	equ	0xFE9
 22170                           wreg	equ	0xFE8
 22171                           indf1	equ	0xFE7
 22172                           postinc1	equ	0xFE6
 22173                           postdec1	equ	0xFE5
 22174                           plusw1	equ	0xFE3
 22175                           fsr1h	equ	0xFE2
 22176                           fsr1l	equ	0xFE1
 22177                           indf2	equ	0xFDF
 22178                           postinc2	equ	0xFDE
 22179                           postdec2	equ	0xFDD
 22180                           plusw2	equ	0xFDB
 22181                           fsr2h	equ	0xFDA
 22182                           fsr2l	equ	0xFD9
 22183                           status	equ	0xFD8
 22184                           
 22185 ;; *************** function _le_findIdx *****************
 22186 ;; Defined at:
 22187 ;;		line 52 in file "../LinkEstimator.c"
 22188 ;; Parameters:    Size  Location     Type
 22189 ;;  ll_addr         2   33[BANK0 ] struct addr_t_def
 22190 ;; Auto vars:     Size  Location     Type
 22191 ;;  i               1   36[BANK0 ] unsigned char 
 22192 ;;  res             1   35[BANK0 ] unsigned char 
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  1    wreg      unsigned char 
 22195 ;; Registers used:
 22196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22197 ;; Tracked objects:
 22198 ;;		On entry : E/0
 22199 ;;		On exit  : F/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22206 ;;Total ram usage:        4 bytes
 22207 ;; Hardware stack levels used:    1
 22208 ;; Hardware stack levels required when called:    7
 22209 ;; This function calls:
 22210 ;;		_isSameAddress
 22211 ;; This function is called by:
 22212 ;;		_GetRouteAddressOfChild
 22213 ;;		_LELinkQualityGet
 22214 ;;		_LE_PinNeighbor
 22215 ;;		_LE_UnpinNeighbor
 22216 ;;		_LE_ClearDLQ
 22217 ;;		_LE_InsertNeighbor
 22218 ;;		_LE_processReceivedMessage
 22219 ;;		_LE_RemoveNeighborDevice
 22220 ;; This function uses a non-reentrant model
 22221 ;;
 22222                           
 22223                           	psect	text93
 22224  0068F6                     __ptext93:
 22225                           	opt stack 0
 22226  0068F6                     _le_findIdx:
 22227                           	opt stack 18
 22228                           
 22229                           ;LinkEstimator.c: 54: uint8_t i;
 22230                           ;LinkEstimator.c: 55: uint8_t res=0xff;
 22231                           
 22232                           ;incstack = 0
 22233  0068F6  0100               	movlb	0	; () banked
 22234  0068F8  6983               	setf	le_findIdx@res& (0+255),b
 22235                           
 22236                           ;LinkEstimator.c: 56: for (i = 0; i < 20; i++)
 22237  0068FA  6B84               	clrf	le_findIdx@i& (0+255),b
 22238  0068FC                     l16086:
 22239                           
 22240                           ; BSR set to: 0
 22241                           ;LinkEstimator.c: 57: {
 22242                           ;LinkEstimator.c: 58: if (neighbor_tbl[i].flags & 0x1)
 22243  0068FC  5184               	movf	le_findIdx@i& (0+255),w,b
 22244  0068FE  0D0B               	mullw	11
 22245  006900  0E05               	movlw	low (_neighbor_tbl+5)
 22246  006902  24F3               	addwf	prodl,w,c
 22247  006904  6ED9               	movwf	fsr2l,c
 22248  006906  0E05               	movlw	high (_neighbor_tbl+5)
 22249  006908  20F4               	addwfc	prodh,w,c
 22250  00690A  6EDA               	movwf	fsr2h,c
 22251  00690C  A0DF               	btfss	indf2,0,c
 22252  00690E  D018               	goto	l16092
 22253                           
 22254                           ; BSR set to: 5
 22255                           ;LinkEstimator.c: 59: {
 22256                           ;LinkEstimator.c: 60: if (isSameAddress(neighbor_tbl[i].ll_addr, ll_addr))
 22257  006910  0100               	movlb	0	; () banked
 22258  006912  5184               	movf	le_findIdx@i& (0+255),w,b
 22259  006914  0D0B               	mullw	11
 22260  006916  0E00               	movlw	low _neighbor_tbl
 22261  006918  24F3               	addwf	prodl,w,c
 22262  00691A  6ED9               	movwf	fsr2l,c
 22263  00691C  0E05               	movlw	high _neighbor_tbl
 22264  00691E  20F4               	addwfc	prodh,w,c
 22265  006920  6EDA               	movwf	fsr2h,c
 22266  006922  CFDE F07D          	movff	postinc2,isSameAddress@a1
 22267  006926  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 22268  00692A  C081  F07F         	movff	le_findIdx@ll_addr,isSameAddress@a2
 22269  00692E  C082  F080         	movff	le_findIdx@ll_addr+1,isSameAddress@a2+1
 22270  006932  ECBA  F039         	call	_isSameAddress	;wreg free
 22271  006936  0900               	iorlw	0
 22272  006938  E003               	bz	l16092
 22273                           
 22274                           ; BSR set to: 0
 22275                           ;LinkEstimator.c: 61: {
 22276                           ;LinkEstimator.c: 62: res=i;
 22277  00693A  C084  F083         	movff	le_findIdx@i,le_findIdx@res
 22278                           
 22279                           ;LinkEstimator.c: 63: break;
 22280  00693E  D005               	goto	l16096
 22281  006940                     l16092:
 22282  006940  0100               	movlb	0	; () banked
 22283  006942  2B84               	incf	le_findIdx@i& (0+255),f,b
 22284                           
 22285                           ; BSR set to: 0
 22286  006944  0E13               	movlw	19
 22287  006946  6584               	cpfsgt	le_findIdx@i& (0+255),b
 22288  006948  D7D9               	goto	l16086
 22289  00694A                     l16096:
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;LinkEstimator.c: 64: }
 22293                           ;LinkEstimator.c: 65: }
 22294                           ;LinkEstimator.c: 66: }
 22295                           ;LinkEstimator.c: 67: return res;
 22296  00694A  5183               	movf	le_findIdx@res& (0+255),w,b
 22297                           
 22298                           ; BSR set to: 0
 22299  00694C  0012               	return		;funcret
 22300  00694E                     __end_of_le_findIdx:
 22301                           	opt stack 0
 22302                           tblptru	equ	0xFF8
 22303                           tblptrh	equ	0xFF7
 22304                           tblptrl	equ	0xFF6
 22305                           tablat	equ	0xFF5
 22306                           prodh	equ	0xFF4
 22307                           prodl	equ	0xFF3
 22308                           intcon	equ	0xFF2
 22309                           intcon3	equ	0xFF0
 22310                           postinc0	equ	0xFEE
 22311                           plusw0	equ	0xFEB
 22312                           fsr0h	equ	0xFEA
 22313                           fsr0l	equ	0xFE9
 22314                           wreg	equ	0xFE8
 22315                           indf1	equ	0xFE7
 22316                           postinc1	equ	0xFE6
 22317                           postdec1	equ	0xFE5
 22318                           plusw1	equ	0xFE3
 22319                           fsr1h	equ	0xFE2
 22320                           fsr1l	equ	0xFE1
 22321                           indf2	equ	0xFDF
 22322                           postinc2	equ	0xFDE
 22323                           postdec2	equ	0xFDD
 22324                           plusw2	equ	0xFDB
 22325                           fsr2h	equ	0xFDA
 22326                           fsr2l	equ	0xFD9
 22327                           status	equ	0xFD8
 22328                           
 22329 ;; *************** function _LEAppendNeighborInfo *****************
 22330 ;; Defined at:
 22331 ;;		line 89 in file "../LinkEstimator.c"
 22332 ;; Parameters:    Size  Location     Type
 22333 ;;  data            2   36[BANK0 ] PTR unsigned char 
 22334 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 22335 ;;  size            2   38[BANK0 ] unsigned int 
 22336 ;; Auto vars:     Size  Location     Type
 22337 ;;  k               2   52[BANK0 ] unsigned int 
 22338 ;;  j               2   50[BANK0 ] unsigned int 
 22339 ;;  i               2   48[BANK0 ] unsigned int 
 22340 ;;  count           2   46[BANK0 ] unsigned int 
 22341 ;;  newPrevSentI    2   44[BANK0 ] unsigned int 
 22342 ;;  cnt             2   42[BANK0 ] unsigned int 
 22343 ;; Return value:  Size  Location     Type
 22344 ;;                  2   36[BANK0 ] PTR unsigned char 
 22345 ;; Registers used:
 22346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22347 ;; Tracked objects:
 22348 ;;		On entry : F/0
 22349 ;;		On exit  : F/0
 22350 ;;		Unchanged: 0/0
 22351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22353 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22355 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22356 ;;Total ram usage:       18 bytes
 22357 ;; Hardware stack levels used:    1
 22358 ;; Hardware stack levels required when called:    6
 22359 ;; This function calls:
 22360 ;;		_NetworkAddressSizeGet
 22361 ;;		___lwdiv
 22362 ;;		___lwmod
 22363 ;;		_memcpy
 22364 ;; This function is called by:
 22365 ;;		_networkSendBeacon
 22366 ;; This function uses a non-reentrant model
 22367 ;;
 22368                           
 22369                           	psect	text94
 22370  003AE4                     __ptext94:
 22371                           	opt stack 0
 22372  003AE4                     _LEAppendNeighborInfo:
 22373                           	opt stack 19
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;LinkEstimator.c: 91: uint16_t i,j,k,cnt;
 22377                           ;LinkEstimator.c: 92: uint16_t count=size/sizeof(neighbor_stat_entry_t);
 22378                           
 22379                           ; BSR set to: 0
 22380                           ;incstack = 0
 22381  003AE4  C086  F073         	movff	LEAppendNeighborInfo@size,___lwdiv@dividend
 22382  003AE8  C087  F074         	movff	LEAppendNeighborInfo@size+1,___lwdiv@dividend+1
 22383  003AEC  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 22384  003AEE  0E03               	movlw	3
 22385  003AF0  6F75               	movwf	___lwdiv@divisor& (0+255),b
 22386  003AF2  EC98  F036         	call	___lwdiv	;wreg free
 22387  003AF6  C073  F08E         	movff	?___lwdiv,LEAppendNeighborInfo@count
 22388  003AFA  C074  F08F         	movff	?___lwdiv+1,LEAppendNeighborInfo@count+1
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;LinkEstimator.c: 93: uint16_t newPrevSentIdx=0;
 22392  003AFE  6B8C               	clrf	LEAppendNeighborInfo@newPrevSentIdx& (0+255),b
 22393  003B00  6B8D               	clrf	(LEAppendNeighborInfo@newPrevSentIdx+1)& (0+255),b
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;LinkEstimator.c: 94: if(count>5)
 22397  003B02  518F               	movf	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 22398  003B04  E103               	bnz	u19460
 22399  003B06  0E06               	movlw	6
 22400  003B08  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 22401  003B0A  E303               	bnc	l1482
 22402  003B0C                     u19460:
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;LinkEstimator.c: 95: {
 22406                           ;LinkEstimator.c: 96: count=5;
 22407  003B0C  6B8F               	clrf	(LEAppendNeighborInfo@count+1)& (0+255),b
 22408  003B0E  0E05               	movlw	5
 22409  003B10  6F8E               	movwf	LEAppendNeighborInfo@count& (0+255),b
 22410  003B12                     l1482:
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;LinkEstimator.c: 97: }
 22414                           ;LinkEstimator.c: 98: j=2;
 22415  003B12  6B93               	clrf	(LEAppendNeighborInfo@j+1)& (0+255),b
 22416  003B14  0E02               	movlw	2
 22417  003B16  6F92               	movwf	LEAppendNeighborInfo@j& (0+255),b
 22418                           
 22419                           ; BSR set to: 0
 22420                           ;LinkEstimator.c: 99: cnt=0;
 22421  003B18  6B8A               	clrf	LEAppendNeighborInfo@cnt& (0+255),b
 22422  003B1A  6B8B               	clrf	(LEAppendNeighborInfo@cnt+1)& (0+255),b
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;LinkEstimator.c: 100: for(i=0;i<20;i++)
 22426  003B1C  6B90               	clrf	LEAppendNeighborInfo@i& (0+255),b
 22427  003B1E  6B91               	clrf	(LEAppendNeighborInfo@i+1)& (0+255),b
 22428  003B20                     l16560:
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;LinkEstimator.c: 101: {
 22432                           ;LinkEstimator.c: 102: cnt++;
 22433  003B20  4B8A               	infsnz	LEAppendNeighborInfo@cnt& (0+255),f,b
 22434  003B22  2B8B               	incf	(LEAppendNeighborInfo@cnt+1)& (0+255),f,b
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;LinkEstimator.c: 103: k = (prevSentIdx + i + 1) % 20;
 22438  003B24  5190               	movf	LEAppendNeighborInfo@i& (0+255),w,b
 22439  003B26  0101               	movlb	1	; () banked
 22440  003B28  25CA               	addwf	_prevSentIdx& (0+255),w,b
 22441  003B2A  0100               	movlb	0	; () banked
 22442  003B2C  6F88               	movwf	??_LEAppendNeighborInfo& (0+255),b
 22443  003B2E  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 22444  003B30  0101               	movlb	1	; () banked
 22445  003B32  21CB               	addwfc	(_prevSentIdx+1)& (0+255),w,b
 22446  003B34  0100               	movlb	0	; () banked
 22447  003B36  6F89               	movwf	(??_LEAppendNeighborInfo+1)& (0+255),b
 22448  003B38  2988               	incf	??_LEAppendNeighborInfo& (0+255),w,b
 22449  003B3A  6F7F               	movwf	___lwmod@dividend& (0+255),b
 22450  003B3C  0E00               	movlw	0
 22451  003B3E  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 22452  003B40  6F80               	movwf	(___lwmod@dividend+1)& (0+255),b
 22453  003B42  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 22454  003B44  0E14               	movlw	20
 22455  003B46  6F81               	movwf	___lwmod@divisor& (0+255),b
 22456  003B48  EC64  F037         	call	___lwmod	;wreg free
 22457  003B4C  C07F  F094         	movff	?___lwmod,LEAppendNeighborInfo@k
 22458  003B50  C080  F095         	movff	?___lwmod+1,LEAppendNeighborInfo@k+1
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;LinkEstimator.c: 104: if ((neighbor_tbl[k].flags & 0x1) && (neighbor_tbl[k].flags & 0x2
      +                          ) && (cnt<=count))
 22462  003B54  0E0B               	movlw	11
 22463  003B56  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 22464  003B58  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 22465  003B5C  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 22466  003B60  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 22467  003B62  50F3               	movf	prodl,w,c
 22468  003B64  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 22469  003B66  0E05               	movlw	low (_neighbor_tbl+5)
 22470  003B68  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 22471  003B6A  6ED9               	movwf	fsr2l,c
 22472  003B6C  0E05               	movlw	high (_neighbor_tbl+5)
 22473  003B6E  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 22474  003B70  6EDA               	movwf	fsr2h,c
 22475  003B72  A0DF               	btfss	indf2,0,c
 22476  003B74  D056               	goto	l16580
 22477                           
 22478                           ; BSR set to: 5
 22479  003B76  0E0B               	movlw	11
 22480  003B78  0100               	movlb	0	; () banked
 22481  003B7A  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 22482  003B7C  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 22483  003B80  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 22484  003B84  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 22485  003B86  50F3               	movf	prodl,w,c
 22486  003B88  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 22487  003B8A  0E05               	movlw	low (_neighbor_tbl+5)
 22488  003B8C  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 22489  003B8E  6ED9               	movwf	fsr2l,c
 22490  003B90  0E05               	movlw	high (_neighbor_tbl+5)
 22491  003B92  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 22492  003B94  6EDA               	movwf	fsr2h,c
 22493  003B96  A2DF               	btfss	indf2,1,c
 22494  003B98  D044               	goto	l16580
 22495                           
 22496                           ; BSR set to: 5
 22497  003B9A  518A               	movf	LEAppendNeighborInfo@cnt& (0+255),w,b
 22498  003B9C  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 22499  003B9E  518B               	movf	(LEAppendNeighborInfo@cnt+1)& (0+255),w,b
 22500  003BA0  598F               	subwfb	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 22501  003BA2  E33F               	bnc	l16580
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;LinkEstimator.c: 105: {
 22505                           ;LinkEstimator.c: 106: memcpy(&data[j],neighbor_tbl[k].ll_addr.bytes, NetworkAddressSize
      +                          Get());
 22506  003BA4  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 22507  003BA6  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 22508  003BA8  6F75               	movwf	memcpy@d1& (0+255),b
 22509  003BAA  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 22510  003BAC  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 22511  003BAE  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 22512  003BB0  0E0B               	movlw	11
 22513  003BB2  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 22514  003BB4  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 22515  003BB8  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 22516  003BBC  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 22517  003BBE  50F3               	movf	prodl,w,c
 22518  003BC0  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 22519  003BC2  0E00               	movlw	low _neighbor_tbl
 22520  003BC4  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 22521  003BC6  6F77               	movwf	memcpy@s1& (0+255),b
 22522  003BC8  0E05               	movlw	high _neighbor_tbl
 22523  003BCA  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 22524  003BCC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 22525  003BCE  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 22526  003BD2  0100               	movlb	0	; () banked
 22527  003BD4  6F79               	movwf	memcpy@n& (0+255),b
 22528  003BD6  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22529  003BD8  EC54  F035         	call	_memcpy	;wreg free
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;LinkEstimator.c: 107: j+=NetworkAddressSizeGet();
 22533  003BDC  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 22534  003BE0  0100               	movlb	0	; () banked
 22535  003BE2  2792               	addwf	LEAppendNeighborInfo@j& (0+255),f,b
 22536  003BE4  0E00               	movlw	0
 22537  003BE6  2393               	addwfc	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 22538                           
 22539                           ; BSR set to: 0
 22540                           ;LinkEstimator.c: 108: data[j]=neighbor_tbl[k].inquality;
 22541  003BE8  0E0B               	movlw	11
 22542  003BEA  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 22543  003BEC  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 22544  003BF0  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 22545  003BF4  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 22546  003BF6  50F3               	movf	prodl,w,c
 22547  003BF8  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 22548  003BFA  0E06               	movlw	low (_neighbor_tbl+6)
 22549  003BFC  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 22550  003BFE  6ED9               	movwf	fsr2l,c
 22551  003C00  0E05               	movlw	high (_neighbor_tbl+6)
 22552  003C02  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 22553  003C04  6EDA               	movwf	fsr2h,c
 22554  003C06  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 22555  003C08  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 22556  003C0A  6EE1               	movwf	fsr1l,c
 22557  003C0C  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 22558  003C0E  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 22559  003C10  6EE2               	movwf	fsr1h,c
 22560  003C12  CFDF FFE7          	movff	indf2,indf1
 22561                           
 22562                           ; BSR set to: 0
 22563                           ;LinkEstimator.c: 109: j+=1;
 22564  003C16  4B92               	infsnz	LEAppendNeighborInfo@j& (0+255),f,b
 22565  003C18  2B93               	incf	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 22566                           
 22567                           ; BSR set to: 0
 22568                           ;LinkEstimator.c: 110: newPrevSentIdx = k;
 22569  003C1A  C094  F08C         	movff	LEAppendNeighborInfo@k,LEAppendNeighborInfo@newPrevSentIdx
 22570  003C1E  C095  F08D         	movff	LEAppendNeighborInfo@k+1,LEAppendNeighborInfo@newPrevSentIdx+1
 22571  003C22                     l16580:
 22572  003C22  0100               	movlb	0	; () banked
 22573  003C24  4B90               	infsnz	LEAppendNeighborInfo@i& (0+255),f,b
 22574  003C26  2B91               	incf	(LEAppendNeighborInfo@i+1)& (0+255),f,b
 22575                           
 22576                           ; BSR set to: 0
 22577  003C28  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 22578  003C2A  E104               	bnz	u19500
 22579  003C2C  0E14               	movlw	20
 22580  003C2E  5D90               	subwf	LEAppendNeighborInfo@i& (0+255),w,b
 22581  003C30  E201 D776          	bnc	l16560
 22582  003C34                     u19500:
 22583                           
 22584                           ; BSR set to: 0
 22585                           ;LinkEstimator.c: 111: }
 22586                           ;LinkEstimator.c: 112: }
 22587                           ;LinkEstimator.c: 113: prevSentIdx = newPrevSentIdx;
 22588  003C34  C08C  F1CA         	movff	LEAppendNeighborInfo@newPrevSentIdx,_prevSentIdx
 22589  003C38  C08D  F1CB         	movff	LEAppendNeighborInfo@newPrevSentIdx+1,_prevSentIdx+1
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;LinkEstimator.c: 115: data[0]=linkEstSeq++;
 22593  003C3C  C084  FFD9         	movff	LEAppendNeighborInfo@data,fsr2l
 22594  003C40  C085  FFDA         	movff	LEAppendNeighborInfo@data+1,fsr2h
 22595  003C44  C1C8  FFDF         	movff	_linkEstSeq,indf2
 22596                           
 22597                           ; BSR set to: 0
 22598  003C48  0101               	movlb	1	; () banked
 22599  003C4A  4BC8               	infsnz	_linkEstSeq& (0+255),f,b
 22600  003C4C  2BC9               	incf	(_linkEstSeq+1)& (0+255),f,b
 22601                           
 22602                           ; BSR set to: 1
 22603                           ;LinkEstimator.c: 116: data[1]=k;
 22604  003C4E  0100               	movlb	0	; () banked
 22605  003C50  EE20 F001          	lfsr	2,1
 22606  003C54  5184               	movf	LEAppendNeighborInfo@data& (0+255),w,b
 22607  003C56  26D9               	addwf	fsr2l,f,c
 22608  003C58  5185               	movf	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 22609  003C5A  22DA               	addwfc	fsr2h,f,c
 22610  003C5C  C094  FFDF         	movff	LEAppendNeighborInfo@k,indf2
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;LinkEstimator.c: 117: return(&data[j]);
 22614  003C60  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 22615  003C62  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 22616  003C64  6F84               	movwf	?_LEAppendNeighborInfo& (0+255),b
 22617  003C66  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 22618  003C68  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 22619  003C6A  6F85               	movwf	(?_LEAppendNeighborInfo+1)& (0+255),b
 22620                           
 22621                           ; BSR set to: 0
 22622  003C6C  0012               	return		;funcret
 22623  003C6E                     __end_of_LEAppendNeighborInfo:
 22624                           	opt stack 0
 22625                           tblptru	equ	0xFF8
 22626                           tblptrh	equ	0xFF7
 22627                           tblptrl	equ	0xFF6
 22628                           tablat	equ	0xFF5
 22629                           prodh	equ	0xFF4
 22630                           prodl	equ	0xFF3
 22631                           intcon	equ	0xFF2
 22632                           intcon3	equ	0xFF0
 22633                           postinc0	equ	0xFEE
 22634                           plusw0	equ	0xFEB
 22635                           fsr0h	equ	0xFEA
 22636                           fsr0l	equ	0xFE9
 22637                           wreg	equ	0xFE8
 22638                           indf1	equ	0xFE7
 22639                           postinc1	equ	0xFE6
 22640                           postdec1	equ	0xFE5
 22641                           plusw1	equ	0xFE3
 22642                           fsr1h	equ	0xFE2
 22643                           fsr1l	equ	0xFE1
 22644                           indf2	equ	0xFDF
 22645                           postinc2	equ	0xFDE
 22646                           postdec2	equ	0xFDD
 22647                           plusw2	equ	0xFDB
 22648                           fsr2h	equ	0xFDA
 22649                           fsr2l	equ	0xFD9
 22650                           status	equ	0xFD8
 22651                           
 22652 ;; *************** function ___lwmod *****************
 22653 ;; Defined at:
 22654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 22655 ;; Parameters:    Size  Location     Type
 22656 ;;  dividend        2   31[BANK0 ] unsigned int 
 22657 ;;  divisor         2   33[BANK0 ] unsigned int 
 22658 ;; Auto vars:     Size  Location     Type
 22659 ;;  counter         1   35[BANK0 ] unsigned char 
 22660 ;; Return value:  Size  Location     Type
 22661 ;;                  2   31[BANK0 ] unsigned int 
 22662 ;; Registers used:
 22663 ;;		wreg, status,2, status,0
 22664 ;; Tracked objects:
 22665 ;;		On entry : F/0
 22666 ;;		On exit  : F/0
 22667 ;;		Unchanged: 0/0
 22668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22673 ;;Total ram usage:        5 bytes
 22674 ;; Hardware stack levels used:    1
 22675 ;; Hardware stack levels required when called:    5
 22676 ;; This function calls:
 22677 ;;		Nothing
 22678 ;; This function is called by:
 22679 ;;		_LEAppendNeighborInfo
 22680 ;;		_le_findRandomNeighborIdx
 22681 ;; This function uses a non-reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text95
 22685  006EC8                     __ptext95:
 22686                           	opt stack 0
 22687  006EC8                     ___lwmod:
 22688                           	opt stack 20
 22689                           
 22690                           ; BSR set to: 0
 22691                           
 22692                           ; BSR set to: 0
 22693                           ;incstack = 0
 22694  006EC8  5181               	movf	___lwmod@divisor& (0+255),w,b
 22695  006ECA  1182               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 22696  006ECC  E017               	bz	l2628
 22697                           
 22698                           ; BSR set to: 0
 22699  006ECE  0E01               	movlw	1
 22700  006ED0  6F83               	movwf	___lwmod@counter& (0+255),b
 22701  006ED2  D004               	goto	l16426
 22702  006ED4                     l16424:
 22703                           
 22704                           ; BSR set to: 0
 22705  006ED4  90D8               	bcf	status,0,c
 22706  006ED6  3781               	rlcf	___lwmod@divisor& (0+255),f,b
 22707  006ED8  3782               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 22708  006EDA  2B83               	incf	___lwmod@counter& (0+255),f,b
 22709  006EDC                     l16426:
 22710                           
 22711                           ; BSR set to: 0
 22712  006EDC  AF82               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 22713  006EDE  D7FA               	goto	l16424
 22714  006EE0                     l16428:
 22715                           
 22716                           ; BSR set to: 0
 22717  006EE0  5181               	movf	___lwmod@divisor& (0+255),w,b
 22718  006EE2  5D7F               	subwf	___lwmod@dividend& (0+255),w,b
 22719  006EE4  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 22720  006EE6  5980               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 22721  006EE8  E304               	bnc	l16432
 22722                           
 22723                           ; BSR set to: 0
 22724  006EEA  5181               	movf	___lwmod@divisor& (0+255),w,b
 22725  006EEC  5F7F               	subwf	___lwmod@dividend& (0+255),f,b
 22726  006EEE  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 22727  006EF0  5B80               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 22728  006EF2                     l16432:
 22729                           
 22730                           ; BSR set to: 0
 22731  006EF2  90D8               	bcf	status,0,c
 22732  006EF4  3382               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 22733  006EF6  3381               	rrcf	___lwmod@divisor& (0+255),f,b
 22734                           
 22735                           ; BSR set to: 0
 22736  006EF8  2F83               	decfsz	___lwmod@counter& (0+255),f,b
 22737  006EFA  D7F2               	goto	l16428
 22738  006EFC                     l2628:
 22739                           
 22740                           ; BSR set to: 0
 22741  006EFC  C07F  F07F         	movff	___lwmod@dividend,?___lwmod
 22742  006F00  C080  F080         	movff	___lwmod@dividend+1,?___lwmod+1
 22743                           
 22744                           ; BSR set to: 0
 22745  006F04  0012               	return		;funcret
 22746  006F06                     __end_of___lwmod:
 22747                           	opt stack 0
 22748                           tblptru	equ	0xFF8
 22749                           tblptrh	equ	0xFF7
 22750                           tblptrl	equ	0xFF6
 22751                           tablat	equ	0xFF5
 22752                           prodh	equ	0xFF4
 22753                           prodl	equ	0xFF3
 22754                           intcon	equ	0xFF2
 22755                           intcon3	equ	0xFF0
 22756                           postinc0	equ	0xFEE
 22757                           plusw0	equ	0xFEB
 22758                           fsr0h	equ	0xFEA
 22759                           fsr0l	equ	0xFE9
 22760                           wreg	equ	0xFE8
 22761                           indf1	equ	0xFE7
 22762                           postinc1	equ	0xFE6
 22763                           postdec1	equ	0xFE5
 22764                           plusw1	equ	0xFE3
 22765                           fsr1h	equ	0xFE2
 22766                           fsr1l	equ	0xFE1
 22767                           indf2	equ	0xFDF
 22768                           postinc2	equ	0xFDE
 22769                           postdec2	equ	0xFDD
 22770                           plusw2	equ	0xFDB
 22771                           fsr2h	equ	0xFDA
 22772                           fsr2l	equ	0xFD9
 22773                           status	equ	0xFD8
 22774                           
 22775 ;; *************** function ___lwdiv *****************
 22776 ;; Defined at:
 22777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;  dividend        2   19[BANK0 ] unsigned int 
 22780 ;;  divisor         2   21[BANK0 ] unsigned int 
 22781 ;; Auto vars:     Size  Location     Type
 22782 ;;  quotient        2   24[BANK0 ] unsigned int 
 22783 ;;  counter         1   23[BANK0 ] unsigned char 
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  2   19[BANK0 ] unsigned int 
 22786 ;; Registers used:
 22787 ;;		wreg, status,2, status,0
 22788 ;; Tracked objects:
 22789 ;;		On entry : F/0
 22790 ;;		On exit  : F/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22796 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22797 ;;Total ram usage:        7 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; Hardware stack levels required when called:    5
 22800 ;; This function calls:
 22801 ;;		Nothing
 22802 ;; This function is called by:
 22803 ;;		_sprintf
 22804 ;;		_LEAppendNeighborInfo
 22805 ;;		_le_updateETX
 22806 ;;		_le_updateNeighborTableEst
 22807 ;; This function uses a non-reentrant model
 22808 ;;
 22809                           
 22810                           	psect	text96
 22811  006D30                     __ptext96:
 22812                           	opt stack 0
 22813  006D30                     ___lwdiv:
 22814                           	opt stack 24
 22815                           
 22816                           ; BSR set to: 0
 22817                           
 22818                           ; BSR set to: 0
 22819                           ;incstack = 0
 22820  006D30  6B78               	clrf	___lwdiv@quotient& (0+255),b
 22821  006D32  6B79               	clrf	(___lwdiv@quotient+1)& (0+255),b
 22822                           
 22823                           ; BSR set to: 0
 22824  006D34  5175               	movf	___lwdiv@divisor& (0+255),w,b
 22825  006D36  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22826  006D38  E01B               	bz	l2618
 22827                           
 22828                           ; BSR set to: 0
 22829  006D3A  0E01               	movlw	1
 22830  006D3C  6F77               	movwf	___lwdiv@counter& (0+255),b
 22831  006D3E  D004               	goto	l16198
 22832  006D40                     l16196:
 22833                           
 22834                           ; BSR set to: 0
 22835  006D40  90D8               	bcf	status,0,c
 22836  006D42  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
 22837  006D44  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22838  006D46  2B77               	incf	___lwdiv@counter& (0+255),f,b
 22839  006D48                     l16198:
 22840                           
 22841                           ; BSR set to: 0
 22842  006D48  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22843  006D4A  D7FA               	goto	l16196
 22844  006D4C                     l16200:
 22845                           
 22846                           ; BSR set to: 0
 22847  006D4C  90D8               	bcf	status,0,c
 22848  006D4E  3778               	rlcf	___lwdiv@quotient& (0+255),f,b
 22849  006D50  3779               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22850                           
 22851                           ; BSR set to: 0
 22852  006D52  5175               	movf	___lwdiv@divisor& (0+255),w,b
 22853  006D54  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
 22854  006D56  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22855  006D58  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22856  006D5A  E305               	bnc	l16208
 22857                           
 22858                           ; BSR set to: 0
 22859  006D5C  5175               	movf	___lwdiv@divisor& (0+255),w,b
 22860  006D5E  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
 22861  006D60  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22862  006D62  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22863                           
 22864                           ; BSR set to: 0
 22865  006D64  8178               	bsf	___lwdiv@quotient& (0+255),0,b
 22866  006D66                     l16208:
 22867                           
 22868                           ; BSR set to: 0
 22869  006D66  90D8               	bcf	status,0,c
 22870  006D68  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22871  006D6A  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
 22872                           
 22873                           ; BSR set to: 0
 22874  006D6C  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 22875  006D6E  D7EE               	goto	l16200
 22876  006D70                     l2618:
 22877                           
 22878                           ; BSR set to: 0
 22879  006D70  C078  F073         	movff	___lwdiv@quotient,?___lwdiv
 22880  006D74  C079  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
 22881                           
 22882                           ; BSR set to: 0
 22883  006D78  0012               	return		;funcret
 22884  006D7A                     __end_of___lwdiv:
 22885                           	opt stack 0
 22886                           tblptru	equ	0xFF8
 22887                           tblptrh	equ	0xFF7
 22888                           tblptrl	equ	0xFF6
 22889                           tablat	equ	0xFF5
 22890                           prodh	equ	0xFF4
 22891                           prodl	equ	0xFF3
 22892                           intcon	equ	0xFF2
 22893                           intcon3	equ	0xFF0
 22894                           postinc0	equ	0xFEE
 22895                           plusw0	equ	0xFEB
 22896                           fsr0h	equ	0xFEA
 22897                           fsr0l	equ	0xFE9
 22898                           wreg	equ	0xFE8
 22899                           indf1	equ	0xFE7
 22900                           postinc1	equ	0xFE6
 22901                           postdec1	equ	0xFE5
 22902                           plusw1	equ	0xFE3
 22903                           fsr1h	equ	0xFE2
 22904                           fsr1l	equ	0xFE1
 22905                           indf2	equ	0xFDF
 22906                           postinc2	equ	0xFDE
 22907                           postdec2	equ	0xFDD
 22908                           plusw2	equ	0xFDB
 22909                           fsr2h	equ	0xFDA
 22910                           fsr2l	equ	0xFD9
 22911                           status	equ	0xFD8
 22912                           
 22913 ;; *************** function _netDecayInterval *****************
 22914 ;; Defined at:
 22915 ;;		line 142 in file "../BeaconManager.c"
 22916 ;; Parameters:    Size  Location     Type
 22917 ;;		None
 22918 ;; Auto vars:     Size  Location     Type
 22919 ;;		None
 22920 ;; Return value:  Size  Location     Type
 22921 ;;                  1    wreg      void 
 22922 ;; Registers used:
 22923 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22924 ;; Tracked objects:
 22925 ;;		On entry : F/0
 22926 ;;		On exit  : F/0
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22933 ;;Total ram usage:        0 bytes
 22934 ;; Hardware stack levels used:    1
 22935 ;; Hardware stack levels required when called:    9
 22936 ;; This function calls:
 22937 ;;		_netChooseAdvertiseTime
 22938 ;; This function is called by:
 22939 ;;		_BeaconManagerTask
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text97
 22944  007068                     __ptext97:
 22945                           	opt stack 0
 22946  007068                     _netDecayInterval:
 22947                           	opt stack 17
 22948                           
 22949                           ; BSR set to: 0
 22950                           ;BeaconManager.c: 144: currentInterval <<=1;
 22951                           
 22952                           ; BSR set to: 0
 22953                           ;incstack = 0
 22954  007068  0101               	movlb	1	; () banked
 22955  00706A  90D8               	bcf	status,0,c
 22956  00706C  37B2               	rlcf	_currentInterval& (0+255),f,b
 22957  00706E  37B3               	rlcf	(_currentInterval+1)& (0+255),f,b
 22958  007070  37B4               	rlcf	(_currentInterval+2)& (0+255),f,b
 22959  007072  37B5               	rlcf	(_currentInterval+3)& (0+255),f,b
 22960                           
 22961                           ; BSR set to: 1
 22962                           ;BeaconManager.c: 145: if (currentInterval > ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5))
 22963  007074  0E81               	movlw	129
 22964  007076  5DB2               	subwf	_currentInterval& (0+255),w,b
 22965  007078  0EA8               	movlw	168
 22966  00707A  59B3               	subwfb	(_currentInterval+1)& (0+255),w,b
 22967  00707C  0E12               	movlw	18
 22968  00707E  59B4               	subwfb	(_currentInterval+2)& (0+255),w,b
 22969  007080  0E01               	movlw	1
 22970  007082  59B5               	subwfb	(_currentInterval+3)& (0+255),w,b
 22971  007084  E202 EF9D  F031    	bnc	_netChooseAdvertiseTime
 22972                           
 22973                           ; BSR set to: 1
 22974                           ;BeaconManager.c: 146: {
 22975                           ;BeaconManager.c: 147: currentInterval = ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5);
 22976  00708A  0E80               	movlw	128
 22977  00708C  6FB2               	movwf	_currentInterval& (0+255),b
 22978  00708E  0EA8               	movlw	168
 22979  007090  6FB3               	movwf	(_currentInterval+1)& (0+255),b
 22980  007092  0E12               	movlw	18
 22981  007094  6FB4               	movwf	(_currentInterval+2)& (0+255),b
 22982  007096  0E01               	movlw	1
 22983  007098  6FB5               	movwf	(_currentInterval+3)& (0+255),b
 22984                           
 22985                           ; BSR set to: 1
 22986                           ;BeaconManager.c: 148: }
 22987                           ;BeaconManager.c: 149: netChooseAdvertiseTime();
 22988  00709A  EF9D  F031         	goto	_netChooseAdvertiseTime	;wreg free
 22989  00709E                     __end_of_netDecayInterval:
 22990                           	opt stack 0
 22991                           tblptru	equ	0xFF8
 22992                           tblptrh	equ	0xFF7
 22993                           tblptrl	equ	0xFF6
 22994                           tablat	equ	0xFF5
 22995                           prodh	equ	0xFF4
 22996                           prodl	equ	0xFF3
 22997                           intcon	equ	0xFF2
 22998                           intcon3	equ	0xFF0
 22999                           postinc0	equ	0xFEE
 23000                           plusw0	equ	0xFEB
 23001                           fsr0h	equ	0xFEA
 23002                           fsr0l	equ	0xFE9
 23003                           wreg	equ	0xFE8
 23004                           indf1	equ	0xFE7
 23005                           postinc1	equ	0xFE6
 23006                           postdec1	equ	0xFE5
 23007                           plusw1	equ	0xFE3
 23008                           fsr1h	equ	0xFE2
 23009                           fsr1l	equ	0xFE1
 23010                           indf2	equ	0xFDF
 23011                           postinc2	equ	0xFDE
 23012                           postdec2	equ	0xFDD
 23013                           plusw2	equ	0xFDB
 23014                           fsr2h	equ	0xFDA
 23015                           fsr2l	equ	0xFD9
 23016                           status	equ	0xFD8
 23017                           
 23018 ;; *************** function _MSTickGetDiffNow *****************
 23019 ;; Defined at:
 23020 ;;		line 28 in file "../TimeTick.c"
 23021 ;; Parameters:    Size  Location     Type
 23022 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;  tdiff           8   67[BANK0 ] struct TickMS_t_def
 23025 ;;  tNow            8   59[BANK0 ] struct TickMS_t_def
 23026 ;;  diff            4   55[BANK0 ] unsigned long 
 23027 ;; Return value:  Size  Location     Type
 23028 ;;                  4   47[BANK0 ] unsigned long 
 23029 ;; Registers used:
 23030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23031 ;; Tracked objects:
 23032 ;;		On entry : C/0
 23033 ;;		On exit  : F/0
 23034 ;;		Unchanged: 0/0
 23035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23036 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23037 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23039 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;Total ram usage:       28 bytes
 23041 ;; Hardware stack levels used:    1
 23042 ;; Hardware stack levels required when called:    8
 23043 ;; This function calls:
 23044 ;;		_MSTickGet
 23045 ;; This function is called by:
 23046 ;;		_RouteManagerTask
 23047 ;;		_BeaconManagerTask
 23048 ;;		_TunnelManagerGetTunnel
 23049 ;;		_isKnownPacket
 23050 ;;		_TransportManagerTask
 23051 ;;		_NetworkManagerTask
 23052 ;; This function uses a non-reentrant model
 23053 ;;
 23054                           
 23055                           	psect	text98
 23056  00614C                     __ptext98:
 23057                           	opt stack 0
 23058  00614C                     _MSTickGetDiffNow:
 23059                           	opt stack 17
 23060                           
 23061                           ;TimeTick.c: 31: TickMS tdiff;
 23062                           ;TimeTick.c: 32: TickMS tNow=MSTickGet();
 23063                           
 23064                           ; BSR set to: 0
 23065                           ;incstack = 0
 23066  00614C  EC4F  F038         	call	_MSTickGet	;wreg free
 23067  006150  EE20  F09B         	lfsr	2,MSTickGetDiffNow@tNow
 23068  006154  0E07               	movlw	7
 23069  006156                     u18721:
 23070  006156  CFEB FFDB          	movff	plusw0,plusw2
 23071  00615A  06E8               	decf	wreg,f,c
 23072  00615C  E2FC               	bc	u18721
 23073                           
 23074                           ; BSR set to: 0
 23075                           ;TimeTick.c: 33: tdiff.msb=tNow.msb-tick.msb;
 23076  00615E  5193               	movf	(MSTickGetDiffNow@tick+4)& (0+255),w,b
 23077  006160  5D9F               	subwf	(MSTickGetDiffNow@tNow+4)& (0+255),w,b
 23078  006162  6FA7               	movwf	(MSTickGetDiffNow@tdiff+4)& (0+255),b
 23079  006164  5194               	movf	(MSTickGetDiffNow@tick+5)& (0+255),w,b
 23080  006166  59A0               	subwfb	(MSTickGetDiffNow@tNow+5)& (0+255),w,b
 23081  006168  6FA8               	movwf	(MSTickGetDiffNow@tdiff+5)& (0+255),b
 23082  00616A  5195               	movf	(MSTickGetDiffNow@tick+6)& (0+255),w,b
 23083  00616C  59A1               	subwfb	(MSTickGetDiffNow@tNow+6)& (0+255),w,b
 23084  00616E  6FA9               	movwf	(MSTickGetDiffNow@tdiff+6)& (0+255),b
 23085  006170  5196               	movf	(MSTickGetDiffNow@tick+7)& (0+255),w,b
 23086  006172  59A2               	subwfb	(MSTickGetDiffNow@tNow+7)& (0+255),w,b
 23087  006174  6FAA               	movwf	(MSTickGetDiffNow@tdiff+7)& (0+255),b
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;TimeTick.c: 34: tdiff.lsb=tNow.lsb-tick.lsb;
 23091  006176  518F               	movf	MSTickGetDiffNow@tick& (0+255),w,b
 23092  006178  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 23093  00617A  6FA3               	movwf	MSTickGetDiffNow@tdiff& (0+255),b
 23094  00617C  5190               	movf	(MSTickGetDiffNow@tick+1)& (0+255),w,b
 23095  00617E  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 23096  006180  6FA4               	movwf	(MSTickGetDiffNow@tdiff+1)& (0+255),b
 23097  006182  5191               	movf	(MSTickGetDiffNow@tick+2)& (0+255),w,b
 23098  006184  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 23099  006186  6FA5               	movwf	(MSTickGetDiffNow@tdiff+2)& (0+255),b
 23100  006188  5192               	movf	(MSTickGetDiffNow@tick+3)& (0+255),w,b
 23101  00618A  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 23102  00618C  6FA6               	movwf	(MSTickGetDiffNow@tdiff+3)& (0+255),b
 23103                           
 23104                           ; BSR set to: 0
 23105                           ;TimeTick.c: 35: if(tdiff.lsb>tNow.lsb)
 23106  00618E  51A3               	movf	MSTickGetDiffNow@tdiff& (0+255),w,b
 23107  006190  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 23108  006192  51A4               	movf	(MSTickGetDiffNow@tdiff+1)& (0+255),w,b
 23109  006194  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 23110  006196  51A5               	movf	(MSTickGetDiffNow@tdiff+2)& (0+255),w,b
 23111  006198  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 23112  00619A  51A6               	movf	(MSTickGetDiffNow@tdiff+3)& (0+255),w,b
 23113  00619C  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 23114  00619E  E205               	bc	l16030
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;TimeTick.c: 36: {
 23118                           ;TimeTick.c: 37: tdiff.msb--;
 23119  0061A0  07A7               	decf	(MSTickGetDiffNow@tdiff+4)& (0+255),f,b
 23120  0061A2  0E00               	movlw	0
 23121  0061A4  5BA8               	subwfb	(MSTickGetDiffNow@tdiff+5)& (0+255),f,b
 23122  0061A6  5BA9               	subwfb	(MSTickGetDiffNow@tdiff+6)& (0+255),f,b
 23123  0061A8  5BAA               	subwfb	(MSTickGetDiffNow@tdiff+7)& (0+255),f,b
 23124  0061AA                     l16030:
 23125                           
 23126                           ; BSR set to: 0
 23127                           ;TimeTick.c: 38: }
 23128                           ;TimeTick.c: 39: diff=tdiff.lsb;
 23129  0061AA  C0A3  F097         	movff	MSTickGetDiffNow@tdiff,MSTickGetDiffNow@diff
 23130  0061AE  C0A4  F098         	movff	MSTickGetDiffNow@tdiff+1,MSTickGetDiffNow@diff+1
 23131  0061B2  C0A5  F099         	movff	MSTickGetDiffNow@tdiff+2,MSTickGetDiffNow@diff+2
 23132  0061B6  C0A6  F09A         	movff	MSTickGetDiffNow@tdiff+3,MSTickGetDiffNow@diff+3
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;TimeTick.c: 41: return(diff);
 23136  0061BA  C097  F08F         	movff	MSTickGetDiffNow@diff,?_MSTickGetDiffNow
 23137  0061BE  C098  F090         	movff	MSTickGetDiffNow@diff+1,?_MSTickGetDiffNow+1
 23138  0061C2  C099  F091         	movff	MSTickGetDiffNow@diff+2,?_MSTickGetDiffNow+2
 23139  0061C6  C09A  F092         	movff	MSTickGetDiffNow@diff+3,?_MSTickGetDiffNow+3
 23140                           
 23141                           ; BSR set to: 0
 23142  0061CA  0012               	return		;funcret
 23143  0061CC                     __end_of_MSTickGetDiffNow:
 23144                           	opt stack 0
 23145                           tblptru	equ	0xFF8
 23146                           tblptrh	equ	0xFF7
 23147                           tblptrl	equ	0xFF6
 23148                           tablat	equ	0xFF5
 23149                           prodh	equ	0xFF4
 23150                           prodl	equ	0xFF3
 23151                           intcon	equ	0xFF2
 23152                           intcon3	equ	0xFF0
 23153                           postinc0	equ	0xFEE
 23154                           plusw0	equ	0xFEB
 23155                           fsr0h	equ	0xFEA
 23156                           fsr0l	equ	0xFE9
 23157                           wreg	equ	0xFE8
 23158                           indf1	equ	0xFE7
 23159                           postinc1	equ	0xFE6
 23160                           postdec1	equ	0xFE5
 23161                           plusw1	equ	0xFE3
 23162                           fsr1h	equ	0xFE2
 23163                           fsr1l	equ	0xFE1
 23164                           indf2	equ	0xFDF
 23165                           postinc2	equ	0xFDE
 23166                           postdec2	equ	0xFDD
 23167                           plusw2	equ	0xFDB
 23168                           fsr2h	equ	0xFDA
 23169                           fsr2l	equ	0xFD9
 23170                           status	equ	0xFD8
 23171                           
 23172 ;; *************** function _MiMAC_ReceivedPacket *****************
 23173 ;; Defined at:
 23174 ;;		line 927 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23175 ;; Parameters:    Size  Location     Type
 23176 ;;		None
 23177 ;; Auto vars:     Size  Location     Type
 23178 ;;  addr            2   80[BANK0 ] struct addr_t_def
 23179 ;;  FrameCounter    4   82[BANK0 ] unsigned long 
 23180 ;;  PayloadIndex    1   87[BANK0 ] unsigned char 
 23181 ;;  j               1   86[BANK0 ] unsigned char 
 23182 ;;  currentTick     4   76[BANK0 ] struct MIWI_TICK_t
 23183 ;;  i               1   88[BANK0 ] unsigned char 
 23184 ;; Return value:  Size  Location     Type
 23185 ;;                  1    wreg      unsigned char 
 23186 ;; Registers used:
 23187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23188 ;; Tracked objects:
 23189 ;;		On entry : C/0
 23190 ;;		On exit  : D/0
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23194 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23195 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23196 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23197 ;;Total ram usage:       21 bytes
 23198 ;; Hardware stack levels used:    1
 23199 ;; Hardware stack levels required when called:    8
 23200 ;; This function calls:
 23201 ;;		_CCM_Dec
 23202 ;;		_MiWi_TickGetMs
 23203 ;;		_isSameAddress
 23204 ;;		_memcpy
 23205 ;; This function is called by:
 23206 ;;		_MiApp_MessageAvailable
 23207 ;; This function uses a non-reentrant model
 23208 ;;
 23209                           
 23210                           	psect	text99
 23211  000F42                     __ptext99:
 23212                           	opt stack 0
 23213  000F42                     _MiMAC_ReceivedPacket:
 23214                           	opt stack 20
 23215                           
 23216                           ;drv_mrf_miwi_mesh_89xa.c: 929: uint8_t i;
 23217                           ;drv_mrf_miwi_mesh_89xa.c: 930: MIWI_TICK currentTick;
 23218                           ;drv_mrf_miwi_mesh_89xa.c: 934: for(i = 0; i < 5; i++)
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;incstack = 0
 23222  000F42  0100               	movlb	0	; () banked
 23223  000F44  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 23224  000F46                     l17882:
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;drv_mrf_miwi_mesh_89xa.c: 935: {
 23228                           ;drv_mrf_miwi_mesh_89xa.c: 936: currentTick = MiWi_TickGetMs();
 23229  000F46  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 23230  000F4A  C07F  F0AC         	movff	?_MiWi_TickGetMs,MiMAC_ReceivedPacket@currentTick
 23231  000F4E  C080  F0AD         	movff	?_MiWi_TickGetMs+1,MiMAC_ReceivedPacket@currentTick+1
 23232  000F52  C081  F0AE         	movff	?_MiWi_TickGetMs+2,MiMAC_ReceivedPacket@currentTick+2
 23233  000F56  C082  F0AF         	movff	?_MiWi_TickGetMs+3,MiMAC_ReceivedPacket@currentTick+3
 23234                           
 23235                           ; BSR set to: 0
 23236                           ;drv_mrf_miwi_mesh_89xa.c: 937: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].st
      +                          artTick.Val) &&
 23237                           ;drv_mrf_miwi_mesh_89xa.c: 938: ((currentTick.Val - AckInfo[i].startTick.Val) > 1000) )
 23238  000F5A  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23239  000F5C  0D06               	mullw	6
 23240  000F5E  0E00               	movlw	low _AckInfo
 23241  000F60  24F3               	addwf	prodl,w,c
 23242  000F62  6ED9               	movwf	fsr2l,c
 23243  000F64  0E03               	movlw	high _AckInfo
 23244  000F66  20F4               	addwfc	prodh,w,c
 23245  000F68  6EDA               	movwf	fsr2h,c
 23246  000F6A  50DF               	movf	indf2,w,c
 23247  000F6C  E03E               	bz	l17892
 23248                           
 23249                           ; BSR set to: 0
 23250  000F6E  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23251  000F70  0D06               	mullw	6
 23252  000F72  0E02               	movlw	low (_AckInfo+2)
 23253  000F74  24F3               	addwf	prodl,w,c
 23254  000F76  6ED9               	movwf	fsr2l,c
 23255  000F78  0E03               	movlw	high (_AckInfo+2)
 23256  000F7A  20F4               	addwfc	prodh,w,c
 23257  000F7C  6EDA               	movwf	fsr2h,c
 23258  000F7E  51AC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23259  000F80  5CDE               	subwf	postinc2,w,c
 23260  000F82  51AD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23261  000F84  58DE               	subwfb	postinc2,w,c
 23262  000F86  51AE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23263  000F88  58DE               	subwfb	postinc2,w,c
 23264  000F8A  51AF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23265  000F8C  58DE               	subwfb	postinc2,w,c
 23266  000F8E  E22D               	bc	l17892
 23267                           
 23268                           ; BSR set to: 0
 23269  000F90  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23270  000F92  0D06               	mullw	6
 23271  000F94  0E02               	movlw	low (_AckInfo+2)
 23272  000F96  24F3               	addwf	prodl,w,c
 23273  000F98  6ED9               	movwf	fsr2l,c
 23274  000F9A  0E03               	movlw	high (_AckInfo+2)
 23275  000F9C  20F4               	addwfc	prodh,w,c
 23276  000F9E  6EDA               	movwf	fsr2h,c
 23277  000FA0  CFDE F0A4          	movff	postinc2,??_MiMAC_ReceivedPacket
 23278  000FA4  CFDE F0A5          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 23279  000FA8  CFDE F0A6          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 23280  000FAC  CFDE F0A7          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 23281  000FB0  51A4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23282  000FB2  5DAC               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 23283  000FB4  6FA8               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 23284  000FB6  51A5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23285  000FB8  59AD               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 23286  000FBA  6FA9               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 23287  000FBC  51A6               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 23288  000FBE  59AE               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 23289  000FC0  6FAA               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 23290  000FC2  51A7               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 23291  000FC4  59AF               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 23292  000FC6  6FAB               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 23293  000FC8  51AB               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 23294  000FCA  11AA               	iorwf	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 23295  000FCC  E105               	bnz	u21640
 23296  000FCE  0EE9               	movlw	233
 23297  000FD0  5DA8               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 23298  000FD2  0E03               	movlw	3
 23299  000FD4  59A9               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 23300  000FD6  E309               	bnc	l17892
 23301  000FD8                     u21640:
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;drv_mrf_miwi_mesh_89xa.c: 939: {
 23305                           ;drv_mrf_miwi_mesh_89xa.c: 940: AckInfo[i].Valid = 0;
 23306  000FD8  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23307  000FDA  0D06               	mullw	6
 23308  000FDC  0E00               	movlw	low _AckInfo
 23309  000FDE  24F3               	addwf	prodl,w,c
 23310  000FE0  6ED9               	movwf	fsr2l,c
 23311  000FE2  0E03               	movlw	high _AckInfo
 23312  000FE4  20F4               	addwfc	prodh,w,c
 23313  000FE6  6EDA               	movwf	fsr2h,c
 23314  000FE8  6ADF               	clrf	indf2,c
 23315  000FEA                     l17892:
 23316                           
 23317                           ; BSR set to: 0
 23318  000FEA  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23319                           
 23320                           ; BSR set to: 0
 23321  000FEC  0E04               	movlw	4
 23322  000FEE  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23323  000FF0  D7AA               	goto	l17882
 23324                           
 23325                           ; BSR set to: 0
 23326                           ;drv_mrf_miwi_mesh_89xa.c: 941: }
 23327                           ;drv_mrf_miwi_mesh_89xa.c: 942: }
 23328                           ;drv_mrf_miwi_mesh_89xa.c: 945: if( ReceivedBankIndex != 0xFF )
 23329  000FF2  283F               	incf	_ReceivedBankIndex,w,c
 23330  000FF4  E001               	bz	l816
 23331                           
 23332                           ; BSR set to: 0
 23333                           ;drv_mrf_miwi_mesh_89xa.c: 946: {
 23334                           ;drv_mrf_miwi_mesh_89xa.c: 947: return 0;
 23335  000FF6  0C00               	retlw	0
 23336  000FF8                     l816:
 23337                           
 23338                           ; BSR set to: 0
 23339                           ;drv_mrf_miwi_mesh_89xa.c: 948: }
 23340                           ;drv_mrf_miwi_mesh_89xa.c: 950: for(i = 0; i < 2; i++)
 23341  000FF8  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 23342  000FFA                     l17906:
 23343                           
 23344                           ; BSR set to: 0
 23345                           ;drv_mrf_miwi_mesh_89xa.c: 951: {
 23346                           ;drv_mrf_miwi_mesh_89xa.c: 952: if( RxPacket[i].flags.bits.Valid )
 23347  000FFA  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23348  000FFC  0D47               	mullw	71
 23349  000FFE  0E1E               	movlw	low _RxPacket
 23350  001000  24F3               	addwf	prodl,w,c
 23351  001002  6ED9               	movwf	fsr2l,c
 23352  001004  0E03               	movlw	high _RxPacket
 23353  001006  20F4               	addwfc	prodh,w,c
 23354  001008  6EDA               	movwf	fsr2h,c
 23355  00100A  A0DF               	btfss	indf2,0,c
 23356  00100C  D15D               	goto	l17994
 23357                           
 23358                           ; BSR set to: 3
 23359                           ;drv_mrf_miwi_mesh_89xa.c: 953: {
 23360                           ;drv_mrf_miwi_mesh_89xa.c: 954: uint8_t PayloadIndex;
 23361                           ;drv_mrf_miwi_mesh_89xa.c: 955: uint8_t j;
 23362                           ;drv_mrf_miwi_mesh_89xa.c: 957: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 23363  00100E  0100               	movlb	0	; () banked
 23364  001010  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23365  001012  0D47               	mullw	71
 23366  001014  0E1F               	movlw	low (_RxPacket+1)
 23367  001016  24F3               	addwf	prodl,w,c
 23368  001018  6ED9               	movwf	fsr2l,c
 23369  00101A  0E03               	movlw	high (_RxPacket+1)
 23370  00101C  20F4               	addwfc	prodh,w,c
 23371  00101E  6EDA               	movwf	fsr2h,c
 23372  001020  50DF               	movf	indf2,w,c
 23373  001022  0102               	movlb	2	; () banked
 23374  001024  6F33               	movwf	_MACRxPacket& (0+255),b
 23375                           
 23376                           ;drv_mrf_miwi_mesh_89xa.c: 958: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 23377  001026  0100               	movlb	0	; () banked
 23378  001028  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23379  00102A  0D47               	mullw	71
 23380  00102C  0E5F               	movlw	low (_RxPacket+65)
 23381  00102E  24F3               	addwf	prodl,w,c
 23382  001030  6ED9               	movwf	fsr2l,c
 23383  001032  0E03               	movlw	high (_RxPacket+65)
 23384  001034  20F4               	addwfc	prodh,w,c
 23385  001036  6EDA               	movwf	fsr2h,c
 23386  001038  50DF               	movf	indf2,w,c
 23387  00103A  0102               	movlb	2	; () banked
 23388  00103C  6F38               	movwf	(_MACRxPacket+5)& (0+255),b
 23389                           
 23390                           ; BSR set to: 2
 23391                           ;drv_mrf_miwi_mesh_89xa.c: 959: PayloadIndex = 2;
 23392  00103E  0E02               	movlw	2
 23393  001040  0100               	movlb	0	; () banked
 23394  001042  6FB7               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;drv_mrf_miwi_mesh_89xa.c: 961: if( MACRxPacket.flags.bits.destPrsnt )
 23398  001044  0102               	movlb	2	; () banked
 23399  001046  AD33               	btfss	_MACRxPacket& (0+255),6,b
 23400  001048  D01A               	goto	l821
 23401                           
 23402                           ; BSR set to: 2
 23403                           ;drv_mrf_miwi_mesh_89xa.c: 962: {
 23404                           ;drv_mrf_miwi_mesh_89xa.c: 963: memcpy((uint8_t*)&MACRxPacket.DestPANID,(uint8_t*)&RxPac
      +                          ket[i].Payload[PayloadIndex],2);
 23405  00104A  0E3D               	movlw	low (_MACRxPacket+10)
 23406  00104C  0100               	movlb	0	; () banked
 23407  00104E  6F75               	movwf	memcpy@d1& (0+255),b
 23408  001050  0E02               	movlw	high (_MACRxPacket+10)
 23409  001052  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 23410  001054  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23411  001056  0D47               	mullw	71
 23412  001058  0E21               	movlw	low (_RxPacket+3)
 23413  00105A  24F3               	addwf	prodl,w,c
 23414  00105C  6F77               	movwf	memcpy@s1& (0+255),b
 23415  00105E  0E03               	movlw	high (_RxPacket+3)
 23416  001060  20F4               	addwfc	prodh,w,c
 23417  001062  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 23418  001064  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23419  001066  0E02               	movlw	2
 23420  001068  6F79               	movwf	memcpy@n& (0+255),b
 23421  00106A  EC54  F035         	call	_memcpy	;wreg free
 23422                           
 23423                           ; BSR set to: 0
 23424                           ;drv_mrf_miwi_mesh_89xa.c: 964: PayloadIndex+=2;
 23425  00106E  0E02               	movlw	2
 23426  001070  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;drv_mrf_miwi_mesh_89xa.c: 966: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 23430  001072  3036               	rrcf	_MACInitParams,w,c
 23431  001074  32E8               	rrcf	wreg,f,c
 23432  001076  32E8               	rrcf	wreg,f,c
 23433  001078  0B0F               	andlw	15
 23434  00107A  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23435                           
 23436                           ;drv_mrf_miwi_mesh_89xa.c: 967: }else
 23437  00107C  D002               	goto	l822
 23438  00107E                     l821:
 23439                           
 23440                           ; BSR set to: 2
 23441                           ;drv_mrf_miwi_mesh_89xa.c: 968: {
 23442                           ;drv_mrf_miwi_mesh_89xa.c: 969: MACRxPacket.DestPANID=0xffff;
 23443  00107E  693D               	setf	(_MACRxPacket+10)& (0+255),b
 23444  001080  693E               	setf	(_MACRxPacket+11)& (0+255),b
 23445  001082                     l822:
 23446                           
 23447                           ;drv_mrf_miwi_mesh_89xa.c: 970: }
 23448                           ;drv_mrf_miwi_mesh_89xa.c: 972: if( MACRxPacket.flags.bits.sourcePrsnt )
 23449  001082  0102               	movlb	2	; () banked
 23450  001084  AF33               	btfss	_MACRxPacket& (0+255),7,b
 23451  001086  D03C               	goto	l823
 23452                           
 23453                           ; BSR set to: 2
 23454                           ;drv_mrf_miwi_mesh_89xa.c: 973: {
 23455                           ;drv_mrf_miwi_mesh_89xa.c: 974: memcpy((uint8_t*)&MACRxPacket.SourcePANID,(uint8_t*)&RxP
      +                          acket[i].Payload[PayloadIndex],2);
 23456  001088  0E3B               	movlw	low (_MACRxPacket+8)
 23457  00108A  0100               	movlb	0	; () banked
 23458  00108C  6F75               	movwf	memcpy@d1& (0+255),b
 23459  00108E  0E02               	movlw	high (_MACRxPacket+8)
 23460  001090  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 23461  001092  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23462  001094  0D47               	mullw	71
 23463  001096  0E1E               	movlw	low _RxPacket
 23464  001098  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23465  00109A  0E03               	movlw	high _RxPacket
 23466  00109C  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23467  00109E  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23468  0010A0  0E00               	movlw	0
 23469  0010A2  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23470  0010A4  50F3               	movf	prodl,w,c
 23471  0010A6  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23472  0010A8  50F4               	movf	prodh,w,c
 23473  0010AA  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23474  0010AC  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23475  0010AE  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23476  0010B0  6F77               	movwf	memcpy@s1& (0+255),b
 23477  0010B2  0E00               	movlw	0
 23478  0010B4  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23479  0010B6  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 23480  0010B8  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23481  0010BA  0E02               	movlw	2
 23482  0010BC  6F79               	movwf	memcpy@n& (0+255),b
 23483  0010BE  EC54  F035         	call	_memcpy	;wreg free
 23484                           
 23485                           ; BSR set to: 0
 23486                           ;drv_mrf_miwi_mesh_89xa.c: 975: PayloadIndex+=2;
 23487  0010C2  0E02               	movlw	2
 23488  0010C4  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;drv_mrf_miwi_mesh_89xa.c: 977: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Pay
      +                          load[PayloadIndex]);
 23492  0010C6  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23493  0010C8  0D47               	mullw	71
 23494  0010CA  0E1E               	movlw	low _RxPacket
 23495  0010CC  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23496  0010CE  0E03               	movlw	high _RxPacket
 23497  0010D0  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23498  0010D2  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23499  0010D4  0E00               	movlw	0
 23500  0010D6  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23501  0010D8  50F3               	movf	prodl,w,c
 23502  0010DA  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23503  0010DC  50F4               	movf	prodh,w,c
 23504  0010DE  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23505  0010E0  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23506  0010E2  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23507  0010E4  0102               	movlb	2	; () banked
 23508  0010E6  6F34               	movwf	(_MACRxPacket+1)& (0+255),b
 23509  0010E8  0100               	movlb	0	; () banked
 23510  0010EA  0E00               	movlw	0
 23511  0010EC  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23512  0010EE  0102               	movlb	2	; () banked
 23513  0010F0  6F35               	movwf	(_MACRxPacket+2)& (0+255),b
 23514                           
 23515                           ; BSR set to: 2
 23516                           ;drv_mrf_miwi_mesh_89xa.c: 978: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 23517  0010F2  3036               	rrcf	_MACInitParams,w,c
 23518  0010F4  32E8               	rrcf	wreg,f,c
 23519  0010F6  32E8               	rrcf	wreg,f,c
 23520  0010F8  0B0F               	andlw	15
 23521  0010FA  0100               	movlb	0	; () banked
 23522  0010FC  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23523                           
 23524                           ;drv_mrf_miwi_mesh_89xa.c: 979: }
 23525  0010FE  D006               	goto	l824
 23526  001100                     l823:
 23527                           
 23528                           ; BSR set to: 2
 23529                           ;drv_mrf_miwi_mesh_89xa.c: 980: else
 23530                           ;drv_mrf_miwi_mesh_89xa.c: 981: {
 23531                           ;drv_mrf_miwi_mesh_89xa.c: 982: MACRxPacket.SourceAddress = (0);
 23532  001100  6B34               	clrf	(_MACRxPacket+1)& (0+255),b
 23533  001102  6B35               	clrf	(_MACRxPacket+2)& (0+255),b
 23534                           
 23535                           ;drv_mrf_miwi_mesh_89xa.c: 983: MACRxPacket.SourcePANID=myPANID;
 23536  001104  C0EB  F23B         	movff	_myPANID,_MACRxPacket+8
 23537  001108  C0EC  F23C         	movff	_myPANID+1,_MACRxPacket+9
 23538  00110C                     l824:
 23539                           
 23540                           ;drv_mrf_miwi_mesh_89xa.c: 984: }
 23541                           ;drv_mrf_miwi_mesh_89xa.c: 987: if( MACRxPacket.flags.bits.secEn )
 23542  00110C  0102               	movlb	2	; () banked
 23543  00110E  A733               	btfss	_MACRxPacket& (0+255),3,b
 23544  001110  D0BB               	goto	l17982
 23545                           
 23546                           ; BSR set to: 2
 23547                           ;drv_mrf_miwi_mesh_89xa.c: 988: {
 23548                           ;drv_mrf_miwi_mesh_89xa.c: 990: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 23549  001112  0100               	movlb	0	; () banked
 23550  001114  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23551  001116  0D47               	mullw	71
 23552  001118  0E1E               	movlw	low _RxPacket
 23553  00111A  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23554  00111C  0E03               	movlw	high _RxPacket
 23555  00111E  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23556  001120  0E05               	movlw	5
 23557  001122  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23558  001124  0E00               	movlw	0
 23559  001126  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23560  001128  50F3               	movf	prodl,w,c
 23561  00112A  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23562  00112C  50F4               	movf	prodh,w,c
 23563  00112E  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23564  001130  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23565  001132  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23566  001134  6ED9               	movwf	fsr2l,c
 23567  001136  0E00               	movlw	0
 23568  001138  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23569  00113A  6EDA               	movwf	fsr2h,c
 23570  00113C  50DF               	movf	indf2,w,c
 23571  00113E  E00A               	bz	l826
 23572  001140                     l17930:
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;drv_mrf_miwi_mesh_89xa.c: 991: {
 23576                           ;drv_mrf_miwi_mesh_89xa.c: 992: RxPacket[i].flags.Val = 0;
 23577  001140  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23578  001142  0D47               	mullw	71
 23579  001144  0E1E               	movlw	low _RxPacket
 23580  001146  24F3               	addwf	prodl,w,c
 23581  001148  6ED9               	movwf	fsr2l,c
 23582  00114A  0E03               	movlw	high _RxPacket
 23583  00114C  20F4               	addwfc	prodh,w,c
 23584  00114E  6EDA               	movwf	fsr2h,c
 23585  001150  6ADF               	clrf	indf2,c
 23586  001152  0C00               	retlw	0
 23587  001154                     l826:
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;drv_mrf_miwi_mesh_89xa.c: 994: }
 23591                           ;drv_mrf_miwi_mesh_89xa.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 23592  001154  0102               	movlb	2	; () banked
 23593  001156  AF33               	btfss	_MACRxPacket& (0+255),7,b
 23594  001158  D071               	goto	l17970
 23595                           
 23596                           ; BSR set to: 2
 23597                           ;drv_mrf_miwi_mesh_89xa.c: 998: {
 23598                           ;drv_mrf_miwi_mesh_89xa.c: 999: for(j = 0; j < 5; j++)
 23599  00115A  0100               	movlb	0	; () banked
 23600  00115C  6BB6               	clrf	MiMAC_ReceivedPacket@j& (0+255),b
 23601  00115E                     l17942:
 23602                           
 23603                           ; BSR set to: 0
 23604                           ;drv_mrf_miwi_mesh_89xa.c: 1000: {
 23605                           ;drv_mrf_miwi_mesh_89xa.c: 1001: addr_t addr;
 23606                           ;drv_mrf_miwi_mesh_89xa.c: 1002: memcpy(addr.bytes,MACRxPacket.SourceAddress,2);
 23607  00115E  0EB0               	movlw	low MiMAC_ReceivedPacket@addr
 23608  001160  6F75               	movwf	memcpy@d1& (0+255),b
 23609  001162  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 23610  001164  C234  F077         	movff	_MACRxPacket+1,memcpy@s1
 23611  001168  C235  F078         	movff	_MACRxPacket+2,memcpy@s1+1
 23612  00116C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23613  00116E  0E02               	movlw	2
 23614  001170  6F79               	movwf	memcpy@n& (0+255),b
 23615  001172  EC54  F035         	call	_memcpy	;wreg free
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;drv_mrf_miwi_mesh_89xa.c: 1003: if( (ConnectionTable[j].status.bits.isValid) &&
 23619                           ;drv_mrf_miwi_mesh_89xa.c: 1004: isSameAddress(ConnectionTable[j].Address, addr) )
 23620  001176  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23621  001178  0D0B               	mullw	11
 23622  00117A  0EC2               	movlw	low (_ConnectionTable+10)
 23623  00117C  24F3               	addwf	prodl,w,c
 23624  00117E  6ED9               	movwf	fsr2l,c
 23625  001180  0E04               	movlw	high (_ConnectionTable+10)
 23626  001182  20F4               	addwfc	prodh,w,c
 23627  001184  6EDA               	movwf	fsr2h,c
 23628  001186  AEDF               	btfss	indf2,7,c
 23629  001188  D015               	goto	l17950
 23630                           
 23631                           ; BSR set to: 4
 23632  00118A  0100               	movlb	0	; () banked
 23633  00118C  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23634  00118E  0D0B               	mullw	11
 23635  001190  0EC0               	movlw	low (_ConnectionTable+8)
 23636  001192  24F3               	addwf	prodl,w,c
 23637  001194  6ED9               	movwf	fsr2l,c
 23638  001196  0E04               	movlw	high (_ConnectionTable+8)
 23639  001198  20F4               	addwfc	prodh,w,c
 23640  00119A  6EDA               	movwf	fsr2h,c
 23641  00119C  CFDE F07D          	movff	postinc2,isSameAddress@a1
 23642  0011A0  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 23643  0011A4  C0B0  F07F         	movff	MiMAC_ReceivedPacket@addr,isSameAddress@a2
 23644  0011A8  C0B1  F080         	movff	MiMAC_ReceivedPacket@addr+1,isSameAddress@a2+1
 23645  0011AC  ECBA  F039         	call	_isSameAddress	;wreg free
 23646  0011B0  0900               	iorlw	0
 23647  0011B2  E105               	bnz	l17954
 23648  0011B4                     l17950:
 23649  0011B4  0100               	movlb	0	; () banked
 23650  0011B6  2BB6               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 23651                           
 23652                           ; BSR set to: 0
 23653  0011B8  0E04               	movlw	4
 23654  0011BA  65B6               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 23655  0011BC  D7D0               	goto	l17942
 23656  0011BE                     l17954:
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;drv_mrf_miwi_mesh_89xa.c: 1007: }
 23660                           ;drv_mrf_miwi_mesh_89xa.c: 1008: }
 23661                           ;drv_mrf_miwi_mesh_89xa.c: 1009: if( j < 5 )
 23662  0011BE  0E05               	movlw	5
 23663  0011C0  61B6               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 23664  0011C2  D03C               	goto	l17970
 23665                           
 23666                           ; BSR set to: 0
 23667                           ;drv_mrf_miwi_mesh_89xa.c: 1010: {
 23668                           ;drv_mrf_miwi_mesh_89xa.c: 1011: uint32_t FrameCounter;
 23669                           ;drv_mrf_miwi_mesh_89xa.c: 1012: memcpy((uint8_t*)&FrameCounter,(uint8_t*)&RxPacket[i].P
      +                          ayload[PayloadIndex],4);
 23670  0011C4  0EB2               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 23671  0011C6  6F75               	movwf	memcpy@d1& (0+255),b
 23672  0011C8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 23673  0011CA  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23674  0011CC  0D47               	mullw	71
 23675  0011CE  0E1E               	movlw	low _RxPacket
 23676  0011D0  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23677  0011D2  0E03               	movlw	high _RxPacket
 23678  0011D4  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23679  0011D6  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23680  0011D8  0E00               	movlw	0
 23681  0011DA  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23682  0011DC  50F3               	movf	prodl,w,c
 23683  0011DE  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23684  0011E0  50F4               	movf	prodh,w,c
 23685  0011E2  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23686  0011E4  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23687  0011E6  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23688  0011E8  6F77               	movwf	memcpy@s1& (0+255),b
 23689  0011EA  0E00               	movlw	0
 23690  0011EC  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23691  0011EE  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 23692  0011F0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23693  0011F2  0E04               	movlw	4
 23694  0011F4  6F79               	movwf	memcpy@n& (0+255),b
 23695  0011F6  EC54  F035         	call	_memcpy	;wreg free
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;drv_mrf_miwi_mesh_89xa.c: 1014: if( ConnectionTable[j].IncomingFrameCounter > FrameCoun
      +                          ter )
 23699  0011FA  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23700  0011FC  0D0B               	mullw	11
 23701  0011FE  0EB8               	movlw	low _ConnectionTable
 23702  001200  24F3               	addwf	prodl,w,c
 23703  001202  6ED9               	movwf	fsr2l,c
 23704  001204  0E04               	movlw	high _ConnectionTable
 23705  001206  20F4               	addwfc	prodh,w,c
 23706  001208  6EDA               	movwf	fsr2h,c
 23707  00120A  50DE               	movf	postinc2,w,c
 23708  00120C  5DB2               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 23709  00120E  50DE               	movf	postinc2,w,c
 23710  001210  59B3               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 23711  001212  50DE               	movf	postinc2,w,c
 23712  001214  59B4               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 23713  001216  50DE               	movf	postinc2,w,c
 23714  001218  59B5               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 23715  00121A  E392               	bnc	l17930
 23716                           
 23717                           ; BSR set to: 0
 23718                           ;drv_mrf_miwi_mesh_89xa.c: 1019: else
 23719                           ;drv_mrf_miwi_mesh_89xa.c: 1020: {
 23720                           ;drv_mrf_miwi_mesh_89xa.c: 1021: ConnectionTable[j].IncomingFrameCounter = FrameCounter;
 23721  00121C  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 23722  00121E  0D0B               	mullw	11
 23723  001220  0EB8               	movlw	low _ConnectionTable
 23724  001222  24F3               	addwf	prodl,w,c
 23725  001224  6ED9               	movwf	fsr2l,c
 23726  001226  0E04               	movlw	high _ConnectionTable
 23727  001228  20F4               	addwfc	prodh,w,c
 23728  00122A  6EDA               	movwf	fsr2h,c
 23729  00122C  C0B2  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 23730  001230  C0B3  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 23731  001234  C0B4  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 23732  001238  C0B5  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 23733  00123C                     l17970:
 23734                           
 23735                           ;drv_mrf_miwi_mesh_89xa.c: 1022: }
 23736                           ;drv_mrf_miwi_mesh_89xa.c: 1023: }
 23737                           ;drv_mrf_miwi_mesh_89xa.c: 1024: }
 23738                           ;drv_mrf_miwi_mesh_89xa.c: 1027: PayloadIndex += 5;
 23739  00123C  0E05               	movlw	5
 23740  00123E  0100               	movlb	0	; () banked
 23741  001240  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;drv_mrf_miwi_mesh_89xa.c: 1049: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex
      +                          , RxPacket[i].PayloadLen-PayloadIndex, key) == 0)
 23745  001242  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23746  001244  0D47               	mullw	71
 23747  001246  0E1F               	movlw	low (_RxPacket+1)
 23748  001248  24F3               	addwf	prodl,w,c
 23749  00124A  6F97               	movwf	CCM_Dec@text& (0+255),b
 23750  00124C  0E03               	movlw	high (_RxPacket+1)
 23751  00124E  20F4               	addwfc	prodh,w,c
 23752  001250  6F98               	movwf	(CCM_Dec@text+1)& (0+255),b
 23753  001252  C0B7  F099         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 23754  001256  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23755  001258  0D47               	mullw	71
 23756  00125A  0E5F               	movlw	low (_RxPacket+65)
 23757  00125C  24F3               	addwf	prodl,w,c
 23758  00125E  6ED9               	movwf	fsr2l,c
 23759  001260  0E03               	movlw	high (_RxPacket+65)
 23760  001262  20F4               	addwfc	prodh,w,c
 23761  001264  6EDA               	movwf	fsr2h,c
 23762  001266  50DF               	movf	indf2,w,c
 23763  001268  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23764  00126A  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23765  00126C  5DA4               	subwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23766  00126E  6F9A               	movwf	CCM_Dec@payloadLen& (0+255),b
 23767  001270  0E51               	movlw	low _key
 23768  001272  6F9B               	movwf	CCM_Dec@key& (0+255),b
 23769  001274  0E02               	movlw	high _key
 23770  001276  6F9C               	movwf	(CCM_Dec@key+1)& (0+255),b
 23771  001278  ECE2  F02A         	call	_CCM_Dec	;wreg free
 23772  00127C  0900               	iorlw	0
 23773  00127E  E101 D75F          	bz	l17930
 23774                           
 23775                           ; BSR set to: 0
 23776                           ;drv_mrf_miwi_mesh_89xa.c: 1053: }
 23777                           ;drv_mrf_miwi_mesh_89xa.c: 1070: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 23778  001282  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23779  001284  0F02               	addlw	2
 23780  001286  D002               	goto	L9
 23781  001288                     l17982:
 23782                           
 23783                           ; BSR set to: 2
 23784                           ;drv_mrf_miwi_mesh_89xa.c: 1072: else
 23785                           ;drv_mrf_miwi_mesh_89xa.c: 1073: {
 23786                           ;drv_mrf_miwi_mesh_89xa.c: 1074: MACRxPacket.PayloadLen -= PayloadIndex;
 23787  001288  0100               	movlb	0	; () banked
 23788  00128A  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23789  00128C                     L9:
 23790  00128C  0102               	movlb	2	; () banked
 23791  00128E  5F38               	subwf	(_MACRxPacket+5)& (0+255),f,b
 23792                           
 23793                           ; BSR set to: 2
 23794                           ;drv_mrf_miwi_mesh_89xa.c: 1075: }
 23795                           ;drv_mrf_miwi_mesh_89xa.c: 1083: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 23796  001290  0100               	movlb	0	; () banked
 23797  001292  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 23798  001294  0D47               	mullw	71
 23799  001296  0E1E               	movlw	low _RxPacket
 23800  001298  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 23801  00129A  0E03               	movlw	high _RxPacket
 23802  00129C  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 23803  00129E  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23804  0012A0  0E00               	movlw	0
 23805  0012A2  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23806  0012A4  50F3               	movf	prodl,w,c
 23807  0012A6  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 23808  0012A8  50F4               	movf	prodh,w,c
 23809  0012AA  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 23810  0012AC  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 23811  0012AE  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 23812  0012B0  0102               	movlb	2	; () banked
 23813  0012B2  6F36               	movwf	(_MACRxPacket+3)& (0+255),b
 23814  0012B4  0100               	movlb	0	; () banked
 23815  0012B6  0E00               	movlw	0
 23816  0012B8  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 23817  0012BA  0102               	movlb	2	; () banked
 23818  0012BC  6F37               	movwf	(_MACRxPacket+4)& (0+255),b
 23819                           
 23820                           ; BSR set to: 2
 23821                           ;drv_mrf_miwi_mesh_89xa.c: 1085: MACRxPacket.RSSIValue = RSSILock;
 23822  0012BE  C1CF  F239         	movff	_RSSILock,_MACRxPacket+6
 23823                           
 23824                           ; BSR set to: 2
 23825                           ;drv_mrf_miwi_mesh_89xa.c: 1088: ReceivedBankIndex = i;
 23826  0012C2  C0B8  F03F         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 23827                           
 23828                           ; BSR set to: 2
 23829                           ;drv_mrf_miwi_mesh_89xa.c: 1089: return 1;
 23830  0012C6  0C01               	retlw	1
 23831  0012C8                     l17994:
 23832                           
 23833                           ; BSR set to: 3
 23834  0012C8  0100               	movlb	0	; () banked
 23835  0012CA  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 23836                           
 23837                           ; BSR set to: 0
 23838  0012CC  0E01               	movlw	1
 23839  0012CE  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 23840  0012D0  D694               	goto	l17906
 23841  0012D2  0C00               	retlw	0
 23842  0012D4                     __end_of_MiMAC_ReceivedPacket:
 23843                           	opt stack 0
 23844                           tblptru	equ	0xFF8
 23845                           tblptrh	equ	0xFF7
 23846                           tblptrl	equ	0xFF6
 23847                           tablat	equ	0xFF5
 23848                           prodh	equ	0xFF4
 23849                           prodl	equ	0xFF3
 23850                           intcon	equ	0xFF2
 23851                           intcon3	equ	0xFF0
 23852                           postinc0	equ	0xFEE
 23853                           plusw0	equ	0xFEB
 23854                           fsr0h	equ	0xFEA
 23855                           fsr0l	equ	0xFE9
 23856                           wreg	equ	0xFE8
 23857                           indf1	equ	0xFE7
 23858                           postinc1	equ	0xFE6
 23859                           postdec1	equ	0xFE5
 23860                           plusw1	equ	0xFE3
 23861                           fsr1h	equ	0xFE2
 23862                           fsr1l	equ	0xFE1
 23863                           indf2	equ	0xFDF
 23864                           postinc2	equ	0xFDE
 23865                           postdec2	equ	0xFDD
 23866                           plusw2	equ	0xFDB
 23867                           fsr2h	equ	0xFDA
 23868                           fsr2l	equ	0xFD9
 23869                           status	equ	0xFD8
 23870                           
 23871 ;; *************** function _CCM_Dec *****************
 23872 ;; Defined at:
 23873 ;;		line 331 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 23874 ;; Parameters:    Size  Location     Type
 23875 ;;  text            2   55[BANK0 ] PTR unsigned char 
 23876 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 23877 ;;  headerLen       1   57[BANK0 ] unsigned char 
 23878 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 23879 ;;  key             2   59[BANK0 ] PTR unsigned char 
 23880 ;;		 -> key(8), 
 23881 ;; Auto vars:     Size  Location     Type
 23882 ;;  i               1   67[BANK0 ] unsigned char 
 23883 ;; Return value:  Size  Location     Type
 23884 ;;                  1    wreg      unsigned char 
 23885 ;; Registers used:
 23886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23887 ;; Tracked objects:
 23888 ;;		On entry : F/0
 23889 ;;		On exit  : F/0
 23890 ;;		Unchanged: 0/0
 23891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23892 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23893 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23895 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23896 ;;Total ram usage:       13 bytes
 23897 ;; Hardware stack levels used:    1
 23898 ;; Hardware stack levels required when called:    7
 23899 ;; This function calls:
 23900 ;;		_CBC_MAC
 23901 ;;		_CTR
 23902 ;; This function is called by:
 23903 ;;		_MiMAC_ReceivedPacket
 23904 ;; This function uses a non-reentrant model
 23905 ;;
 23906                           
 23907                           	psect	text100
 23908  0055C4                     __ptext100:
 23909                           	opt stack 0
 23910  0055C4                     _CCM_Dec:
 23911                           	opt stack 20
 23912                           
 23913                           ; BSR set to: 0
 23914                           ;drv_mrf_miwi_mesh_security.c: 333: uint8_t i;
 23915                           ;drv_mrf_miwi_mesh_security.c: 340: for(i = 0; i < 4-1; i++)
 23916                           
 23917                           ;incstack = 0
 23918  0055C4  6BA3               	clrf	CCM_Dec@i& (0+255),b
 23919  0055C6                     l17228:
 23920                           
 23921                           ; BSR set to: 0
 23922                           ;drv_mrf_miwi_mesh_security.c: 341: {
 23923                           ;drv_mrf_miwi_mesh_security.c: 342: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 23924  0055C6  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 23925  0055C8  5DA3               	subwf	CCM_Dec@i& (0+255),w,b
 23926  0055CA  E302               	bnc	l17232
 23927                           
 23928                           ; BSR set to: 0
 23929  0055CC  6BA1               	clrf	_CCM_Dec$2738& (0+255),b
 23930  0055CE  D008               	goto	L10
 23931  0055D0                     l17232:
 23932                           
 23933                           ; BSR set to: 0
 23934  0055D0  51A3               	movf	CCM_Dec@i& (0+255),w,b
 23935  0055D2  2597               	addwf	CCM_Dec@text& (0+255),w,b
 23936  0055D4  6ED9               	movwf	fsr2l,c
 23937  0055D6  0E00               	movlw	0
 23938  0055D8  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 23939  0055DA  6EDA               	movwf	fsr2h,c
 23940  0055DC  50DF               	movf	indf2,w,c
 23941  0055DE  6FA1               	movwf	_CCM_Dec$2738& (0+255),b
 23942  0055E0                     L10:
 23943  0055E0  6BA2               	clrf	(_CCM_Dec$2738+1)& (0+255),b
 23944                           
 23945                           ; BSR set to: 0
 23946  0055E2  0EE0               	movlw	low _tmpBlock
 23947  0055E4  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 23948  0055E6  6ED9               	movwf	fsr2l,c
 23949  0055E8  6ADA               	clrf	fsr2h,c
 23950  0055EA  0E01               	movlw	high _tmpBlock
 23951  0055EC  22DA               	addwfc	fsr2h,f,c
 23952  0055EE  C0A1  FFDF         	movff	_CCM_Dec$2738,indf2
 23953                           
 23954                           ; BSR set to: 0
 23955  0055F2  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 23956                           
 23957                           ; BSR set to: 0
 23958  0055F4  0E02               	movlw	2
 23959  0055F6  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 23960  0055F8  D7E6               	goto	l17228
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;drv_mrf_miwi_mesh_security.c: 343: }
 23964                           ;drv_mrf_miwi_mesh_security.c: 344: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 23965  0055FA  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 23966  0055FC  2597               	addwf	CCM_Dec@text& (0+255),w,b
 23967  0055FE  6F8A               	movwf	CTR@text& (0+255),b
 23968  005600  0E00               	movlw	0
 23969  005602  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 23970  005604  6F8B               	movwf	(CTR@text+1)& (0+255),b
 23971  005606  C09A  F08C         	movff	CCM_Dec@payloadLen,CTR@len
 23972  00560A  C09B  F08D         	movff	CCM_Dec@key,CTR@key
 23973  00560E  C09C  F08E         	movff	CCM_Dec@key+1,CTR@key+1
 23974  005612  0EE0               	movlw	low _tmpBlock
 23975  005614  6F8F               	movwf	CTR@nounce& (0+255),b
 23976  005616  0E01               	movlw	high _tmpBlock
 23977  005618  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 23978  00561A  EC45  F02B         	call	_CTR	;wreg free
 23979                           
 23980                           ; BSR set to: 0
 23981                           ;drv_mrf_miwi_mesh_security.c: 346: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmp
      +                          Block);
 23982  00561E  C097  F08A         	movff	CCM_Dec@text,CBC_MAC@text
 23983  005622  C098  F08B         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 23984  005626  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 23985  005628  259A               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 23986  00562A  0FFE               	addlw	254
 23987  00562C  6F8C               	movwf	CBC_MAC@len& (0+255),b
 23988  00562E  C09B  F08D         	movff	CCM_Dec@key,CBC_MAC@key
 23989  005632  C09C  F08E         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 23990  005636  0EE0               	movlw	low _tmpBlock
 23991  005638  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 23992  00563A  0E01               	movlw	high _tmpBlock
 23993  00563C  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 23994  00563E  EC66  F02D         	call	_CBC_MAC	;wreg free
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;drv_mrf_miwi_mesh_security.c: 347: for(i = 0; i < 2; i++)
 23998  005642  6BA3               	clrf	CCM_Dec@i& (0+255),b
 23999  005644                     l17248:
 24000                           
 24001                           ; BSR set to: 0
 24002                           ;drv_mrf_miwi_mesh_security.c: 348: {
 24003                           ;drv_mrf_miwi_mesh_security.c: 349: if( tmpBlock[i] != text[headerLen + payloadLen - 2 +
      +                           i] )
 24004  005644  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 24005  005646  2597               	addwf	CCM_Dec@text& (0+255),w,b
 24006  005648  6F9D               	movwf	??_CCM_Dec& (0+255),b
 24007  00564A  0E00               	movlw	0
 24008  00564C  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 24009  00564E  6F9E               	movwf	(??_CCM_Dec+1)& (0+255),b
 24010  005650  519A               	movf	CCM_Dec@payloadLen& (0+255),w,b
 24011  005652  279D               	addwf	??_CCM_Dec& (0+255),f,b
 24012  005654  0E00               	movlw	0
 24013  005656  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 24014  005658  51A3               	movf	CCM_Dec@i& (0+255),w,b
 24015  00565A  279D               	addwf	??_CCM_Dec& (0+255),f,b
 24016  00565C  0E00               	movlw	0
 24017  00565E  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 24018  005660  0EFE               	movlw	254
 24019  005662  259D               	addwf	??_CCM_Dec& (0+255),w,b
 24020  005664  6ED9               	movwf	fsr2l,c
 24021  005666  0EFF               	movlw	255
 24022  005668  219E               	addwfc	(??_CCM_Dec+1)& (0+255),w,b
 24023  00566A  6EDA               	movwf	fsr2h,c
 24024  00566C  0EE0               	movlw	low _tmpBlock
 24025  00566E  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 24026  005670  6EE1               	movwf	fsr1l,c
 24027  005672  6AE2               	clrf	fsr1h,c
 24028  005674  0E01               	movlw	high _tmpBlock
 24029  005676  22E2               	addwfc	fsr1h,f,c
 24030  005678  50DE               	movf	postinc2,w,c
 24031  00567A  18E6               	xorwf	postinc1,w,c
 24032  00567C  E001               	bz	l17254
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;drv_mrf_miwi_mesh_security.c: 350: {
 24036                           ;drv_mrf_miwi_mesh_security.c: 354: return 0;
 24037  00567E  0C00               	retlw	0
 24038  005680                     l17254:
 24039                           
 24040                           ; BSR set to: 0
 24041  005680  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 24042                           
 24043                           ; BSR set to: 0
 24044  005682  0E01               	movlw	1
 24045  005684  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 24046  005686  D7DE               	goto	l17248
 24047  005688  0C01               	retlw	1
 24048  00568A                     __end_of_CCM_Dec:
 24049                           	opt stack 0
 24050                           tblptru	equ	0xFF8
 24051                           tblptrh	equ	0xFF7
 24052                           tblptrl	equ	0xFF6
 24053                           tablat	equ	0xFF5
 24054                           prodh	equ	0xFF4
 24055                           prodl	equ	0xFF3
 24056                           intcon	equ	0xFF2
 24057                           intcon3	equ	0xFF0
 24058                           postinc0	equ	0xFEE
 24059                           plusw0	equ	0xFEB
 24060                           fsr0h	equ	0xFEA
 24061                           fsr0l	equ	0xFE9
 24062                           wreg	equ	0xFE8
 24063                           indf1	equ	0xFE7
 24064                           postinc1	equ	0xFE6
 24065                           postdec1	equ	0xFE5
 24066                           plusw1	equ	0xFE3
 24067                           fsr1h	equ	0xFE2
 24068                           fsr1l	equ	0xFE1
 24069                           indf2	equ	0xFDF
 24070                           postinc2	equ	0xFDE
 24071                           postdec2	equ	0xFDD
 24072                           plusw2	equ	0xFDB
 24073                           fsr2h	equ	0xFDA
 24074                           fsr2l	equ	0xFD9
 24075                           status	equ	0xFD8
 24076                           
 24077 ;; *************** function _CTR *****************
 24078 ;; Defined at:
 24079 ;;		line 150 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24080 ;; Parameters:    Size  Location     Type
 24081 ;;  text            2   42[BANK0 ] PTR unsigned char 
 24082 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 24083 ;;  len             1   44[BANK0 ] unsigned char 
 24084 ;;  key             2   45[BANK0 ] PTR unsigned char 
 24085 ;;		 -> key(8), 
 24086 ;;  nounce          2   47[BANK0 ] PTR unsigned char 
 24087 ;;		 -> tmpBlock(4), 
 24088 ;; Auto vars:     Size  Location     Type
 24089 ;;  j               1   54[BANK0 ] unsigned char 
 24090 ;;  i               1   53[BANK0 ] unsigned char 
 24091 ;;  block           1   52[BANK0 ] unsigned char 
 24092 ;; Return value:  Size  Location     Type
 24093 ;;                  1    wreg      void 
 24094 ;; Registers used:
 24095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24096 ;; Tracked objects:
 24097 ;;		On entry : F/0
 24098 ;;		On exit  : F/0
 24099 ;;		Unchanged: 0/0
 24100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24101 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24102 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24103 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24104 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24105 ;;Total ram usage:       13 bytes
 24106 ;; Hardware stack levels used:    1
 24107 ;; Hardware stack levels required when called:    6
 24108 ;; This function calls:
 24109 ;;		_encode
 24110 ;; This function is called by:
 24111 ;;		_CCM_Enc
 24112 ;;		_CCM_Dec
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text101
 24117  00568A                     __ptext101:
 24118                           	opt stack 0
 24119  00568A                     _CTR:
 24120                           	opt stack 16
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;drv_mrf_miwi_mesh_security.c: 152: uint8_t block = len/4+1;
 24124                           
 24125                           ; BSR set to: 0
 24126                           ;incstack = 0
 24127  00568A  C08C  F091         	movff	CTR@len,??_CTR
 24128  00568E  90D8               	bcf	status,0,c
 24129  005690  3391               	rrcf	??_CTR& (0+255),f,b
 24130  005692  90D8               	bcf	status,0,c
 24131  005694  3391               	rrcf	??_CTR& (0+255),f,b
 24132  005696  2991               	incf	??_CTR& (0+255),w,b
 24133  005698  6F94               	movwf	CTR@block& (0+255),b
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;drv_mrf_miwi_mesh_security.c: 153: uint8_t i, j;
 24137                           ;drv_mrf_miwi_mesh_security.c: 160: for(i = 0; i < block; i++)
 24138  00569A  6B95               	clrf	CTR@i& (0+255),b
 24139  00569C  D051               	goto	l15660
 24140  00569E                     l936:
 24141                           
 24142                           ; BSR set to: 0
 24143                           ;drv_mrf_miwi_mesh_security.c: 161: {
 24144                           ;drv_mrf_miwi_mesh_security.c: 162: for(j = 0; j < 4-1; j++)
 24145  00569E  6B96               	clrf	CTR@j& (0+255),b
 24146  0056A0                     l15634:
 24147                           
 24148                           ; BSR set to: 0
 24149                           ;drv_mrf_miwi_mesh_security.c: 163: {
 24150                           ;drv_mrf_miwi_mesh_security.c: 164: tmpBlock[j] = nounce[j];
 24151  0056A0  5196               	movf	CTR@j& (0+255),w,b
 24152  0056A2  258F               	addwf	CTR@nounce& (0+255),w,b
 24153  0056A4  6ED9               	movwf	fsr2l,c
 24154  0056A6  0E00               	movlw	0
 24155  0056A8  2190               	addwfc	(CTR@nounce+1)& (0+255),w,b
 24156  0056AA  6EDA               	movwf	fsr2h,c
 24157  0056AC  0EE0               	movlw	low _tmpBlock
 24158  0056AE  2596               	addwf	CTR@j& (0+255),w,b
 24159  0056B0  6EE1               	movwf	fsr1l,c
 24160  0056B2  6AE2               	clrf	fsr1h,c
 24161  0056B4  0E01               	movlw	high _tmpBlock
 24162  0056B6  22E2               	addwfc	fsr1h,f,c
 24163  0056B8  CFDF FFE7          	movff	indf2,indf1
 24164                           
 24165                           ; BSR set to: 0
 24166  0056BC  2B96               	incf	CTR@j& (0+255),f,b
 24167                           
 24168                           ; BSR set to: 0
 24169  0056BE  0E02               	movlw	2
 24170  0056C0  6596               	cpfsgt	CTR@j& (0+255),b
 24171  0056C2  D7EE               	goto	l15634
 24172                           
 24173                           ; BSR set to: 0
 24174                           ;drv_mrf_miwi_mesh_security.c: 165: }
 24175                           ;drv_mrf_miwi_mesh_security.c: 166: tmpBlock[4-1] = i;
 24176  0056C4  C095  F1E3         	movff	CTR@i,_tmpBlock+3
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;drv_mrf_miwi_mesh_security.c: 167: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 24180  0056C8  0EE0               	movlw	low _tmpBlock
 24181  0056CA  6F73               	movwf	encode@text& (0+255),b
 24182  0056CC  0E01               	movlw	high _tmpBlock
 24183  0056CE  6F74               	movwf	(encode@text+1)& (0+255),b
 24184  0056D0  C08D  F075         	movff	CTR@key,encode@key
 24185  0056D4  C08E  F076         	movff	CTR@key+1,encode@key+1
 24186  0056D8  EC37  F01E         	call	_encode	;wreg free
 24187                           
 24188                           ; BSR set to: 0
 24189                           ;drv_mrf_miwi_mesh_security.c: 168: for(j = 0; j < 4; j++)
 24190  0056DC  6B96               	clrf	CTR@j& (0+255),b
 24191  0056DE                     l15648:
 24192                           
 24193                           ; BSR set to: 0
 24194                           ;drv_mrf_miwi_mesh_security.c: 169: {
 24195                           ;drv_mrf_miwi_mesh_security.c: 170: if( (i * 4 + j) >= len )
 24196  0056DE  518C               	movf	CTR@len& (0+255),w,b
 24197  0056E0  6F91               	movwf	??_CTR& (0+255),b
 24198  0056E2  6B92               	clrf	(??_CTR+1)& (0+255),b
 24199  0056E4  5195               	movf	CTR@i& (0+255),w,b
 24200  0056E6  0D04               	mullw	4
 24201  0056E8  5196               	movf	CTR@j& (0+255),w,b
 24202  0056EA  26F3               	addwf	prodl,f,c
 24203  0056EC  0E00               	movlw	0
 24204  0056EE  22F4               	addwfc	prodh,f,c
 24205  0056F0  5191               	movf	??_CTR& (0+255),w,b
 24206  0056F2  5CF3               	subwf	prodl,w,c
 24207  0056F4  50F4               	movf	prodh,w,c
 24208  0056F6  0A80               	xorlw	128
 24209  0056F8  6F93               	movwf	(??_CTR+2)& (0+255),b
 24210  0056FA  5192               	movf	(??_CTR+1)& (0+255),w,b
 24211  0056FC  0A80               	xorlw	128
 24212  0056FE  5993               	subwfb	(??_CTR+2)& (0+255),w,b
 24213  005700  E21E               	bc	l15658
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;drv_mrf_miwi_mesh_security.c: 173: }
 24217                           ;drv_mrf_miwi_mesh_security.c: 174: text[i * 4 + j] ^= tmpBlock[j];
 24218  005702  0EE0               	movlw	low _tmpBlock
 24219  005704  2596               	addwf	CTR@j& (0+255),w,b
 24220  005706  6ED9               	movwf	fsr2l,c
 24221  005708  6ADA               	clrf	fsr2h,c
 24222  00570A  0E01               	movlw	high _tmpBlock
 24223  00570C  22DA               	addwfc	fsr2h,f,c
 24224  00570E  50DF               	movf	indf2,w,c
 24225  005710  6F91               	movwf	??_CTR& (0+255),b
 24226  005712  5195               	movf	CTR@i& (0+255),w,b
 24227  005714  0D04               	mullw	4
 24228  005716  C08A  F092         	movff	CTR@text,??_CTR+1
 24229  00571A  C08B  F093         	movff	CTR@text+1,??_CTR+2
 24230  00571E  50F3               	movf	prodl,w,c
 24231  005720  2792               	addwf	(??_CTR+1)& (0+255),f,b
 24232  005722  50F4               	movf	prodh,w,c
 24233  005724  2393               	addwfc	(??_CTR+2)& (0+255),f,b
 24234  005726  5196               	movf	CTR@j& (0+255),w,b
 24235  005728  2592               	addwf	(??_CTR+1)& (0+255),w,b
 24236  00572A  6ED9               	movwf	fsr2l,c
 24237  00572C  0E00               	movlw	0
 24238  00572E  2193               	addwfc	(??_CTR+2)& (0+255),w,b
 24239  005730  6EDA               	movwf	fsr2h,c
 24240  005732  5191               	movf	??_CTR& (0+255),w,b
 24241  005734  1ADF               	xorwf	indf2,f,c
 24242                           
 24243                           ; BSR set to: 0
 24244  005736  2B96               	incf	CTR@j& (0+255),f,b
 24245                           
 24246                           ; BSR set to: 0
 24247  005738  0E03               	movlw	3
 24248  00573A  6596               	cpfsgt	CTR@j& (0+255),b
 24249  00573C  D7D0               	goto	l15648
 24250  00573E                     l15658:
 24251                           
 24252                           ; BSR set to: 0
 24253  00573E  2B95               	incf	CTR@i& (0+255),f,b
 24254  005740                     l15660:
 24255                           
 24256                           ; BSR set to: 0
 24257  005740  5194               	movf	CTR@block& (0+255),w,b
 24258  005742  5D95               	subwf	CTR@i& (0+255),w,b
 24259  005744  E3AC               	bnc	l936
 24260                           
 24261                           ; BSR set to: 0
 24262  005746  0012               	return		;funcret
 24263  005748                     __end_of_CTR:
 24264                           	opt stack 0
 24265                           tblptru	equ	0xFF8
 24266                           tblptrh	equ	0xFF7
 24267                           tblptrl	equ	0xFF6
 24268                           tablat	equ	0xFF5
 24269                           prodh	equ	0xFF4
 24270                           prodl	equ	0xFF3
 24271                           intcon	equ	0xFF2
 24272                           intcon3	equ	0xFF0
 24273                           postinc0	equ	0xFEE
 24274                           plusw0	equ	0xFEB
 24275                           fsr0h	equ	0xFEA
 24276                           fsr0l	equ	0xFE9
 24277                           wreg	equ	0xFE8
 24278                           indf1	equ	0xFE7
 24279                           postinc1	equ	0xFE6
 24280                           postdec1	equ	0xFE5
 24281                           plusw1	equ	0xFE3
 24282                           fsr1h	equ	0xFE2
 24283                           fsr1l	equ	0xFE1
 24284                           indf2	equ	0xFDF
 24285                           postinc2	equ	0xFDE
 24286                           postdec2	equ	0xFDD
 24287                           plusw2	equ	0xFDB
 24288                           fsr2h	equ	0xFDA
 24289                           fsr2l	equ	0xFD9
 24290                           status	equ	0xFD8
 24291                           
 24292 ;; *************** function _CBC_MAC *****************
 24293 ;; Defined at:
 24294 ;;		line 207 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24295 ;; Parameters:    Size  Location     Type
 24296 ;;  text            2   42[BANK0 ] PTR unsigned char 
 24297 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 24298 ;;  len             1   44[BANK0 ] unsigned char 
 24299 ;;  key             2   45[BANK0 ] PTR unsigned char 
 24300 ;;		 -> key(8), 
 24301 ;;  MIC             2   47[BANK0 ] PTR unsigned char 
 24302 ;;		 -> tmpBlock(4), 
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  i               1   54[BANK0 ] unsigned char 
 24305 ;;  j               1   53[BANK0 ] unsigned char 
 24306 ;;  block           1   52[BANK0 ] unsigned char 
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  1    wreg      void 
 24309 ;; Registers used:
 24310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24311 ;; Tracked objects:
 24312 ;;		On entry : F/0
 24313 ;;		On exit  : F/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24316 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24318 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24319 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24320 ;;Total ram usage:       13 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:    6
 24323 ;; This function calls:
 24324 ;;		_encode
 24325 ;; This function is called by:
 24326 ;;		_CCM_Enc
 24327 ;;		_CCM_Dec
 24328 ;; This function uses a non-reentrant model
 24329 ;;
 24330                           
 24331                           	psect	text102
 24332  005ACC                     __ptext102:
 24333                           	opt stack 0
 24334  005ACC                     _CBC_MAC:
 24335                           	opt stack 16
 24336                           
 24337                           ; BSR set to: 0
 24338                           ;drv_mrf_miwi_mesh_security.c: 212: uint8_t block = len / 4 + 1;
 24339                           
 24340                           ; BSR set to: 0
 24341                           ;incstack = 0
 24342  005ACC  C08C  F091         	movff	CBC_MAC@len,??_CBC_MAC
 24343  005AD0  90D8               	bcf	status,0,c
 24344  005AD2  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 24345  005AD4  90D8               	bcf	status,0,c
 24346  005AD6  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 24347  005AD8  2991               	incf	??_CBC_MAC& (0+255),w,b
 24348  005ADA  6F94               	movwf	CBC_MAC@block& (0+255),b
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;drv_mrf_miwi_mesh_security.c: 213: uint8_t i, j;
 24352                           ;drv_mrf_miwi_mesh_security.c: 220: for(i = 0; i < 4; i++)
 24353  005ADC  6B96               	clrf	CBC_MAC@i& (0+255),b
 24354  005ADE                     l15668:
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;drv_mrf_miwi_mesh_security.c: 221: {
 24358                           ;drv_mrf_miwi_mesh_security.c: 222: MIC[i] = 0;
 24359  005ADE  5196               	movf	CBC_MAC@i& (0+255),w,b
 24360  005AE0  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 24361  005AE2  6ED9               	movwf	fsr2l,c
 24362  005AE4  0E00               	movlw	0
 24363  005AE6  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24364  005AE8  6EDA               	movwf	fsr2h,c
 24365  005AEA  6ADF               	clrf	indf2,c
 24366                           
 24367                           ; BSR set to: 0
 24368  005AEC  2B96               	incf	CBC_MAC@i& (0+255),f,b
 24369                           
 24370                           ; BSR set to: 0
 24371  005AEE  0E03               	movlw	3
 24372  005AF0  6596               	cpfsgt	CBC_MAC@i& (0+255),b
 24373  005AF2  D7F5               	goto	l15668
 24374                           
 24375                           ; BSR set to: 0
 24376                           ;drv_mrf_miwi_mesh_security.c: 223: }
 24377                           ;drv_mrf_miwi_mesh_security.c: 225: for(i = 0; i < block; i++)
 24378  005AF4  6B96               	clrf	CBC_MAC@i& (0+255),b
 24379  005AF6  D03C               	goto	l15692
 24380  005AF8                     l949:
 24381                           
 24382                           ; BSR set to: 0
 24383                           ;drv_mrf_miwi_mesh_security.c: 226: {
 24384                           ;drv_mrf_miwi_mesh_security.c: 227: for(j = 0; j < 4; j++)
 24385  005AF8  6B95               	clrf	CBC_MAC@j& (0+255),b
 24386  005AFA                     l15678:
 24387                           
 24388                           ; BSR set to: 0
 24389                           ;drv_mrf_miwi_mesh_security.c: 228: {
 24390                           ;drv_mrf_miwi_mesh_security.c: 229: if( (i * 4 + j) >= len )
 24391  005AFA  518C               	movf	CBC_MAC@len& (0+255),w,b
 24392  005AFC  6F91               	movwf	??_CBC_MAC& (0+255),b
 24393  005AFE  6B92               	clrf	(??_CBC_MAC+1)& (0+255),b
 24394  005B00  5196               	movf	CBC_MAC@i& (0+255),w,b
 24395  005B02  0D04               	mullw	4
 24396  005B04  5195               	movf	CBC_MAC@j& (0+255),w,b
 24397  005B06  26F3               	addwf	prodl,f,c
 24398  005B08  0E00               	movlw	0
 24399  005B0A  22F4               	addwfc	prodh,f,c
 24400  005B0C  5191               	movf	??_CBC_MAC& (0+255),w,b
 24401  005B0E  5CF3               	subwf	prodl,w,c
 24402  005B10  50F4               	movf	prodh,w,c
 24403  005B12  0A80               	xorlw	128
 24404  005B14  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 24405  005B16  5192               	movf	(??_CBC_MAC+1)& (0+255),w,b
 24406  005B18  0A80               	xorlw	128
 24407  005B1A  5993               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 24408  005B1C  E21E               	bc	l15688
 24409                           
 24410                           ; BSR set to: 0
 24411                           ;drv_mrf_miwi_mesh_security.c: 232: }
 24412                           ;drv_mrf_miwi_mesh_security.c: 233: MIC[j] ^= text[i * 4 + j];
 24413  005B1E  5196               	movf	CBC_MAC@i& (0+255),w,b
 24414  005B20  0D04               	mullw	4
 24415  005B22  C08A  F091         	movff	CBC_MAC@text,??_CBC_MAC
 24416  005B26  C08B  F092         	movff	CBC_MAC@text+1,??_CBC_MAC+1
 24417  005B2A  50F3               	movf	prodl,w,c
 24418  005B2C  2791               	addwf	??_CBC_MAC& (0+255),f,b
 24419  005B2E  50F4               	movf	prodh,w,c
 24420  005B30  2392               	addwfc	(??_CBC_MAC+1)& (0+255),f,b
 24421  005B32  5195               	movf	CBC_MAC@j& (0+255),w,b
 24422  005B34  2591               	addwf	??_CBC_MAC& (0+255),w,b
 24423  005B36  6ED9               	movwf	fsr2l,c
 24424  005B38  0E00               	movlw	0
 24425  005B3A  2192               	addwfc	(??_CBC_MAC+1)& (0+255),w,b
 24426  005B3C  6EDA               	movwf	fsr2h,c
 24427  005B3E  50DF               	movf	indf2,w,c
 24428  005B40  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 24429  005B42  5195               	movf	CBC_MAC@j& (0+255),w,b
 24430  005B44  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 24431  005B46  6ED9               	movwf	fsr2l,c
 24432  005B48  0E00               	movlw	0
 24433  005B4A  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24434  005B4C  6EDA               	movwf	fsr2h,c
 24435  005B4E  5193               	movf	(??_CBC_MAC+2)& (0+255),w,b
 24436  005B50  1ADF               	xorwf	indf2,f,c
 24437                           
 24438                           ; BSR set to: 0
 24439  005B52  2B95               	incf	CBC_MAC@j& (0+255),f,b
 24440                           
 24441                           ; BSR set to: 0
 24442  005B54  0E03               	movlw	3
 24443  005B56  6595               	cpfsgt	CBC_MAC@j& (0+255),b
 24444  005B58  D7D0               	goto	l15678
 24445  005B5A                     l15688:
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;drv_mrf_miwi_mesh_security.c: 234: }
 24449                           ;drv_mrf_miwi_mesh_security.c: 235: encode((uint16_t *)MIC, (uint16_t *)key);
 24450  005B5A  C08F  F073         	movff	CBC_MAC@MIC,encode@text
 24451  005B5E  C090  F074         	movff	CBC_MAC@MIC+1,encode@text+1
 24452  005B62  C08D  F075         	movff	CBC_MAC@key,encode@key
 24453  005B66  C08E  F076         	movff	CBC_MAC@key+1,encode@key+1
 24454  005B6A  EC37  F01E         	call	_encode	;wreg free
 24455                           
 24456                           ; BSR set to: 0
 24457  005B6E  2B96               	incf	CBC_MAC@i& (0+255),f,b
 24458  005B70                     l15692:
 24459                           
 24460                           ; BSR set to: 0
 24461  005B70  5194               	movf	CBC_MAC@block& (0+255),w,b
 24462  005B72  5D96               	subwf	CBC_MAC@i& (0+255),w,b
 24463  005B74  E3C1               	bnc	l949
 24464                           
 24465                           ; BSR set to: 0
 24466  005B76  0012               	return		;funcret
 24467  005B78                     __end_of_CBC_MAC:
 24468                           	opt stack 0
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           intcon3	equ	0xFF0
 24477                           postinc0	equ	0xFEE
 24478                           plusw0	equ	0xFEB
 24479                           fsr0h	equ	0xFEA
 24480                           fsr0l	equ	0xFE9
 24481                           wreg	equ	0xFE8
 24482                           indf1	equ	0xFE7
 24483                           postinc1	equ	0xFE6
 24484                           postdec1	equ	0xFE5
 24485                           plusw1	equ	0xFE3
 24486                           fsr1h	equ	0xFE2
 24487                           fsr1l	equ	0xFE1
 24488                           indf2	equ	0xFDF
 24489                           postinc2	equ	0xFDE
 24490                           postdec2	equ	0xFDD
 24491                           plusw2	equ	0xFDB
 24492                           fsr2h	equ	0xFDA
 24493                           fsr2l	equ	0xFD9
 24494                           status	equ	0xFD8
 24495                           
 24496 ;; *************** function _encode *****************
 24497 ;; Defined at:
 24498 ;;		line 109 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24499 ;; Parameters:    Size  Location     Type
 24500 ;;  text            2   19[BANK0 ] PTR unsigned int 
 24501 ;;		 -> tmpBlock(4), 
 24502 ;;  key             2   21[BANK0 ] PTR unsigned int 
 24503 ;;		 -> key(8), 
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;  sum             2   40[BANK0 ] unsigned int 
 24506 ;;  part2           2   38[BANK0 ] unsigned int 
 24507 ;;  part1           2   36[BANK0 ] unsigned int 
 24508 ;;  delta           2   33[BANK0 ] unsigned int 
 24509 ;;  i               1   35[BANK0 ] unsigned char 
 24510 ;; Return value:  Size  Location     Type
 24511 ;;                  1    wreg      void 
 24512 ;; Registers used:
 24513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24514 ;; Tracked objects:
 24515 ;;		On entry : F/0
 24516 ;;		On exit  : F/0
 24517 ;;		Unchanged: 0/0
 24518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24520 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24521 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24522 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24523 ;;Total ram usage:       23 bytes
 24524 ;; Hardware stack levels used:    1
 24525 ;; Hardware stack levels required when called:    5
 24526 ;; This function calls:
 24527 ;;		Nothing
 24528 ;; This function is called by:
 24529 ;;		_CTR
 24530 ;;		_CBC_MAC
 24531 ;; This function uses a non-reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text103
 24535  003C6E                     __ptext103:
 24536                           	opt stack 0
 24537  003C6E                     _encode:
 24538                           	opt stack 16
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;drv_mrf_miwi_mesh_security.c: 111: uint16_t part1=text[0], part2=text[1];
 24542                           
 24543                           ; BSR set to: 0
 24544                           ;incstack = 0
 24545  003C6E  C073  FFD9         	movff	encode@text,fsr2l
 24546  003C72  C074  FFDA         	movff	encode@text+1,fsr2h
 24547  003C76  CFDE F084          	movff	postinc2,encode@part1
 24548  003C7A  CFDD F085          	movff	postdec2,encode@part1+1
 24549                           
 24550                           ; BSR set to: 0
 24551  003C7E  EE20 F002          	lfsr	2,2
 24552  003C82  5173               	movf	encode@text& (0+255),w,b
 24553  003C84  26D9               	addwf	fsr2l,f,c
 24554  003C86  5174               	movf	(encode@text+1)& (0+255),w,b
 24555  003C88  22DA               	addwfc	fsr2h,f,c
 24556  003C8A  CFDE F086          	movff	postinc2,encode@part2
 24557  003C8E  CFDD F087          	movff	postdec2,encode@part2+1
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;drv_mrf_miwi_mesh_security.c: 112: uint16_t sum=0, delta=0x9E37;
 24561  003C92  6B88               	clrf	encode@sum& (0+255),b
 24562  003C94  6B89               	clrf	(encode@sum+1)& (0+255),b
 24563                           
 24564                           ; BSR set to: 0
 24565  003C96  0E9E               	movlw	158
 24566  003C98  6F82               	movwf	(encode@delta+1)& (0+255),b
 24567  003C9A  0E37               	movlw	55
 24568  003C9C  6F81               	movwf	encode@delta& (0+255),b
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;drv_mrf_miwi_mesh_security.c: 113: uint8_t i;
 24572                           ;drv_mrf_miwi_mesh_security.c: 115: for(i=0; i<32; i++)
 24573  003C9E  6B83               	clrf	encode@i& (0+255),b
 24574  003CA0                     l15538:
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;drv_mrf_miwi_mesh_security.c: 116: {
 24578                           ;drv_mrf_miwi_mesh_security.c: 117: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (
      +                          sum + key[sum & 3]);
 24579  003CA0  0E03               	movlw	3
 24580  003CA2  1588               	andwf	encode@sum& (0+255),w,b
 24581  003CA4  6F77               	movwf	??_encode& (0+255),b
 24582  003CA6  6B78               	clrf	(??_encode+1)& (0+255),b
 24583  003CA8  90D8               	bcf	status,0,c
 24584  003CAA  3777               	rlcf	??_encode& (0+255),f,b
 24585  003CAC  3778               	rlcf	(??_encode+1)& (0+255),f,b
 24586  003CAE  5177               	movf	??_encode& (0+255),w,b
 24587  003CB0  2575               	addwf	encode@key& (0+255),w,b
 24588  003CB2  6ED9               	movwf	fsr2l,c
 24589  003CB4  5178               	movf	(??_encode+1)& (0+255),w,b
 24590  003CB6  2176               	addwfc	(encode@key+1)& (0+255),w,b
 24591  003CB8  6EDA               	movwf	fsr2h,c
 24592  003CBA  CFDE F079          	movff	postinc2,??_encode+2
 24593  003CBE  CFDD F07A          	movff	postdec2,??_encode+3
 24594  003CC2  5188               	movf	encode@sum& (0+255),w,b
 24595  003CC4  2779               	addwf	(??_encode+2)& (0+255),f,b
 24596  003CC6  5189               	movf	(encode@sum+1)& (0+255),w,b
 24597  003CC8  237A               	addwfc	(??_encode+3)& (0+255),f,b
 24598  003CCA  C086  F07B         	movff	encode@part2,??_encode+4
 24599  003CCE  C087  F07C         	movff	encode@part2+1,??_encode+5
 24600  003CD2  0E05               	movlw	5
 24601  003CD4  6F7D               	movwf	(??_encode+6)& (0+255),b
 24602  003CD6                     u18075:
 24603  003CD6  90D8               	bcf	status,0,c
 24604  003CD8  337C               	rrcf	(??_encode+5)& (0+255),f,b
 24605  003CDA  337B               	rrcf	(??_encode+4)& (0+255),f,b
 24606  003CDC  2F7D               	decfsz	(??_encode+6)& (0+255),f,b
 24607  003CDE  D7FB               	goto	u18075
 24608  003CE0  C086  F07E         	movff	encode@part2,??_encode+7
 24609  003CE4  C087  F07F         	movff	encode@part2+1,??_encode+8
 24610  003CE8  3B7E               	swapf	(??_encode+7)& (0+255),f,b
 24611  003CEA  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 24612  003CEC  0EF0               	movlw	240
 24613  003CEE  177F               	andwf	(??_encode+8)& (0+255),f,b
 24614  003CF0  517E               	movf	(??_encode+7)& (0+255),w,b
 24615  003CF2  0B0F               	andlw	15
 24616  003CF4  137F               	iorwf	(??_encode+8)& (0+255),f,b
 24617  003CF6  0EF0               	movlw	240
 24618  003CF8  177E               	andwf	(??_encode+7)& (0+255),f,b
 24619  003CFA  517B               	movf	(??_encode+4)& (0+255),w,b
 24620  003CFC  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 24621  003CFE  517C               	movf	(??_encode+5)& (0+255),w,b
 24622  003D00  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24623  003D02  5186               	movf	encode@part2& (0+255),w,b
 24624  003D04  277E               	addwf	(??_encode+7)& (0+255),f,b
 24625  003D06  5187               	movf	(encode@part2+1)& (0+255),w,b
 24626  003D08  237F               	addwfc	(??_encode+8)& (0+255),f,b
 24627  003D0A  5179               	movf	(??_encode+2)& (0+255),w,b
 24628  003D0C  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 24629  003D0E  517A               	movf	(??_encode+3)& (0+255),w,b
 24630  003D10  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24631  003D12  517E               	movf	(??_encode+7)& (0+255),w,b
 24632  003D14  2784               	addwf	encode@part1& (0+255),f,b
 24633  003D16  517F               	movf	(??_encode+8)& (0+255),w,b
 24634  003D18  2385               	addwfc	(encode@part1+1)& (0+255),f,b
 24635                           
 24636                           ; BSR set to: 0
 24637                           ;drv_mrf_miwi_mesh_security.c: 118: sum += delta;
 24638  003D1A  5181               	movf	encode@delta& (0+255),w,b
 24639  003D1C  2788               	addwf	encode@sum& (0+255),f,b
 24640  003D1E  5182               	movf	(encode@delta+1)& (0+255),w,b
 24641  003D20  2389               	addwfc	(encode@sum+1)& (0+255),f,b
 24642                           
 24643                           ; BSR set to: 0
 24644                           ;drv_mrf_miwi_mesh_security.c: 119: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (
      +                          sum + key[(sum>>11) & 3]);
 24645  003D22  C088  F077         	movff	encode@sum,??_encode
 24646  003D26  C089  F078         	movff	encode@sum+1,??_encode+1
 24647  003D2A  0E0B               	movlw	11
 24648  003D2C  6F79               	movwf	(??_encode+2)& (0+255),b
 24649  003D2E                     u18085:
 24650  003D2E  90D8               	bcf	status,0,c
 24651  003D30  3378               	rrcf	(??_encode+1)& (0+255),f,b
 24652  003D32  3377               	rrcf	??_encode& (0+255),f,b
 24653  003D34  2F79               	decfsz	(??_encode+2)& (0+255),f,b
 24654  003D36  D7FB               	goto	u18085
 24655  003D38  0E03               	movlw	3
 24656  003D3A  1777               	andwf	??_encode& (0+255),f,b
 24657  003D3C  6B78               	clrf	(??_encode+1)& (0+255),b
 24658  003D3E  90D8               	bcf	status,0,c
 24659  003D40  3777               	rlcf	??_encode& (0+255),f,b
 24660  003D42  3778               	rlcf	(??_encode+1)& (0+255),f,b
 24661  003D44  5177               	movf	??_encode& (0+255),w,b
 24662  003D46  2575               	addwf	encode@key& (0+255),w,b
 24663  003D48  6ED9               	movwf	fsr2l,c
 24664  003D4A  5178               	movf	(??_encode+1)& (0+255),w,b
 24665  003D4C  2176               	addwfc	(encode@key+1)& (0+255),w,b
 24666  003D4E  6EDA               	movwf	fsr2h,c
 24667  003D50  CFDE F07A          	movff	postinc2,??_encode+3
 24668  003D54  CFDD F07B          	movff	postdec2,??_encode+4
 24669  003D58  5188               	movf	encode@sum& (0+255),w,b
 24670  003D5A  277A               	addwf	(??_encode+3)& (0+255),f,b
 24671  003D5C  5189               	movf	(encode@sum+1)& (0+255),w,b
 24672  003D5E  237B               	addwfc	(??_encode+4)& (0+255),f,b
 24673  003D60  C084  F07C         	movff	encode@part1,??_encode+5
 24674  003D64  C085  F07D         	movff	encode@part1+1,??_encode+6
 24675  003D68  0E05               	movlw	5
 24676  003D6A  6F7E               	movwf	(??_encode+7)& (0+255),b
 24677  003D6C                     u18095:
 24678  003D6C  90D8               	bcf	status,0,c
 24679  003D6E  337D               	rrcf	(??_encode+6)& (0+255),f,b
 24680  003D70  337C               	rrcf	(??_encode+5)& (0+255),f,b
 24681  003D72  2F7E               	decfsz	(??_encode+7)& (0+255),f,b
 24682  003D74  D7FB               	goto	u18095
 24683  003D76  C084  F07F         	movff	encode@part1,??_encode+8
 24684  003D7A  C085  F080         	movff	encode@part1+1,??_encode+9
 24685  003D7E  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 24686  003D80  3B80               	swapf	(??_encode+9)& (0+255),f,b
 24687  003D82  0EF0               	movlw	240
 24688  003D84  1780               	andwf	(??_encode+9)& (0+255),f,b
 24689  003D86  517F               	movf	(??_encode+8)& (0+255),w,b
 24690  003D88  0B0F               	andlw	15
 24691  003D8A  1380               	iorwf	(??_encode+9)& (0+255),f,b
 24692  003D8C  0EF0               	movlw	240
 24693  003D8E  177F               	andwf	(??_encode+8)& (0+255),f,b
 24694  003D90  517C               	movf	(??_encode+5)& (0+255),w,b
 24695  003D92  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24696  003D94  517D               	movf	(??_encode+6)& (0+255),w,b
 24697  003D96  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 24698  003D98  5184               	movf	encode@part1& (0+255),w,b
 24699  003D9A  277F               	addwf	(??_encode+8)& (0+255),f,b
 24700  003D9C  5185               	movf	(encode@part1+1)& (0+255),w,b
 24701  003D9E  2380               	addwfc	(??_encode+9)& (0+255),f,b
 24702  003DA0  517A               	movf	(??_encode+3)& (0+255),w,b
 24703  003DA2  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24704  003DA4  517B               	movf	(??_encode+4)& (0+255),w,b
 24705  003DA6  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 24706  003DA8  517F               	movf	(??_encode+8)& (0+255),w,b
 24707  003DAA  2786               	addwf	encode@part2& (0+255),f,b
 24708  003DAC  5180               	movf	(??_encode+9)& (0+255),w,b
 24709  003DAE  2387               	addwfc	(encode@part2+1)& (0+255),f,b
 24710                           
 24711                           ; BSR set to: 0
 24712  003DB0  2B83               	incf	encode@i& (0+255),f,b
 24713                           
 24714                           ; BSR set to: 0
 24715  003DB2  0E1F               	movlw	31
 24716  003DB4  6583               	cpfsgt	encode@i& (0+255),b
 24717  003DB6  D774               	goto	l15538
 24718                           
 24719                           ; BSR set to: 0
 24720                           ;drv_mrf_miwi_mesh_security.c: 120: }
 24721                           ;drv_mrf_miwi_mesh_security.c: 121: text[0]=part1; text[1]=part2;
 24722  003DB8  C073  FFD9         	movff	encode@text,fsr2l
 24723  003DBC  C074  FFDA         	movff	encode@text+1,fsr2h
 24724  003DC0  C084  FFDE         	movff	encode@part1,postinc2
 24725  003DC4  C085  FFDD         	movff	encode@part1+1,postdec2
 24726                           
 24727                           ; BSR set to: 0
 24728  003DC8  EE20 F002          	lfsr	2,2
 24729  003DCC  5173               	movf	encode@text& (0+255),w,b
 24730  003DCE  26D9               	addwf	fsr2l,f,c
 24731  003DD0  5174               	movf	(encode@text+1)& (0+255),w,b
 24732  003DD2  22DA               	addwfc	fsr2h,f,c
 24733  003DD4  C086  FFDE         	movff	encode@part2,postinc2
 24734  003DD8  C087  FFDD         	movff	encode@part2+1,postdec2
 24735                           
 24736                           ; BSR set to: 0
 24737  003DDC  0012               	return		;funcret
 24738  003DDE                     __end_of_encode:
 24739                           	opt stack 0
 24740                           tblptru	equ	0xFF8
 24741                           tblptrh	equ	0xFF7
 24742                           tblptrl	equ	0xFF6
 24743                           tablat	equ	0xFF5
 24744                           prodh	equ	0xFF4
 24745                           prodl	equ	0xFF3
 24746                           intcon	equ	0xFF2
 24747                           intcon3	equ	0xFF0
 24748                           postinc0	equ	0xFEE
 24749                           plusw0	equ	0xFEB
 24750                           fsr0h	equ	0xFEA
 24751                           fsr0l	equ	0xFE9
 24752                           wreg	equ	0xFE8
 24753                           indf1	equ	0xFE7
 24754                           postinc1	equ	0xFE6
 24755                           postdec1	equ	0xFE5
 24756                           plusw1	equ	0xFE3
 24757                           fsr1h	equ	0xFE2
 24758                           fsr1l	equ	0xFE1
 24759                           indf2	equ	0xFDF
 24760                           postinc2	equ	0xFDE
 24761                           postdec2	equ	0xFDD
 24762                           plusw2	equ	0xFDB
 24763                           fsr2h	equ	0xFDA
 24764                           fsr2l	equ	0xFD9
 24765                           status	equ	0xFD8
 24766                           
 24767 ;; *************** function _AddNodeToNetworkTable *****************
 24768 ;; Defined at:
 24769 ;;		line 291 in file "../src/Bridge.c"
 24770 ;; Parameters:    Size  Location     Type
 24771 ;;  address         2   33[BANK0 ] struct addr_t_def
 24772 ;;  PANID           2   35[BANK0 ] unsigned int 
 24773 ;; Auto vars:     Size  Location     Type
 24774 ;;  i               2   43[BANK0 ] unsigned int 
 24775 ;;  ind             2   41[BANK0 ] unsigned int 
 24776 ;; Return value:  Size  Location     Type
 24777 ;;                  2   33[BANK0 ] unsigned int 
 24778 ;; Registers used:
 24779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24780 ;; Tracked objects:
 24781 ;;		On entry : F/0
 24782 ;;		On exit  : F/0
 24783 ;;		Unchanged: 0/0
 24784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24786 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24788 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24789 ;;Total ram usage:       12 bytes
 24790 ;; Hardware stack levels used:    1
 24791 ;; Hardware stack levels required when called:    7
 24792 ;; This function calls:
 24793 ;;		_isSameAddress
 24794 ;;		_memcpy
 24795 ;;		_memset
 24796 ;; This function is called by:
 24797 ;;		_MiApp_MessageAvailable
 24798 ;; This function uses a non-reentrant model
 24799 ;;
 24800                           
 24801                           	psect	text104
 24802  00311A                     __ptext104:
 24803                           	opt stack 0
 24804  00311A                     _AddNodeToNetworkTable:
 24805                           	opt stack 21
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;Bridge.c: 293: uint16_t i;
 24809                           ;Bridge.c: 294: uint16_t ind=0xffff;
 24810                           
 24811                           ; BSR set to: 0
 24812                           ;incstack = 0
 24813  00311A  6989               	setf	AddNodeToNetworkTable@ind& (0+255),b
 24814  00311C  698A               	setf	(AddNodeToNetworkTable@ind+1)& (0+255),b
 24815                           
 24816                           ;Bridge.c: 295: for(i=0;i<5;i++)
 24817  00311E  6B8B               	clrf	AddNodeToNetworkTable@i& (0+255),b
 24818  003120  6B8C               	clrf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24819  003122                     l18190:
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;Bridge.c: 296: {
 24823                           ;Bridge.c: 297: if( (isSameAddress(ConnectionTable[i].Address,address)==1)
 24824                           ;Bridge.c: 298: && (ConnectionTable[i].PANID.Val == PANID)
 24825                           ;Bridge.c: 299: && (ConnectionTable[i].status.bits.isValid==1) )
 24826  003122  0E0B               	movlw	11
 24827  003124  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24828  003126  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24829  00312A  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24830  00312E  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24831  003130  50F3               	movf	prodl,w,c
 24832  003132  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24833  003134  0EC0               	movlw	low (_ConnectionTable+8)
 24834  003136  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24835  003138  6ED9               	movwf	fsr2l,c
 24836  00313A  0E04               	movlw	high (_ConnectionTable+8)
 24837  00313C  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24838  00313E  6EDA               	movwf	fsr2h,c
 24839  003140  CFDE F07D          	movff	postinc2,isSameAddress@a1
 24840  003144  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 24841  003148  C081  F07F         	movff	AddNodeToNetworkTable@address,isSameAddress@a2
 24842  00314C  C082  F080         	movff	AddNodeToNetworkTable@address+1,isSameAddress@a2+1
 24843  003150  ECBA  F039         	call	_isSameAddress	;wreg free
 24844  003154  06E8               	decf	wreg,f,c
 24845  003156  E126               	bnz	l18200
 24846                           
 24847                           ; BSR set to: 0
 24848  003158  0E0B               	movlw	11
 24849  00315A  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24850  00315C  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24851  003160  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24852  003164  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24853  003166  50F3               	movf	prodl,w,c
 24854  003168  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24855  00316A  0EBC               	movlw	low (_ConnectionTable+4)
 24856  00316C  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24857  00316E  6ED9               	movwf	fsr2l,c
 24858  003170  0E04               	movlw	high (_ConnectionTable+4)
 24859  003172  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24860  003174  6EDA               	movwf	fsr2h,c
 24861  003176  5183               	movf	AddNodeToNetworkTable@PANID& (0+255),w,b
 24862  003178  18DE               	xorwf	postinc2,w,c
 24863  00317A  E114               	bnz	l18200
 24864  00317C  5184               	movf	(AddNodeToNetworkTable@PANID+1)& (0+255),w,b
 24865  00317E  18DE               	xorwf	postinc2,w,c
 24866  003180  E111               	bnz	l18200
 24867                           
 24868                           ; BSR set to: 0
 24869  003182  0E0B               	movlw	11
 24870  003184  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24871  003186  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24872  00318A  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24873  00318E  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24874  003190  50F3               	movf	prodl,w,c
 24875  003192  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24876  003194  0EC2               	movlw	low (_ConnectionTable+10)
 24877  003196  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24878  003198  6ED9               	movwf	fsr2l,c
 24879  00319A  0E04               	movlw	high (_ConnectionTable+10)
 24880  00319C  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24881  00319E  6EDA               	movwf	fsr2h,c
 24882  0031A0  BEDF               	btfsc	indf2,7,c
 24883  0031A2  D022               	goto	l18210
 24884  0031A4                     l18200:
 24885  0031A4  0E0B               	movlw	11
 24886  0031A6  0100               	movlb	0	; () banked
 24887  0031A8  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24888  0031AA  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24889  0031AE  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24890  0031B2  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24891  0031B4  50F3               	movf	prodl,w,c
 24892  0031B6  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24893  0031B8  0EC2               	movlw	low (_ConnectionTable+10)
 24894  0031BA  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24895  0031BC  6ED9               	movwf	fsr2l,c
 24896  0031BE  0E04               	movlw	high (_ConnectionTable+10)
 24897  0031C0  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24898  0031C2  6EDA               	movwf	fsr2h,c
 24899  0031C4  BEDF               	btfsc	indf2,7,c
 24900  0031C6  D008               	goto	l18206
 24901                           
 24902                           ; BSR set to: 4
 24903  0031C8  2989               	incf	AddNodeToNetworkTable@ind& (0+255),w,b
 24904  0031CA  E106               	bnz	l18206
 24905  0031CC  298A               	incf	(AddNodeToNetworkTable@ind+1)& (0+255),w,b
 24906  0031CE  E104               	bnz	l18206
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;Bridge.c: 303: {
 24910                           ;Bridge.c: 304: ind=i;
 24911  0031D0  C08B  F089         	movff	AddNodeToNetworkTable@i,AddNodeToNetworkTable@ind
 24912  0031D4  C08C  F08A         	movff	AddNodeToNetworkTable@i+1,AddNodeToNetworkTable@ind+1
 24913  0031D8                     l18206:
 24914  0031D8  0100               	movlb	0	; () banked
 24915  0031DA  4B8B               	infsnz	AddNodeToNetworkTable@i& (0+255),f,b
 24916  0031DC  2B8C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),f,b
 24917                           
 24918                           ; BSR set to: 0
 24919  0031DE  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 24920  0031E0  E103               	bnz	u22280
 24921  0031E2  0E05               	movlw	5
 24922  0031E4  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 24923  0031E6  E39D               	bnc	l18190
 24924  0031E8                     u22280:
 24925  0031E8                     l18210:
 24926                           
 24927                           ;Bridge.c: 305: }
 24928                           ;Bridge.c: 306: }
 24929                           ;Bridge.c: 307: if(i>=5)
 24930  0031E8  0100               	movlb	0	; () banked
 24931  0031EA  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 24932  0031EC  E104               	bnz	u22290
 24933  0031EE  0E05               	movlw	5
 24934  0031F0  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 24935  0031F2  A0D8               	btfss	status,0,c
 24936  0031F4  0012               	return	
 24937  0031F6                     u22290:
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;Bridge.c: 308: {
 24941                           ;Bridge.c: 309: i=ind;
 24942  0031F6  C089  F08B         	movff	AddNodeToNetworkTable@ind,AddNodeToNetworkTable@i
 24943  0031FA  C08A  F08C         	movff	AddNodeToNetworkTable@ind+1,AddNodeToNetworkTable@i+1
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;Bridge.c: 310: if(i!=0xffff)
 24947  0031FE  298B               	incf	AddNodeToNetworkTable@i& (0+255),w,b
 24948  003200  E103               	bnz	u22300
 24949  003202  298C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 24950  003204  B4D8               	btfsc	status,2,c
 24951  003206  0012               	return	
 24952  003208                     u22300:
 24953                           
 24954                           ; BSR set to: 0
 24955                           ;Bridge.c: 311: {
 24956                           ;Bridge.c: 312: memset(&ConnectionTable[i],0x00,sizeof(CONNECTION_ENTRY));
 24957  003208  0E0B               	movlw	11
 24958  00320A  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24959  00320C  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24960  003210  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24961  003214  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24962  003216  50F3               	movf	prodl,w,c
 24963  003218  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24964  00321A  0EB8               	movlw	low _ConnectionTable
 24965  00321C  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24966  00321E  6F73               	movwf	memset@p1& (0+255),b
 24967  003220  0E04               	movlw	high _ConnectionTable
 24968  003222  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24969  003224  6F74               	movwf	(memset@p1+1)& (0+255),b
 24970  003226  6B76               	clrf	(memset@c+1)& (0+255),b
 24971  003228  6B75               	clrf	memset@c& (0+255),b
 24972  00322A  6B78               	clrf	(memset@n+1)& (0+255),b
 24973  00322C  0E0B               	movlw	11
 24974  00322E  6F77               	movwf	memset@n& (0+255),b
 24975  003230  EC2F  F039         	call	_memset	;wreg free
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;Bridge.c: 313: memcpy(ConnectionTable[i].Address.bytes,address.bytes,sizeof(address));
 24979  003234  0E0B               	movlw	11
 24980  003236  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 24981  003238  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 24982  00323C  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 24983  003240  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 24984  003242  50F3               	movf	prodl,w,c
 24985  003244  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 24986  003246  0EC0               	movlw	low (_ConnectionTable+8)
 24987  003248  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 24988  00324A  6F75               	movwf	memcpy@d1& (0+255),b
 24989  00324C  0E04               	movlw	high (_ConnectionTable+8)
 24990  00324E  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 24991  003250  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 24992  003252  0E81               	movlw	low AddNodeToNetworkTable@address
 24993  003254  6F77               	movwf	memcpy@s1& (0+255),b
 24994  003256  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 24995  003258  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 24996  00325A  0E02               	movlw	2
 24997  00325C  6F79               	movwf	memcpy@n& (0+255),b
 24998  00325E  EC54  F035         	call	_memcpy	;wreg free
 24999                           
 25000                           ; BSR set to: 0
 25001                           ;Bridge.c: 314: ConnectionTable[i].PANID.Val=PANID;
 25002  003262  0E0B               	movlw	11
 25003  003264  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 25004  003266  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 25005  00326A  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 25006  00326E  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 25007  003270  50F3               	movf	prodl,w,c
 25008  003272  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25009  003274  0EBC               	movlw	low (_ConnectionTable+4)
 25010  003276  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25011  003278  6ED9               	movwf	fsr2l,c
 25012  00327A  0E04               	movlw	high (_ConnectionTable+4)
 25013  00327C  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25014  00327E  6EDA               	movwf	fsr2h,c
 25015  003280  C083  FFDE         	movff	AddNodeToNetworkTable@PANID,postinc2
 25016  003284  C084  FFDD         	movff	AddNodeToNetworkTable@PANID+1,postdec2
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;Bridge.c: 315: ConnectionTable[i].status.bits.isValid=1;
 25020  003288  0E0B               	movlw	11
 25021  00328A  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 25022  00328C  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 25023  003290  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 25024  003294  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 25025  003296  50F3               	movf	prodl,w,c
 25026  003298  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25027  00329A  0EC2               	movlw	low (_ConnectionTable+10)
 25028  00329C  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25029  00329E  6ED9               	movwf	fsr2l,c
 25030  0032A0  0E04               	movlw	high (_ConnectionTable+10)
 25031  0032A2  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25032  0032A4  6EDA               	movwf	fsr2h,c
 25033  0032A6  8EDF               	bsf	indf2,7,c
 25034                           
 25035                           ; BSR set to: 4
 25036                           ;Bridge.c: 317: ConnectionTable[i].IncomingFrameCounter=0;
 25037  0032A8  0E0B               	movlw	11
 25038  0032AA  0100               	movlb	0	; () banked
 25039  0032AC  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 25040  0032AE  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 25041  0032B2  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 25042  0032B6  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 25043  0032B8  50F3               	movf	prodl,w,c
 25044  0032BA  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 25045  0032BC  0EB8               	movlw	low _ConnectionTable
 25046  0032BE  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 25047  0032C0  6ED9               	movwf	fsr2l,c
 25048  0032C2  0E04               	movlw	high _ConnectionTable
 25049  0032C4  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 25050  0032C6  6EDA               	movwf	fsr2h,c
 25051  0032C8  6ADE               	clrf	postinc2,c
 25052  0032CA  6ADE               	clrf	postinc2,c
 25053  0032CC  6ADE               	clrf	postinc2,c
 25054  0032CE  6ADD               	clrf	postdec2,c
 25055                           
 25056                           ; BSR set to: 0
 25057  0032D0  0012               	return		;funcret
 25058  0032D2                     __end_of_AddNodeToNetworkTable:
 25059                           	opt stack 0
 25060                           tblptru	equ	0xFF8
 25061                           tblptrh	equ	0xFF7
 25062                           tblptrl	equ	0xFF6
 25063                           tablat	equ	0xFF5
 25064                           prodh	equ	0xFF4
 25065                           prodl	equ	0xFF3
 25066                           intcon	equ	0xFF2
 25067                           intcon3	equ	0xFF0
 25068                           postinc0	equ	0xFEE
 25069                           plusw0	equ	0xFEB
 25070                           fsr0h	equ	0xFEA
 25071                           fsr0l	equ	0xFE9
 25072                           wreg	equ	0xFE8
 25073                           indf1	equ	0xFE7
 25074                           postinc1	equ	0xFE6
 25075                           postdec1	equ	0xFE5
 25076                           plusw1	equ	0xFE3
 25077                           fsr1h	equ	0xFE2
 25078                           fsr1l	equ	0xFE1
 25079                           indf2	equ	0xFDF
 25080                           postinc2	equ	0xFDE
 25081                           postdec2	equ	0xFDD
 25082                           plusw2	equ	0xFDB
 25083                           fsr2h	equ	0xFDA
 25084                           fsr2l	equ	0xFD9
 25085                           status	equ	0xFD8
 25086                           
 25087 ;; *************** function _isSameAddress *****************
 25088 ;; Defined at:
 25089 ;;		line 245 in file "../NetworkManager.c"
 25090 ;; Parameters:    Size  Location     Type
 25091 ;;  a1              2   29[BANK0 ] struct addr_t_def
 25092 ;;  a2              2   31[BANK0 ] struct addr_t_def
 25093 ;; Auto vars:     Size  Location     Type
 25094 ;;		None
 25095 ;; Return value:  Size  Location     Type
 25096 ;;                  1    wreg      unsigned char 
 25097 ;; Registers used:
 25098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25099 ;; Tracked objects:
 25100 ;;		On entry : 8/1
 25101 ;;		On exit  : F/0
 25102 ;;		Unchanged: 0/0
 25103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25108 ;;Total ram usage:        4 bytes
 25109 ;; Hardware stack levels used:    1
 25110 ;; Hardware stack levels required when called:    6
 25111 ;; This function calls:
 25112 ;;		_NetworkAddressSizeGet
 25113 ;;		_memcmp
 25114 ;; This function is called by:
 25115 ;;		_AddNodeToNetworkTable
 25116 ;;		_MiMAC_ReceivedPacket
 25117 ;;		_radioReceivedPacket
 25118 ;;		_NetworkUnicastData
 25119 ;;		_RouteManagerPerformUpdate
 25120 ;;		_routingTableFind
 25121 ;;		_RouterEvicted
 25122 ;;		_RouteManagerShouldInsert
 25123 ;;		_RoutingTableFindDeviceOrParent
 25124 ;;		_le_findIdx
 25125 ;;		_le_findWorstNeighborIdx
 25126 ;;		_le_updateNeighborTableEst
 25127 ;;		_le_findRandomNeighborIdx
 25128 ;;		_TunnelManagerSetTunnel
 25129 ;;		_TunnelManagerGetTunnel
 25130 ;;		_TunnelManagerInvalidateTunnel
 25131 ;;		_TMSendFormedPacketToRFD
 25132 ;;		_IsNetworkDevice
 25133 ;;		_DeviceManagerGetDeviceType
 25134 ;;		_DeviceManagerGetDeviceData
 25135 ;; This function uses a non-reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text105
 25139  007374                     __ptext105:
 25140                           	opt stack 0
 25141  007374                     _isSameAddress:
 25142                           	opt stack 22
 25143                           
 25144                           ;NetworkManager.c: 247: return !memcmp(a1.bytes, a2.bytes, NetworkAddressSizeGet());
 25145                           
 25146                           ; BSR set to: 0
 25147                           ;incstack = 0
 25148  007374  0E7D               	movlw	low isSameAddress@a1
 25149  007376  0100               	movlb	0	; () banked
 25150  007378  6F73               	movwf	memcmp@s1& (0+255),b
 25151  00737A  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 25152  00737C  0E7F               	movlw	low isSameAddress@a2
 25153  00737E  6F75               	movwf	memcmp@s2& (0+255),b
 25154  007380  6B76               	clrf	(memcmp@s2+1)& (0+255),b
 25155  007382  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 25156  007386  0100               	movlb	0	; () banked
 25157  007388  6F77               	movwf	memcmp@n& (0+255),b
 25158  00738A  6B78               	clrf	(memcmp@n+1)& (0+255),b
 25159  00738C  ECFE  F034         	call	_memcmp	;wreg free
 25160  007390  5173               	movf	?_memcmp& (0+255),w,b
 25161  007392  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 25162  007394  B4D8               	btfsc	status,2,c
 25163  007396  0C01               	retlw	1
 25164                           
 25165                           ; BSR set to: 0
 25166  007398  0C00               	retlw	0	;funcret
 25167  00739A                     __end_of_isSameAddress:
 25168                           	opt stack 0
 25169                           tblptru	equ	0xFF8
 25170                           tblptrh	equ	0xFF7
 25171                           tblptrl	equ	0xFF6
 25172                           tablat	equ	0xFF5
 25173                           prodh	equ	0xFF4
 25174                           prodl	equ	0xFF3
 25175                           intcon	equ	0xFF2
 25176                           intcon3	equ	0xFF0
 25177                           postinc0	equ	0xFEE
 25178                           plusw0	equ	0xFEB
 25179                           fsr0h	equ	0xFEA
 25180                           fsr0l	equ	0xFE9
 25181                           wreg	equ	0xFE8
 25182                           indf1	equ	0xFE7
 25183                           postinc1	equ	0xFE6
 25184                           postdec1	equ	0xFE5
 25185                           plusw1	equ	0xFE3
 25186                           fsr1h	equ	0xFE2
 25187                           fsr1l	equ	0xFE1
 25188                           indf2	equ	0xFDF
 25189                           postinc2	equ	0xFDE
 25190                           postdec2	equ	0xFDD
 25191                           plusw2	equ	0xFDB
 25192                           fsr2h	equ	0xFDA
 25193                           fsr2l	equ	0xFD9
 25194                           status	equ	0xFD8
 25195                           
 25196 ;; *************** function _MiApp_DiscardMessage *****************
 25197 ;; Defined at:
 25198 ;;		line 262 in file "../src/Bridge.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;		None
 25201 ;; Auto vars:     Size  Location     Type
 25202 ;;		None
 25203 ;; Return value:  Size  Location     Type
 25204 ;;                  1    wreg      void 
 25205 ;; Registers used:
 25206 ;;		cstack
 25207 ;; Tracked objects:
 25208 ;;		On entry : E/0
 25209 ;;		On exit  : F/1
 25210 ;;		Unchanged: 0/0
 25211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25216 ;;Total ram usage:        0 bytes
 25217 ;; Hardware stack levels used:    1
 25218 ;; Hardware stack levels required when called:    6
 25219 ;; This function calls:
 25220 ;;		_NetworkReleaseUserData
 25221 ;; This function is called by:
 25222 ;;		_main
 25223 ;;		_MiApp_SearchConnection
 25224 ;; This function uses a non-reentrant model
 25225 ;;
 25226                           
 25227                           	psect	text106
 25228  007646                     __ptext106:
 25229                           	opt stack 0
 25230  007646                     _MiApp_DiscardMessage:
 25231                           	opt stack 23
 25232                           
 25233                           ;Bridge.c: 264: UserMessageAvailable=0;
 25234                           
 25235                           ; BSR set to: 0
 25236                           ;incstack = 0
 25237  007646  0101               	movlb	1	; () banked
 25238  007648  6BD3               	clrf	_UserMessageAvailable& (0+255),b
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;Bridge.c: 265: NetworkReleaseUserData();
 25242  00764A  EF34  F03B         	goto	_NetworkReleaseUserData	;wreg free
 25243  00764E                     __end_of_MiApp_DiscardMessage:
 25244                           	opt stack 0
 25245                           tblptru	equ	0xFF8
 25246                           tblptrh	equ	0xFF7
 25247                           tblptrl	equ	0xFF6
 25248                           tablat	equ	0xFF5
 25249                           prodh	equ	0xFF4
 25250                           prodl	equ	0xFF3
 25251                           intcon	equ	0xFF2
 25252                           intcon3	equ	0xFF0
 25253                           postinc0	equ	0xFEE
 25254                           plusw0	equ	0xFEB
 25255                           fsr0h	equ	0xFEA
 25256                           fsr0l	equ	0xFE9
 25257                           wreg	equ	0xFE8
 25258                           indf1	equ	0xFE7
 25259                           postinc1	equ	0xFE6
 25260                           postdec1	equ	0xFE5
 25261                           plusw1	equ	0xFE3
 25262                           fsr1h	equ	0xFE2
 25263                           fsr1l	equ	0xFE1
 25264                           indf2	equ	0xFDF
 25265                           postinc2	equ	0xFDE
 25266                           postdec2	equ	0xFDD
 25267                           plusw2	equ	0xFDB
 25268                           fsr2h	equ	0xFDA
 25269                           fsr2l	equ	0xFD9
 25270                           status	equ	0xFD8
 25271                           
 25272 ;; *************** function _NetworkReleaseUserData *****************
 25273 ;; Defined at:
 25274 ;;		line 353 in file "../NetworkManager.c"
 25275 ;; Parameters:    Size  Location     Type
 25276 ;;		None
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;		None
 25279 ;; Return value:  Size  Location     Type
 25280 ;;                  1    wreg      void 
 25281 ;; Registers used:
 25282 ;;		None
 25283 ;; Tracked objects:
 25284 ;;		On entry : F/1
 25285 ;;		On exit  : F/1
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25292 ;;Total ram usage:        0 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:    5
 25295 ;; This function calls:
 25296 ;;		Nothing
 25297 ;; This function is called by:
 25298 ;;		_MiApp_DiscardMessage
 25299 ;; This function uses a non-reentrant model
 25300 ;;
 25301                           
 25302                           	psect	text107
 25303  007668                     __ptext107:
 25304                           	opt stack 0
 25305  007668                     _NetworkReleaseUserData:
 25306                           	opt stack 23
 25307                           
 25308                           ; BSR set to: 1
 25309                           ;NetworkManager.c: 355: userDataAvailable=0;
 25310                           
 25311                           ; BSR set to: 1
 25312                           ;incstack = 0
 25313  007668  6BD8               	clrf	_userDataAvailable& (0+255),b
 25314                           
 25315                           ; BSR set to: 1
 25316  00766A  0012               	return		;funcret
 25317  00766C                     __end_of_NetworkReleaseUserData:
 25318                           	opt stack 0
 25319                           tblptru	equ	0xFF8
 25320                           tblptrh	equ	0xFF7
 25321                           tblptrl	equ	0xFF6
 25322                           tablat	equ	0xFF5
 25323                           prodh	equ	0xFF4
 25324                           prodl	equ	0xFF3
 25325                           intcon	equ	0xFF2
 25326                           intcon3	equ	0xFF0
 25327                           postinc0	equ	0xFEE
 25328                           plusw0	equ	0xFEB
 25329                           fsr0h	equ	0xFEA
 25330                           fsr0l	equ	0xFE9
 25331                           wreg	equ	0xFE8
 25332                           indf1	equ	0xFE7
 25333                           postinc1	equ	0xFE6
 25334                           postdec1	equ	0xFE5
 25335                           plusw1	equ	0xFE3
 25336                           fsr1h	equ	0xFE2
 25337                           fsr1l	equ	0xFE1
 25338                           indf2	equ	0xFDF
 25339                           postinc2	equ	0xFDE
 25340                           postdec2	equ	0xFDD
 25341                           plusw2	equ	0xFDB
 25342                           fsr2h	equ	0xFDA
 25343                           fsr2l	equ	0xFD9
 25344                           status	equ	0xFD8
 25345                           
 25346 ;; *************** function _MiApp_ProtocolInit *****************
 25347 ;; Defined at:
 25348 ;;		line 148 in file "../src/Bridge.c"
 25349 ;; Parameters:    Size  Location     Type
 25350 ;;  bNetworkFree    1    wreg     unsigned char 
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;  bNetworkFree    1    0[COMRAM] unsigned char 
 25353 ;;  initValue       3   47[BANK0 ] struct .
 25354 ;;  res             1    0        unsigned char 
 25355 ;; Return value:  Size  Location     Type
 25356 ;;                  1    wreg      unsigned char 
 25357 ;; Registers used:
 25358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25359 ;; Tracked objects:
 25360 ;;		On entry : E/0
 25361 ;;		On exit  : 0/0
 25362 ;;		Unchanged: 0/0
 25363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25367 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25368 ;;Total ram usage:        4 bytes
 25369 ;; Hardware stack levels used:    1
 25370 ;; Hardware stack levels required when called:    9
 25371 ;; This function calls:
 25372 ;;		_MiApp_SetAddressPan
 25373 ;;		_MiMAC_Init
 25374 ;;		_NetworkSetDeviceType
 25375 ;;		_memset
 25376 ;; This function is called by:
 25377 ;;		_main
 25378 ;; This function uses a non-reentrant model
 25379 ;;
 25380                           
 25381                           	psect	text108
 25382  00694E                     __ptext108:
 25383                           	opt stack 0
 25384  00694E                     _MiApp_ProtocolInit:
 25385                           	opt stack 21
 25386                           
 25387                           ;Bridge.c: 150: bool res;
 25388                           ;Bridge.c: 151: MACINIT_PARAM initValue;
 25389                           ;Bridge.c: 152: initValue.PAddress = (uint8_t *) myLongAddress;
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;incstack = 0
 25393  00694E  0EFA               	movlw	low _myLongAddress
 25394  006950  0100               	movlb	0	; () banked
 25395  006952  6F90               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
 25396  006954  0E01               	movlw	high _myLongAddress
 25397  006956  6F91               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
 25398                           
 25399                           ; BSR set to: 0
 25400                           ;Bridge.c: 153: initValue.actionFlags.bits.CCAEnable = 1;
 25401  006958  838F               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
 25402                           
 25403                           ; BSR set to: 0
 25404                           ;Bridge.c: 154: initValue.actionFlags.bits.PAddrLength = 2;
 25405  00695A  518F               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
 25406  00695C  0B87               	andlw	-121
 25407  00695E  0910               	iorlw	16
 25408  006960  6F8F               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
 25409                           
 25410                           ; BSR set to: 0
 25411                           ;Bridge.c: 155: initValue.actionFlags.bits.RepeaterMode = 0;
 25412  006962  918F               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;Bridge.c: 157: memset(ConnectionTable,0x00,sizeof(ConnectionTable));
 25416  006964  0EB8               	movlw	low _ConnectionTable
 25417  006966  6F73               	movwf	memset@p1& (0+255),b
 25418  006968  0E04               	movlw	high _ConnectionTable
 25419  00696A  6F74               	movwf	(memset@p1+1)& (0+255),b
 25420  00696C  6B76               	clrf	(memset@c+1)& (0+255),b
 25421  00696E  6B75               	clrf	memset@c& (0+255),b
 25422  006970  6B78               	clrf	(memset@n+1)& (0+255),b
 25423  006972  0E37               	movlw	55
 25424  006974  6F77               	movwf	memset@n& (0+255),b
 25425  006976  EC2F  F039         	call	_memset	;wreg free
 25426                           
 25427                           ; BSR set to: 0
 25428  00697A  C08F  F087         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
 25429  00697E  C090  F088         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
 25430  006982  C091  F089         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
 25431  006986  ECA8  F027         	call	_MiMAC_Init	;wreg free
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;Bridge.c: 163: MiApp_SetAddressPan(myLongAddress, myPANID);
 25435  00698A  0EFA               	movlw	low _myLongAddress
 25436  00698C  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
 25437  00698E  0E01               	movlw	high _myLongAddress
 25438  006990  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
 25439  006992  C0EB  F085         	movff	_myPANID,MiApp_SetAddressPan@panid
 25440  006996  C0EC  F086         	movff	_myPANID+1,MiApp_SetAddressPan@panid+1
 25441  00699A  EC4C  F036         	call	_MiApp_SetAddressPan	;wreg free
 25442                           
 25443                           ;Bridge.c: 164: NetworkSetDeviceType(myDeviceType);
 25444  00699E  0101               	movlb	1	; () banked
 25445  0069A0  51FC               	movf	_myDeviceType& (0+255),w,b
 25446  0069A2  EF03  F03B         	goto	_NetworkSetDeviceType
 25447  0069A6                     __end_of_MiApp_ProtocolInit:
 25448                           	opt stack 0
 25449                           tblptru	equ	0xFF8
 25450                           tblptrh	equ	0xFF7
 25451                           tblptrl	equ	0xFF6
 25452                           tablat	equ	0xFF5
 25453                           prodh	equ	0xFF4
 25454                           prodl	equ	0xFF3
 25455                           intcon	equ	0xFF2
 25456                           intcon3	equ	0xFF0
 25457                           postinc0	equ	0xFEE
 25458                           plusw0	equ	0xFEB
 25459                           fsr0h	equ	0xFEA
 25460                           fsr0l	equ	0xFE9
 25461                           wreg	equ	0xFE8
 25462                           indf1	equ	0xFE7
 25463                           postinc1	equ	0xFE6
 25464                           postdec1	equ	0xFE5
 25465                           plusw1	equ	0xFE3
 25466                           fsr1h	equ	0xFE2
 25467                           fsr1l	equ	0xFE1
 25468                           indf2	equ	0xFDF
 25469                           postinc2	equ	0xFDE
 25470                           postdec2	equ	0xFDD
 25471                           plusw2	equ	0xFDB
 25472                           fsr2h	equ	0xFDA
 25473                           fsr2l	equ	0xFD9
 25474                           status	equ	0xFD8
 25475                           
 25476 ;; *************** function _NetworkSetDeviceType *****************
 25477 ;; Defined at:
 25478 ;;		line 441 in file "../NetworkManager.c"
 25479 ;; Parameters:    Size  Location     Type
 25480 ;;  dev             1    wreg     enum E145
 25481 ;; Auto vars:     Size  Location     Type
 25482 ;;  dev             1   19[BANK0 ] enum E145
 25483 ;; Return value:  Size  Location     Type
 25484 ;;                  1    wreg      void 
 25485 ;; Registers used:
 25486 ;;		wreg
 25487 ;; Tracked objects:
 25488 ;;		On entry : F/1
 25489 ;;		On exit  : 0/0
 25490 ;;		Unchanged: 0/0
 25491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25496 ;;Total ram usage:        1 bytes
 25497 ;; Hardware stack levels used:    1
 25498 ;; Hardware stack levels required when called:    5
 25499 ;; This function calls:
 25500 ;;		Nothing
 25501 ;; This function is called by:
 25502 ;;		_MiApp_ProtocolInit
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506                           	psect	text109
 25507  007606                     __ptext109:
 25508                           	opt stack 0
 25509  007606                     _NetworkSetDeviceType:
 25510                           	opt stack 24
 25511                           
 25512                           ;incstack = 0
 25513                           ;NetworkSetDeviceType@dev stored from wreg
 25514  007606  0100               	movlb	0	; () banked
 25515  007608  6F73               	movwf	NetworkSetDeviceType@dev& (0+255),b
 25516                           
 25517                           ;NetworkManager.c: 443: DeviceType=dev;
 25518  00760A  C073  F1F6         	movff	NetworkSetDeviceType@dev,_DeviceType
 25519  00760E  0012               	return		;funcret
 25520  007610                     __end_of_NetworkSetDeviceType:
 25521                           	opt stack 0
 25522                           tblptru	equ	0xFF8
 25523                           tblptrh	equ	0xFF7
 25524                           tblptrl	equ	0xFF6
 25525                           tablat	equ	0xFF5
 25526                           prodh	equ	0xFF4
 25527                           prodl	equ	0xFF3
 25528                           intcon	equ	0xFF2
 25529                           intcon3	equ	0xFF0
 25530                           postinc0	equ	0xFEE
 25531                           plusw0	equ	0xFEB
 25532                           fsr0h	equ	0xFEA
 25533                           fsr0l	equ	0xFE9
 25534                           wreg	equ	0xFE8
 25535                           indf1	equ	0xFE7
 25536                           postinc1	equ	0xFE6
 25537                           postdec1	equ	0xFE5
 25538                           plusw1	equ	0xFE3
 25539                           fsr1h	equ	0xFE2
 25540                           fsr1l	equ	0xFE1
 25541                           indf2	equ	0xFDF
 25542                           postinc2	equ	0xFDE
 25543                           postdec2	equ	0xFDD
 25544                           plusw2	equ	0xFDB
 25545                           fsr2h	equ	0xFDA
 25546                           fsr2l	equ	0xFD9
 25547                           status	equ	0xFD8
 25548                           
 25549 ;; *************** function _MiMAC_Init *****************
 25550 ;; Defined at:
 25551 ;;		line 648 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 25552 ;; Parameters:    Size  Location     Type
 25553 ;;  initValue       3   39[BANK0 ] struct .
 25554 ;; Auto vars:     Size  Location     Type
 25555 ;;  seed            2   43[BANK0 ] unsigned int 
 25556 ;;  i               1   45[BANK0 ] unsigned char 
 25557 ;; Return value:  Size  Location     Type
 25558 ;;                  1    wreg      unsigned char 
 25559 ;; Registers used:
 25560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25561 ;; Tracked objects:
 25562 ;;		On entry : F/0
 25563 ;;		On exit  : F/0
 25564 ;;		Unchanged: 0/0
 25565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25569 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25570 ;;Total ram usage:        7 bytes
 25571 ;; Hardware stack levels used:    1
 25572 ;; Hardware stack levels required when called:    8
 25573 ;; This function calls:
 25574 ;;		_DelayMs
 25575 ;;		_RegisterRead
 25576 ;;		_RegisterSet
 25577 ;;		_SetRFMode
 25578 ;;		_krnd
 25579 ;;		_krndInit
 25580 ;;		_memcpy
 25581 ;; This function is called by:
 25582 ;;		_MiApp_ProtocolInit
 25583 ;; This function uses a non-reentrant model
 25584 ;;
 25585                           
 25586                           	psect	text110
 25587  004F50                     __ptext110:
 25588                           	opt stack 0
 25589  004F50                     _MiMAC_Init:
 25590                           	opt stack 21
 25591                           
 25592                           ; BSR set to: 0
 25593                           ;drv_mrf_miwi_mesh_89xa.c: 650: uint8_t i;
 25594                           ;drv_mrf_miwi_mesh_89xa.c: 652: MACInitParams = initValue;
 25595                           
 25596                           ;incstack = 0
 25597  004F50  C087  F036         	movff	MiMAC_Init@initValue,_MACInitParams
 25598  004F54  C088  F037         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 25599  004F58  C089  F038         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 25600                           
 25601                           ; BSR set to: 0
 25602                           ;drv_mrf_miwi_mesh_89xa.c: 654: DelayMs(20);
 25603  004F5C  0E14               	movlw	20
 25604  004F5E  6F7B               	movwf	DelayMs@ms& (0+255),b
 25605  004F60  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 25606  004F62  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 25607  004F64  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 25608  004F66  ECAC  F02E         	call	_DelayMs	;wreg free
 25609                           
 25610                           ; BSR set to: 0
 25611                           ;drv_mrf_miwi_mesh_89xa.c: 655: LATDbits.LATD1 = 1;
 25612  004F6A  828C               	bsf	3980,1,c	;volatile
 25613                           
 25614                           ; BSR set to: 0
 25615                           ;drv_mrf_miwi_mesh_89xa.c: 656: LATAbits.LATA5 = 1;
 25616  004F6C  8A89               	bsf	3977,5,c	;volatile
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;drv_mrf_miwi_mesh_89xa.c: 659: ReceivedBankIndex = 0xFF;
 25620  004F6E  683F               	setf	_ReceivedBankIndex,c
 25621                           
 25622                           ; BSR set to: 0
 25623                           ;drv_mrf_miwi_mesh_89xa.c: 661: for(i = 0; i < 2; i++)
 25624  004F70  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 25625  004F72                     l18334:
 25626                           
 25627                           ; BSR set to: 0
 25628                           ;drv_mrf_miwi_mesh_89xa.c: 662: {
 25629                           ;drv_mrf_miwi_mesh_89xa.c: 663: RxPacket[i].flags.Val = 0;
 25630  004F72  518D               	movf	MiMAC_Init@i& (0+255),w,b
 25631  004F74  0D47               	mullw	71
 25632  004F76  0E1E               	movlw	low _RxPacket
 25633  004F78  24F3               	addwf	prodl,w,c
 25634  004F7A  6ED9               	movwf	fsr2l,c
 25635  004F7C  0E03               	movlw	high _RxPacket
 25636  004F7E  20F4               	addwfc	prodh,w,c
 25637  004F80  6EDA               	movwf	fsr2h,c
 25638  004F82  6ADF               	clrf	indf2,c
 25639                           
 25640                           ; BSR set to: 0
 25641  004F84  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 25642                           
 25643                           ; BSR set to: 0
 25644  004F86  0E01               	movlw	1
 25645  004F88  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 25646  004F8A  D7F3               	goto	l18334
 25647                           
 25648                           ; BSR set to: 0
 25649                           ;drv_mrf_miwi_mesh_89xa.c: 664: }
 25650                           ;drv_mrf_miwi_mesh_89xa.c: 688: OutgoingFrameCounter = 1;
 25651  004F8C  0102               	movlb	2	; () banked
 25652  004F8E  6F59               	movwf	_OutgoingFrameCounter& (0+255),b
 25653  004F90  6B5A               	clrf	(_OutgoingFrameCounter+1)& (0+255),b
 25654  004F92  6B5B               	clrf	(_OutgoingFrameCounter+2)& (0+255),b
 25655  004F94  6B5C               	clrf	(_OutgoingFrameCounter+3)& (0+255),b
 25656                           
 25657                           ; BSR set to: 2
 25658                           ;drv_mrf_miwi_mesh_89xa.c: 690: memcpy(key,mySecurityKey,8);
 25659  004F96  0E51               	movlw	low _key
 25660  004F98  0100               	movlb	0	; () banked
 25661  004F9A  6F75               	movwf	memcpy@d1& (0+255),b
 25662  004F9C  0E02               	movlw	high _key
 25663  004F9E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 25664  004FA0  0E8D               	movlw	low _mySecurityKey
 25665  004FA2  6F77               	movwf	memcpy@s1& (0+255),b
 25666  004FA4  0EFF               	movlw	high _mySecurityKey
 25667  004FA6  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 25668  004FA8  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 25669  004FAA  0E08               	movlw	8
 25670  004FAC  6F79               	movwf	memcpy@n& (0+255),b
 25671  004FAE  EC54  F035         	call	_memcpy	;wreg free
 25672                           
 25673                           ; BSR set to: 0
 25674                           ;drv_mrf_miwi_mesh_89xa.c: 695: for (i = 0 ; i <= 31; i++)
 25675  004FB2  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 25676  004FB4                     l18350:
 25677                           
 25678                           ; BSR set to: 0
 25679                           ;drv_mrf_miwi_mesh_89xa.c: 696: {
 25680                           ;drv_mrf_miwi_mesh_89xa.c: 697: RegisterSet(InitConfigRegs[i]);
 25681  004FB4  518D               	movf	MiMAC_Init@i& (0+255),w,b
 25682  004FB6  0D02               	mullw	2
 25683  004FB8  0EFD               	movlw	low _InitConfigRegs
 25684  004FBA  24F3               	addwf	prodl,w,c
 25685  004FBC  6EF6               	movwf	tblptrl,c
 25686  004FBE  0EFE               	movlw	high _InitConfigRegs
 25687  004FC0  20F4               	addwfc	prodh,w,c
 25688  004FC2  6EF7               	movwf	tblptrh,c
 25689  004FC4                     	if	0	;There are less than 3 active tblptr bytes
 25690  004FC4                     	endif
 25691  004FC4  0009               	tblrd		*+
 25692  004FC6  CFF5 F075          	movff	tablat,RegisterSet@setting
 25693  004FCA  000A               	tblrd		*-
 25694  004FCC  CFF5 F076          	movff	tablat,RegisterSet@setting+1
 25695  004FD0  EC44  F039         	call	_RegisterSet	;wreg free
 25696  004FD4  0100               	movlb	0	; () banked
 25697  004FD6  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 25698                           
 25699                           ; BSR set to: 0
 25700  004FD8  0E1F               	movlw	31
 25701  004FDA  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 25702  004FDC  D7EB               	goto	l18350
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;drv_mrf_miwi_mesh_89xa.c: 698: }
 25706                           ;drv_mrf_miwi_mesh_89xa.c: 699: SetRFMode(0x20);
 25707  004FDE  0E20               	movlw	32
 25708  004FE0  ECBF  F032         	call	_SetRFMode
 25709                           
 25710                           ;drv_mrf_miwi_mesh_89xa.c: 700: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 25711  004FE4  0100               	movlb	0	; () banked
 25712  004FE6  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 25713  004FE8  0E4E               	movlw	78
 25714  004FEA  6F75               	movwf	RegisterSet@setting& (0+255),b
 25715  004FEC  EC44  F039         	call	_RegisterSet	;wreg free
 25716                           
 25717                           ;drv_mrf_miwi_mesh_89xa.c: 701: SetRFMode(0x40);
 25718  004FF0  0E40               	movlw	64
 25719  004FF2  ECBF  F032         	call	_SetRFMode
 25720                           
 25721                           ;drv_mrf_miwi_mesh_89xa.c: 704: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 25722  004FF6  0E1C               	movlw	28
 25723  004FF8  0100               	movlb	0	; () banked
 25724  004FFA  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 25725  004FFC  0E0F               	movlw	15
 25726  004FFE  6F75               	movwf	RegisterSet@setting& (0+255),b
 25727  005000  EC44  F039         	call	_RegisterSet	;wreg free
 25728                           
 25729                           ;drv_mrf_miwi_mesh_89xa.c: 706: SetRFMode(0x60);
 25730  005004  0E60               	movlw	96
 25731  005006  ECBF  F032         	call	_SetRFMode
 25732                           
 25733                           ;drv_mrf_miwi_mesh_89xa.c: 711: INTCON3bits.INT1IF = 0;
 25734  00500A  90F0               	bcf	intcon3,0,c	;volatile
 25735                           
 25736                           ;drv_mrf_miwi_mesh_89xa.c: 712: INTCON3bits.INT1IE = 1;
 25737  00500C  86F0               	bsf	intcon3,3,c	;volatile
 25738                           
 25739                           ;drv_mrf_miwi_mesh_89xa.c: 714: uint16_t seed=0;
 25740  00500E  0100               	movlb	0	; () banked
 25741  005010  6B8B               	clrf	MiMAC_Init@seed& (0+255),b
 25742  005012  6B8C               	clrf	(MiMAC_Init@seed+1)& (0+255),b
 25743                           
 25744                           ; BSR set to: 0
 25745                           ;drv_mrf_miwi_mesh_89xa.c: 715: for(i=0;i<16;i++)
 25746  005014  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 25747  005016                     l18376:
 25748                           
 25749                           ; BSR set to: 0
 25750                           ;drv_mrf_miwi_mesh_89xa.c: 716: {
 25751                           ;drv_mrf_miwi_mesh_89xa.c: 717: seed<<=1;
 25752  005016  90D8               	bcf	status,0,c
 25753  005018  378B               	rlcf	MiMAC_Init@seed& (0+255),f,b
 25754  00501A  378C               	rlcf	(MiMAC_Init@seed+1)& (0+255),f,b
 25755                           
 25756                           ; BSR set to: 0
 25757                           ;drv_mrf_miwi_mesh_89xa.c: 718: seed|=(((RegisterRead(0x2800>>8))>>1) & 0x01);
 25758  00501C  0E28               	movlw	40
 25759  00501E  ECD2  F038         	call	_RegisterRead
 25760  005022  6F8A               	movwf	??_MiMAC_Init& (0+255),b
 25761  005024  90D8               	bcf	status,0,c
 25762  005026  318A               	rrcf	??_MiMAC_Init& (0+255),w,b
 25763  005028  0B01               	andlw	1
 25764  00502A  138B               	iorwf	MiMAC_Init@seed& (0+255),f,b
 25765                           
 25766                           ; BSR set to: 0
 25767  00502C  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 25768                           
 25769                           ; BSR set to: 0
 25770  00502E  0E0F               	movlw	15
 25771  005030  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 25772  005032  D7F1               	goto	l18376
 25773                           
 25774                           ; BSR set to: 0
 25775                           ;drv_mrf_miwi_mesh_89xa.c: 719: }
 25776                           ;drv_mrf_miwi_mesh_89xa.c: 721: krndInit(seed);
 25777  005034  C08B  F073         	movff	MiMAC_Init@seed,krndInit@value
 25778  005038  C08C  F074         	movff	MiMAC_Init@seed+1,krndInit@value+1
 25779  00503C  EC00  F02C         	call	_krndInit	;wreg free
 25780                           
 25781                           ;drv_mrf_miwi_mesh_89xa.c: 722: MACSeq = krnd();
 25782  005040  ECEF  F01E         	call	_krnd	;wreg free
 25783  005044  5173               	movf	?_krnd& (0+255),w,b
 25784  005046  6E3D               	movwf	_MACSeq,c
 25785                           
 25786                           ; BSR set to: 0
 25787                           
 25788                           ; BSR set to: 0
 25789                           ;drv_mrf_miwi_mesh_89xa.c: 724: return 1;
 25790  005048  0C01               	retlw	1	;funcret
 25791  00504A                     __end_of_MiMAC_Init:
 25792                           	opt stack 0
 25793                           tblptru	equ	0xFF8
 25794                           tblptrh	equ	0xFF7
 25795                           tblptrl	equ	0xFF6
 25796                           tablat	equ	0xFF5
 25797                           prodh	equ	0xFF4
 25798                           prodl	equ	0xFF3
 25799                           intcon	equ	0xFF2
 25800                           intcon3	equ	0xFF0
 25801                           postinc0	equ	0xFEE
 25802                           plusw0	equ	0xFEB
 25803                           fsr0h	equ	0xFEA
 25804                           fsr0l	equ	0xFE9
 25805                           wreg	equ	0xFE8
 25806                           indf1	equ	0xFE7
 25807                           postinc1	equ	0xFE6
 25808                           postdec1	equ	0xFE5
 25809                           plusw1	equ	0xFE3
 25810                           fsr1h	equ	0xFE2
 25811                           fsr1l	equ	0xFE1
 25812                           indf2	equ	0xFDF
 25813                           postinc2	equ	0xFDE
 25814                           postdec2	equ	0xFDD
 25815                           plusw2	equ	0xFDB
 25816                           fsr2h	equ	0xFDA
 25817                           fsr2l	equ	0xFD9
 25818                           status	equ	0xFD8
 25819                           
 25820 ;; *************** function _krndInit *****************
 25821 ;; Defined at:
 25822 ;;		line 7 in file "../krnd.c"
 25823 ;; Parameters:    Size  Location     Type
 25824 ;;  value           2   19[BANK0 ] unsigned int 
 25825 ;; Auto vars:     Size  Location     Type
 25826 ;;		None
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1    wreg      void 
 25829 ;; Registers used:
 25830 ;;		wreg, status,2, status,0
 25831 ;; Tracked objects:
 25832 ;;		On entry : F/0
 25833 ;;		On exit  : F/1
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25838 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;Total ram usage:        6 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:    5
 25843 ;; This function calls:
 25844 ;;		Nothing
 25845 ;; This function is called by:
 25846 ;;		_MiMAC_Init
 25847 ;; This function uses a non-reentrant model
 25848 ;;
 25849                           
 25850                           	psect	text111
 25851  005800                     __ptext111:
 25852                           	opt stack 0
 25853  005800                     _krndInit:
 25854                           	opt stack 23
 25855                           
 25856                           ; BSR set to: 0
 25857                           ;krnd.c: 9: x|=(value<<0);
 25858                           
 25859                           ; BSR set to: 0
 25860                           ;incstack = 0
 25861  005800  5173               	movf	krndInit@value& (0+255),w,b
 25862  005802  6F75               	movwf	??_krndInit& (0+255),b
 25863  005804  5174               	movf	(krndInit@value+1)& (0+255),w,b
 25864  005806  6F76               	movwf	(??_krndInit+1)& (0+255),b
 25865  005808  6B77               	clrf	(??_krndInit+2)& (0+255),b
 25866  00580A  6B78               	clrf	(??_krndInit+3)& (0+255),b
 25867  00580C  5175               	movf	??_krndInit& (0+255),w,b
 25868  00580E  0101               	movlb	1	; () banked
 25869  005810  13EC               	iorwf	_x& (0+255),f,b
 25870  005812  0100               	movlb	0	; () banked
 25871  005814  5176               	movf	(??_krndInit+1)& (0+255),w,b
 25872  005816  0101               	movlb	1	; () banked
 25873  005818  13ED               	iorwf	(_x+1)& (0+255),f,b
 25874  00581A  0100               	movlb	0	; () banked
 25875  00581C  5177               	movf	(??_krndInit+2)& (0+255),w,b
 25876  00581E  0101               	movlb	1	; () banked
 25877  005820  13EE               	iorwf	(_x+2)& (0+255),f,b
 25878  005822  0100               	movlb	0	; () banked
 25879  005824  5178               	movf	(??_krndInit+3)& (0+255),w,b
 25880  005826  0101               	movlb	1	; () banked
 25881  005828  13EF               	iorwf	(_x+3)& (0+255),f,b
 25882                           
 25883                           ;krnd.c: 10: y|=(((uint32_t)value)<<16);
 25884  00582A  0100               	movlb	0	; () banked
 25885  00582C  5173               	movf	krndInit@value& (0+255),w,b
 25886  00582E  6F75               	movwf	??_krndInit& (0+255),b
 25887  005830  5174               	movf	(krndInit@value+1)& (0+255),w,b
 25888  005832  6F76               	movwf	(??_krndInit+1)& (0+255),b
 25889  005834  6B77               	clrf	(??_krndInit+2)& (0+255),b
 25890  005836  6B78               	clrf	(??_krndInit+3)& (0+255),b
 25891  005838  C076  F078         	movff	??_krndInit+1,??_krndInit+3
 25892  00583C  C075  F077         	movff	??_krndInit,??_krndInit+2
 25893  005840  6B76               	clrf	(??_krndInit+1)& (0+255),b
 25894  005842  6B75               	clrf	??_krndInit& (0+255),b
 25895  005844  5175               	movf	??_krndInit& (0+255),w,b
 25896  005846  124B               	iorwf	_y,f,c
 25897  005848  5176               	movf	(??_krndInit+1)& (0+255),w,b
 25898  00584A  124C               	iorwf	_y+1,f,c
 25899  00584C  5177               	movf	(??_krndInit+2)& (0+255),w,b
 25900  00584E  124D               	iorwf	_y+2,f,c
 25901  005850  5178               	movf	(??_krndInit+3)& (0+255),w,b
 25902  005852  124E               	iorwf	_y+3,f,c
 25903                           
 25904                           ;krnd.c: 11: z|=(((uint32_t)value)<<24);
 25905  005854  5173               	movf	krndInit@value& (0+255),w,b
 25906  005856  6F75               	movwf	??_krndInit& (0+255),b
 25907  005858  5174               	movf	(krndInit@value+1)& (0+255),w,b
 25908  00585A  6F76               	movwf	(??_krndInit+1)& (0+255),b
 25909  00585C  6B77               	clrf	(??_krndInit+2)& (0+255),b
 25910  00585E  6B78               	clrf	(??_krndInit+3)& (0+255),b
 25911  005860  C075  F078         	movff	??_krndInit,??_krndInit+3
 25912  005864  6B77               	clrf	(??_krndInit+2)& (0+255),b
 25913  005866  6B76               	clrf	(??_krndInit+1)& (0+255),b
 25914  005868  6B75               	clrf	??_krndInit& (0+255),b
 25915  00586A  5175               	movf	??_krndInit& (0+255),w,b
 25916  00586C  0101               	movlb	1	; () banked
 25917  00586E  13F0               	iorwf	_z& (0+255),f,b
 25918  005870  0100               	movlb	0	; () banked
 25919  005872  5176               	movf	(??_krndInit+1)& (0+255),w,b
 25920  005874  0101               	movlb	1	; () banked
 25921  005876  13F1               	iorwf	(_z+1)& (0+255),f,b
 25922  005878  0100               	movlb	0	; () banked
 25923  00587A  5177               	movf	(??_krndInit+2)& (0+255),w,b
 25924  00587C  0101               	movlb	1	; () banked
 25925  00587E  13F2               	iorwf	(_z+2)& (0+255),f,b
 25926  005880  0100               	movlb	0	; () banked
 25927  005882  5178               	movf	(??_krndInit+3)& (0+255),w,b
 25928  005884  0101               	movlb	1	; () banked
 25929  005886  13F3               	iorwf	(_z+3)& (0+255),f,b
 25930                           
 25931                           ;krnd.c: 12: w&=(value);
 25932  005888  0100               	movlb	0	; () banked
 25933  00588A  5173               	movf	krndInit@value& (0+255),w,b
 25934  00588C  6F75               	movwf	??_krndInit& (0+255),b
 25935  00588E  5174               	movf	(krndInit@value+1)& (0+255),w,b
 25936  005890  6F76               	movwf	(??_krndInit+1)& (0+255),b
 25937  005892  6B77               	clrf	(??_krndInit+2)& (0+255),b
 25938  005894  6B78               	clrf	(??_krndInit+3)& (0+255),b
 25939  005896  5175               	movf	??_krndInit& (0+255),w,b
 25940  005898  1647               	andwf	_w,f,c
 25941  00589A  5176               	movf	(??_krndInit+1)& (0+255),w,b
 25942  00589C  1648               	andwf	_w+1,f,c
 25943  00589E  5177               	movf	(??_krndInit+2)& (0+255),w,b
 25944  0058A0  1649               	andwf	_w+2,f,c
 25945  0058A2  5178               	movf	(??_krndInit+3)& (0+255),w,b
 25946  0058A4  164A               	andwf	_w+3,f,c
 25947                           
 25948                           ; BSR set to: 0
 25949                           ;krnd.c: 13: c=value;
 25950  0058A6  C073  F1AE         	movff	krndInit@value,_c
 25951  0058AA  C074  F1AF         	movff	krndInit@value+1,_c+1
 25952  0058AE  0101               	movlb	1	; () banked
 25953  0058B0  6BB0               	clrf	(_c+2)& (0+255),b
 25954  0058B2  6BB1               	clrf	(_c+3)& (0+255),b
 25955                           
 25956                           ; BSR set to: 1
 25957  0058B4  0012               	return		;funcret
 25958  0058B6                     __end_of_krndInit:
 25959                           	opt stack 0
 25960                           tblptru	equ	0xFF8
 25961                           tblptrh	equ	0xFF7
 25962                           tblptrl	equ	0xFF6
 25963                           tablat	equ	0xFF5
 25964                           prodh	equ	0xFF4
 25965                           prodl	equ	0xFF3
 25966                           intcon	equ	0xFF2
 25967                           intcon3	equ	0xFF0
 25968                           postinc0	equ	0xFEE
 25969                           plusw0	equ	0xFEB
 25970                           fsr0h	equ	0xFEA
 25971                           fsr0l	equ	0xFE9
 25972                           wreg	equ	0xFE8
 25973                           indf1	equ	0xFE7
 25974                           postinc1	equ	0xFE6
 25975                           postdec1	equ	0xFE5
 25976                           plusw1	equ	0xFE3
 25977                           fsr1h	equ	0xFE2
 25978                           fsr1l	equ	0xFE1
 25979                           indf2	equ	0xFDF
 25980                           postinc2	equ	0xFDE
 25981                           postdec2	equ	0xFDD
 25982                           plusw2	equ	0xFDB
 25983                           fsr2h	equ	0xFDA
 25984                           fsr2l	equ	0xFD9
 25985                           status	equ	0xFD8
 25986                           
 25987 ;; *************** function _RegisterRead *****************
 25988 ;; Defined at:
 25989 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;  address         1    wreg     unsigned char 
 25992 ;; Auto vars:     Size  Location     Type
 25993 ;;  address         1   21[BANK0 ] unsigned char 
 25994 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 25995 ;;  value           1   22[BANK0 ] unsigned char 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1    wreg      unsigned char 
 25998 ;; Registers used:
 25999 ;;		wreg, status,2, status,0, cstack
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : F/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26006 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;Total ram usage:        3 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:    7
 26012 ;; This function calls:
 26013 ;;		_SPIGet
 26014 ;;		_SPIPut
 26015 ;; This function is called by:
 26016 ;;		_TxPacket
 26017 ;;		_MiMAC_Init
 26018 ;; This function uses a non-reentrant model
 26019 ;;
 26020                           
 26021                           	psect	text112
 26022  0071A4                     __ptext112:
 26023                           	opt stack 0
 26024  0071A4                     _RegisterRead:
 26025                           	opt stack 15
 26026                           
 26027                           ; BSR set to: 1
 26028                           ;incstack = 0
 26029                           ;RegisterRead@address stored from wreg
 26030  0071A4  0100               	movlb	0	; () banked
 26031  0071A6  6F75               	movwf	RegisterRead@address& (0+255),b
 26032                           
 26033                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 26034                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26035  0071A8  0E00               	movlw	0
 26036  0071AA  B6F0               	btfsc	intcon3,3,c	;volatile
 26037  0071AC  0E01               	movlw	1
 26038  0071AE  6F77               	movwf	RegisterRead@IRQ1select& (0+255),b
 26039                           
 26040                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 26041  0071B0  96F0               	bcf	intcon3,3,c	;volatile
 26042                           
 26043                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 26044  0071B2  928C               	bcf	3980,1,c	;volatile
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 26048  0071B4  8D75               	bsf	RegisterRead@address& (0+255),6,b
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 26052  0071B6  5175               	movf	RegisterRead@address& (0+255),w,b
 26053  0071B8  EC1F  F03A         	call	_SPIPut
 26054                           
 26055                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 26056  0071BC  EC08  F03B         	call	_SPIGet	;wreg free
 26057  0071C0  0100               	movlb	0	; () banked
 26058  0071C2  6F76               	movwf	RegisterRead@value& (0+255),b
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 26062  0071C4  828C               	bsf	3980,1,c	;volatile
 26063                           
 26064                           ; BSR set to: 0
 26065                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 26066  0071C6  B177               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 26067  0071C8  D002               	bra	u18115
 26068  0071CA  96F0               	bcf	intcon3,3,c	;volatile
 26069  0071CC  D001               	bra	u18116
 26070  0071CE                     u18115:
 26071  0071CE  86F0               	bsf	intcon3,3,c	;volatile
 26072  0071D0                     u18116:
 26073                           
 26074                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 26075  0071D0  0100               	movlb	0	; () banked
 26076  0071D2  5176               	movf	RegisterRead@value& (0+255),w,b
 26077                           
 26078                           ; BSR set to: 0
 26079  0071D4  0012               	return		;funcret
 26080  0071D6                     __end_of_RegisterRead:
 26081                           	opt stack 0
 26082                           tblptru	equ	0xFF8
 26083                           tblptrh	equ	0xFF7
 26084                           tblptrl	equ	0xFF6
 26085                           tablat	equ	0xFF5
 26086                           prodh	equ	0xFF4
 26087                           prodl	equ	0xFF3
 26088                           intcon	equ	0xFF2
 26089                           intcon3	equ	0xFF0
 26090                           postinc0	equ	0xFEE
 26091                           plusw0	equ	0xFEB
 26092                           fsr0h	equ	0xFEA
 26093                           fsr0l	equ	0xFE9
 26094                           wreg	equ	0xFE8
 26095                           indf1	equ	0xFE7
 26096                           postinc1	equ	0xFE6
 26097                           postdec1	equ	0xFE5
 26098                           plusw1	equ	0xFE3
 26099                           fsr1h	equ	0xFE2
 26100                           fsr1l	equ	0xFE1
 26101                           indf2	equ	0xFDF
 26102                           postinc2	equ	0xFDE
 26103                           postdec2	equ	0xFDD
 26104                           plusw2	equ	0xFDB
 26105                           fsr2h	equ	0xFDA
 26106                           fsr2l	equ	0xFD9
 26107                           status	equ	0xFD8
 26108                           
 26109 ;; *************** function _SPIGet *****************
 26110 ;; Defined at:
 26111 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 26112 ;; Parameters:    Size  Location     Type
 26113 ;;		None
 26114 ;; Auto vars:     Size  Location     Type
 26115 ;;		None
 26116 ;; Return value:  Size  Location     Type
 26117 ;;                  1    wreg      unsigned char 
 26118 ;; Registers used:
 26119 ;;		wreg, status,2, cstack
 26120 ;; Tracked objects:
 26121 ;;		On entry : 0/0
 26122 ;;		On exit  : 0/0
 26123 ;;		Unchanged: 0/0
 26124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26129 ;;Total ram usage:        0 bytes
 26130 ;; Hardware stack levels used:    1
 26131 ;; Hardware stack levels required when called:    6
 26132 ;; This function calls:
 26133 ;;		_SPIPut
 26134 ;; This function is called by:
 26135 ;;		_RegisterRead
 26136 ;; This function uses a non-reentrant model
 26137 ;;
 26138                           
 26139                           	psect	text113
 26140  007610                     __ptext113:
 26141                           	opt stack 0
 26142  007610                     _SPIGet:
 26143                           	opt stack 15
 26144                           
 26145                           ;spi.c: 310: SPIPut(0x00);
 26146                           
 26147                           ; BSR set to: 0
 26148                           ;incstack = 0
 26149  007610  0E00               	movlw	0
 26150  007612  EC1F  F03A         	call	_SPIPut
 26151                           
 26152                           ;spi.c: 311: return SSPBUF;
 26153  007616  50C9               	movf	4041,w,c	;volatile
 26154  007618  0012               	return		;funcret
 26155  00761A                     __end_of_SPIGet:
 26156                           	opt stack 0
 26157                           tblptru	equ	0xFF8
 26158                           tblptrh	equ	0xFF7
 26159                           tblptrl	equ	0xFF6
 26160                           tablat	equ	0xFF5
 26161                           prodh	equ	0xFF4
 26162                           prodl	equ	0xFF3
 26163                           intcon	equ	0xFF2
 26164                           intcon3	equ	0xFF0
 26165                           postinc0	equ	0xFEE
 26166                           plusw0	equ	0xFEB
 26167                           fsr0h	equ	0xFEA
 26168                           fsr0l	equ	0xFE9
 26169                           wreg	equ	0xFE8
 26170                           indf1	equ	0xFE7
 26171                           postinc1	equ	0xFE6
 26172                           postdec1	equ	0xFE5
 26173                           plusw1	equ	0xFE3
 26174                           fsr1h	equ	0xFE2
 26175                           fsr1l	equ	0xFE1
 26176                           indf2	equ	0xFDF
 26177                           postinc2	equ	0xFDE
 26178                           postdec2	equ	0xFDD
 26179                           plusw2	equ	0xFDB
 26180                           fsr2h	equ	0xFDA
 26181                           fsr2l	equ	0xFD9
 26182                           status	equ	0xFD8
 26183                           
 26184 ;; *************** function _MiApp_IsMemberOfNetwork *****************
 26185 ;; Defined at:
 26186 ;;		line 281 in file "../src/Bridge.c"
 26187 ;; Parameters:    Size  Location     Type
 26188 ;;		None
 26189 ;; Auto vars:     Size  Location     Type
 26190 ;;		None
 26191 ;; Return value:  Size  Location     Type
 26192 ;;                  1    wreg      unsigned char 
 26193 ;; Registers used:
 26194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26195 ;; Tracked objects:
 26196 ;;		On entry : D/2
 26197 ;;		On exit  : F/0
 26198 ;;		Unchanged: 0/0
 26199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26204 ;;Total ram usage:        0 bytes
 26205 ;; Hardware stack levels used:    1
 26206 ;; Hardware stack levels required when called:   10
 26207 ;; This function calls:
 26208 ;;		_IsMemberOfNetwork
 26209 ;; This function is called by:
 26210 ;;		_main
 26211 ;; This function uses a non-reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text114
 26215  00766C                     __ptext114:
 26216                           	opt stack 0
 26217  00766C                     _MiApp_IsMemberOfNetwork:
 26218                           	opt stack 20
 26219                           
 26220                           ;Bridge.c: 283: return(IsMemberOfNetwork());
 26221                           
 26222                           ;incstack = 0
 26223  00766C  EF38  F03B         	goto	_IsMemberOfNetwork	;wreg free
 26224  007670                     __end_of_MiApp_IsMemberOfNetwork:
 26225                           	opt stack 0
 26226                           tblptru	equ	0xFF8
 26227                           tblptrh	equ	0xFF7
 26228                           tblptrl	equ	0xFF6
 26229                           tablat	equ	0xFF5
 26230                           prodh	equ	0xFF4
 26231                           prodl	equ	0xFF3
 26232                           intcon	equ	0xFF2
 26233                           intcon3	equ	0xFF0
 26234                           postinc0	equ	0xFEE
 26235                           plusw0	equ	0xFEB
 26236                           fsr0h	equ	0xFEA
 26237                           fsr0l	equ	0xFE9
 26238                           wreg	equ	0xFE8
 26239                           indf1	equ	0xFE7
 26240                           postinc1	equ	0xFE6
 26241                           postdec1	equ	0xFE5
 26242                           plusw1	equ	0xFE3
 26243                           fsr1h	equ	0xFE2
 26244                           fsr1l	equ	0xFE1
 26245                           indf2	equ	0xFDF
 26246                           postinc2	equ	0xFDE
 26247                           postdec2	equ	0xFDD
 26248                           plusw2	equ	0xFDB
 26249                           fsr2h	equ	0xFDA
 26250                           fsr2l	equ	0xFD9
 26251                           status	equ	0xFD8
 26252                           
 26253 ;; *************** function _IsMemberOfNetwork *****************
 26254 ;; Defined at:
 26255 ;;		line 380 in file "../NetworkManager.c"
 26256 ;; Parameters:    Size  Location     Type
 26257 ;;		None
 26258 ;; Auto vars:     Size  Location     Type
 26259 ;;		None
 26260 ;; Return value:  Size  Location     Type
 26261 ;;                  1    wreg      unsigned char 
 26262 ;; Registers used:
 26263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26264 ;; Tracked objects:
 26265 ;;		On entry : C/1
 26266 ;;		On exit  : F/0
 26267 ;;		Unchanged: 0/0
 26268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26273 ;;Total ram usage:        0 bytes
 26274 ;; Hardware stack levels used:    1
 26275 ;; Hardware stack levels required when called:    9
 26276 ;; This function calls:
 26277 ;;		_NetworkHasRoute
 26278 ;; This function is called by:
 26279 ;;		_MiApp_IsMemberOfNetwork
 26280 ;;		_radioReceivedPacket
 26281 ;; This function uses a non-reentrant model
 26282 ;;
 26283                           
 26284                           	psect	text115
 26285  007670                     __ptext115:
 26286                           	opt stack 0
 26287  007670                     _IsMemberOfNetwork:
 26288                           	opt stack 18
 26289                           
 26290                           ;NetworkManager.c: 382: return(NetworkHasRoute());
 26291                           
 26292                           ; BSR set to: 0
 26293                           ;incstack = 0
 26294  007670  EF18  F038         	goto	_NetworkHasRoute	;wreg free
 26295  007674                     __end_of_IsMemberOfNetwork:
 26296                           	opt stack 0
 26297                           tblptru	equ	0xFF8
 26298                           tblptrh	equ	0xFF7
 26299                           tblptrl	equ	0xFF6
 26300                           tablat	equ	0xFF5
 26301                           prodh	equ	0xFF4
 26302                           prodl	equ	0xFF3
 26303                           intcon	equ	0xFF2
 26304                           intcon3	equ	0xFF0
 26305                           postinc0	equ	0xFEE
 26306                           plusw0	equ	0xFEB
 26307                           fsr0h	equ	0xFEA
 26308                           fsr0l	equ	0xFE9
 26309                           wreg	equ	0xFE8
 26310                           indf1	equ	0xFE7
 26311                           postinc1	equ	0xFE6
 26312                           postdec1	equ	0xFE5
 26313                           plusw1	equ	0xFE3
 26314                           fsr1h	equ	0xFE2
 26315                           fsr1l	equ	0xFE1
 26316                           indf2	equ	0xFDF
 26317                           postinc2	equ	0xFDE
 26318                           postdec2	equ	0xFDD
 26319                           plusw2	equ	0xFDB
 26320                           fsr2h	equ	0xFDA
 26321                           fsr2l	equ	0xFD9
 26322                           status	equ	0xFD8
 26323                           
 26324 ;; *************** function _NetworkHasRoute *****************
 26325 ;; Defined at:
 26326 ;;		line 209 in file "../NetworkManager.c"
 26327 ;; Parameters:    Size  Location     Type
 26328 ;;		None
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;  res             1   41[BANK0 ] unsigned char 
 26331 ;; Return value:  Size  Location     Type
 26332 ;;                  1    wreg      unsigned char 
 26333 ;; Registers used:
 26334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26335 ;; Tracked objects:
 26336 ;;		On entry : C/0
 26337 ;;		On exit  : F/0
 26338 ;;		Unchanged: 0/0
 26339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26343 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26344 ;;Total ram usage:        2 bytes
 26345 ;; Hardware stack levels used:    1
 26346 ;; Hardware stack levels required when called:    8
 26347 ;; This function calls:
 26348 ;;		_NetworkGetDeviceType
 26349 ;;		_isInvalidAddress
 26350 ;; This function is called by:
 26351 ;;		_networkSendBeacon
 26352 ;;		_TransportManagerTask
 26353 ;;		_TMSendFormedPacketTowardsCoordinator
 26354 ;;		_IsMemberOfNetwork
 26355 ;; This function uses a non-reentrant model
 26356 ;;
 26357                           
 26358                           	psect	text116
 26359  007030                     __ptext116:
 26360                           	opt stack 0
 26361  007030                     _NetworkHasRoute:
 26362                           	opt stack 19
 26363                           
 26364                           ;NetworkManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 26365                           
 26366                           ; BSR set to: 0
 26367                           ;incstack = 0
 26368  007030  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 26369  007034  0900               	iorlw	0
 26370  007036  E104               	bnz	l1989
 26371                           
 26372                           ; BSR set to: 1
 26373                           ;NetworkManager.c: 213: {
 26374                           ;NetworkManager.c: 214: res=1;
 26375  007038  0E01               	movlw	1
 26376  00703A  0100               	movlb	0	; () banked
 26377  00703C  6F89               	movwf	NetworkHasRoute@res& (0+255),b
 26378                           
 26379                           ;NetworkManager.c: 215: }else
 26380  00703E  D011               	goto	l1990
 26381  007040                     l1989:
 26382                           
 26383                           ; BSR set to: 1
 26384                           ;NetworkManager.c: 216: {
 26385                           ;NetworkManager.c: 217: res=(routeInfo.hasCheckedIn && !isInvalidAddress(routeInfo.paren
      +                          t));
 26386  007040  0100               	movlb	0	; () banked
 26387  007042  6B88               	clrf	_NetworkHasRoute$4283& (0+255),b
 26388                           
 26389                           ; BSR set to: 0
 26390  007044  0101               	movlb	1	; () banked
 26391  007046  51DF               	movf	(_routeInfo+6)& (0+255),w,b
 26392  007048  E00A               	bz	l16122
 26393                           
 26394                           ; BSR set to: 1
 26395  00704A  C1D9  F086         	movff	_routeInfo,isInvalidAddress@address
 26396  00704E  C1DA  F087         	movff	_routeInfo+1,isInvalidAddress@address+1
 26397  007052  ECD8  F03A         	call	_isInvalidAddress	;wreg free
 26398  007056  0900               	iorlw	0
 26399  007058  E102               	bnz	l16122
 26400                           
 26401                           ; BSR set to: 0
 26402  00705A  0E01               	movlw	1
 26403  00705C  6F88               	movwf	_NetworkHasRoute$4283& (0+255),b
 26404  00705E                     l16122:
 26405  00705E  C088  F089         	movff	_NetworkHasRoute$4283,NetworkHasRoute@res
 26406  007062                     l1990:
 26407                           
 26408                           ;NetworkManager.c: 218: }
 26409                           ;NetworkManager.c: 219: return(res);
 26410  007062  0100               	movlb	0	; () banked
 26411  007064  5189               	movf	NetworkHasRoute@res& (0+255),w,b
 26412                           
 26413                           ; BSR set to: 0
 26414  007066  0012               	return		;funcret
 26415  007068                     __end_of_NetworkHasRoute:
 26416                           	opt stack 0
 26417                           tblptru	equ	0xFF8
 26418                           tblptrh	equ	0xFF7
 26419                           tblptrl	equ	0xFF6
 26420                           tablat	equ	0xFF5
 26421                           prodh	equ	0xFF4
 26422                           prodl	equ	0xFF3
 26423                           intcon	equ	0xFF2
 26424                           intcon3	equ	0xFF0
 26425                           postinc0	equ	0xFEE
 26426                           plusw0	equ	0xFEB
 26427                           fsr0h	equ	0xFEA
 26428                           fsr0l	equ	0xFE9
 26429                           wreg	equ	0xFE8
 26430                           indf1	equ	0xFE7
 26431                           postinc1	equ	0xFE6
 26432                           postdec1	equ	0xFE5
 26433                           plusw1	equ	0xFE3
 26434                           fsr1h	equ	0xFE2
 26435                           fsr1l	equ	0xFE1
 26436                           indf2	equ	0xFDF
 26437                           postinc2	equ	0xFDE
 26438                           postdec2	equ	0xFDD
 26439                           plusw2	equ	0xFDB
 26440                           fsr2h	equ	0xFDA
 26441                           fsr2l	equ	0xFD9
 26442                           status	equ	0xFD8
 26443                           
 26444 ;; *************** function _isInvalidAddress *****************
 26445 ;; Defined at:
 26446 ;;		line 230 in file "../NetworkManager.c"
 26447 ;; Parameters:    Size  Location     Type
 26448 ;;  address         2   38[BANK0 ] struct addr_t_def
 26449 ;; Auto vars:     Size  Location     Type
 26450 ;;		None
 26451 ;; Return value:  Size  Location     Type
 26452 ;;                  1    wreg      unsigned char 
 26453 ;; Registers used:
 26454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26455 ;; Tracked objects:
 26456 ;;		On entry : 8/0
 26457 ;;		On exit  : F/0
 26458 ;;		Unchanged: 0/0
 26459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26464 ;;Total ram usage:        2 bytes
 26465 ;; Hardware stack levels used:    1
 26466 ;; Hardware stack levels required when called:    7
 26467 ;; This function calls:
 26468 ;;		_isBroadcastAddress
 26469 ;; This function is called by:
 26470 ;;		_RouteManagerPerformUpdate
 26471 ;;		_routingTableFind
 26472 ;;		_RouteManagerProcessReceive
 26473 ;;		_RouteManagerShouldInsert
 26474 ;;		_networkSendBeacon
 26475 ;;		_NetworkManagerTask
 26476 ;;		_NetworkHasRoute
 26477 ;;		_NetworkManagerProcessIncomingData
 26478 ;;		_IsNetworkDevice
 26479 ;; This function uses a non-reentrant model
 26480 ;;
 26481                           
 26482                           	psect	text117
 26483  0075B0                     __ptext117:
 26484                           	opt stack 0
 26485  0075B0                     _isInvalidAddress:
 26486                           	opt stack 19
 26487                           
 26488                           ;NetworkManager.c: 232: return(isBroadcastAddress(address));
 26489                           
 26490                           ; BSR set to: 0
 26491                           ;incstack = 0
 26492  0075B0  C086  F07B         	movff	isInvalidAddress@address,isBroadcastAddress@address
 26493  0075B4  C087  F07C         	movff	isInvalidAddress@address+1,isBroadcastAddress@address+1
 26494  0075B8  EFE1  F036         	goto	_isBroadcastAddress	;wreg free
 26495  0075BC                     __end_of_isInvalidAddress:
 26496                           	opt stack 0
 26497                           tblptru	equ	0xFF8
 26498                           tblptrh	equ	0xFF7
 26499                           tblptrl	equ	0xFF6
 26500                           tablat	equ	0xFF5
 26501                           prodh	equ	0xFF4
 26502                           prodl	equ	0xFF3
 26503                           intcon	equ	0xFF2
 26504                           intcon3	equ	0xFF0
 26505                           postinc0	equ	0xFEE
 26506                           plusw0	equ	0xFEB
 26507                           fsr0h	equ	0xFEA
 26508                           fsr0l	equ	0xFE9
 26509                           wreg	equ	0xFE8
 26510                           indf1	equ	0xFE7
 26511                           postinc1	equ	0xFE6
 26512                           postdec1	equ	0xFE5
 26513                           plusw1	equ	0xFE3
 26514                           fsr1h	equ	0xFE2
 26515                           fsr1l	equ	0xFE1
 26516                           indf2	equ	0xFDF
 26517                           postinc2	equ	0xFDE
 26518                           postdec2	equ	0xFDD
 26519                           plusw2	equ	0xFDB
 26520                           fsr2h	equ	0xFDA
 26521                           fsr2l	equ	0xFD9
 26522                           status	equ	0xFD8
 26523                           
 26524 ;; *************** function _isBroadcastAddress *****************
 26525 ;; Defined at:
 26526 ;;		line 222 in file "../NetworkManager.c"
 26527 ;; Parameters:    Size  Location     Type
 26528 ;;  address         2   27[BANK0 ] struct addr_t_def
 26529 ;; Auto vars:     Size  Location     Type
 26530 ;;  addr            8   29[BANK0 ] const unsigned char [8]
 26531 ;;  res             1   37[BANK0 ] unsigned char 
 26532 ;; Return value:  Size  Location     Type
 26533 ;;                  1    wreg      unsigned char 
 26534 ;; Registers used:
 26535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26536 ;; Tracked objects:
 26537 ;;		On entry : 8/1
 26538 ;;		On exit  : F/0
 26539 ;;		Unchanged: 0/0
 26540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26542 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26544 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26545 ;;Total ram usage:       11 bytes
 26546 ;; Hardware stack levels used:    1
 26547 ;; Hardware stack levels required when called:    6
 26548 ;; This function calls:
 26549 ;;		_NetworkAddressSizeGet
 26550 ;;		_memcmp
 26551 ;; This function is called by:
 26552 ;;		_radioReceivedPacket
 26553 ;;		_TMSendFormedPacketToRFD
 26554 ;;		_isInvalidAddress
 26555 ;; This function uses a non-reentrant model
 26556 ;;
 26557                           
 26558                           	psect	text118
 26559  006DC2                     __ptext118:
 26560                           	opt stack 0
 26561  006DC2                     _isBroadcastAddress:
 26562                           	opt stack 19
 26563                           
 26564                           ;NetworkManager.c: 225: const uint8_t addr[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
 26565                           
 26566                           ; BSR set to: 0
 26567                           ;incstack = 0
 26568  006DC2  0E85               	movlw	low isBroadcastAddress@F537
 26569  006DC4  6EF6               	movwf	tblptrl,c
 26570  006DC6                     	if	1	;There is more than 1 active tblptr byte
 26571  006DC6  0EFF               	movlw	high isBroadcastAddress@F537
 26572  006DC8  6EF7               	movwf	tblptrh,c
 26573  006DCA                     	endif
 26574  006DCA                     	if	0	;There are less than 3 active tblptr bytes
 26575  006DCA                     	endif
 26576  006DCA  EE20  F07D         	lfsr	2,isBroadcastAddress@addr
 26577  006DCE  0E07               	movlw	7
 26578  006DD0                     u18260:
 26579  006DD0  0009               	tblrd		*+
 26580  006DD2  CFF5 FFDE          	movff	tablat,postinc2
 26581  006DD6  06E8               	decf	wreg,f,c
 26582  006DD8  E2FB               	bc	u18260
 26583                           
 26584                           ;NetworkManager.c: 226: res=(memcmp(address.bytes,addr,NetworkAddressSizeGet())==0);
 26585  006DDA  0E7B               	movlw	low isBroadcastAddress@address
 26586  006DDC  0100               	movlb	0	; () banked
 26587  006DDE  6F73               	movwf	memcmp@s1& (0+255),b
 26588  006DE0  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 26589  006DE2  0E7D               	movlw	low isBroadcastAddress@addr
 26590  006DE4  6F75               	movwf	memcmp@s2& (0+255),b
 26591  006DE6  6B76               	clrf	(memcmp@s2+1)& (0+255),b
 26592  006DE8  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 26593  006DEC  0100               	movlb	0	; () banked
 26594  006DEE  6F77               	movwf	memcmp@n& (0+255),b
 26595  006DF0  6B78               	clrf	(memcmp@n+1)& (0+255),b
 26596  006DF2  ECFE  F034         	call	_memcmp	;wreg free
 26597  006DF6  5173               	movf	?_memcmp& (0+255),w,b
 26598  006DF8  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 26599  006DFA  0E01               	movlw	1
 26600  006DFC  A4D8               	btfss	status,2,c
 26601  006DFE  0E00               	movlw	0
 26602  006E00  6F85               	movwf	isBroadcastAddress@res& (0+255),b
 26603                           
 26604                           ; BSR set to: 0
 26605                           ;NetworkManager.c: 227: return(res);
 26606  006E02  5185               	movf	isBroadcastAddress@res& (0+255),w,b
 26607                           
 26608                           ; BSR set to: 0
 26609  006E04  0012               	return		;funcret
 26610  006E06                     __end_of_isBroadcastAddress:
 26611                           	opt stack 0
 26612                           tblptru	equ	0xFF8
 26613                           tblptrh	equ	0xFF7
 26614                           tblptrl	equ	0xFF6
 26615                           tablat	equ	0xFF5
 26616                           prodh	equ	0xFF4
 26617                           prodl	equ	0xFF3
 26618                           intcon	equ	0xFF2
 26619                           intcon3	equ	0xFF0
 26620                           postinc0	equ	0xFEE
 26621                           plusw0	equ	0xFEB
 26622                           fsr0h	equ	0xFEA
 26623                           fsr0l	equ	0xFE9
 26624                           wreg	equ	0xFE8
 26625                           indf1	equ	0xFE7
 26626                           postinc1	equ	0xFE6
 26627                           postdec1	equ	0xFE5
 26628                           plusw1	equ	0xFE3
 26629                           fsr1h	equ	0xFE2
 26630                           fsr1l	equ	0xFE1
 26631                           indf2	equ	0xFDF
 26632                           postinc2	equ	0xFDE
 26633                           postdec2	equ	0xFDD
 26634                           plusw2	equ	0xFDB
 26635                           fsr2h	equ	0xFDA
 26636                           fsr2l	equ	0xFD9
 26637                           status	equ	0xFD8
 26638                           
 26639 ;; *************** function _memcmp *****************
 26640 ;; Defined at:
 26641 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
 26642 ;; Parameters:    Size  Location     Type
 26643 ;;  s1              2   19[BANK0 ] PTR const void 
 26644 ;;		 -> a1.bytes(2), isSameAddress@a1(2), address.bytes(2), isBroadcastAddress@address(2), 
 26645 ;;		 -> hc_table(360), src.bytes(2), main@src(2), 
 26646 ;;  s2              2   21[BANK0 ] PTR const void 
 26647 ;;		 -> a2.bytes(2), isSameAddress@a2(2), isBroadcastAddress@addr(8), isKnownPacket@zeros(12), 
 26648 ;;		 -> src1.bytes(2), main@src1(2), 
 26649 ;;  n               2   23[BANK0 ] unsigned int 
 26650 ;; Auto vars:     Size  Location     Type
 26651 ;;		None
 26652 ;; Return value:  Size  Location     Type
 26653 ;;                  2   19[BANK0 ] int 
 26654 ;; Registers used:
 26655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26656 ;; Tracked objects:
 26657 ;;		On entry : F/0
 26658 ;;		On exit  : F/0
 26659 ;;		Unchanged: 0/0
 26660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26661 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26664 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26665 ;;Total ram usage:        8 bytes
 26666 ;; Hardware stack levels used:    1
 26667 ;; Hardware stack levels required when called:    5
 26668 ;; This function calls:
 26669 ;;		Nothing
 26670 ;; This function is called by:
 26671 ;;		_main
 26672 ;;		_isKnownPacket
 26673 ;;		_isBroadcastAddress
 26674 ;;		_isSameAddress
 26675 ;; This function uses a non-reentrant model
 26676 ;;
 26677                           
 26678                           	psect	text119
 26679  0069FC                     __ptext119:
 26680                           	opt stack 0
 26681  0069FC                     _memcmp:
 26682                           	opt stack 25
 26683                           
 26684                           ; BSR set to: 0
 26685                           
 26686                           ; BSR set to: 0
 26687                           ;incstack = 0
 26688  0069FC  D020               	goto	l15508
 26689  0069FE                     l15500:
 26690                           
 26691                           ; BSR set to: 0
 26692  0069FE  C075  FFD9         	movff	memcmp@s2,fsr2l
 26693  006A02  C076  FFDA         	movff	memcmp@s2+1,fsr2h
 26694  006A06  C073  FFE1         	movff	memcmp@s1,fsr1l
 26695  006A0A  C074  FFE2         	movff	memcmp@s1+1,fsr1h
 26696  006A0E  50DE               	movf	postinc2,w,c
 26697  006A10  18E6               	xorwf	postinc1,w,c
 26698  006A12  E011               	bz	l15506
 26699                           
 26700                           ; BSR set to: 0
 26701  006A14  C073  FFD9         	movff	memcmp@s1,fsr2l
 26702  006A18  C074  FFDA         	movff	memcmp@s1+1,fsr2h
 26703  006A1C  50DF               	movf	indf2,w,c
 26704  006A1E  6F79               	movwf	??_memcmp& (0+255),b
 26705  006A20  C075  FFD9         	movff	memcmp@s2,fsr2l
 26706  006A24  C076  FFDA         	movff	memcmp@s2+1,fsr2h
 26707  006A28  50DF               	movf	indf2,w,c
 26708  006A2A  5D79               	subwf	??_memcmp& (0+255),w,b
 26709  006A2C  6F73               	movwf	?_memcmp& (0+255),b
 26710  006A2E  6B74               	clrf	(?_memcmp+1)& (0+255),b
 26711  006A30  A0D8               	btfss	status,0,c
 26712  006A32  0774               	decf	(?_memcmp+1)& (0+255),f,b
 26713  006A34  0012               	return	
 26714  006A36                     l15506:
 26715                           
 26716                           ; BSR set to: 0
 26717  006A36  4B73               	infsnz	memcmp@s1& (0+255),f,b
 26718  006A38  2B74               	incf	(memcmp@s1+1)& (0+255),f,b
 26719  006A3A  4B75               	infsnz	memcmp@s2& (0+255),f,b
 26720  006A3C  2B76               	incf	(memcmp@s2+1)& (0+255),f,b
 26721  006A3E                     l15508:
 26722                           
 26723                           ; BSR set to: 0
 26724  006A3E  0777               	decf	memcmp@n& (0+255),f,b
 26725  006A40  A0D8               	btfss	status,0,c
 26726  006A42  0778               	decf	(memcmp@n+1)& (0+255),f,b
 26727  006A44  2977               	incf	memcmp@n& (0+255),w,b
 26728  006A46  E1DB               	bnz	l15500
 26729  006A48  2978               	incf	(memcmp@n+1)& (0+255),w,b
 26730  006A4A  E1D9               	bnz	l15500
 26731                           
 26732                           ; BSR set to: 0
 26733  006A4C  6B73               	clrf	?_memcmp& (0+255),b
 26734  006A4E  6B74               	clrf	(?_memcmp+1)& (0+255),b
 26735                           
 26736                           ; BSR set to: 0
 26737  006A50  0012               	return		;funcret
 26738  006A52                     __end_of_memcmp:
 26739                           	opt stack 0
 26740                           tblptru	equ	0xFF8
 26741                           tblptrh	equ	0xFF7
 26742                           tblptrl	equ	0xFF6
 26743                           tablat	equ	0xFF5
 26744                           prodh	equ	0xFF4
 26745                           prodl	equ	0xFF3
 26746                           intcon	equ	0xFF2
 26747                           intcon3	equ	0xFF0
 26748                           postinc0	equ	0xFEE
 26749                           plusw0	equ	0xFEB
 26750                           fsr0h	equ	0xFEA
 26751                           fsr0l	equ	0xFE9
 26752                           wreg	equ	0xFE8
 26753                           indf1	equ	0xFE7
 26754                           postinc1	equ	0xFE6
 26755                           postdec1	equ	0xFE5
 26756                           plusw1	equ	0xFE3
 26757                           fsr1h	equ	0xFE2
 26758                           fsr1l	equ	0xFE1
 26759                           indf2	equ	0xFDF
 26760                           postinc2	equ	0xFDE
 26761                           postdec2	equ	0xFDD
 26762                           plusw2	equ	0xFDB
 26763                           fsr2h	equ	0xFDA
 26764                           fsr2l	equ	0xFD9
 26765                           status	equ	0xFD8
 26766                           
 26767 ;; *************** function _MiApp_GetParentAddress *****************
 26768 ;; Defined at:
 26769 ;;		line 286 in file "../src/Bridge.c"
 26770 ;; Parameters:    Size  Location     Type
 26771 ;;		None
 26772 ;; Auto vars:     Size  Location     Type
 26773 ;;		None
 26774 ;; Return value:  Size  Location     Type
 26775 ;;                  2   21[BANK0 ] struct addr_t_def
 26776 ;; Registers used:
 26777 ;;		cstack
 26778 ;; Tracked objects:
 26779 ;;		On entry : D/0
 26780 ;;		On exit  : C/0
 26781 ;;		Unchanged: C/0
 26782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26787 ;;Total ram usage:        2 bytes
 26788 ;; Hardware stack levels used:    1
 26789 ;; Hardware stack levels required when called:    6
 26790 ;; This function calls:
 26791 ;;		_NetworkGetParentAddress
 26792 ;; This function is called by:
 26793 ;;		_main
 26794 ;; This function uses a non-reentrant model
 26795 ;;
 26796                           
 26797                           	psect	text120
 26798  007572                     __ptext120:
 26799                           	opt stack 0
 26800  007572                     _MiApp_GetParentAddress:
 26801                           	opt stack 24
 26802                           
 26803                           ;Bridge.c: 288: return(NetworkGetParentAddress());
 26804                           
 26805                           ; BSR set to: 0
 26806                           ;incstack = 0
 26807  007572  EC0D  F03B         	call	_NetworkGetParentAddress	;wreg free
 26808  007576  C073  F075         	movff	?_NetworkGetParentAddress,?_MiApp_GetParentAddress
 26809  00757A  C074  F076         	movff	?_NetworkGetParentAddress+1,?_MiApp_GetParentAddress+1
 26810  00757E  0012               	return		;funcret
 26811  007580                     __end_of_MiApp_GetParentAddress:
 26812                           	opt stack 0
 26813                           tblptru	equ	0xFF8
 26814                           tblptrh	equ	0xFF7
 26815                           tblptrl	equ	0xFF6
 26816                           tablat	equ	0xFF5
 26817                           prodh	equ	0xFF4
 26818                           prodl	equ	0xFF3
 26819                           intcon	equ	0xFF2
 26820                           intcon3	equ	0xFF0
 26821                           postinc0	equ	0xFEE
 26822                           plusw0	equ	0xFEB
 26823                           fsr0h	equ	0xFEA
 26824                           fsr0l	equ	0xFE9
 26825                           wreg	equ	0xFE8
 26826                           indf1	equ	0xFE7
 26827                           postinc1	equ	0xFE6
 26828                           postdec1	equ	0xFE5
 26829                           plusw1	equ	0xFE3
 26830                           fsr1h	equ	0xFE2
 26831                           fsr1l	equ	0xFE1
 26832                           indf2	equ	0xFDF
 26833                           postinc2	equ	0xFDE
 26834                           postdec2	equ	0xFDD
 26835                           plusw2	equ	0xFDB
 26836                           fsr2h	equ	0xFDA
 26837                           fsr2l	equ	0xFD9
 26838                           status	equ	0xFD8
 26839                           
 26840 ;; *************** function _NetworkGetParentAddress *****************
 26841 ;; Defined at:
 26842 ;;		line 250 in file "../NetworkManager.c"
 26843 ;; Parameters:    Size  Location     Type
 26844 ;;		None
 26845 ;; Auto vars:     Size  Location     Type
 26846 ;;		None
 26847 ;; Return value:  Size  Location     Type
 26848 ;;                  2   19[BANK0 ] struct addr_t_def
 26849 ;; Registers used:
 26850 ;;		None
 26851 ;; Tracked objects:
 26852 ;;		On entry : C/1
 26853 ;;		On exit  : C/0
 26854 ;;		Unchanged: C/0
 26855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26860 ;;Total ram usage:        2 bytes
 26861 ;; Hardware stack levels used:    1
 26862 ;; Hardware stack levels required when called:    5
 26863 ;; This function calls:
 26864 ;;		Nothing
 26865 ;; This function is called by:
 26866 ;;		_MiApp_GetParentAddress
 26867 ;;		_radioReceivedPacket
 26868 ;;		_RouteManagerShouldInsert
 26869 ;;		_le_findWorstNeighborIdx
 26870 ;;		_le_findRandomNeighborIdx
 26871 ;;		_TransportManagerTask
 26872 ;;		_TMSendFormedPacketToRFD
 26873 ;;		_NetworkManagerTask
 26874 ;;		_NetworkPrepareSendPacket
 26875 ;; This function uses a non-reentrant model
 26876 ;;
 26877                           
 26878                           	psect	text121
 26879  00761A                     __ptext121:
 26880                           	opt stack 0
 26881  00761A                     _NetworkGetParentAddress:
 26882                           	opt stack 21
 26883                           
 26884                           ;NetworkManager.c: 252: return(routeInfo.parent);
 26885                           
 26886                           ;incstack = 0
 26887  00761A  C1D9  F073         	movff	_routeInfo,?_NetworkGetParentAddress
 26888  00761E  C1DA  F074         	movff	_routeInfo+1,?_NetworkGetParentAddress+1
 26889  007622  0012               	return		;funcret
 26890  007624                     __end_of_NetworkGetParentAddress:
 26891                           	opt stack 0
 26892                           tblptru	equ	0xFF8
 26893                           tblptrh	equ	0xFF7
 26894                           tblptrl	equ	0xFF6
 26895                           tablat	equ	0xFF5
 26896                           prodh	equ	0xFF4
 26897                           prodl	equ	0xFF3
 26898                           intcon	equ	0xFF2
 26899                           intcon3	equ	0xFF0
 26900                           postinc0	equ	0xFEE
 26901                           plusw0	equ	0xFEB
 26902                           fsr0h	equ	0xFEA
 26903                           fsr0l	equ	0xFE9
 26904                           wreg	equ	0xFE8
 26905                           indf1	equ	0xFE7
 26906                           postinc1	equ	0xFE6
 26907                           postdec1	equ	0xFE5
 26908                           plusw1	equ	0xFE3
 26909                           fsr1h	equ	0xFE2
 26910                           fsr1l	equ	0xFE1
 26911                           indf2	equ	0xFDF
 26912                           postinc2	equ	0xFDE
 26913                           postdec2	equ	0xFDD
 26914                           plusw2	equ	0xFDB
 26915                           fsr2h	equ	0xFDA
 26916                           fsr2l	equ	0xFD9
 26917                           status	equ	0xFD8
 26918                           
 26919 ;; *************** function _MiApp_EstablishConnection *****************
 26920 ;; Defined at:
 26921 ;;		line 186 in file "../src/Bridge.c"
 26922 ;; Parameters:    Size  Location     Type
 26923 ;;  ActiveScanIn    1    wreg     unsigned char 
 26924 ;;  Mode            1   58[BANK0 ] unsigned char 
 26925 ;; Auto vars:     Size  Location     Type
 26926 ;;  ActiveScanIn    1   62[BANK0 ] unsigned char 
 26927 ;;  src             2   60[BANK0 ] struct addr_t_def
 26928 ;;  dev             1   59[BANK0 ] enum E8070
 26929 ;; Return value:  Size  Location     Type
 26930 ;;                  1    wreg      unsigned char 
 26931 ;; Registers used:
 26932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26933 ;; Tracked objects:
 26934 ;;		On entry : F/0
 26935 ;;		On exit  : F/1
 26936 ;;		Unchanged: 0/0
 26937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26938 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26939 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26941 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26942 ;;Total ram usage:        5 bytes
 26943 ;; Hardware stack levels used:    1
 26944 ;; Hardware stack levels required when called:   12
 26945 ;; This function calls:
 26946 ;;		_MiApp_SetAddressPan
 26947 ;;		_MiApp_SetChannel
 26948 ;;		_NetworkInit
 26949 ;;		_memcpy
 26950 ;; This function is called by:
 26951 ;;		_main
 26952 ;; This function uses a non-reentrant model
 26953 ;;
 26954                           
 26955                           	psect	text122
 26956  005CBE                     __ptext122:
 26957                           	opt stack 0
 26958  005CBE                     _MiApp_EstablishConnection:
 26959                           	opt stack 18
 26960                           
 26961                           ;incstack = 0
 26962                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 26963  005CBE  6F9E               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 26964                           
 26965                           ;Bridge.c: 188: addr_t src;
 26966                           ;Bridge.c: 189: DeviceType_t dev=DeviceRFD;
 26967  005CC0  0E01               	movlw	1
 26968  005CC2  0100               	movlb	0	; () banked
 26969  005CC4  6F9B               	movwf	MiApp_EstablishConnection@dev& (0+255),b
 26970                           
 26971                           ; BSR set to: 0
 26972                           ;Bridge.c: 191: memcpy(src.bytes,myLongAddress,2);
 26973  005CC6  0E9C               	movlw	low MiApp_EstablishConnection@src
 26974  005CC8  6F75               	movwf	memcpy@d1& (0+255),b
 26975  005CCA  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 26976  005CCC  0EFA               	movlw	low _myLongAddress
 26977  005CCE  6F77               	movwf	memcpy@s1& (0+255),b
 26978  005CD0  0E01               	movlw	high _myLongAddress
 26979  005CD2  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 26980  005CD4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 26981  005CD6  0E02               	movlw	2
 26982  005CD8  6F79               	movwf	memcpy@n& (0+255),b
 26983  005CDA  EC54  F035         	call	_memcpy	;wreg free
 26984                           
 26985                           ; BSR set to: 0
 26986                           ;Bridge.c: 192: if(ActiveScanIndex<5)
 26987  005CDE  0E05               	movlw	5
 26988  005CE0  619E               	cpfslt	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 26989  005CE2  D027               	goto	l18946
 26990                           
 26991                           ; BSR set to: 0
 26992                           ;Bridge.c: 193: {
 26993                           ;Bridge.c: 194: if(ActiveScanResults[ActiveScanIndex].Flags!=0)
 26994  005CE4  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 26995  005CE6  0D05               	mullw	5
 26996  005CE8  0ED1               	movlw	low (_ActiveScanResults+4)
 26997  005CEA  24F3               	addwf	prodl,w,c
 26998  005CEC  6ED9               	movwf	fsr2l,c
 26999  005CEE  0E03               	movlw	high (_ActiveScanResults+4)
 27000  005CF0  20F4               	addwfc	prodh,w,c
 27001  005CF2  6EDA               	movwf	fsr2h,c
 27002  005CF4  50DF               	movf	indf2,w,c
 27003  005CF6  E01D               	bz	l18946
 27004                           
 27005                           ; BSR set to: 0
 27006                           ;Bridge.c: 195: {
 27007                           ;Bridge.c: 196: MiApp_SetAddressPan(src.bytes, ActiveScanResults[ActiveScanIndex].PANID.
      +                          Val);
 27008  005CF8  0E9C               	movlw	low MiApp_EstablishConnection@src
 27009  005CFA  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
 27010  005CFC  6B84               	clrf	(MiApp_SetAddressPan@address+1)& (0+255),b
 27011  005CFE  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 27012  005D00  0D05               	mullw	5
 27013  005D02  0ECE               	movlw	low (_ActiveScanResults+1)
 27014  005D04  24F3               	addwf	prodl,w,c
 27015  005D06  6ED9               	movwf	fsr2l,c
 27016  005D08  0E03               	movlw	high (_ActiveScanResults+1)
 27017  005D0A  20F4               	addwfc	prodh,w,c
 27018  005D0C  6EDA               	movwf	fsr2h,c
 27019  005D0E  CFDE F085          	movff	postinc2,MiApp_SetAddressPan@panid
 27020  005D12  CFDD F086          	movff	postdec2,MiApp_SetAddressPan@panid+1
 27021  005D16  EC4C  F036         	call	_MiApp_SetAddressPan	;wreg free
 27022                           
 27023                           ;Bridge.c: 197: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 27024  005D1A  0100               	movlb	0	; () banked
 27025  005D1C  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 27026  005D1E  0D05               	mullw	5
 27027  005D20  0ECD               	movlw	low _ActiveScanResults
 27028  005D22  24F3               	addwf	prodl,w,c
 27029  005D24  6ED9               	movwf	fsr2l,c
 27030  005D26  0E03               	movlw	high _ActiveScanResults
 27031  005D28  20F4               	addwfc	prodh,w,c
 27032  005D2A  6EDA               	movwf	fsr2h,c
 27033  005D2C  50DF               	movf	indf2,w,c
 27034  005D2E  ECE4  F03A         	call	_MiApp_SetChannel
 27035  005D32                     l18946:
 27036                           
 27037                           ;Bridge.c: 198: }
 27038                           ;Bridge.c: 199: }
 27039                           ;Bridge.c: 200: if(myDeviceType!=DeviceCoordinator)
 27040  005D32  0101               	movlb	1	; () banked
 27041  005D34  51FC               	movf	_myDeviceType& (0+255),w,b
 27042  005D36  E002               	bz	l545
 27043                           
 27044                           ; BSR set to: 1
 27045                           ;Bridge.c: 201: {
 27046                           ;Bridge.c: 203: dev=myDeviceType;
 27047  005D38  C1FC  F09B         	movff	_myDeviceType,MiApp_EstablishConnection@dev
 27048  005D3C                     l545:
 27049                           
 27050                           ; BSR set to: 1
 27051                           ;Bridge.c: 204: }
 27052                           ;Bridge.c: 206: myDeviceType=dev;
 27053  005D3C  C09B  F1FC         	movff	MiApp_EstablishConnection@dev,_myDeviceType
 27054                           
 27055                           ; BSR set to: 1
 27056                           ;Bridge.c: 207: NetworkInit(src, myPANID, dev);
 27057  005D40  C09C  F093         	movff	MiApp_EstablishConnection@src,NetworkInit@address
 27058  005D44  C09D  F094         	movff	MiApp_EstablishConnection@src+1,NetworkInit@address+1
 27059  005D48  C0EB  F095         	movff	_myPANID,NetworkInit@PANID
 27060  005D4C  C0EC  F096         	movff	_myPANID+1,NetworkInit@PANID+1
 27061  005D50  C09B  F097         	movff	MiApp_EstablishConnection@dev,NetworkInit@dev
 27062  005D54  EF25  F028         	goto	_NetworkInit	;wreg free
 27063  005D58                     __end_of_MiApp_EstablishConnection:
 27064                           	opt stack 0
 27065                           tblptru	equ	0xFF8
 27066                           tblptrh	equ	0xFF7
 27067                           tblptrl	equ	0xFF6
 27068                           tablat	equ	0xFF5
 27069                           prodh	equ	0xFF4
 27070                           prodl	equ	0xFF3
 27071                           intcon	equ	0xFF2
 27072                           intcon3	equ	0xFF0
 27073                           postinc0	equ	0xFEE
 27074                           plusw0	equ	0xFEB
 27075                           fsr0h	equ	0xFEA
 27076                           fsr0l	equ	0xFE9
 27077                           wreg	equ	0xFE8
 27078                           indf1	equ	0xFE7
 27079                           postinc1	equ	0xFE6
 27080                           postdec1	equ	0xFE5
 27081                           plusw1	equ	0xFE3
 27082                           fsr1h	equ	0xFE2
 27083                           fsr1l	equ	0xFE1
 27084                           indf2	equ	0xFDF
 27085                           postinc2	equ	0xFDE
 27086                           postdec2	equ	0xFDD
 27087                           plusw2	equ	0xFDB
 27088                           fsr2h	equ	0xFDA
 27089                           fsr2l	equ	0xFD9
 27090                           status	equ	0xFD8
 27091                           
 27092 ;; *************** function _NetworkInit *****************
 27093 ;; Defined at:
 27094 ;;		line 166 in file "../NetworkManager.c"
 27095 ;; Parameters:    Size  Location     Type
 27096 ;;  address         2   51[BANK0 ] struct addr_t_def
 27097 ;;  PANID           2   53[BANK0 ] unsigned int 
 27098 ;;  dev             1   55[BANK0 ] enum E145
 27099 ;; Auto vars:     Size  Location     Type
 27100 ;;  devPanID        2   56[BANK0 ] unsigned int 
 27101 ;; Return value:  Size  Location     Type
 27102 ;;                  1    wreg      void 
 27103 ;; Registers used:
 27104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27105 ;; Tracked objects:
 27106 ;;		On entry : F/1
 27107 ;;		On exit  : F/1
 27108 ;;		Unchanged: 0/0
 27109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27110 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27113 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27114 ;;Total ram usage:        7 bytes
 27115 ;; Hardware stack levels used:    1
 27116 ;; Hardware stack levels required when called:   11
 27117 ;; This function calls:
 27118 ;;		_BeaconManagerInit
 27119 ;;		_BroadcastManagerInit
 27120 ;;		_CacheInit
 27121 ;;		_DeviceManagerInit
 27122 ;;		_LinkEstimatorInit
 27123 ;;		_NetworkAddressSizeGet
 27124 ;;		_NetworkSetAddressPAN
 27125 ;;		_RouteManagerInit
 27126 ;;		_TransportManagerInit
 27127 ;;		_TunnelManagerInit
 27128 ;;		_krnd
 27129 ;;		_memcpy
 27130 ;;		_memset
 27131 ;; This function is called by:
 27132 ;;		_MiApp_EstablishConnection
 27133 ;; This function uses a non-reentrant model
 27134 ;;
 27135                           
 27136                           	psect	text123
 27137  00504A                     __ptext123:
 27138                           	opt stack 0
 27139  00504A                     _NetworkInit:
 27140                           	opt stack 18
 27141                           
 27142                           ; BSR set to: 1
 27143                           ;NetworkManager.c: 168: uint16_t devPanID;
 27144                           ;NetworkManager.c: 170: DeviceType=dev;
 27145                           
 27146                           ; BSR set to: 1
 27147                           ;incstack = 0
 27148  00504A  C097  F1F6         	movff	NetworkInit@dev,_DeviceType
 27149                           
 27150                           ; BSR set to: 1
 27151                           ;NetworkManager.c: 171: memset(&routeInfo,0x00,sizeof(route_info_t));
 27152  00504E  0ED9               	movlw	low _routeInfo
 27153  005050  0100               	movlb	0	; () banked
 27154  005052  6F73               	movwf	memset@p1& (0+255),b
 27155  005054  0E01               	movlw	high _routeInfo
 27156  005056  6F74               	movwf	(memset@p1+1)& (0+255),b
 27157  005058  6B76               	clrf	(memset@c+1)& (0+255),b
 27158  00505A  6B75               	clrf	memset@c& (0+255),b
 27159  00505C  6B78               	clrf	(memset@n+1)& (0+255),b
 27160  00505E  0E07               	movlw	7
 27161  005060  6F77               	movwf	memset@n& (0+255),b
 27162  005062  EC2F  F039         	call	_memset	;wreg free
 27163                           
 27164                           ; BSR set to: 0
 27165                           ;NetworkManager.c: 173: routeInfo.congested=0;
 27166  005066  0101               	movlb	1	; () banked
 27167  005068  6BDE               	clrf	(_routeInfo+5)& (0+255),b
 27168                           
 27169                           ; BSR set to: 1
 27170                           ;NetworkManager.c: 174: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 27171  00506A  0EF8               	movlw	low _MyAddress
 27172  00506C  0100               	movlb	0	; () banked
 27173  00506E  6F75               	movwf	memcpy@d1& (0+255),b
 27174  005070  0E01               	movlw	high _MyAddress
 27175  005072  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27176  005074  0E93               	movlw	low NetworkInit@address
 27177  005076  6F77               	movwf	memcpy@s1& (0+255),b
 27178  005078  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 27179  00507A  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 27180  00507E  0100               	movlb	0	; () banked
 27181  005080  6F79               	movwf	memcpy@n& (0+255),b
 27182  005082  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27183  005084  EC54  F035         	call	_memcpy	;wreg free
 27184                           
 27185                           ; BSR set to: 0
 27186                           ;NetworkManager.c: 175: if(dev==DeviceCoordinator)
 27187  005088  5197               	movf	NetworkInit@dev& (0+255),w,b
 27188  00508A  E11C               	bnz	l18414
 27189                           
 27190                           ; BSR set to: 0
 27191                           ;NetworkManager.c: 176: {
 27192                           ;NetworkManager.c: 177: CoordinatorAddr=MyAddress;
 27193  00508C  C1F8  F1E6         	movff	_MyAddress,_CoordinatorAddr
 27194  005090  C1F9  F1E7         	movff	_MyAddress+1,_CoordinatorAddr+1
 27195                           
 27196                           ; BSR set to: 0
 27197                           ;NetworkManager.c: 178: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 27198  005094  0ED9               	movlw	low _routeInfo
 27199  005096  6F75               	movwf	memcpy@d1& (0+255),b
 27200  005098  0E01               	movlw	high _routeInfo
 27201  00509A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27202  00509C  0E93               	movlw	low NetworkInit@address
 27203  00509E  6F77               	movwf	memcpy@s1& (0+255),b
 27204  0050A0  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 27205  0050A2  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 27206  0050A6  0100               	movlb	0	; () banked
 27207  0050A8  6F79               	movwf	memcpy@n& (0+255),b
 27208  0050AA  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27209  0050AC  EC54  F035         	call	_memcpy	;wreg free
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;NetworkManager.c: 179: routeInfo.etx=0;
 27213  0050B0  0101               	movlb	1	; () banked
 27214  0050B2  6BDB               	clrf	(_routeInfo+2)& (0+255),b
 27215  0050B4  6BDC               	clrf	(_routeInfo+3)& (0+255),b
 27216                           
 27217                           ; BSR set to: 1
 27218                           ;NetworkManager.c: 180: routeInfo.hasCheckedIn=1;
 27219  0050B6  0E01               	movlw	1
 27220  0050B8  6FDF               	movwf	(_routeInfo+6)& (0+255),b
 27221  0050BA                     l18412:
 27222                           
 27223                           ; BSR set to: 1
 27224                           ;NetworkManager.c: 181: devPanID=PANID;
 27225  0050BA  C095  F098         	movff	NetworkInit@PANID,NetworkInit@devPanID
 27226  0050BE  C096  F099         	movff	NetworkInit@PANID+1,NetworkInit@devPanID+1
 27227                           
 27228                           ;NetworkManager.c: 182: }else
 27229  0050C2  D01F               	goto	l18422
 27230  0050C4                     l18414:
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;NetworkManager.c: 183: {
 27234                           ;NetworkManager.c: 184: memset(CoordinatorAddr.bytes,0xff,NetworkAddressSizeGet());
 27235  0050C4  0EE6               	movlw	low _CoordinatorAddr
 27236  0050C6  6F73               	movwf	memset@p1& (0+255),b
 27237  0050C8  0E01               	movlw	high _CoordinatorAddr
 27238  0050CA  6F74               	movwf	(memset@p1+1)& (0+255),b
 27239  0050CC  6B76               	clrf	(memset@c+1)& (0+255),b
 27240  0050CE  6975               	setf	memset@c& (0+255),b
 27241  0050D0  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 27242  0050D4  0100               	movlb	0	; () banked
 27243  0050D6  6F77               	movwf	memset@n& (0+255),b
 27244  0050D8  6B78               	clrf	(memset@n+1)& (0+255),b
 27245  0050DA  EC2F  F039         	call	_memset	;wreg free
 27246                           
 27247                           ;NetworkManager.c: 185: memset(routeInfo.parent.bytes,0xff,NetworkAddressSizeGet());
 27248  0050DE  0ED9               	movlw	low _routeInfo
 27249  0050E0  6F73               	movwf	memset@p1& (0+255),b
 27250  0050E2  0E01               	movlw	high _routeInfo
 27251  0050E4  6F74               	movwf	(memset@p1+1)& (0+255),b
 27252  0050E6  6B76               	clrf	(memset@c+1)& (0+255),b
 27253  0050E8  6975               	setf	memset@c& (0+255),b
 27254  0050EA  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 27255  0050EE  0100               	movlb	0	; () banked
 27256  0050F0  6F77               	movwf	memset@n& (0+255),b
 27257  0050F2  6B78               	clrf	(memset@n+1)& (0+255),b
 27258  0050F4  EC2F  F039         	call	_memset	;wreg free
 27259                           
 27260                           ; BSR set to: 0
 27261                           ;NetworkManager.c: 186: routeInfo.etx=0xffff;
 27262  0050F8  0101               	movlb	1	; () banked
 27263  0050FA  69DB               	setf	(_routeInfo+2)& (0+255),b
 27264  0050FC  69DC               	setf	(_routeInfo+3)& (0+255),b
 27265                           
 27266                           ; BSR set to: 1
 27267                           ;NetworkManager.c: 187: routeInfo.hasCheckedIn=0;
 27268  0050FE  6BDF               	clrf	(_routeInfo+6)& (0+255),b
 27269  005100  D7DC               	goto	l18412
 27270  005102                     l18422:
 27271                           
 27272                           ; BSR set to: 1
 27273                           ;NetworkManager.c: 189: }
 27274                           ;NetworkManager.c: 190: NetworkSetAddressPAN(address, devPanID);
 27275  005102  C093  F07F         	movff	NetworkInit@address,NetworkSetAddressPAN@address
 27276  005106  C094  F080         	movff	NetworkInit@address+1,NetworkSetAddressPAN@address+1
 27277  00510A  C098  F081         	movff	NetworkInit@devPanID,NetworkSetAddressPAN@PANID
 27278  00510E  C099  F082         	movff	NetworkInit@devPanID+1,NetworkSetAddressPAN@PANID+1
 27279  005112  EC29  F035         	call	_NetworkSetAddressPAN	;wreg free
 27280                           
 27281                           ;NetworkManager.c: 191: DeviceManagerInit();
 27282  005116  EC2C  F03A         	call	_DeviceManagerInit	;wreg free
 27283                           
 27284                           ; BSR set to: 0
 27285                           ;NetworkManager.c: 192: LinkEstimatorInit();
 27286  00511A  ECDE  F03A         	call	_LinkEstimatorInit	;wreg free
 27287                           
 27288                           ; BSR set to: 1
 27289                           ;NetworkManager.c: 193: BeaconManagerInit();
 27290  00511E  ECF1  F039         	call	_BeaconManagerInit	;wreg free
 27291                           
 27292                           ; BSR set to: 1
 27293                           ;NetworkManager.c: 194: RouteManagerInit();
 27294  005122  ECEB  F038         	call	_RouteManagerInit	;wreg free
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;NetworkManager.c: 195: BroadcastManagerInit();
 27298  005126  EC44  F03A         	call	_BroadcastManagerInit	;wreg free
 27299                           
 27300                           ; BSR set to: 0
 27301                           ;NetworkManager.c: 196: TransportManagerInit();
 27302  00512A  EC73  F03A         	call	_TransportManagerInit	;wreg free
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;NetworkManager.c: 197: CacheInit();
 27306  00512E  EC38  F03A         	call	_CacheInit	;wreg free
 27307                           
 27308                           ; BSR set to: 0
 27309                           ;NetworkManager.c: 198: TunnelManagerInit();
 27310  005132  EC68  F03A         	call	_TunnelManagerInit	;wreg free
 27311                           
 27312                           ; BSR set to: 0
 27313                           ;NetworkManager.c: 199: NetSeq=krnd();
 27314  005136  ECEF  F01E         	call	_krnd	;wreg free
 27315  00513A  5173               	movf	?_krnd& (0+255),w,b
 27316  00513C  0101               	movlb	1	; () banked
 27317  00513E  6FCE               	movwf	_NetSeq& (0+255),b
 27318                           
 27319                           ; BSR set to: 1
 27320                           ;NetworkManager.c: 200: nState=netPOR;
 27321  005140  6BD5               	clrf	_nState& (0+255),b
 27322                           
 27323                           ; BSR set to: 1
 27324  005142  0012               	return		;funcret
 27325  005144                     __end_of_NetworkInit:
 27326                           	opt stack 0
 27327                           tblptru	equ	0xFF8
 27328                           tblptrh	equ	0xFF7
 27329                           tblptrl	equ	0xFF6
 27330                           tablat	equ	0xFF5
 27331                           prodh	equ	0xFF4
 27332                           prodl	equ	0xFF3
 27333                           intcon	equ	0xFF2
 27334                           intcon3	equ	0xFF0
 27335                           postinc0	equ	0xFEE
 27336                           plusw0	equ	0xFEB
 27337                           fsr0h	equ	0xFEA
 27338                           fsr0l	equ	0xFE9
 27339                           wreg	equ	0xFE8
 27340                           indf1	equ	0xFE7
 27341                           postinc1	equ	0xFE6
 27342                           postdec1	equ	0xFE5
 27343                           plusw1	equ	0xFE3
 27344                           fsr1h	equ	0xFE2
 27345                           fsr1l	equ	0xFE1
 27346                           indf2	equ	0xFDF
 27347                           postinc2	equ	0xFDE
 27348                           postdec2	equ	0xFDD
 27349                           plusw2	equ	0xFDB
 27350                           fsr2h	equ	0xFDA
 27351                           fsr2l	equ	0xFD9
 27352                           status	equ	0xFD8
 27353                           
 27354 ;; *************** function _TunnelManagerInit *****************
 27355 ;; Defined at:
 27356 ;;		line 112 in file "../TunnelManager.c"
 27357 ;; Parameters:    Size  Location     Type
 27358 ;;		None
 27359 ;; Auto vars:     Size  Location     Type
 27360 ;;		None
 27361 ;; Return value:  Size  Location     Type
 27362 ;;                  1    wreg      void 
 27363 ;; Registers used:
 27364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27365 ;; Tracked objects:
 27366 ;;		On entry : F/0
 27367 ;;		On exit  : F/0
 27368 ;;		Unchanged: 0/0
 27369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27374 ;;Total ram usage:        0 bytes
 27375 ;; Hardware stack levels used:    1
 27376 ;; Hardware stack levels required when called:    6
 27377 ;; This function calls:
 27378 ;;		_memset
 27379 ;; This function is called by:
 27380 ;;		_NetworkInit
 27381 ;; This function uses a non-reentrant model
 27382 ;;
 27383                           
 27384                           	psect	text124
 27385  0074D0                     __ptext124:
 27386                           	opt stack 0
 27387  0074D0                     _TunnelManagerInit:
 27388                           	opt stack 22
 27389                           
 27390                           ; BSR set to: 0
 27391                           ;TunnelManager.c: 114: memset(tunnels,0x00,sizeof(tunnels));
 27392                           
 27393                           ; BSR set to: 1
 27394                           ;incstack = 0
 27395  0074D0  0E00               	movlw	low _tunnels
 27396  0074D2  6F73               	movwf	memset@p1& (0+255),b
 27397  0074D4  0E04               	movlw	high _tunnels
 27398  0074D6  6F74               	movwf	(memset@p1+1)& (0+255),b
 27399  0074D8  6B76               	clrf	(memset@c+1)& (0+255),b
 27400  0074DA  6B75               	clrf	memset@c& (0+255),b
 27401  0074DC  6B78               	clrf	(memset@n+1)& (0+255),b
 27402  0074DE  0E78               	movlw	120
 27403  0074E0  6F77               	movwf	memset@n& (0+255),b
 27404  0074E2  EF2F  F039         	goto	_memset	;wreg free
 27405  0074E6                     __end_of_TunnelManagerInit:
 27406                           	opt stack 0
 27407                           tblptru	equ	0xFF8
 27408                           tblptrh	equ	0xFF7
 27409                           tblptrl	equ	0xFF6
 27410                           tablat	equ	0xFF5
 27411                           prodh	equ	0xFF4
 27412                           prodl	equ	0xFF3
 27413                           intcon	equ	0xFF2
 27414                           intcon3	equ	0xFF0
 27415                           postinc0	equ	0xFEE
 27416                           plusw0	equ	0xFEB
 27417                           fsr0h	equ	0xFEA
 27418                           fsr0l	equ	0xFE9
 27419                           wreg	equ	0xFE8
 27420                           indf1	equ	0xFE7
 27421                           postinc1	equ	0xFE6
 27422                           postdec1	equ	0xFE5
 27423                           plusw1	equ	0xFE3
 27424                           fsr1h	equ	0xFE2
 27425                           fsr1l	equ	0xFE1
 27426                           indf2	equ	0xFDF
 27427                           postinc2	equ	0xFDE
 27428                           postdec2	equ	0xFDD
 27429                           plusw2	equ	0xFDB
 27430                           fsr2h	equ	0xFDA
 27431                           fsr2l	equ	0xFD9
 27432                           status	equ	0xFD8
 27433                           
 27434 ;; *************** function _TransportManagerInit *****************
 27435 ;; Defined at:
 27436 ;;		line 54 in file "../TransportManager.c"
 27437 ;; Parameters:    Size  Location     Type
 27438 ;;		None
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;		None
 27441 ;; Return value:  Size  Location     Type
 27442 ;;                  1    wreg      void 
 27443 ;; Registers used:
 27444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27445 ;; Tracked objects:
 27446 ;;		On entry : F/0
 27447 ;;		On exit  : F/0
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;Total ram usage:        0 bytes
 27455 ;; Hardware stack levels used:    1
 27456 ;; Hardware stack levels required when called:    6
 27457 ;; This function calls:
 27458 ;;		_memset
 27459 ;; This function is called by:
 27460 ;;		_NetworkInit
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text125
 27465  0074E6                     __ptext125:
 27466                           	opt stack 0
 27467  0074E6                     _TransportManagerInit:
 27468                           	opt stack 22
 27469                           
 27470                           ; BSR set to: 0
 27471                           ;TransportManager.c: 56: memset(TMQ,0x00,sizeof(TMQ));
 27472                           
 27473                           ; BSR set to: 0
 27474                           ;incstack = 0
 27475  0074E6  0E00               	movlw	low _TMQ
 27476  0074E8  6F73               	movwf	memset@p1& (0+255),b
 27477  0074EA  0E06               	movlw	high _TMQ
 27478  0074EC  6F74               	movwf	(memset@p1+1)& (0+255),b
 27479  0074EE  6B76               	clrf	(memset@c+1)& (0+255),b
 27480  0074F0  6B75               	clrf	memset@c& (0+255),b
 27481  0074F2  6B78               	clrf	(memset@n+1)& (0+255),b
 27482  0074F4  0E98               	movlw	152
 27483  0074F6  6F77               	movwf	memset@n& (0+255),b
 27484  0074F8  EF2F  F039         	goto	_memset	;wreg free
 27485  0074FC                     __end_of_TransportManagerInit:
 27486                           	opt stack 0
 27487                           tblptru	equ	0xFF8
 27488                           tblptrh	equ	0xFF7
 27489                           tblptrl	equ	0xFF6
 27490                           tablat	equ	0xFF5
 27491                           prodh	equ	0xFF4
 27492                           prodl	equ	0xFF3
 27493                           intcon	equ	0xFF2
 27494                           intcon3	equ	0xFF0
 27495                           postinc0	equ	0xFEE
 27496                           plusw0	equ	0xFEB
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postinc1	equ	0xFE6
 27502                           postdec1	equ	0xFE5
 27503                           plusw1	equ	0xFE3
 27504                           fsr1h	equ	0xFE2
 27505                           fsr1l	equ	0xFE1
 27506                           indf2	equ	0xFDF
 27507                           postinc2	equ	0xFDE
 27508                           postdec2	equ	0xFDD
 27509                           plusw2	equ	0xFDB
 27510                           fsr2h	equ	0xFDA
 27511                           fsr2l	equ	0xFD9
 27512                           status	equ	0xFD8
 27513                           
 27514 ;; *************** function _RouteManagerInit *****************
 27515 ;; Defined at:
 27516 ;;		line 29 in file "../RouteManager.c"
 27517 ;; Parameters:    Size  Location     Type
 27518 ;;		None
 27519 ;; Auto vars:     Size  Location     Type
 27520 ;;		None
 27521 ;; Return value:  Size  Location     Type
 27522 ;;                  1    wreg      void 
 27523 ;; Registers used:
 27524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27525 ;; Tracked objects:
 27526 ;;		On entry : F/1
 27527 ;;		On exit  : F/0
 27528 ;;		Unchanged: 0/0
 27529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27534 ;;Total ram usage:        0 bytes
 27535 ;; Hardware stack levels used:    1
 27536 ;; Hardware stack levels required when called:    8
 27537 ;; This function calls:
 27538 ;;		_MSTickGet
 27539 ;;		_memset
 27540 ;; This function is called by:
 27541 ;;		_NetworkInit
 27542 ;; This function uses a non-reentrant model
 27543 ;;
 27544                           
 27545                           	psect	text126
 27546  0071D6                     __ptext126:
 27547                           	opt stack 0
 27548  0071D6                     _RouteManagerInit:
 27549                           	opt stack 20
 27550                           
 27551                           ; BSR set to: 1
 27552                           ;RouteManager.c: 31: routingTableActive=0;
 27553                           
 27554                           ; BSR set to: 0
 27555                           ;incstack = 0
 27556  0071D6  0100               	movlb	0	; () banked
 27557  0071D8  6BE7               	clrf	_routingTableActive& (0+255),b
 27558  0071DA  6BE8               	clrf	(_routingTableActive+1)& (0+255),b
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;RouteManager.c: 32: memset(&NewBestParent,0xff,sizeof(NewBestParent));
 27562  0071DC  0E5D               	movlw	low _NewBestParent
 27563  0071DE  6F73               	movwf	memset@p1& (0+255),b
 27564  0071E0  0E02               	movlw	high _NewBestParent
 27565  0071E2  6F74               	movwf	(memset@p1+1)& (0+255),b
 27566  0071E4  6B76               	clrf	(memset@c+1)& (0+255),b
 27567  0071E6  6975               	setf	memset@c& (0+255),b
 27568  0071E8  6B78               	clrf	(memset@n+1)& (0+255),b
 27569  0071EA  0E02               	movlw	2
 27570  0071EC  6F77               	movwf	memset@n& (0+255),b
 27571  0071EE  EC2F  F039         	call	_memset	;wreg free
 27572                           
 27573                           ; BSR set to: 0
 27574                           ;RouteManager.c: 33: tRouteMgr=MSTickGet();
 27575  0071F2  EC4F  F038         	call	_MSTickGet	;wreg free
 27576  0071F6  EE22  F01C         	lfsr	2,_tRouteMgr
 27577  0071FA  0E07               	movlw	7
 27578  0071FC                     u22311:
 27579  0071FC  CFEB FFDB          	movff	plusw0,plusw2
 27580  007200  06E8               	decf	wreg,f,c
 27581  007202  E2FC               	bc	u22311
 27582                           
 27583                           ; BSR set to: 0
 27584  007204  0012               	return		;funcret
 27585  007206                     __end_of_RouteManagerInit:
 27586                           	opt stack 0
 27587                           tblptru	equ	0xFF8
 27588                           tblptrh	equ	0xFF7
 27589                           tblptrl	equ	0xFF6
 27590                           tablat	equ	0xFF5
 27591                           prodh	equ	0xFF4
 27592                           prodl	equ	0xFF3
 27593                           intcon	equ	0xFF2
 27594                           intcon3	equ	0xFF0
 27595                           postinc0	equ	0xFEE
 27596                           plusw0	equ	0xFEB
 27597                           fsr0h	equ	0xFEA
 27598                           fsr0l	equ	0xFE9
 27599                           wreg	equ	0xFE8
 27600                           indf1	equ	0xFE7
 27601                           postinc1	equ	0xFE6
 27602                           postdec1	equ	0xFE5
 27603                           plusw1	equ	0xFE3
 27604                           fsr1h	equ	0xFE2
 27605                           fsr1l	equ	0xFE1
 27606                           indf2	equ	0xFDF
 27607                           postinc2	equ	0xFDE
 27608                           postdec2	equ	0xFDD
 27609                           plusw2	equ	0xFDB
 27610                           fsr2h	equ	0xFDA
 27611                           fsr2l	equ	0xFD9
 27612                           status	equ	0xFD8
 27613                           
 27614 ;; *************** function _LinkEstimatorInit *****************
 27615 ;; Defined at:
 27616 ;;		line 46 in file "../LinkEstimator.c"
 27617 ;; Parameters:    Size  Location     Type
 27618 ;;		None
 27619 ;; Auto vars:     Size  Location     Type
 27620 ;;		None
 27621 ;; Return value:  Size  Location     Type
 27622 ;;                  1    wreg      void 
 27623 ;; Registers used:
 27624 ;;		None
 27625 ;; Tracked objects:
 27626 ;;		On entry : F/0
 27627 ;;		On exit  : F/1
 27628 ;;		Unchanged: 0/0
 27629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27634 ;;Total ram usage:        0 bytes
 27635 ;; Hardware stack levels used:    1
 27636 ;; Hardware stack levels required when called:    5
 27637 ;; This function calls:
 27638 ;;		Nothing
 27639 ;; This function is called by:
 27640 ;;		_NetworkInit
 27641 ;; This function uses a non-reentrant model
 27642 ;;
 27643                           
 27644                           	psect	text127
 27645  0075BC                     __ptext127:
 27646                           	opt stack 0
 27647  0075BC                     _LinkEstimatorInit:
 27648                           	opt stack 23
 27649                           
 27650                           ; BSR set to: 0
 27651                           ;LinkEstimator.c: 48: prevSentIdx=0;
 27652                           
 27653                           ; BSR set to: 0
 27654                           ;incstack = 0
 27655  0075BC  0101               	movlb	1	; () banked
 27656  0075BE  6BCA               	clrf	_prevSentIdx& (0+255),b
 27657  0075C0  6BCB               	clrf	(_prevSentIdx+1)& (0+255),b
 27658                           
 27659                           ;LinkEstimator.c: 49: linkEstSeq=0;
 27660  0075C2  6BC8               	clrf	_linkEstSeq& (0+255),b
 27661  0075C4  6BC9               	clrf	(_linkEstSeq+1)& (0+255),b
 27662                           
 27663                           ; BSR set to: 1
 27664  0075C6  0012               	return		;funcret
 27665  0075C8                     __end_of_LinkEstimatorInit:
 27666                           	opt stack 0
 27667                           tblptru	equ	0xFF8
 27668                           tblptrh	equ	0xFF7
 27669                           tblptrl	equ	0xFF6
 27670                           tablat	equ	0xFF5
 27671                           prodh	equ	0xFF4
 27672                           prodl	equ	0xFF3
 27673                           intcon	equ	0xFF2
 27674                           intcon3	equ	0xFF0
 27675                           postinc0	equ	0xFEE
 27676                           plusw0	equ	0xFEB
 27677                           fsr0h	equ	0xFEA
 27678                           fsr0l	equ	0xFE9
 27679                           wreg	equ	0xFE8
 27680                           indf1	equ	0xFE7
 27681                           postinc1	equ	0xFE6
 27682                           postdec1	equ	0xFE5
 27683                           plusw1	equ	0xFE3
 27684                           fsr1h	equ	0xFE2
 27685                           fsr1l	equ	0xFE1
 27686                           indf2	equ	0xFDF
 27687                           postinc2	equ	0xFDE
 27688                           postdec2	equ	0xFDD
 27689                           plusw2	equ	0xFDB
 27690                           fsr2h	equ	0xFDA
 27691                           fsr2l	equ	0xFD9
 27692                           status	equ	0xFD8
 27693                           
 27694 ;; *************** function _DeviceManagerInit *****************
 27695 ;; Defined at:
 27696 ;;		line 86 in file "../DeviceManager.c"
 27697 ;; Parameters:    Size  Location     Type
 27698 ;;		None
 27699 ;; Auto vars:     Size  Location     Type
 27700 ;;		None
 27701 ;; Return value:  Size  Location     Type
 27702 ;;                  1    wreg      void 
 27703 ;; Registers used:
 27704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27705 ;; Tracked objects:
 27706 ;;		On entry : E/1
 27707 ;;		On exit  : F/0
 27708 ;;		Unchanged: 0/0
 27709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27714 ;;Total ram usage:        0 bytes
 27715 ;; Hardware stack levels used:    1
 27716 ;; Hardware stack levels required when called:    6
 27717 ;; This function calls:
 27718 ;;		_memset
 27719 ;; This function is called by:
 27720 ;;		_NetworkInit
 27721 ;; This function uses a non-reentrant model
 27722 ;;
 27723                           
 27724                           	psect	text128
 27725  007458                     __ptext128:
 27726                           	opt stack 0
 27727  007458                     _DeviceManagerInit:
 27728                           	opt stack 22
 27729                           
 27730                           ;DeviceManager.c: 88: memset(list,0xff,sizeof(list));
 27731                           
 27732                           ; BSR set to: 1
 27733                           ;incstack = 0
 27734  007458  0E00               	movlw	low _list
 27735  00745A  0100               	movlb	0	; () banked
 27736  00745C  6F73               	movwf	memset@p1& (0+255),b
 27737  00745E  0E08               	movlw	high _list
 27738  007460  6F74               	movwf	(memset@p1+1)& (0+255),b
 27739  007462  6B76               	clrf	(memset@c+1)& (0+255),b
 27740  007464  6975               	setf	memset@c& (0+255),b
 27741  007466  6B78               	clrf	(memset@n+1)& (0+255),b
 27742  007468  0EDC               	movlw	220
 27743  00746A  6F77               	movwf	memset@n& (0+255),b
 27744  00746C  EF2F  F039         	goto	_memset	;wreg free
 27745  007470                     __end_of_DeviceManagerInit:
 27746                           	opt stack 0
 27747                           tblptru	equ	0xFF8
 27748                           tblptrh	equ	0xFF7
 27749                           tblptrl	equ	0xFF6
 27750                           tablat	equ	0xFF5
 27751                           prodh	equ	0xFF4
 27752                           prodl	equ	0xFF3
 27753                           intcon	equ	0xFF2
 27754                           intcon3	equ	0xFF0
 27755                           postinc0	equ	0xFEE
 27756                           plusw0	equ	0xFEB
 27757                           fsr0h	equ	0xFEA
 27758                           fsr0l	equ	0xFE9
 27759                           wreg	equ	0xFE8
 27760                           indf1	equ	0xFE7
 27761                           postinc1	equ	0xFE6
 27762                           postdec1	equ	0xFE5
 27763                           plusw1	equ	0xFE3
 27764                           fsr1h	equ	0xFE2
 27765                           fsr1l	equ	0xFE1
 27766                           indf2	equ	0xFDF
 27767                           postinc2	equ	0xFDE
 27768                           postdec2	equ	0xFDD
 27769                           plusw2	equ	0xFDB
 27770                           fsr2h	equ	0xFDA
 27771                           fsr2l	equ	0xFD9
 27772                           status	equ	0xFD8
 27773                           
 27774 ;; *************** function _CacheInit *****************
 27775 ;; Defined at:
 27776 ;;		line 72 in file "../Cache.c"
 27777 ;; Parameters:    Size  Location     Type
 27778 ;;		None
 27779 ;; Auto vars:     Size  Location     Type
 27780 ;;		None
 27781 ;; Return value:  Size  Location     Type
 27782 ;;                  1    wreg      void 
 27783 ;; Registers used:
 27784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27785 ;; Tracked objects:
 27786 ;;		On entry : F/0
 27787 ;;		On exit  : F/0
 27788 ;;		Unchanged: 0/0
 27789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27794 ;;Total ram usage:        0 bytes
 27795 ;; Hardware stack levels used:    1
 27796 ;; Hardware stack levels required when called:    6
 27797 ;; This function calls:
 27798 ;;		_memset
 27799 ;; This function is called by:
 27800 ;;		_NetworkInit
 27801 ;; This function uses a non-reentrant model
 27802 ;;
 27803                           
 27804                           	psect	text129
 27805  007470                     __ptext129:
 27806                           	opt stack 0
 27807  007470                     _CacheInit:
 27808                           	opt stack 22
 27809                           
 27810                           ; BSR set to: 0
 27811                           ;Cache.c: 74: memset(hc_table,0x00,sizeof(hc_table));
 27812                           
 27813                           ; BSR set to: 0
 27814                           ;incstack = 0
 27815  007470  0E98               	movlw	low _hc_table
 27816  007472  6F73               	movwf	memset@p1& (0+255),b
 27817  007474  0E0A               	movlw	high _hc_table
 27818  007476  6F74               	movwf	(memset@p1+1)& (0+255),b
 27819  007478  6B76               	clrf	(memset@c+1)& (0+255),b
 27820  00747A  6B75               	clrf	memset@c& (0+255),b
 27821  00747C  0E01               	movlw	1
 27822  00747E  6F78               	movwf	(memset@n+1)& (0+255),b
 27823  007480  0E68               	movlw	104
 27824  007482  6F77               	movwf	memset@n& (0+255),b
 27825  007484  EF2F  F039         	goto	_memset	;wreg free
 27826  007488                     __end_of_CacheInit:
 27827                           	opt stack 0
 27828                           tblptru	equ	0xFF8
 27829                           tblptrh	equ	0xFF7
 27830                           tblptrl	equ	0xFF6
 27831                           tablat	equ	0xFF5
 27832                           prodh	equ	0xFF4
 27833                           prodl	equ	0xFF3
 27834                           intcon	equ	0xFF2
 27835                           intcon3	equ	0xFF0
 27836                           postinc0	equ	0xFEE
 27837                           plusw0	equ	0xFEB
 27838                           fsr0h	equ	0xFEA
 27839                           fsr0l	equ	0xFE9
 27840                           wreg	equ	0xFE8
 27841                           indf1	equ	0xFE7
 27842                           postinc1	equ	0xFE6
 27843                           postdec1	equ	0xFE5
 27844                           plusw1	equ	0xFE3
 27845                           fsr1h	equ	0xFE2
 27846                           fsr1l	equ	0xFE1
 27847                           indf2	equ	0xFDF
 27848                           postinc2	equ	0xFDE
 27849                           postdec2	equ	0xFDD
 27850                           plusw2	equ	0xFDB
 27851                           fsr2h	equ	0xFDA
 27852                           fsr2l	equ	0xFD9
 27853                           status	equ	0xFD8
 27854                           
 27855 ;; *************** function _BroadcastManagerInit *****************
 27856 ;; Defined at:
 27857 ;;		line 24 in file "../BroadcastManager.c"
 27858 ;; Parameters:    Size  Location     Type
 27859 ;;		None
 27860 ;; Auto vars:     Size  Location     Type
 27861 ;;		None
 27862 ;; Return value:  Size  Location     Type
 27863 ;;                  1    wreg      void 
 27864 ;; Registers used:
 27865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27866 ;; Tracked objects:
 27867 ;;		On entry : F/0
 27868 ;;		On exit  : F/0
 27869 ;;		Unchanged: 0/0
 27870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27875 ;;Total ram usage:        0 bytes
 27876 ;; Hardware stack levels used:    1
 27877 ;; Hardware stack levels required when called:    6
 27878 ;; This function calls:
 27879 ;;		_memset
 27880 ;; This function is called by:
 27881 ;;		_NetworkInit
 27882 ;; This function uses a non-reentrant model
 27883 ;;
 27884                           
 27885                           	psect	text130
 27886  007488                     __ptext130:
 27887                           	opt stack 0
 27888  007488                     _BroadcastManagerInit:
 27889                           	opt stack 22
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;BroadcastManager.c: 26: memset((uint8_t*)RbcQ,0x00,sizeof(RbcQ));
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;incstack = 0
 27896  007488  0EDC               	movlw	low _RbcQ
 27897  00748A  6F73               	movwf	memset@p1& (0+255),b
 27898  00748C  0E08               	movlw	high _RbcQ
 27899  00748E  6F74               	movwf	(memset@p1+1)& (0+255),b
 27900  007490  6B76               	clrf	(memset@c+1)& (0+255),b
 27901  007492  6B75               	clrf	memset@c& (0+255),b
 27902  007494  0E01               	movlw	1
 27903  007496  6F78               	movwf	(memset@n+1)& (0+255),b
 27904  007498  0EBC               	movlw	188
 27905  00749A  6F77               	movwf	memset@n& (0+255),b
 27906  00749C  EF2F  F039         	goto	_memset	;wreg free
 27907  0074A0                     __end_of_BroadcastManagerInit:
 27908                           	opt stack 0
 27909                           tblptru	equ	0xFF8
 27910                           tblptrh	equ	0xFF7
 27911                           tblptrl	equ	0xFF6
 27912                           tablat	equ	0xFF5
 27913                           prodh	equ	0xFF4
 27914                           prodl	equ	0xFF3
 27915                           intcon	equ	0xFF2
 27916                           intcon3	equ	0xFF0
 27917                           postinc0	equ	0xFEE
 27918                           plusw0	equ	0xFEB
 27919                           fsr0h	equ	0xFEA
 27920                           fsr0l	equ	0xFE9
 27921                           wreg	equ	0xFE8
 27922                           indf1	equ	0xFE7
 27923                           postinc1	equ	0xFE6
 27924                           postdec1	equ	0xFE5
 27925                           plusw1	equ	0xFE3
 27926                           fsr1h	equ	0xFE2
 27927                           fsr1l	equ	0xFE1
 27928                           indf2	equ	0xFDF
 27929                           postinc2	equ	0xFDE
 27930                           postdec2	equ	0xFDD
 27931                           plusw2	equ	0xFDB
 27932                           fsr2h	equ	0xFDA
 27933                           fsr2l	equ	0xFD9
 27934                           status	equ	0xFD8
 27935                           
 27936 ;; *************** function _memset *****************
 27937 ;; Defined at:
 27938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 27939 ;; Parameters:    Size  Location     Type
 27940 ;;  p1              2   19[BANK0 ] PTR void 
 27941 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 27942 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 27943 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 27944 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 27945 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 27946 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), ConnectionTable(55), radioBroadcast@addr(2), 
 27947 ;;		 -> NULL(0), main@addr(2), rxMessage(10), LCDText(33), 
 27948 ;;  c               2   21[BANK0 ] int 
 27949 ;;  n               2   23[BANK0 ] unsigned int 
 27950 ;; Auto vars:     Size  Location     Type
 27951 ;;  p               2   25[BANK0 ] PTR unsigned char 
 27952 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 27953 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 27954 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 27955 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 27956 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 27957 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), ConnectionTable(55), radioBroadcast@addr(2), 
 27958 ;;		 -> NULL(0), main@addr(2), rxMessage(10), LCDText(33), 
 27959 ;; Return value:  Size  Location     Type
 27960 ;;                  2   19[BANK0 ] PTR void 
 27961 ;; Registers used:
 27962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27963 ;; Tracked objects:
 27964 ;;		On entry : F/0
 27965 ;;		On exit  : F/0
 27966 ;;		Unchanged: 0/0
 27967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27968 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27971 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27972 ;;Total ram usage:        8 bytes
 27973 ;; Hardware stack levels used:    1
 27974 ;; Hardware stack levels required when called:    5
 27975 ;; This function calls:
 27976 ;;		Nothing
 27977 ;; This function is called by:
 27978 ;;		_main
 27979 ;;		_radioBroadcast
 27980 ;;		_MiApp_ProtocolInit
 27981 ;;		_NetworkDataArrivedEvent
 27982 ;;		_AddNodeToNetworkTable
 27983 ;;		_MiApp_SearchConnection
 27984 ;;		_RouteManagerInit
 27985 ;;		_routeInfoInit
 27986 ;;		_RoutingTableFindDeviceOrParent
 27987 ;;		_networkSendBeacon
 27988 ;;		_BroadcastManagerInit
 27989 ;;		_BroadcastManagerTask
 27990 ;;		_TunnelManagerSetTunnel
 27991 ;;		_TunnelManagerGetTunnel
 27992 ;;		_TunnelManagerInvalidateTunnel
 27993 ;;		_TunnelManagerInit
 27994 ;;		_isKnownPacket
 27995 ;;		_CacheInit
 27996 ;;		_TransportManagerInit
 27997 ;;		_NetworkInit
 27998 ;;		_CoordinatorGenericAddress
 27999 ;;		_NetworkSendDiscoverRequest
 28000 ;;		_NetworkSendDiscoverResponse
 28001 ;;		_IsNetworkDevice
 28002 ;;		_DeviceManagerInit
 28003 ;;		_NetworkBroadcastData
 28004 ;; This function uses a non-reentrant model
 28005 ;;
 28006                           
 28007                           	psect	text131
 28008  00725E                     __ptext131:
 28009                           	opt stack 0
 28010  00725E                     _memset:
 28011                           	opt stack 25
 28012                           
 28013                           ; BSR set to: 0
 28014                           
 28015                           ; BSR set to: 0
 28016                           ;incstack = 0
 28017  00725E  C073  F079         	movff	memset@p1,memset@p
 28018  007262  C074  F07A         	movff	memset@p1+1,memset@p+1
 28019  007266  D008               	goto	l15710
 28020  007268                     l15706:
 28021                           
 28022                           ; BSR set to: 0
 28023  007268  C079  FFD9         	movff	memset@p,fsr2l
 28024  00726C  C07A  FFDA         	movff	memset@p+1,fsr2h
 28025  007270  C075  FFDF         	movff	memset@c,indf2
 28026                           
 28027                           ; BSR set to: 0
 28028  007274  4B79               	infsnz	memset@p& (0+255),f,b
 28029  007276  2B7A               	incf	(memset@p+1)& (0+255),f,b
 28030  007278                     l15710:
 28031                           
 28032                           ; BSR set to: 0
 28033  007278  0777               	decf	memset@n& (0+255),f,b
 28034  00727A  A0D8               	btfss	status,0,c
 28035  00727C  0778               	decf	(memset@n+1)& (0+255),f,b
 28036  00727E  2977               	incf	memset@n& (0+255),w,b
 28037  007280  E1F3               	bnz	l15706
 28038  007282  2978               	incf	(memset@n+1)& (0+255),w,b
 28039  007284  E1F1               	bnz	l15706
 28040                           
 28041                           ; BSR set to: 0
 28042  007286  0012               	return		;funcret
 28043  007288                     __end_of_memset:
 28044                           	opt stack 0
 28045                           tblptru	equ	0xFF8
 28046                           tblptrh	equ	0xFF7
 28047                           tblptrl	equ	0xFF6
 28048                           tablat	equ	0xFF5
 28049                           prodh	equ	0xFF4
 28050                           prodl	equ	0xFF3
 28051                           intcon	equ	0xFF2
 28052                           intcon3	equ	0xFF0
 28053                           postinc0	equ	0xFEE
 28054                           plusw0	equ	0xFEB
 28055                           fsr0h	equ	0xFEA
 28056                           fsr0l	equ	0xFE9
 28057                           wreg	equ	0xFE8
 28058                           indf1	equ	0xFE7
 28059                           postinc1	equ	0xFE6
 28060                           postdec1	equ	0xFE5
 28061                           plusw1	equ	0xFE3
 28062                           fsr1h	equ	0xFE2
 28063                           fsr1l	equ	0xFE1
 28064                           indf2	equ	0xFDF
 28065                           postinc2	equ	0xFDE
 28066                           postdec2	equ	0xFDD
 28067                           plusw2	equ	0xFDB
 28068                           fsr2h	equ	0xFDA
 28069                           fsr2l	equ	0xFD9
 28070                           status	equ	0xFD8
 28071                           
 28072 ;; *************** function _BeaconManagerInit *****************
 28073 ;; Defined at:
 28074 ;;		line 37 in file "../BeaconManager.c"
 28075 ;; Parameters:    Size  Location     Type
 28076 ;;		None
 28077 ;; Auto vars:     Size  Location     Type
 28078 ;;		None
 28079 ;; Return value:  Size  Location     Type
 28080 ;;                  1    wreg      void 
 28081 ;; Registers used:
 28082 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28083 ;; Tracked objects:
 28084 ;;		On entry : F/1
 28085 ;;		On exit  : F/1
 28086 ;;		Unchanged: 0/0
 28087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28092 ;;Total ram usage:        0 bytes
 28093 ;; Hardware stack levels used:    1
 28094 ;; Hardware stack levels required when called:   10
 28095 ;; This function calls:
 28096 ;;		_krnd
 28097 ;;		_netResetInterval
 28098 ;; This function is called by:
 28099 ;;		_NetworkInit
 28100 ;; This function uses a non-reentrant model
 28101 ;;
 28102                           
 28103                           	psect	text132
 28104  0073E2                     __ptext132:
 28105                           	opt stack 0
 28106  0073E2                     _BeaconManagerInit:
 28107                           	opt stack 18
 28108                           
 28109                           ; BSR set to: 1
 28110                           ;BeaconManager.c: 39: intervalDelay=0;
 28111                           
 28112                           ; BSR set to: 0
 28113                           ;incstack = 0
 28114  0073E2  6BBA               	clrf	_intervalDelay& (0+255),b
 28115  0073E4  6BBB               	clrf	(_intervalDelay+1)& (0+255),b
 28116  0073E6  6BBC               	clrf	(_intervalDelay+2)& (0+255),b
 28117  0073E8  6BBD               	clrf	(_intervalDelay+3)& (0+255),b
 28118                           
 28119                           ;BeaconManager.c: 40: currentInterval=0;
 28120  0073EA  6BB2               	clrf	_currentInterval& (0+255),b
 28121  0073EC  6BB3               	clrf	(_currentInterval+1)& (0+255),b
 28122  0073EE  6BB4               	clrf	(_currentInterval+2)& (0+255),b
 28123  0073F0  6BB5               	clrf	(_currentInterval+3)& (0+255),b
 28124                           
 28125                           ;BeaconManager.c: 41: BMState=BMPOR;
 28126  0073F2  6BCD               	clrf	_BMState& (0+255),b
 28127                           
 28128                           ; BSR set to: 1
 28129                           ;BeaconManager.c: 42: netSequenceNumber=krnd();
 28130  0073F4  ECEF  F01E         	call	_krnd	;wreg free
 28131  0073F8  5173               	movf	?_krnd& (0+255),w,b
 28132  0073FA  0101               	movlb	1	; () banked
 28133  0073FC  6FD6               	movwf	_netSequenceNumber& (0+255),b
 28134                           
 28135                           ; BSR set to: 1
 28136                           ;BeaconManager.c: 43: netResetInterval();
 28137  0073FE  EF50  F03A         	goto	_netResetInterval	;wreg free
 28138  007402                     __end_of_BeaconManagerInit:
 28139                           	opt stack 0
 28140                           tblptru	equ	0xFF8
 28141                           tblptrh	equ	0xFF7
 28142                           tblptrl	equ	0xFF6
 28143                           tablat	equ	0xFF5
 28144                           prodh	equ	0xFF4
 28145                           prodl	equ	0xFF3
 28146                           intcon	equ	0xFF2
 28147                           intcon3	equ	0xFF0
 28148                           postinc0	equ	0xFEE
 28149                           plusw0	equ	0xFEB
 28150                           fsr0h	equ	0xFEA
 28151                           fsr0l	equ	0xFE9
 28152                           wreg	equ	0xFE8
 28153                           indf1	equ	0xFE7
 28154                           postinc1	equ	0xFE6
 28155                           postdec1	equ	0xFE5
 28156                           plusw1	equ	0xFE3
 28157                           fsr1h	equ	0xFE2
 28158                           fsr1l	equ	0xFE1
 28159                           indf2	equ	0xFDF
 28160                           postinc2	equ	0xFDE
 28161                           postdec2	equ	0xFDD
 28162                           plusw2	equ	0xFDB
 28163                           fsr2h	equ	0xFDA
 28164                           fsr2l	equ	0xFD9
 28165                           status	equ	0xFD8
 28166                           
 28167 ;; *************** function _netResetInterval *****************
 28168 ;; Defined at:
 28169 ;;		line 135 in file "../BeaconManager.c"
 28170 ;; Parameters:    Size  Location     Type
 28171 ;;		None
 28172 ;; Auto vars:     Size  Location     Type
 28173 ;;		None
 28174 ;; Return value:  Size  Location     Type
 28175 ;;                  1    wreg      void 
 28176 ;; Registers used:
 28177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28178 ;; Tracked objects:
 28179 ;;		On entry : E/0
 28180 ;;		On exit  : F/1
 28181 ;;		Unchanged: 0/0
 28182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28187 ;;Total ram usage:        0 bytes
 28188 ;; Hardware stack levels used:    1
 28189 ;; Hardware stack levels required when called:    9
 28190 ;; This function calls:
 28191 ;;		_netChooseAdvertiseTime
 28192 ;; This function is called by:
 28193 ;;		_BeaconManagerInit
 28194 ;;		_BeaconManagerTrigger
 28195 ;; This function uses a non-reentrant model
 28196 ;;
 28197                           
 28198                           	psect	text133
 28199  0074A0                     __ptext133:
 28200                           	opt stack 0
 28201  0074A0                     _netResetInterval:
 28202                           	opt stack 16
 28203                           
 28204                           ;BeaconManager.c: 137: currentInterval = ((SPAN)100);
 28205                           
 28206                           ; BSR set to: 1
 28207                           ;incstack = 0
 28208  0074A0  0E64               	movlw	100
 28209  0074A2  0101               	movlb	1	; () banked
 28210  0074A4  6FB2               	movwf	_currentInterval& (0+255),b
 28211  0074A6  6BB3               	clrf	(_currentInterval+1)& (0+255),b
 28212  0074A8  6BB4               	clrf	(_currentInterval+2)& (0+255),b
 28213  0074AA  6BB5               	clrf	(_currentInterval+3)& (0+255),b
 28214                           
 28215                           ; BSR set to: 1
 28216                           ;BeaconManager.c: 138: netChooseAdvertiseTime();
 28217  0074AC  EC9D  F031         	call	_netChooseAdvertiseTime	;wreg free
 28218                           
 28219                           ; BSR set to: 0
 28220                           ;BeaconManager.c: 139: BMState=BM_WaitInitial;
 28221  0074B0  0E02               	movlw	2
 28222  0074B2  0101               	movlb	1	; () banked
 28223  0074B4  6FCD               	movwf	_BMState& (0+255),b
 28224                           
 28225                           ; BSR set to: 1
 28226  0074B6  0C02               	retlw	2	;funcret
 28227  0074B8                     __end_of_netResetInterval:
 28228                           	opt stack 0
 28229                           tblptru	equ	0xFF8
 28230                           tblptrh	equ	0xFF7
 28231                           tblptrl	equ	0xFF6
 28232                           tablat	equ	0xFF5
 28233                           prodh	equ	0xFF4
 28234                           prodl	equ	0xFF3
 28235                           intcon	equ	0xFF2
 28236                           intcon3	equ	0xFF0
 28237                           postinc0	equ	0xFEE
 28238                           plusw0	equ	0xFEB
 28239                           fsr0h	equ	0xFEA
 28240                           fsr0l	equ	0xFE9
 28241                           wreg	equ	0xFE8
 28242                           indf1	equ	0xFE7
 28243                           postinc1	equ	0xFE6
 28244                           postdec1	equ	0xFE5
 28245                           plusw1	equ	0xFE3
 28246                           fsr1h	equ	0xFE2
 28247                           fsr1l	equ	0xFE1
 28248                           indf2	equ	0xFDF
 28249                           postinc2	equ	0xFDE
 28250                           postdec2	equ	0xFDD
 28251                           plusw2	equ	0xFDB
 28252                           fsr2h	equ	0xFDA
 28253                           fsr2l	equ	0xFD9
 28254                           status	equ	0xFD8
 28255                           
 28256 ;; *************** function _netChooseAdvertiseTime *****************
 28257 ;; Defined at:
 28258 ;;		line 125 in file "../BeaconManager.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;		None
 28261 ;; Auto vars:     Size  Location     Type
 28262 ;;  t               4   47[BANK0 ] unsigned long 
 28263 ;; Return value:  Size  Location     Type
 28264 ;;                  1    wreg      void 
 28265 ;; Registers used:
 28266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28267 ;; Tracked objects:
 28268 ;;		On entry : F/1
 28269 ;;		On exit  : F/0
 28270 ;;		Unchanged: 0/0
 28271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28275 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;Total ram usage:        4 bytes
 28277 ;; Hardware stack levels used:    1
 28278 ;; Hardware stack levels required when called:    8
 28279 ;; This function calls:
 28280 ;;		_MSTickGet
 28281 ;;		___llmod
 28282 ;;		_krnd
 28283 ;; This function is called by:
 28284 ;;		_netResetInterval
 28285 ;;		_netDecayInterval
 28286 ;; This function uses a non-reentrant model
 28287 ;;
 28288                           
 28289                           	psect	text134
 28290  00633A                     __ptext134:
 28291                           	opt stack 0
 28292  00633A                     _netChooseAdvertiseTime:
 28293                           	opt stack 16
 28294                           
 28295                           ; BSR set to: 1
 28296                           ;BeaconManager.c: 127: SPAN t;
 28297                           ;BeaconManager.c: 128: t = currentInterval;
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;incstack = 0
 28301  00633A  C1B2  F08F         	movff	_currentInterval,netChooseAdvertiseTime@t
 28302  00633E  C1B3  F090         	movff	_currentInterval+1,netChooseAdvertiseTime@t+1
 28303  006342  C1B4  F091         	movff	_currentInterval+2,netChooseAdvertiseTime@t+2
 28304  006346  C1B5  F092         	movff	_currentInterval+3,netChooseAdvertiseTime@t+3
 28305                           
 28306                           ; BSR set to: 1
 28307                           ;BeaconManager.c: 129: t /= 2;
 28308  00634A  0100               	movlb	0	; () banked
 28309  00634C  90D8               	bcf	status,0,c
 28310  00634E  3392               	rrcf	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 28311  006350  3391               	rrcf	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 28312  006352  3390               	rrcf	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 28313  006354  338F               	rrcf	netChooseAdvertiseTime@t& (0+255),f,b
 28314                           
 28315                           ; BSR set to: 0
 28316                           ;BeaconManager.c: 130: t += krnd() % t;
 28317  006356  ECEF  F01E         	call	_krnd	;wreg free
 28318  00635A  C073  F07F         	movff	?_krnd,___llmod@dividend
 28319  00635E  C074  F080         	movff	?_krnd+1,___llmod@dividend+1
 28320  006362  C075  F081         	movff	?_krnd+2,___llmod@dividend+2
 28321  006366  C076  F082         	movff	?_krnd+3,___llmod@dividend+3
 28322  00636A  C08F  F083         	movff	netChooseAdvertiseTime@t,___llmod@divisor
 28323  00636E  C090  F084         	movff	netChooseAdvertiseTime@t+1,___llmod@divisor+1
 28324  006372  C091  F085         	movff	netChooseAdvertiseTime@t+2,___llmod@divisor+2
 28325  006376  C092  F086         	movff	netChooseAdvertiseTime@t+3,___llmod@divisor+3
 28326  00637A  EC8D  F033         	call	___llmod	;wreg free
 28327  00637E  517F               	movf	?___llmod& (0+255),w,b
 28328  006380  278F               	addwf	netChooseAdvertiseTime@t& (0+255),f,b
 28329  006382  5180               	movf	(?___llmod+1)& (0+255),w,b
 28330  006384  2390               	addwfc	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 28331  006386  5181               	movf	(?___llmod+2)& (0+255),w,b
 28332  006388  2391               	addwfc	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 28333  00638A  5182               	movf	(?___llmod+3)& (0+255),w,b
 28334  00638C  2392               	addwfc	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 28335                           
 28336                           ; BSR set to: 0
 28337                           ;BeaconManager.c: 131: tInterval=MSTickGet();
 28338  00638E  EC4F  F038         	call	_MSTickGet	;wreg free
 28339  006392  EE22  F014         	lfsr	2,_tInterval
 28340  006396  0E07               	movlw	7
 28341  006398                     u18881:
 28342  006398  CFEB FFDB          	movff	plusw0,plusw2
 28343  00639C  06E8               	decf	wreg,f,c
 28344  00639E  E2FC               	bc	u18881
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;BeaconManager.c: 132: intervalDelay=t;
 28348  0063A0  C08F  F1BA         	movff	netChooseAdvertiseTime@t,_intervalDelay
 28349  0063A4  C090  F1BB         	movff	netChooseAdvertiseTime@t+1,_intervalDelay+1
 28350  0063A8  C091  F1BC         	movff	netChooseAdvertiseTime@t+2,_intervalDelay+2
 28351  0063AC  C092  F1BD         	movff	netChooseAdvertiseTime@t+3,_intervalDelay+3
 28352                           
 28353                           ; BSR set to: 0
 28354  0063B0  0012               	return		;funcret
 28355  0063B2                     __end_of_netChooseAdvertiseTime:
 28356                           	opt stack 0
 28357                           tblptru	equ	0xFF8
 28358                           tblptrh	equ	0xFF7
 28359                           tblptrl	equ	0xFF6
 28360                           tablat	equ	0xFF5
 28361                           prodh	equ	0xFF4
 28362                           prodl	equ	0xFF3
 28363                           intcon	equ	0xFF2
 28364                           intcon3	equ	0xFF0
 28365                           postinc0	equ	0xFEE
 28366                           plusw0	equ	0xFEB
 28367                           fsr0h	equ	0xFEA
 28368                           fsr0l	equ	0xFE9
 28369                           wreg	equ	0xFE8
 28370                           indf1	equ	0xFE7
 28371                           postinc1	equ	0xFE6
 28372                           postdec1	equ	0xFE5
 28373                           plusw1	equ	0xFE3
 28374                           fsr1h	equ	0xFE2
 28375                           fsr1l	equ	0xFE1
 28376                           indf2	equ	0xFDF
 28377                           postinc2	equ	0xFDE
 28378                           postdec2	equ	0xFDD
 28379                           plusw2	equ	0xFDB
 28380                           fsr2h	equ	0xFDA
 28381                           fsr2l	equ	0xFD9
 28382                           status	equ	0xFD8
 28383                           
 28384 ;; *************** function _krnd *****************
 28385 ;; Defined at:
 28386 ;;		line 16 in file "../krnd.c"
 28387 ;; Parameters:    Size  Location     Type
 28388 ;;		None
 28389 ;; Auto vars:     Size  Location     Type
 28390 ;;  t               4   27[BANK0 ] long 
 28391 ;; Return value:  Size  Location     Type
 28392 ;;                  4   19[BANK0 ] unsigned long 
 28393 ;; Registers used:
 28394 ;;		wreg, status,2, status,0
 28395 ;; Tracked objects:
 28396 ;;		On entry : C/0
 28397 ;;		On exit  : F/0
 28398 ;;		Unchanged: 0/0
 28399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28403 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28404 ;;Total ram usage:       12 bytes
 28405 ;; Hardware stack levels used:    1
 28406 ;; Hardware stack levels required when called:    5
 28407 ;; This function calls:
 28408 ;;		Nothing
 28409 ;; This function is called by:
 28410 ;;		_TxPacket
 28411 ;;		_MiMAC_Init
 28412 ;;		_BeaconManagerInit
 28413 ;;		_netChooseAdvertiseTime
 28414 ;;		_le_findRandomNeighborIdx
 28415 ;;		_BroadcastManagerDelaySend
 28416 ;;		_NetworkManagerTask
 28417 ;;		_NetworkInit
 28418 ;; This function uses a non-reentrant model
 28419 ;;
 28420                           
 28421                           	psect	text135
 28422  003DDE                     __ptext135:
 28423                           	opt stack 0
 28424  003DDE                     _krnd:
 28425                           	opt stack 17
 28426                           
 28427                           ;krnd.c: 18: int32_t t;
 28428                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 28429                           
 28430                           ; BSR set to: 0
 28431                           ;incstack = 0
 28432  003DDE  C04B  F077         	movff	_y,??_krnd
 28433  003DE2  C04C  F078         	movff	_y+1,??_krnd+1
 28434  003DE6  C04D  F079         	movff	_y+2,??_krnd+2
 28435  003DEA  C04E  F07A         	movff	_y+3,??_krnd+3
 28436  003DEE  0E05               	movlw	5
 28437  003DF0                     u18135:
 28438  003DF0  90D8               	bcf	status,0,c
 28439  003DF2  0100               	movlb	0	; () banked
 28440  003DF4  3777               	rlcf	??_krnd& (0+255),f,b
 28441  003DF6  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 28442  003DF8  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 28443  003DFA  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 28444  003DFC  2EE8               	decfsz	wreg,f,c
 28445  003DFE  D7F8               	goto	u18135
 28446  003E00  5177               	movf	??_krnd& (0+255),w,b
 28447  003E02  1A4B               	xorwf	_y,f,c
 28448  003E04  5178               	movf	(??_krnd+1)& (0+255),w,b
 28449  003E06  1A4C               	xorwf	_y+1,f,c
 28450  003E08  5179               	movf	(??_krnd+2)& (0+255),w,b
 28451  003E0A  1A4D               	xorwf	_y+2,f,c
 28452  003E0C  517A               	movf	(??_krnd+3)& (0+255),w,b
 28453  003E0E  1A4E               	xorwf	_y+3,f,c
 28454  003E10  C04B  F077         	movff	_y,??_krnd
 28455  003E14  C04C  F078         	movff	_y+1,??_krnd+1
 28456  003E18  C04D  F079         	movff	_y+2,??_krnd+2
 28457  003E1C  C04E  F07A         	movff	_y+3,??_krnd+3
 28458  003E20  0E08               	movlw	8
 28459  003E22  D005               	goto	u18140
 28460  003E24                     u18145:
 28461  003E24  90D8               	bcf	status,0,c
 28462  003E26  337A               	rrcf	(??_krnd+3)& (0+255),f,b
 28463  003E28  3379               	rrcf	(??_krnd+2)& (0+255),f,b
 28464  003E2A  3378               	rrcf	(??_krnd+1)& (0+255),f,b
 28465  003E2C  3377               	rrcf	??_krnd& (0+255),f,b
 28466  003E2E                     u18140:
 28467  003E2E  2EE8               	decfsz	wreg,f,c
 28468  003E30  D7F9               	goto	u18145
 28469  003E32  5177               	movf	??_krnd& (0+255),w,b
 28470  003E34  1A4B               	xorwf	_y,f,c
 28471  003E36  5178               	movf	(??_krnd+1)& (0+255),w,b
 28472  003E38  1A4C               	xorwf	_y+1,f,c
 28473  003E3A  5179               	movf	(??_krnd+2)& (0+255),w,b
 28474  003E3C  1A4D               	xorwf	_y+2,f,c
 28475  003E3E  517A               	movf	(??_krnd+3)& (0+255),w,b
 28476  003E40  1A4E               	xorwf	_y+3,f,c
 28477  003E42  C04B  F077         	movff	_y,??_krnd
 28478  003E46  C04C  F078         	movff	_y+1,??_krnd+1
 28479  003E4A  C04D  F079         	movff	_y+2,??_krnd+2
 28480  003E4E  C04E  F07A         	movff	_y+3,??_krnd+3
 28481  003E52  0E16               	movlw	22
 28482  003E54                     u18155:
 28483  003E54  90D8               	bcf	status,0,c
 28484  003E56  3777               	rlcf	??_krnd& (0+255),f,b
 28485  003E58  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 28486  003E5A  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 28487  003E5C  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 28488  003E5E  2EE8               	decfsz	wreg,f,c
 28489  003E60  D7F9               	goto	u18155
 28490  003E62  5177               	movf	??_krnd& (0+255),w,b
 28491  003E64  1A4B               	xorwf	_y,f,c
 28492  003E66  5178               	movf	(??_krnd+1)& (0+255),w,b
 28493  003E68  1A4C               	xorwf	_y+1,f,c
 28494  003E6A  5179               	movf	(??_krnd+2)& (0+255),w,b
 28495  003E6C  1A4D               	xorwf	_y+2,f,c
 28496  003E6E  517A               	movf	(??_krnd+3)& (0+255),w,b
 28497  003E70  1A4E               	xorwf	_y+3,f,c
 28498                           
 28499                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 28500  003E72  5047               	movf	_w,w,c
 28501  003E74  0101               	movlb	1	; () banked
 28502  003E76  25F0               	addwf	_z& (0+255),w,b
 28503  003E78  0100               	movlb	0	; () banked
 28504  003E7A  6F77               	movwf	??_krnd& (0+255),b
 28505  003E7C  5048               	movf	_w+1,w,c
 28506  003E7E  0101               	movlb	1	; () banked
 28507  003E80  21F1               	addwfc	(_z+1)& (0+255),w,b
 28508  003E82  0100               	movlb	0	; () banked
 28509  003E84  6F78               	movwf	(??_krnd+1)& (0+255),b
 28510  003E86  5049               	movf	_w+2,w,c
 28511  003E88  0101               	movlb	1	; () banked
 28512  003E8A  21F2               	addwfc	(_z+2)& (0+255),w,b
 28513  003E8C  0100               	movlb	0	; () banked
 28514  003E8E  6F79               	movwf	(??_krnd+2)& (0+255),b
 28515  003E90  504A               	movf	_w+3,w,c
 28516  003E92  0101               	movlb	1	; () banked
 28517  003E94  21F3               	addwfc	(_z+3)& (0+255),w,b
 28518  003E96  0100               	movlb	0	; () banked
 28519  003E98  6F7A               	movwf	(??_krnd+3)& (0+255),b
 28520  003E9A  0101               	movlb	1	; () banked
 28521  003E9C  51AE               	movf	_c& (0+255),w,b
 28522  003E9E  0100               	movlb	0	; () banked
 28523  003EA0  2577               	addwf	??_krnd& (0+255),w,b
 28524  003EA2  6F7B               	movwf	krnd@t& (0+255),b
 28525  003EA4  0101               	movlb	1	; () banked
 28526  003EA6  51AF               	movf	(_c+1)& (0+255),w,b
 28527  003EA8  0100               	movlb	0	; () banked
 28528  003EAA  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 28529  003EAC  6F7C               	movwf	(krnd@t+1)& (0+255),b
 28530  003EAE  0101               	movlb	1	; () banked
 28531  003EB0  51B0               	movf	(_c+2)& (0+255),w,b
 28532  003EB2  0100               	movlb	0	; () banked
 28533  003EB4  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 28534  003EB6  6F7D               	movwf	(krnd@t+2)& (0+255),b
 28535  003EB8  0101               	movlb	1	; () banked
 28536  003EBA  51B1               	movf	(_c+3)& (0+255),w,b
 28537  003EBC  0100               	movlb	0	; () banked
 28538  003EBE  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 28539  003EC0  6F7E               	movwf	(krnd@t+3)& (0+255),b
 28540                           
 28541                           ; BSR set to: 0
 28542  003EC2  C047  F1F0         	movff	_w,_z
 28543  003EC6  C048  F1F1         	movff	_w+1,_z+1
 28544  003ECA  C049  F1F2         	movff	_w+2,_z+2
 28545  003ECE  C04A  F1F3         	movff	_w+3,_z+3
 28546  003ED2  0E01               	movlw	1
 28547  003ED4  AF7E               	btfss	(krnd@t+3)& (0+255),7,b
 28548  003ED6  0E00               	movlw	0
 28549  003ED8  0101               	movlb	1	; () banked
 28550  003EDA  6FAE               	movwf	_c& (0+255),b
 28551  003EDC  6BAF               	clrf	(_c+1)& (0+255),b
 28552  003EDE  6BB0               	clrf	(_c+2)& (0+255),b
 28553  003EE0  6BB1               	clrf	(_c+3)& (0+255),b
 28554  003EE2  0E3A               	movlw	58
 28555  003EE4  0100               	movlb	0	; () banked
 28556  003EE6  157B               	andwf	krnd@t& (0+255),w,b
 28557  003EE8  6E47               	movwf	_w,c
 28558  003EEA  0E37               	movlw	55
 28559  003EEC  157C               	andwf	(krnd@t+1)& (0+255),w,b
 28560  003EEE  6E48               	movwf	_w+1,c
 28561  003EF0  0EDE               	movlw	222
 28562  003EF2  157D               	andwf	(krnd@t+2)& (0+255),w,b
 28563  003EF4  6E49               	movwf	_w+2,c
 28564  003EF6  0E54               	movlw	84
 28565  003EF8  157E               	andwf	(krnd@t+3)& (0+255),w,b
 28566  003EFA  6E4A               	movwf	_w+3,c
 28567                           
 28568                           ;krnd.c: 24: x += 1832334820;
 28569  003EFC  0EE4               	movlw	228
 28570  003EFE  0101               	movlb	1	; () banked
 28571  003F00  27EC               	addwf	_x& (0+255),f,b
 28572  003F02  0E35               	movlw	53
 28573  003F04  23ED               	addwfc	(_x+1)& (0+255),f,b
 28574  003F06  0E37               	movlw	55
 28575  003F08  23EE               	addwfc	(_x+2)& (0+255),f,b
 28576  003F0A  0E6D               	movlw	109
 28577  003F0C  23EF               	addwfc	(_x+3)& (0+255),f,b
 28578                           
 28579                           ;krnd.c: 26: return x + y + w;
 28580  003F0E  504B               	movf	_y,w,c
 28581  003F10  25EC               	addwf	_x& (0+255),w,b
 28582  003F12  0100               	movlb	0	; () banked
 28583  003F14  6F77               	movwf	??_krnd& (0+255),b
 28584  003F16  504C               	movf	_y+1,w,c
 28585  003F18  0101               	movlb	1	; () banked
 28586  003F1A  21ED               	addwfc	(_x+1)& (0+255),w,b
 28587  003F1C  0100               	movlb	0	; () banked
 28588  003F1E  6F78               	movwf	(??_krnd+1)& (0+255),b
 28589  003F20  504D               	movf	_y+2,w,c
 28590  003F22  0101               	movlb	1	; () banked
 28591  003F24  21EE               	addwfc	(_x+2)& (0+255),w,b
 28592  003F26  0100               	movlb	0	; () banked
 28593  003F28  6F79               	movwf	(??_krnd+2)& (0+255),b
 28594  003F2A  504E               	movf	_y+3,w,c
 28595  003F2C  0101               	movlb	1	; () banked
 28596  003F2E  21EF               	addwfc	(_x+3)& (0+255),w,b
 28597  003F30  0100               	movlb	0	; () banked
 28598  003F32  6F7A               	movwf	(??_krnd+3)& (0+255),b
 28599  003F34  5047               	movf	_w,w,c
 28600  003F36  2577               	addwf	??_krnd& (0+255),w,b
 28601  003F38  6F73               	movwf	?_krnd& (0+255),b
 28602  003F3A  5048               	movf	_w+1,w,c
 28603  003F3C  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 28604  003F3E  6F74               	movwf	(?_krnd+1)& (0+255),b
 28605  003F40  5049               	movf	_w+2,w,c
 28606  003F42  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 28607  003F44  6F75               	movwf	(?_krnd+2)& (0+255),b
 28608  003F46  504A               	movf	_w+3,w,c
 28609  003F48  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 28610  003F4A  6F76               	movwf	(?_krnd+3)& (0+255),b
 28611                           
 28612                           ; BSR set to: 0
 28613  003F4C  0012               	return		;funcret
 28614  003F4E                     __end_of_krnd:
 28615                           	opt stack 0
 28616                           tblptru	equ	0xFF8
 28617                           tblptrh	equ	0xFF7
 28618                           tblptrl	equ	0xFF6
 28619                           tablat	equ	0xFF5
 28620                           prodh	equ	0xFF4
 28621                           prodl	equ	0xFF3
 28622                           intcon	equ	0xFF2
 28623                           intcon3	equ	0xFF0
 28624                           postinc0	equ	0xFEE
 28625                           plusw0	equ	0xFEB
 28626                           fsr0h	equ	0xFEA
 28627                           fsr0l	equ	0xFE9
 28628                           wreg	equ	0xFE8
 28629                           indf1	equ	0xFE7
 28630                           postinc1	equ	0xFE6
 28631                           postdec1	equ	0xFE5
 28632                           plusw1	equ	0xFE3
 28633                           fsr1h	equ	0xFE2
 28634                           fsr1l	equ	0xFE1
 28635                           indf2	equ	0xFDF
 28636                           postinc2	equ	0xFDE
 28637                           postdec2	equ	0xFDD
 28638                           plusw2	equ	0xFDB
 28639                           fsr2h	equ	0xFDA
 28640                           fsr2l	equ	0xFD9
 28641                           status	equ	0xFD8
 28642                           
 28643 ;; *************** function ___llmod *****************
 28644 ;; Defined at:
 28645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 28646 ;; Parameters:    Size  Location     Type
 28647 ;;  dividend        4   31[BANK0 ] unsigned long 
 28648 ;;  divisor         4   35[BANK0 ] unsigned long 
 28649 ;; Auto vars:     Size  Location     Type
 28650 ;;  counter         1   39[BANK0 ] unsigned char 
 28651 ;; Return value:  Size  Location     Type
 28652 ;;                  4   31[BANK0 ] unsigned long 
 28653 ;; Registers used:
 28654 ;;		wreg, status,2, status,0
 28655 ;; Tracked objects:
 28656 ;;		On entry : F/0
 28657 ;;		On exit  : F/0
 28658 ;;		Unchanged: 0/0
 28659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28660 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28663 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28664 ;;Total ram usage:        9 bytes
 28665 ;; Hardware stack levels used:    1
 28666 ;; Hardware stack levels required when called:    5
 28667 ;; This function calls:
 28668 ;;		Nothing
 28669 ;; This function is called by:
 28670 ;;		_netChooseAdvertiseTime
 28671 ;; This function uses a non-reentrant model
 28672 ;;
 28673                           
 28674                           	psect	text136
 28675  00671A                     __ptext136:
 28676                           	opt stack 0
 28677  00671A                     ___llmod:
 28678                           	opt stack 18
 28679                           
 28680                           ; BSR set to: 0
 28681                           
 28682                           ; BSR set to: 0
 28683                           ;incstack = 0
 28684  00671A  5183               	movf	___llmod@divisor& (0+255),w,b
 28685  00671C  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 28686  00671E  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 28687  006720  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 28688  006722  E023               	bz	l2575
 28689                           
 28690                           ; BSR set to: 0
 28691  006724  0E01               	movlw	1
 28692  006726  6F87               	movwf	___llmod@counter& (0+255),b
 28693  006728  D006               	goto	l15984
 28694  00672A                     l15982:
 28695                           
 28696                           ; BSR set to: 0
 28697  00672A  90D8               	bcf	status,0,c
 28698  00672C  3783               	rlcf	___llmod@divisor& (0+255),f,b
 28699  00672E  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 28700  006730  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 28701  006732  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 28702  006734  2B87               	incf	___llmod@counter& (0+255),f,b
 28703  006736                     l15984:
 28704                           
 28705                           ; BSR set to: 0
 28706  006736  AF86               	btfss	(___llmod@divisor+3)& (0+255),7,b
 28707  006738  D7F8               	goto	l15982
 28708  00673A                     l15986:
 28709                           
 28710                           ; BSR set to: 0
 28711  00673A  5183               	movf	___llmod@divisor& (0+255),w,b
 28712  00673C  5D7F               	subwf	___llmod@dividend& (0+255),w,b
 28713  00673E  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 28714  006740  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 28715  006742  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 28716  006744  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 28717  006746  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 28718  006748  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 28719  00674A  E308               	bnc	l15990
 28720                           
 28721                           ; BSR set to: 0
 28722  00674C  5183               	movf	___llmod@divisor& (0+255),w,b
 28723  00674E  5F7F               	subwf	___llmod@dividend& (0+255),f,b
 28724  006750  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 28725  006752  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 28726  006754  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 28727  006756  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 28728  006758  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 28729  00675A  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 28730  00675C                     l15990:
 28731                           
 28732                           ; BSR set to: 0
 28733  00675C  90D8               	bcf	status,0,c
 28734  00675E  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 28735  006760  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 28736  006762  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 28737  006764  3383               	rrcf	___llmod@divisor& (0+255),f,b
 28738                           
 28739                           ; BSR set to: 0
 28740  006766  2F87               	decfsz	___llmod@counter& (0+255),f,b
 28741  006768  D7E8               	goto	l15986
 28742  00676A                     l2575:
 28743                           
 28744                           ; BSR set to: 0
 28745  00676A  C07F  F07F         	movff	___llmod@dividend,?___llmod
 28746  00676E  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
 28747  006772  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
 28748  006776  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
 28749                           
 28750                           ; BSR set to: 0
 28751  00677A  0012               	return		;funcret
 28752  00677C                     __end_of___llmod:
 28753                           	opt stack 0
 28754                           tblptru	equ	0xFF8
 28755                           tblptrh	equ	0xFF7
 28756                           tblptrl	equ	0xFF6
 28757                           tablat	equ	0xFF5
 28758                           prodh	equ	0xFF4
 28759                           prodl	equ	0xFF3
 28760                           intcon	equ	0xFF2
 28761                           intcon3	equ	0xFF0
 28762                           postinc0	equ	0xFEE
 28763                           plusw0	equ	0xFEB
 28764                           fsr0h	equ	0xFEA
 28765                           fsr0l	equ	0xFE9
 28766                           wreg	equ	0xFE8
 28767                           indf1	equ	0xFE7
 28768                           postinc1	equ	0xFE6
 28769                           postdec1	equ	0xFE5
 28770                           plusw1	equ	0xFE3
 28771                           fsr1h	equ	0xFE2
 28772                           fsr1l	equ	0xFE1
 28773                           indf2	equ	0xFDF
 28774                           postinc2	equ	0xFDE
 28775                           postdec2	equ	0xFDD
 28776                           plusw2	equ	0xFDB
 28777                           fsr2h	equ	0xFDA
 28778                           fsr2l	equ	0xFD9
 28779                           status	equ	0xFD8
 28780                           
 28781 ;; *************** function _MSTickGet *****************
 28782 ;; Defined at:
 28783 ;;		line 71 in file "../TimeTick.c"
 28784 ;; Parameters:    Size  Location     Type
 28785 ;;		None
 28786 ;; Auto vars:     Size  Location     Type
 28787 ;;  tNow            8   39[BANK0 ] struct TickMS_t_def
 28788 ;; Return value:  Size  Location     Type
 28789 ;;                  8   31[BANK0 ] struct TickMS_t_def
 28790 ;; Registers used:
 28791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28792 ;; Tracked objects:
 28793 ;;		On entry : C/0
 28794 ;;		On exit  : F/0
 28795 ;;		Unchanged: 0/0
 28796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28798 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28800 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;Total ram usage:       16 bytes
 28802 ;; Hardware stack levels used:    1
 28803 ;; Hardware stack levels required when called:    7
 28804 ;; This function calls:
 28805 ;;		_TimerEnterCritical
 28806 ;;		_TimerExitCritical
 28807 ;;		_memcpy
 28808 ;; This function is called by:
 28809 ;;		_RouteManagerInit
 28810 ;;		_RouteManagerTask
 28811 ;;		_BeaconManagerTask
 28812 ;;		_netChooseAdvertiseTime
 28813 ;;		_BroadcastManagerTask
 28814 ;;		_BroadcastManagerDelaySend
 28815 ;;		_TunnelManagerSetTunnel
 28816 ;;		_isKnownPacket
 28817 ;;		_TransportManagerTask
 28818 ;;		_NetworkManagerTask
 28819 ;;		_IsNetworkDevice
 28820 ;;		_MSTickGetDiffNow
 28821 ;; This function uses a non-reentrant model
 28822 ;;
 28823                           
 28824                           	psect	text137
 28825  00709E                     __ptext137:
 28826                           	opt stack 0
 28827  00709E                     _MSTickGet:
 28828                           	opt stack 17
 28829                           
 28830                           ;TimeTick.c: 73: TickMS tNow;
 28831                           ;TimeTick.c: 74: TimerEnterCritical();
 28832                           
 28833                           ; BSR set to: 0
 28834                           ;incstack = 0
 28835  00709E  EC3E  F03B         	call	_TimerEnterCritical	;wreg free
 28836                           
 28837                           ;TimeTick.c: 75: memcpy(&tNow,&Tick_MS,sizeof(Tick_MS));
 28838  0070A2  0E87               	movlw	low MSTickGet@tNow
 28839  0070A4  0100               	movlb	0	; () banked
 28840  0070A6  6F75               	movwf	memcpy@d1& (0+255),b
 28841  0070A8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 28842  0070AA  0E49               	movlw	low _Tick_MS
 28843  0070AC  6F77               	movwf	memcpy@s1& (0+255),b
 28844  0070AE  0E02               	movlw	high _Tick_MS
 28845  0070B0  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 28846  0070B2  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 28847  0070B4  0E08               	movlw	8
 28848  0070B6  6F79               	movwf	memcpy@n& (0+255),b
 28849  0070B8  EC54  F035         	call	_memcpy	;wreg free
 28850                           
 28851                           ; BSR set to: 0
 28852                           ;TimeTick.c: 76: TimerExitCritical();
 28853  0070BC  EC3A  F03B         	call	_TimerExitCritical	;wreg free
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;TimeTick.c: 77: return(tNow);
 28857  0070C0  EE20  F087         	lfsr	2,MSTickGet@tNow
 28858  0070C4  EE00  F07F         	lfsr	0,?_MSTickGet
 28859  0070C8  0E07               	movlw	7
 28860  0070CA                     u18581:
 28861  0070CA  CFDB FFEB          	movff	plusw2,plusw0
 28862  0070CE  06E8               	decf	wreg,f,c
 28863  0070D0  E2FC               	bc	u18581
 28864                           
 28865                           ; BSR set to: 0
 28866  0070D2  0012               	return		;funcret
 28867  0070D4                     __end_of_MSTickGet:
 28868                           	opt stack 0
 28869                           tblptru	equ	0xFF8
 28870                           tblptrh	equ	0xFF7
 28871                           tblptrl	equ	0xFF6
 28872                           tablat	equ	0xFF5
 28873                           prodh	equ	0xFF4
 28874                           prodl	equ	0xFF3
 28875                           intcon	equ	0xFF2
 28876                           intcon3	equ	0xFF0
 28877                           postinc0	equ	0xFEE
 28878                           plusw0	equ	0xFEB
 28879                           fsr0h	equ	0xFEA
 28880                           fsr0l	equ	0xFE9
 28881                           wreg	equ	0xFE8
 28882                           indf1	equ	0xFE7
 28883                           postinc1	equ	0xFE6
 28884                           postdec1	equ	0xFE5
 28885                           plusw1	equ	0xFE3
 28886                           fsr1h	equ	0xFE2
 28887                           fsr1l	equ	0xFE1
 28888                           indf2	equ	0xFDF
 28889                           postinc2	equ	0xFDE
 28890                           postdec2	equ	0xFDD
 28891                           plusw2	equ	0xFDB
 28892                           fsr2h	equ	0xFDA
 28893                           fsr2l	equ	0xFD9
 28894                           status	equ	0xFD8
 28895                           
 28896 ;; *************** function _TimerExitCritical *****************
 28897 ;; Defined at:
 28898 ;;		line 157 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 28899 ;; Parameters:    Size  Location     Type
 28900 ;;		None
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;		None
 28903 ;; Return value:  Size  Location     Type
 28904 ;;                  1    wreg      void 
 28905 ;; Registers used:
 28906 ;;		cstack
 28907 ;; Tracked objects:
 28908 ;;		On entry : F/0
 28909 ;;		On exit  : F/0
 28910 ;;		Unchanged: F/0
 28911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28916 ;;Total ram usage:        0 bytes
 28917 ;; Hardware stack levels used:    1
 28918 ;; Hardware stack levels required when called:    6
 28919 ;; This function calls:
 28920 ;;		_TimerEnable
 28921 ;; This function is called by:
 28922 ;;		_MSTickGet
 28923 ;; This function uses a non-reentrant model
 28924 ;;
 28925                           
 28926                           	psect	text138
 28927  007674                     __ptext138:
 28928                           	opt stack 0
 28929  007674                     _TimerExitCritical:
 28930                           	opt stack 17
 28931                           
 28932                           ; BSR set to: 0
 28933                           ;symbol.c: 159: TimerEnable();
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;incstack = 0
 28937  007674  EF3C  F03B         	goto	_TimerEnable	;wreg free
 28938  007678                     __end_of_TimerExitCritical:
 28939                           	opt stack 0
 28940                           tblptru	equ	0xFF8
 28941                           tblptrh	equ	0xFF7
 28942                           tblptrl	equ	0xFF6
 28943                           tablat	equ	0xFF5
 28944                           prodh	equ	0xFF4
 28945                           prodl	equ	0xFF3
 28946                           intcon	equ	0xFF2
 28947                           intcon3	equ	0xFF0
 28948                           postinc0	equ	0xFEE
 28949                           plusw0	equ	0xFEB
 28950                           fsr0h	equ	0xFEA
 28951                           fsr0l	equ	0xFE9
 28952                           wreg	equ	0xFE8
 28953                           indf1	equ	0xFE7
 28954                           postinc1	equ	0xFE6
 28955                           postdec1	equ	0xFE5
 28956                           plusw1	equ	0xFE3
 28957                           fsr1h	equ	0xFE2
 28958                           fsr1l	equ	0xFE1
 28959                           indf2	equ	0xFDF
 28960                           postinc2	equ	0xFDE
 28961                           postdec2	equ	0xFDD
 28962                           plusw2	equ	0xFDB
 28963                           fsr2h	equ	0xFDA
 28964                           fsr2l	equ	0xFD9
 28965                           status	equ	0xFD8
 28966                           
 28967 ;; *************** function _TimerEnable *****************
 28968 ;; Defined at:
 28969 ;;		line 147 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;		None
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;		None
 28974 ;; Return value:  Size  Location     Type
 28975 ;;                  1    wreg      void 
 28976 ;; Registers used:
 28977 ;;		None
 28978 ;; Tracked objects:
 28979 ;;		On entry : F/0
 28980 ;;		On exit  : F/0
 28981 ;;		Unchanged: F/0
 28982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28987 ;;Total ram usage:        0 bytes
 28988 ;; Hardware stack levels used:    1
 28989 ;; Hardware stack levels required when called:    5
 28990 ;; This function calls:
 28991 ;;		Nothing
 28992 ;; This function is called by:
 28993 ;;		_TimerExitCritical
 28994 ;; This function uses a non-reentrant model
 28995 ;;
 28996                           
 28997                           	psect	text139
 28998  007678                     __ptext139:
 28999                           	opt stack 0
 29000  007678                     _TimerEnable:
 29001                           	opt stack 17
 29002                           
 29003                           ; BSR set to: 0
 29004                           ;symbol.c: 149: INTCONbits.TMR0IE=1;
 29005                           
 29006                           ; BSR set to: 0
 29007                           ;incstack = 0
 29008  007678  8AF2               	bsf	intcon,5,c	;volatile
 29009                           
 29010                           ; BSR set to: 0
 29011  00767A  0012               	return		;funcret
 29012  00767C                     __end_of_TimerEnable:
 29013                           	opt stack 0
 29014                           tblptru	equ	0xFF8
 29015                           tblptrh	equ	0xFF7
 29016                           tblptrl	equ	0xFF6
 29017                           tablat	equ	0xFF5
 29018                           prodh	equ	0xFF4
 29019                           prodl	equ	0xFF3
 29020                           intcon	equ	0xFF2
 29021                           intcon3	equ	0xFF0
 29022                           postinc0	equ	0xFEE
 29023                           plusw0	equ	0xFEB
 29024                           fsr0h	equ	0xFEA
 29025                           fsr0l	equ	0xFE9
 29026                           wreg	equ	0xFE8
 29027                           indf1	equ	0xFE7
 29028                           postinc1	equ	0xFE6
 29029                           postdec1	equ	0xFE5
 29030                           plusw1	equ	0xFE3
 29031                           fsr1h	equ	0xFE2
 29032                           fsr1l	equ	0xFE1
 29033                           indf2	equ	0xFDF
 29034                           postinc2	equ	0xFDE
 29035                           postdec2	equ	0xFDD
 29036                           plusw2	equ	0xFDB
 29037                           fsr2h	equ	0xFDA
 29038                           fsr2l	equ	0xFD9
 29039                           status	equ	0xFD8
 29040                           
 29041 ;; *************** function _TimerEnterCritical *****************
 29042 ;; Defined at:
 29043 ;;		line 152 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29044 ;; Parameters:    Size  Location     Type
 29045 ;;		None
 29046 ;; Auto vars:     Size  Location     Type
 29047 ;;		None
 29048 ;; Return value:  Size  Location     Type
 29049 ;;                  1    wreg      void 
 29050 ;; Registers used:
 29051 ;;		cstack
 29052 ;; Tracked objects:
 29053 ;;		On entry : C/0
 29054 ;;		On exit  : C/0
 29055 ;;		Unchanged: C/0
 29056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29061 ;;Total ram usage:        0 bytes
 29062 ;; Hardware stack levels used:    1
 29063 ;; Hardware stack levels required when called:    6
 29064 ;; This function calls:
 29065 ;;		_TimerDisable
 29066 ;; This function is called by:
 29067 ;;		_MSTickGet
 29068 ;; This function uses a non-reentrant model
 29069 ;;
 29070                           
 29071                           	psect	text140
 29072  00767C                     __ptext140:
 29073                           	opt stack 0
 29074  00767C                     _TimerEnterCritical:
 29075                           	opt stack 17
 29076                           
 29077                           ;symbol.c: 154: TimerDisable();
 29078                           
 29079                           ; BSR set to: 0
 29080                           ;incstack = 0
 29081  00767C  EF40  F03B         	goto	_TimerDisable	;wreg free
 29082  007680                     __end_of_TimerEnterCritical:
 29083                           	opt stack 0
 29084                           tblptru	equ	0xFF8
 29085                           tblptrh	equ	0xFF7
 29086                           tblptrl	equ	0xFF6
 29087                           tablat	equ	0xFF5
 29088                           prodh	equ	0xFF4
 29089                           prodl	equ	0xFF3
 29090                           intcon	equ	0xFF2
 29091                           intcon3	equ	0xFF0
 29092                           postinc0	equ	0xFEE
 29093                           plusw0	equ	0xFEB
 29094                           fsr0h	equ	0xFEA
 29095                           fsr0l	equ	0xFE9
 29096                           wreg	equ	0xFE8
 29097                           indf1	equ	0xFE7
 29098                           postinc1	equ	0xFE6
 29099                           postdec1	equ	0xFE5
 29100                           plusw1	equ	0xFE3
 29101                           fsr1h	equ	0xFE2
 29102                           fsr1l	equ	0xFE1
 29103                           indf2	equ	0xFDF
 29104                           postinc2	equ	0xFDE
 29105                           postdec2	equ	0xFDD
 29106                           plusw2	equ	0xFDB
 29107                           fsr2h	equ	0xFDA
 29108                           fsr2l	equ	0xFD9
 29109                           status	equ	0xFD8
 29110                           
 29111 ;; *************** function _TimerDisable *****************
 29112 ;; Defined at:
 29113 ;;		line 143 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29114 ;; Parameters:    Size  Location     Type
 29115 ;;		None
 29116 ;; Auto vars:     Size  Location     Type
 29117 ;;		None
 29118 ;; Return value:  Size  Location     Type
 29119 ;;                  1    wreg      void 
 29120 ;; Registers used:
 29121 ;;		None
 29122 ;; Tracked objects:
 29123 ;;		On entry : C/0
 29124 ;;		On exit  : C/0
 29125 ;;		Unchanged: C/0
 29126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29131 ;;Total ram usage:        0 bytes
 29132 ;; Hardware stack levels used:    1
 29133 ;; Hardware stack levels required when called:    5
 29134 ;; This function calls:
 29135 ;;		Nothing
 29136 ;; This function is called by:
 29137 ;;		_TimerEnterCritical
 29138 ;; This function uses a non-reentrant model
 29139 ;;
 29140                           
 29141                           	psect	text141
 29142  007680                     __ptext141:
 29143                           	opt stack 0
 29144  007680                     _TimerDisable:
 29145                           	opt stack 17
 29146                           
 29147                           ;symbol.c: 145: INTCONbits.TMR0IE=0;
 29148                           
 29149                           ;incstack = 0
 29150  007680  9AF2               	bcf	intcon,5,c	;volatile
 29151  007682  0012               	return		;funcret
 29152  007684                     __end_of_TimerDisable:
 29153                           	opt stack 0
 29154                           tblptru	equ	0xFF8
 29155                           tblptrh	equ	0xFF7
 29156                           tblptrl	equ	0xFF6
 29157                           tablat	equ	0xFF5
 29158                           prodh	equ	0xFF4
 29159                           prodl	equ	0xFF3
 29160                           intcon	equ	0xFF2
 29161                           intcon3	equ	0xFF0
 29162                           postinc0	equ	0xFEE
 29163                           plusw0	equ	0xFEB
 29164                           fsr0h	equ	0xFEA
 29165                           fsr0l	equ	0xFE9
 29166                           wreg	equ	0xFE8
 29167                           indf1	equ	0xFE7
 29168                           postinc1	equ	0xFE6
 29169                           postdec1	equ	0xFE5
 29170                           plusw1	equ	0xFE3
 29171                           fsr1h	equ	0xFE2
 29172                           fsr1l	equ	0xFE1
 29173                           indf2	equ	0xFDF
 29174                           postinc2	equ	0xFDE
 29175                           postdec2	equ	0xFDD
 29176                           plusw2	equ	0xFDB
 29177                           fsr2h	equ	0xFDA
 29178                           fsr2l	equ	0xFD9
 29179                           status	equ	0xFD8
 29180                           
 29181 ;; *************** function _MiApp_SetChannel *****************
 29182 ;; Defined at:
 29183 ;;		line 168 in file "../src/Bridge.c"
 29184 ;; Parameters:    Size  Location     Type
 29185 ;;  Channel         1    wreg     unsigned char 
 29186 ;; Auto vars:     Size  Location     Type
 29187 ;;  Channel         1   28[BANK0 ] unsigned char 
 29188 ;;  res             1    0        unsigned char 
 29189 ;; Return value:  Size  Location     Type
 29190 ;;                  1    wreg      unsigned char 
 29191 ;; Registers used:
 29192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29193 ;; Tracked objects:
 29194 ;;		On entry : E/1
 29195 ;;		On exit  : 0/0
 29196 ;;		Unchanged: 0/0
 29197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29202 ;;Total ram usage:        2 bytes
 29203 ;; Hardware stack levels used:    1
 29204 ;; Hardware stack levels required when called:    9
 29205 ;; This function calls:
 29206 ;;		_MiMAC_SetChannel
 29207 ;; This function is called by:
 29208 ;;		_MiApp_EstablishConnection
 29209 ;;		_MiApp_SearchConnection
 29210 ;; This function uses a non-reentrant model
 29211 ;;
 29212                           
 29213                           	psect	text142
 29214  0075C8                     __ptext142:
 29215                           	opt stack 0
 29216  0075C8                     _MiApp_SetChannel:
 29217                           	opt stack 20
 29218                           
 29219                           ;incstack = 0
 29220                           ;MiApp_SetChannel@Channel stored from wreg
 29221  0075C8  0100               	movlb	0	; () banked
 29222  0075CA  6F7C               	movwf	MiApp_SetChannel@Channel& (0+255),b
 29223  0075CC  6B79               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
 29224  0075CE  517C               	movf	MiApp_SetChannel@Channel& (0+255),w,b
 29225  0075D0  EFD2  F02F         	goto	_MiMAC_SetChannel
 29226  0075D4                     __end_of_MiApp_SetChannel:
 29227                           	opt stack 0
 29228                           tblptru	equ	0xFF8
 29229                           tblptrh	equ	0xFF7
 29230                           tblptrl	equ	0xFF6
 29231                           tablat	equ	0xFF5
 29232                           prodh	equ	0xFF4
 29233                           prodl	equ	0xFF3
 29234                           intcon	equ	0xFF2
 29235                           intcon3	equ	0xFF0
 29236                           postinc0	equ	0xFEE
 29237                           plusw0	equ	0xFEB
 29238                           fsr0h	equ	0xFEA
 29239                           fsr0l	equ	0xFE9
 29240                           wreg	equ	0xFE8
 29241                           indf1	equ	0xFE7
 29242                           postinc1	equ	0xFE6
 29243                           postdec1	equ	0xFE5
 29244                           plusw1	equ	0xFE3
 29245                           fsr1h	equ	0xFE2
 29246                           fsr1l	equ	0xFE1
 29247                           indf2	equ	0xFDF
 29248                           postinc2	equ	0xFDE
 29249                           postdec2	equ	0xFDD
 29250                           plusw2	equ	0xFDB
 29251                           fsr2h	equ	0xFDA
 29252                           fsr2l	equ	0xFD9
 29253                           status	equ	0xFD8
 29254                           
 29255 ;; *************** function _MiMAC_SetChannel *****************
 29256 ;; Defined at:
 29257 ;;		line 553 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 29258 ;; Parameters:    Size  Location     Type
 29259 ;;  channel         1    wreg     unsigned char 
 29260 ;;  offsetFreq      1   25[BANK0 ] unsigned char 
 29261 ;; Auto vars:     Size  Location     Type
 29262 ;;  channel         1   27[BANK0 ] unsigned char 
 29263 ;; Return value:  Size  Location     Type
 29264 ;;                  1    wreg      unsigned char 
 29265 ;; Registers used:
 29266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29267 ;; Tracked objects:
 29268 ;;		On entry : F/0
 29269 ;;		On exit  : 0/0
 29270 ;;		Unchanged: 0/0
 29271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29272 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29276 ;;Total ram usage:        3 bytes
 29277 ;; Hardware stack levels used:    1
 29278 ;; Hardware stack levels required when called:    8
 29279 ;; This function calls:
 29280 ;;		_RegisterSet
 29281 ;;		_SetRFMode
 29282 ;; This function is called by:
 29283 ;;		_MiApp_SetChannel
 29284 ;; This function uses a non-reentrant model
 29285 ;;
 29286                           
 29287                           	psect	text143
 29288  005FA4                     __ptext143:
 29289                           	opt stack 0
 29290  005FA4                     _MiMAC_SetChannel:
 29291                           	opt stack 20
 29292                           
 29293                           ;incstack = 0
 29294                           ;MiMAC_SetChannel@channel stored from wreg
 29295  005FA4  6F7B               	movwf	MiMAC_SetChannel@channel& (0+255),b
 29296                           
 29297                           ;drv_mrf_miwi_mesh_89xa.c: 555: if( channel >= 32 )
 29298  005FA6  0E1F               	movlw	31
 29299  005FA8  0100               	movlb	0	; () banked
 29300  005FAA  657B               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 29301  005FAC  D001               	goto	l17754
 29302  005FAE  0C00               	retlw	0
 29303  005FB0                     l17754:
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;drv_mrf_miwi_mesh_89xa.c: 558: }
 29307                           ;drv_mrf_miwi_mesh_89xa.c: 561: RegisterSet(0x0C00 | 100);
 29308  005FB0  0E0C               	movlw	12
 29309  005FB2  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29310  005FB4  0E64               	movlw	100
 29311  005FB6  6F75               	movwf	RegisterSet@setting& (0+255),b
 29312  005FB8  EC44  F039         	call	_RegisterSet	;wreg free
 29313                           
 29314                           ;drv_mrf_miwi_mesh_89xa.c: 562: RegisterSet(0x0E00 | PVALUE[channel]);
 29315  005FBC  0E3D               	movlw	low _PVALUE
 29316  005FBE  0100               	movlb	0	; () banked
 29317  005FC0  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
 29318  005FC2  6EF6               	movwf	tblptrl,c
 29319  005FC4  6AF7               	clrf	tblptrh,c
 29320  005FC6  0EFF               	movlw	high _PVALUE
 29321  005FC8  22F7               	addwfc	tblptrh,f,c
 29322  005FCA                     	if	0	;There are less than 3 active tblptr bytes
 29323  005FCA                     	endif
 29324  005FCA  0008               	tblrd		*
 29325  005FCC  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
 29326  005FD0  0E00               	movlw	0
 29327  005FD2  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29328  005FD4  6F75               	movwf	RegisterSet@setting& (0+255),b
 29329  005FD6  0E0E               	movlw	14
 29330  005FD8  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29331  005FDA  EC44  F039         	call	_RegisterSet	;wreg free
 29332                           
 29333                           ;drv_mrf_miwi_mesh_89xa.c: 563: RegisterSet(0x1000 | SVALUE[channel]);
 29334  005FDE  0E5D               	movlw	low _SVALUE
 29335  005FE0  0100               	movlb	0	; () banked
 29336  005FE2  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
 29337  005FE4  6EF6               	movwf	tblptrl,c
 29338  005FE6  6AF7               	clrf	tblptrh,c
 29339  005FE8  0EFF               	movlw	high _SVALUE
 29340  005FEA  22F7               	addwfc	tblptrh,f,c
 29341  005FEC                     	if	0	;There are less than 3 active tblptr bytes
 29342  005FEC                     	endif
 29343  005FEC  0008               	tblrd		*
 29344  005FEE  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
 29345  005FF2  0E00               	movlw	0
 29346  005FF4  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29347  005FF6  6F75               	movwf	RegisterSet@setting& (0+255),b
 29348  005FF8  0E10               	movlw	16
 29349  005FFA  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29350  005FFC  EC44  F039         	call	_RegisterSet	;wreg free
 29351                           
 29352                           ;drv_mrf_miwi_mesh_89xa.c: 564: SetRFMode(0x20);
 29353  006000  0E20               	movlw	32
 29354  006002  ECBF  F032         	call	_SetRFMode
 29355                           
 29356                           ;drv_mrf_miwi_mesh_89xa.c: 565: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 29357  006006  0100               	movlb	0	; () banked
 29358  006008  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29359  00600A  0E4E               	movlw	78
 29360  00600C  6F75               	movwf	RegisterSet@setting& (0+255),b
 29361  00600E  EC44  F039         	call	_RegisterSet	;wreg free
 29362                           
 29363                           ;drv_mrf_miwi_mesh_89xa.c: 566: SetRFMode(0x40);
 29364  006012  0E40               	movlw	64
 29365  006014  ECBF  F032         	call	_SetRFMode
 29366                           
 29367                           ;drv_mrf_miwi_mesh_89xa.c: 567: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29368  006018  0E1C               	movlw	28
 29369  00601A  0100               	movlb	0	; () banked
 29370  00601C  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29371  00601E  0E0F               	movlw	15
 29372  006020  6F75               	movwf	RegisterSet@setting& (0+255),b
 29373  006022  EC44  F039         	call	_RegisterSet	;wreg free
 29374                           
 29375                           ;drv_mrf_miwi_mesh_89xa.c: 568: SetRFMode(0x20);
 29376  006026  0E20               	movlw	32
 29377  006028  ECBF  F032         	call	_SetRFMode
 29378                           
 29379                           ;drv_mrf_miwi_mesh_89xa.c: 569: SetRFMode(0x60);
 29380  00602C  0E60               	movlw	96
 29381  00602E  ECBF  F032         	call	_SetRFMode
 29382                           
 29383                           ;drv_mrf_miwi_mesh_89xa.c: 571: return 1;
 29384  006032  0C01               	retlw	1	;funcret
 29385  006034                     __end_of_MiMAC_SetChannel:
 29386                           	opt stack 0
 29387                           tblptru	equ	0xFF8
 29388                           tblptrh	equ	0xFF7
 29389                           tblptrl	equ	0xFF6
 29390                           tablat	equ	0xFF5
 29391                           prodh	equ	0xFF4
 29392                           prodl	equ	0xFF3
 29393                           intcon	equ	0xFF2
 29394                           intcon3	equ	0xFF0
 29395                           postinc0	equ	0xFEE
 29396                           plusw0	equ	0xFEB
 29397                           fsr0h	equ	0xFEA
 29398                           fsr0l	equ	0xFE9
 29399                           wreg	equ	0xFE8
 29400                           indf1	equ	0xFE7
 29401                           postinc1	equ	0xFE6
 29402                           postdec1	equ	0xFE5
 29403                           plusw1	equ	0xFE3
 29404                           fsr1h	equ	0xFE2
 29405                           fsr1l	equ	0xFE1
 29406                           indf2	equ	0xFDF
 29407                           postinc2	equ	0xFDE
 29408                           postdec2	equ	0xFDD
 29409                           plusw2	equ	0xFDB
 29410                           fsr2h	equ	0xFDA
 29411                           fsr2l	equ	0xFD9
 29412                           status	equ	0xFD8
 29413                           
 29414 ;; *************** function _SetRFMode *****************
 29415 ;; Defined at:
 29416 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 29417 ;; Parameters:    Size  Location     Type
 29418 ;;  mode            1    wreg     unsigned char 
 29419 ;; Auto vars:     Size  Location     Type
 29420 ;;  mode            1   24[BANK0 ] unsigned char 
 29421 ;; Return value:  Size  Location     Type
 29422 ;;                  1    wreg      void 
 29423 ;; Registers used:
 29424 ;;		wreg, status,2, status,0, cstack
 29425 ;; Tracked objects:
 29426 ;;		On entry : 0/0
 29427 ;;		On exit  : 0/0
 29428 ;;		Unchanged: 0/0
 29429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29434 ;;Total ram usage:        1 bytes
 29435 ;; Hardware stack levels used:    1
 29436 ;; Hardware stack levels required when called:    7
 29437 ;; This function calls:
 29438 ;;		_RegisterSet
 29439 ;; This function is called by:
 29440 ;;		_TxPacket
 29441 ;;		_MiMAC_SetChannel
 29442 ;;		_MiMAC_Init
 29443 ;; This function uses a non-reentrant model
 29444 ;;
 29445                           
 29446                           	psect	text144
 29447  00657E                     __ptext144:
 29448                           	opt stack 0
 29449  00657E                     _SetRFMode:
 29450                           	opt stack 15
 29451                           
 29452                           ;incstack = 0
 29453                           ;SetRFMode@mode stored from wreg
 29454  00657E  0100               	movlb	0	; () banked
 29455  006580  6F78               	movwf	SetRFMode@mode& (0+255),b
 29456                           
 29457                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 29458  006582  D027               	goto	l15618
 29459  006584                     l15596:
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 29463  006584  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29464  006586  0E8E               	movlw	142
 29465  006588  6F75               	movwf	RegisterSet@setting& (0+255),b
 29466  00658A  EC44  F039         	call	_RegisterSet	;wreg free
 29467                           
 29468                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 29469  00658E  0E80               	movlw	128
 29470  006590  6E3E               	movwf	_RF_Mode,c
 29471                           
 29472                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 29473  006592  0C80               	retlw	128
 29474  006594                     l15600:
 29475                           
 29476                           ; BSR set to: 0
 29477                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 29478  006594  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29479  006596  0E6E               	movlw	110
 29480  006598  6F75               	movwf	RegisterSet@setting& (0+255),b
 29481  00659A  EC44  F039         	call	_RegisterSet	;wreg free
 29482                           
 29483                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 29484  00659E  0E60               	movlw	96
 29485  0065A0  6E3E               	movwf	_RF_Mode,c
 29486                           
 29487                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 29488  0065A2  0C60               	retlw	96
 29489  0065A4                     l15604:
 29490                           
 29491                           ; BSR set to: 0
 29492                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 29493  0065A4  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29494  0065A6  0E4E               	movlw	78
 29495  0065A8  6F75               	movwf	RegisterSet@setting& (0+255),b
 29496  0065AA  EC44  F039         	call	_RegisterSet	;wreg free
 29497                           
 29498                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 29499  0065AE  0E40               	movlw	64
 29500  0065B0  6E3E               	movwf	_RF_Mode,c
 29501                           
 29502                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 29503  0065B2  0C40               	retlw	64
 29504  0065B4                     l15608:
 29505                           
 29506                           ; BSR set to: 0
 29507                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 29508  0065B4  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29509  0065B6  0E2E               	movlw	46
 29510  0065B8  6F75               	movwf	RegisterSet@setting& (0+255),b
 29511  0065BA  EC44  F039         	call	_RegisterSet	;wreg free
 29512                           
 29513                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 29514  0065BE  0E20               	movlw	32
 29515  0065C0  6E3E               	movwf	_RF_Mode,c
 29516                           
 29517                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 29518  0065C2  0C20               	retlw	32
 29519  0065C4                     l15612:
 29520                           
 29521                           ; BSR set to: 0
 29522                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 29523  0065C4  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29524  0065C6  0E0E               	movlw	14
 29525  0065C8  6F75               	movwf	RegisterSet@setting& (0+255),b
 29526  0065CA  EC44  F039         	call	_RegisterSet	;wreg free
 29527                           
 29528                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 29529  0065CE  6A3E               	clrf	_RF_Mode,c
 29530                           
 29531                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 29532  0065D0  0012               	return	
 29533  0065D2                     l15618:
 29534  0065D2  0100               	movlb	0	; () banked
 29535  0065D4  5178               	movf	SetRFMode@mode& (0+255),w,b
 29536                           
 29537                           ; Switch size 1, requested type "speed"
 29538                           ; Number of cases is 5, Range of values is 0 to 128
 29539                           ; switch strategies available:
 29540                           ; Name         Instructions Cycles
 29541                           ; simple_byte           16     9 (average)
 29542                           ;	Chosen strategy is simple_byte
 29543  0065D6  E0F6               	bz	l15612
 29544  0065D8  0A20               	xorlw	32	; case 32
 29545  0065DA  E0EC               	bz	l15608
 29546  0065DC  0A60               	xorlw	96	; case 64
 29547  0065DE  E0E2               	bz	l15604
 29548  0065E0  0A20               	xorlw	32	; case 96
 29549  0065E2  E0D8               	bz	l15600
 29550  0065E4  0AE0               	xorlw	224	; case 128
 29551  0065E6  E0CE               	bz	l15596
 29552  0065E8  0012               	return		;funcret
 29553  0065EA                     __end_of_SetRFMode:
 29554                           	opt stack 0
 29555                           tblptru	equ	0xFF8
 29556                           tblptrh	equ	0xFF7
 29557                           tblptrl	equ	0xFF6
 29558                           tablat	equ	0xFF5
 29559                           prodh	equ	0xFF4
 29560                           prodl	equ	0xFF3
 29561                           intcon	equ	0xFF2
 29562                           intcon3	equ	0xFF0
 29563                           postinc0	equ	0xFEE
 29564                           plusw0	equ	0xFEB
 29565                           fsr0h	equ	0xFEA
 29566                           fsr0l	equ	0xFE9
 29567                           wreg	equ	0xFE8
 29568                           indf1	equ	0xFE7
 29569                           postinc1	equ	0xFE6
 29570                           postdec1	equ	0xFE5
 29571                           plusw1	equ	0xFE3
 29572                           fsr1h	equ	0xFE2
 29573                           fsr1l	equ	0xFE1
 29574                           indf2	equ	0xFDF
 29575                           postinc2	equ	0xFDE
 29576                           postdec2	equ	0xFDD
 29577                           plusw2	equ	0xFDB
 29578                           fsr2h	equ	0xFDA
 29579                           fsr2l	equ	0xFD9
 29580                           status	equ	0xFD8
 29581                           
 29582 ;; *************** function _RegisterSet *****************
 29583 ;; Defined at:
 29584 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 29585 ;; Parameters:    Size  Location     Type
 29586 ;;  setting         2   21[BANK0 ] unsigned int 
 29587 ;; Auto vars:     Size  Location     Type
 29588 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 29589 ;; Return value:  Size  Location     Type
 29590 ;;                  1    wreg      void 
 29591 ;; Registers used:
 29592 ;;		wreg, status,2, cstack
 29593 ;; Tracked objects:
 29594 ;;		On entry : F/0
 29595 ;;		On exit  : 0/0
 29596 ;;		Unchanged: 0/0
 29597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29601 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29602 ;;Total ram usage:        3 bytes
 29603 ;; Hardware stack levels used:    1
 29604 ;; Hardware stack levels required when called:    6
 29605 ;; This function calls:
 29606 ;;		_SPIPut
 29607 ;; This function is called by:
 29608 ;;		_TxPacket
 29609 ;;		_MiMAC_SetChannel
 29610 ;;		_MiMAC_Init
 29611 ;;		_SetRFMode
 29612 ;; This function uses a non-reentrant model
 29613 ;;
 29614                           
 29615                           	psect	text145
 29616  007288                     __ptext145:
 29617                           	opt stack 0
 29618  007288                     _RegisterSet:
 29619                           	opt stack 15
 29620                           
 29621                           ; BSR set to: 0
 29622                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 29623                           
 29624                           ;incstack = 0
 29625  007288  0E00               	movlw	0
 29626  00728A  B6F0               	btfsc	intcon3,3,c	;volatile
 29627  00728C  0E01               	movlw	1
 29628  00728E  6F77               	movwf	RegisterSet@IRQ1select& (0+255),b
 29629                           
 29630                           ; BSR set to: 0
 29631                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 29632  007290  96F0               	bcf	intcon3,3,c	;volatile
 29633                           
 29634                           ; BSR set to: 0
 29635                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 29636  007292  928C               	bcf	3980,1,c	;volatile
 29637                           
 29638                           ; BSR set to: 0
 29639                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 29640                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 29641  007294  5176               	movf	(RegisterSet@setting+1)& (0+255),w,b
 29642  007296  EC1F  F03A         	call	_SPIPut
 29643                           
 29644                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 29645  00729A  0100               	movlb	0	; () banked
 29646  00729C  5175               	movf	RegisterSet@setting& (0+255),w,b
 29647  00729E  EC1F  F03A         	call	_SPIPut
 29648                           
 29649                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 29650  0072A2  828C               	bsf	3980,1,c	;volatile
 29651                           
 29652                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 29653  0072A4  0100               	movlb	0	; () banked
 29654  0072A6  B177               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 29655  0072A8  D002               	bra	u18065
 29656  0072AA  96F0               	bcf	intcon3,3,c	;volatile
 29657  0072AC  D001               	bra	u18066
 29658  0072AE                     u18065:
 29659  0072AE  86F0               	bsf	intcon3,3,c	;volatile
 29660  0072B0                     u18066:
 29661  0072B0  0012               	return		;funcret
 29662  0072B2                     __end_of_RegisterSet:
 29663                           	opt stack 0
 29664                           tblptru	equ	0xFF8
 29665                           tblptrh	equ	0xFF7
 29666                           tblptrl	equ	0xFF6
 29667                           tablat	equ	0xFF5
 29668                           prodh	equ	0xFF4
 29669                           prodl	equ	0xFF3
 29670                           intcon	equ	0xFF2
 29671                           intcon3	equ	0xFF0
 29672                           postinc0	equ	0xFEE
 29673                           plusw0	equ	0xFEB
 29674                           fsr0h	equ	0xFEA
 29675                           fsr0l	equ	0xFE9
 29676                           wreg	equ	0xFE8
 29677                           indf1	equ	0xFE7
 29678                           postinc1	equ	0xFE6
 29679                           postdec1	equ	0xFE5
 29680                           plusw1	equ	0xFE3
 29681                           fsr1h	equ	0xFE2
 29682                           fsr1l	equ	0xFE1
 29683                           indf2	equ	0xFDF
 29684                           postinc2	equ	0xFDE
 29685                           postdec2	equ	0xFDD
 29686                           plusw2	equ	0xFDB
 29687                           fsr2h	equ	0xFDA
 29688                           fsr2l	equ	0xFD9
 29689                           status	equ	0xFD8
 29690                           
 29691 ;; *************** function _SPIPut *****************
 29692 ;; Defined at:
 29693 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 29694 ;; Parameters:    Size  Location     Type
 29695 ;;  v               1    wreg     unsigned char 
 29696 ;; Auto vars:     Size  Location     Type
 29697 ;;  v               1   19[BANK0 ] unsigned char 
 29698 ;;  i               1   20[BANK0 ] volatile unsigned char 
 29699 ;; Return value:  Size  Location     Type
 29700 ;;                  1    wreg      void 
 29701 ;; Registers used:
 29702 ;;		wreg
 29703 ;; Tracked objects:
 29704 ;;		On entry : 0/0
 29705 ;;		On exit  : 0/0
 29706 ;;		Unchanged: 0/0
 29707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29709 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29712 ;;Total ram usage:        2 bytes
 29713 ;; Hardware stack levels used:    1
 29714 ;; Hardware stack levels required when called:    5
 29715 ;; This function calls:
 29716 ;;		Nothing
 29717 ;; This function is called by:
 29718 ;;		_SPIGet
 29719 ;;		_RegisterSet
 29720 ;;		_RegisterRead
 29721 ;;		_WriteFIFO
 29722 ;; This function uses a non-reentrant model
 29723 ;;
 29724                           
 29725                           	psect	text146
 29726  00743E                     __ptext146:
 29727                           	opt stack 0
 29728  00743E                     _SPIPut:
 29729                           	opt stack 16
 29730                           
 29731                           ;incstack = 0
 29732                           ;SPIPut@v stored from wreg
 29733  00743E  0100               	movlb	0	; () banked
 29734  007440  6F73               	movwf	SPIPut@v& (0+255),b
 29735                           
 29736                           ;spi.c: 228: volatile uint8_t i;
 29737                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 29738  007442  969E               	bcf	3998,3,c	;volatile
 29739                           
 29740                           ;spi.c: 254: i = SSPBUF;
 29741  007444  CFC9 F074          	movff	4041,SPIPut@i	;volatile
 29742  007448                     l78:
 29743                           
 29744                           ;spi.c: 256: {
 29745                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 29746  007448  9EC6               	bcf	4038,7,c	;volatile
 29747                           
 29748                           ;spi.c: 258: SSPBUF = v;
 29749  00744A  C073  FFC9         	movff	SPIPut@v,4041	;volatile
 29750                           
 29751                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 29752  00744E  BEC6               	btfsc	4038,7,c	;volatile
 29753  007450  D7FB               	goto	l78
 29754  007452                     l80:
 29755  007452  B69E               	btfsc	3998,3,c	;volatile
 29756  007454  0012               	return		;funcret
 29757  007456  D7FD               	goto	l80
 29758  007458                     __end_of_SPIPut:
 29759                           	opt stack 0
 29760                           tblptru	equ	0xFF8
 29761                           tblptrh	equ	0xFF7
 29762                           tblptrl	equ	0xFF6
 29763                           tablat	equ	0xFF5
 29764                           prodh	equ	0xFF4
 29765                           prodl	equ	0xFF3
 29766                           intcon	equ	0xFF2
 29767                           intcon3	equ	0xFF0
 29768                           postinc0	equ	0xFEE
 29769                           plusw0	equ	0xFEB
 29770                           fsr0h	equ	0xFEA
 29771                           fsr0l	equ	0xFE9
 29772                           wreg	equ	0xFE8
 29773                           indf1	equ	0xFE7
 29774                           postinc1	equ	0xFE6
 29775                           postdec1	equ	0xFE5
 29776                           plusw1	equ	0xFE3
 29777                           fsr1h	equ	0xFE2
 29778                           fsr1l	equ	0xFE1
 29779                           indf2	equ	0xFDF
 29780                           postinc2	equ	0xFDE
 29781                           postdec2	equ	0xFDD
 29782                           plusw2	equ	0xFDB
 29783                           fsr2h	equ	0xFDA
 29784                           fsr2l	equ	0xFD9
 29785                           status	equ	0xFD8
 29786                           
 29787 ;; *************** function _MiApp_SetAddressPan *****************
 29788 ;; Defined at:
 29789 ;;		line 211 in file "../src/Bridge.c"
 29790 ;; Parameters:    Size  Location     Type
 29791 ;;  address         2   35[BANK0 ] PTR unsigned char 
 29792 ;;		 -> MiApp_EstablishConnection@src(2), myLongAddress(2), myAddr(2), 
 29793 ;;  panid           2   37[BANK0 ] unsigned int 
 29794 ;; Auto vars:     Size  Location     Type
 29795 ;;  addr            2   39[BANK0 ] struct addr_t_def
 29796 ;; Return value:  Size  Location     Type
 29797 ;;                  1    wreg      void 
 29798 ;; Registers used:
 29799 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29800 ;; Tracked objects:
 29801 ;;		On entry : F/0
 29802 ;;		On exit  : E/0
 29803 ;;		Unchanged: 0/0
 29804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29805 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29806 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29808 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29809 ;;Total ram usage:        6 bytes
 29810 ;; Hardware stack levels used:    1
 29811 ;; Hardware stack levels required when called:    7
 29812 ;; This function calls:
 29813 ;;		_NetworkSetAddressPAN
 29814 ;;		_memcpy
 29815 ;; This function is called by:
 29816 ;;		_main
 29817 ;;		_MiApp_ProtocolInit
 29818 ;;		_MiApp_EstablishConnection
 29819 ;; This function uses a non-reentrant model
 29820 ;;
 29821                           
 29822                           	psect	text147
 29823  006C98                     __ptext147:
 29824                           	opt stack 0
 29825  006C98                     _MiApp_SetAddressPan:
 29826                           	opt stack 23
 29827                           
 29828                           ; BSR set to: 0
 29829                           ;Bridge.c: 213: addr_t addr;
 29830                           ;Bridge.c: 214: memcpy(myLongAddress,address,2);
 29831                           
 29832                           ;incstack = 0
 29833  006C98  0EFA               	movlw	low _myLongAddress
 29834  006C9A  6F75               	movwf	memcpy@d1& (0+255),b
 29835  006C9C  0E01               	movlw	high _myLongAddress
 29836  006C9E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 29837  006CA0  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
 29838  006CA4  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 29839  006CA8  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 29840  006CAA  0E02               	movlw	2
 29841  006CAC  6F79               	movwf	memcpy@n& (0+255),b
 29842  006CAE  EC54  F035         	call	_memcpy	;wreg free
 29843                           
 29844                           ;Bridge.c: 215: memcpy(addr.bytes,address,2);
 29845  006CB2  0E87               	movlw	low MiApp_SetAddressPan@addr
 29846  006CB4  6F75               	movwf	memcpy@d1& (0+255),b
 29847  006CB6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 29848  006CB8  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
 29849  006CBC  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 29850  006CC0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 29851  006CC2  0E02               	movlw	2
 29852  006CC4  6F79               	movwf	memcpy@n& (0+255),b
 29853  006CC6  EC54  F035         	call	_memcpy	;wreg free
 29854                           
 29855                           ; BSR set to: 0
 29856                           ;Bridge.c: 216: myPANID=panid;
 29857  006CCA  C085  F0EB         	movff	MiApp_SetAddressPan@panid,_myPANID
 29858  006CCE  C086  F0EC         	movff	MiApp_SetAddressPan@panid+1,_myPANID+1
 29859                           
 29860                           ;Bridge.c: 220: NetworkSetAddressPAN(addr,panid);
 29861  006CD2  C087  F07F         	movff	MiApp_SetAddressPan@addr,NetworkSetAddressPAN@address
 29862  006CD6  C088  F080         	movff	MiApp_SetAddressPan@addr+1,NetworkSetAddressPAN@address+1
 29863  006CDA  C085  F081         	movff	MiApp_SetAddressPan@panid,NetworkSetAddressPAN@PANID
 29864  006CDE  C086  F082         	movff	MiApp_SetAddressPan@panid+1,NetworkSetAddressPAN@PANID+1
 29865  006CE2  EF29  F035         	goto	_NetworkSetAddressPAN	;wreg free
 29866  006CE6                     __end_of_MiApp_SetAddressPan:
 29867                           	opt stack 0
 29868                           tblptru	equ	0xFF8
 29869                           tblptrh	equ	0xFF7
 29870                           tblptrl	equ	0xFF6
 29871                           tablat	equ	0xFF5
 29872                           prodh	equ	0xFF4
 29873                           prodl	equ	0xFF3
 29874                           intcon	equ	0xFF2
 29875                           intcon3	equ	0xFF0
 29876                           postinc0	equ	0xFEE
 29877                           plusw0	equ	0xFEB
 29878                           fsr0h	equ	0xFEA
 29879                           fsr0l	equ	0xFE9
 29880                           wreg	equ	0xFE8
 29881                           indf1	equ	0xFE7
 29882                           postinc1	equ	0xFE6
 29883                           postdec1	equ	0xFE5
 29884                           plusw1	equ	0xFE3
 29885                           fsr1h	equ	0xFE2
 29886                           fsr1l	equ	0xFE1
 29887                           indf2	equ	0xFDF
 29888                           postinc2	equ	0xFDE
 29889                           postdec2	equ	0xFDD
 29890                           plusw2	equ	0xFDB
 29891                           fsr2h	equ	0xFDA
 29892                           fsr2l	equ	0xFD9
 29893                           status	equ	0xFD8
 29894                           
 29895 ;; *************** function _NetworkSetAddressPAN *****************
 29896 ;; Defined at:
 29897 ;;		line 430 in file "../NetworkManager.c"
 29898 ;; Parameters:    Size  Location     Type
 29899 ;;  address         2   31[BANK0 ] struct addr_t_def
 29900 ;;  PANID           2   33[BANK0 ] unsigned int 
 29901 ;; Auto vars:     Size  Location     Type
 29902 ;;		None
 29903 ;; Return value:  Size  Location     Type
 29904 ;;                  1    wreg      void 
 29905 ;; Registers used:
 29906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29907 ;; Tracked objects:
 29908 ;;		On entry : E/1
 29909 ;;		On exit  : E/0
 29910 ;;		Unchanged: 0/0
 29911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29916 ;;Total ram usage:        4 bytes
 29917 ;; Hardware stack levels used:    1
 29918 ;; Hardware stack levels required when called:    6
 29919 ;; This function calls:
 29920 ;;		_NetworkAddressSizeGet
 29921 ;;		_NetworkGetDeviceType
 29922 ;;		_memcpy
 29923 ;; This function is called by:
 29924 ;;		_MiApp_SetAddressPan
 29925 ;;		_NetworkInit
 29926 ;; This function uses a non-reentrant model
 29927 ;;
 29928                           
 29929                           	psect	text148
 29930  006A52                     __ptext148:
 29931                           	opt stack 0
 29932  006A52                     _NetworkSetAddressPAN:
 29933                           	opt stack 23
 29934                           
 29935                           ;NetworkManager.c: 432: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 29936                           
 29937                           ;incstack = 0
 29938  006A52  0EF8               	movlw	low _MyAddress
 29939  006A54  0100               	movlb	0	; () banked
 29940  006A56  6F75               	movwf	memcpy@d1& (0+255),b
 29941  006A58  0E01               	movlw	high _MyAddress
 29942  006A5A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 29943  006A5C  0E7F               	movlw	low NetworkSetAddressPAN@address
 29944  006A5E  6F77               	movwf	memcpy@s1& (0+255),b
 29945  006A60  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 29946  006A62  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 29947  006A66  0100               	movlb	0	; () banked
 29948  006A68  6F79               	movwf	memcpy@n& (0+255),b
 29949  006A6A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 29950  006A6C  EC54  F035         	call	_memcpy	;wreg free
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;NetworkManager.c: 433: DEVPanID=PANID;
 29954  006A70  C081  F1F4         	movff	NetworkSetAddressPAN@PANID,_DEVPanID
 29955  006A74  C082  F1F5         	movff	NetworkSetAddressPAN@PANID+1,_DEVPanID+1
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;NetworkManager.c: 434: if(NetworkGetDeviceType()==DeviceCoordinator)
 29959  006A78  EC2A  F03B         	call	_NetworkGetDeviceType	;wreg free
 29960  006A7C  0900               	iorlw	0
 29961  006A7E  A4D8               	btfss	status,2,c
 29962  006A80  0012               	return	
 29963                           
 29964                           ; BSR set to: 1
 29965                           ;NetworkManager.c: 435: {
 29966                           ;NetworkManager.c: 436: CoordinatorAddr=MyAddress;
 29967  006A82  C1F8  F1E6         	movff	_MyAddress,_CoordinatorAddr
 29968  006A86  C1F9  F1E7         	movff	_MyAddress+1,_CoordinatorAddr+1
 29969                           
 29970                           ; BSR set to: 1
 29971                           ;NetworkManager.c: 437: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 29972  006A8A  0ED9               	movlw	low _routeInfo
 29973  006A8C  0100               	movlb	0	; () banked
 29974  006A8E  6F75               	movwf	memcpy@d1& (0+255),b
 29975  006A90  0E01               	movlw	high _routeInfo
 29976  006A92  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 29977  006A94  0E7F               	movlw	low NetworkSetAddressPAN@address
 29978  006A96  6F77               	movwf	memcpy@s1& (0+255),b
 29979  006A98  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 29980  006A9A  EC2D  F03B         	call	_NetworkAddressSizeGet	;wreg free
 29981  006A9E  0100               	movlb	0	; () banked
 29982  006AA0  6F79               	movwf	memcpy@n& (0+255),b
 29983  006AA2  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 29984  006AA4  EF54  F035         	goto	_memcpy	;wreg free
 29985  006AA8                     __end_of_NetworkSetAddressPAN:
 29986                           	opt stack 0
 29987                           tblptru	equ	0xFF8
 29988                           tblptrh	equ	0xFF7
 29989                           tblptrl	equ	0xFF6
 29990                           tablat	equ	0xFF5
 29991                           prodh	equ	0xFF4
 29992                           prodl	equ	0xFF3
 29993                           intcon	equ	0xFF2
 29994                           intcon3	equ	0xFF0
 29995                           postinc0	equ	0xFEE
 29996                           plusw0	equ	0xFEB
 29997                           fsr0h	equ	0xFEA
 29998                           fsr0l	equ	0xFE9
 29999                           wreg	equ	0xFE8
 30000                           indf1	equ	0xFE7
 30001                           postinc1	equ	0xFE6
 30002                           postdec1	equ	0xFE5
 30003                           plusw1	equ	0xFE3
 30004                           fsr1h	equ	0xFE2
 30005                           fsr1l	equ	0xFE1
 30006                           indf2	equ	0xFDF
 30007                           postinc2	equ	0xFDE
 30008                           postdec2	equ	0xFDD
 30009                           plusw2	equ	0xFDB
 30010                           fsr2h	equ	0xFDA
 30011                           fsr2l	equ	0xFD9
 30012                           status	equ	0xFD8
 30013                           
 30014 ;; *************** function _memcpy *****************
 30015 ;; Defined at:
 30016 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 30017 ;; Parameters:    Size  Location     Type
 30018 ;;  d1              2   21[BANK0 ] PTR void 
 30019 ;;		 -> beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), list.address(2), 
 30020 ;;		 -> list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 30021 ;;		 -> userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(2), NetworkManagerTask@data(19), 
 30022 ;;		 -> routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 30023 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(2), TunnelManagerGetTunnel@retAddr(
      +2), 
 30024 ;;		 -> tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(2), 
 30025 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(72), RouteManagerProcessReceive@from(
      +2), 
 30026 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiMAC_ReceivedPacket@FrameCounter(4), MiMAC_Receiv
      +edPacket@addr(2), 
 30027 ;;		 -> key(8), MACTxBuffer(64), ConnectionTable.Address(2), MACRxPacket(12), 
 30028 ;;		 -> MiApp_MessageAvailable@src(2), MiApp_UnicastAddress@src(2), MiApp_SetAddressPan@addr(2), MiApp_EstablishConnecti
      +on@src(2), 
 30029 ;;		 -> MiApp_StartConnection@src(2), ConnectionTable(55), myLongAddress(2), Read_MAC_Address@address(2), 
 30030 ;;		 -> NULL(0), 
 30031 ;;  s1              2   23[BANK0 ] PTR const void 
 30032 ;;		 -> Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), address.bytes(2), 
 30033 ;;		 -> IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), NetworkSendDiscoverResponse@datab
      +uff(64), 
 30034 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(2)
      +, address.bytes(2), 
 30035 ;;		 -> NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), TMSendDataToRFD@databuff(64), 
 30036 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), TunnelManagerGetTunnel@device(2), 
 30037 ;;		 -> tunnels.parent(2), tunnels.TxTime(8), tunnels(120), neighbor_tbl.ll_addr.bytes(2), 
 30038 ;;		 -> neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(2), radioReceivedPacket@c
      +hild(2), 
 30039 ;;		 -> source.bytes(2), radioReceivedPacket@source(2), RxPacket.Payload(64), transParam.DestPANID(2), 
 30040 ;;		 -> MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), RxPacket(142), 
 30041 ;;		 -> address.bytes(2), AddNodeToNetworkTable@address(2), srcAddress.bytes(2), srcAddress(2), 
 30042 ;;		 -> MiApp_EstablishConnection@src(2), myPANID(2), myLongAddress(2), Read_MAC_Address@addr8(6), 
 30043 ;;		 -> NULL(0), TxBuffer(64), main@addr(2), myAddr(2), 
 30044 ;;  n               2   25[BANK0 ] unsigned int 
 30045 ;; Auto vars:     Size  Location     Type
 30046 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 30047 ;;		 -> Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), address.bytes(2), 
 30048 ;;		 -> IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), NetworkSendDiscoverResponse@datab
      +uff(64), 
 30049 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(2)
      +, address.bytes(2), 
 30050 ;;		 -> NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), TMSendDataToRFD@databuff(64), 
 30051 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), TunnelManagerGetTunnel@device(2), 
 30052 ;;		 -> tunnels.parent(2), tunnels.TxTime(8), tunnels(120), neighbor_tbl.ll_addr.bytes(2), 
 30053 ;;		 -> neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(2), radioReceivedPacket@c
      +hild(2), 
 30054 ;;		 -> source.bytes(2), radioReceivedPacket@source(2), RxPacket.Payload(64), transParam.DestPANID(2), 
 30055 ;;		 -> MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), RxPacket(142), 
 30056 ;;		 -> address.bytes(2), AddNodeToNetworkTable@address(2), srcAddress.bytes(2), srcAddress(2), 
 30057 ;;		 -> MiApp_EstablishConnection@src(2), myPANID(2), myLongAddress(2), Read_MAC_Address@addr8(6), 
 30058 ;;		 -> NULL(0), TxBuffer(64), main@addr(2), myAddr(2), 
 30059 ;;  d               2   27[BANK0 ] PTR unsigned char 
 30060 ;;		 -> beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), list.address(2), 
 30061 ;;		 -> list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 30062 ;;		 -> userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(2), NetworkManagerTask@data(19), 
 30063 ;;		 -> routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 30064 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(2), TunnelManagerGetTunnel@retAddr(
      +2), 
 30065 ;;		 -> tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(2), 
 30066 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(72), RouteManagerProcessReceive@from(
      +2), 
 30067 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiMAC_ReceivedPacket@FrameCounter(4), MiMAC_Receiv
      +edPacket@addr(2), 
 30068 ;;		 -> key(8), MACTxBuffer(64), ConnectionTable.Address(2), MACRxPacket(12), 
 30069 ;;		 -> MiApp_MessageAvailable@src(2), MiApp_UnicastAddress@src(2), MiApp_SetAddressPan@addr(2), MiApp_EstablishConnecti
      +on@src(2), 
 30070 ;;		 -> MiApp_StartConnection@src(2), ConnectionTable(55), myLongAddress(2), Read_MAC_Address@address(2), 
 30071 ;;		 -> NULL(0), 
 30072 ;; Return value:  Size  Location     Type
 30073 ;;                  2   21[BANK0 ] PTR void 
 30074 ;; Registers used:
 30075 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30076 ;; Tracked objects:
 30077 ;;		On entry : F/0
 30078 ;;		On exit  : F/0
 30079 ;;		Unchanged: 0/0
 30080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30081 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30082 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30084 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30085 ;;Total ram usage:       10 bytes
 30086 ;; Hardware stack levels used:    1
 30087 ;; Hardware stack levels required when called:    5
 30088 ;; This function calls:
 30089 ;;		Nothing
 30090 ;; This function is called by:
 30091 ;;		_Read_MAC_Address
 30092 ;;		_MiApp_EstablishConnection
 30093 ;;		_MiApp_SetAddressPan
 30094 ;;		_MiApp_UnicastAddress
 30095 ;;		_MiApp_MessageAvailable
 30096 ;;		_AddNodeToNetworkTable
 30097 ;;		_MiMAC_Init
 30098 ;;		_MiMAC_SendPacket
 30099 ;;		_MiMAC_ReceivedPacket
 30100 ;;		_radioReceivedPacket
 30101 ;;		_RouteManagerProcessReceive
 30102 ;;		_networkSendBeacon
 30103 ;;		_LEAppendNeighborInfo
 30104 ;;		_LE_processReceivedMessage
 30105 ;;		_BroadcastManagerDelaySend
 30106 ;;		_TunnelManagerSetTunnel
 30107 ;;		_TunnelManagerGetTunnel
 30108 ;;		_TunnelManagerInvalidateTunnel
 30109 ;;		_TransportManagerTask
 30110 ;;		_TMSendFormedPacketTowardsCoordinator
 30111 ;;		_NetworkInit
 30112 ;;		_NetworkManagerProcessIncomingData
 30113 ;;		_NetworkPrepareSendPacket
 30114 ;;		_NetworkSetAddressPAN
 30115 ;;		_IsNetworkDevice
 30116 ;;		_DeviceManagerBufferDeviceData
 30117 ;;		_DeviceManagerGetDeviceData
 30118 ;;		_MSTickGet
 30119 ;; This function uses a non-reentrant model
 30120 ;;
 30121                           
 30122                           	psect	text149
 30123  006AA8                     __ptext149:
 30124                           	opt stack 0
 30125  006AA8                     _memcpy:
 30126                           	opt stack 24
 30127                           
 30128                           ; BSR set to: 0
 30129                           
 30130                           ;incstack = 0
 30131  006AA8  C077  F07D         	movff	memcpy@s1,memcpy@s
 30132  006AAC  C078  F07E         	movff	memcpy@s1+1,memcpy@s+1
 30133  006AB0  C075  F07B         	movff	memcpy@d1,memcpy@d
 30134  006AB4  C076  F07C         	movff	memcpy@d1+1,memcpy@d+1
 30135  006AB8  D01A               	goto	l15724
 30136  006ABA                     l15718:
 30137                           
 30138                           ; BSR set to: 0
 30139  006ABA  C07D  FFF6         	movff	memcpy@s,tblptrl
 30140  006ABE  C07E  FFF7         	movff	memcpy@s+1,tblptrh
 30141  006AC2  6AF8               	clrf	tblptru,c
 30142  006AC4  C07B  FFD9         	movff	memcpy@d,fsr2l
 30143  006AC8  C07C  FFDA         	movff	memcpy@d+1,fsr2h
 30144  006ACC  0E0E               	movlw	(high __ramtop+-1)
 30145  006ACE  64F7               	cpfsgt	tblptrh,c
 30146  006AD0  D003               	bra	u18307
 30147  006AD2  0008               	tblrd		*
 30148  006AD4  50F5               	movf	tablat,w,c
 30149  006AD6  D005               	bra	u18300
 30150  006AD8                     u18307:
 30151  006AD8  CFF6 FFE9          	movff	tblptrl,fsr0l
 30152  006ADC  CFF7 FFEA          	movff	tblptrh,fsr0h
 30153  006AE0  50EF               	movf	indf0,w,c
 30154  006AE2                     u18300:
 30155  006AE2  6EDF               	movwf	indf2,c
 30156  006AE4  0100               	movlb	0	; () banked
 30157  006AE6  4B7D               	infsnz	memcpy@s& (0+255),f,b
 30158  006AE8  2B7E               	incf	(memcpy@s+1)& (0+255),f,b
 30159                           
 30160                           ; BSR set to: 0
 30161  006AEA  4B7B               	infsnz	memcpy@d& (0+255),f,b
 30162  006AEC  2B7C               	incf	(memcpy@d+1)& (0+255),f,b
 30163  006AEE                     l15724:
 30164                           
 30165                           ; BSR set to: 0
 30166  006AEE  0779               	decf	memcpy@n& (0+255),f,b
 30167  006AF0  A0D8               	btfss	status,0,c
 30168  006AF2  077A               	decf	(memcpy@n+1)& (0+255),f,b
 30169  006AF4  2979               	incf	memcpy@n& (0+255),w,b
 30170  006AF6  E1E1               	bnz	l15718
 30171  006AF8  297A               	incf	(memcpy@n+1)& (0+255),w,b
 30172  006AFA  E1DF               	bnz	l15718
 30173                           
 30174                           ; BSR set to: 0
 30175  006AFC  0012               	return		;funcret
 30176  006AFE                     __end_of_memcpy:
 30177                           	opt stack 0
 30178                           tblptru	equ	0xFF8
 30179                           tblptrh	equ	0xFF7
 30180                           tblptrl	equ	0xFF6
 30181                           tablat	equ	0xFF5
 30182                           prodh	equ	0xFF4
 30183                           prodl	equ	0xFF3
 30184                           intcon	equ	0xFF2
 30185                           intcon3	equ	0xFF0
 30186                           indf0	equ	0xFEF
 30187                           postinc0	equ	0xFEE
 30188                           plusw0	equ	0xFEB
 30189                           fsr0h	equ	0xFEA
 30190                           fsr0l	equ	0xFE9
 30191                           wreg	equ	0xFE8
 30192                           indf1	equ	0xFE7
 30193                           postinc1	equ	0xFE6
 30194                           postdec1	equ	0xFE5
 30195                           plusw1	equ	0xFE3
 30196                           fsr1h	equ	0xFE2
 30197                           fsr1l	equ	0xFE1
 30198                           indf2	equ	0xFDF
 30199                           postinc2	equ	0xFDE
 30200                           postdec2	equ	0xFDD
 30201                           plusw2	equ	0xFDB
 30202                           fsr2h	equ	0xFDA
 30203                           fsr2l	equ	0xFD9
 30204                           status	equ	0xFD8
 30205                           
 30206 ;; *************** function _NetworkGetDeviceType *****************
 30207 ;; Defined at:
 30208 ;;		line 204 in file "../NetworkManager.c"
 30209 ;; Parameters:    Size  Location     Type
 30210 ;;		None
 30211 ;; Auto vars:     Size  Location     Type
 30212 ;;		None
 30213 ;; Return value:  Size  Location     Type
 30214 ;;                  1    wreg      enum E8070
 30215 ;; Registers used:
 30216 ;;		wreg, status,2
 30217 ;; Tracked objects:
 30218 ;;		On entry : C/0
 30219 ;;		On exit  : F/1
 30220 ;;		Unchanged: 0/0
 30221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30226 ;;Total ram usage:        0 bytes
 30227 ;; Hardware stack levels used:    1
 30228 ;; Hardware stack levels required when called:    5
 30229 ;; This function calls:
 30230 ;;		Nothing
 30231 ;; This function is called by:
 30232 ;;		_radioReceivedPacket
 30233 ;;		_NetworkUnicastData
 30234 ;;		_RouteManagerPerformUpdate
 30235 ;;		_networkSendBeacon
 30236 ;;		_TMSendFormedPacketToRFD
 30237 ;;		_NetworkManagerTask
 30238 ;;		_NetworkHasRoute
 30239 ;;		_NetworkManagerProcessIncomingData
 30240 ;;		_NetworkPrepareSendPacket
 30241 ;;		_NetworkSetAddressPAN
 30242 ;; This function uses a non-reentrant model
 30243 ;;
 30244                           
 30245                           	psect	text150
 30246  007654                     __ptext150:
 30247                           	opt stack 0
 30248  007654                     _NetworkGetDeviceType:
 30249                           	opt stack 21
 30250                           
 30251                           ;NetworkManager.c: 206: return(DeviceType);
 30252                           
 30253                           ; BSR set to: 0
 30254                           ;incstack = 0
 30255  007654  0101               	movlb	1	; () banked
 30256  007656  51F6               	movf	_DeviceType& (0+255),w,b
 30257                           
 30258                           ; BSR set to: 1
 30259  007658  0012               	return		;funcret
 30260  00765A                     __end_of_NetworkGetDeviceType:
 30261                           	opt stack 0
 30262                           tblptru	equ	0xFF8
 30263                           tblptrh	equ	0xFF7
 30264                           tblptrl	equ	0xFF6
 30265                           tablat	equ	0xFF5
 30266                           prodh	equ	0xFF4
 30267                           prodl	equ	0xFF3
 30268                           intcon	equ	0xFF2
 30269                           intcon3	equ	0xFF0
 30270                           indf0	equ	0xFEF
 30271                           postinc0	equ	0xFEE
 30272                           plusw0	equ	0xFEB
 30273                           fsr0h	equ	0xFEA
 30274                           fsr0l	equ	0xFE9
 30275                           wreg	equ	0xFE8
 30276                           indf1	equ	0xFE7
 30277                           postinc1	equ	0xFE6
 30278                           postdec1	equ	0xFE5
 30279                           plusw1	equ	0xFE3
 30280                           fsr1h	equ	0xFE2
 30281                           fsr1l	equ	0xFE1
 30282                           indf2	equ	0xFDF
 30283                           postinc2	equ	0xFDE
 30284                           postdec2	equ	0xFDD
 30285                           plusw2	equ	0xFDB
 30286                           fsr2h	equ	0xFDA
 30287                           fsr2l	equ	0xFD9
 30288                           status	equ	0xFD8
 30289                           
 30290 ;; *************** function _NetworkAddressSizeGet *****************
 30291 ;; Defined at:
 30292 ;;		line 161 in file "../NetworkManager.c"
 30293 ;; Parameters:    Size  Location     Type
 30294 ;;		None
 30295 ;; Auto vars:     Size  Location     Type
 30296 ;;		None
 30297 ;; Return value:  Size  Location     Type
 30298 ;;                  1    wreg      unsigned char 
 30299 ;; Registers used:
 30300 ;;		wreg, status,2
 30301 ;; Tracked objects:
 30302 ;;		On entry : F/0
 30303 ;;		On exit  : F/1
 30304 ;;		Unchanged: 0/0
 30305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30310 ;;Total ram usage:        0 bytes
 30311 ;; Hardware stack levels used:    1
 30312 ;; Hardware stack levels required when called:    5
 30313 ;; This function calls:
 30314 ;;		Nothing
 30315 ;; This function is called by:
 30316 ;;		_routeInfoInit
 30317 ;;		_RouteManagerProcessReceive
 30318 ;;		_RoutingTableFindDeviceOrParent
 30319 ;;		_networkSendBeacon
 30320 ;;		_LEAppendNeighborInfo
 30321 ;;		_LE_processReceivedMessage
 30322 ;;		_TunnelManagerSetTunnel
 30323 ;;		_TunnelManagerGetTunnel
 30324 ;;		_TunnelManagerInvalidateTunnel
 30325 ;;		_NetworkInit
 30326 ;;		_isBroadcastAddress
 30327 ;;		_isSameAddress
 30328 ;;		_CoordinatorGenericAddress
 30329 ;;		_NetworkPrepareSendPacket
 30330 ;;		_NetworkSendDiscoverRequest
 30331 ;;		_NetworkSendDiscoverResponse
 30332 ;;		_NetworkSetAddressPAN
 30333 ;;		_IsNetworkDevice
 30334 ;;		_DeviceManagerBufferDeviceData
 30335 ;;		_DeviceManagerGetDeviceData
 30336 ;;		_NetworkBroadcastData
 30337 ;; This function uses a non-reentrant model
 30338 ;;
 30339                           
 30340                           	psect	text151
 30341  00765A                     __ptext151:
 30342                           	opt stack 0
 30343  00765A                     _NetworkAddressSizeGet:
 30344                           	opt stack 22
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;NetworkManager.c: 163: return(addressLen);
 30348                           
 30349                           ; BSR set to: 1
 30350                           ;incstack = 0
 30351  00765A  0101               	movlb	1	; () banked
 30352  00765C  51F7               	movf	_addressLen& (0+255),w,b
 30353                           
 30354                           ; BSR set to: 1
 30355  00765E  0012               	return		;funcret
 30356  007660                     __end_of_NetworkAddressSizeGet:
 30357                           	opt stack 0
 30358                           tblptru	equ	0xFF8
 30359                           tblptrh	equ	0xFF7
 30360                           tblptrl	equ	0xFF6
 30361                           tablat	equ	0xFF5
 30362                           prodh	equ	0xFF4
 30363                           prodl	equ	0xFF3
 30364                           intcon	equ	0xFF2
 30365                           intcon3	equ	0xFF0
 30366                           indf0	equ	0xFEF
 30367                           postinc0	equ	0xFEE
 30368                           plusw0	equ	0xFEB
 30369                           fsr0h	equ	0xFEA
 30370                           fsr0l	equ	0xFE9
 30371                           wreg	equ	0xFE8
 30372                           indf1	equ	0xFE7
 30373                           postinc1	equ	0xFE6
 30374                           postdec1	equ	0xFE5
 30375                           plusw1	equ	0xFE3
 30376                           fsr1h	equ	0xFE2
 30377                           fsr1l	equ	0xFE1
 30378                           indf2	equ	0xFDF
 30379                           postinc2	equ	0xFDE
 30380                           postdec2	equ	0xFDD
 30381                           plusw2	equ	0xFDB
 30382                           fsr2h	equ	0xFDA
 30383                           fsr2l	equ	0xFD9
 30384                           status	equ	0xFD8
 30385                           
 30386 ;; *************** function _LEDManagerTask *****************
 30387 ;; Defined at:
 30388 ;;		line 498 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 30389 ;; Parameters:    Size  Location     Type
 30390 ;;		None
 30391 ;; Auto vars:     Size  Location     Type
 30392 ;;  i               2   49[BANK0 ] unsigned int 
 30393 ;; Return value:  Size  Location     Type
 30394 ;;                  1    wreg      void 
 30395 ;; Registers used:
 30396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30397 ;; Tracked objects:
 30398 ;;		On entry : F/0
 30399 ;;		On exit  : F/0
 30400 ;;		Unchanged: 0/0
 30401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30404 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30405 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30406 ;;Total ram usage:       12 bytes
 30407 ;; Hardware stack levels used:    1
 30408 ;; Hardware stack levels required when called:    7
 30409 ;; This function calls:
 30410 ;;		_MiWi_TickGetMs
 30411 ;; This function is called by:
 30412 ;;		_main
 30413 ;; This function uses a non-reentrant model
 30414 ;;
 30415                           
 30416                           	psect	text152
 30417  0012D4                     __ptext152:
 30418                           	opt stack 0
 30419  0012D4                     _LEDManagerTask:
 30420                           	opt stack 23
 30421                           
 30422                           ; BSR set to: 0
 30423                           ;system.c: 500: uint16_t i;
 30424                           ;system.c: 501: static LEDState_t lNextState[LEDCount];
 30425                           ;system.c: 502: static MIWI_TICK tStart[LEDCount];
 30426                           ;system.c: 504: for(i=0;i<LEDCount;i++)
 30427                           
 30428                           ; BSR set to: 1
 30429                           ;incstack = 0
 30430  0012D4  6B91               	clrf	LEDManagerTask@i& (0+255),b
 30431  0012D6  6B92               	clrf	(LEDManagerTask@i+1)& (0+255),b
 30432  0012D8  D194               	goto	l18686
 30433  0012DA                     l18566:
 30434                           
 30435                           ; BSR set to: 0
 30436                           ;system.c: 509: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30437  0012DA  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30438  0012DC  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30439  0012DE  E102               	bnz	l18570
 30440                           
 30441                           ; BSR set to: 0
 30442  0012E0  948B               	bcf	3979,2,c	;volatile
 30443  0012E2  D006               	goto	l18574
 30444  0012E4                     l18570:
 30445                           
 30446                           ; BSR set to: 0
 30447  0012E4  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30448  0012E6  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30449  0012E8  E102               	bnz	l254
 30450                           
 30451                           ; BSR set to: 0
 30452  0012EA  9C89               	bcf	3977,6,c	;volatile
 30453  0012EC  D001               	goto	l18574
 30454  0012EE                     l254:
 30455                           
 30456                           ; BSR set to: 0
 30457  0012EE  9E89               	bcf	3977,7,c	;volatile
 30458  0012F0                     l18574:
 30459                           
 30460                           ; BSR set to: 0
 30461                           ;system.c: 510: LEDState[i]=LED_Off;
 30462  0012F0  0EC5               	movlw	low _LEDState
 30463  0012F2  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30464  0012F4  6ED9               	movwf	fsr2l,c
 30465  0012F6  0E01               	movlw	high _LEDState
 30466  0012F8  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30467  0012FA  6EDA               	movwf	fsr2h,c
 30468  0012FC  0E01               	movlw	1
 30469  0012FE  D06C               	goto	L11
 30470  001300                     l18576:
 30471                           
 30472                           ; BSR set to: 0
 30473                           ;system.c: 514: if(LEDCmd[i]==lCMD_On)
 30474  001300  0EC2               	movlw	low _LEDCmd
 30475  001302  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30476  001304  6ED9               	movwf	fsr2l,c
 30477  001306  0E01               	movlw	high _LEDCmd
 30478  001308  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30479  00130A  6EDA               	movwf	fsr2h,c
 30480  00130C  0E02               	movlw	2
 30481  00130E  18DE               	xorwf	postinc2,w,c
 30482  001310  E10A               	bnz	l18588
 30483  001312  D051               	goto	L17
 30484  001314                     l261:
 30485                           
 30486                           ; BSR set to: 0
 30487  001314  8E89               	bsf	3977,7,c	;volatile
 30488  001316                     l18586:
 30489                           
 30490                           ; BSR set to: 0
 30491                           ;system.c: 517: LEDState[i]=LED_On;
 30492  001316  0EC5               	movlw	low _LEDState
 30493  001318  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30494  00131A  6ED9               	movwf	fsr2l,c
 30495  00131C  0E01               	movlw	high _LEDState
 30496  00131E  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30497  001320  6EDA               	movwf	fsr2h,c
 30498  001322  0E05               	movlw	5
 30499  001324  D119               	goto	L12
 30500  001326                     l18588:
 30501                           
 30502                           ; BSR set to: 0
 30503  001326  0EC2               	movlw	low _LEDCmd
 30504  001328  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30505  00132A  6ED9               	movwf	fsr2l,c
 30506  00132C  0E01               	movlw	high _LEDCmd
 30507  00132E  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30508  001330  6EDA               	movwf	fsr2h,c
 30509  001332  0E03               	movlw	3
 30510  001334  18DE               	xorwf	postinc2,w,c
 30511  001336  E136               	bnz	l18604
 30512                           
 30513                           ; BSR set to: 0
 30514                           ;system.c: 519: {
 30515                           ;system.c: 520: tStart[i]=MiWi_TickGetMs();
 30516  001338  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 30517  00133C  0E00               	movlw	low LEDManagerTask@tStart
 30518  00133E  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30519  001340  0E02               	movlw	high LEDManagerTask@tStart
 30520  001342  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30521  001344  90D8               	bcf	status,0,c
 30522  001346  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30523  001348  6ED9               	movwf	fsr2l,c
 30524  00134A  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30525  00134C  6EDA               	movwf	fsr2h,c
 30526  00134E  90D8               	bcf	status,0,c
 30527  001350  36D9               	rlcf	fsr2l,f,c
 30528  001352  36DA               	rlcf	fsr2h,f,c
 30529  001354  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30530  001356  26D9               	addwf	fsr2l,f,c
 30531  001358  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30532  00135A  22DA               	addwfc	fsr2h,f,c
 30533  00135C  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 30534  001360  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 30535  001364  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 30536  001368  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 30537                           
 30538                           ; BSR set to: 0
 30539                           ;system.c: 521: LEDState[i]=LED_DelayActive;
 30540  00136C  0EC5               	movlw	low _LEDState
 30541  00136E  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30542  001370  6ED9               	movwf	fsr2l,c
 30543  001372  0E01               	movlw	high _LEDState
 30544  001374  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30545  001376  6EDA               	movwf	fsr2h,c
 30546  001378  0E03               	movlw	3
 30547  00137A  6EDF               	movwf	indf2,c
 30548                           
 30549                           ; BSR set to: 0
 30550                           ;system.c: 522: lNextState[i]=LED_Off;
 30551  00137C  0E2C               	movlw	low LEDManagerTask@lNextState
 30552  00137E  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30553  001380  6ED9               	movwf	fsr2l,c
 30554  001382  0E02               	movlw	high LEDManagerTask@lNextState
 30555  001384  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30556  001386  6EDA               	movwf	fsr2h,c
 30557  001388  0E01               	movlw	1
 30558  00138A  6EDF               	movwf	indf2,c
 30559                           
 30560                           ; BSR set to: 0
 30561                           ;system.c: 523: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 30562  00138C  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30563  00138E  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30564  001390  E102               	bnz	l18600
 30565                           
 30566                           ; BSR set to: 0
 30567  001392  848B               	bsf	3979,2,c	;volatile
 30568  001394  D01A               	goto	l263
 30569  001396                     l18600:
 30570                           
 30571                           ; BSR set to: 0
 30572  001396  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30573  001398  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30574  00139A  E102               	bnz	l267
 30575                           
 30576                           ; BSR set to: 0
 30577  00139C  8C89               	bsf	3977,6,c	;volatile
 30578  00139E  D015               	goto	l263
 30579  0013A0                     l267:
 30580                           
 30581                           ; BSR set to: 0
 30582  0013A0  8E89               	bsf	3977,7,c	;volatile
 30583  0013A2  D013               	goto	l263
 30584  0013A4                     l18604:
 30585                           
 30586                           ; BSR set to: 0
 30587  0013A4  0EC2               	movlw	low _LEDCmd
 30588  0013A6  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30589  0013A8  6ED9               	movwf	fsr2l,c
 30590  0013AA  0E01               	movlw	high _LEDCmd
 30591  0013AC  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30592  0013AE  6EDA               	movwf	fsr2h,c
 30593  0013B0  0E04               	movlw	4
 30594  0013B2  18DE               	xorwf	postinc2,w,c
 30595  0013B4  E10A               	bnz	l263
 30596  0013B6                     L17:
 30597                           
 30598                           ; BSR set to: 0
 30599                           ;system.c: 525: {
 30600                           ;system.c: 526: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 30601  0013B6  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30602  0013B8  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30603  0013BA  E102               	bnz	l18610
 30604                           
 30605                           ; BSR set to: 0
 30606  0013BC  848B               	bsf	3979,2,c	;volatile
 30607  0013BE  D7AB               	goto	l18586
 30608  0013C0                     l18610:
 30609                           
 30610                           ; BSR set to: 0
 30611  0013C0  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30612  0013C2  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30613  0013C4  E1A7               	bnz	l261
 30614                           
 30615                           ; BSR set to: 0
 30616  0013C6  8C89               	bsf	3977,6,c	;volatile
 30617  0013C8  D7A6               	goto	l18586
 30618  0013CA                     l263:
 30619                           
 30620                           ; BSR set to: 0
 30621                           ;system.c: 528: }
 30622                           ;system.c: 529: LEDCmd[i]=lCMD_None;
 30623  0013CA  0EC2               	movlw	low _LEDCmd
 30624  0013CC  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30625  0013CE  6ED9               	movwf	fsr2l,c
 30626  0013D0  0E01               	movlw	high _LEDCmd
 30627  0013D2  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30628  0013D4  6EDA               	movwf	fsr2h,c
 30629  0013D6  0E00               	movlw	0
 30630  0013D8                     L11:
 30631  0013D8  6EDF               	movwf	indf2,c
 30632                           
 30633                           ;system.c: 530: break;
 30634  0013DA  D127               	goto	l18688
 30635  0013DC                     l18616:
 30636                           
 30637                           ; BSR set to: 0
 30638                           ;system.c: 533: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 30639  0013DC  0E00               	movlw	low LEDManagerTask@tStart
 30640  0013DE  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30641  0013E0  0E02               	movlw	high LEDManagerTask@tStart
 30642  0013E2  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30643  0013E4  90D8               	bcf	status,0,c
 30644  0013E6  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30645  0013E8  6ED9               	movwf	fsr2l,c
 30646  0013EA  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30647  0013EC  6EDA               	movwf	fsr2h,c
 30648  0013EE  90D8               	bcf	status,0,c
 30649  0013F0  36D9               	rlcf	fsr2l,f,c
 30650  0013F2  36DA               	rlcf	fsr2h,f,c
 30651  0013F4  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30652  0013F6  26D9               	addwf	fsr2l,f,c
 30653  0013F8  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30654  0013FA  22DA               	addwfc	fsr2h,f,c
 30655  0013FC  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 30656  001400  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 30657  001404  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 30658  001408  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 30659  00140C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 30660  001410  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 30661  001412  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 30662  001414  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 30663  001416  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 30664  001418  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 30665  00141A  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 30666  00141C  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 30667  00141E  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 30668  001420  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 30669  001422  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 30670  001424  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 30671  001426  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 30672  001428  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 30673  00142A  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 30674  00142C  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 30675  00142E  E104               	bnz	u22680
 30676  001430  0E15               	movlw	21
 30677  001432  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 30678  001434  E201 D0F9          	bnc	l18688
 30679  001438                     u22680:
 30680                           
 30681                           ; BSR set to: 0
 30682                           ;system.c: 534: {
 30683                           ;system.c: 535: LEDState[i]=LED_DelayInactive;
 30684  001438  0EC5               	movlw	low _LEDState
 30685  00143A  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30686  00143C  6ED9               	movwf	fsr2l,c
 30687  00143E  0E01               	movlw	high _LEDState
 30688  001440  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30689  001442  6EDA               	movwf	fsr2h,c
 30690  001444  0E04               	movlw	4
 30691  001446  6EDF               	movwf	indf2,c
 30692                           
 30693                           ; BSR set to: 0
 30694                           ;system.c: 536: tStart[i]=MiWi_TickGetMs();
 30695  001448  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 30696  00144C  0E00               	movlw	low LEDManagerTask@tStart
 30697  00144E  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30698  001450  0E02               	movlw	high LEDManagerTask@tStart
 30699  001452  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30700  001454  90D8               	bcf	status,0,c
 30701  001456  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30702  001458  6ED9               	movwf	fsr2l,c
 30703  00145A  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30704  00145C  6EDA               	movwf	fsr2h,c
 30705  00145E  90D8               	bcf	status,0,c
 30706  001460  36D9               	rlcf	fsr2l,f,c
 30707  001462  36DA               	rlcf	fsr2h,f,c
 30708  001464  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30709  001466  26D9               	addwf	fsr2l,f,c
 30710  001468  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30711  00146A  22DA               	addwfc	fsr2h,f,c
 30712  00146C  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 30713  001470  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 30714  001474  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 30715  001478  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 30716                           
 30717                           ; BSR set to: 0
 30718                           ;system.c: 537: if(lNextState[i]==LED_Off)
 30719  00147C  0E2C               	movlw	low LEDManagerTask@lNextState
 30720  00147E  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30721  001480  6ED9               	movwf	fsr2l,c
 30722  001482  0E02               	movlw	high LEDManagerTask@lNextState
 30723  001484  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30724  001486  6EDA               	movwf	fsr2h,c
 30725  001488  04DE               	decf	postinc2,w,c
 30726  00148A  E10C               	bnz	l18632
 30727                           
 30728                           ; BSR set to: 0
 30729                           ;system.c: 538: {
 30730                           ;system.c: 539: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30731  00148C  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30732  00148E  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30733  001490  E102               	bnz	l18628
 30734                           
 30735                           ; BSR set to: 0
 30736  001492  948B               	bcf	3979,2,c	;volatile
 30737  001494  D0CA               	goto	l18688
 30738  001496                     l18628:
 30739                           
 30740                           ; BSR set to: 0
 30741  001496  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30742  001498  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30743  00149A  E102               	bnz	l280
 30744                           
 30745                           ; BSR set to: 0
 30746  00149C  9C89               	bcf	3977,6,c	;volatile
 30747  00149E  D0C5               	goto	l18688
 30748  0014A0                     l280:
 30749                           
 30750                           ; BSR set to: 0
 30751  0014A0  9E89               	bcf	3977,7,c	;volatile
 30752  0014A2  D0C3               	goto	l18688
 30753  0014A4                     l18632:
 30754                           
 30755                           ; BSR set to: 0
 30756                           ;system.c: 541: {
 30757                           ;system.c: 542: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 30758  0014A4  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30759  0014A6  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30760  0014A8  E102               	bnz	l18636
 30761                           
 30762                           ; BSR set to: 0
 30763  0014AA  848B               	bsf	3979,2,c	;volatile
 30764  0014AC  D0BE               	goto	l18688
 30765  0014AE                     l18636:
 30766                           
 30767                           ; BSR set to: 0
 30768  0014AE  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30769  0014B0  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30770  0014B2  E102               	bnz	l285
 30771                           
 30772                           ; BSR set to: 0
 30773  0014B4  8C89               	bsf	3977,6,c	;volatile
 30774  0014B6  D0B9               	goto	l18688
 30775  0014B8                     l285:
 30776                           
 30777                           ; BSR set to: 0
 30778  0014B8  8E89               	bsf	3977,7,c	;volatile
 30779  0014BA  D0B7               	goto	l18688
 30780  0014BC                     l18640:
 30781                           
 30782                           ; BSR set to: 0
 30783                           ;system.c: 548: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 30784  0014BC  0E00               	movlw	low LEDManagerTask@tStart
 30785  0014BE  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30786  0014C0  0E02               	movlw	high LEDManagerTask@tStart
 30787  0014C2  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30788  0014C4  90D8               	bcf	status,0,c
 30789  0014C6  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30790  0014C8  6ED9               	movwf	fsr2l,c
 30791  0014CA  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30792  0014CC  6EDA               	movwf	fsr2h,c
 30793  0014CE  90D8               	bcf	status,0,c
 30794  0014D0  36D9               	rlcf	fsr2l,f,c
 30795  0014D2  36DA               	rlcf	fsr2h,f,c
 30796  0014D4  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30797  0014D6  26D9               	addwf	fsr2l,f,c
 30798  0014D8  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30799  0014DA  22DA               	addwfc	fsr2h,f,c
 30800  0014DC  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 30801  0014E0  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 30802  0014E4  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 30803  0014E8  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 30804  0014EC  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 30805  0014F0  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 30806  0014F2  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 30807  0014F4  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 30808  0014F6  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 30809  0014F8  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 30810  0014FA  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 30811  0014FC  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 30812  0014FE  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 30813  001500  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 30814  001502  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 30815  001504  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 30816  001506  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 30817  001508  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 30818  00150A  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 30819  00150C  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 30820  00150E  E104               	bnz	u22740
 30821  001510  0E15               	movlw	21
 30822  001512  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 30823  001514  E201 D089          	bnc	l18688
 30824  001518                     u22740:
 30825                           
 30826                           ; BSR set to: 0
 30827                           ;system.c: 549: {
 30828                           ;system.c: 550: LEDState[i]=lNextState[i];
 30829  001518  0E2C               	movlw	low LEDManagerTask@lNextState
 30830  00151A  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30831  00151C  6ED9               	movwf	fsr2l,c
 30832  00151E  0E02               	movlw	high LEDManagerTask@lNextState
 30833  001520  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30834  001522  6EDA               	movwf	fsr2h,c
 30835  001524  0EC5               	movlw	low _LEDState
 30836  001526  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30837  001528  6EE1               	movwf	fsr1l,c
 30838  00152A  0E01               	movlw	high _LEDState
 30839  00152C  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30840  00152E  6EE2               	movwf	fsr1h,c
 30841  001530  CFDF FFE7          	movff	indf2,indf1
 30842  001534  D07A               	goto	l18688
 30843  001536                     l18644:
 30844                           
 30845                           ; BSR set to: 0
 30846                           ;system.c: 555: if(LEDCmd[i]==lCMD_Off)
 30847  001536  0EC2               	movlw	low _LEDCmd
 30848  001538  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30849  00153A  6ED9               	movwf	fsr2l,c
 30850  00153C  0E01               	movlw	high _LEDCmd
 30851  00153E  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30852  001540  6EDA               	movwf	fsr2h,c
 30853  001542  04DE               	decf	postinc2,w,c
 30854  001544  E10B               	bnz	l18656
 30855  001546  D053               	goto	L18
 30856  001548                     l293:
 30857                           
 30858                           ; BSR set to: 0
 30859  001548  9E89               	bcf	3977,7,c	;volatile
 30860  00154A                     l18654:
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;system.c: 558: LEDState[i]=LED_Off;
 30864  00154A  0EC5               	movlw	low _LEDState
 30865  00154C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30866  00154E  6ED9               	movwf	fsr2l,c
 30867  001550  0E01               	movlw	high _LEDState
 30868  001552  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30869  001554  6EDA               	movwf	fsr2h,c
 30870  001556  0E01               	movlw	1
 30871  001558                     L12:
 30872  001558  6EDF               	movwf	indf2,c
 30873                           
 30874                           ;system.c: 559: }else if(LEDCmd[i]==lCMD_Blink)
 30875  00155A  D737               	goto	l263
 30876  00155C                     l18656:
 30877                           
 30878                           ; BSR set to: 0
 30879  00155C  0EC2               	movlw	low _LEDCmd
 30880  00155E  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30881  001560  6ED9               	movwf	fsr2l,c
 30882  001562  0E01               	movlw	high _LEDCmd
 30883  001564  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30884  001566  6EDA               	movwf	fsr2h,c
 30885  001568  0E03               	movlw	3
 30886  00156A  18DE               	xorwf	postinc2,w,c
 30887  00156C  E136               	bnz	l18672
 30888                           
 30889                           ; BSR set to: 0
 30890                           ;system.c: 560: {
 30891                           ;system.c: 561: tStart[i]=MiWi_TickGetMs();
 30892  00156E  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 30893  001572  0E00               	movlw	low LEDManagerTask@tStart
 30894  001574  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30895  001576  0E02               	movlw	high LEDManagerTask@tStart
 30896  001578  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30897  00157A  90D8               	bcf	status,0,c
 30898  00157C  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30899  00157E  6ED9               	movwf	fsr2l,c
 30900  001580  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30901  001582  6EDA               	movwf	fsr2h,c
 30902  001584  90D8               	bcf	status,0,c
 30903  001586  36D9               	rlcf	fsr2l,f,c
 30904  001588  36DA               	rlcf	fsr2h,f,c
 30905  00158A  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30906  00158C  26D9               	addwf	fsr2l,f,c
 30907  00158E  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30908  001590  22DA               	addwfc	fsr2h,f,c
 30909  001592  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 30910  001596  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 30911  00159A  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 30912  00159E  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;system.c: 562: LEDState[i]=LED_DelayActive;
 30916  0015A2  0EC5               	movlw	low _LEDState
 30917  0015A4  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30918  0015A6  6ED9               	movwf	fsr2l,c
 30919  0015A8  0E01               	movlw	high _LEDState
 30920  0015AA  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30921  0015AC  6EDA               	movwf	fsr2h,c
 30922  0015AE  0E03               	movlw	3
 30923  0015B0  6EDF               	movwf	indf2,c
 30924                           
 30925                           ; BSR set to: 0
 30926                           ;system.c: 563: lNextState[i]=LED_On;
 30927  0015B2  0E2C               	movlw	low LEDManagerTask@lNextState
 30928  0015B4  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30929  0015B6  6ED9               	movwf	fsr2l,c
 30930  0015B8  0E02               	movlw	high LEDManagerTask@lNextState
 30931  0015BA  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30932  0015BC  6EDA               	movwf	fsr2h,c
 30933  0015BE  0E05               	movlw	5
 30934  0015C0  6EDF               	movwf	indf2,c
 30935                           
 30936                           ; BSR set to: 0
 30937                           ;system.c: 564: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30938  0015C2  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30939  0015C4  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30940  0015C6  E102               	bnz	l18668
 30941                           
 30942                           ; BSR set to: 0
 30943  0015C8  948B               	bcf	3979,2,c	;volatile
 30944  0015CA  D6FF               	goto	l263
 30945  0015CC                     l18668:
 30946                           
 30947                           ; BSR set to: 0
 30948  0015CC  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30949  0015CE  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30950  0015D0  E102               	bnz	l299
 30951                           
 30952                           ; BSR set to: 0
 30953  0015D2  9C89               	bcf	3977,6,c	;volatile
 30954  0015D4  D6FA               	goto	l263
 30955  0015D6                     l299:
 30956                           
 30957                           ; BSR set to: 0
 30958  0015D6  9E89               	bcf	3977,7,c	;volatile
 30959  0015D8  D6F8               	goto	l263
 30960  0015DA                     l18672:
 30961                           
 30962                           ; BSR set to: 0
 30963  0015DA  0EC2               	movlw	low _LEDCmd
 30964  0015DC  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30965  0015DE  6ED9               	movwf	fsr2l,c
 30966  0015E0  0E01               	movlw	high _LEDCmd
 30967  0015E2  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30968  0015E4  6EDA               	movwf	fsr2h,c
 30969  0015E6  0E04               	movlw	4
 30970  0015E8  18DE               	xorwf	postinc2,w,c
 30971  0015EA  E001 D6EE          	bnz	l263
 30972  0015EE                     L18:
 30973                           
 30974                           ; BSR set to: 0
 30975                           ;system.c: 566: {
 30976                           ;system.c: 567: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30977  0015EE  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30978  0015F0  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30979  0015F2  E102               	bnz	l18678
 30980                           
 30981                           ; BSR set to: 0
 30982  0015F4  948B               	bcf	3979,2,c	;volatile
 30983  0015F6  D7A9               	goto	l18654
 30984  0015F8                     l18678:
 30985                           
 30986                           ; BSR set to: 0
 30987  0015F8  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30988  0015FA  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30989  0015FC  E1A5               	bnz	l293
 30990                           
 30991                           ; BSR set to: 0
 30992  0015FE  9C89               	bcf	3977,6,c	;volatile
 30993  001600  D7A4               	goto	l18654
 30994  001602                     l18686:
 30995                           
 30996                           ; BSR set to: 0
 30997  001602  0EC5               	movlw	low _LEDState
 30998  001604  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30999  001606  6ED9               	movwf	fsr2l,c
 31000  001608  0E01               	movlw	high _LEDState
 31001  00160A  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31002  00160C  6EDA               	movwf	fsr2h,c
 31003  00160E  50DF               	movf	indf2,w,c
 31004                           
 31005                           ; Switch size 1, requested type "speed"
 31006                           ; Number of cases is 5, Range of values is 0 to 5
 31007                           ; switch strategies available:
 31008                           ; Name         Instructions Cycles
 31009                           ; simple_byte           16     9 (average)
 31010                           ;	Chosen strategy is simple_byte
 31011  001610  E101 D663          	bz	l18566
 31012  001614  0A01               	xorlw	1	; case 1
 31013  001616  E101 D673          	bz	l18576
 31014  00161A  0A02               	xorlw	2	; case 3
 31015  00161C  E101 D6DE          	bz	l18616
 31016  001620  0A07               	xorlw	7	; case 4
 31017  001622  E101 D74B          	bz	l18640
 31018  001626  0A01               	xorlw	1	; case 5
 31019  001628  E086               	bz	l18644
 31020  00162A                     l18688:
 31021                           
 31022                           ; BSR set to: 0
 31023  00162A  4B91               	infsnz	LEDManagerTask@i& (0+255),f,b
 31024  00162C  2B92               	incf	(LEDManagerTask@i+1)& (0+255),f,b
 31025                           
 31026                           ; BSR set to: 0
 31027  00162E  5192               	movf	(LEDManagerTask@i+1)& (0+255),w,b
 31028  001630  E103               	bnz	u22840
 31029  001632  0E03               	movlw	3
 31030  001634  5D91               	subwf	LEDManagerTask@i& (0+255),w,b
 31031  001636  E3E5               	bnc	l18686
 31032  001638                     u22840:
 31033                           
 31034                           ; BSR set to: 0
 31035  001638  0012               	return		;funcret
 31036  00163A                     __end_of_LEDManagerTask:
 31037                           	opt stack 0
 31038                           tblptru	equ	0xFF8
 31039                           tblptrh	equ	0xFF7
 31040                           tblptrl	equ	0xFF6
 31041                           tablat	equ	0xFF5
 31042                           prodh	equ	0xFF4
 31043                           prodl	equ	0xFF3
 31044                           intcon	equ	0xFF2
 31045                           intcon3	equ	0xFF0
 31046                           indf0	equ	0xFEF
 31047                           postinc0	equ	0xFEE
 31048                           plusw0	equ	0xFEB
 31049                           fsr0h	equ	0xFEA
 31050                           fsr0l	equ	0xFE9
 31051                           wreg	equ	0xFE8
 31052                           indf1	equ	0xFE7
 31053                           postinc1	equ	0xFE6
 31054                           postdec1	equ	0xFE5
 31055                           plusw1	equ	0xFE3
 31056                           fsr1h	equ	0xFE2
 31057                           fsr1l	equ	0xFE1
 31058                           indf2	equ	0xFDF
 31059                           postinc2	equ	0xFDE
 31060                           postdec2	equ	0xFDD
 31061                           plusw2	equ	0xFDB
 31062                           fsr2h	equ	0xFDA
 31063                           fsr2l	equ	0xFD9
 31064                           status	equ	0xFD8
 31065                           
 31066 ;; *************** function _LCDUpdate *****************
 31067 ;; Defined at:
 31068 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;		None
 31071 ;; Auto vars:     Size  Location     Type
 31072 ;;  i               1   39[BANK0 ] unsigned char 
 31073 ;; Return value:  Size  Location     Type
 31074 ;;                  1    wreg      void 
 31075 ;; Registers used:
 31076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31077 ;; Tracked objects:
 31078 ;;		On entry : 0/0
 31079 ;;		On exit  : F/0
 31080 ;;		Unchanged: 0/0
 31081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31086 ;;Total ram usage:        1 bytes
 31087 ;; Hardware stack levels used:    1
 31088 ;; Hardware stack levels required when called:    8
 31089 ;; This function calls:
 31090 ;;		_DelayUS
 31091 ;;		_LCDInit
 31092 ;;		_LCD_WriteCmd
 31093 ;;		_LCD_WriteData
 31094 ;; This function is called by:
 31095 ;;		_main
 31096 ;; This function uses a non-reentrant model
 31097 ;;
 31098                           
 31099                           	psect	text153
 31100  0058B6                     __ptext153:
 31101                           	opt stack 0
 31102  0058B6                     _LCDUpdate:
 31103                           	opt stack 22
 31104                           
 31105                           ;lcd.c: 118: uint8_t i;
 31106                           ;lcd.c: 119: if(lcdInitialized==0)
 31107                           
 31108                           ; BSR set to: 0
 31109                           ;incstack = 0
 31110  0058B6  5045               	movf	_lcdInitialized,w,c
 31111  0058B8  E104               	bnz	l18488
 31112                           
 31113                           ;lcd.c: 120: {
 31114                           ;lcd.c: 121: lcdInitialized=1;
 31115  0058BA  0E01               	movlw	1
 31116  0058BC  6E45               	movwf	_lcdInitialized,c
 31117                           
 31118                           ;lcd.c: 122: LCDInit();
 31119  0058BE  EC89  F026         	call	_LCDInit	;wreg free
 31120  0058C2                     l18488:
 31121                           
 31122                           ;lcd.c: 123: }
 31123                           ;lcd.c: 124: LCD_WriteCmd(0x80 | 0x00);
 31124  0058C2  0E80               	movlw	128
 31125  0058C4  EC89  F03A         	call	_LCD_WriteCmd
 31126                           
 31127                           ;lcd.c: 126: for(i = 0; i < 16; i++)
 31128  0058C8  0100               	movlb	0	; () banked
 31129  0058CA  6B87               	clrf	LCDUpdate@i& (0+255),b
 31130  0058CC                     l18496:
 31131                           
 31132                           ; BSR set to: 0
 31133                           ;lcd.c: 127: {
 31134                           ;lcd.c: 128: DelayUS(10);
 31135  0058CC  0E0A               	movlw	10
 31136  0058CE  6F73               	movwf	DelayUS@delay& (0+255),b
 31137  0058D0  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31138  0058D2  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31139  0058D4  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31140  0058D6  EC03  F039         	call	_DelayUS	;wreg free
 31141                           
 31142                           ; BSR set to: 0
 31143                           ;lcd.c: 129: if( LCDText[i] == 0 )
 31144  0058DA  0EAC               	movlw	low _LCDText
 31145  0058DC  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31146  0058DE  6ED9               	movwf	fsr2l,c
 31147  0058E0  6ADA               	clrf	fsr2h,c
 31148  0058E2  0E03               	movlw	high _LCDText
 31149  0058E4  22DA               	addwfc	fsr2h,f,c
 31150  0058E6  50DF               	movf	indf2,w,c
 31151  0058E8  E104               	bnz	l18502
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;lcd.c: 130: {
 31155                           ;lcd.c: 131: LCD_WriteData(' ');
 31156  0058EA  0E20               	movlw	32
 31157  0058EC  EC7E  F03A         	call	_LCD_WriteData
 31158                           
 31159                           ;lcd.c: 132: }
 31160  0058F0  D009               	goto	l18504
 31161  0058F2                     l18502:
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;lcd.c: 133: else
 31165                           ;lcd.c: 134: {
 31166                           ;lcd.c: 135: LCD_WriteData(LCDText[i]);
 31167  0058F2  0EAC               	movlw	low _LCDText
 31168  0058F4  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31169  0058F6  6ED9               	movwf	fsr2l,c
 31170  0058F8  6ADA               	clrf	fsr2h,c
 31171  0058FA  0E03               	movlw	high _LCDText
 31172  0058FC  22DA               	addwfc	fsr2h,f,c
 31173  0058FE  50DF               	movf	indf2,w,c
 31174  005900  EC7E  F03A         	call	_LCD_WriteData
 31175  005904                     l18504:
 31176  005904  0100               	movlb	0	; () banked
 31177  005906  2B87               	incf	LCDUpdate@i& (0+255),f,b
 31178                           
 31179                           ; BSR set to: 0
 31180  005908  0E0F               	movlw	15
 31181  00590A  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 31182  00590C  D7DF               	goto	l18496
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;lcd.c: 136: }
 31186                           ;lcd.c: 137: }
 31187                           ;lcd.c: 138: DelayUS(10);
 31188  00590E  0E0A               	movlw	10
 31189  005910  6F73               	movwf	DelayUS@delay& (0+255),b
 31190  005912  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31191  005914  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31192  005916  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31193  005918  EC03  F039         	call	_DelayUS	;wreg free
 31194                           
 31195                           ; BSR set to: 0
 31196                           ;lcd.c: 139: LCD_WriteCmd(0x80 | 0x40);
 31197  00591C  0EC0               	movlw	192
 31198  00591E  EC89  F03A         	call	_LCD_WriteCmd
 31199                           
 31200                           ;lcd.c: 141: for(i = 16; i < 32; i++)
 31201  005922  0E10               	movlw	16
 31202  005924  0100               	movlb	0	; () banked
 31203  005926  6F87               	movwf	LCDUpdate@i& (0+255),b
 31204  005928                     l18516:
 31205                           
 31206                           ; BSR set to: 0
 31207                           ;lcd.c: 142: {
 31208                           ;lcd.c: 143: DelayUS(10);
 31209  005928  0E0A               	movlw	10
 31210  00592A  6F73               	movwf	DelayUS@delay& (0+255),b
 31211  00592C  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31212  00592E  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31213  005930  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31214  005932  EC03  F039         	call	_DelayUS	;wreg free
 31215                           
 31216                           ; BSR set to: 0
 31217                           ;lcd.c: 144: if( LCDText[i] == 0 )
 31218  005936  0EAC               	movlw	low _LCDText
 31219  005938  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31220  00593A  6ED9               	movwf	fsr2l,c
 31221  00593C  6ADA               	clrf	fsr2h,c
 31222  00593E  0E03               	movlw	high _LCDText
 31223  005940  22DA               	addwfc	fsr2h,f,c
 31224  005942  50DF               	movf	indf2,w,c
 31225  005944  E104               	bnz	l18522
 31226                           
 31227                           ; BSR set to: 0
 31228                           ;lcd.c: 145: {
 31229                           ;lcd.c: 146: LCD_WriteData(' ');
 31230  005946  0E20               	movlw	32
 31231  005948  EC7E  F03A         	call	_LCD_WriteData
 31232                           
 31233                           ;lcd.c: 147: }
 31234  00594C  D009               	goto	l18524
 31235  00594E                     l18522:
 31236                           
 31237                           ; BSR set to: 0
 31238                           ;lcd.c: 148: else
 31239                           ;lcd.c: 149: {
 31240                           ;lcd.c: 150: LCD_WriteData(LCDText[i]);
 31241  00594E  0EAC               	movlw	low _LCDText
 31242  005950  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31243  005952  6ED9               	movwf	fsr2l,c
 31244  005954  6ADA               	clrf	fsr2h,c
 31245  005956  0E03               	movlw	high _LCDText
 31246  005958  22DA               	addwfc	fsr2h,f,c
 31247  00595A  50DF               	movf	indf2,w,c
 31248  00595C  EC7E  F03A         	call	_LCD_WriteData
 31249  005960                     l18524:
 31250  005960  0100               	movlb	0	; () banked
 31251  005962  2B87               	incf	LCDUpdate@i& (0+255),f,b
 31252                           
 31253                           ; BSR set to: 0
 31254  005964  0E1F               	movlw	31
 31255  005966  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 31256  005968  D7DF               	goto	l18516
 31257  00596A  0C1F               	retlw	31
 31258  00596C                     __end_of_LCDUpdate:
 31259                           	opt stack 0
 31260                           tblptru	equ	0xFF8
 31261                           tblptrh	equ	0xFF7
 31262                           tblptrl	equ	0xFF6
 31263                           tablat	equ	0xFF5
 31264                           prodh	equ	0xFF4
 31265                           prodl	equ	0xFF3
 31266                           intcon	equ	0xFF2
 31267                           intcon3	equ	0xFF0
 31268                           indf0	equ	0xFEF
 31269                           postinc0	equ	0xFEE
 31270                           plusw0	equ	0xFEB
 31271                           fsr0h	equ	0xFEA
 31272                           fsr0l	equ	0xFE9
 31273                           wreg	equ	0xFE8
 31274                           indf1	equ	0xFE7
 31275                           postinc1	equ	0xFE6
 31276                           postdec1	equ	0xFE5
 31277                           plusw1	equ	0xFE3
 31278                           fsr1h	equ	0xFE2
 31279                           fsr1l	equ	0xFE1
 31280                           indf2	equ	0xFDF
 31281                           postinc2	equ	0xFDE
 31282                           postdec2	equ	0xFDD
 31283                           plusw2	equ	0xFDB
 31284                           fsr2h	equ	0xFDA
 31285                           fsr2l	equ	0xFD9
 31286                           status	equ	0xFD8
 31287                           
 31288 ;; *************** function _LCD_WriteData *****************
 31289 ;; Defined at:
 31290 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31291 ;; Parameters:    Size  Location     Type
 31292 ;;  data            1    wreg     unsigned char 
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;  data            1   21[BANK0 ] unsigned char 
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  1    wreg      void 
 31297 ;; Registers used:
 31298 ;;		wreg, status,2, cstack
 31299 ;; Tracked objects:
 31300 ;;		On entry : F/0
 31301 ;;		On exit  : 0/0
 31302 ;;		Unchanged: 0/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31307 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31308 ;;Total ram usage:        1 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; Hardware stack levels required when called:    6
 31311 ;; This function calls:
 31312 ;;		_SPIPut2
 31313 ;; This function is called by:
 31314 ;;		_LCDUpdate
 31315 ;; This function uses a non-reentrant model
 31316 ;;
 31317                           
 31318                           	psect	text154
 31319  0074FC                     __ptext154:
 31320                           	opt stack 0
 31321  0074FC                     _LCD_WriteData:
 31322                           	opt stack 23
 31323                           
 31324                           ; BSR set to: 0
 31325                           ;incstack = 0
 31326                           ;LCD_WriteData@data stored from wreg
 31327  0074FC  6F75               	movwf	LCD_WriteData@data& (0+255),b
 31328                           
 31329                           ;lcd.c: 45: GIE=0;
 31330  0074FE  9EF2               	bcf	intcon,7,c	;volatile
 31331                           
 31332                           ;lcd.c: 46: LATDbits.LATD7 = 0;
 31333  007500  9E8C               	bcf	3980,7,c	;volatile
 31334                           
 31335                           ;lcd.c: 47: LATDbits.LATD3 = 1;
 31336  007502  868C               	bsf	3980,3,c	;volatile
 31337                           
 31338                           ;lcd.c: 49: SPIPut2(data);
 31339  007504  0100               	movlb	0	; () banked
 31340  007506  5175               	movf	LCD_WriteData@data& (0+255),w,b
 31341  007508  EC5C  F03A         	call	_SPIPut2
 31342                           
 31343                           ;lcd.c: 51: LATDbits.LATD7 = 1;
 31344  00750C  8E8C               	bsf	3980,7,c	;volatile
 31345                           
 31346                           ;lcd.c: 52: GIE=1;
 31347  00750E  8EF2               	bsf	intcon,7,c	;volatile
 31348  007510  0012               	return		;funcret
 31349  007512                     __end_of_LCD_WriteData:
 31350                           	opt stack 0
 31351                           tblptru	equ	0xFF8
 31352                           tblptrh	equ	0xFF7
 31353                           tblptrl	equ	0xFF6
 31354                           tablat	equ	0xFF5
 31355                           prodh	equ	0xFF4
 31356                           prodl	equ	0xFF3
 31357                           intcon	equ	0xFF2
 31358                           intcon3	equ	0xFF0
 31359                           indf0	equ	0xFEF
 31360                           postinc0	equ	0xFEE
 31361                           plusw0	equ	0xFEB
 31362                           fsr0h	equ	0xFEA
 31363                           fsr0l	equ	0xFE9
 31364                           wreg	equ	0xFE8
 31365                           indf1	equ	0xFE7
 31366                           postinc1	equ	0xFE6
 31367                           postdec1	equ	0xFE5
 31368                           plusw1	equ	0xFE3
 31369                           fsr1h	equ	0xFE2
 31370                           fsr1l	equ	0xFE1
 31371                           indf2	equ	0xFDF
 31372                           postinc2	equ	0xFDE
 31373                           postdec2	equ	0xFDD
 31374                           plusw2	equ	0xFDB
 31375                           fsr2h	equ	0xFDA
 31376                           fsr2l	equ	0xFD9
 31377                           status	equ	0xFD8
 31378                           
 31379 ;; *************** function _LCDInit *****************
 31380 ;; Defined at:
 31381 ;;		line 55 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31382 ;; Parameters:    Size  Location     Type
 31383 ;;		None
 31384 ;; Auto vars:     Size  Location     Type
 31385 ;;		None
 31386 ;; Return value:  Size  Location     Type
 31387 ;;                  1    wreg      void 
 31388 ;; Registers used:
 31389 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31390 ;; Tracked objects:
 31391 ;;		On entry : 0/0
 31392 ;;		On exit  : F/0
 31393 ;;		Unchanged: 0/0
 31394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31399 ;;Total ram usage:        0 bytes
 31400 ;; Hardware stack levels used:    1
 31401 ;; Hardware stack levels required when called:    7
 31402 ;; This function calls:
 31403 ;;		_DelayMs
 31404 ;;		_LCD_WriteCmd
 31405 ;; This function is called by:
 31406 ;;		_LCDUpdate
 31407 ;; This function uses a non-reentrant model
 31408 ;;
 31409                           
 31410                           	psect	text155
 31411  004D12                     __ptext155:
 31412                           	opt stack 0
 31413  004D12                     _LCDInit:
 31414                           	opt stack 22
 31415                           
 31416                           ;lcd.c: 57: LATEbits.LATE1 = 0;
 31417                           
 31418                           ;incstack = 0
 31419  004D12  928D               	bcf	3981,1,c	;volatile
 31420                           
 31421                           ;lcd.c: 58: LATDbits.LATD7 = 1;
 31422  004D14  8E8C               	bsf	3980,7,c	;volatile
 31423                           
 31424                           ;lcd.c: 59: LATDbits.LATD3 = 0;
 31425  004D16  968C               	bcf	3980,3,c	;volatile
 31426                           
 31427                           ;lcd.c: 60: LATEbits.LATE0 = 0;
 31428  004D18  908D               	bcf	3981,0,c	;volatile
 31429                           
 31430                           ;lcd.c: 61: TRISEbits.TRISE1 = 0;
 31431  004D1A  9296               	bcf	3990,1,c	;volatile
 31432                           
 31433                           ;lcd.c: 62: TRISDbits.TRISD7 = 0;
 31434  004D1C  9E95               	bcf	3989,7,c	;volatile
 31435                           
 31436                           ;lcd.c: 63: TRISDbits.TRISD3 = 0;
 31437  004D1E  9695               	bcf	3989,3,c	;volatile
 31438                           
 31439                           ;lcd.c: 64: TRISEbits.TRISE0 = 0;
 31440  004D20  9096               	bcf	3990,0,c	;volatile
 31441                           
 31442                           ;lcd.c: 66: LATEbits.LATE0 = 0;
 31443  004D22  908D               	bcf	3981,0,c	;volatile
 31444                           
 31445                           ;lcd.c: 67: DelayMs(2);
 31446  004D24  0E02               	movlw	2
 31447  004D26  0100               	movlb	0	; () banked
 31448  004D28  6F7B               	movwf	DelayMs@ms& (0+255),b
 31449  004D2A  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31450  004D2C  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31451  004D2E  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31452  004D30  ECAC  F02E         	call	_DelayMs	;wreg free
 31453                           
 31454                           ; BSR set to: 0
 31455                           ;lcd.c: 68: LATEbits.LATE0 = 1;
 31456  004D34  808D               	bsf	3981,0,c	;volatile
 31457                           
 31458                           ;lcd.c: 69: DelayMs(2);
 31459  004D36  0E02               	movlw	2
 31460  004D38  6F7B               	movwf	DelayMs@ms& (0+255),b
 31461  004D3A  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31462  004D3C  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31463  004D3E  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31464  004D40  ECAC  F02E         	call	_DelayMs	;wreg free
 31465                           
 31466                           ; BSR set to: 0
 31467                           ;lcd.c: 70: LCD_WriteCmd(0x30);
 31468  004D44  0E30               	movlw	48
 31469  004D46  EC89  F03A         	call	_LCD_WriteCmd
 31470                           
 31471                           ;lcd.c: 71: DelayMs(2);
 31472  004D4A  0E02               	movlw	2
 31473  004D4C  0100               	movlb	0	; () banked
 31474  004D4E  6F7B               	movwf	DelayMs@ms& (0+255),b
 31475  004D50  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31476  004D52  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31477  004D54  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31478  004D56  ECAC  F02E         	call	_DelayMs	;wreg free
 31479                           
 31480                           ;lcd.c: 72: LCD_WriteCmd(0x30);
 31481  004D5A  0E30               	movlw	48
 31482  004D5C  EC89  F03A         	call	_LCD_WriteCmd
 31483                           
 31484                           ;lcd.c: 73: DelayMs(2);
 31485  004D60  0E02               	movlw	2
 31486  004D62  0100               	movlb	0	; () banked
 31487  004D64  6F7B               	movwf	DelayMs@ms& (0+255),b
 31488  004D66  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31489  004D68  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31490  004D6A  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31491  004D6C  ECAC  F02E         	call	_DelayMs	;wreg free
 31492                           
 31493                           ; BSR set to: 0
 31494                           ;lcd.c: 74: LCD_WriteCmd(0x30);
 31495  004D70  0E30               	movlw	48
 31496  004D72  EC89  F03A         	call	_LCD_WriteCmd
 31497                           
 31498                           ;lcd.c: 75: DelayMs(2);
 31499  004D76  0E02               	movlw	2
 31500  004D78  0100               	movlb	0	; () banked
 31501  004D7A  6F7B               	movwf	DelayMs@ms& (0+255),b
 31502  004D7C  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31503  004D7E  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31504  004D80  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31505  004D82  ECAC  F02E         	call	_DelayMs	;wreg free
 31506                           
 31507                           ; BSR set to: 0
 31508                           ;lcd.c: 76: LCD_WriteCmd(0x39);
 31509  004D86  0E39               	movlw	57
 31510  004D88  EC89  F03A         	call	_LCD_WriteCmd
 31511                           
 31512                           ;lcd.c: 77: DelayMs(2);
 31513  004D8C  0E02               	movlw	2
 31514  004D8E  0100               	movlb	0	; () banked
 31515  004D90  6F7B               	movwf	DelayMs@ms& (0+255),b
 31516  004D92  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31517  004D94  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31518  004D96  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31519  004D98  ECAC  F02E         	call	_DelayMs	;wreg free
 31520                           
 31521                           ;lcd.c: 78: LCD_WriteCmd(0x14);
 31522  004D9C  0E14               	movlw	20
 31523  004D9E  EC89  F03A         	call	_LCD_WriteCmd
 31524                           
 31525                           ;lcd.c: 79: DelayMs(2);
 31526  004DA2  0E02               	movlw	2
 31527  004DA4  0100               	movlb	0	; () banked
 31528  004DA6  6F7B               	movwf	DelayMs@ms& (0+255),b
 31529  004DA8  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31530  004DAA  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31531  004DAC  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31532  004DAE  ECAC  F02E         	call	_DelayMs	;wreg free
 31533                           
 31534                           ; BSR set to: 0
 31535                           ;lcd.c: 80: LCD_WriteCmd(0x56);
 31536  004DB2  0E56               	movlw	86
 31537  004DB4  EC89  F03A         	call	_LCD_WriteCmd
 31538                           
 31539                           ;lcd.c: 81: DelayMs(2);
 31540  004DB8  0E02               	movlw	2
 31541  004DBA  0100               	movlb	0	; () banked
 31542  004DBC  6F7B               	movwf	DelayMs@ms& (0+255),b
 31543  004DBE  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31544  004DC0  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31545  004DC2  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31546  004DC4  ECAC  F02E         	call	_DelayMs	;wreg free
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;lcd.c: 82: LCD_WriteCmd(0x6D);
 31550  004DC8  0E6D               	movlw	109
 31551  004DCA  EC89  F03A         	call	_LCD_WriteCmd
 31552                           
 31553                           ;lcd.c: 83: DelayMs(2);
 31554  004DCE  0E02               	movlw	2
 31555  004DD0  0100               	movlb	0	; () banked
 31556  004DD2  6F7B               	movwf	DelayMs@ms& (0+255),b
 31557  004DD4  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31558  004DD6  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31559  004DD8  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31560  004DDA  ECAC  F02E         	call	_DelayMs	;wreg free
 31561                           
 31562                           ;lcd.c: 85: LCD_WriteCmd(0x70);
 31563  004DDE  0E70               	movlw	112
 31564  004DE0  EC89  F03A         	call	_LCD_WriteCmd
 31565                           
 31566                           ;lcd.c: 86: DelayMs(2);
 31567  004DE4  0E02               	movlw	2
 31568  004DE6  0100               	movlb	0	; () banked
 31569  004DE8  6F7B               	movwf	DelayMs@ms& (0+255),b
 31570  004DEA  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31571  004DEC  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31572  004DEE  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31573  004DF0  ECAC  F02E         	call	_DelayMs	;wreg free
 31574                           
 31575                           ; BSR set to: 0
 31576                           ;lcd.c: 87: LCD_WriteCmd(0x0E);
 31577  004DF4  0E0E               	movlw	14
 31578  004DF6  EC89  F03A         	call	_LCD_WriteCmd
 31579                           
 31580                           ;lcd.c: 88: DelayMs(2);
 31581  004DFA  0E02               	movlw	2
 31582  004DFC  0100               	movlb	0	; () banked
 31583  004DFE  6F7B               	movwf	DelayMs@ms& (0+255),b
 31584  004E00  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31585  004E02  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31586  004E04  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31587  004E06  ECAC  F02E         	call	_DelayMs	;wreg free
 31588                           
 31589                           ; BSR set to: 0
 31590                           ;lcd.c: 89: LCD_WriteCmd(0x06);
 31591  004E0A  0E06               	movlw	6
 31592  004E0C  EC89  F03A         	call	_LCD_WriteCmd
 31593                           
 31594                           ;lcd.c: 90: DelayMs(2);
 31595  004E10  0E02               	movlw	2
 31596  004E12  0100               	movlb	0	; () banked
 31597  004E14  6F7B               	movwf	DelayMs@ms& (0+255),b
 31598  004E16  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31599  004E18  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31600  004E1A  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31601  004E1C  ECAC  F02E         	call	_DelayMs	;wreg free
 31602                           
 31603                           ;lcd.c: 91: LCD_WriteCmd(0x01);
 31604  004E20  0E01               	movlw	1
 31605  004E22  EC89  F03A         	call	_LCD_WriteCmd
 31606                           
 31607                           ;lcd.c: 92: DelayMs(10);
 31608  004E26  0E0A               	movlw	10
 31609  004E28  0100               	movlb	0	; () banked
 31610  004E2A  6F7B               	movwf	DelayMs@ms& (0+255),b
 31611  004E2C  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31612  004E2E  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31613  004E30  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31614  004E32  EFAC  F02E         	goto	_DelayMs	;wreg free
 31615  004E36                     __end_of_LCDInit:
 31616                           	opt stack 0
 31617                           tblptru	equ	0xFF8
 31618                           tblptrh	equ	0xFF7
 31619                           tblptrl	equ	0xFF6
 31620                           tablat	equ	0xFF5
 31621                           prodh	equ	0xFF4
 31622                           prodl	equ	0xFF3
 31623                           intcon	equ	0xFF2
 31624                           intcon3	equ	0xFF0
 31625                           indf0	equ	0xFEF
 31626                           postinc0	equ	0xFEE
 31627                           plusw0	equ	0xFEB
 31628                           fsr0h	equ	0xFEA
 31629                           fsr0l	equ	0xFE9
 31630                           wreg	equ	0xFE8
 31631                           indf1	equ	0xFE7
 31632                           postinc1	equ	0xFE6
 31633                           postdec1	equ	0xFE5
 31634                           plusw1	equ	0xFE3
 31635                           fsr1h	equ	0xFE2
 31636                           fsr1l	equ	0xFE1
 31637                           indf2	equ	0xFDF
 31638                           postinc2	equ	0xFDE
 31639                           postdec2	equ	0xFDD
 31640                           plusw2	equ	0xFDB
 31641                           fsr2h	equ	0xFDA
 31642                           fsr2l	equ	0xFD9
 31643                           status	equ	0xFD8
 31644                           
 31645 ;; *************** function _LCD_WriteCmd *****************
 31646 ;; Defined at:
 31647 ;;		line 31 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31648 ;; Parameters:    Size  Location     Type
 31649 ;;  data            1    wreg     unsigned char 
 31650 ;; Auto vars:     Size  Location     Type
 31651 ;;  data            1   21[BANK0 ] unsigned char 
 31652 ;; Return value:  Size  Location     Type
 31653 ;;                  1    wreg      void 
 31654 ;; Registers used:
 31655 ;;		wreg, status,2, cstack
 31656 ;; Tracked objects:
 31657 ;;		On entry : 0/0
 31658 ;;		On exit  : 0/0
 31659 ;;		Unchanged: 0/0
 31660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31665 ;;Total ram usage:        1 bytes
 31666 ;; Hardware stack levels used:    1
 31667 ;; Hardware stack levels required when called:    6
 31668 ;; This function calls:
 31669 ;;		_SPIPut2
 31670 ;; This function is called by:
 31671 ;;		_LCDInit
 31672 ;;		_LCDUpdate
 31673 ;; This function uses a non-reentrant model
 31674 ;;
 31675                           
 31676                           	psect	text156
 31677  007512                     __ptext156:
 31678                           	opt stack 0
 31679  007512                     _LCD_WriteCmd:
 31680                           	opt stack 23
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;incstack = 0
 31684                           ;LCD_WriteCmd@data stored from wreg
 31685  007512  0100               	movlb	0	; () banked
 31686  007514  6F75               	movwf	LCD_WriteCmd@data& (0+255),b
 31687                           
 31688                           ;lcd.c: 33: GIE=0;
 31689  007516  9EF2               	bcf	intcon,7,c	;volatile
 31690                           
 31691                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 31692  007518  9E8C               	bcf	3980,7,c	;volatile
 31693                           
 31694                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 31695  00751A  968C               	bcf	3980,3,c	;volatile
 31696                           
 31697                           ;lcd.c: 37: SPIPut2(data);
 31698  00751C  5175               	movf	LCD_WriteCmd@data& (0+255),w,b
 31699  00751E  EC5C  F03A         	call	_SPIPut2
 31700                           
 31701                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 31702  007522  8E8C               	bsf	3980,7,c	;volatile
 31703                           
 31704                           ;lcd.c: 40: GIE=1;
 31705  007524  8EF2               	bsf	intcon,7,c	;volatile
 31706  007526  0012               	return		;funcret
 31707  007528                     __end_of_LCD_WriteCmd:
 31708                           	opt stack 0
 31709                           tblptru	equ	0xFF8
 31710                           tblptrh	equ	0xFF7
 31711                           tblptrl	equ	0xFF6
 31712                           tablat	equ	0xFF5
 31713                           prodh	equ	0xFF4
 31714                           prodl	equ	0xFF3
 31715                           intcon	equ	0xFF2
 31716                           intcon3	equ	0xFF0
 31717                           indf0	equ	0xFEF
 31718                           postinc0	equ	0xFEE
 31719                           plusw0	equ	0xFEB
 31720                           fsr0h	equ	0xFEA
 31721                           fsr0l	equ	0xFE9
 31722                           wreg	equ	0xFE8
 31723                           indf1	equ	0xFE7
 31724                           postinc1	equ	0xFE6
 31725                           postdec1	equ	0xFE5
 31726                           plusw1	equ	0xFE3
 31727                           fsr1h	equ	0xFE2
 31728                           fsr1l	equ	0xFE1
 31729                           indf2	equ	0xFDF
 31730                           postinc2	equ	0xFDE
 31731                           postdec2	equ	0xFDD
 31732                           plusw2	equ	0xFDB
 31733                           fsr2h	equ	0xFDA
 31734                           fsr2l	equ	0xFD9
 31735                           status	equ	0xFD8
 31736                           
 31737 ;; *************** function _SPIPut2 *****************
 31738 ;; Defined at:
 31739 ;;		line 332 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 31740 ;; Parameters:    Size  Location     Type
 31741 ;;  v               1    wreg     unsigned char 
 31742 ;; Auto vars:     Size  Location     Type
 31743 ;;  v               1   19[BANK0 ] unsigned char 
 31744 ;;  i               1   20[BANK0 ] volatile unsigned char 
 31745 ;; Return value:  Size  Location     Type
 31746 ;;                  1    wreg      void 
 31747 ;; Registers used:
 31748 ;;		wreg
 31749 ;; Tracked objects:
 31750 ;;		On entry : F/0
 31751 ;;		On exit  : 0/0
 31752 ;;		Unchanged: 0/0
 31753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31758 ;;Total ram usage:        2 bytes
 31759 ;; Hardware stack levels used:    1
 31760 ;; Hardware stack levels required when called:    5
 31761 ;; This function calls:
 31762 ;;		Nothing
 31763 ;; This function is called by:
 31764 ;;		_LCD_WriteCmd
 31765 ;;		_LCD_WriteData
 31766 ;;		_SPIGet2
 31767 ;;		_EEPROMRead
 31768 ;; This function uses a non-reentrant model
 31769 ;;
 31770                           
 31771                           	psect	text157
 31772  0074B8                     __ptext157:
 31773                           	opt stack 0
 31774  0074B8                     _SPIPut2:
 31775                           	opt stack 23
 31776                           
 31777                           ;incstack = 0
 31778                           ;SPIPut2@v stored from wreg
 31779  0074B8  6F73               	movwf	SPIPut2@v& (0+255),b
 31780                           
 31781                           ;spi.c: 334: volatile uint8_t i;
 31782                           ;spi.c: 354: PIR3bits.SSP2IF = 0;
 31783  0074BA  9EA4               	bcf	4004,7,c	;volatile
 31784                           
 31785                           ;spi.c: 355: i = SSP2BUF;
 31786  0074BC  CF75 F074          	movff	3957,SPIPut2@i	;volatile
 31787  0074C0                     l89:
 31788                           
 31789                           ;spi.c: 357: {
 31790                           ;spi.c: 358: SSP2CON1bits.WCOL = 0;
 31791  0074C0  9E72               	bcf	3954,7,c	;volatile
 31792                           
 31793                           ;spi.c: 359: SSP2BUF = v;
 31794  0074C2  C073  FF75         	movff	SPIPut2@v,3957	;volatile
 31795                           
 31796                           ;spi.c: 360: } while( SSP2CON1bits.WCOL );
 31797  0074C6  BE72               	btfsc	3954,7,c	;volatile
 31798  0074C8  D7FB               	goto	l89
 31799  0074CA                     l91:
 31800  0074CA  BEA4               	btfsc	4004,7,c	;volatile
 31801  0074CC  0012               	return		;funcret
 31802  0074CE  D7FD               	goto	l91
 31803  0074D0                     __end_of_SPIPut2:
 31804                           	opt stack 0
 31805                           tblptru	equ	0xFF8
 31806                           tblptrh	equ	0xFF7
 31807                           tblptrl	equ	0xFF6
 31808                           tablat	equ	0xFF5
 31809                           prodh	equ	0xFF4
 31810                           prodl	equ	0xFF3
 31811                           intcon	equ	0xFF2
 31812                           intcon3	equ	0xFF0
 31813                           indf0	equ	0xFEF
 31814                           postinc0	equ	0xFEE
 31815                           plusw0	equ	0xFEB
 31816                           fsr0h	equ	0xFEA
 31817                           fsr0l	equ	0xFE9
 31818                           wreg	equ	0xFE8
 31819                           indf1	equ	0xFE7
 31820                           postinc1	equ	0xFE6
 31821                           postdec1	equ	0xFE5
 31822                           plusw1	equ	0xFE3
 31823                           fsr1h	equ	0xFE2
 31824                           fsr1l	equ	0xFE1
 31825                           indf2	equ	0xFDF
 31826                           postinc2	equ	0xFDE
 31827                           postdec2	equ	0xFDD
 31828                           plusw2	equ	0xFDB
 31829                           fsr2h	equ	0xFDA
 31830                           fsr2l	equ	0xFD9
 31831                           status	equ	0xFD8
 31832                           
 31833 ;; *************** function _DelayMs *****************
 31834 ;; Defined at:
 31835 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 31836 ;; Parameters:    Size  Location     Type
 31837 ;;  ms              4   27[BANK0 ] unsigned long 
 31838 ;; Auto vars:     Size  Location     Type
 31839 ;;		None
 31840 ;; Return value:  Size  Location     Type
 31841 ;;                  1    wreg      void 
 31842 ;; Registers used:
 31843 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31844 ;; Tracked objects:
 31845 ;;		On entry : F/0
 31846 ;;		On exit  : F/0
 31847 ;;		Unchanged: 0/0
 31848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31851 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31852 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31853 ;;Total ram usage:       12 bytes
 31854 ;; Hardware stack levels used:    1
 31855 ;; Hardware stack levels required when called:    6
 31856 ;; This function calls:
 31857 ;;		_DelayUS
 31858 ;; This function is called by:
 31859 ;;		_LCDInit
 31860 ;;		_TxPacket
 31861 ;;		_MiMAC_Init
 31862 ;; This function uses a non-reentrant model
 31863 ;;
 31864                           
 31865                           	psect	text158
 31866  005D58                     __ptext158:
 31867                           	opt stack 0
 31868  005D58                     _DelayMs:
 31869                           	opt stack 16
 31870                           
 31871                           ; BSR set to: 0
 31872                           ;delay.c: 36: DelayUS(ms*1000);
 31873                           
 31874                           ;incstack = 0
 31875  005D58  C07B  F07F         	movff	DelayMs@ms,??_DelayMs
 31876  005D5C  C07C  F080         	movff	DelayMs@ms+1,??_DelayMs+1
 31877  005D60  C07D  F081         	movff	DelayMs@ms+2,??_DelayMs+2
 31878  005D64  C07E  F082         	movff	DelayMs@ms+3,??_DelayMs+3
 31879  005D68  0EE8               	movlw	232
 31880  005D6A  037F               	mulwf	??_DelayMs& (0+255),b
 31881  005D6C  CFF3 F083          	movff	prodl,??_DelayMs+4
 31882  005D70  CFF4 F084          	movff	prodh,??_DelayMs+5
 31883  005D74  6B85               	clrf	(??_DelayMs+6)& (0+255),b
 31884  005D76  6B86               	clrf	(??_DelayMs+7)& (0+255),b
 31885  005D78  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31886  005D7A  50F3               	movf	prodl,w,c
 31887  005D7C  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 31888  005D7E  50F4               	movf	prodh,w,c
 31889  005D80  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 31890  005D82  0E00               	movlw	0
 31891  005D84  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31892  005D86  0E03               	movlw	3
 31893  005D88  037F               	mulwf	??_DelayMs& (0+255),b
 31894  005D8A  50F3               	movf	prodl,w,c
 31895  005D8C  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 31896  005D8E  50F4               	movf	prodh,w,c
 31897  005D90  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 31898  005D92  0E00               	movlw	0
 31899  005D94  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31900  005D96  0EE8               	movlw	232
 31901  005D98  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 31902  005D9A  50F3               	movf	prodl,w,c
 31903  005D9C  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31904  005D9E  50F4               	movf	prodh,w,c
 31905  005DA0  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31906  005DA2  0E03               	movlw	3
 31907  005DA4  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31908  005DA6  50F3               	movf	prodl,w,c
 31909  005DA8  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31910  005DAA  50F4               	movf	prodh,w,c
 31911  005DAC  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31912  005DAE  0E00               	movlw	0
 31913  005DB0  037F               	mulwf	??_DelayMs& (0+255),b
 31914  005DB2  50F3               	movf	prodl,w,c
 31915  005DB4  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31916  005DB6  50F4               	movf	prodh,w,c
 31917  005DB8  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31918  005DBA  0EE8               	movlw	232
 31919  005DBC  0382               	mulwf	(??_DelayMs+3)& (0+255),b
 31920  005DBE  50F3               	movf	prodl,w,c
 31921  005DC0  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31922  005DC2  0E03               	movlw	3
 31923  005DC4  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 31924  005DC6  50F3               	movf	prodl,w,c
 31925  005DC8  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31926  005DCA  0E00               	movlw	0
 31927  005DCC  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31928  005DCE  50F3               	movf	prodl,w,c
 31929  005DD0  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31930  005DD2  0E00               	movlw	0
 31931  005DD4  037F               	mulwf	??_DelayMs& (0+255),b
 31932  005DD6  50F3               	movf	prodl,w,c
 31933  005DD8  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31934  005DDA  C083  F073         	movff	??_DelayMs+4,DelayUS@delay
 31935  005DDE  C084  F074         	movff	??_DelayMs+5,DelayUS@delay+1
 31936  005DE2  C085  F075         	movff	??_DelayMs+6,DelayUS@delay+2
 31937  005DE6  C086  F076         	movff	??_DelayMs+7,DelayUS@delay+3
 31938  005DEA  EF03  F039         	goto	_DelayUS	;wreg free
 31939  005DEE                     __end_of_DelayMs:
 31940                           	opt stack 0
 31941                           tblptru	equ	0xFF8
 31942                           tblptrh	equ	0xFF7
 31943                           tblptrl	equ	0xFF6
 31944                           tablat	equ	0xFF5
 31945                           prodh	equ	0xFF4
 31946                           prodl	equ	0xFF3
 31947                           intcon	equ	0xFF2
 31948                           intcon3	equ	0xFF0
 31949                           indf0	equ	0xFEF
 31950                           postinc0	equ	0xFEE
 31951                           plusw0	equ	0xFEB
 31952                           fsr0h	equ	0xFEA
 31953                           fsr0l	equ	0xFE9
 31954                           wreg	equ	0xFE8
 31955                           indf1	equ	0xFE7
 31956                           postinc1	equ	0xFE6
 31957                           postdec1	equ	0xFE5
 31958                           plusw1	equ	0xFE3
 31959                           fsr1h	equ	0xFE2
 31960                           fsr1l	equ	0xFE1
 31961                           indf2	equ	0xFDF
 31962                           postinc2	equ	0xFDE
 31963                           postdec2	equ	0xFDD
 31964                           plusw2	equ	0xFDB
 31965                           fsr2h	equ	0xFDA
 31966                           fsr2l	equ	0xFD9
 31967                           status	equ	0xFD8
 31968                           
 31969 ;; *************** function _DelayUS *****************
 31970 ;; Defined at:
 31971 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 31972 ;; Parameters:    Size  Location     Type
 31973 ;;  delay           4   19[BANK0 ] unsigned long 
 31974 ;; Auto vars:     Size  Location     Type
 31975 ;;  i               4   23[BANK0 ] unsigned long 
 31976 ;; Return value:  Size  Location     Type
 31977 ;;                  1    wreg      void 
 31978 ;; Registers used:
 31979 ;;		wreg, status,2, status,0
 31980 ;; Tracked objects:
 31981 ;;		On entry : F/0
 31982 ;;		On exit  : F/0
 31983 ;;		Unchanged: 0/0
 31984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31988 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31989 ;;Total ram usage:        8 bytes
 31990 ;; Hardware stack levels used:    1
 31991 ;; Hardware stack levels required when called:    5
 31992 ;; This function calls:
 31993 ;;		Nothing
 31994 ;; This function is called by:
 31995 ;;		_DelayMs
 31996 ;;		_LCDUpdate
 31997 ;; This function uses a non-reentrant model
 31998 ;;
 31999                           
 32000                           	psect	text159
 32001  007206                     __ptext159:
 32002                           	opt stack 0
 32003  007206                     _DelayUS:
 32004                           	opt stack 16
 32005                           
 32006                           ; BSR set to: 0
 32007                           ;delay.c: 25: uint32_t i;
 32008                           ;delay.c: 27: for(i=0;i<delay;i++)
 32009                           
 32010                           ; BSR set to: 0
 32011                           ;incstack = 0
 32012  007206  6B77               	clrf	DelayUS@i& (0+255),b
 32013  007208  6B78               	clrf	(DelayUS@i+1)& (0+255),b
 32014  00720A  6B79               	clrf	(DelayUS@i+2)& (0+255),b
 32015  00720C  6B7A               	clrf	(DelayUS@i+3)& (0+255),b
 32016  00720E  D007               	goto	l5
 32017  007210                     l6:
 32018                           
 32019                           ; BSR set to: 0
 32020                           ;delay.c: 28: {
 32021                           ;delay.c: 29: __nop();
 32022  007210  F000               	nop	
 32023  007212  0100               	movlb	0	; () banked
 32024  007214  2B77               	incf	DelayUS@i& (0+255),f,b
 32025  007216  0E00               	movlw	0
 32026  007218  2378               	addwfc	(DelayUS@i+1)& (0+255),f,b
 32027  00721A  2379               	addwfc	(DelayUS@i+2)& (0+255),f,b
 32028  00721C  237A               	addwfc	(DelayUS@i+3)& (0+255),f,b
 32029  00721E                     l5:
 32030                           
 32031                           ; BSR set to: 0
 32032  00721E  5173               	movf	DelayUS@delay& (0+255),w,b
 32033  007220  5D77               	subwf	DelayUS@i& (0+255),w,b
 32034  007222  5174               	movf	(DelayUS@delay+1)& (0+255),w,b
 32035  007224  5978               	subwfb	(DelayUS@i+1)& (0+255),w,b
 32036  007226  5175               	movf	(DelayUS@delay+2)& (0+255),w,b
 32037  007228  5979               	subwfb	(DelayUS@i+2)& (0+255),w,b
 32038  00722A  5176               	movf	(DelayUS@delay+3)& (0+255),w,b
 32039  00722C  597A               	subwfb	(DelayUS@i+3)& (0+255),w,b
 32040  00722E  E3F0               	bnc	l6
 32041                           
 32042                           ; BSR set to: 0
 32043  007230  0012               	return		;funcret
 32044  007232                     __end_of_DelayUS:
 32045                           	opt stack 0
 32046                           tblptru	equ	0xFF8
 32047                           tblptrh	equ	0xFF7
 32048                           tblptrl	equ	0xFF6
 32049                           tablat	equ	0xFF5
 32050                           prodh	equ	0xFF4
 32051                           prodl	equ	0xFF3
 32052                           intcon	equ	0xFF2
 32053                           intcon3	equ	0xFF0
 32054                           indf0	equ	0xFEF
 32055                           postinc0	equ	0xFEE
 32056                           plusw0	equ	0xFEB
 32057                           fsr0h	equ	0xFEA
 32058                           fsr0l	equ	0xFE9
 32059                           wreg	equ	0xFE8
 32060                           indf1	equ	0xFE7
 32061                           postinc1	equ	0xFE6
 32062                           postdec1	equ	0xFE5
 32063                           plusw1	equ	0xFE3
 32064                           fsr1h	equ	0xFE2
 32065                           fsr1l	equ	0xFE1
 32066                           indf2	equ	0xFDF
 32067                           postinc2	equ	0xFDE
 32068                           postdec2	equ	0xFDD
 32069                           plusw2	equ	0xFDB
 32070                           fsr2h	equ	0xFDA
 32071                           fsr2l	equ	0xFD9
 32072                           status	equ	0xFD8
 32073                           
 32074 ;; *************** function _InitSymbolTimer *****************
 32075 ;; Defined at:
 32076 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32077 ;; Parameters:    Size  Location     Type
 32078 ;;		None
 32079 ;; Auto vars:     Size  Location     Type
 32080 ;;		None
 32081 ;; Return value:  Size  Location     Type
 32082 ;;                  1    wreg      void 
 32083 ;; Registers used:
 32084 ;;		None
 32085 ;; Tracked objects:
 32086 ;;		On entry : F/E
 32087 ;;		On exit  : F/1
 32088 ;;		Unchanged: 0/0
 32089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32094 ;;Total ram usage:        0 bytes
 32095 ;; Hardware stack levels used:    1
 32096 ;; Hardware stack levels required when called:    5
 32097 ;; This function calls:
 32098 ;;		Nothing
 32099 ;; This function is called by:
 32100 ;;		_main
 32101 ;; This function uses a non-reentrant model
 32102 ;;
 32103                           
 32104                           	psect	text160
 32105  007528                     __ptext160:
 32106                           	opt stack 0
 32107  007528                     _InitSymbolTimer:
 32108                           	opt stack 25
 32109                           
 32110                           ; BSR set to: 14
 32111                           ;symbol.c: 103: T0CON = 0x00;
 32112                           
 32113                           ; BSR set to: 0
 32114                           ;incstack = 0
 32115  007528  6AD5               	clrf	4053,c	;volatile
 32116                           
 32117                           ;symbol.c: 104: INTCON2bits.TMR0IP = 1;
 32118  00752A  84F1               	bsf	intcon2,2,c	;volatile
 32119                           
 32120                           ;symbol.c: 105: INTCONbits.TMR0IF = 0;
 32121  00752C  94F2               	bcf	intcon,2,c	;volatile
 32122                           
 32123                           ;symbol.c: 106: INTCONbits.TMR0IE = 1;
 32124  00752E  8AF2               	bsf	intcon,5,c	;volatile
 32125                           
 32126                           ;symbol.c: 107: T0CONbits.TMR0ON = 1;
 32127  007530  8ED5               	bsf	4053,7,c	;volatile
 32128                           
 32129                           ;symbol.c: 109: t1extension=0;
 32130  007532  0101               	movlb	1	; () banked
 32131  007534  6BBE               	clrf	_t1extension& (0+255),b
 32132  007536  6BBF               	clrf	(_t1extension+1)& (0+255),b
 32133  007538  6BC0               	clrf	(_t1extension+2)& (0+255),b
 32134  00753A  6BC1               	clrf	(_t1extension+3)& (0+255),b
 32135                           
 32136                           ; BSR set to: 1
 32137  00753C  0012               	return		;funcret
 32138  00753E                     __end_of_InitSymbolTimer:
 32139                           	opt stack 0
 32140                           tblptru	equ	0xFF8
 32141                           tblptrh	equ	0xFF7
 32142                           tblptrl	equ	0xFF6
 32143                           tablat	equ	0xFF5
 32144                           prodh	equ	0xFF4
 32145                           prodl	equ	0xFF3
 32146                           intcon	equ	0xFF2
 32147                           intcon2	equ	0xFF1
 32148                           intcon3	equ	0xFF0
 32149                           indf0	equ	0xFEF
 32150                           postinc0	equ	0xFEE
 32151                           plusw0	equ	0xFEB
 32152                           fsr0h	equ	0xFEA
 32153                           fsr0l	equ	0xFE9
 32154                           wreg	equ	0xFE8
 32155                           indf1	equ	0xFE7
 32156                           postinc1	equ	0xFE6
 32157                           postdec1	equ	0xFE5
 32158                           plusw1	equ	0xFE3
 32159                           fsr1h	equ	0xFE2
 32160                           fsr1l	equ	0xFE1
 32161                           indf2	equ	0xFDF
 32162                           postinc2	equ	0xFDE
 32163                           postdec2	equ	0xFDD
 32164                           plusw2	equ	0xFDB
 32165                           fsr2h	equ	0xFDA
 32166                           fsr2l	equ	0xFD9
 32167                           status	equ	0xFD8
 32168                           
 32169 ;; *************** function _HardwareInit *****************
 32170 ;; Defined at:
 32171 ;;		line 235 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 32172 ;; Parameters:    Size  Location     Type
 32173 ;;		None
 32174 ;; Auto vars:     Size  Location     Type
 32175 ;;		None
 32176 ;; Return value:  Size  Location     Type
 32177 ;;                  1    wreg      void 
 32178 ;; Registers used:
 32179 ;;		wreg, status,2
 32180 ;; Tracked objects:
 32181 ;;		On entry : F/1
 32182 ;;		On exit  : F/E
 32183 ;;		Unchanged: 0/0
 32184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32189 ;;Total ram usage:        0 bytes
 32190 ;; Hardware stack levels used:    1
 32191 ;; Hardware stack levels required when called:    5
 32192 ;; This function calls:
 32193 ;;		Nothing
 32194 ;; This function is called by:
 32195 ;;		_main
 32196 ;; This function uses a non-reentrant model
 32197 ;;
 32198                           
 32199                           	psect	text161
 32200  00596C                     __ptext161:
 32201                           	opt stack 0
 32202  00596C                     _HardwareInit:
 32203                           	opt stack 25
 32204                           
 32205                           ; BSR set to: 1
 32206                           ;system.c: 240: OSCCON = 0x78;
 32207                           
 32208                           ; BSR set to: 1
 32209                           ;incstack = 0
 32210  00596C  0E78               	movlw	120
 32211  00596E  6ED3               	movwf	4051,c	;volatile
 32212                           
 32213                           ; BSR set to: 1
 32214                           ;system.c: 241: OSCTUNEbits.PLLEN = 1;
 32215  005970  8C9B               	bsf	3995,6,c	;volatile
 32216                           
 32217                           ; BSR set to: 1
 32218                           ;system.c: 242: WDTCONbits.SWDTEN = 0;
 32219  005972  90C0               	bcf	4032,0,c	;volatile
 32220                           
 32221                           ;system.c: 248: EECON2 = 0x55;
 32222  005974  0E55               	movlw	85
 32223  005976  6EA7               	movwf	4007,c	;volatile
 32224                           
 32225                           ;system.c: 249: EECON2 = 0xAA;
 32226  005978  0EAA               	movlw	170
 32227  00597A  6EA7               	movwf	4007,c	;volatile
 32228                           
 32229                           ; BSR set to: 1
 32230                           ;system.c: 250: PPSCONbits.IOLOCK = 0;
 32231  00597C  010E               	movlb	14	; () banked
 32232  00597E  91FF               	bcf	255,0,b	;volatile
 32233                           
 32234                           ;system.c: 252: RPINR1 = 17;
 32235  005980  0E11               	movlw	17
 32236  005982  6FE7               	movwf	231,b	;volatile
 32237                           
 32238                           ;system.c: 253: RPINR21 = 23;
 32239  005984  0E17               	movlw	23
 32240  005986  6FFB               	movwf	251,b	;volatile
 32241                           
 32242                           ;system.c: 254: RPOR21 = 10;
 32243  005988  0E0A               	movlw	10
 32244  00598A  6FDB               	movwf	219,b	;volatile
 32245                           
 32246                           ;system.c: 255: RPOR19 = 9;
 32247  00598C  0E09               	movlw	9
 32248  00598E  6FD9               	movwf	217,b	;volatile
 32249                           
 32250                           ;system.c: 258: EECON2 = 0x55;
 32251  005990  0E55               	movlw	85
 32252  005992  6EA7               	movwf	4007,c	;volatile
 32253                           
 32254                           ;system.c: 259: EECON2 = 0xAA;
 32255  005994  0EAA               	movlw	170
 32256  005996  6EA7               	movwf	4007,c	;volatile
 32257                           
 32258                           ; BSR set to: 14
 32259                           ;system.c: 260: PPSCONbits.IOLOCK = 1;
 32260  005998  81FF               	bsf	255,0,b	;volatile
 32261                           
 32262                           ;system.c: 265: ANCON0 = 0xFC;
 32263  00599A  0EFC               	movlw	252
 32264  00599C  010F               	movlb	15	; () banked
 32265  00599E  6F48               	movwf	72,b	;volatile
 32266                           
 32267                           ;system.c: 266: ANCON1 = 0x1F;
 32268  0059A0  0E1F               	movlw	31
 32269  0059A2  6F49               	movwf	73,b	;volatile
 32270                           
 32271                           ; BSR set to: 15
 32272                           ;system.c: 271: TRISCbits.TRISC2=0;
 32273  0059A4  9494               	bcf	3988,2,c	;volatile
 32274                           
 32275                           ; BSR set to: 15
 32276                           ;system.c: 272: TRISAbits.TRISA6=0;
 32277  0059A6  9C92               	bcf	3986,6,c	;volatile
 32278                           
 32279                           ; BSR set to: 15
 32280                           ;system.c: 273: TRISAbits.TRISA7=0;
 32281  0059A8  9E92               	bcf	3986,7,c	;volatile
 32282                           
 32283                           ; BSR set to: 15
 32284                           ;system.c: 284: INTCON2bits.RBPU = 0;
 32285  0059AA  9EF1               	bcf	intcon2,7,c	;volatile
 32286                           
 32287                           ; BSR set to: 15
 32288                           ;system.c: 289: TRISAbits.TRISA1 = 1;
 32289  0059AC  8292               	bsf	3986,1,c	;volatile
 32290                           
 32291                           ; BSR set to: 15
 32292                           ;system.c: 290: TRISAbits.TRISA0 = 1;
 32293  0059AE  8092               	bsf	3986,0,c	;volatile
 32294                           
 32295                           ; BSR set to: 15
 32296                           ;system.c: 328: LATAbits.LATA5 = 1;
 32297  0059B0  8A89               	bsf	3977,5,c	;volatile
 32298                           
 32299                           ; BSR set to: 15
 32300                           ;system.c: 329: LATDbits.LATD1 = 1;
 32301  0059B2  828C               	bsf	3980,1,c	;volatile
 32302                           
 32303                           ; BSR set to: 15
 32304                           ;system.c: 331: TRISAbits.TRISA5 = 0;
 32305  0059B4  9A92               	bcf	3986,5,c	;volatile
 32306                           
 32307                           ; BSR set to: 15
 32308                           ;system.c: 332: TRISDbits.TRISD1 = 0;
 32309  0059B6  9295               	bcf	3989,1,c	;volatile
 32310                           
 32311                           ; BSR set to: 15
 32312                           ;system.c: 334: TRISBbits.TRISB0 = 1;
 32313  0059B8  8093               	bsf	3987,0,c	;volatile
 32314                           
 32315                           ; BSR set to: 15
 32316                           ;system.c: 335: TRISCbits.TRISC6 = 1;
 32317  0059BA  8C94               	bsf	3988,6,c	;volatile
 32318                           
 32319                           ; BSR set to: 15
 32320                           ;system.c: 338: INTCON2bits.INTEDG1 = 1;
 32321  0059BC  8AF1               	bsf	intcon2,5,c	;volatile
 32322                           
 32323                           ; BSR set to: 15
 32324                           ;system.c: 341: INTCON2bits.INTEDG0 = 1;
 32325  0059BE  8CF1               	bsf	intcon2,6,c	;volatile
 32326                           
 32327                           ; BSR set to: 15
 32328                           ;system.c: 343: INTCONbits.INT0IF = 0;
 32329  0059C0  92F2               	bcf	intcon,1,c	;volatile
 32330                           
 32331                           ; BSR set to: 15
 32332                           ;system.c: 344: INTCONbits.INT0IE = 1;
 32333  0059C2  88F2               	bsf	intcon,4,c	;volatile
 32334                           
 32335                           ; BSR set to: 15
 32336                           ;system.c: 345: INTCON3bits.INT1IF = 0;
 32337  0059C4  90F0               	bcf	intcon3,0,c	;volatile
 32338                           
 32339                           ; BSR set to: 15
 32340                           ;system.c: 346: INTCON3bits.INT1IE = 1;
 32341  0059C6  86F0               	bsf	intcon3,3,c	;volatile
 32342                           
 32343                           ; BSR set to: 15
 32344                           ;system.c: 350: TRISBbits.TRISB5 = 1;
 32345  0059C8  8A93               	bsf	3987,5,c	;volatile
 32346                           
 32347                           ; BSR set to: 15
 32348                           ;system.c: 351: TRISCbits.TRISC7 = 0;
 32349  0059CA  9E94               	bcf	3988,7,c	;volatile
 32350                           
 32351                           ; BSR set to: 15
 32352                           ;system.c: 352: TRISBbits.TRISB4 = 0;
 32353  0059CC  9893               	bcf	3987,4,c	;volatile
 32354                           
 32355                           ;system.c: 354: SSP1STAT = 0xC0;
 32356  0059CE  0EC0               	movlw	192
 32357  0059D0  6EC7               	movwf	4039,c	;volatile
 32358                           
 32359                           ;system.c: 355: SSP1CON1 = 0x22;
 32360  0059D2  0E22               	movlw	34
 32361  0059D4  6EC6               	movwf	4038,c	;volatile
 32362                           
 32363                           ; BSR set to: 15
 32364                           ;system.c: 360: TRISDbits.TRISD6 = 1;
 32365  0059D6  8C95               	bsf	3989,6,c	;volatile
 32366                           
 32367                           ; BSR set to: 15
 32368                           ;system.c: 361: TRISDbits.TRISD2 = 0;
 32369  0059D8  9495               	bcf	3989,2,c	;volatile
 32370                           
 32371                           ; BSR set to: 15
 32372                           ;system.c: 362: TRISDbits.TRISD4 = 0;
 32373  0059DA  9895               	bcf	3989,4,c	;volatile
 32374                           
 32375                           ;system.c: 364: RPINR1 = 17;
 32376  0059DC  0E11               	movlw	17
 32377  0059DE  010E               	movlb	14	; () banked
 32378  0059E0  6FE7               	movwf	231,b	;volatile
 32379                           
 32380                           ;system.c: 365: RPINR21 = 23;
 32381  0059E2  0E17               	movlw	23
 32382  0059E4  6FFB               	movwf	251,b	;volatile
 32383                           
 32384                           ;system.c: 366: RPOR21 = 10;
 32385  0059E6  0E0A               	movlw	10
 32386  0059E8  6FDB               	movwf	219,b	;volatile
 32387                           
 32388                           ;system.c: 367: RPOR19 = 9;
 32389  0059EA  0E09               	movlw	9
 32390  0059EC  6FD9               	movwf	217,b	;volatile
 32391                           
 32392                           ; BSR set to: 14
 32393                           ;system.c: 369: SSP2STAT = 0x00;
 32394  0059EE  6A73               	clrf	3955,c	;volatile
 32395                           
 32396                           ;system.c: 370: SSP2CON1 = 0x31;
 32397  0059F0  0E31               	movlw	49
 32398  0059F2  6E72               	movwf	3954,c	;volatile
 32399                           
 32400                           ; BSR set to: 14
 32401                           ;system.c: 372: PIR3bits.SSP2IF = 0;
 32402  0059F4  9EA4               	bcf	4004,7,c	;volatile
 32403                           
 32404                           ; BSR set to: 14
 32405                           ;system.c: 380: LATDbits.LATD5 = 1;
 32406  0059F6  8A8C               	bsf	3980,5,c	;volatile
 32407                           
 32408                           ; BSR set to: 14
 32409                           ;system.c: 381: TRISDbits.TRISD5 = 0;
 32410  0059F8  9A95               	bcf	3989,5,c	;volatile
 32411                           
 32412                           ; BSR set to: 14
 32413                           ;system.c: 386: LATEbits.LATE1 = 0;
 32414  0059FA  928D               	bcf	3981,1,c	;volatile
 32415                           
 32416                           ; BSR set to: 14
 32417                           ;system.c: 387: LATDbits.LATD7 = 1;
 32418  0059FC  8E8C               	bsf	3980,7,c	;volatile
 32419                           
 32420                           ; BSR set to: 14
 32421                           ;system.c: 388: LATDbits.LATD3 = 0;
 32422  0059FE  968C               	bcf	3980,3,c	;volatile
 32423                           
 32424                           ; BSR set to: 14
 32425                           ;system.c: 389: LATEbits.LATE0 = 0;
 32426  005A00  908D               	bcf	3981,0,c	;volatile
 32427                           
 32428                           ; BSR set to: 14
 32429                           ;system.c: 390: TRISEbits.TRISE1 = 0;
 32430  005A02  9296               	bcf	3990,1,c	;volatile
 32431                           
 32432                           ; BSR set to: 14
 32433                           ;system.c: 391: TRISDbits.TRISD7 = 0;
 32434  005A04  9E95               	bcf	3989,7,c	;volatile
 32435                           
 32436                           ; BSR set to: 14
 32437                           ;system.c: 392: TRISDbits.TRISD3 = 0;
 32438  005A06  9695               	bcf	3989,3,c	;volatile
 32439                           
 32440                           ; BSR set to: 14
 32441                           ;system.c: 393: TRISEbits.TRISE0 = 0;
 32442  005A08  9096               	bcf	3990,0,c	;volatile
 32443                           
 32444                           ; BSR set to: 14
 32445                           ;system.c: 398: TRISDbits.TRISD6 = 1;
 32446  005A0A  8C95               	bsf	3989,6,c	;volatile
 32447                           
 32448                           ; BSR set to: 14
 32449                           ;system.c: 399: TRISDbits.TRISD2 = 0;
 32450  005A0C  9495               	bcf	3989,2,c	;volatile
 32451                           
 32452                           ; BSR set to: 14
 32453                           ;system.c: 400: TRISDbits.TRISD4 = 0;
 32454  005A0E  9895               	bcf	3989,4,c	;volatile
 32455                           
 32456                           ; BSR set to: 14
 32457                           ;system.c: 402: SSP2STAT = 0x00;
 32458  005A10  6A73               	clrf	3955,c	;volatile
 32459                           
 32460                           ;system.c: 403: SSP2CON1 = 0x32;
 32461  005A12  0E32               	movlw	50
 32462  005A14  6E72               	movwf	3954,c	;volatile
 32463                           
 32464                           ; BSR set to: 14
 32465                           ;system.c: 405: TRISEbits.TRISE2=0;
 32466  005A16  9496               	bcf	3990,2,c	;volatile
 32467                           
 32468                           ; BSR set to: 14
 32469                           ;system.c: 406: LATEbits.LATE2=1;
 32470  005A18  848D               	bsf	3981,2,c	;volatile
 32471                           
 32472                           ; BSR set to: 14
 32473                           ;system.c: 408: PIR3bits.SSP2IF = 0;
 32474  005A1A  9EA4               	bcf	4004,7,c	;volatile
 32475                           
 32476                           ; BSR set to: 14
 32477                           ;system.c: 413: INTCONbits.GIEH = 1;
 32478  005A1C  8EF2               	bsf	intcon,7,c	;volatile
 32479                           
 32480                           ; BSR set to: 14
 32481  005A1E  0C32               	retlw	50	;funcret
 32482  005A20                     __end_of_HardwareInit:
 32483                           	opt stack 0
 32484                           tblptru	equ	0xFF8
 32485                           tblptrh	equ	0xFF7
 32486                           tblptrl	equ	0xFF6
 32487                           tablat	equ	0xFF5
 32488                           prodh	equ	0xFF4
 32489                           prodl	equ	0xFF3
 32490                           intcon	equ	0xFF2
 32491                           intcon2	equ	0xFF1
 32492                           intcon3	equ	0xFF0
 32493                           indf0	equ	0xFEF
 32494                           postinc0	equ	0xFEE
 32495                           plusw0	equ	0xFEB
 32496                           fsr0h	equ	0xFEA
 32497                           fsr0l	equ	0xFE9
 32498                           wreg	equ	0xFE8
 32499                           indf1	equ	0xFE7
 32500                           postinc1	equ	0xFE6
 32501                           postdec1	equ	0xFE5
 32502                           plusw1	equ	0xFE3
 32503                           fsr1h	equ	0xFE2
 32504                           fsr1l	equ	0xFE1
 32505                           indf2	equ	0xFDF
 32506                           postinc2	equ	0xFDE
 32507                           postdec2	equ	0xFDD
 32508                           plusw2	equ	0xFDB
 32509                           fsr2h	equ	0xFDA
 32510                           fsr2l	equ	0xFD9
 32511                           status	equ	0xFD8
 32512                           
 32513 ;; *************** function _ButtonTask *****************
 32514 ;; Defined at:
 32515 ;;		line 427 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 32516 ;; Parameters:    Size  Location     Type
 32517 ;;		None
 32518 ;; Auto vars:     Size  Location     Type
 32519 ;;  Sw              1   39[BANK0 ] unsigned char 
 32520 ;; Return value:  Size  Location     Type
 32521 ;;                  1    wreg      void 
 32522 ;; Registers used:
 32523 ;;		wreg, status,2, status,0, cstack
 32524 ;; Tracked objects:
 32525 ;;		On entry : 0/1
 32526 ;;		On exit  : F/0
 32527 ;;		Unchanged: 0/0
 32528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32532 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32533 ;;Total ram usage:        1 bytes
 32534 ;; Hardware stack levels used:    1
 32535 ;; Hardware stack levels required when called:    7
 32536 ;; This function calls:
 32537 ;;		_MiWi_TickGetMs
 32538 ;; This function is called by:
 32539 ;;		_main
 32540 ;; This function uses a non-reentrant model
 32541 ;;
 32542                           
 32543                           	psect	text162
 32544  00677C                     __ptext162:
 32545                           	opt stack 0
 32546  00677C                     _ButtonTask:
 32547                           	opt stack 23
 32548                           
 32549                           ;system.c: 429: static MIWI_TICK tStart;
 32550                           ;system.c: 430: static uint8_t s0Count=0,s1Count=0;
 32551                           ;system.c: 431: static uint8_t pS0=0,pS1=0;
 32552                           ;system.c: 432: uint8_t Sw;
 32553                           ;system.c: 433: if((MiWi_TickGetMs().Val - tStart.Val)>10)
 32554                           
 32555                           ; BSR set to: 14
 32556                           ;incstack = 0
 32557  00677C  EC6A  F038         	call	_MiWi_TickGetMs	;wreg free
 32558  006780  5182               	movf	(?_MiWi_TickGetMs+3)& (0+255),w,b
 32559  006782  1181               	iorwf	(?_MiWi_TickGetMs+2)& (0+255),w,b
 32560  006784  1180               	iorwf	(?_MiWi_TickGetMs+1)& (0+255),w,b
 32561  006786  E104               	bnz	u22500
 32562  006788  0E0B               	movlw	11
 32563  00678A  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 32564  00678C  A0D8               	btfss	status,0,c
 32565  00678E  0012               	return	
 32566  006790                     u22500:
 32567                           
 32568                           ; BSR set to: 0
 32569                           ;system.c: 434: {
 32570                           ;system.c: 435: Sw=PORTBbits.RB1;
 32571  006790  0E00               	movlw	0
 32572  006792  B281               	btfsc	3969,1,c	;volatile
 32573  006794  0E01               	movlw	1
 32574  006796  6F87               	movwf	ButtonTask@Sw& (0+255),b
 32575                           
 32576                           ; BSR set to: 0
 32577                           ;system.c: 436: if(pS0==Sw)
 32578  006798  5187               	movf	ButtonTask@Sw& (0+255),w,b
 32579  00679A  1839               	xorwf	ButtonTask@pS0,w,c
 32580  00679C  E10A               	bnz	l18544
 32581                           
 32582                           ; BSR set to: 0
 32583                           ;system.c: 437: {
 32584                           ;system.c: 438: if(s0Count<5)
 32585  00679E  0E05               	movlw	5
 32586  0067A0  603B               	cpfslt	ButtonTask@s0Count,c
 32587  0067A2  D002               	goto	l18538
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;system.c: 439: {
 32591                           ;system.c: 440: s0Count++;
 32592  0067A4  2A3B               	incf	ButtonTask@s0Count,f,c
 32593                           
 32594                           ;system.c: 441: }else
 32595  0067A6  D005               	goto	l18544
 32596  0067A8                     l18538:
 32597                           
 32598                           ; BSR set to: 0
 32599                           ;system.c: 442: {
 32600                           ;system.c: 443: if(pS0==0)
 32601  0067A8  5039               	movf	ButtonTask@pS0,w,c
 32602  0067AA  E102               	bnz	l18542
 32603                           
 32604                           ; BSR set to: 0
 32605                           ;system.c: 444: {
 32606                           ;system.c: 445: switches|=(1<<0);
 32607  0067AC  8046               	bsf	_switches,0,c
 32608                           
 32609                           ;system.c: 446: }else
 32610  0067AE  D001               	goto	l18544
 32611  0067B0                     l18542:
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;system.c: 447: {
 32615                           ;system.c: 448: switches&=(~(1<<0));
 32616  0067B0  9046               	bcf	_switches,0,c
 32617  0067B2                     l18544:
 32618                           
 32619                           ; BSR set to: 0
 32620                           ;system.c: 449: }
 32621                           ;system.c: 450: }
 32622                           ;system.c: 451: }
 32623                           ;system.c: 452: pS0=Sw;
 32624  0067B2  C087  F039         	movff	ButtonTask@Sw,ButtonTask@pS0
 32625                           
 32626                           ; BSR set to: 0
 32627                           ;system.c: 454: Sw=PORTBbits.RB2;
 32628  0067B6  0E00               	movlw	0
 32629  0067B8  B481               	btfsc	3969,2,c	;volatile
 32630  0067BA  0E01               	movlw	1
 32631  0067BC  6F87               	movwf	ButtonTask@Sw& (0+255),b
 32632                           
 32633                           ;system.c: 455: if(pS1==Sw)
 32634  0067BE  5187               	movf	ButtonTask@Sw& (0+255),w,b
 32635  0067C0  183A               	xorwf	ButtonTask@pS1,w,c
 32636  0067C2  E10A               	bnz	l18558
 32637                           
 32638                           ; BSR set to: 0
 32639                           ;system.c: 456: {
 32640                           ;system.c: 457: if(s1Count<5)
 32641  0067C4  0E05               	movlw	5
 32642  0067C6  603C               	cpfslt	ButtonTask@s1Count,c
 32643  0067C8  D002               	goto	l18552
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;system.c: 458: {
 32647                           ;system.c: 459: s1Count++;
 32648  0067CA  2A3C               	incf	ButtonTask@s1Count,f,c
 32649                           
 32650                           ;system.c: 460: }else
 32651  0067CC  D005               	goto	l18558
 32652  0067CE                     l18552:
 32653                           
 32654                           ; BSR set to: 0
 32655                           ;system.c: 461: {
 32656                           ;system.c: 462: if(pS1==0)
 32657  0067CE  503A               	movf	ButtonTask@pS1,w,c
 32658  0067D0  E102               	bnz	l18556
 32659                           
 32660                           ; BSR set to: 0
 32661                           ;system.c: 463: {
 32662                           ;system.c: 464: switches|=(1<<1);
 32663  0067D2  8246               	bsf	_switches,1,c
 32664                           
 32665                           ;system.c: 465: }else
 32666  0067D4  D001               	goto	l18558
 32667  0067D6                     l18556:
 32668                           
 32669                           ; BSR set to: 0
 32670                           ;system.c: 466: {
 32671                           ;system.c: 467: switches&=(~(1<<1));
 32672  0067D6  9246               	bcf	_switches,1,c
 32673  0067D8                     l18558:
 32674                           
 32675                           ; BSR set to: 0
 32676                           ;system.c: 468: }
 32677                           ;system.c: 469: }
 32678                           ;system.c: 470: }
 32679                           ;system.c: 471: pS1=Sw;
 32680  0067D8  C087  F03A         	movff	ButtonTask@Sw,ButtonTask@pS1
 32681                           
 32682                           ; BSR set to: 0
 32683  0067DC  0012               	return		;funcret
 32684  0067DE                     __end_of_ButtonTask:
 32685                           	opt stack 0
 32686                           tblptru	equ	0xFF8
 32687                           tblptrh	equ	0xFF7
 32688                           tblptrl	equ	0xFF6
 32689                           tablat	equ	0xFF5
 32690                           prodh	equ	0xFF4
 32691                           prodl	equ	0xFF3
 32692                           intcon	equ	0xFF2
 32693                           intcon2	equ	0xFF1
 32694                           intcon3	equ	0xFF0
 32695                           indf0	equ	0xFEF
 32696                           postinc0	equ	0xFEE
 32697                           plusw0	equ	0xFEB
 32698                           fsr0h	equ	0xFEA
 32699                           fsr0l	equ	0xFE9
 32700                           wreg	equ	0xFE8
 32701                           indf1	equ	0xFE7
 32702                           postinc1	equ	0xFE6
 32703                           postdec1	equ	0xFE5
 32704                           plusw1	equ	0xFE3
 32705                           fsr1h	equ	0xFE2
 32706                           fsr1l	equ	0xFE1
 32707                           indf2	equ	0xFDF
 32708                           postinc2	equ	0xFDE
 32709                           postdec2	equ	0xFDD
 32710                           plusw2	equ	0xFDB
 32711                           fsr2h	equ	0xFDA
 32712                           fsr2l	equ	0xFD9
 32713                           status	equ	0xFD8
 32714                           
 32715 ;; *************** function _MiWi_TickGetMs *****************
 32716 ;; Defined at:
 32717 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;		None
 32720 ;; Auto vars:     Size  Location     Type
 32721 ;;  tnow            4   35[BANK0 ] unsigned long 
 32722 ;; Return value:  Size  Location     Type
 32723 ;;                  4   31[BANK0 ] struct MIWI_TICK_t
 32724 ;; Registers used:
 32725 ;;		wreg, status,2, status,0, cstack
 32726 ;; Tracked objects:
 32727 ;;		On entry : 0/0
 32728 ;;		On exit  : F/0
 32729 ;;		Unchanged: 0/0
 32730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32734 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32735 ;;Total ram usage:        8 bytes
 32736 ;; Hardware stack levels used:    1
 32737 ;; Hardware stack levels required when called:    6
 32738 ;; This function calls:
 32739 ;;		_MiWi_TickGet
 32740 ;; This function is called by:
 32741 ;;		_ButtonTask
 32742 ;;		_LEDManagerTask
 32743 ;;		_MiApp_MessageAvailable
 32744 ;;		_MiApp_SearchConnection
 32745 ;;		_TxPacket
 32746 ;;		_MiMAC_ReceivedPacket
 32747 ;; This function uses a non-reentrant model
 32748 ;;
 32749                           
 32750                           	psect	text163
 32751  0070D4                     __ptext163:
 32752                           	opt stack 0
 32753  0070D4                     _MiWi_TickGetMs:
 32754                           	opt stack 16
 32755                           
 32756                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 32757                           
 32758                           ; BSR set to: 0
 32759                           ;incstack = 0
 32760  0070D4  EC03  F037         	call	_MiWi_TickGet	;wreg free
 32761  0070D8  C073  F083         	movff	?_MiWi_TickGet,MiWi_TickGetMs@tnow
 32762  0070DC  C074  F084         	movff	?_MiWi_TickGet+1,MiWi_TickGetMs@tnow+1
 32763  0070E0  C075  F085         	movff	?_MiWi_TickGet+2,MiWi_TickGetMs@tnow+2
 32764  0070E4  C076  F086         	movff	?_MiWi_TickGet+3,MiWi_TickGetMs@tnow+3
 32765                           
 32766                           ; BSR set to: 0
 32767                           ;symbol.c: 123: currentTime.Val=tnow;
 32768  0070E8  C083  F1B6         	movff	MiWi_TickGetMs@tnow,_currentTime
 32769  0070EC  C084  F1B7         	movff	MiWi_TickGetMs@tnow+1,_currentTime+1
 32770  0070F0  C085  F1B8         	movff	MiWi_TickGetMs@tnow+2,_currentTime+2
 32771  0070F4  C086  F1B9         	movff	MiWi_TickGetMs@tnow+3,_currentTime+3
 32772                           
 32773                           ; BSR set to: 0
 32774                           ;symbol.c: 124: return(currentTime);
 32775  0070F8  C1B6  F07F         	movff	_currentTime,?_MiWi_TickGetMs
 32776  0070FC  C1B7  F080         	movff	_currentTime+1,?_MiWi_TickGetMs+1
 32777  007100  C1B8  F081         	movff	_currentTime+2,?_MiWi_TickGetMs+2
 32778  007104  C1B9  F082         	movff	_currentTime+3,?_MiWi_TickGetMs+3
 32779                           
 32780                           ; BSR set to: 0
 32781  007108  0012               	return		;funcret
 32782  00710A                     __end_of_MiWi_TickGetMs:
 32783                           	opt stack 0
 32784                           tblptru	equ	0xFF8
 32785                           tblptrh	equ	0xFF7
 32786                           tblptrl	equ	0xFF6
 32787                           tablat	equ	0xFF5
 32788                           prodh	equ	0xFF4
 32789                           prodl	equ	0xFF3
 32790                           intcon	equ	0xFF2
 32791                           intcon2	equ	0xFF1
 32792                           intcon3	equ	0xFF0
 32793                           indf0	equ	0xFEF
 32794                           postinc0	equ	0xFEE
 32795                           plusw0	equ	0xFEB
 32796                           fsr0h	equ	0xFEA
 32797                           fsr0l	equ	0xFE9
 32798                           wreg	equ	0xFE8
 32799                           indf1	equ	0xFE7
 32800                           postinc1	equ	0xFE6
 32801                           postdec1	equ	0xFE5
 32802                           plusw1	equ	0xFE3
 32803                           fsr1h	equ	0xFE2
 32804                           fsr1l	equ	0xFE1
 32805                           indf2	equ	0xFDF
 32806                           postinc2	equ	0xFDE
 32807                           postdec2	equ	0xFDD
 32808                           plusw2	equ	0xFDB
 32809                           fsr2h	equ	0xFDA
 32810                           fsr2l	equ	0xFD9
 32811                           status	equ	0xFD8
 32812                           
 32813 ;; *************** function _MiWi_TickGet *****************
 32814 ;; Defined at:
 32815 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32816 ;; Parameters:    Size  Location     Type
 32817 ;;		None
 32818 ;; Auto vars:     Size  Location     Type
 32819 ;;  tmrval          4   27[BANK0 ] unsigned long 
 32820 ;;  t1ext           4   23[BANK0 ] unsigned long 
 32821 ;; Return value:  Size  Location     Type
 32822 ;;                  4   19[BANK0 ] unsigned long 
 32823 ;; Registers used:
 32824 ;;		wreg, status,2, status,0
 32825 ;; Tracked objects:
 32826 ;;		On entry : 0/0
 32827 ;;		On exit  : F/0
 32828 ;;		Unchanged: 0/0
 32829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32831 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32833 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32834 ;;Total ram usage:       12 bytes
 32835 ;; Hardware stack levels used:    1
 32836 ;; Hardware stack levels required when called:    5
 32837 ;; This function calls:
 32838 ;;		Nothing
 32839 ;; This function is called by:
 32840 ;;		_MiWi_TickGetMs
 32841 ;; This function uses a non-reentrant model
 32842 ;;
 32843                           
 32844                           	psect	text164
 32845  006E06                     __ptext164:
 32846                           	opt stack 0
 32847  006E06                     _MiWi_TickGet:
 32848                           	opt stack 16
 32849                           
 32850                           ;symbol.c: 129: uint32_t tmrval=0;
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;incstack = 0
 32854  006E06  0100               	movlb	0	; () banked
 32855  006E08  6B7B               	clrf	MiWi_TickGet@tmrval& (0+255),b
 32856  006E0A  6B7C               	clrf	(MiWi_TickGet@tmrval+1)& (0+255),b
 32857  006E0C  6B7D               	clrf	(MiWi_TickGet@tmrval+2)& (0+255),b
 32858  006E0E  6B7E               	clrf	(MiWi_TickGet@tmrval+3)& (0+255),b
 32859  006E10                     l125:
 32860                           
 32861                           ; BSR set to: 0
 32862                           ;symbol.c: 133: {
 32863                           ;symbol.c: 134: t1fired=0;
 32864  006E10  6BEA               	clrf	_t1fired& (0+255),b	;volatile
 32865                           
 32866                           ;symbol.c: 136: t1ext=t1extension;
 32867  006E12  C1BE  F077         	movff	_t1extension,MiWi_TickGet@t1ext
 32868  006E16  C1BF  F078         	movff	_t1extension+1,MiWi_TickGet@t1ext+1
 32869  006E1A  C1C0  F079         	movff	_t1extension+2,MiWi_TickGet@t1ext+2
 32870  006E1E  C1C1  F07A         	movff	_t1extension+3,MiWi_TickGet@t1ext+3
 32871                           
 32872                           ; BSR set to: 0
 32873                           ;symbol.c: 137: } while(t1fired==1);
 32874  006E22  05EA               	decf	_t1fired& (0+255),w,b	;volatile
 32875  006E24  E0F5               	bz	l125
 32876                           
 32877                           ; BSR set to: 0
 32878                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 32879  006E26  5177               	movf	MiWi_TickGet@t1ext& (0+255),w,b
 32880  006E28  137B               	iorwf	MiWi_TickGet@tmrval& (0+255),f,b
 32881  006E2A  5178               	movf	(MiWi_TickGet@t1ext+1)& (0+255),w,b
 32882  006E2C  137C               	iorwf	(MiWi_TickGet@tmrval+1)& (0+255),f,b
 32883  006E2E  5179               	movf	(MiWi_TickGet@t1ext+2)& (0+255),w,b
 32884  006E30  137D               	iorwf	(MiWi_TickGet@tmrval+2)& (0+255),f,b
 32885  006E32  517A               	movf	(MiWi_TickGet@t1ext+3)& (0+255),w,b
 32886  006E34  137E               	iorwf	(MiWi_TickGet@tmrval+3)& (0+255),f,b
 32887                           
 32888                           ; BSR set to: 0
 32889                           ;symbol.c: 140: return(tmrval);
 32890  006E36  C07B  F073         	movff	MiWi_TickGet@tmrval,?_MiWi_TickGet
 32891  006E3A  C07C  F074         	movff	MiWi_TickGet@tmrval+1,?_MiWi_TickGet+1
 32892  006E3E  C07D  F075         	movff	MiWi_TickGet@tmrval+2,?_MiWi_TickGet+2
 32893  006E42  C07E  F076         	movff	MiWi_TickGet@tmrval+3,?_MiWi_TickGet+3
 32894                           
 32895                           ; BSR set to: 0
 32896  006E46  0012               	return		;funcret
 32897  006E48                     __end_of_MiWi_TickGet:
 32898                           	opt stack 0
 32899                           tblptru	equ	0xFF8
 32900                           tblptrh	equ	0xFF7
 32901                           tblptrl	equ	0xFF6
 32902                           tablat	equ	0xFF5
 32903                           prodh	equ	0xFF4
 32904                           prodl	equ	0xFF3
 32905                           intcon	equ	0xFF2
 32906                           intcon2	equ	0xFF1
 32907                           intcon3	equ	0xFF0
 32908                           indf0	equ	0xFEF
 32909                           postinc0	equ	0xFEE
 32910                           plusw0	equ	0xFEB
 32911                           fsr0h	equ	0xFEA
 32912                           fsr0l	equ	0xFE9
 32913                           wreg	equ	0xFE8
 32914                           indf1	equ	0xFE7
 32915                           postinc1	equ	0xFE6
 32916                           postdec1	equ	0xFE5
 32917                           plusw1	equ	0xFE3
 32918                           fsr1h	equ	0xFE2
 32919                           fsr1l	equ	0xFE1
 32920                           indf2	equ	0xFDF
 32921                           postinc2	equ	0xFDE
 32922                           postdec2	equ	0xFDD
 32923                           plusw2	equ	0xFDB
 32924                           fsr2h	equ	0xFDA
 32925                           fsr2l	equ	0xFD9
 32926                           status	equ	0xFD8
 32927                           
 32928 ;; *************** function _HighISR *****************
 32929 ;; Defined at:
 32930 ;;		line 1316 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 32931 ;; Parameters:    Size  Location     Type
 32932 ;;		None
 32933 ;; Auto vars:     Size  Location     Type
 32934 ;;  dstPan          2    8[BANK0 ] unsigned int 
 32935 ;;  dPan            1    0[BANK0 ] PTR unsigned char 
 32936 ;;		 -> HighISR@dstPan(2), 
 32937 ;;  ackInfoIndex    1   15[BANK0 ] unsigned char 
 32938 ;;  PacketForMe     1   10[BANK0 ] unsigned char 
 32939 ;;  i               1   18[BANK0 ] unsigned char 
 32940 ;;  fifo_stat       1    3[BANK0 ] unsigned char 
 32941 ;;  ackPacket       4    4[BANK0 ] unsigned char [4]
 32942 ;;  counter         2    1[BANK0 ] unsigned int 
 32943 ;;  BankIndex       1   17[BANK0 ] unsigned char 
 32944 ;;  PacketLen       1   16[BANK0 ] unsigned char 
 32945 ;;  RxPacketPtr     1   14[BANK0 ] unsigned char 
 32946 ;;  bAck            1   11[BANK0 ] unsigned char 
 32947 ;;  tmr             2   12[BANK0 ] unsigned int 
 32948 ;; Return value:  Size  Location     Type
 32949 ;;                  1    wreg      void 
 32950 ;; Registers used:
 32951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32952 ;; Tracked objects:
 32953 ;;		On entry : 0/0
 32954 ;;		On exit  : 0/0
 32955 ;;		Unchanged: 0/0
 32956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32958 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32959 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32960 ;;      Totals:        10      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32961 ;;Total ram usage:       29 bytes
 32962 ;; Hardware stack levels used:    1
 32963 ;; Hardware stack levels required when called:    4
 32964 ;; This function calls:
 32965 ;;		i2_MiWi_TickGetMs
 32966 ;;		i2_RegisterRead
 32967 ;;		i2_SPIGet
 32968 ;;		i2_TxPacket
 32969 ;; This function is called by:
 32970 ;;		Interrupt level 2
 32971 ;; This function uses a non-reentrant model
 32972 ;;
 32973                           
 32974                           	psect	intcode
 32975  000008                     __pintcode:
 32976                           	opt stack 0
 32977  000008                     _HighISR:
 32978                           	opt stack 13
 32979                           
 32980                           ; BSR set to: 0
 32981                           ;incstack = 0
 32982  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32983  00000A  CFE1 F030          	movff	fsr1l,??_HighISR+4
 32984  00000E  CFE2 F031          	movff	fsr1h,??_HighISR+5
 32985  000012  CFD9 F032          	movff	fsr2l,??_HighISR+6
 32986  000016  CFDA F033          	movff	fsr2h,??_HighISR+7
 32987  00001A  CFF3 F034          	movff	prodl,??_HighISR+8
 32988  00001E  CFF4 F035          	movff	prodh,??_HighISR+9
 32989                           
 32990                           ;drv_mrf_miwi_mesh_89xa.c: 1325: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 32991  000022  B0F0               	btfsc	intcon3,0,c	;volatile
 32992  000024  A6F0               	btfss	intcon3,3,c	;volatile
 32993  000026  D20E               	goto	i2l15448
 32994                           
 32995                           ;drv_mrf_miwi_mesh_89xa.c: 1326: {
 32996                           ;drv_mrf_miwi_mesh_89xa.c: 1327: if(RF_Mode == 0x60)
 32997  000028  0E60               	movlw	96
 32998  00002A  183E               	xorwf	_RF_Mode,w,c
 32999  00002C  E001 D205          	bnz	i2l15442
 33000                           
 33001                           ;drv_mrf_miwi_mesh_89xa.c: 1328: {
 33002                           ;drv_mrf_miwi_mesh_89xa.c: 1329: uint8_t RxPacketPtr;
 33003                           ;drv_mrf_miwi_mesh_89xa.c: 1330: uint8_t PacketLen;
 33004                           ;drv_mrf_miwi_mesh_89xa.c: 1331: uint8_t BankIndex;
 33005                           ;drv_mrf_miwi_mesh_89xa.c: 1332: uint16_t counter;
 33006                           ;drv_mrf_miwi_mesh_89xa.c: 1333: bool bAck;
 33007                           ;drv_mrf_miwi_mesh_89xa.c: 1334: uint8_t ackPacket[4];
 33008                           ;drv_mrf_miwi_mesh_89xa.c: 1337: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 33009  000030  0E28               	movlw	40
 33010  000032  EC19  F039         	call	i2_RegisterRead
 33011  000036  6E2C               	movwf	??_HighISR& (0+255),c
 33012  000038  90D8               	bcf	status,0,c
 33013  00003A  302C               	rrcf	??_HighISR,w,c
 33014  00003C  0101               	movlb	1	; () banked
 33015  00003E  6FD0               	movwf	_RSSIVal& (0+255),b
 33016                           
 33017                           ; BSR set to: 1
 33018                           ;drv_mrf_miwi_mesh_89xa.c: 1340: RSSILock = RSSIVal;
 33019  000040  C1D0  F1CF         	movff	_RSSIVal,_RSSILock
 33020                           
 33021                           ; BSR set to: 1
 33022                           ;drv_mrf_miwi_mesh_89xa.c: 1342: LATAbits.LATA5 = 0;
 33023  000044  9A89               	bcf	3977,5,c	;volatile
 33024                           
 33025                           ; BSR set to: 1
 33026                           ;drv_mrf_miwi_mesh_89xa.c: 1343: PacketLen = SPIGet();
 33027  000046  EC12  F03B         	call	i2_SPIGet	;wreg free
 33028  00004A  0100               	movlb	0	; () banked
 33029  00004C  6F70               	movwf	HighISR@PacketLen& (0+255),b
 33030                           
 33031                           ; BSR set to: 0
 33032                           ;drv_mrf_miwi_mesh_89xa.c: 1344: LATAbits.LATA5 = 1;
 33033  00004E  8A89               	bsf	3977,5,c	;volatile
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;drv_mrf_miwi_mesh_89xa.c: 1347: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 33037  000050  6B71               	clrf	HighISR@BankIndex& (0+255),b
 33038  000052                     i2l15252:
 33039                           
 33040                           ; BSR set to: 0
 33041                           ;drv_mrf_miwi_mesh_89xa.c: 1348: {
 33042                           ;drv_mrf_miwi_mesh_89xa.c: 1349: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 33043  000052  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33044  000054  0D47               	mullw	71
 33045  000056  0E1E               	movlw	low _RxPacket
 33046  000058  24F3               	addwf	prodl,w,c
 33047  00005A  6ED9               	movwf	fsr2l,c
 33048  00005C  0E03               	movlw	high _RxPacket
 33049  00005E  20F4               	addwfc	prodh,w,c
 33050  000060  6EDA               	movwf	fsr2h,c
 33051  000062  A0DF               	btfss	indf2,0,c
 33052  000064  D005               	goto	i2l15260
 33053                           
 33054                           ; BSR set to: 3
 33055  000066  0100               	movlb	0	; () banked
 33056  000068  2B71               	incf	HighISR@BankIndex& (0+255),f,b
 33057                           
 33058                           ; BSR set to: 0
 33059  00006A  0E01               	movlw	1
 33060  00006C  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33061  00006E  D7F1               	goto	i2l15252
 33062  000070                     i2l15260:
 33063                           
 33064                           ;drv_mrf_miwi_mesh_89xa.c: 1352: }
 33065                           ;drv_mrf_miwi_mesh_89xa.c: 1353: }
 33066                           ;drv_mrf_miwi_mesh_89xa.c: 1356: if( PacketLen == 2 )
 33067  000070  0E02               	movlw	2
 33068  000072  0100               	movlb	0	; () banked
 33069  000074  1970               	xorwf	HighISR@PacketLen& (0+255),w,b
 33070  000076  E103               	bnz	i2l871
 33071                           
 33072                           ; BSR set to: 0
 33073                           ;drv_mrf_miwi_mesh_89xa.c: 1357: {
 33074                           ;drv_mrf_miwi_mesh_89xa.c: 1358: bAck = 1;
 33075  000078  0E01               	movlw	1
 33076  00007A  6F6B               	movwf	HighISR@bAck& (0+255),b
 33077                           
 33078                           ;drv_mrf_miwi_mesh_89xa.c: 1359: }
 33079  00007C  D001               	goto	i2l15264
 33080  00007E                     i2l871:
 33081                           
 33082                           ; BSR set to: 0
 33083                           ;drv_mrf_miwi_mesh_89xa.c: 1360: else
 33084                           ;drv_mrf_miwi_mesh_89xa.c: 1361: {
 33085                           ;drv_mrf_miwi_mesh_89xa.c: 1362: bAck = 0;
 33086  00007E  6B6B               	clrf	HighISR@bAck& (0+255),b
 33087  000080                     i2l15264:
 33088                           
 33089                           ; BSR set to: 0
 33090                           ;drv_mrf_miwi_mesh_89xa.c: 1363: }
 33091                           ;drv_mrf_miwi_mesh_89xa.c: 1366: if( PacketLen >= 64 || PacketLen == 0 || (BankIndex >= 
      +                          2 && (bAck==0)) )
 33092  000080  0E40               	movlw	64
 33093  000082  6170               	cpfslt	HighISR@PacketLen& (0+255),b
 33094  000084  D007               	goto	i2l15272
 33095                           
 33096                           ; BSR set to: 0
 33097  000086  5170               	movf	HighISR@PacketLen& (0+255),w,b
 33098  000088  E005               	bz	i2l15272
 33099                           
 33100                           ; BSR set to: 0
 33101  00008A  0E01               	movlw	1
 33102  00008C  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33103  00008E  D012               	goto	i2l873
 33104                           
 33105                           ; BSR set to: 0
 33106  000090  516B               	movf	HighISR@bAck& (0+255),w,b
 33107  000092  E110               	bnz	i2l873
 33108  000094                     i2l15272:
 33109                           
 33110                           ; BSR set to: 0
 33111                           ;drv_mrf_miwi_mesh_89xa.c: 1369: {
 33112                           ;drv_mrf_miwi_mesh_89xa.c: 1370: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 33113  000094  0E1A               	movlw	26
 33114  000096  EC19  F039         	call	i2_RegisterRead
 33115  00009A  D007               	goto	L13
 33116  00009C                     i2l878:
 33117                           
 33118                           ; BSR set to: 0
 33119                           ;drv_mrf_miwi_mesh_89xa.c: 1372: {
 33120                           ;drv_mrf_miwi_mesh_89xa.c: 1373: LATAbits.LATA5 = 0;
 33121  00009C  9A89               	bcf	3977,5,c	;volatile
 33122                           
 33123                           ; BSR set to: 0
 33124                           ;drv_mrf_miwi_mesh_89xa.c: 1374: SPIGet();
 33125  00009E  EC12  F03B         	call	i2_SPIGet	;wreg free
 33126                           
 33127                           ;drv_mrf_miwi_mesh_89xa.c: 1375: LATAbits.LATA5 = 1;
 33128  0000A2  8A89               	bsf	3977,5,c	;volatile
 33129                           
 33130                           ;drv_mrf_miwi_mesh_89xa.c: 1376: fifo_stat = RegisterRead(0x1A00>>8);
 33131  0000A4  0E1A               	movlw	26
 33132  0000A6  EC19  F039         	call	i2_RegisterRead
 33133  0000AA                     L13:
 33134  0000AA  0100               	movlb	0	; () banked
 33135  0000AC  6F63               	movwf	HighISR@fifo_stat& (0+255),b
 33136                           
 33137                           ; BSR set to: 0
 33138  0000AE  B363               	btfsc	HighISR@fifo_stat& (0+255),1,b
 33139  0000B0  D7F5               	goto	i2l878
 33140  0000B2  D1C6               	goto	i2l15444
 33141  0000B4                     i2l873:
 33142                           
 33143                           ; BSR set to: 0
 33144                           ;drv_mrf_miwi_mesh_89xa.c: 1380: }
 33145                           ;drv_mrf_miwi_mesh_89xa.c: 1382: RxPacketPtr = 0;
 33146  0000B4  6B6E               	clrf	HighISR@RxPacketPtr& (0+255),b
 33147                           
 33148                           ;drv_mrf_miwi_mesh_89xa.c: 1383: counter = PacketLen;
 33149  0000B6  C070  F061         	movff	HighISR@PacketLen,HighISR@counter
 33150  0000BA  6B62               	clrf	(HighISR@counter+1)& (0+255),b
 33151                           
 33152                           ;drv_mrf_miwi_mesh_89xa.c: 1385: while(counter >= 1)
 33153  0000BC  D1BA               	goto	i2l15440
 33154  0000BE                     i2l15282:
 33155                           
 33156                           ; BSR set to: 0
 33157                           ;drv_mrf_miwi_mesh_89xa.c: 1388: if(1)
 33158  0000BE  0761               	decf	HighISR@counter& (0+255),f,b
 33159  0000C0  A0D8               	btfss	status,0,c
 33160  0000C2  0762               	decf	(HighISR@counter+1)& (0+255),f,b
 33161                           
 33162                           ; BSR set to: 0
 33163                           ;drv_mrf_miwi_mesh_89xa.c: 1389: {
 33164                           ;drv_mrf_miwi_mesh_89xa.c: 1391: if( bAck )
 33165  0000C4  516B               	movf	HighISR@bAck& (0+255),w,b
 33166  0000C6  E008               	bz	i2l884
 33167                           
 33168                           ; BSR set to: 0
 33169                           ;drv_mrf_miwi_mesh_89xa.c: 1392: {
 33170                           ;drv_mrf_miwi_mesh_89xa.c: 1393: LATAbits.LATA5 = 0;
 33171  0000C8  9A89               	bcf	3977,5,c	;volatile
 33172                           
 33173                           ; BSR set to: 0
 33174                           ;drv_mrf_miwi_mesh_89xa.c: 1394: ackPacket[RxPacketPtr++] = SPIGet();
 33175  0000CA  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 33176  0000CC  0F64               	addlw	low HighISR@ackPacket
 33177  0000CE  6ED9               	movwf	fsr2l,c
 33178  0000D0  6ADA               	clrf	fsr2h,c
 33179  0000D2  EC12  F03B         	call	i2_SPIGet	;wreg free
 33180  0000D6  D016               	goto	L19
 33181  0000D8                     i2l884:
 33182                           
 33183                           ; BSR set to: 0
 33184                           ;drv_mrf_miwi_mesh_89xa.c: 1398: else
 33185                           ;drv_mrf_miwi_mesh_89xa.c: 1399: {
 33186                           ;drv_mrf_miwi_mesh_89xa.c: 1400: LATAbits.LATA5 = 0;
 33187  0000D8  9A89               	bcf	3977,5,c	;volatile
 33188                           
 33189                           ; BSR set to: 0
 33190                           ;drv_mrf_miwi_mesh_89xa.c: 1401: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 33191  0000DA  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33192  0000DC  0D47               	mullw	71
 33193  0000DE  0E1E               	movlw	low _RxPacket
 33194  0000E0  6E2C               	movwf	??_HighISR& (0+255),c
 33195  0000E2  0E03               	movlw	high _RxPacket
 33196  0000E4  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33197  0000E6  2A2C               	incf	??_HighISR,f,c
 33198  0000E8  0E00               	movlw	0
 33199  0000EA  222D               	addwfc	??_HighISR+1,f,c
 33200  0000EC  50F3               	movf	prodl,w,c
 33201  0000EE  262C               	addwf	??_HighISR,f,c
 33202  0000F0  50F4               	movf	prodh,w,c
 33203  0000F2  222D               	addwfc	??_HighISR+1,f,c
 33204  0000F4  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 33205  0000F6  242C               	addwf	??_HighISR,w,c
 33206  0000F8  6ED9               	movwf	fsr2l,c
 33207  0000FA  0E00               	movlw	0
 33208  0000FC  202D               	addwfc	??_HighISR+1,w,c
 33209  0000FE  6EDA               	movwf	fsr2h,c
 33210  000100  EC12  F03B         	call	i2_SPIGet	;wreg free
 33211  000104                     L19:
 33212  000104  6EDF               	movwf	indf2,c
 33213  000106  0100               	movlb	0	; () banked
 33214  000108  2B6E               	incf	HighISR@RxPacketPtr& (0+255),f,b
 33215                           
 33216                           ; BSR set to: 0
 33217                           ;drv_mrf_miwi_mesh_89xa.c: 1402: LATAbits.LATA5 = 1;
 33218  00010A  8A89               	bsf	3977,5,c	;volatile
 33219                           
 33220                           ; BSR set to: 0
 33221                           ;drv_mrf_miwi_mesh_89xa.c: 1403: }
 33222                           ;drv_mrf_miwi_mesh_89xa.c: 1406: if( RxPacketPtr >= PacketLen )
 33223  00010C  5170               	movf	HighISR@PacketLen& (0+255),w,b
 33224  00010E  5D6E               	subwf	HighISR@RxPacketPtr& (0+255),w,b
 33225  000110  E201 D18F          	bnc	i2l15440
 33226                           
 33227                           ; BSR set to: 0
 33228                           ;drv_mrf_miwi_mesh_89xa.c: 1407: {
 33229                           ;drv_mrf_miwi_mesh_89xa.c: 1408: uint8_t i;
 33230                           ;drv_mrf_miwi_mesh_89xa.c: 1410: if( bAck )
 33231  000114  516B               	movf	HighISR@bAck& (0+255),w,b
 33232  000116  E023               	bz	i2l887
 33233                           
 33234                           ; BSR set to: 0
 33235                           ;drv_mrf_miwi_mesh_89xa.c: 1411: {
 33236                           ;drv_mrf_miwi_mesh_89xa.c: 1413: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 33237  000118  5164               	movf	HighISR@ackPacket& (0+255),w,b
 33238  00011A  0B03               	andlw	3
 33239  00011C  0A02               	xorlw	2
 33240  00011E  E107               	bnz	i2l15314
 33241                           
 33242                           ; BSR set to: 0
 33243                           ;drv_mrf_miwi_mesh_89xa.c: 1414: {
 33244                           ;drv_mrf_miwi_mesh_89xa.c: 1415: if( ackPacket[1] == TxMACSeq )
 33245  000120  5042               	movf	_TxMACSeq,w,c
 33246  000122  1965               	xorwf	(HighISR@ackPacket+1)& (0+255),w,b
 33247  000124  E001 D18C          	bnz	i2l15444
 33248                           
 33249                           ; BSR set to: 0
 33250                           ;drv_mrf_miwi_mesh_89xa.c: 1416: {
 33251                           ;drv_mrf_miwi_mesh_89xa.c: 1417: hasAck = 1;
 33252  000128  0E01               	movlw	1
 33253  00012A  6E43               	movwf	_hasAck,c	;volatile
 33254                           
 33255                           ; BSR set to: 0
 33256                           ;drv_mrf_miwi_mesh_89xa.c: 1420: goto RETURN_HERE;
 33257  00012C  D189               	goto	i2l15444
 33258  00012E                     i2l15314:
 33259                           
 33260                           ; BSR set to: 0
 33261                           ;drv_mrf_miwi_mesh_89xa.c: 1422: else
 33262                           ;drv_mrf_miwi_mesh_89xa.c: 1424: if( BankIndex >= 2 )
 33263  00012E  0E01               	movlw	1
 33264  000130  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33265  000132  D001               	goto	i2l15318
 33266  000134  D7AF               	goto	i2l15272
 33267  000136                     i2l15318:
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;drv_mrf_miwi_mesh_89xa.c: 1428: }
 33271                           ;drv_mrf_miwi_mesh_89xa.c: 1429: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 33272  000136  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33273  000138  0D47               	mullw	71
 33274  00013A  0E1F               	movlw	low (_RxPacket+1)
 33275  00013C  24F3               	addwf	prodl,w,c
 33276  00013E  6ED9               	movwf	fsr2l,c
 33277  000140  0E03               	movlw	high (_RxPacket+1)
 33278  000142  20F4               	addwfc	prodh,w,c
 33279  000144  6EDA               	movwf	fsr2h,c
 33280  000146  C064  FFDF         	movff	HighISR@ackPacket,indf2
 33281                           
 33282                           ;drv_mrf_miwi_mesh_89xa.c: 1430: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 33283  00014A  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33284  00014C  0D47               	mullw	71
 33285  00014E  0E20               	movlw	low (_RxPacket+2)
 33286  000150  24F3               	addwf	prodl,w,c
 33287  000152  6ED9               	movwf	fsr2l,c
 33288  000154  0E03               	movlw	high (_RxPacket+2)
 33289  000156  20F4               	addwfc	prodh,w,c
 33290  000158  6EDA               	movwf	fsr2h,c
 33291  00015A  C065  FFDF         	movff	HighISR@ackPacket+1,indf2
 33292  00015E                     i2l887:
 33293                           
 33294                           ; BSR set to: 0
 33295                           ;drv_mrf_miwi_mesh_89xa.c: 1432: }
 33296                           ;drv_mrf_miwi_mesh_89xa.c: 1434: RxPacket[BankIndex].PayloadLen = PacketLen;
 33297  00015E  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33298  000160  0D47               	mullw	71
 33299  000162  0E5F               	movlw	low (_RxPacket+65)
 33300  000164  24F3               	addwf	prodl,w,c
 33301  000166  6ED9               	movwf	fsr2l,c
 33302  000168  0E03               	movlw	high (_RxPacket+65)
 33303  00016A  20F4               	addwfc	prodh,w,c
 33304  00016C  6EDA               	movwf	fsr2h,c
 33305  00016E  C070  FFDF         	movff	HighISR@PacketLen,indf2
 33306                           
 33307                           ; BSR set to: 0
 33308                           ;drv_mrf_miwi_mesh_89xa.c: 1451: {
 33309                           ;drv_mrf_miwi_mesh_89xa.c: 1452: uint8_t ackInfoIndex = 0xFF;
 33310  000172  696F               	setf	HighISR@ackInfoIndex& (0+255),b
 33311                           
 33312                           ; BSR set to: 0
 33313                           ;drv_mrf_miwi_mesh_89xa.c: 1453: bool PacketForMe=0;
 33314  000174  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 33315                           
 33316                           ;drv_mrf_miwi_mesh_89xa.c: 1454: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 33317  000176  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33318  000178  0D47               	mullw	71
 33319  00017A  0E1F               	movlw	low (_RxPacket+1)
 33320  00017C  24F3               	addwf	prodl,w,c
 33321  00017E  6ED9               	movwf	fsr2l,c
 33322  000180  0E03               	movlw	high (_RxPacket+1)
 33323  000182  20F4               	addwfc	prodh,w,c
 33324  000184  6EDA               	movwf	fsr2h,c
 33325  000186  ACDF               	btfss	indf2,6,c
 33326  000188  D08F               	goto	i2l15374
 33327                           
 33328                           ; BSR set to: 3
 33329                           ;drv_mrf_miwi_mesh_89xa.c: 1455: {
 33330                           ;drv_mrf_miwi_mesh_89xa.c: 1456: uint16_t dstPan;
 33331                           ;drv_mrf_miwi_mesh_89xa.c: 1457: uint8_t *dPan=(uint8_t*)&dstPan;
 33332  00018A  0E68               	movlw	low HighISR@dstPan
 33333  00018C  0100               	movlb	0	; () banked
 33334  00018E  6F60               	movwf	HighISR@dPan& (0+255),b
 33335                           
 33336                           ; BSR set to: 0
 33337                           ;drv_mrf_miwi_mesh_89xa.c: 1458: for(i=0;i<2;i++)
 33338  000190  6B72               	clrf	HighISR@i& (0+255),b
 33339  000192                     i2l15330:
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;drv_mrf_miwi_mesh_89xa.c: 1459: {
 33343                           ;drv_mrf_miwi_mesh_89xa.c: 1460: dPan[i]=RxPacket[BankIndex].Payload[2+i];
 33344  000192  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33345  000194  0D47               	mullw	71
 33346  000196  0E1E               	movlw	low _RxPacket
 33347  000198  6E2C               	movwf	??_HighISR& (0+255),c
 33348  00019A  0E03               	movlw	high _RxPacket
 33349  00019C  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33350  00019E  0E03               	movlw	3
 33351  0001A0  262C               	addwf	??_HighISR,f,c
 33352  0001A2  0E00               	movlw	0
 33353  0001A4  222D               	addwfc	??_HighISR+1,f,c
 33354  0001A6  50F3               	movf	prodl,w,c
 33355  0001A8  262C               	addwf	??_HighISR,f,c
 33356  0001AA  50F4               	movf	prodh,w,c
 33357  0001AC  222D               	addwfc	??_HighISR+1,f,c
 33358  0001AE  5172               	movf	HighISR@i& (0+255),w,b
 33359  0001B0  242C               	addwf	??_HighISR,w,c
 33360  0001B2  6ED9               	movwf	fsr2l,c
 33361  0001B4  0E00               	movlw	0
 33362  0001B6  202D               	addwfc	??_HighISR+1,w,c
 33363  0001B8  6EDA               	movwf	fsr2h,c
 33364  0001BA  5160               	movf	HighISR@dPan& (0+255),w,b
 33365  0001BC  2572               	addwf	HighISR@i& (0+255),w,b
 33366  0001BE  6EE1               	movwf	fsr1l,c
 33367  0001C0  6AE2               	clrf	fsr1h,c
 33368  0001C2  CFDF FFE7          	movff	indf2,indf1
 33369                           
 33370                           ; BSR set to: 0
 33371  0001C6  2B72               	incf	HighISR@i& (0+255),f,b
 33372                           
 33373                           ; BSR set to: 0
 33374  0001C8  0E01               	movlw	1
 33375  0001CA  6572               	cpfsgt	HighISR@i& (0+255),b
 33376  0001CC  D7E2               	goto	i2l15330
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;drv_mrf_miwi_mesh_89xa.c: 1461: }
 33380                           ;drv_mrf_miwi_mesh_89xa.c: 1463: if( (dstPan==0xffff) || (dstPan==myPANID) || (myPANID==
      +                          0xffff) )
 33381  0001CE  2968               	incf	HighISR@dstPan& (0+255),w,b
 33382  0001D0  E102               	bnz	i2u1776_40
 33383  0001D2  2969               	incf	(HighISR@dstPan+1)& (0+255),w,b
 33384  0001D4  E00A               	bz	i2l15342
 33385  0001D6                     i2u1776_40:
 33386                           
 33387                           ; BSR set to: 0
 33388  0001D6  51EB               	movf	_myPANID& (0+255),w,b
 33389  0001D8  1968               	xorwf	HighISR@dstPan& (0+255),w,b
 33390  0001DA  E103               	bnz	i2u1777_40
 33391  0001DC  51EC               	movf	(_myPANID+1)& (0+255),w,b
 33392  0001DE  1969               	xorwf	(HighISR@dstPan+1)& (0+255),w,b
 33393  0001E0  E004               	bz	i2l15342
 33394  0001E2                     i2u1777_40:
 33395                           
 33396                           ; BSR set to: 0
 33397  0001E2  29EB               	incf	_myPANID& (0+255),w,b
 33398  0001E4  E155               	bnz	i2l15368
 33399  0001E6  29EC               	incf	(_myPANID+1)& (0+255),w,b
 33400  0001E8  E153               	bnz	i2l15368
 33401  0001EA                     i2l15342:
 33402                           
 33403                           ; BSR set to: 0
 33404                           ;drv_mrf_miwi_mesh_89xa.c: 1464: {
 33405                           ;drv_mrf_miwi_mesh_89xa.c: 1465: PacketForMe=1;
 33406  0001EA  0E01               	movlw	1
 33407  0001EC  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 33408                           
 33409                           ; BSR set to: 0
 33410                           ;drv_mrf_miwi_mesh_89xa.c: 1466: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 33411  0001EE  6B72               	clrf	HighISR@i& (0+255),b
 33412  0001F0  D020               	goto	i2l15352
 33413  0001F2                     i2l15346:
 33414                           
 33415                           ; BSR set to: 0
 33416                           ;drv_mrf_miwi_mesh_89xa.c: 1467: {
 33417                           ;drv_mrf_miwi_mesh_89xa.c: 1468: if( RxPacket[BankIndex].Payload[4+i] != MACInitParams.P
      +                          Address[i] )
 33418  0001F2  5172               	movf	HighISR@i& (0+255),w,b
 33419  0001F4  2437               	addwf	_MACInitParams+1,w,c
 33420  0001F6  6ED9               	movwf	fsr2l,c
 33421  0001F8  0E00               	movlw	0
 33422  0001FA  2038               	addwfc	_MACInitParams+2,w,c
 33423  0001FC  6EDA               	movwf	fsr2h,c
 33424  0001FE  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33425  000200  0D47               	mullw	71
 33426  000202  0E1E               	movlw	low _RxPacket
 33427  000204  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33428  000206  0E03               	movlw	high _RxPacket
 33429  000208  6E2E               	movwf	(??_HighISR+2)& (0+255),c
 33430  00020A  0E05               	movlw	5
 33431  00020C  262D               	addwf	??_HighISR+1,f,c
 33432  00020E  0E00               	movlw	0
 33433  000210  222E               	addwfc	??_HighISR+2,f,c
 33434  000212  50F3               	movf	prodl,w,c
 33435  000214  262D               	addwf	??_HighISR+1,f,c
 33436  000216  50F4               	movf	prodh,w,c
 33437  000218  222E               	addwfc	??_HighISR+2,f,c
 33438  00021A  5172               	movf	HighISR@i& (0+255),w,b
 33439  00021C  242D               	addwf	??_HighISR+1,w,c
 33440  00021E  6EE1               	movwf	fsr1l,c
 33441  000220  0E00               	movlw	0
 33442  000222  202E               	addwfc	??_HighISR+2,w,c
 33443  000224  6EE2               	movwf	fsr1h,c
 33444  000226  50DE               	movf	postinc2,w,c
 33445  000228  18E6               	xorwf	postinc1,w,c
 33446  00022A  E002               	bz	i2l15350
 33447                           
 33448                           ; BSR set to: 0
 33449                           ;drv_mrf_miwi_mesh_89xa.c: 1469: {
 33450                           ;drv_mrf_miwi_mesh_89xa.c: 1470: PacketForMe=0;
 33451  00022C  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 33452                           
 33453                           ;drv_mrf_miwi_mesh_89xa.c: 1471: break;
 33454  00022E  D009               	goto	i2l15354
 33455  000230                     i2l15350:
 33456                           
 33457                           ; BSR set to: 0
 33458  000230  2B72               	incf	HighISR@i& (0+255),f,b
 33459  000232                     i2l15352:
 33460                           
 33461                           ; BSR set to: 0
 33462  000232  3036               	rrcf	_MACInitParams,w,c
 33463  000234  32E8               	rrcf	wreg,f,c
 33464  000236  32E8               	rrcf	wreg,f,c
 33465  000238  0B0F               	andlw	15
 33466  00023A  6E2C               	movwf	??_HighISR& (0+255),c
 33467  00023C  502C               	movf	??_HighISR,w,c
 33468  00023E  5D72               	subwf	HighISR@i& (0+255),w,b
 33469  000240  E3D8               	bnc	i2l15346
 33470  000242                     i2l15354:
 33471                           
 33472                           ; BSR set to: 0
 33473                           ;drv_mrf_miwi_mesh_89xa.c: 1472: }
 33474                           ;drv_mrf_miwi_mesh_89xa.c: 1473: }
 33475                           ;drv_mrf_miwi_mesh_89xa.c: 1474: if(PacketForMe==0)
 33476  000242  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 33477  000244  E125               	bnz	i2l15368
 33478                           
 33479                           ; BSR set to: 0
 33480                           ;drv_mrf_miwi_mesh_89xa.c: 1475: {
 33481                           ;drv_mrf_miwi_mesh_89xa.c: 1476: PacketForMe=1;
 33482  000246  0E01               	movlw	1
 33483  000248  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 33484                           
 33485                           ; BSR set to: 0
 33486                           ;drv_mrf_miwi_mesh_89xa.c: 1477: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 33487  00024A  6B72               	clrf	HighISR@i& (0+255),b
 33488  00024C  D019               	goto	i2l15366
 33489  00024E                     i2l15360:
 33490                           
 33491                           ; BSR set to: 0
 33492                           ;drv_mrf_miwi_mesh_89xa.c: 1478: {
 33493                           ;drv_mrf_miwi_mesh_89xa.c: 1480: if( RxPacket[BankIndex].Payload[4+i] != 0xff )
 33494  00024E  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33495  000250  0D47               	mullw	71
 33496  000252  0E1E               	movlw	low _RxPacket
 33497  000254  6E2C               	movwf	??_HighISR& (0+255),c
 33498  000256  0E03               	movlw	high _RxPacket
 33499  000258  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33500  00025A  0E05               	movlw	5
 33501  00025C  262C               	addwf	??_HighISR,f,c
 33502  00025E  0E00               	movlw	0
 33503  000260  222D               	addwfc	??_HighISR+1,f,c
 33504  000262  50F3               	movf	prodl,w,c
 33505  000264  262C               	addwf	??_HighISR,f,c
 33506  000266  50F4               	movf	prodh,w,c
 33507  000268  222D               	addwfc	??_HighISR+1,f,c
 33508  00026A  5172               	movf	HighISR@i& (0+255),w,b
 33509  00026C  242C               	addwf	??_HighISR,w,c
 33510  00026E  6ED9               	movwf	fsr2l,c
 33511  000270  0E00               	movlw	0
 33512  000272  202D               	addwfc	??_HighISR+1,w,c
 33513  000274  6EDA               	movwf	fsr2h,c
 33514  000276  28DE               	incf	postinc2,w,c
 33515  000278  E002               	bz	i2l15364
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;drv_mrf_miwi_mesh_89xa.c: 1481: {
 33519                           ;drv_mrf_miwi_mesh_89xa.c: 1482: PacketForMe=0;
 33520  00027A  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 33521                           
 33522                           ;drv_mrf_miwi_mesh_89xa.c: 1483: break;
 33523  00027C  D009               	goto	i2l15368
 33524  00027E                     i2l15364:
 33525                           
 33526                           ; BSR set to: 0
 33527  00027E  2B72               	incf	HighISR@i& (0+255),f,b
 33528  000280                     i2l15366:
 33529                           
 33530                           ; BSR set to: 0
 33531  000280  3036               	rrcf	_MACInitParams,w,c
 33532  000282  32E8               	rrcf	wreg,f,c
 33533  000284  32E8               	rrcf	wreg,f,c
 33534  000286  0B0F               	andlw	15
 33535  000288  6E2C               	movwf	??_HighISR& (0+255),c
 33536  00028A  502C               	movf	??_HighISR,w,c
 33537  00028C  5D72               	subwf	HighISR@i& (0+255),w,b
 33538  00028E  E3DF               	bnc	i2l15360
 33539  000290                     i2l15368:
 33540                           
 33541                           ; BSR set to: 0
 33542                           ;drv_mrf_miwi_mesh_89xa.c: 1484: }
 33543                           ;drv_mrf_miwi_mesh_89xa.c: 1485: }
 33544                           ;drv_mrf_miwi_mesh_89xa.c: 1486: }
 33545                           ;drv_mrf_miwi_mesh_89xa.c: 1487: }
 33546                           ;drv_mrf_miwi_mesh_89xa.c: 1489: if(PacketForMe==0)
 33547  000290  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 33548  000292  E10A               	bnz	i2l15374
 33549                           
 33550                           ; BSR set to: 0
 33551                           ;drv_mrf_miwi_mesh_89xa.c: 1492: RxPacket[BankIndex].PayloadLen = 0;
 33552                           
 33553                           ; BSR set to: 0
 33554  000294  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33555  000296  0D47               	mullw	71
 33556  000298  0E5F               	movlw	low (_RxPacket+65)
 33557  00029A  24F3               	addwf	prodl,w,c
 33558  00029C  6ED9               	movwf	fsr2l,c
 33559  00029E  0E03               	movlw	high (_RxPacket+65)
 33560  0002A0  20F4               	addwfc	prodh,w,c
 33561  0002A2  6EDA               	movwf	fsr2h,c
 33562  0002A4  6ADF               	clrf	indf2,c
 33563                           
 33564                           ;drv_mrf_miwi_mesh_89xa.c: 1493: goto IGNORE_HERE;
 33565  0002A6  D6F6               	goto	i2l15272
 33566  0002A8                     i2l15374:
 33567                           
 33568                           ;drv_mrf_miwi_mesh_89xa.c: 1494: }
 33569                           ;drv_mrf_miwi_mesh_89xa.c: 1495: }
 33570                           ;drv_mrf_miwi_mesh_89xa.c: 1498: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 33571  0002A8  0100               	movlb	0	; () banked
 33572  0002AA  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33573  0002AC  0D47               	mullw	71
 33574  0002AE  0E1F               	movlw	low (_RxPacket+1)
 33575  0002B0  24F3               	addwf	prodl,w,c
 33576  0002B2  6ED9               	movwf	fsr2l,c
 33577  0002B4  0E03               	movlw	high (_RxPacket+1)
 33578  0002B6  20F4               	addwfc	prodh,w,c
 33579  0002B8  6EDA               	movwf	fsr2h,c
 33580  0002BA  AADF               	btfss	indf2,5,c
 33581  0002BC  D037               	goto	i2l908
 33582                           
 33583                           ; BSR set to: 3
 33584                           ;drv_mrf_miwi_mesh_89xa.c: 1499: {
 33585                           ;drv_mrf_miwi_mesh_89xa.c: 1501: for(i = 0; i < 2; i++)
 33586  0002BE  6B72               	clrf	HighISR@i& (0+255),b
 33587  0002C0                     i2l15382:
 33588                           
 33589                           ; BSR set to: 0
 33590                           ;drv_mrf_miwi_mesh_89xa.c: 1502: {
 33591                           ;drv_mrf_miwi_mesh_89xa.c: 1503: ackPacket[i] = MACTxBuffer[i];
 33592  0002C0  0E78               	movlw	low _MACTxBuffer
 33593  0002C2  2572               	addwf	HighISR@i& (0+255),w,b
 33594  0002C4  6ED9               	movwf	fsr2l,c
 33595  0002C6  6ADA               	clrf	fsr2h,c
 33596  0002C8  0E04               	movlw	high _MACTxBuffer
 33597  0002CA  22DA               	addwfc	fsr2h,f,c
 33598  0002CC  5172               	movf	HighISR@i& (0+255),w,b
 33599  0002CE  0F64               	addlw	low HighISR@ackPacket
 33600  0002D0  6EE1               	movwf	fsr1l,c
 33601  0002D2  6AE2               	clrf	fsr1h,c
 33602  0002D4  CFDF FFE7          	movff	indf2,indf1
 33603                           
 33604                           ; BSR set to: 0
 33605  0002D8  2B72               	incf	HighISR@i& (0+255),f,b
 33606                           
 33607                           ; BSR set to: 0
 33608  0002DA  0E01               	movlw	1
 33609  0002DC  6572               	cpfsgt	HighISR@i& (0+255),b
 33610  0002DE  D7F0               	goto	i2l15382
 33611                           
 33612                           ; BSR set to: 0
 33613                           ;drv_mrf_miwi_mesh_89xa.c: 1504: }
 33614                           ;drv_mrf_miwi_mesh_89xa.c: 1505: MACTxBuffer[0] = 0x02 | 0x04;
 33615  0002E0  0E06               	movlw	6
 33616  0002E2  0104               	movlb	4	; () banked
 33617  0002E4  6F78               	movwf	_MACTxBuffer& (0+255),b	;volatile
 33618                           
 33619                           ; BSR set to: 4
 33620                           ;drv_mrf_miwi_mesh_89xa.c: 1506: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 33621  0002E6  0100               	movlb	0	; () banked
 33622  0002E8  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33623  0002EA  0D47               	mullw	71
 33624  0002EC  0E20               	movlw	low (_RxPacket+2)
 33625  0002EE  24F3               	addwf	prodl,w,c
 33626  0002F0  6ED9               	movwf	fsr2l,c
 33627  0002F2  0E03               	movlw	high (_RxPacket+2)
 33628  0002F4  20F4               	addwfc	prodh,w,c
 33629  0002F6  6EDA               	movwf	fsr2h,c
 33630  0002F8  50DF               	movf	indf2,w,c
 33631  0002FA  0104               	movlb	4	; () banked
 33632  0002FC  6F79               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 33633                           
 33634                           ; BSR set to: 4
 33635                           ;drv_mrf_miwi_mesh_89xa.c: 1507: INTCON3bits.INT1IF = 0;
 33636  0002FE  90F0               	bcf	intcon3,0,c	;volatile
 33637                           
 33638                           ; BSR set to: 4
 33639                           ;drv_mrf_miwi_mesh_89xa.c: 1508: TxPacket(2, 0);
 33640  000300  6A15               	clrf	i2TxPacket@CCA,c
 33641  000302  0E02               	movlw	2
 33642  000304  ECE8  F022         	call	i2_TxPacket
 33643                           
 33644                           ;drv_mrf_miwi_mesh_89xa.c: 1511: for(i = 0; i < 2; i++)
 33645  000308  0100               	movlb	0	; () banked
 33646  00030A  6B72               	clrf	HighISR@i& (0+255),b
 33647  00030C                     i2l15402:
 33648                           
 33649                           ; BSR set to: 0
 33650                           ;drv_mrf_miwi_mesh_89xa.c: 1512: {
 33651                           ;drv_mrf_miwi_mesh_89xa.c: 1513: MACTxBuffer[i] = ackPacket[i];
 33652  00030C  5172               	movf	HighISR@i& (0+255),w,b
 33653  00030E  0F64               	addlw	low HighISR@ackPacket
 33654  000310  6ED9               	movwf	fsr2l,c
 33655  000312  6ADA               	clrf	fsr2h,c
 33656  000314  0E78               	movlw	low _MACTxBuffer
 33657  000316  2572               	addwf	HighISR@i& (0+255),w,b
 33658  000318  6EE1               	movwf	fsr1l,c
 33659  00031A  6AE2               	clrf	fsr1h,c
 33660  00031C  0E04               	movlw	high _MACTxBuffer
 33661  00031E  22E2               	addwfc	fsr1h,f,c
 33662  000320  CFDF FFE7          	movff	indf2,indf1
 33663                           
 33664                           ; BSR set to: 0
 33665  000324  2B72               	incf	HighISR@i& (0+255),f,b
 33666                           
 33667                           ; BSR set to: 0
 33668  000326  0E01               	movlw	1
 33669  000328  6572               	cpfsgt	HighISR@i& (0+255),b
 33670  00032A  D7F0               	goto	i2l15402
 33671  00032C                     i2l908:
 33672                           
 33673                           ;drv_mrf_miwi_mesh_89xa.c: 1514: }
 33674                           ;drv_mrf_miwi_mesh_89xa.c: 1515: }
 33675                           ;drv_mrf_miwi_mesh_89xa.c: 1519: for(i = 0; i < 5; i++)
 33676  00032C  0100               	movlb	0	; () banked
 33677  00032E  6B72               	clrf	HighISR@i& (0+255),b
 33678  000330                     i2l15412:
 33679                           
 33680                           ; BSR set to: 0
 33681                           ;drv_mrf_miwi_mesh_89xa.c: 1520: {
 33682                           ;drv_mrf_miwi_mesh_89xa.c: 1521: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[Ban
      +                          kIndex].Payload[1]) )
 33683  000330  5172               	movf	HighISR@i& (0+255),w,b
 33684  000332  0D06               	mullw	6
 33685  000334  0E00               	movlw	low _AckInfo
 33686  000336  24F3               	addwf	prodl,w,c
 33687  000338  6ED9               	movwf	fsr2l,c
 33688  00033A  0E03               	movlw	high _AckInfo
 33689  00033C  20F4               	addwfc	prodh,w,c
 33690  00033E  6EDA               	movwf	fsr2h,c
 33691  000340  50DF               	movf	indf2,w,c
 33692  000342  E026               	bz	i2l15418
 33693                           
 33694                           ; BSR set to: 0
 33695  000344  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33696  000346  0D47               	mullw	71
 33697  000348  0E20               	movlw	low (_RxPacket+2)
 33698  00034A  24F3               	addwf	prodl,w,c
 33699  00034C  6ED9               	movwf	fsr2l,c
 33700  00034E  0E03               	movlw	high (_RxPacket+2)
 33701  000350  20F4               	addwfc	prodh,w,c
 33702  000352  6EDA               	movwf	fsr2h,c
 33703  000354  5172               	movf	HighISR@i& (0+255),w,b
 33704  000356  0D06               	mullw	6
 33705  000358  0E01               	movlw	low (_AckInfo+1)
 33706  00035A  24F3               	addwf	prodl,w,c
 33707  00035C  6EE1               	movwf	fsr1l,c
 33708  00035E  0E03               	movlw	high (_AckInfo+1)
 33709  000360  20F4               	addwfc	prodh,w,c
 33710  000362  6EE2               	movwf	fsr1h,c
 33711  000364  50DE               	movf	postinc2,w,c
 33712  000366  18E6               	xorwf	postinc1,w,c
 33713  000368  E113               	bnz	i2l15418
 33714                           
 33715                           ; BSR set to: 0
 33716                           ;drv_mrf_miwi_mesh_89xa.c: 1522: {
 33717                           ;drv_mrf_miwi_mesh_89xa.c: 1523: AckInfo[i].startTick = MiWi_TickGetMs();
 33718  00036A  EC85  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33719  00036E  5172               	movf	HighISR@i& (0+255),w,b
 33720  000370  0D06               	mullw	6
 33721  000372  0E02               	movlw	low (_AckInfo+2)
 33722  000374  24F3               	addwf	prodl,w,c
 33723  000376  6ED9               	movwf	fsr2l,c
 33724  000378  0E03               	movlw	high (_AckInfo+2)
 33725  00037A  20F4               	addwfc	prodh,w,c
 33726  00037C  6EDA               	movwf	fsr2h,c
 33727  00037E  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 33728  000382  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 33729  000386  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 33730  00038A  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 33731                           
 33732                           ;drv_mrf_miwi_mesh_89xa.c: 1524: break;
 33733  00038E  D012               	goto	i2l15428
 33734  000390                     i2l15418:
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;drv_mrf_miwi_mesh_89xa.c: 1525: }
 33738                           ;drv_mrf_miwi_mesh_89xa.c: 1526: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 33739  000390  296F               	incf	HighISR@ackInfoIndex& (0+255),w,b
 33740  000392  E10C               	bnz	i2l15424
 33741                           
 33742                           ; BSR set to: 0
 33743  000394  5172               	movf	HighISR@i& (0+255),w,b
 33744  000396  0D06               	mullw	6
 33745  000398  0E00               	movlw	low _AckInfo
 33746  00039A  24F3               	addwf	prodl,w,c
 33747  00039C  6ED9               	movwf	fsr2l,c
 33748  00039E  0E03               	movlw	high _AckInfo
 33749  0003A0  20F4               	addwfc	prodh,w,c
 33750  0003A2  6EDA               	movwf	fsr2h,c
 33751  0003A4  50DF               	movf	indf2,w,c
 33752  0003A6  E102               	bnz	i2l15424
 33753                           
 33754                           ; BSR set to: 0
 33755                           ;drv_mrf_miwi_mesh_89xa.c: 1527: {
 33756                           ;drv_mrf_miwi_mesh_89xa.c: 1528: ackInfoIndex = i;
 33757  0003A8  C072  F06F         	movff	HighISR@i,HighISR@ackInfoIndex
 33758  0003AC                     i2l15424:
 33759                           
 33760                           ; BSR set to: 0
 33761  0003AC  2B72               	incf	HighISR@i& (0+255),f,b
 33762                           
 33763                           ; BSR set to: 0
 33764  0003AE  0E04               	movlw	4
 33765  0003B0  6572               	cpfsgt	HighISR@i& (0+255),b
 33766  0003B2  D7BE               	goto	i2l15412
 33767  0003B4                     i2l15428:
 33768                           
 33769                           ; BSR set to: 0
 33770                           ;drv_mrf_miwi_mesh_89xa.c: 1529: }
 33771                           ;drv_mrf_miwi_mesh_89xa.c: 1530: }
 33772                           ;drv_mrf_miwi_mesh_89xa.c: 1532: if( i >= 5 )
 33773  0003B4  0E04               	movlw	4
 33774  0003B6  6572               	cpfsgt	HighISR@i& (0+255),b
 33775  0003B8  D043               	goto	i2l15444
 33776                           
 33777                           ; BSR set to: 0
 33778                           ;drv_mrf_miwi_mesh_89xa.c: 1533: {
 33779                           ;drv_mrf_miwi_mesh_89xa.c: 1534: if( ackInfoIndex < 5 )
 33780  0003BA  0E05               	movlw	5
 33781  0003BC  616F               	cpfslt	HighISR@ackInfoIndex& (0+255),b
 33782  0003BE  D02E               	goto	i2l15438
 33783                           
 33784                           ; BSR set to: 0
 33785                           ;drv_mrf_miwi_mesh_89xa.c: 1535: {
 33786                           ;drv_mrf_miwi_mesh_89xa.c: 1536: AckInfo[ackInfoIndex].Valid = 1;
 33787  0003C0  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33788  0003C2  0D06               	mullw	6
 33789  0003C4  0E00               	movlw	low _AckInfo
 33790  0003C6  24F3               	addwf	prodl,w,c
 33791  0003C8  6ED9               	movwf	fsr2l,c
 33792  0003CA  0E03               	movlw	high _AckInfo
 33793  0003CC  20F4               	addwfc	prodh,w,c
 33794  0003CE  6EDA               	movwf	fsr2h,c
 33795  0003D0  0E01               	movlw	1
 33796  0003D2  6EDF               	movwf	indf2,c
 33797                           
 33798                           ; BSR set to: 0
 33799                           ;drv_mrf_miwi_mesh_89xa.c: 1537: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload
      +                          [1];
 33800  0003D4  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33801  0003D6  0D47               	mullw	71
 33802  0003D8  0E20               	movlw	low (_RxPacket+2)
 33803  0003DA  24F3               	addwf	prodl,w,c
 33804  0003DC  6ED9               	movwf	fsr2l,c
 33805  0003DE  0E03               	movlw	high (_RxPacket+2)
 33806  0003E0  20F4               	addwfc	prodh,w,c
 33807  0003E2  6EDA               	movwf	fsr2h,c
 33808  0003E4  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33809  0003E6  0D06               	mullw	6
 33810  0003E8  0E01               	movlw	low (_AckInfo+1)
 33811  0003EA  24F3               	addwf	prodl,w,c
 33812  0003EC  6EE1               	movwf	fsr1l,c
 33813  0003EE  0E03               	movlw	high (_AckInfo+1)
 33814  0003F0  20F4               	addwfc	prodh,w,c
 33815  0003F2  6EE2               	movwf	fsr1h,c
 33816  0003F4  CFDF FFE7          	movff	indf2,indf1
 33817                           
 33818                           ; BSR set to: 0
 33819                           ;drv_mrf_miwi_mesh_89xa.c: 1538: AckInfo[ackInfoIndex].startTick = MiWi_TickGetMs();
 33820  0003F8  EC85  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33821  0003FC  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33822  0003FE  0D06               	mullw	6
 33823  000400  0E02               	movlw	low (_AckInfo+2)
 33824  000402  24F3               	addwf	prodl,w,c
 33825  000404  6ED9               	movwf	fsr2l,c
 33826  000406  0E03               	movlw	high (_AckInfo+2)
 33827  000408  20F4               	addwfc	prodh,w,c
 33828  00040A  6EDA               	movwf	fsr2h,c
 33829  00040C  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 33830  000410  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 33831  000414  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 33832  000418  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 33833  00041C                     i2l15438:
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;drv_mrf_miwi_mesh_89xa.c: 1539: }
 33837                           ;drv_mrf_miwi_mesh_89xa.c: 1542: RxPacket[BankIndex].flags.bits.Valid = 1;
 33838  00041C  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33839  00041E  0D47               	mullw	71
 33840  000420  0E1E               	movlw	low _RxPacket
 33841  000422  24F3               	addwf	prodl,w,c
 33842  000424  6ED9               	movwf	fsr2l,c
 33843  000426  0E03               	movlw	high _RxPacket
 33844  000428  20F4               	addwfc	prodh,w,c
 33845  00042A  6EDA               	movwf	fsr2h,c
 33846  00042C  0103               	movlb	3	; () banked
 33847  00042E  80DF               	bsf	indf2,0,c
 33848  000430  D007               	goto	i2l15444
 33849  000432                     i2l15440:
 33850                           
 33851                           ; BSR set to: 0
 33852  000432  5161               	movf	HighISR@counter& (0+255),w,b
 33853  000434  1162               	iorwf	(HighISR@counter+1)& (0+255),w,b
 33854  000436  E004               	bz	i2l15444
 33855  000438  D642               	goto	i2l15282
 33856  00043A                     i2l15442:
 33857                           
 33858                           ;drv_mrf_miwi_mesh_89xa.c: 1557: else
 33859                           ;drv_mrf_miwi_mesh_89xa.c: 1558: {
 33860                           ;drv_mrf_miwi_mesh_89xa.c: 1560: IRQ1_Received = 1;
 33861  00043A  0E01               	movlw	1
 33862  00043C  0100               	movlb	0	; () banked
 33863  00043E  6FE9               	movwf	_IRQ1_Received& (0+255),b	;volatile
 33864  000440                     i2l15444:
 33865                           
 33866                           ;drv_mrf_miwi_mesh_89xa.c: 1564: INTCON3bits.INT1IF = 0;
 33867  000440  90F0               	bcf	intcon3,0,c	;volatile
 33868                           
 33869                           ;drv_mrf_miwi_mesh_89xa.c: 1566: __nop();
 33870  000442  F000               	nop	
 33871  000444                     i2l15448:
 33872                           
 33873                           ;drv_mrf_miwi_mesh_89xa.c: 1567: }
 33874                           ;drv_mrf_miwi_mesh_89xa.c: 1587: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1
      +                          ))
 33875  000444  B4F2               	btfsc	intcon,2,c	;volatile
 33876  000446  AAF2               	btfss	intcon,5,c	;volatile
 33877  000448  D018               	goto	i2l15466
 33878                           
 33879                           ;drv_mrf_miwi_mesh_89xa.c: 1588: {
 33880                           ;drv_mrf_miwi_mesh_89xa.c: 1589: uint16_t tmr = TMR0;
 33881  00044A  CFD6 F06C          	movff	4054,HighISR@tmr	;volatile
 33882  00044E  CFD7 F06D          	movff	4055,HighISR@tmr+1	;volatile
 33883                           
 33884                           ;drv_mrf_miwi_mesh_89xa.c: 1590: t1extension++;
 33885  000452  0101               	movlb	1	; () banked
 33886  000454  2BBE               	incf	_t1extension& (0+255),f,b
 33887  000456  0E00               	movlw	0
 33888  000458  23BF               	addwfc	(_t1extension+1)& (0+255),f,b
 33889  00045A  23C0               	addwfc	(_t1extension+2)& (0+255),f,b
 33890  00045C  23C1               	addwfc	(_t1extension+3)& (0+255),f,b
 33891                           
 33892                           ;drv_mrf_miwi_mesh_89xa.c: 1591: tmr += (0xffff - 6000);
 33893  00045E  0100               	movlb	0	; () banked
 33894  000460  0E8F               	movlw	143
 33895  000462  276C               	addwf	HighISR@tmr& (0+255),f,b
 33896  000464  0EE8               	movlw	232
 33897  000466  236D               	addwfc	(HighISR@tmr+1)& (0+255),f,b
 33898                           
 33899                           ; BSR set to: 0
 33900                           ;drv_mrf_miwi_mesh_89xa.c: 1592: TMR0L = tmr;
 33901  000468  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 33902                           
 33903                           ; BSR set to: 0
 33904                           ;drv_mrf_miwi_mesh_89xa.c: 1593: TMR0H = tmr >> 8;
 33905  00046C  C06D  FFD7         	movff	HighISR@tmr+1,4055	;volatile
 33906                           
 33907                           ; BSR set to: 0
 33908                           ;drv_mrf_miwi_mesh_89xa.c: 1594: TMR0L = tmr;
 33909  000470  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;drv_mrf_miwi_mesh_89xa.c: 1595: INTCONbits.TMR0IF = 0;
 33913  000474  94F2               	bcf	intcon,2,c	;volatile
 33914                           
 33915                           ; BSR set to: 0
 33916                           ;drv_mrf_miwi_mesh_89xa.c: 1596: t1fired=1;
 33917  000476  0E01               	movlw	1
 33918  000478  6FEA               	movwf	_t1fired& (0+255),b	;volatile
 33919  00047A                     i2l15466:
 33920                           
 33921                           ;drv_mrf_miwi_mesh_89xa.c: 1597: }
 33922                           ;drv_mrf_miwi_mesh_89xa.c: 1599: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 33923  00047A  B2F2               	btfsc	intcon,1,c	;volatile
 33924  00047C  A8F2               	btfss	intcon,4,c	;volatile
 33925  00047E  D001               	goto	i2l923
 33926                           
 33927                           ;drv_mrf_miwi_mesh_89xa.c: 1600: {
 33928                           ;drv_mrf_miwi_mesh_89xa.c: 1601: INTCONbits.INT0IF = 0;
 33929  000480  92F2               	bcf	intcon,1,c	;volatile
 33930  000482                     i2l923:
 33931  000482  C035  FFF4         	movff	??_HighISR+9,prodh
 33932  000486  C034  FFF3         	movff	??_HighISR+8,prodl
 33933  00048A  C033  FFDA         	movff	??_HighISR+7,fsr2h
 33934  00048E  C032  FFD9         	movff	??_HighISR+6,fsr2l
 33935  000492  C031  FFE2         	movff	??_HighISR+5,fsr1h
 33936  000496  C030  FFE1         	movff	??_HighISR+4,fsr1l
 33937  00049A  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33938  00049C  0011               	retfie		f
 33939  00049E                     __end_of_HighISR:
 33940                           	opt stack 0
 33941                           tblptru	equ	0xFF8
 33942                           tblptrh	equ	0xFF7
 33943                           tblptrl	equ	0xFF6
 33944                           tablat	equ	0xFF5
 33945                           prodh	equ	0xFF4
 33946                           prodl	equ	0xFF3
 33947                           intcon	equ	0xFF2
 33948                           intcon2	equ	0xFF1
 33949                           intcon3	equ	0xFF0
 33950                           indf0	equ	0xFEF
 33951                           postinc0	equ	0xFEE
 33952                           plusw0	equ	0xFEB
 33953                           fsr0h	equ	0xFEA
 33954                           fsr0l	equ	0xFE9
 33955                           wreg	equ	0xFE8
 33956                           indf1	equ	0xFE7
 33957                           postinc1	equ	0xFE6
 33958                           postdec1	equ	0xFE5
 33959                           plusw1	equ	0xFE3
 33960                           fsr1h	equ	0xFE2
 33961                           fsr1l	equ	0xFE1
 33962                           indf2	equ	0xFDF
 33963                           postinc2	equ	0xFDE
 33964                           postdec2	equ	0xFDD
 33965                           plusw2	equ	0xFDB
 33966                           fsr2h	equ	0xFDA
 33967                           fsr2l	equ	0xFD9
 33968                           status	equ	0xFD8
 33969                           
 33970 ;; *************** function i2_TxPacket *****************
 33971 ;; Defined at:
 33972 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 33973 ;; Parameters:    Size  Location     Type
 33974 ;;  TxPacketLen     1    wreg     unsigned char 
 33975 ;;  CCA             1   20[COMRAM] unsigned char 
 33976 ;; Auto vars:     Size  Location     Type
 33977 ;;  TxPacketLen     1   25[COMRAM] unsigned char 
 33978 ;;  TxPacket        4   31[COMRAM] struct MIWI_TICK_t
 33979 ;;  TxPacket        4   27[COMRAM] struct MIWI_TICK_t
 33980 ;;  TxPacket        2   39[COMRAM] unsigned int 
 33981 ;;  TxPacket        2   35[COMRAM] unsigned int 
 33982 ;;  TxPacket        1   42[COMRAM] unsigned char 
 33983 ;;  TxPacket        1   41[COMRAM] unsigned char 
 33984 ;;  TxPacket        1   38[COMRAM] unsigned char 
 33985 ;;  TxPacket        1   37[COMRAM] unsigned char 
 33986 ;;  TxPacket        1   26[COMRAM] unsigned char 
 33987 ;;  TxPacket        1    0        unsigned char 
 33988 ;; Return value:  Size  Location     Type
 33989 ;;                  1    wreg      unsigned char 
 33990 ;; Registers used:
 33991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33992 ;; Tracked objects:
 33993 ;;		On entry : F/4
 33994 ;;		On exit  : 0/0
 33995 ;;		Unchanged: 0/0
 33996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34000 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34001 ;;Total ram usage:       23 bytes
 34002 ;; Hardware stack levels used:    1
 34003 ;; Hardware stack levels required when called:    3
 34004 ;; This function calls:
 34005 ;;		i2_DelayMs
 34006 ;;		i2_MiWi_TickGetMs
 34007 ;;		i2_RegisterRead
 34008 ;;		i2_RegisterSet
 34009 ;;		i2_SetRFMode
 34010 ;;		i2_WriteFIFO
 34011 ;;		i2_krnd
 34012 ;; This function is called by:
 34013 ;;		_HighISR
 34014 ;; This function uses a non-reentrant model
 34015 ;;
 34016                           
 34017                           	psect	text166
 34018  0045D0                     __ptext166:
 34019                           	opt stack 0
 34020  0045D0                     i2_TxPacket:
 34021                           	opt stack 13
 34022                           
 34023                           ;incstack = 0
 34024                           ;i2TxPacket@TxPacketLen stored from wreg
 34025  0045D0  6E1A               	movwf	i2TxPacket@TxPacketLen,c
 34026                           
 34027                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 34028                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 34029                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 34030                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 34031                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 34032                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 34033  0045D2  0E03               	movlw	3
 34034  0045D4  6E26               	movwf	i2TxPacket@reTry,c
 34035                           
 34036                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 34037  0045D6  D095               	goto	i2l15116
 34038  0045D8                     i2l730:
 34039                           
 34040                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 34041                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 34042                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 34043  0045D8  6A27               	clrf	i2TxPacket@allowedTxFailure,c
 34044  0045DA                     i2l731:
 34045                           
 34046                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 34047  0045DA  6A43               	clrf	_hasAck,c	;volatile
 34048                           
 34049                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 34050  0045DC  96F0               	bcf	intcon3,3,c	;volatile
 34051                           
 34052                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 34053  0045DE  0E20               	movlw	32
 34054  0045E0  ECF5  F032         	call	i2_SetRFMode
 34055                           
 34056                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 34057  0045E4  0E1A               	movlw	26
 34058  0045E6  6E04               	movwf	i2RegisterSet@setting+1,c
 34059  0045E8  0EC9               	movlw	201
 34060  0045EA  6E03               	movwf	i2RegisterSet@setting,c
 34061  0045EC  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34062                           
 34063                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 34064  0045F0  501A               	movf	i2TxPacket@TxPacketLen,w,c
 34065  0045F2  ECE0  F039         	call	i2_WriteFIFO
 34066                           
 34067                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 34068  0045F6  6A2B               	clrf	i2TxPacket@i,c
 34069  0045F8  D00A               	goto	i2l15054
 34070  0045FA                     i2l15050:
 34071                           
 34072                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 34073                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 34074  0045FA  0E78               	movlw	low _MACTxBuffer
 34075  0045FC  242B               	addwf	i2TxPacket@i,w,c
 34076  0045FE  6ED9               	movwf	fsr2l,c
 34077  004600  6ADA               	clrf	fsr2h,c
 34078  004602  0E04               	movlw	high _MACTxBuffer
 34079  004604  22DA               	addwfc	fsr2h,f,c
 34080  004606  50DF               	movf	indf2,w,c
 34081  004608  ECE0  F039         	call	i2_WriteFIFO
 34082  00460C  2A2B               	incf	i2TxPacket@i,f,c
 34083  00460E                     i2l15054:
 34084  00460E  501A               	movf	i2TxPacket@TxPacketLen,w,c
 34085  004610  5C2B               	subwf	i2TxPacket@i,w,c
 34086  004612  E3F3               	bnc	i2l15050
 34087                           
 34088                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 34089  004614  5015               	movf	i2TxPacket@CCA,w,c
 34090  004616  E02D               	bz	i2l15084
 34091                           
 34092                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 34093                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 34094  004618  6A2B               	clrf	i2TxPacket@i,c
 34095  00461A                     i2l15060:
 34096  00461A  0E03               	movlw	3
 34097  00461C  642B               	cpfsgt	i2TxPacket@i,c
 34098  00461E  D001               	goto	i2l15064
 34099  004620  D028               	goto	i2l15084
 34100  004622                     i2l15064:
 34101                           
 34102                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 34103                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 34104  004622  0E28               	movlw	40
 34105  004624  EC19  F039         	call	i2_RegisterRead
 34106  004628  6E2A               	movwf	i2TxPacket@rssival,c
 34107                           
 34108                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 34109  00462A  90D8               	bcf	status,0,c
 34110  00462C  322A               	rrcf	i2TxPacket@rssival,f,c
 34111                           
 34112                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 34113  00462E  0E41               	movlw	65
 34114  004630  642A               	cpfsgt	i2TxPacket@rssival,c
 34115  004632  D01F               	goto	i2l15084
 34116                           
 34117                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 34118                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 34119                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 34120                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 34121  004634  EC87  F023         	call	i2_krnd	;wreg free
 34122  004638  0E1F               	movlw	31
 34123  00463A  1601               	andwf	?i2_krnd,f,c
 34124  00463C  6A02               	clrf	?i2_krnd+1,c
 34125  00463E  0E08               	movlw	8
 34126  004640  2401               	addwf	?i2_krnd,w,c
 34127  004642  6E24               	movwf	i2TxPacket@delay,c
 34128  004644  0E00               	movlw	0
 34129  004646  2002               	addwfc	?i2_krnd+1,w,c
 34130  004648  6E25               	movwf	i2TxPacket@delay+1,c
 34131                           
 34132                           ; BSR set to: 1
 34133                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 34134  00464A  6A28               	clrf	i2TxPacket@j,c
 34135  00464C  6A29               	clrf	i2TxPacket@j+1,c
 34136  00464E  D00A               	goto	i2l15078
 34137  004650                     i2l740:
 34138  004650  0004               	clrwdt		;# 
 34139                           
 34140                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 34141  004652  0E01               	movlw	1
 34142  004654  6E09               	movwf	i2DelayMs@ms,c
 34143  004656  6A0A               	clrf	i2DelayMs@ms+1,c
 34144  004658  6A0B               	clrf	i2DelayMs@ms+2,c
 34145  00465A  6A0C               	clrf	i2DelayMs@ms+3,c
 34146  00465C  ECF7  F02E         	call	i2_DelayMs	;wreg free
 34147  004660  4A28               	infsnz	i2TxPacket@j,f,c
 34148  004662  2A29               	incf	i2TxPacket@j+1,f,c
 34149  004664                     i2l15078:
 34150  004664  5024               	movf	i2TxPacket@delay,w,c
 34151  004666  5C28               	subwf	i2TxPacket@j,w,c
 34152  004668  5025               	movf	i2TxPacket@delay+1,w,c
 34153  00466A  5829               	subwfb	i2TxPacket@j+1,w,c
 34154  00466C  E3F1               	bnc	i2l740
 34155  00466E  2A2B               	incf	i2TxPacket@i,f,c
 34156  004670  D7D4               	goto	i2l15060
 34157  004672                     i2l15084:
 34158                           
 34159                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 34160                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 34161                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 34162                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 34163  004672  0E80               	movlw	128
 34164  004674  ECF5  F032         	call	i2_SetRFMode
 34165                           
 34166                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 34167  004678  86F0               	bsf	intcon3,3,c	;volatile
 34168  00467A                     i2l15088:
 34169  00467A  0100               	movlb	0	; () banked
 34170  00467C  51E9               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 34171  00467E  E102               	bnz	i2l747
 34172                           
 34173                           ; BSR set to: 0
 34174  004680  A0F0               	btfss	intcon3,0,c	;volatile
 34175  004682  D7FB               	goto	i2l15088
 34176  004684                     i2l747:
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 34180                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 34181  004684  6BE9               	clrf	_IRQ1_Received& (0+255),b	;volatile
 34182                           
 34183                           ; BSR set to: 0
 34184                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 34185  004686  0E20               	movlw	32
 34186  004688  ECF5  F032         	call	i2_SetRFMode
 34187                           
 34188                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 34189  00468C  0E60               	movlw	96
 34190  00468E  ECF5  F032         	call	i2_SetRFMode
 34191                           
 34192                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 34193  004692  0104               	movlb	4	; () banked
 34194  004694  AB78               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 34195  004696  D00E               	goto	i2l15102
 34196                           
 34197                           ; BSR set to: 4
 34198                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 34199                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 34200  004698  C479  F042         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 34201                           
 34202                           ; BSR set to: 4
 34203                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 34204  00469C  EC85  F038         	call	i2_MiWi_TickGetMs	;wreg free
 34205  0046A0  C00D  F01C         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t1
 34206  0046A4  C00E  F01D         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t1+1
 34207  0046A8  C00F  F01E         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t1+2
 34208  0046AC  C010  F01F         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t1+3
 34209  0046B0                     i2l15100:
 34210                           
 34211                           ; BSR set to: 0
 34212                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 34213                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 34214  0046B0  5043               	movf	_hasAck,w,c	;volatile
 34215  0046B2  E003               	bz	i2l15104
 34216  0046B4                     i2l15102:
 34217                           
 34218                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 34219                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 34220  0046B4  0E01               	movlw	1
 34221  0046B6  6E1B               	movwf	i2TxPacket@status,c
 34222                           
 34223                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 34224  0046B8  0C01               	retlw	1
 34225  0046BA                     i2l15104:
 34226                           
 34227                           ; BSR set to: 0
 34228                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 34229                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 34230  0046BA  EC85  F038         	call	i2_MiWi_TickGetMs	;wreg free
 34231  0046BE  C00D  F020         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t2
 34232  0046C2  C00E  F021         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t2+1
 34233  0046C6  C00F  F022         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t2+2
 34234  0046CA  C010  F023         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t2+3
 34235                           
 34236                           ; BSR set to: 0
 34237                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 34238  0046CE  501C               	movf	i2TxPacket@t1,w,c
 34239  0046D0  5C20               	subwf	i2TxPacket@t2,w,c
 34240  0046D2  6E16               	movwf	??i2_TxPacket& (0+255),c
 34241  0046D4  501D               	movf	i2TxPacket@t1+1,w,c
 34242  0046D6  5821               	subwfb	i2TxPacket@t2+1,w,c
 34243  0046D8  6E17               	movwf	(??i2_TxPacket+1)& (0+255),c
 34244  0046DA  501E               	movf	i2TxPacket@t1+2,w,c
 34245  0046DC  5822               	subwfb	i2TxPacket@t2+2,w,c
 34246  0046DE  6E18               	movwf	(??i2_TxPacket+2)& (0+255),c
 34247  0046E0  501F               	movf	i2TxPacket@t1+3,w,c
 34248  0046E2  5823               	subwfb	i2TxPacket@t2+3,w,c
 34249  0046E4  6E19               	movwf	(??i2_TxPacket+3)& (0+255),c
 34250  0046E6  5019               	movf	??i2_TxPacket+3,w,c
 34251  0046E8  1018               	iorwf	??i2_TxPacket+2,w,c
 34252  0046EA  1017               	iorwf	??i2_TxPacket+1,w,c
 34253  0046EC  E103               	bnz	i2u1744_40
 34254  0046EE  0E33               	movlw	51
 34255  0046F0  5C16               	subwf	??i2_TxPacket,w,c
 34256  0046F2  E3DE               	bnc	i2l15100
 34257  0046F4                     i2u1744_40:
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 34261                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 34262                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 34263  0046F4  2A27               	incf	i2TxPacket@allowedTxFailure,f,c
 34264  0046F6  0427               	decf	i2TxPacket@allowedTxFailure,w,c
 34265  0046F8  6E16               	movwf	??i2_TxPacket& (0+255),c
 34266  0046FA  0E04               	movlw	4
 34267  0046FC  6016               	cpfslt	??i2_TxPacket,c
 34268  0046FE  D001               	goto	i2l15116
 34269  004700  D76C               	goto	i2l731
 34270  004702                     i2l15116:
 34271  004702  0626               	decf	i2TxPacket@reTry,f,c
 34272  004704  2826               	incf	i2TxPacket@reTry,w,c
 34273  004706  E001 D767          	bnz	i2l730
 34274                           
 34275                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 34276                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 34277                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 34278  00470A  6A1B               	clrf	i2TxPacket@status,c
 34279  00470C  0012               	return		;funcret
 34280  00470E                     __end_ofi2_TxPacket:
 34281                           	opt stack 0
 34282                           tblptru	equ	0xFF8
 34283                           tblptrh	equ	0xFF7
 34284                           tblptrl	equ	0xFF6
 34285                           tablat	equ	0xFF5
 34286                           prodh	equ	0xFF4
 34287                           prodl	equ	0xFF3
 34288                           intcon	equ	0xFF2
 34289                           intcon2	equ	0xFF1
 34290                           intcon3	equ	0xFF0
 34291                           indf0	equ	0xFEF
 34292                           postinc0	equ	0xFEE
 34293                           plusw0	equ	0xFEB
 34294                           fsr0h	equ	0xFEA
 34295                           fsr0l	equ	0xFE9
 34296                           wreg	equ	0xFE8
 34297                           indf1	equ	0xFE7
 34298                           postinc1	equ	0xFE6
 34299                           postdec1	equ	0xFE5
 34300                           plusw1	equ	0xFE3
 34301                           fsr1h	equ	0xFE2
 34302                           fsr1l	equ	0xFE1
 34303                           indf2	equ	0xFDF
 34304                           postinc2	equ	0xFDE
 34305                           postdec2	equ	0xFDD
 34306                           plusw2	equ	0xFDB
 34307                           fsr2h	equ	0xFDA
 34308                           fsr2l	equ	0xFD9
 34309                           status	equ	0xFD8
 34310                           
 34311 ;; *************** function i2_krnd *****************
 34312 ;; Defined at:
 34313 ;;		line 16 in file "../krnd.c"
 34314 ;; Parameters:    Size  Location     Type
 34315 ;;		None
 34316 ;; Auto vars:     Size  Location     Type
 34317 ;;  krnd            4    8[COMRAM] long 
 34318 ;; Return value:  Size  Location     Type
 34319 ;;                  4    0[COMRAM] unsigned long 
 34320 ;; Registers used:
 34321 ;;		wreg, status,2, status,0
 34322 ;; Tracked objects:
 34323 ;;		On entry : 0/4
 34324 ;;		On exit  : F/1
 34325 ;;		Unchanged: 0/0
 34326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;Total ram usage:       12 bytes
 34332 ;; Hardware stack levels used:    1
 34333 ;; This function calls:
 34334 ;;		Nothing
 34335 ;; This function is called by:
 34336 ;;		i2_TxPacket
 34337 ;; This function uses a non-reentrant model
 34338 ;;
 34339                           
 34340                           	psect	text167
 34341  00470E                     __ptext167:
 34342                           	opt stack 0
 34343  00470E                     i2_krnd:
 34344                           	opt stack 15
 34345                           
 34346                           ;krnd.c: 18: int32_t t;
 34347                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 34348                           
 34349                           ;incstack = 0
 34350  00470E  C04B  F005         	movff	_y,??i2_krnd
 34351  004712  C04C  F006         	movff	_y+1,??i2_krnd+1
 34352  004716  C04D  F007         	movff	_y+2,??i2_krnd+2
 34353  00471A  C04E  F008         	movff	_y+3,??i2_krnd+3
 34354  00471E  0E05               	movlw	5
 34355  004720                     i2u1657_45:
 34356  004720  90D8               	bcf	status,0,c
 34357  004722  3605               	rlcf	??i2_krnd,f,c
 34358  004724  3606               	rlcf	??i2_krnd+1,f,c
 34359  004726  3607               	rlcf	??i2_krnd+2,f,c
 34360  004728  3608               	rlcf	??i2_krnd+3,f,c
 34361  00472A  2EE8               	decfsz	wreg,f,c
 34362  00472C  D7F9               	goto	i2u1657_45
 34363  00472E  5005               	movf	??i2_krnd,w,c
 34364  004730  1A4B               	xorwf	_y,f,c
 34365  004732  5006               	movf	??i2_krnd+1,w,c
 34366  004734  1A4C               	xorwf	_y+1,f,c
 34367  004736  5007               	movf	??i2_krnd+2,w,c
 34368  004738  1A4D               	xorwf	_y+2,f,c
 34369  00473A  5008               	movf	??i2_krnd+3,w,c
 34370  00473C  1A4E               	xorwf	_y+3,f,c
 34371  00473E  C04B  F005         	movff	_y,??i2_krnd
 34372  004742  C04C  F006         	movff	_y+1,??i2_krnd+1
 34373  004746  C04D  F007         	movff	_y+2,??i2_krnd+2
 34374  00474A  C04E  F008         	movff	_y+3,??i2_krnd+3
 34375  00474E  0E08               	movlw	8
 34376  004750  D005               	goto	i2u1658_40
 34377  004752                     i2u1658_45:
 34378  004752  90D8               	bcf	status,0,c
 34379  004754  3208               	rrcf	??i2_krnd+3,f,c
 34380  004756  3207               	rrcf	??i2_krnd+2,f,c
 34381  004758  3206               	rrcf	??i2_krnd+1,f,c
 34382  00475A  3205               	rrcf	??i2_krnd,f,c
 34383  00475C                     i2u1658_40:
 34384  00475C  2EE8               	decfsz	wreg,f,c
 34385  00475E  D7F9               	goto	i2u1658_45
 34386  004760  5005               	movf	??i2_krnd,w,c
 34387  004762  1A4B               	xorwf	_y,f,c
 34388  004764  5006               	movf	??i2_krnd+1,w,c
 34389  004766  1A4C               	xorwf	_y+1,f,c
 34390  004768  5007               	movf	??i2_krnd+2,w,c
 34391  00476A  1A4D               	xorwf	_y+2,f,c
 34392  00476C  5008               	movf	??i2_krnd+3,w,c
 34393  00476E  1A4E               	xorwf	_y+3,f,c
 34394  004770  C04B  F005         	movff	_y,??i2_krnd
 34395  004774  C04C  F006         	movff	_y+1,??i2_krnd+1
 34396  004778  C04D  F007         	movff	_y+2,??i2_krnd+2
 34397  00477C  C04E  F008         	movff	_y+3,??i2_krnd+3
 34398  004780  0E16               	movlw	22
 34399  004782                     i2u1659_45:
 34400  004782  90D8               	bcf	status,0,c
 34401  004784  3605               	rlcf	??i2_krnd,f,c
 34402  004786  3606               	rlcf	??i2_krnd+1,f,c
 34403  004788  3607               	rlcf	??i2_krnd+2,f,c
 34404  00478A  3608               	rlcf	??i2_krnd+3,f,c
 34405  00478C  2EE8               	decfsz	wreg,f,c
 34406  00478E  D7F9               	goto	i2u1659_45
 34407  004790  5005               	movf	??i2_krnd,w,c
 34408  004792  1A4B               	xorwf	_y,f,c
 34409  004794  5006               	movf	??i2_krnd+1,w,c
 34410  004796  1A4C               	xorwf	_y+1,f,c
 34411  004798  5007               	movf	??i2_krnd+2,w,c
 34412  00479A  1A4D               	xorwf	_y+2,f,c
 34413  00479C  5008               	movf	??i2_krnd+3,w,c
 34414  00479E  1A4E               	xorwf	_y+3,f,c
 34415                           
 34416                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 34417  0047A0  5047               	movf	_w,w,c
 34418  0047A2  0101               	movlb	1	; () banked
 34419  0047A4  25F0               	addwf	_z& (0+255),w,b
 34420  0047A6  6E05               	movwf	??i2_krnd& (0+255),c
 34421  0047A8  5048               	movf	_w+1,w,c
 34422  0047AA  21F1               	addwfc	(_z+1)& (0+255),w,b
 34423  0047AC  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 34424  0047AE  5049               	movf	_w+2,w,c
 34425  0047B0  21F2               	addwfc	(_z+2)& (0+255),w,b
 34426  0047B2  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 34427  0047B4  504A               	movf	_w+3,w,c
 34428  0047B6  21F3               	addwfc	(_z+3)& (0+255),w,b
 34429  0047B8  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 34430  0047BA  51AE               	movf	_c& (0+255),w,b
 34431  0047BC  2405               	addwf	??i2_krnd,w,c
 34432  0047BE  6E09               	movwf	i2krnd@t,c
 34433  0047C0  51AF               	movf	(_c+1)& (0+255),w,b
 34434  0047C2  2006               	addwfc	??i2_krnd+1,w,c
 34435  0047C4  6E0A               	movwf	i2krnd@t+1,c
 34436  0047C6  51B0               	movf	(_c+2)& (0+255),w,b
 34437  0047C8  2007               	addwfc	??i2_krnd+2,w,c
 34438  0047CA  6E0B               	movwf	i2krnd@t+2,c
 34439  0047CC  51B1               	movf	(_c+3)& (0+255),w,b
 34440  0047CE  2008               	addwfc	??i2_krnd+3,w,c
 34441  0047D0  6E0C               	movwf	i2krnd@t+3,c
 34442                           
 34443                           ; BSR set to: 1
 34444  0047D2  C047  F1F0         	movff	_w,_z
 34445  0047D6  C048  F1F1         	movff	_w+1,_z+1
 34446  0047DA  C049  F1F2         	movff	_w+2,_z+2
 34447  0047DE  C04A  F1F3         	movff	_w+3,_z+3
 34448  0047E2  0E01               	movlw	1
 34449  0047E4  AE0C               	btfss	i2krnd@t+3,7,c
 34450  0047E6  0E00               	movlw	0
 34451  0047E8  6FAE               	movwf	_c& (0+255),b
 34452  0047EA  6BAF               	clrf	(_c+1)& (0+255),b
 34453  0047EC  6BB0               	clrf	(_c+2)& (0+255),b
 34454  0047EE  6BB1               	clrf	(_c+3)& (0+255),b
 34455  0047F0  0E3A               	movlw	58
 34456  0047F2  1409               	andwf	i2krnd@t,w,c
 34457  0047F4  6E47               	movwf	_w,c
 34458  0047F6  0E37               	movlw	55
 34459  0047F8  140A               	andwf	i2krnd@t+1,w,c
 34460  0047FA  6E48               	movwf	_w+1,c
 34461  0047FC  0EDE               	movlw	222
 34462  0047FE  140B               	andwf	i2krnd@t+2,w,c
 34463  004800  6E49               	movwf	_w+2,c
 34464  004802  0E54               	movlw	84
 34465  004804  140C               	andwf	i2krnd@t+3,w,c
 34466  004806  6E4A               	movwf	_w+3,c
 34467                           
 34468                           ;krnd.c: 24: x += 1832334820;
 34469  004808  0EE4               	movlw	228
 34470  00480A  27EC               	addwf	_x& (0+255),f,b
 34471  00480C  0E35               	movlw	53
 34472  00480E  23ED               	addwfc	(_x+1)& (0+255),f,b
 34473  004810  0E37               	movlw	55
 34474  004812  23EE               	addwfc	(_x+2)& (0+255),f,b
 34475  004814  0E6D               	movlw	109
 34476  004816  23EF               	addwfc	(_x+3)& (0+255),f,b
 34477                           
 34478                           ;krnd.c: 26: return x + y + w;
 34479  004818  504B               	movf	_y,w,c
 34480  00481A  25EC               	addwf	_x& (0+255),w,b
 34481  00481C  6E05               	movwf	??i2_krnd& (0+255),c
 34482  00481E  504C               	movf	_y+1,w,c
 34483  004820  21ED               	addwfc	(_x+1)& (0+255),w,b
 34484  004822  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 34485  004824  504D               	movf	_y+2,w,c
 34486  004826  21EE               	addwfc	(_x+2)& (0+255),w,b
 34487  004828  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 34488  00482A  504E               	movf	_y+3,w,c
 34489  00482C  21EF               	addwfc	(_x+3)& (0+255),w,b
 34490  00482E  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 34491  004830  5047               	movf	_w,w,c
 34492  004832  2405               	addwf	??i2_krnd,w,c
 34493  004834  6E01               	movwf	?i2_krnd,c
 34494  004836  5048               	movf	_w+1,w,c
 34495  004838  2006               	addwfc	??i2_krnd+1,w,c
 34496  00483A  6E02               	movwf	?i2_krnd+1,c
 34497  00483C  5049               	movf	_w+2,w,c
 34498  00483E  2007               	addwfc	??i2_krnd+2,w,c
 34499  004840  6E03               	movwf	?i2_krnd+2,c
 34500  004842  504A               	movf	_w+3,w,c
 34501  004844  2008               	addwfc	??i2_krnd+3,w,c
 34502  004846  6E04               	movwf	?i2_krnd+3,c
 34503                           
 34504                           ; BSR set to: 1
 34505  004848  0012               	return		;funcret
 34506  00484A                     __end_ofi2_krnd:
 34507                           	opt stack 0
 34508                           tblptru	equ	0xFF8
 34509                           tblptrh	equ	0xFF7
 34510                           tblptrl	equ	0xFF6
 34511                           tablat	equ	0xFF5
 34512                           prodh	equ	0xFF4
 34513                           prodl	equ	0xFF3
 34514                           intcon	equ	0xFF2
 34515                           intcon2	equ	0xFF1
 34516                           intcon3	equ	0xFF0
 34517                           indf0	equ	0xFEF
 34518                           postinc0	equ	0xFEE
 34519                           plusw0	equ	0xFEB
 34520                           fsr0h	equ	0xFEA
 34521                           fsr0l	equ	0xFE9
 34522                           wreg	equ	0xFE8
 34523                           indf1	equ	0xFE7
 34524                           postinc1	equ	0xFE6
 34525                           postdec1	equ	0xFE5
 34526                           plusw1	equ	0xFE3
 34527                           fsr1h	equ	0xFE2
 34528                           fsr1l	equ	0xFE1
 34529                           indf2	equ	0xFDF
 34530                           postinc2	equ	0xFDE
 34531                           postdec2	equ	0xFDD
 34532                           plusw2	equ	0xFDB
 34533                           fsr2h	equ	0xFDA
 34534                           fsr2l	equ	0xFD9
 34535                           status	equ	0xFD8
 34536                           
 34537 ;; *************** function i2_WriteFIFO *****************
 34538 ;; Defined at:
 34539 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34540 ;; Parameters:    Size  Location     Type
 34541 ;;  Data            1    wreg     unsigned char 
 34542 ;; Auto vars:     Size  Location     Type
 34543 ;;  Data            1    2[COMRAM] unsigned char 
 34544 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 34545 ;; Return value:  Size  Location     Type
 34546 ;;                  1    wreg      void 
 34547 ;; Registers used:
 34548 ;;		wreg, status,2, cstack
 34549 ;; Tracked objects:
 34550 ;;		On entry : 0/4
 34551 ;;		On exit  : 0/0
 34552 ;;		Unchanged: 0/0
 34553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34558 ;;Total ram usage:        2 bytes
 34559 ;; Hardware stack levels used:    1
 34560 ;; Hardware stack levels required when called:    1
 34561 ;; This function calls:
 34562 ;;		i2_SPIPut
 34563 ;; This function is called by:
 34564 ;;		i2_TxPacket
 34565 ;; This function uses a non-reentrant model
 34566 ;;
 34567                           
 34568                           	psect	text168
 34569  0073C0                     __ptext168:
 34570                           	opt stack 0
 34571  0073C0                     i2_WriteFIFO:
 34572                           	opt stack 14
 34573                           
 34574                           ; BSR set to: 1
 34575                           ;incstack = 0
 34576                           ;i2WriteFIFO@Data stored from wreg
 34577  0073C0  6E03               	movwf	i2WriteFIFO@Data,c
 34578                           
 34579                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 34580  0073C2  0E00               	movlw	0
 34581  0073C4  B6F0               	btfsc	intcon3,3,c	;volatile
 34582  0073C6  0E01               	movlw	1
 34583  0073C8  6E04               	movwf	i2WriteFIFO@IRQ1select,c
 34584                           
 34585                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 34586  0073CA  96F0               	bcf	intcon3,3,c	;volatile
 34587                           
 34588                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 34589  0073CC  9A89               	bcf	3977,5,c	;volatile
 34590                           
 34591                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 34592  0073CE  5003               	movf	i2WriteFIFO@Data,w,c
 34593  0073D0  EC9F  F03A         	call	i2_SPIPut
 34594                           
 34595                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 34596  0073D4  8A89               	bsf	3977,5,c	;volatile
 34597                           
 34598                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 34599  0073D6  B004               	btfsc	i2WriteFIFO@IRQ1select,0,c
 34600  0073D8  D002               	bra	i2u1656_45
 34601  0073DA  96F0               	bcf	intcon3,3,c	;volatile
 34602  0073DC  D001               	bra	i2u1656_46
 34603  0073DE                     i2u1656_45:
 34604  0073DE  86F0               	bsf	intcon3,3,c	;volatile
 34605  0073E0                     i2u1656_46:
 34606  0073E0  0012               	return		;funcret
 34607  0073E2                     __end_ofi2_WriteFIFO:
 34608                           	opt stack 0
 34609                           tblptru	equ	0xFF8
 34610                           tblptrh	equ	0xFF7
 34611                           tblptrl	equ	0xFF6
 34612                           tablat	equ	0xFF5
 34613                           prodh	equ	0xFF4
 34614                           prodl	equ	0xFF3
 34615                           intcon	equ	0xFF2
 34616                           intcon2	equ	0xFF1
 34617                           intcon3	equ	0xFF0
 34618                           indf0	equ	0xFEF
 34619                           postinc0	equ	0xFEE
 34620                           plusw0	equ	0xFEB
 34621                           fsr0h	equ	0xFEA
 34622                           fsr0l	equ	0xFE9
 34623                           wreg	equ	0xFE8
 34624                           indf1	equ	0xFE7
 34625                           postinc1	equ	0xFE6
 34626                           postdec1	equ	0xFE5
 34627                           plusw1	equ	0xFE3
 34628                           fsr1h	equ	0xFE2
 34629                           fsr1l	equ	0xFE1
 34630                           indf2	equ	0xFDF
 34631                           postinc2	equ	0xFDE
 34632                           postdec2	equ	0xFDD
 34633                           plusw2	equ	0xFDB
 34634                           fsr2h	equ	0xFDA
 34635                           fsr2l	equ	0xFD9
 34636                           status	equ	0xFD8
 34637                           
 34638 ;; *************** function i2_SetRFMode *****************
 34639 ;; Defined at:
 34640 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34641 ;; Parameters:    Size  Location     Type
 34642 ;;  mode            1    wreg     unsigned char 
 34643 ;; Auto vars:     Size  Location     Type
 34644 ;;  mode            1    5[COMRAM] unsigned char 
 34645 ;; Return value:  Size  Location     Type
 34646 ;;                  1    wreg      void 
 34647 ;; Registers used:
 34648 ;;		wreg, status,2, status,0, cstack
 34649 ;; Tracked objects:
 34650 ;;		On entry : 0/4
 34651 ;;		On exit  : 0/0
 34652 ;;		Unchanged: 0/0
 34653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34658 ;;Total ram usage:        1 bytes
 34659 ;; Hardware stack levels used:    1
 34660 ;; Hardware stack levels required when called:    2
 34661 ;; This function calls:
 34662 ;;		i2_RegisterSet
 34663 ;; This function is called by:
 34664 ;;		i2_TxPacket
 34665 ;; This function uses a non-reentrant model
 34666 ;;
 34667                           
 34668                           	psect	text169
 34669  0065EA                     __ptext169:
 34670                           	opt stack 0
 34671  0065EA                     i2_SetRFMode:
 34672                           	opt stack 13
 34673                           
 34674                           ;incstack = 0
 34675                           ;i2SetRFMode@mode stored from wreg
 34676  0065EA  6E06               	movwf	i2SetRFMode@mode,c
 34677                           
 34678                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 34679  0065EC  D027               	goto	i2l14442
 34680  0065EE                     i2l14420:
 34681                           
 34682                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 34683  0065EE  6A04               	clrf	i2RegisterSet@setting+1,c
 34684  0065F0  0E8E               	movlw	142
 34685  0065F2  6E03               	movwf	i2RegisterSet@setting,c
 34686  0065F4  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34687                           
 34688                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 34689  0065F8  0E80               	movlw	128
 34690  0065FA  6E3E               	movwf	_RF_Mode,c
 34691                           
 34692                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 34693  0065FC  0C80               	retlw	128
 34694  0065FE                     i2l14424:
 34695                           
 34696                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 34697  0065FE  6A04               	clrf	i2RegisterSet@setting+1,c
 34698  006600  0E6E               	movlw	110
 34699  006602  6E03               	movwf	i2RegisterSet@setting,c
 34700  006604  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34701                           
 34702                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 34703  006608  0E60               	movlw	96
 34704  00660A  6E3E               	movwf	_RF_Mode,c
 34705                           
 34706                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 34707  00660C  0C60               	retlw	96
 34708  00660E                     i2l14428:
 34709                           
 34710                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 34711  00660E  6A04               	clrf	i2RegisterSet@setting+1,c
 34712  006610  0E4E               	movlw	78
 34713  006612  6E03               	movwf	i2RegisterSet@setting,c
 34714  006614  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34715                           
 34716                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 34717  006618  0E40               	movlw	64
 34718  00661A  6E3E               	movwf	_RF_Mode,c
 34719                           
 34720                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 34721  00661C  0C40               	retlw	64
 34722  00661E                     i2l14432:
 34723                           
 34724                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 34725  00661E  6A04               	clrf	i2RegisterSet@setting+1,c
 34726  006620  0E2E               	movlw	46
 34727  006622  6E03               	movwf	i2RegisterSet@setting,c
 34728  006624  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34729                           
 34730                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 34731  006628  0E20               	movlw	32
 34732  00662A  6E3E               	movwf	_RF_Mode,c
 34733                           
 34734                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 34735  00662C  0C20               	retlw	32
 34736  00662E                     i2l14436:
 34737                           
 34738                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 34739  00662E  6A04               	clrf	i2RegisterSet@setting+1,c
 34740  006630  0E0E               	movlw	14
 34741  006632  6E03               	movwf	i2RegisterSet@setting,c
 34742  006634  ECCD  F039         	call	i2_RegisterSet	;wreg free
 34743                           
 34744                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 34745  006638  6A3E               	clrf	_RF_Mode,c
 34746                           
 34747                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 34748  00663A  0012               	return	
 34749  00663C                     i2l14442:
 34750  00663C  5006               	movf	i2SetRFMode@mode,w,c
 34751                           
 34752                           ; Switch size 1, requested type "speed"
 34753                           ; Number of cases is 5, Range of values is 0 to 128
 34754                           ; switch strategies available:
 34755                           ; Name         Instructions Cycles
 34756                           ; simple_byte           16     9 (average)
 34757                           ;	Chosen strategy is simple_byte
 34758  00663E  E0F7               	bz	i2l14436
 34759  006640  0A20               	xorlw	32	; case 32
 34760  006642  E0ED               	bz	i2l14432
 34761  006644  0A60               	xorlw	96	; case 64
 34762  006646  E0E3               	bz	i2l14428
 34763  006648  0A20               	xorlw	32	; case 96
 34764  00664A  E0D9               	bz	i2l14424
 34765  00664C  0AE0               	xorlw	224	; case 128
 34766  00664E  E0CF               	bz	i2l14420
 34767  006650  0012               	return		;funcret
 34768  006652                     __end_ofi2_SetRFMode:
 34769                           	opt stack 0
 34770                           tblptru	equ	0xFF8
 34771                           tblptrh	equ	0xFF7
 34772                           tblptrl	equ	0xFF6
 34773                           tablat	equ	0xFF5
 34774                           prodh	equ	0xFF4
 34775                           prodl	equ	0xFF3
 34776                           intcon	equ	0xFF2
 34777                           intcon2	equ	0xFF1
 34778                           intcon3	equ	0xFF0
 34779                           indf0	equ	0xFEF
 34780                           postinc0	equ	0xFEE
 34781                           plusw0	equ	0xFEB
 34782                           fsr0h	equ	0xFEA
 34783                           fsr0l	equ	0xFE9
 34784                           wreg	equ	0xFE8
 34785                           indf1	equ	0xFE7
 34786                           postinc1	equ	0xFE6
 34787                           postdec1	equ	0xFE5
 34788                           plusw1	equ	0xFE3
 34789                           fsr1h	equ	0xFE2
 34790                           fsr1l	equ	0xFE1
 34791                           indf2	equ	0xFDF
 34792                           postinc2	equ	0xFDE
 34793                           postdec2	equ	0xFDD
 34794                           plusw2	equ	0xFDB
 34795                           fsr2h	equ	0xFDA
 34796                           fsr2l	equ	0xFD9
 34797                           status	equ	0xFD8
 34798                           
 34799 ;; *************** function i2_RegisterSet *****************
 34800 ;; Defined at:
 34801 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34802 ;; Parameters:    Size  Location     Type
 34803 ;;  setting         2    2[COMRAM] unsigned int 
 34804 ;; Auto vars:     Size  Location     Type
 34805 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 34806 ;; Return value:  Size  Location     Type
 34807 ;;                  1    wreg      void 
 34808 ;; Registers used:
 34809 ;;		wreg, status,2, cstack
 34810 ;; Tracked objects:
 34811 ;;		On entry : 0/4
 34812 ;;		On exit  : 0/0
 34813 ;;		Unchanged: 0/0
 34814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34819 ;;Total ram usage:        3 bytes
 34820 ;; Hardware stack levels used:    1
 34821 ;; Hardware stack levels required when called:    1
 34822 ;; This function calls:
 34823 ;;		i2_SPIPut
 34824 ;; This function is called by:
 34825 ;;		i2_TxPacket
 34826 ;;		i2_SetRFMode
 34827 ;; This function uses a non-reentrant model
 34828 ;;
 34829                           
 34830                           	psect	text170
 34831  00739A                     __ptext170:
 34832                           	opt stack 0
 34833  00739A                     i2_RegisterSet:
 34834                           	opt stack 13
 34835                           
 34836                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 34837                           
 34838                           ;incstack = 0
 34839  00739A  0E00               	movlw	0
 34840  00739C  B6F0               	btfsc	intcon3,3,c	;volatile
 34841  00739E  0E01               	movlw	1
 34842  0073A0  6E05               	movwf	i2RegisterSet@IRQ1select,c
 34843                           
 34844                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 34845  0073A2  96F0               	bcf	intcon3,3,c	;volatile
 34846                           
 34847                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 34848  0073A4  928C               	bcf	3980,1,c	;volatile
 34849                           
 34850                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 34851                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 34852  0073A6  5004               	movf	i2RegisterSet@setting+1,w,c
 34853  0073A8  EC9F  F03A         	call	i2_SPIPut
 34854                           
 34855                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 34856  0073AC  5003               	movf	i2RegisterSet@setting,w,c
 34857  0073AE  EC9F  F03A         	call	i2_SPIPut
 34858                           
 34859                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 34860  0073B2  828C               	bsf	3980,1,c	;volatile
 34861                           
 34862                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 34863  0073B4  B005               	btfsc	i2RegisterSet@IRQ1select,0,c
 34864  0073B6  D002               	bra	i2u1638_45
 34865  0073B8  96F0               	bcf	intcon3,3,c	;volatile
 34866  0073BA  D001               	bra	i2u1638_46
 34867  0073BC                     i2u1638_45:
 34868  0073BC  86F0               	bsf	intcon3,3,c	;volatile
 34869  0073BE                     i2u1638_46:
 34870  0073BE  0012               	return		;funcret
 34871  0073C0                     __end_ofi2_RegisterSet:
 34872                           	opt stack 0
 34873                           tblptru	equ	0xFF8
 34874                           tblptrh	equ	0xFF7
 34875                           tblptrl	equ	0xFF6
 34876                           tablat	equ	0xFF5
 34877                           prodh	equ	0xFF4
 34878                           prodl	equ	0xFF3
 34879                           intcon	equ	0xFF2
 34880                           intcon2	equ	0xFF1
 34881                           intcon3	equ	0xFF0
 34882                           indf0	equ	0xFEF
 34883                           postinc0	equ	0xFEE
 34884                           plusw0	equ	0xFEB
 34885                           fsr0h	equ	0xFEA
 34886                           fsr0l	equ	0xFE9
 34887                           wreg	equ	0xFE8
 34888                           indf1	equ	0xFE7
 34889                           postinc1	equ	0xFE6
 34890                           postdec1	equ	0xFE5
 34891                           plusw1	equ	0xFE3
 34892                           fsr1h	equ	0xFE2
 34893                           fsr1l	equ	0xFE1
 34894                           indf2	equ	0xFDF
 34895                           postinc2	equ	0xFDE
 34896                           postdec2	equ	0xFDD
 34897                           plusw2	equ	0xFDB
 34898                           fsr2h	equ	0xFDA
 34899                           fsr2l	equ	0xFD9
 34900                           status	equ	0xFD8
 34901                           
 34902 ;; *************** function i2_RegisterRead *****************
 34903 ;; Defined at:
 34904 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34905 ;; Parameters:    Size  Location     Type
 34906 ;;  address         1    wreg     unsigned char 
 34907 ;; Auto vars:     Size  Location     Type
 34908 ;;  address         1    2[COMRAM] unsigned char 
 34909 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 34910 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 34911 ;; Return value:  Size  Location     Type
 34912 ;;                  1    wreg      unsigned char 
 34913 ;; Registers used:
 34914 ;;		wreg, status,2, status,0, cstack
 34915 ;; Tracked objects:
 34916 ;;		On entry : 0/0
 34917 ;;		On exit  : 0/0
 34918 ;;		Unchanged: 0/0
 34919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34921 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34924 ;;Total ram usage:        3 bytes
 34925 ;; Hardware stack levels used:    1
 34926 ;; Hardware stack levels required when called:    2
 34927 ;; This function calls:
 34928 ;;		i2_SPIGet
 34929 ;;		i2_SPIPut
 34930 ;; This function is called by:
 34931 ;;		_HighISR
 34932 ;;		i2_TxPacket
 34933 ;; This function uses a non-reentrant model
 34934 ;;
 34935                           
 34936                           	psect	text171
 34937  007232                     __ptext171:
 34938                           	opt stack 0
 34939  007232                     i2_RegisterRead:
 34940                           	opt stack 13
 34941                           
 34942                           ;incstack = 0
 34943                           ;i2RegisterRead@address stored from wreg
 34944  007232  6E03               	movwf	i2RegisterRead@address,c
 34945                           
 34946                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 34947                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 34948  007234  0E00               	movlw	0
 34949  007236  B6F0               	btfsc	intcon3,3,c	;volatile
 34950  007238  0E01               	movlw	1
 34951  00723A  6E05               	movwf	i2RegisterRead@IRQ1select,c
 34952                           
 34953                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 34954  00723C  96F0               	bcf	intcon3,3,c	;volatile
 34955                           
 34956                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 34957  00723E  928C               	bcf	3980,1,c	;volatile
 34958                           
 34959                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 34960  007240  8C03               	bsf	i2RegisterRead@address,6,c
 34961                           
 34962                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 34963  007242  5003               	movf	i2RegisterRead@address,w,c
 34964  007244  EC9F  F03A         	call	i2_SPIPut
 34965                           
 34966                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 34967  007248  EC12  F03B         	call	i2_SPIGet	;wreg free
 34968  00724C  6E04               	movwf	i2RegisterRead@value,c
 34969                           
 34970                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 34971  00724E  828C               	bsf	3980,1,c	;volatile
 34972                           
 34973                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 34974  007250  B005               	btfsc	i2RegisterRead@IRQ1select,0,c
 34975  007252  D002               	bra	i2u1655_45
 34976  007254  96F0               	bcf	intcon3,3,c	;volatile
 34977  007256  D001               	bra	i2u1655_46
 34978  007258                     i2u1655_45:
 34979  007258  86F0               	bsf	intcon3,3,c	;volatile
 34980  00725A                     i2u1655_46:
 34981                           
 34982                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 34983  00725A  5004               	movf	i2RegisterRead@value,w,c
 34984  00725C  0012               	return		;funcret
 34985  00725E                     __end_ofi2_RegisterRead:
 34986                           	opt stack 0
 34987                           tblptru	equ	0xFF8
 34988                           tblptrh	equ	0xFF7
 34989                           tblptrl	equ	0xFF6
 34990                           tablat	equ	0xFF5
 34991                           prodh	equ	0xFF4
 34992                           prodl	equ	0xFF3
 34993                           intcon	equ	0xFF2
 34994                           intcon2	equ	0xFF1
 34995                           intcon3	equ	0xFF0
 34996                           indf0	equ	0xFEF
 34997                           postinc0	equ	0xFEE
 34998                           plusw0	equ	0xFEB
 34999                           fsr0h	equ	0xFEA
 35000                           fsr0l	equ	0xFE9
 35001                           wreg	equ	0xFE8
 35002                           indf1	equ	0xFE7
 35003                           postinc1	equ	0xFE6
 35004                           postdec1	equ	0xFE5
 35005                           plusw1	equ	0xFE3
 35006                           fsr1h	equ	0xFE2
 35007                           fsr1l	equ	0xFE1
 35008                           indf2	equ	0xFDF
 35009                           postinc2	equ	0xFDE
 35010                           postdec2	equ	0xFDD
 35011                           plusw2	equ	0xFDB
 35012                           fsr2h	equ	0xFDA
 35013                           fsr2l	equ	0xFD9
 35014                           status	equ	0xFD8
 35015                           
 35016 ;; *************** function i2_SPIGet *****************
 35017 ;; Defined at:
 35018 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 35019 ;; Parameters:    Size  Location     Type
 35020 ;;		None
 35021 ;; Auto vars:     Size  Location     Type
 35022 ;;		None
 35023 ;; Return value:  Size  Location     Type
 35024 ;;                  1    wreg      unsigned char 
 35025 ;; Registers used:
 35026 ;;		wreg, status,2, cstack
 35027 ;; Tracked objects:
 35028 ;;		On entry : 0/1
 35029 ;;		On exit  : 0/0
 35030 ;;		Unchanged: 0/0
 35031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35036 ;;Total ram usage:        0 bytes
 35037 ;; Hardware stack levels used:    1
 35038 ;; Hardware stack levels required when called:    1
 35039 ;; This function calls:
 35040 ;;		i2_SPIPut
 35041 ;; This function is called by:
 35042 ;;		_HighISR
 35043 ;;		i2_RegisterRead
 35044 ;; This function uses a non-reentrant model
 35045 ;;
 35046                           
 35047                           	psect	text172
 35048  007624                     __ptext172:
 35049                           	opt stack 0
 35050  007624                     i2_SPIGet:
 35051                           	opt stack 13
 35052                           
 35053                           ;spi.c: 310: SPIPut(0x00);
 35054                           
 35055                           ;incstack = 0
 35056  007624  0E00               	movlw	0
 35057  007626  EC9F  F03A         	call	i2_SPIPut
 35058                           
 35059                           ;spi.c: 311: return SSPBUF;
 35060  00762A  50C9               	movf	4041,w,c	;volatile
 35061  00762C  0012               	return		;funcret
 35062  00762E                     __end_ofi2_SPIGet:
 35063                           	opt stack 0
 35064                           tblptru	equ	0xFF8
 35065                           tblptrh	equ	0xFF7
 35066                           tblptrl	equ	0xFF6
 35067                           tablat	equ	0xFF5
 35068                           prodh	equ	0xFF4
 35069                           prodl	equ	0xFF3
 35070                           intcon	equ	0xFF2
 35071                           intcon2	equ	0xFF1
 35072                           intcon3	equ	0xFF0
 35073                           indf0	equ	0xFEF
 35074                           postinc0	equ	0xFEE
 35075                           plusw0	equ	0xFEB
 35076                           fsr0h	equ	0xFEA
 35077                           fsr0l	equ	0xFE9
 35078                           wreg	equ	0xFE8
 35079                           indf1	equ	0xFE7
 35080                           postinc1	equ	0xFE6
 35081                           postdec1	equ	0xFE5
 35082                           plusw1	equ	0xFE3
 35083                           fsr1h	equ	0xFE2
 35084                           fsr1l	equ	0xFE1
 35085                           indf2	equ	0xFDF
 35086                           postinc2	equ	0xFDE
 35087                           postdec2	equ	0xFDD
 35088                           plusw2	equ	0xFDB
 35089                           fsr2h	equ	0xFDA
 35090                           fsr2l	equ	0xFD9
 35091                           status	equ	0xFD8
 35092                           
 35093 ;; *************** function i2_SPIPut *****************
 35094 ;; Defined at:
 35095 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 35096 ;; Parameters:    Size  Location     Type
 35097 ;;  v               1    wreg     unsigned char 
 35098 ;; Auto vars:     Size  Location     Type
 35099 ;;  v               1    1[COMRAM] unsigned char 
 35100 ;;  SPIPut          1    0        volatile unsigned char 
 35101 ;; Return value:  Size  Location     Type
 35102 ;;                  1    wreg      void 
 35103 ;; Registers used:
 35104 ;;		wreg
 35105 ;; Tracked objects:
 35106 ;;		On entry : 0/4
 35107 ;;		On exit  : 0/0
 35108 ;;		Unchanged: 0/0
 35109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35114 ;;Total ram usage:        2 bytes
 35115 ;; Hardware stack levels used:    1
 35116 ;; This function calls:
 35117 ;;		Nothing
 35118 ;; This function is called by:
 35119 ;;		i2_SPIGet
 35120 ;;		i2_RegisterSet
 35121 ;;		i2_RegisterRead
 35122 ;;		i2_WriteFIFO
 35123 ;; This function uses a non-reentrant model
 35124 ;;
 35125                           
 35126                           	psect	text173
 35127  00753E                     __ptext173:
 35128                           	opt stack 0
 35129  00753E                     i2_SPIPut:
 35130                           	opt stack 14
 35131                           
 35132                           ;incstack = 0
 35133                           ;i2SPIPut@v stored from wreg
 35134  00753E  6E02               	movwf	i2SPIPut@v,c
 35135                           
 35136                           ;spi.c: 228: volatile uint8_t i;
 35137                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 35138  007540  969E               	bcf	3998,3,c	;volatile
 35139  007542  50C9               	movf	4041,w,c	;volatile
 35140  007544                     i2l78:
 35141                           
 35142                           ;spi.c: 256: {
 35143                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 35144  007544  9EC6               	bcf	4038,7,c	;volatile
 35145                           
 35146                           ;spi.c: 258: SSPBUF = v;
 35147  007546  C002  FFC9         	movff	i2SPIPut@v,4041	;volatile
 35148                           
 35149                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 35150  00754A  BEC6               	btfsc	4038,7,c	;volatile
 35151  00754C  D7FB               	goto	i2l78
 35152  00754E                     i2l80:
 35153  00754E  B69E               	btfsc	3998,3,c	;volatile
 35154  007550  0012               	return		;funcret
 35155  007552  D7FD               	goto	i2l80
 35156  007554                     __end_ofi2_SPIPut:
 35157                           	opt stack 0
 35158                           tblptru	equ	0xFF8
 35159                           tblptrh	equ	0xFF7
 35160                           tblptrl	equ	0xFF6
 35161                           tablat	equ	0xFF5
 35162                           prodh	equ	0xFF4
 35163                           prodl	equ	0xFF3
 35164                           intcon	equ	0xFF2
 35165                           intcon2	equ	0xFF1
 35166                           intcon3	equ	0xFF0
 35167                           indf0	equ	0xFEF
 35168                           postinc0	equ	0xFEE
 35169                           plusw0	equ	0xFEB
 35170                           fsr0h	equ	0xFEA
 35171                           fsr0l	equ	0xFE9
 35172                           wreg	equ	0xFE8
 35173                           indf1	equ	0xFE7
 35174                           postinc1	equ	0xFE6
 35175                           postdec1	equ	0xFE5
 35176                           plusw1	equ	0xFE3
 35177                           fsr1h	equ	0xFE2
 35178                           fsr1l	equ	0xFE1
 35179                           indf2	equ	0xFDF
 35180                           postinc2	equ	0xFDE
 35181                           postdec2	equ	0xFDD
 35182                           plusw2	equ	0xFDB
 35183                           fsr2h	equ	0xFDA
 35184                           fsr2l	equ	0xFD9
 35185                           status	equ	0xFD8
 35186                           
 35187 ;; *************** function i2_MiWi_TickGetMs *****************
 35188 ;; Defined at:
 35189 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 35190 ;; Parameters:    Size  Location     Type
 35191 ;;		None
 35192 ;; Auto vars:     Size  Location     Type
 35193 ;;  MiWi_TickGet    4   16[COMRAM] unsigned long 
 35194 ;; Return value:  Size  Location     Type
 35195 ;;                  4   12[COMRAM] struct MIWI_TICK_t
 35196 ;; Registers used:
 35197 ;;		wreg, status,2, status,0, cstack
 35198 ;; Tracked objects:
 35199 ;;		On entry : 0/0
 35200 ;;		On exit  : F/0
 35201 ;;		Unchanged: 0/0
 35202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35204 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35206 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35207 ;;Total ram usage:        8 bytes
 35208 ;; Hardware stack levels used:    1
 35209 ;; Hardware stack levels required when called:    1
 35210 ;; This function calls:
 35211 ;;		i2_MiWi_TickGet
 35212 ;; This function is called by:
 35213 ;;		_HighISR
 35214 ;;		i2_TxPacket
 35215 ;; This function uses a non-reentrant model
 35216 ;;
 35217                           
 35218                           	psect	text174
 35219  00710A                     __ptext174:
 35220                           	opt stack 0
 35221  00710A                     i2_MiWi_TickGetMs:
 35222                           	opt stack 14
 35223                           
 35224                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 35225                           
 35226                           ;incstack = 0
 35227  00710A  EC24  F037         	call	i2_MiWi_TickGet	;wreg free
 35228  00710E  C001  F011         	movff	?i2_MiWi_TickGet,i2MiWi_TickGetMs@tnow
 35229  007112  C002  F012         	movff	?i2_MiWi_TickGet+1,i2MiWi_TickGetMs@tnow+1
 35230  007116  C003  F013         	movff	?i2_MiWi_TickGet+2,i2MiWi_TickGetMs@tnow+2
 35231  00711A  C004  F014         	movff	?i2_MiWi_TickGet+3,i2MiWi_TickGetMs@tnow+3
 35232                           
 35233                           ; BSR set to: 0
 35234                           ;symbol.c: 123: currentTime.Val=tnow;
 35235  00711E  C011  F1B6         	movff	i2MiWi_TickGetMs@tnow,_currentTime
 35236  007122  C012  F1B7         	movff	i2MiWi_TickGetMs@tnow+1,_currentTime+1
 35237  007126  C013  F1B8         	movff	i2MiWi_TickGetMs@tnow+2,_currentTime+2
 35238  00712A  C014  F1B9         	movff	i2MiWi_TickGetMs@tnow+3,_currentTime+3
 35239                           
 35240                           ; BSR set to: 0
 35241                           ;symbol.c: 124: return(currentTime);
 35242  00712E  C1B6  F00D         	movff	_currentTime,?i2_MiWi_TickGetMs
 35243  007132  C1B7  F00E         	movff	_currentTime+1,?i2_MiWi_TickGetMs+1
 35244  007136  C1B8  F00F         	movff	_currentTime+2,?i2_MiWi_TickGetMs+2
 35245  00713A  C1B9  F010         	movff	_currentTime+3,?i2_MiWi_TickGetMs+3
 35246                           
 35247                           ; BSR set to: 0
 35248  00713E  0012               	return		;funcret
 35249  007140                     __end_ofi2_MiWi_TickGetMs:
 35250                           	opt stack 0
 35251                           tblptru	equ	0xFF8
 35252                           tblptrh	equ	0xFF7
 35253                           tblptrl	equ	0xFF6
 35254                           tablat	equ	0xFF5
 35255                           prodh	equ	0xFF4
 35256                           prodl	equ	0xFF3
 35257                           intcon	equ	0xFF2
 35258                           intcon2	equ	0xFF1
 35259                           intcon3	equ	0xFF0
 35260                           indf0	equ	0xFEF
 35261                           postinc0	equ	0xFEE
 35262                           plusw0	equ	0xFEB
 35263                           fsr0h	equ	0xFEA
 35264                           fsr0l	equ	0xFE9
 35265                           wreg	equ	0xFE8
 35266                           indf1	equ	0xFE7
 35267                           postinc1	equ	0xFE6
 35268                           postdec1	equ	0xFE5
 35269                           plusw1	equ	0xFE3
 35270                           fsr1h	equ	0xFE2
 35271                           fsr1l	equ	0xFE1
 35272                           indf2	equ	0xFDF
 35273                           postinc2	equ	0xFDE
 35274                           postdec2	equ	0xFDD
 35275                           plusw2	equ	0xFDB
 35276                           fsr2h	equ	0xFDA
 35277                           fsr2l	equ	0xFD9
 35278                           status	equ	0xFD8
 35279                           
 35280 ;; *************** function i2_MiWi_TickGet *****************
 35281 ;; Defined at:
 35282 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 35283 ;; Parameters:    Size  Location     Type
 35284 ;;		None
 35285 ;; Auto vars:     Size  Location     Type
 35286 ;;  MiWi_TickGet    4    8[COMRAM] unsigned long 
 35287 ;;  MiWi_TickGet    4    4[COMRAM] unsigned long 
 35288 ;; Return value:  Size  Location     Type
 35289 ;;                  4    0[COMRAM] unsigned long 
 35290 ;; Registers used:
 35291 ;;		wreg, status,2, status,0
 35292 ;; Tracked objects:
 35293 ;;		On entry : 0/0
 35294 ;;		On exit  : F/0
 35295 ;;		Unchanged: 0/0
 35296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35298 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35300 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35301 ;;Total ram usage:       12 bytes
 35302 ;; Hardware stack levels used:    1
 35303 ;; This function calls:
 35304 ;;		Nothing
 35305 ;; This function is called by:
 35306 ;;		i2_MiWi_TickGetMs
 35307 ;; This function uses a non-reentrant model
 35308 ;;
 35309                           
 35310                           	psect	text175
 35311  006E48                     __ptext175:
 35312                           	opt stack 0
 35313  006E48                     i2_MiWi_TickGet:
 35314                           	opt stack 14
 35315                           
 35316                           ;symbol.c: 129: uint32_t tmrval=0;
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;incstack = 0
 35320  006E48  6A09               	clrf	i2MiWi_TickGet@tmrval,c
 35321  006E4A  6A0A               	clrf	i2MiWi_TickGet@tmrval+1,c
 35322  006E4C  6A0B               	clrf	i2MiWi_TickGet@tmrval+2,c
 35323  006E4E  6A0C               	clrf	i2MiWi_TickGet@tmrval+3,c
 35324  006E50                     i2l125:
 35325                           
 35326                           ;symbol.c: 133: {
 35327                           ;symbol.c: 134: t1fired=0;
 35328  006E50  0100               	movlb	0	; () banked
 35329  006E52  6BEA               	clrf	_t1fired& (0+255),b	;volatile
 35330                           
 35331                           ;symbol.c: 136: t1ext=t1extension;
 35332  006E54  C1BE  F005         	movff	_t1extension,i2MiWi_TickGet@t1ext
 35333  006E58  C1BF  F006         	movff	_t1extension+1,i2MiWi_TickGet@t1ext+1
 35334  006E5C  C1C0  F007         	movff	_t1extension+2,i2MiWi_TickGet@t1ext+2
 35335  006E60  C1C1  F008         	movff	_t1extension+3,i2MiWi_TickGet@t1ext+3
 35336                           
 35337                           ; BSR set to: 0
 35338                           ;symbol.c: 137: } while(t1fired==1);
 35339  006E64  05EA               	decf	_t1fired& (0+255),w,b	;volatile
 35340  006E66  E0F4               	bz	i2l125
 35341                           
 35342                           ; BSR set to: 0
 35343                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 35344  006E68  5005               	movf	i2MiWi_TickGet@t1ext,w,c
 35345  006E6A  1209               	iorwf	i2MiWi_TickGet@tmrval,f,c
 35346  006E6C  5006               	movf	i2MiWi_TickGet@t1ext+1,w,c
 35347  006E6E  120A               	iorwf	i2MiWi_TickGet@tmrval+1,f,c
 35348  006E70  5007               	movf	i2MiWi_TickGet@t1ext+2,w,c
 35349  006E72  120B               	iorwf	i2MiWi_TickGet@tmrval+2,f,c
 35350  006E74  5008               	movf	i2MiWi_TickGet@t1ext+3,w,c
 35351  006E76  120C               	iorwf	i2MiWi_TickGet@tmrval+3,f,c
 35352                           
 35353                           ; BSR set to: 0
 35354                           ;symbol.c: 140: return(tmrval);
 35355  006E78  C009  F001         	movff	i2MiWi_TickGet@tmrval,?i2_MiWi_TickGet
 35356  006E7C  C00A  F002         	movff	i2MiWi_TickGet@tmrval+1,?i2_MiWi_TickGet+1
 35357  006E80  C00B  F003         	movff	i2MiWi_TickGet@tmrval+2,?i2_MiWi_TickGet+2
 35358  006E84  C00C  F004         	movff	i2MiWi_TickGet@tmrval+3,?i2_MiWi_TickGet+3
 35359                           
 35360                           ; BSR set to: 0
 35361  006E88  0012               	return		;funcret
 35362  006E8A                     __end_ofi2_MiWi_TickGet:
 35363                           	opt stack 0
 35364                           tblptru	equ	0xFF8
 35365                           tblptrh	equ	0xFF7
 35366                           tblptrl	equ	0xFF6
 35367                           tablat	equ	0xFF5
 35368                           prodh	equ	0xFF4
 35369                           prodl	equ	0xFF3
 35370                           intcon	equ	0xFF2
 35371                           intcon2	equ	0xFF1
 35372                           intcon3	equ	0xFF0
 35373                           indf0	equ	0xFEF
 35374                           postinc0	equ	0xFEE
 35375                           plusw0	equ	0xFEB
 35376                           fsr0h	equ	0xFEA
 35377                           fsr0l	equ	0xFE9
 35378                           wreg	equ	0xFE8
 35379                           indf1	equ	0xFE7
 35380                           postinc1	equ	0xFE6
 35381                           postdec1	equ	0xFE5
 35382                           plusw1	equ	0xFE3
 35383                           fsr1h	equ	0xFE2
 35384                           fsr1l	equ	0xFE1
 35385                           indf2	equ	0xFDF
 35386                           postinc2	equ	0xFDE
 35387                           postdec2	equ	0xFDD
 35388                           plusw2	equ	0xFDB
 35389                           fsr2h	equ	0xFDA
 35390                           fsr2l	equ	0xFD9
 35391                           status	equ	0xFD8
 35392                           
 35393 ;; *************** function i2_DelayMs *****************
 35394 ;; Defined at:
 35395 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 35396 ;; Parameters:    Size  Location     Type
 35397 ;;  ms              4    8[COMRAM] unsigned long 
 35398 ;; Auto vars:     Size  Location     Type
 35399 ;;		None
 35400 ;; Return value:  Size  Location     Type
 35401 ;;                  1    wreg      void 
 35402 ;; Registers used:
 35403 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 35404 ;; Tracked objects:
 35405 ;;		On entry : 0/1
 35406 ;;		On exit  : 0/0
 35407 ;;		Unchanged: 0/0
 35408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35411 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35412 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35413 ;;Total ram usage:       12 bytes
 35414 ;; Hardware stack levels used:    1
 35415 ;; Hardware stack levels required when called:    1
 35416 ;; This function calls:
 35417 ;;		i2_DelayUS
 35418 ;; This function is called by:
 35419 ;;		i2_TxPacket
 35420 ;; This function uses a non-reentrant model
 35421 ;;
 35422                           
 35423                           	psect	text176
 35424  005DEE                     __ptext176:
 35425                           	opt stack 0
 35426  005DEE                     i2_DelayMs:
 35427                           	opt stack 14
 35428                           
 35429                           ;delay.c: 36: DelayUS(ms*1000);
 35430                           
 35431                           ; BSR set to: 0
 35432                           ;incstack = 0
 35433  005DEE  C009  F00D         	movff	i2DelayMs@ms,??i2_DelayMs
 35434  005DF2  C00A  F00E         	movff	i2DelayMs@ms+1,??i2_DelayMs+1
 35435  005DF6  C00B  F00F         	movff	i2DelayMs@ms+2,??i2_DelayMs+2
 35436  005DFA  C00C  F010         	movff	i2DelayMs@ms+3,??i2_DelayMs+3
 35437  005DFE  0EE8               	movlw	232
 35438  005E00  020D               	mulwf	??i2_DelayMs& (0+255),c
 35439  005E02  CFF3 F011          	movff	prodl,??i2_DelayMs+4
 35440  005E06  CFF4 F012          	movff	prodh,??i2_DelayMs+5
 35441  005E0A  6A13               	clrf	(??i2_DelayMs+6)& (0+255),c
 35442  005E0C  6A14               	clrf	(??i2_DelayMs+7)& (0+255),c
 35443  005E0E  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 35444  005E10  50F3               	movf	prodl,w,c
 35445  005E12  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 35446  005E14  50F4               	movf	prodh,w,c
 35447  005E16  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 35448  005E18  0E00               	movlw	0
 35449  005E1A  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 35450  005E1C  0E03               	movlw	3
 35451  005E1E  020D               	mulwf	??i2_DelayMs& (0+255),c
 35452  005E20  50F3               	movf	prodl,w,c
 35453  005E22  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 35454  005E24  50F4               	movf	prodh,w,c
 35455  005E26  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 35456  005E28  0E00               	movlw	0
 35457  005E2A  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 35458  005E2C  0EE8               	movlw	232
 35459  005E2E  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 35460  005E30  50F3               	movf	prodl,w,c
 35461  005E32  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 35462  005E34  50F4               	movf	prodh,w,c
 35463  005E36  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 35464  005E38  0E03               	movlw	3
 35465  005E3A  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 35466  005E3C  50F3               	movf	prodl,w,c
 35467  005E3E  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 35468  005E40  50F4               	movf	prodh,w,c
 35469  005E42  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 35470  005E44  0E00               	movlw	0
 35471  005E46  020D               	mulwf	??i2_DelayMs& (0+255),c
 35472  005E48  50F3               	movf	prodl,w,c
 35473  005E4A  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 35474  005E4C  50F4               	movf	prodh,w,c
 35475  005E4E  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 35476  005E50  0EE8               	movlw	232
 35477  005E52  0210               	mulwf	(??i2_DelayMs+3)& (0+255),c
 35478  005E54  50F3               	movf	prodl,w,c
 35479  005E56  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 35480  005E58  0E03               	movlw	3
 35481  005E5A  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 35482  005E5C  50F3               	movf	prodl,w,c
 35483  005E5E  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 35484  005E60  0E00               	movlw	0
 35485  005E62  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 35486  005E64  50F3               	movf	prodl,w,c
 35487  005E66  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 35488  005E68  0E00               	movlw	0
 35489  005E6A  020D               	mulwf	??i2_DelayMs& (0+255),c
 35490  005E6C  50F3               	movf	prodl,w,c
 35491  005E6E  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 35492  005E70  C011  F001         	movff	??i2_DelayMs+4,i2DelayUS@delay
 35493  005E74  C012  F002         	movff	??i2_DelayMs+5,i2DelayUS@delay+1
 35494  005E78  C013  F003         	movff	??i2_DelayMs+6,i2DelayUS@delay+2
 35495  005E7C  C014  F004         	movff	??i2_DelayMs+7,i2DelayUS@delay+3
 35496  005E80  EF59  F039         	goto	i2_DelayUS	;wreg free
 35497  005E84                     __end_ofi2_DelayMs:
 35498                           	opt stack 0
 35499                           tblptru	equ	0xFF8
 35500                           tblptrh	equ	0xFF7
 35501                           tblptrl	equ	0xFF6
 35502                           tablat	equ	0xFF5
 35503                           prodh	equ	0xFF4
 35504                           prodl	equ	0xFF3
 35505                           intcon	equ	0xFF2
 35506                           intcon2	equ	0xFF1
 35507                           intcon3	equ	0xFF0
 35508                           indf0	equ	0xFEF
 35509                           postinc0	equ	0xFEE
 35510                           plusw0	equ	0xFEB
 35511                           fsr0h	equ	0xFEA
 35512                           fsr0l	equ	0xFE9
 35513                           wreg	equ	0xFE8
 35514                           indf1	equ	0xFE7
 35515                           postinc1	equ	0xFE6
 35516                           postdec1	equ	0xFE5
 35517                           plusw1	equ	0xFE3
 35518                           fsr1h	equ	0xFE2
 35519                           fsr1l	equ	0xFE1
 35520                           indf2	equ	0xFDF
 35521                           postinc2	equ	0xFDE
 35522                           postdec2	equ	0xFDD
 35523                           plusw2	equ	0xFDB
 35524                           fsr2h	equ	0xFDA
 35525                           fsr2l	equ	0xFD9
 35526                           status	equ	0xFD8
 35527                           
 35528 ;; *************** function i2_DelayUS *****************
 35529 ;; Defined at:
 35530 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 35531 ;; Parameters:    Size  Location     Type
 35532 ;;  delay           4    0[COMRAM] unsigned long 
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;  DelayUS         4    4[COMRAM] unsigned long 
 35535 ;; Return value:  Size  Location     Type
 35536 ;;                  1    wreg      void 
 35537 ;; Registers used:
 35538 ;;		wreg, status,2, status,0
 35539 ;; Tracked objects:
 35540 ;;		On entry : 0/1
 35541 ;;		On exit  : 0/0
 35542 ;;		Unchanged: 0/0
 35543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35548 ;;Total ram usage:        8 bytes
 35549 ;; Hardware stack levels used:    1
 35550 ;; This function calls:
 35551 ;;		Nothing
 35552 ;; This function is called by:
 35553 ;;		i2_DelayMs
 35554 ;; This function uses a non-reentrant model
 35555 ;;
 35556                           
 35557                           	psect	text177
 35558  0072B2                     __ptext177:
 35559                           	opt stack 0
 35560  0072B2                     i2_DelayUS:
 35561                           	opt stack 14
 35562                           
 35563                           ;delay.c: 25: uint32_t i;
 35564                           ;delay.c: 27: for(i=0;i<delay;i++)
 35565                           
 35566                           ;incstack = 0
 35567  0072B2  6A05               	clrf	i2DelayUS@i,c
 35568  0072B4  6A06               	clrf	i2DelayUS@i+1,c
 35569  0072B6  6A07               	clrf	i2DelayUS@i+2,c
 35570  0072B8  6A08               	clrf	i2DelayUS@i+3,c
 35571  0072BA  D006               	goto	i2l5
 35572  0072BC                     i2l6:
 35573                           
 35574                           ;delay.c: 28: {
 35575                           ;delay.c: 29: __nop();
 35576  0072BC  F000               	nop	
 35577  0072BE  2A05               	incf	i2DelayUS@i,f,c
 35578  0072C0  0E00               	movlw	0
 35579  0072C2  2206               	addwfc	i2DelayUS@i+1,f,c
 35580  0072C4  2207               	addwfc	i2DelayUS@i+2,f,c
 35581  0072C6  2208               	addwfc	i2DelayUS@i+3,f,c
 35582  0072C8                     i2l5:
 35583  0072C8  5001               	movf	i2DelayUS@delay,w,c
 35584  0072CA  5C05               	subwf	i2DelayUS@i,w,c
 35585  0072CC  5002               	movf	i2DelayUS@delay+1,w,c
 35586  0072CE  5806               	subwfb	i2DelayUS@i+1,w,c
 35587  0072D0  5003               	movf	i2DelayUS@delay+2,w,c
 35588  0072D2  5807               	subwfb	i2DelayUS@i+2,w,c
 35589  0072D4  5004               	movf	i2DelayUS@delay+3,w,c
 35590  0072D6  5808               	subwfb	i2DelayUS@i+3,w,c
 35591  0072D8  E3F1               	bnc	i2l6
 35592  0072DA  0012               	return		;funcret
 35593  0072DC                     __end_ofi2_DelayUS:
 35594                           	opt stack 0
 35595                           tblptru	equ	0xFF8
 35596                           tblptrh	equ	0xFF7
 35597                           tblptrl	equ	0xFF6
 35598                           tablat	equ	0xFF5
 35599                           prodh	equ	0xFF4
 35600                           prodl	equ	0xFF3
 35601                           intcon	equ	0xFF2
 35602                           intcon2	equ	0xFF1
 35603                           intcon3	equ	0xFF0
 35604                           indf0	equ	0xFEF
 35605                           postinc0	equ	0xFEE
 35606                           plusw0	equ	0xFEB
 35607                           fsr0h	equ	0xFEA
 35608                           fsr0l	equ	0xFE9
 35609                           wreg	equ	0xFE8
 35610                           indf1	equ	0xFE7
 35611                           postinc1	equ	0xFE6
 35612                           postdec1	equ	0xFE5
 35613                           plusw1	equ	0xFE3
 35614                           fsr1h	equ	0xFE2
 35615                           fsr1l	equ	0xFE1
 35616                           indf2	equ	0xFDF
 35617                           postinc2	equ	0xFDE
 35618                           postdec2	equ	0xFDD
 35619                           plusw2	equ	0xFDB
 35620                           fsr2h	equ	0xFDA
 35621                           fsr2l	equ	0xFD9
 35622                           status	equ	0xFD8
 35623                           tblptru	equ	0xFF8
 35624                           tblptrh	equ	0xFF7
 35625                           tblptrl	equ	0xFF6
 35626                           tablat	equ	0xFF5
 35627                           prodh	equ	0xFF4
 35628                           prodl	equ	0xFF3
 35629                           intcon	equ	0xFF2
 35630                           intcon2	equ	0xFF1
 35631                           intcon3	equ	0xFF0
 35632                           indf0	equ	0xFEF
 35633                           postinc0	equ	0xFEE
 35634                           plusw0	equ	0xFEB
 35635                           fsr0h	equ	0xFEA
 35636                           fsr0l	equ	0xFE9
 35637                           wreg	equ	0xFE8
 35638                           indf1	equ	0xFE7
 35639                           postinc1	equ	0xFE6
 35640                           postdec1	equ	0xFE5
 35641                           plusw1	equ	0xFE3
 35642                           fsr1h	equ	0xFE2
 35643                           fsr1l	equ	0xFE1
 35644                           indf2	equ	0xFDF
 35645                           postinc2	equ	0xFDE
 35646                           postdec2	equ	0xFDD
 35647                           plusw2	equ	0xFDB
 35648                           fsr2h	equ	0xFDA
 35649                           fsr2l	equ	0xFD9
 35650                           status	equ	0xFD8
 35651                           
 35652                           	psect	rparam
 35653  0000                     tblptru	equ	0xFF8
 35654                           tblptrh	equ	0xFF7
 35655                           tblptrl	equ	0xFF6
 35656                           tablat	equ	0xFF5
 35657                           prodh	equ	0xFF4
 35658                           prodl	equ	0xFF3
 35659                           intcon	equ	0xFF2
 35660                           intcon2	equ	0xFF1
 35661                           intcon3	equ	0xFF0
 35662                           indf0	equ	0xFEF
 35663                           postinc0	equ	0xFEE
 35664                           plusw0	equ	0xFEB
 35665                           fsr0h	equ	0xFEA
 35666                           fsr0l	equ	0xFE9
 35667                           wreg	equ	0xFE8
 35668                           indf1	equ	0xFE7
 35669                           postinc1	equ	0xFE6
 35670                           postdec1	equ	0xFE5
 35671                           plusw1	equ	0xFE3
 35672                           fsr1h	equ	0xFE2
 35673                           fsr1l	equ	0xFE1
 35674                           indf2	equ	0xFDF
 35675                           postinc2	equ	0xFDE
 35676                           postdec2	equ	0xFDD
 35677                           plusw2	equ	0xFDB
 35678                           fsr2h	equ	0xFDA
 35679                           fsr2l	equ	0xFD9
 35680                           status	equ	0xFD8
 35681                           
 35682                           	psect	temp
 35683  00004F                     btemp:
 35684                           	opt stack 0
 35685  00004F                     	ds	1
 35686  0000                     int$flags	set	btemp
 35687                           tblptru	equ	0xFF8
 35688                           tblptrh	equ	0xFF7
 35689                           tblptrl	equ	0xFF6
 35690                           tablat	equ	0xFF5
 35691                           prodh	equ	0xFF4
 35692                           prodl	equ	0xFF3
 35693                           intcon	equ	0xFF2
 35694                           intcon2	equ	0xFF1
 35695                           intcon3	equ	0xFF0
 35696                           indf0	equ	0xFEF
 35697                           postinc0	equ	0xFEE
 35698                           plusw0	equ	0xFEB
 35699                           fsr0h	equ	0xFEA
 35700                           fsr0l	equ	0xFE9
 35701                           wreg	equ	0xFE8
 35702                           indf1	equ	0xFE7
 35703                           postinc1	equ	0xFE6
 35704                           postdec1	equ	0xFE5
 35705                           plusw1	equ	0xFE3
 35706                           fsr1h	equ	0xFE2
 35707                           fsr1l	equ	0xFE1
 35708                           indf2	equ	0xFDF
 35709                           postinc2	equ	0xFDE
 35710                           postdec2	equ	0xFDD
 35711                           plusw2	equ	0xFDB
 35712                           fsr2h	equ	0xFDA
 35713                           fsr2l	equ	0xFD9
 35714                           status	equ	0xFD8


Data Sizes:
    Strings     98
    Constant    1176
    Data        26
    BSS         2391
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      78
    BANK0           160    135     141
    BANK1           256    174     253
    BANK2           256     30     129
    BANK3           256      0     230
    BANK4           256      0     239
    BANK5           256      0     220
    BANK6           256      0     242
    BANK7           256      0     254
    BANK8           256      0     220
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    MiApp_UnicastAddress@Origin	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK4[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), main@addr(BANK2[2]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK4[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), main@addr(BANK2[2]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 

    memcpy@d1	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), MiMAC_ReceivedPacket@addr(BANK0[2]), 
		 -> key(BANK2[8]), MACTxBuffer(BANK4[64]), ConnectionTable.Address(BANK4[2]), MACRxPacket(BANK2[12]), 
		 -> MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), 
		 -> MiApp_StartConnection@src(COMRAM[2]), ConnectionTable(BANK4[55]), myLongAddress(BANK1[2]), Read_MAC_Address@address(BANK0[2]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), MiMAC_ReceivedPacket@addr(BANK0[2]), 
		 -> key(BANK2[8]), MACTxBuffer(BANK4[64]), ConnectionTable.Address(BANK4[2]), MACRxPacket(BANK2[12]), 
		 -> MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), 
		 -> MiApp_StartConnection@src(COMRAM[2]), ConnectionTable(BANK4[55]), myLongAddress(BANK1[2]), Read_MAC_Address@address(BANK0[2]), 
		 -> NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 152
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), address.bytes(COMRAM[2]), 
		 -> IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK1[2]), address.bytes(COMRAM[2]), 
		 -> NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), TunnelManagerGetTunnel@device(BANK0[2]), 
		 -> tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), neighbor_tbl.ll_addr.bytes(BANK5[2]), 
		 -> neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[2]), radioReceivedPacket@child(BANK1[2]), 
		 -> source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK1[2]), RxPacket.Payload(BANK3[64]), transParam.DestPANID(COMRAM[2]), 
		 -> MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), RxPacket(BANK3[142]), 
		 -> address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), 
		 -> MiApp_EstablishConnection@src(BANK0[2]), myPANID(BANK0[2]), myLongAddress(BANK1[2]), Read_MAC_Address@addr8(BANK0[6]), 
		 -> NULL(NULL[0]), TxBuffer(BANK7[64]), main@addr(BANK2[2]), myAddr(BANK1[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 152
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), address.bytes(COMRAM[2]), 
		 -> IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK1[2]), address.bytes(COMRAM[2]), 
		 -> NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), TunnelManagerGetTunnel@device(BANK0[2]), 
		 -> tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), neighbor_tbl.ll_addr.bytes(BANK5[2]), 
		 -> neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[2]), radioReceivedPacket@child(BANK1[2]), 
		 -> source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK1[2]), RxPacket.Payload(BANK3[64]), transParam.DestPANID(COMRAM[2]), 
		 -> MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), RxPacket(BANK3[142]), 
		 -> address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), 
		 -> MiApp_EstablishConnection@src(BANK0[2]), myPANID(BANK0[2]), myLongAddress(BANK1[2]), Read_MAC_Address@addr8(BANK0[6]), 
		 -> NULL(NULL[0]), TxBuffer(BANK7[64]), main@addr(BANK2[2]), myAddr(BANK1[2]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> a2.bytes(COMRAM[2]), isSameAddress@a2(BANK0[2]), isBroadcastAddress@addr(BANK0[8]), isKnownPacket@zeros(BANK0[12]), 
		 -> src1.bytes(COMRAM[2]), main@src1(BANK2[2]), 

    memcmp@s1	PTR const void  size(2) Largest target is 360
		 -> a1.bytes(COMRAM[2]), isSameAddress@a1(BANK0[2]), address.bytes(COMRAM[2]), isBroadcastAddress@address(BANK0[2]), 
		 -> hc_table(BIGRAM[360]), src.bytes(COMRAM[2]), main@src(BANK2[2]), 

    crc32@buf	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    crc32@p	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    DeviceManagerGetDeviceData@isFormed	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isFormed(BANK1[1]), 

    DeviceManagerGetDeviceData@isSecure	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isSecurePacket(BANK1[1]), 

    DeviceManagerGetDeviceData@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), 

    DeviceManagerGetDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DeviceManagerBufferDeviceData@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), TxBuffer(BANK7[64]), 

    DeviceManagerBufferDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    devBuffers	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    NetworkSendDiscoverResponse@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), 

    NetworkSendDiscoverRequest@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), 

    NetworkPrepareSendPacket@data	PTR unsigned char  size(2) Largest target is 152
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMQ(BANK6[152]), NULL(NULL[0]), TxBuffer(BANK7[64]), 

    NetworkPrepareSendPacket@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkPrepareSendPacket@nHdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkManagerProcessIncomingData@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    NetworkManagerProcessIncomingData@dHdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    TMSendFormedPacketToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@myaddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    TMSendDataToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), NULL(NULL[0]), TxBuffer(BANK7[64]), 

    TMSendFormedPacketTowardsCoordinator@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 
		 -> TxBuffer(BANK7[64]), 

    TunnelManagerSetTunnel@parent	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@parent(BANK1[2]), 

    TunnelManagerSetTunnel@device	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@child(BANK1[2]), 

    BroadcastManagerDelaySend@pkt	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK1[2]), 

    LE_processReceivedMessage@hdr	PTR struct linkest_header_t_def size(2) Largest target is 142
		 -> RxPacket.lnk_header(BANK3[2]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@bhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    le_updateNeighborTableEst@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_updateETX@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_initNeighborIdx@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LE_ClearDLQ@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LEAppendNeighborInfo@data	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    sp__LEAppendNeighborInfo	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@last	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@adr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    networkSendBeacon@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RoutingTableFindDeviceOrParent@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerShouldInsert@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerShouldInsert@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerShouldInsert@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerProcessReceive@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK1[2]), 

    RouteManagerProcessReceive@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerProcessReceive@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouterEvicted@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    routeInfoInit@ri	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RouteManagerPerformUpdate@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerPerformUpdate@best	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), NULL(NULL[0]), 

    sp__NetworkGetMyRouteInfo	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RouteManagerPerformUpdate@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    NetworkUnicastData@data	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuffer(BANK7[64]), 

    NetworkUnicastData@mAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    sp__NetworkManagerGetMyAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@myAddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioReceivedPacket@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioReceivedPacket@rhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_5(CODE[11]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_4(CODE[3]), STR_3(CODE[18]), 
		 -> STR_2(CODE[19]), STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK4[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), MACTxBuffer(BANK4[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), MACTxBuffer(BANK4[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    HighISR@dPan	PTR unsigned char  size(1) Largest target is 2
		 -> HighISR@dstPan(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuff(BANK7[64]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    NetworkDataArrivedEvent@data	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> main@addr(BANK2[2]), 

    MiApp_SetAddressPan@address	PTR unsigned char  size(2) Largest target is 2
		 -> MiApp_EstablishConnection@src(BANK0[2]), myLongAddress(BANK1[2]), myAddr(BANK1[2]), 

    S1809$PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    radioUnicast@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), NetworkManagerTask@data(BANK1[19]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioBroadcast@data	PTR unsigned char  size(2) Largest target is 444
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    S1785$DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    S1746$Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket(BANK3[142]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    S1746$SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket(BANK3[142]), NULL(NULL[0]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), MiMAC_ReceivedPacket@addr(BANK0[2]), 
		 -> key(BANK2[8]), MACTxBuffer(BANK4[64]), ConnectionTable.Address(BANK4[2]), MACRxPacket(BANK2[12]), 
		 -> MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), 
		 -> MiApp_StartConnection@src(COMRAM[2]), ConnectionTable(BANK4[55]), myLongAddress(BANK1[2]), Read_MAC_Address@address(BANK0[2]), 
		 -> NULL(NULL[0]), 

    Read_MAC_Address@pAddress	PTR unsigned char  size(1) Largest target is 2
		 -> Read_MAC_Address@address(BANK0[2]), 

    EEPROMRead@dest	PTR unsigned char  size(1) Largest target is 6
		 -> Read_MAC_Address@addr8(BANK0[6]), 

    S1484$Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    S1484$SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress(BANK2[2]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), 

    sp__memset	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK4[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), main@addr(BANK2[2]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_TxPacket
    i2_TxPacket->i2_DelayMs
    i2_TxPacket->i2_MiWi_TickGetMs
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut
    i2_MiWi_TickGetMs->i2_MiWi_TickGet
    i2_DelayMs->i2_DelayUS

Critical Paths under _main in BANK0

    _main->_MiApp_MessageAvailable
    _sprintf->___lwdiv
    _Read_MAC_Address->_memcpy
    _EEPROMRead->_SPIPut2
    _SPIGet2->_SPIPut2
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _NetworkSendDiscoverRequest->_BroadcastManagerDelaySend
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _isKnownPacket->_MSTickGetDiffNow
    _TunnelManagerSetTunnel->_MSTickGet
    _RouteManagerProcessReceive->_LE_InsertNeighbor
    _routingTableUpdateEntry->_routingTableFind
    _LE_InsertNeighbor->_RouterEvicted
    _NetworkSendDiscoverResponse->_BroadcastManagerDelaySend
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _TMSendDataToRFD->_TMSendFormedPacketToRFD
    _TMSendFormedPacketToRFD->_radioUnicast
    _TunnelManagerInvalidateTunnel->_isSameAddress
    _TunnelManagerGetTunnel->_MSTickGetDiffNow
    _TMSendFormedPacketTowardsCoordinator->_NetworkHasRoute
    _LE_RemoveNeighborDevice->_RouterEvicted
    _GetRouteAddressOfChild->_RoutingTableFindDeviceOrParent
    _RoutingTableFindDeviceOrParent->_isSameAddress
    _BroadcastManagerDelaySend->_AddMSToTick
    _AddMSToTick->_MSTickGet
    _NetworkDataArrivedEvent->_memset
    _IsNetworkDevice->_MSTickGet
    _DeviceManagerGetDeviceData->_isSameAddress
    _LE_processReceivedMessage->_le_updateNeighborEntryIdx
    _le_updateNeighborEntryIdx->_le_updateNeighborTableEst
    _le_updateNeighborTableEst->_le_updateETX
    _le_updateETX->_le_computeETX
    _le_computeETX->___awdiv
    _le_findWorstNeighborIdx->_isSameAddress
    _le_findRandomNeighborIdx->___lwmod
    _RouteManagerShouldInsert->_isInvalidAddress
    _DeviceManagerGetDeviceType->_isSameAddress
    _DeviceManagerBufferDeviceData->_memcpy
    _BlinkRedLED->_LEDCommand
    _TransportManagerTask->_radioUnicast
    _radioUnicast->_SendPacket
    _RouterEvicted->_routingTableFind
    _routingTableFind->_isInvalidAddress
    _routeInfoInit->_memset
    _NetworkPrepareSendPacket->_memcpy
    _CoordinatorGenericAddress->_memset
    _RouteManagerTask->_MSTickGetDiffNow
    _LE_UnpinNeighbor->_le_findIdx
    _LE_PinNeighbor->_le_findIdx
    _LE_ClearDLQ->_le_findIdx
    _BroadcastManagerTask->_radioBroadcast
    _BeaconManagerTask->_networkSendBeacon
    _networkSendBeacon->_radioBroadcast
    _radioBroadcast->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_DelayMs
    _TxPacket->_MiWi_TickGetMs
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _LELinkQualityGet->_le_findIdx
    _le_findIdx->_isSameAddress
    _LEAppendNeighborInfo->___lwmod
    ___lwmod->_krnd
    _netDecayInterval->_netChooseAdvertiseTime
    _MSTickGetDiffNow->_MSTickGet
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_isSameAddress
    _isSameAddress->_CoordinatorGenericAddress
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DelayMs
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _IsMemberOfNetwork->_NetworkHasRoute
    _NetworkHasRoute->_isInvalidAddress
    _isInvalidAddress->_isBroadcastAddress
    _isBroadcastAddress->_memcmp
    _MiApp_GetParentAddress->_NetworkGetParentAddress
    _MiApp_EstablishConnection->_NetworkInit
    _TunnelManagerInit->_memset
    _TransportManagerInit->_memset
    _RouteManagerInit->_MSTickGet
    _DeviceManagerInit->_memset
    _CacheInit->_memset
    _BroadcastManagerInit->_memset
    _netResetInterval->_netChooseAdvertiseTime
    _netChooseAdvertiseTime->_MSTickGet
    ___llmod->_krnd
    _MSTickGet->_memcpy
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _MiApp_SetAddressPan->_NetworkSetAddressPAN
    _NetworkSetAddressPAN->_memcpy
    _memcpy->_NetworkManagerGetMyAddress
    _LEDManagerTask->_MiWi_TickGetMs
    _LCD_WriteData->_SPIPut2
    _LCDInit->_DelayMs
    _LCD_WriteCmd->_SPIPut2
    _DelayMs->_DelayUS
    _ButtonTask->_MiWi_TickGetMs
    _MiWi_TickGetMs->_MiWi_TickGet

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_SearchConnection
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_radioReceivedPacket
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _NetworkManagerTask->_TransportManagerTask

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_MiApp_SearchConnection

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0 5938719
                                             21 BANK2      9     9      0
                         _ButtonTask
                       _HardwareInit
                    _InitSymbolTimer
                          _LCDUpdate
                         _LEDCommand
                     _LEDManagerTask
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_GetParentAddress
            _MiApp_IsMemberOfNetwork
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
             _MiApp_SearchConnection
                _MiApp_SetAddressPan
               _MiApp_UnicastAddress
                   _Read_MAC_Address
                    _isButtonPressed
                             _memcmp
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    21      8    5579
                                             26 BANK0     25    17      8
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     440
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _isButtonPressed                                      4     4      0      65
                                             19 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Read_MAC_Address                                    14    12      2   18181
                                             31 BANK0     14    12      2
                         _EEPROMRead
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EEPROMRead                                           3     0      3     479
                                             21 BANK0      3     0      3
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIGet2                                              0     0      0      34
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                 7     2      5  420672
                                            127 BANK0      2     2      0
                                             71 BANK1      5     0      5
                 _NetworkUnicastData
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkUnicastData                                  10     3      7  403639
                                            124 BANK0      3     3      0
                                             64 BANK1      7     0      7
                 _CoordinatorAddress
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
               _NetworkGetDeviceType
         _NetworkManagerGetMyAddress
                    _TMSendDataToRFD
_TMSendFormedPacketTowardsCoordinato
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              25    21      4 2623446
                                            170 BANK1      4     0      4
                                              0 BANK2     21    21      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                     _MiWi_TickGetMs
         _NetworkSendDiscoverRequest
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSendDiscoverRequest                          70    70      0   73009
                                              0 BANK1     70    70      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
                             _memset
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               6     6      0 2533401
                                            131 BANK0      4     4      0
                                            168 BANK1      2     2      0
              _AddNodeToNetworkTable
               _MiMAC_ReceivedPacket
                     _MiWi_TickGetMs
                 _NetworkManagerTask
                        _TimeTickISR
                             _memcpy
                _radioReceivedPacket
 ---------------------------------------------------------------------------------
 (3) _radioReceivedPacket                                 34    23     11 1677844
                                            134 BANK1     34    23     11
                        _BlinkRedLED
          _BroadcastManagerDelaySend
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
             _GetRouteAddressOfChild
                  _IsMemberOfNetwork
                    _IsNetworkDevice
            _LE_RemoveNeighborDevice
          _LE_processReceivedMessage
             _NetworkDiscoveredEvent
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
  _NetworkManagerProcessIncomingData
        _NetworkSendDiscoverResponse
         _RouteManagerProcessReceive
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
             _TunnelManagerSetTunnel
                              _crc32
                 _isBroadcastAddress
                      _isKnownPacket
                      _isSameAddress
                             _memcpy
                 _radioDiscardPacket
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _radioDiscardPacket                                   0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _isKnownPacket                                       39    35      4   49657
                                             75 BANK0     39    35      4
                          _MSTickGet
                   _MSTickGetDiffNow
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (4) _crc32                                               20    12      8     645
                                             19 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (4) _TunnelManagerSetTunnel                              35    31      4   56664
                                             47 BANK0     26    22      4
                          _MSTickGet
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _RouteManagerProcessReceive                          13     8      5  178884
                                             61 BANK0     13     8      5
               _BeaconManagerTrigger
                  _LE_InsertNeighbor
                     _LE_PinNeighbor
              _NetworkAddressSizeGet
   _RouteManagerSetNeighborCongested
                      _RouterEvicted
                   _isInvalidAddress
                             _memcpy
            _routingTableUpdateEntry
 ---------------------------------------------------------------------------------
 (5) _routingTableUpdateEntry                             10     4      6   28483
                                             47 BANK0      9     3      6
                   _LELinkQualityGet
               _passLinkEtxThreshold
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (5) _RouteManagerSetNeighborCongested                     3     0      3     242
                                             19 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _LE_InsertNeighbor                                    6     3      3   61489
                                             55 BANK0      6     3      3
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
 ---------------------------------------------------------------------------------
 (4) _NetworkSendDiscoverResponse                         70    70      0   73009
                                              0 BANK1     70    70      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
           _isNetworkSecurityEnabled
                             _memset
 ---------------------------------------------------------------------------------
 (4) _NetworkManagerProcessIncomingData                   77    71      6  767178
                                            124 BANK0      7     1      6
                                             64 BANK1     70    70      0
               _BeaconManagerTrigger
         _DeviceManagerGetDeviceData
                    _IsNetworkDevice
            _NetworkDataArrivedEvent
               _NetworkGetDeviceType
                    _TMSendDataToRFD
            _TMSendFormedPacketToRFD
                   _isInvalidAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TMSendDataToRFD                                     72    64      8  325143
                                            116 BANK0      8     0      8
                                              0 BANK1     64    64      0
           _NetworkPrepareSendPacket
            _TMSendFormedPacketToRFD
 ---------------------------------------------------------------------------------
 (4) _TMSendFormedPacketToRFD                             15     8      7  301019
                                            101 BANK0     15     8      7
          _BroadcastManagerDelaySend
             _GetRouteAddressOfChild
            _LE_RemoveNeighborDevice
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
                 _isBroadcastAddress
                      _isSameAddress
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerInvalidateTunnel                        8     6      2   38583
                                             33 BANK0      8     6      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerGetTunnel                              22    20      2   57062
                                             75 BANK0     22    20      2
                   _MSTickGetDiffNow
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TMSendFormedPacketTowardsCoordinator                11     5      6   26492
                                             42 BANK0     11     5      6
                    _NetworkHasRoute
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LE_RemoveNeighborDevice                              6     4      2   49265
                                             55 BANK0      6     4      2
                      _RouterEvicted
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _GetRouteAddressOfChild                               6     4      2   33941
                                             43 BANK0      6     4      2
                 _CoordinatorAddress
           _LE_GetNeighborDeviceType
     _RoutingTableFindDeviceOrParent
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _RoutingTableFindDeviceOrParent                      10     8      2   22110
                                             33 BANK0     10     8      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LE_GetNeighborDeviceType                             6     4      2     259
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _CoordinatorAddress                                   2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _BroadcastManagerDelaySend                           15     9      6   39666
                                             63 BANK0     15     9      6
                        _AddMSToTick
                          _MSTickGet
           _isNetworkSecurityEnabled (ARG)
                               _krnd
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AddMSToTick                                         16     4     12     560
                                             47 BANK0     16     4     12
                          _MSTickGet (ARG)
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (5) _NetworkDataArrivedEvent                              7     0      7   12895
                                             27 BANK0      7     0      7
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IsNetworkDevice                                     18    15      3   60249
                                             47 BANK0     18    15      3
                          _MSTickGet
              _NetworkAddressSizeGet
                   _isInvalidAddress
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _DeviceManagerGetDeviceData                          20    12      8   27702
                                             33 BANK0     20    12      8
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _NetworkDiscoveredEvent                              12     8      4    1154
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (4) _LE_processReceivedMessage                           16    10      6  123850
                                             63 BANK0     15     9      6
              _NetworkAddressSizeGet
           _RouteManagerShouldInsert
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
           _le_findRandomNeighborIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
          _le_updateNeighborEntryIdx
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _le_updateNeighborEntryIdx                            6     4      2   18739
                                             57 BANK0      6     4      2
                 _le_initNeighborIdx
          _le_updateNeighborTableEst
 ---------------------------------------------------------------------------------
 (6) _le_updateNeighborTableEst                           18    16      2   16215
                                             40 BANK0     17    15      2
                            ___lldiv
                            ___lwdiv
                      _isSameAddress
                      _le_computeETX
                       _le_updateETX
 ---------------------------------------------------------------------------------
 (7) _le_updateETX                                         8     4      4    1862
                                             32 BANK0      8     4      4
                            ___lwdiv
                      _le_computeETX (ARG)
 ---------------------------------------------------------------------------------
 (7) _le_computeETX                                        5     3      2    1058
                                             27 BANK0      5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     872
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     826
                                             19 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _le_initNeighborIdx                                   5     3      2    1110
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _le_findWorstNeighborIdx                             15    13      2   10458
                                             33 BANK0     15    13      2
            _NetworkGetParentAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (5) _le_findRandomNeighborIdx                            10     8      2   11434
                                             36 BANK0     10     8      2
            _NetworkGetParentAddress
                            ___lwmod
                      _isSameAddress
                               _krnd
 ---------------------------------------------------------------------------------
 (6) _le_findEmptyNeighborIdx                              8     6      2     234
                                             19 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _RouteManagerShouldInsert                            15    13      2   14751
                                             40 BANK0     15    13      2
            _NetworkGetParentAddress
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerGetDeviceType                           7     5      2   10286
                                             33 BANK0      7     5      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerBufferDeviceData                       19    11      8   18747
                                             31 BANK0     19    11      8
              _NetworkAddressSizeGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _BlinkRedLED                                          0     0      0     410
                         _LEDCommand
 ---------------------------------------------------------------------------------
 (5) _LEDCommand                                           3     2      1     410
                                             19 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _TimeTickISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NetworkManagerTask                                  25    25      0  763168
                                            115 BANK0      4     4      0
                                             68 BANK1     21    21      0
                  _BeaconManagerTask
               _BroadcastManagerTask
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                _MiApp_IsNetworkBusy
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                _RMRoutingTableCount
          _RouteManagerPerformUpdate
                   _RouteManagerTask
                      _RouterEvicted
               _TransportManagerTask
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                               _krnd
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _TransportManagerTask                                72    72      0  168177
                                            101 BANK0      4     4      0
                                              0 BANK1     68    68      0
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                    _NetworkGetPANID
            _NetworkGetParentAddress
                    _NetworkHasRoute
           _NetworkPrepareSendPacket
                      _RouterEvicted
                             _memcpy
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _radioUnicast                                         9     1      8   40424
                                             92 BANK0      9     1      8
                    _NetworkGetPANID (ARG)
            _NetworkGetParentAddress (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
 ---------------------------------------------------------------------------------
 (6) _RouterEvicted                                        8     6      2   37795
                                             47 BANK0      8     6      2
              _NetworkGetMyRouteInfo
            _NetworkGetParentAddress (ARG)
          _RouteManagerRequestUpdate
                      _isSameAddress
                      _routeInfoInit
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (7) _routingTableFind                                     7     5      2   14596
                                             40 BANK0      7     5      2
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _routeInfoInit                                        2     0      2   12090
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (7) _RouteManagerRequestUpdate                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NetworkPrepareSendPacket                            11     2      9   21164
                                             31 BANK0     11     2      9
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
                    _NetworkSequence
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _NetworkSequence                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CoordinatorGenericAddress                            2     0      2   11759
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (4) _RouteManagerTask                                     0     0      0  114809
                          _MSTickGet
                   _MSTickGetDiffNow
          _RouteManagerPerformUpdate
 ---------------------------------------------------------------------------------
 (5) _RouteManagerPerformUpdate                           18    18      0   80068
                                             51 BANK0     18    18      0
               _BeaconManagerTrigger
                   _LELinkQualityGet
                        _LE_ClearDLQ
                     _LE_PinNeighbor
                   _LE_UnpinNeighbor
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
            _TransportManagerNoRoute
         _TransportManagerRouteFound
                   _isInvalidAddress
                      _isSameAddress
               _passLinkEtxThreshold
 ---------------------------------------------------------------------------------
 (6) _passLinkEtxThreshold                                 2     0      2     284
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _TransportManagerRouteFound                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TransportManagerNoRoute                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _LE_UnpinNeighbor                                     7     5      2   11327
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _LE_PinNeighbor                                       7     5      2   11442
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _LE_ClearDLQ                                          9     7      2   11417
                                             37 BANK0      9     7      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _BeaconManagerTrigger                                 0     0      0   17344
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (4) _RMRoutingTableCount                                  2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _MiApp_IsNetworkBusy                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BroadcastManagerTask                                14    14      0   77934
                                             99 BANK0     14    14      0
                          _MSTickGet
                    _NetworkGetPANID
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (4) _BeaconManagerTask                                    0     0      0  171579
                          _MSTickGet
                   _MSTickGetDiffNow
                   _netDecayInterval
                  _networkSendBeacon
 ---------------------------------------------------------------------------------
 (5) _networkSendBeacon                                   18    18      0  119494
                                             99 BANK0     16    16      0
               _LEAppendNeighborInfo
                   _LELinkQualityGet
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
                    _NetworkGetPANID
                    _NetworkHasRoute
         _NetworkManagerGetMyAddress
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                             _memcpy
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (5) _radioBroadcast                                       7     1      6   49019
                                             92 BANK0      7     1      6
                    _NetworkGetPANID (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
                             _memset
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          14     8      6   36028
                                             78 BANK0     14     8      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    12     4      8   34568
                                             66 BANK0     12     4      8
                            _CCM_Enc
                           _TxPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            24    23      1    8159
                                             39 BANK0     23    22      1
                            _DelayMs
                     _MiWi_TickGetMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            2     2      0     138
                                             21 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _CCM_Enc                                             11     5      6    7942
                                             55 BANK0     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (5) _isNetworkSecurityEnabled                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkManagerGetMyAddress                           2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _NetworkGetPANID                                      2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _NetworkGetMyRouteInfo                                2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _LELinkQualityGet                                     9     5      4   12388
                                             37 BANK0      9     5      4
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _le_findIdx                                           4     2      2   11054
                                             33 BANK0      4     2      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _LEAppendNeighborInfo                                18    14      4   20030
                                             36 BANK0     18    14      4
              _NetworkAddressSizeGet
                            ___lwdiv
                            ___lwmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     808
                                             31 BANK0      5     1      4
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1494
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _netDecayInterval                                     0     0      0   17344
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (6) _MSTickGetDiffNow                                    28    20      8   18155
                                             47 BANK0     28    20      8
                          _MSTickGet
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ReceivedPacket                                21    21      0   36426
                                             68 BANK0     21    21      0
                            _CCM_Dec
                     _MiWi_TickGetMs
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _CCM_Dec                                             13     7      6    7942
                                             55 BANK0     13     7      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (9) _CTR                                                 13     6      7    3228
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (9) _CBC_MAC                                             13     6      7    3228
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (10) _encode                                             23    19      4    1420
                                             19 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (3) _AddNodeToNetworkTable                               12     8      4   39143
                                             33 BANK0     12     8      4
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        4     0      4    9768
                                             29 BANK0      4     0      4
                 _CoordinatorAddress (ARG)
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
            _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
                             _memcmp
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
             _NetworkReleaseUserData
 ---------------------------------------------------------------------------------
 (3) _NetworkReleaseUserData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   5     5      0   70797
                                             46 BANK0      4     4      0
                _MiApp_SetAddressPan
                         _MiMAC_Init
               _NetworkSetDeviceType
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSetDeviceType                                 1     1      0      31
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           7     4      3   24293
                                             39 BANK0      7     4      3
                            _DelayMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                               _krnd
                           _krndInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _krndInit                                             6     4      2     259
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         3     3      0     240
                                             21 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      48
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_IsMemberOfNetwork                              0     0      0    4418
                  _IsMemberOfNetwork
 ---------------------------------------------------------------------------------
 (4) _IsMemberOfNetwork                                    0     0      0    4418
                    _NetworkHasRoute
 ---------------------------------------------------------------------------------
 (4) _NetworkHasRoute                                      2     2      0    4418
                                             40 BANK0      2     2      0
               _NetworkGetDeviceType
                   _isInvalidAddress
 ---------------------------------------------------------------------------------
 (5) _isInvalidAddress                                     2     0      2    4304
                                             38 BANK0      2     0      2
            _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress
 ---------------------------------------------------------------------------------
 (6) _isBroadcastAddress                                  11     9      2    2810
                                             27 BANK0     11     9      2
              _NetworkAddressSizeGet
                             _memcmp
 ---------------------------------------------------------------------------------
 (1) _memcmp                                               8     2      6    1674
                                             19 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _MiApp_GetParentAddress                               2     0      2       0
                                             21 BANK0      2     0      2
            _NetworkGetParentAddress
 ---------------------------------------------------------------------------------
 (5) _NetworkGetParentAddress                              2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                            5     4      1  206975
                                             58 BANK0      5     4      1
                _MiApp_SetAddressPan
                   _MiApp_SetChannel
                        _NetworkInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkInit                                          7     2      5  151012
                                             51 BANK0      7     2      5
                  _BeaconManagerInit
               _BroadcastManagerInit
                          _CacheInit
                  _DeviceManagerInit
                  _LinkEstimatorInit
              _NetworkAddressSizeGet
               _NetworkSetAddressPAN
                   _RouteManagerInit
               _TransportManagerInit
                  _TunnelManagerInit
                               _krnd
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TunnelManagerInit                                    0     0      0   11759
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TransportManagerInit                                 0     0      0   11759
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerInit                                     0     0      0   28345
                          _MSTickGet
                             _memset
 ---------------------------------------------------------------------------------
 (3) _LinkEstimatorInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerInit                                    0     0      0   11759
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CacheInit                                            0     0      0   11759
                             _memset
 ---------------------------------------------------------------------------------
 (3) _BroadcastManagerInit                                 0     0      0   11759
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6   11759
                                             19 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _BeaconManagerInit                                    0     0      0   17434
                               _krnd
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (6) _netResetInterval                                     0     0      0   17344
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (7) _netChooseAdvertiseTime                               4     4      0   17344
                                             47 BANK0      4     4      0
                          _MSTickGet
                            ___llmod
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _krnd                                                12     8      4      90
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     566
                                             31 BANK0      9     1      8
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (7) _MSTickGet                                           16     8      8   16586
                                             31 BANK0     16     8      8
                 _TimerEnterCritical
                  _TimerExitCritical
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TimerExitCritical                                    0     0      0       0
                        _TimerEnable
 ---------------------------------------------------------------------------------
 (9) _TimerEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TimerEnterCritical                                   0     0      0       0
                       _TimerDisable
 ---------------------------------------------------------------------------------
 (9) _TimerDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     2     2      0    4358
                                             28 BANK0      2     2      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    4245
                                             25 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            1     1      0    2020
                                             24 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         3     1      2    1978
                                             21 BANK0      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIPut                                              2     2      0      48
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MiApp_SetAddressPan                                  6     2      4   34586
                                             35 BANK0      6     2      4
               _NetworkSetAddressPAN
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkSetAddressPAN                                 4     0      4   17106
                                             31 BANK0      4     0      4
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6   16490
                                             21 BANK0     10     4      6
              _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
 ---------------------------------------------------------------------------------
 (5) _NetworkGetDeviceType                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NetworkAddressSizeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDManagerTask                                      12    12      0    2136
                                             39 BANK0     12    12      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _LCDUpdate                                            1     1      0    3756
                                             39 BANK0      1     1      0
                            _DelayUS
                            _LCDInit
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    2686
                            _DelayMs
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIPut2                                              2     2      0      34
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _DelayMs                                             12     8      4    2621
                                             27 BANK0     12     8      4
                            _DelayUS
 ---------------------------------------------------------------------------------
 (10) _DelayUS                                             8     4      4     580
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ButtonTask                                           1     1      0     330
                                             39 BANK0      1     1      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (9) _MiWi_TickGetMs                                       8     4      4     150
                                             31 BANK0      8     4      4
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (10) _MiWi_TickGet                                       12     8      4     102
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _HighISR                                            29    29      0    4742
                                             43 COMRAM    10    10      0
                                              0 BANK0     19    19      0
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (15) i2_TxPacket                                         24    23      1    1843
                                             20 COMRAM    23    22      1
                          i2_DelayMs
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
                             i2_krnd
 ---------------------------------------------------------------------------------
 (16) i2_krnd                                             12     8      4      65
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (16) i2_WriteFIFO                                         2     2      0      99
                                              2 COMRAM     2     2      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SetRFMode                                         1     1      0     371
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (17) i2_RegisterSet                                       3     1      2     340
                                              2 COMRAM     3     1      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_RegisterRead                                      3     3      0     170
                                              2 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIPut                                            2     2      0      34
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) i2_MiWi_TickGetMs                                    8     4      4     105
                                             12 COMRAM     8     4      4
                     i2_MiWi_TickGet
 ---------------------------------------------------------------------------------
 (17) i2_MiWi_TickGet                                     12     8      4      71
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (16) i2_DelayMs                                          12     8      4     169
                                              8 COMRAM    12     8      4
                          i2_DelayUS
 ---------------------------------------------------------------------------------
 (17) i2_DelayUS                                           8     4      4     103
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _HardwareInit
   _InitSymbolTimer
   _LCDUpdate
     _DelayUS
     _LCDInit
       _DelayMs
         _DelayUS
       _LCD_WriteCmd
         _SPIPut2
     _LCD_WriteCmd
       _SPIPut2
     _LCD_WriteData
       _SPIPut2
   _LEDCommand
   _LEDManagerTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _MiApp_DiscardMessage
     _NetworkReleaseUserData
   _MiApp_EstablishConnection
     _MiApp_SetAddressPan
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _NetworkInit
       _BeaconManagerInit
         _krnd
         _netResetInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
       _BroadcastManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _CacheInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _LinkEstimatorInit
       _NetworkAddressSizeGet
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouteManagerInit
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TransportManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _krnd
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_GetParentAddress
     _NetworkGetParentAddress
   _MiApp_IsMemberOfNetwork
     _IsMemberOfNetwork
       _NetworkHasRoute
         _NetworkGetDeviceType
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
   _MiApp_MessageAvailable
     _AddNodeToNetworkTable
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           _encode
         _CTR
           _encode
       _MiWi_TickGetMs
         _MiWi_TickGet
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkManagerTask
       _BeaconManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _netDecayInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
         _networkSendBeacon
           _LEAppendNeighborInfo
             _NetworkAddressSizeGet
             ___lwdiv
             ___lwmod
               _krnd (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkGetPANID
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isNetworkSecurityEnabled
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
       _BroadcastManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _memset
           _NetworkAddressSizeGet (ARG)
         _radioBroadcast
           _NetworkGetPANID (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _memset (ARG)
             _NetworkAddressSizeGet (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _MSTickGet
         _TimerEnterCritical
           _TimerDisable
         _TimerExitCritical
           _TimerEnable
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MSTickGetDiffNow
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
       _MiApp_IsNetworkBusy
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RMRoutingTableCount
       _RouteManagerPerformUpdate
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LELinkQualityGet
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_ClearDLQ
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_UnpinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
         _TransportManagerNoRoute
         _TransportManagerRouteFound
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _passLinkEtxThreshold
       _RouteManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _TransportManagerTask
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
       _isInvalidAddress
         _NetworkGetParentAddress (ARG)
         _isBroadcastAddress (ARG)
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _krnd
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
     _TimeTickISR
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
     _radioReceivedPacket
       _BlinkRedLED
         _LEDCommand
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _GetRouteAddressOfChild
         _CoordinatorAddress
         _LE_GetNeighborDeviceType
         _RoutingTableFindDeviceOrParent
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _IsMemberOfNetwork
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
       _IsNetworkDevice
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _LE_RemoveNeighborDevice
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _LE_processReceivedMessage
         _NetworkAddressSizeGet
         _RouteManagerShouldInsert
           _NetworkGetParentAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findEmptyNeighborIdx
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_findRandomNeighborIdx
           _NetworkGetParentAddress
           ___lwmod
             _krnd (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _krnd
         _le_findWorstNeighborIdx
           _NetworkGetParentAddress
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_initNeighborIdx
         _le_updateNeighborEntryIdx
           _le_initNeighborIdx
           _le_updateNeighborTableEst
             ___lldiv
             ___lwdiv
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _le_computeETX
               ___awdiv
             _le_updateETX
               ___lwdiv
               _le_computeETX (ARG)
                 ___awdiv
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkDiscoveredEvent
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkManagerGetMyAddress
       _NetworkManagerProcessIncomingData
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _DeviceManagerGetDeviceData
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkDataArrivedEvent
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _TMSendDataToRFD
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSendDiscoverResponse
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled
         _memset
           _NetworkAddressSizeGet (ARG)
       _RouteManagerProcessReceive
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LE_InsertNeighbor
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet
         _RouteManagerSetNeighborCongested
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _routingTableUpdateEntry
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
           _routingTableFind
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _TunnelManagerGetTunnel
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInvalidateTunnel
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerSetTunnel
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _crc32
       _isBroadcastAddress
         _NetworkAddressSizeGet
         _memcmp
           _NetworkAddressSizeGet (ARG)
       _isKnownPacket
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _memcmp
           _NetworkAddressSizeGet (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioDiscardPacket
         _MiMAC_DiscardPacket
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
   _MiApp_ProtocolInit
     _MiApp_SetAddressPan
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiMAC_Init
       _DelayMs
         _DelayUS
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
       _krnd
       _krndInit
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _NetworkSetDeviceType
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _NetworkReleaseUserData
     _MiApp_MessageAvailable
       _AddNodeToNetworkTable
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             _encode
           _CTR
             _encode
         _MiWi_TickGetMs
           _MiWi_TickGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MiWi_TickGetMs
         _MiWi_TickGet
       _NetworkManagerTask
         _BeaconManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _netDecayInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
           _networkSendBeacon
             _LEAppendNeighborInfo
               _NetworkAddressSizeGet
               ___lwdiv
               ___lwmod
                 _krnd (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkGetPANID
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isNetworkSecurityEnabled
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
             _radioBroadcast
               _NetworkGetPANID (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _memset (ARG)
                 _NetworkAddressSizeGet (ARG)
         _BroadcastManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _MiApp_IsNetworkBusy
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RMRoutingTableCount
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
         _RouteManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _RouteManagerPerformUpdate
             _BeaconManagerTrigger
               _netResetInterval
                 _netChooseAdvertiseTime
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   ___llmod
                     _krnd (ARG)
                   _krnd
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_ClearDLQ
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_PinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_UnpinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkManagerGetMyAddress
             _TransportManagerNoRoute
             _TransportManagerRouteFound
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _TransportManagerTask
           _CoordinatorGenericAddress
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isNetworkSecurityEnabled
         _krnd
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
       _TimeTickISR
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioReceivedPacket
         _BlinkRedLED
           _LEDCommand
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _DeviceManagerBufferDeviceData
           _NetworkAddressSizeGet
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _DeviceManagerGetDeviceType
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _GetRouteAddressOfChild
           _CoordinatorAddress
           _LE_GetNeighborDeviceType
           _RoutingTableFindDeviceOrParent
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _IsMemberOfNetwork
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _LE_RemoveNeighborDevice
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_processReceivedMessage
           _NetworkAddressSizeGet
           _RouteManagerShouldInsert
             _NetworkGetParentAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findRandomNeighborIdx
             _NetworkGetParentAddress
             ___lwmod
               _krnd (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _krnd
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
           _le_updateNeighborEntryIdx
             _le_initNeighborIdx
             _le_updateNeighborTableEst
               ___lldiv
               ___lwdiv
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _le_computeETX
                 ___awdiv
               _le_updateETX
                 ___lwdiv
                 _le_computeETX (ARG)
                   ___awdiv
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkDiscoveredEvent
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
         _NetworkManagerProcessIncomingData
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _DeviceManagerGetDeviceData
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _IsNetworkDevice
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkDataArrivedEvent
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _TMSendDataToRFD
             _NetworkPrepareSendPacket
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _NetworkSequence (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TMSendFormedPacketToRFD
               _BroadcastManagerDelaySend
                 _AddMSToTick
                   _MSTickGet (ARG)
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _krnd (ARG)
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _isNetworkSecurityEnabled (ARG)
                 _krnd (ARG)
                 _memcpy (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _GetRouteAddressOfChild
                 _CoordinatorAddress
                 _LE_GetNeighborDeviceType
                 _RoutingTableFindDeviceOrParent
                   _NetworkAddressSizeGet
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _LE_RemoveNeighborDevice
                 _RouterEvicted
                   _NetworkGetMyRouteInfo
                   _NetworkGetParentAddress (ARG)
                   _RouteManagerRequestUpdate (ARG)
                   _isSameAddress (ARG)
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _routeInfoInit (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _routingTableFind (ARG)
                     _isInvalidAddress
                       _NetworkGetParentAddress (ARG)
                       _isBroadcastAddress (ARG)
                         _NetworkAddressSizeGet
                         _memcmp
                           _NetworkAddressSizeGet (ARG)
                     _isSameAddress
                       _CoordinatorAddress (ARG)
                       _CoordinatorGenericAddress (ARG)
                         _NetworkAddressSizeGet
                         _memset
                           _NetworkAddressSizeGet (ARG)
                       _NetworkAddressSizeGet (ARG)
                       _NetworkGetParentAddress (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                       _memcmp (ARG)
                         _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType
               _NetworkGetPANID
               _NetworkGetParentAddress
               _NetworkManagerGetMyAddress
               _TMSendFormedPacketTowardsCoordinator
                 _NetworkHasRoute
                   _NetworkGetDeviceType
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _TunnelManagerGetTunnel
                 _MSTickGetDiffNow
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _TunnelManagerInvalidateTunnel
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _isBroadcastAddress
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _radioUnicast
                 _NetworkGetPANID (ARG)
                 _NetworkGetParentAddress (ARG)
                 _SendPacket (ARG)
                   _MiMAC_SendPacket
                     _CCM_Enc
                       _CBC_MAC
                         _encode
                       _CTR
                         _encode
                     _TxPacket
                       _DelayMs
                         _DelayUS
                       _MiWi_TickGetMs
                         _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                       _krnd
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                 _isNetworkSecurityEnabled (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkSendDiscoverResponse
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled
           _memset
             _NetworkAddressSizeGet (ARG)
         _RouteManagerProcessReceive
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LE_InsertNeighbor
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findEmptyNeighborIdx
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_findWorstNeighborIdx
               _NetworkGetParentAddress
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_initNeighborIdx
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _RouteManagerSetNeighborCongested
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _routingTableUpdateEntry
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
             _routingTableFind
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
         _TMSendFormedPacketTowardsCoordinator
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TunnelManagerGetTunnel
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerInvalidateTunnel
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerSetTunnel
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _crc32
         _isBroadcastAddress
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
         _isKnownPacket
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _memcmp
             _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioDiscardPacket
           _MiMAC_DiscardPacket
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkSendDiscoverRequest
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkAddressSizeGet
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_SetAddressPan
     _NetworkSetAddressPAN
       _NetworkAddressSizeGet
       _NetworkGetDeviceType
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_UnicastAddress
     _NetworkUnicastData
       _CoordinatorAddress
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _NetworkGetDeviceType
       _NetworkManagerGetMyAddress
       _TMSendDataToRFD
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _Read_MAC_Address
     _EEPROMRead
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _isButtonPressed
   _memcmp
     _NetworkAddressSizeGet (ARG)
   _memset
     _NetworkAddressSizeGet (ARG)
   _sprintf
     ___lwdiv
     ___wmul
     _isdigit

 _HighISR (ROOT)
   i2_MiWi_TickGetMs
     i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DelayMs
       i2_DelayUS
     i2_MiWi_TickGetMs
       i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut
     i2_krnd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     324      35       21.3%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      DC      22       85.9%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FE      20       99.2%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      F2      18       94.5%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      EF      14       93.4%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E6      12       89.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100     1E      81      10       50.4%
BITBANK1           100      0       0       7        0.0%
BANK1              100     AE      FD       8       98.8%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4E       1       83.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     7D6       6        0.0%
DATA                 0      0     AFA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 21:34:13 2016

                        isKnownPacket@emptyindex 00C6                                       i2_TxPacket 45D0  
                               ?_isButtonPressed 0001                         ??_TunnelManagerGetTunnel 00AD  
                             ?_networkSendBeacon 0001                             NetworkManagerTask@sz 0157  
                            ??_BeaconManagerInit 0093                               ??_routingTableFind 008A  
                                AddMSToTick@tick 008F                              ??_BeaconManagerTask 00D3  
                                              l5 721E                                                l6 7210  
                                    ?_LEDCommand 0073                                                _c 01AE  
               __size_of_le_findWorstNeighborIdx 012C                                                _w 0047  
                                              _x 01EC                                                _y 004B  
                                              _z 01F0                          netChooseAdvertiseTime@t 008F  
                            ?_le_initNeighborIdx 0073                             ?_MiMAC_DiscardPacket 0001  
                                 _LEDManagerTask 12D4                 __end_of_RouteManagerShouldInsert 55C4  
                                 ?_isSameAddress 007D                              ?_CoordinatorAddress 0073  
                          _NetworkAddressSizeGet 765A                           __size_of_routeInfoInit 0056  
                   __end_of_BroadcastManagerInit 74A0                                               l80 7452  
                                             l91 74CA                         ?_LE_RemoveNeighborDevice 0097  
                                             l78 7448                                               l89 74C0  
                      __size_of_MSTickGetDiffNow 0080                     __end_of_BroadcastManagerTask 311A  
               MiApp_SearchConnection@ChannelMap 01AA                                     ___awdiv@sign 0078  
                   __size_of_MiApp_SetAddressPan 004E                              __end_of_BlinkRedLED 7598  
                         NetworkManagerTask@data 0144                              ___wmul@multiplicand 0075  
            __size_of_TransportManagerRouteFound 0002                       ?_BroadcastManagerDelaySend 009F  
                              _ActiveScanResults 03CD                                     __CFG_CP0$OFF 000000  
                  NetworkDataArrivedEvent@source 007B                           ??_NetworkGetDeviceType 0073  
                            ??_networkSendBeacon 00C3                              _RMRoutingTableCount 75F2  
                                     _MiMAC_Init 4F50               __size_of_RouteManagerRequestUpdate 0008  
          DeviceManagerBufferDeviceData@isFormed 0086                        __size_of_netResetInterval 0018  
                                            l125 6E10                                              l261 1314  
                                            l254 12EE                                              l263 13CA  
                                            l280 14A0                                              l602 4A2C  
                                            l267 13A0                                              l293 1548  
                                            l285 14B8                                              l392 2A14  
                                            l545 5D3C                                              l730 4352  
                                            l299 15D6                                              l731 4354  
                                            l803 35F0                                              l740 43CA  
                                            l821 107E                                   ?i2_RegisterSet 0003  
                                            l822 1082                                              l823 1100  
                                            l824 110C                                              l816 0FF8  
                                            l826 1154                                              l747 4404  
                                            l936 569E                                              l793 3490  
                                            l795 3504                                              l949 5AF8  
                                            l990 1EB8                                              l799 355C  
                                            _GIE 007F97                                              _CTR 568A  
                                            i2l5 72C8                                              i2l6 72BC  
                                            _TMQ 0600            DeviceManagerBufferDeviceData@isSecure 0085  
               __end_of_le_findRandomNeighborIdx 347E                                              _key 0251  
                                            _nst 01D7                                  __end_of_CBC_MAC 5B78  
                        NetworkManagerTask@delay 0228                                    _NewBestParent 025D  
                                            prod 000FF3                                              wreg 000FE8  
                   NetworkPrepareSendPacket@nHdr 0088                        NetworkUnicastData@address 0140  
                                   __CFG_IESO$ON 000000                     NetworkPrepareSendPacket@data 0084  
                                __end_of_CCM_Dec 568A                                  __end_of_CCM_Enc 5800  
                          __end_of_mySecurityKey FF95                        _le_updateNeighborEntryIdx 40A8  
                                    i2_WriteFIFO 73C0                     NetworkPrepareSendPacket@size 0086  
                 RouteManagerProcessReceive@data 009F                                ?_RouteManagerInit 0001  
              __end_of_MiApp_EstablishConnection 5D58                                ?_RouteManagerTask 0001  
                 RouteManagerProcessReceive@from 00A6                        _le_updateNeighborTableEst 1BEE  
                                __end_of_LCDInit 4E36                                      le_findIdx@i 0084  
                                           ?_CTR 008A                        __end_of_BeaconManagerInit 7402  
                                           CTR@i 0095                                             CTR@j 0096  
                           ??_le_initNeighborIdx 0075                        __end_of_BeaconManagerTask 540E  
                                 ?_le_computeETX 007B                             ??_CoordinatorAddress 0075  
       __end_of_RouteManagerSetNeighborCongested 7688        __size_of_RouteManagerSetNeighborCongested 0002  
             ??_RouteManagerSetNeighborCongested 0076                ?_RouteManagerSetNeighborCongested 0073  
               _RouteManagerSetNeighborCongested 7686                                             l1011 1F9E  
                                           l1023 2078                                             l1024 207C  
                                           l1029 20C0                                             l1136 0940  
                                           l2051 54DC                                             l1342 5AC2  
                             ??_RouteManagerInit 008F                                             l1290 6710  
                                           l1532 6EBE                                             l1285 66D2  
                                           l1518 6C8E                                             l1710 2310  
                                           l1712 233C                                             l2185 7190  
                                           l1561 3380                                             l1482 3B12  
                                           l1549 40D4                                             l1661 256C  
                    __end_of_radioReceivedPacket 0B16                                             l1568 3474  
                                           l2618 6D70                                             l2628 6EFC  
                                           l1668 409E                                             l2565 6416  
                                           l2575 676A                                             l1990 7062  
                                           l1989 7040                           LELinkQualityGet@offset 0087  
                                ?i2_RegisterRead 0001                               ??_RouteManagerTask 00AB  
                                           STR_1 FFCB                                             STR_2 FF95  
                                           STR_3 FFA8                                             STR_4 FFF4  
                                           STR_5 FFD9                                             STR_6 FFEB  
                                           STR_7 FFF2                                             STR_8 FFD4  
                                           STR_9 FFE4                 __size_of_NetworkGetParentAddress 000A  
                     ??_LE_GetNeighborDeviceType 0075                                      main@counter 027B  
                                           i2l80 754E                                             i2l78 7544  
                                           _TMR0 000FD6                      RouteManagerShouldInsert@hdr 0088  
                     NetworkUnicastData@mAddress 00DC                                             _RbcQ 08DC  
                     MiApp_UnicastAddress@Origin 0149                                    __CFG_FCMEN$ON 000000  
      RouteManagerSetNeighborCongested@congested 0075                          ?_GetRouteAddressOfChild 008B  
                           ?_RMRoutingTableCount 0073                       MiMAC_SetChannel@offsetFreq 0079  
                                           _main 287A                                  __end_of_SPIGet2 75DE  
                               ?_NetworkGetPANID 0073                       __end_of_TimerEnterCritical 7680  
                                           _list 0800                                             _krnd 3DDE  
                      __end_of_networkSendBeacon 2CF8                           ??_BeaconManagerTrigger 0093  
                       ??_TunnelManagerSetTunnel 0093                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             indf0 000FEF  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                                           btemp 004F                                  __end_of_SPIPut2 74D0  
                                  __CFG_T1DIG$ON 000000                   __end_of_NetworkReleaseUserData 766C  
                              _LE_InsertNeighbor 6034                                             prodh 000FF4  
                    NetworkDataArrivedEvent@data 007D                       ??_isNetworkSecurityEnabled 0073  
                                           prodl 000FF3                           __end_of_LE_PinNeighbor 6FF6  
                                           start 049E                               __size_of_LCDUpdate 00B6  
                     le_updateNeighborTableEst@i 0096                                   ?_RouterEvicted 008F  
                                  LE_ClearDLQ@ne 008A                       le_updateNeighborTableEst@n 0088  
                TMSendFormedPacketToRFD@isSecure 00CB                         NetworkManagerTask@tStart 020C  
                    NetworkDataArrivedEvent@size 007F                                  __end_of_DelayUS 7232  
                               ?_NetworkHasRoute 0001                                  __end_of_DelayMs 5DEE  
                     __size_of_IsMemberOfNetwork 0004                               ?_LE_InsertNeighbor 0097  
                            __size_of_EEPROMRead 0032                                    ?_LCD_WriteCmd 0001  
                                 ?_isKnownPacket 00AB                                  __end_of_HighISR 049E  
                                  _LCD_WriteData 74FC                 __size_of_MiApp_IsMemberOfNetwork 0004  
                                 _InitConfigRegs FEFD                           __end_of_LEDManagerTask 163A  
                                   ___param_bank 000010                          LELinkQualityGet@address 0085  
                          ??_MiMAC_DiscardPacket 0073                                            ??_CTR 0091  
                               CCM_Enc@headerLen 0099                       NetworkDiscoveredEvent@rssi 0075  
            __size_of_NetworkManagerGetMyAddress 000C                                       _DeviceType 01F6  
                                  ?_le_updateETX 0080                     __end_of_MiApp_DiscardMessage 764E  
                            ??_LE_InsertNeighbor 009A                                    __CFG_PLLDIV$2 000000  
                       _radioReceivedPacket$5364 0199                         isKnownPacket@oldestindex 00C2  
                     NetworkUnicastData@isSecure 0146                                            l16030 61AA  
                                          l16200 6D4C                                            l17000 552C  
                                          l14192 7154                                            l16122 705E  
                                          l16050 5C78                                            l16106 6F3E  
                                          l15500 69FE                                            l16052 5C88  
                                          l16220 6BD6                                            l17012 55AC  
                                          l17004 5546                                            l17100 32DC  
                                          l16140 60FE                                            l16046 5C4C  
                                          l16214 6BB6                                            l17014 55B0  
                                          l16142 6138                                            l14198 7166  
                                          l14374 7418                                            l15600 6594  
                                          l16208 6D66                                            l16160 62E4  
                                          l16072 5A7E                                            l16064 5A3E  
                                          l16304 4344                                            l15506 6A36  
                                          l17050 2C3E                                            l17018 55C0  
                                          l16170 6300                                            l16154 62D4  
                                          l17210 3710                                            l16074 5AA2  
                                          l16330 408E                                            l15612 65C4  
                                          l15604 65A4                                            l15508 6A3E  
                                          l16092 6940                                            l17044 2BC8  
                                          l17124 33B2                                            l16404 63CA  
                                          l17204 36DC                                            l16252 3AA4  
                                          l16076 5AB4                                            l16324 4006  
                                          l15710 7278                                            l16086 68FC  
                                          l16406 63D6                                            l16166 62F4  
                                          l16182 6324                                            l17214 371E  
                                          l16262 3AE0                                            l16238 3960  
                                          l16078 5AB8                                            l16342 68D0  
                                          l16318 3F80                                            l17310 231A  
                                          l15608 65B4                                            l18200 31A4  
                                          l17232 55D0                                            l16432 6EF2  
                                          l16424 6ED4                                            l16096 694A  
                                          l17048 2C00                                            l17136 3464  
                                          l16416 6408                                            l16408 63DA  
                                          l16168 62FC                                            l16256 3ACA  
                                          l16272 4210                                            l17304 2286  
                                          l18104 08C0                                            l18024 05D8  
                                          l15618 65D2                                            l15706 7268  
                                          l18210 31E8                                            l15538 3CA0  
                                          l15634 56A0                                            l16426 6EDC  
                                          l16442 685A                                            l16186 6330  
                                          l16178 631A                                            l16258 3AD0  
                                          l16346 68EC                                            l17410 45AE  
                                          l17314 232A                                            l18122 098C  
                                          l18106 08E2                                            l15724 6AEE  
                                          l15660 5740                                            l17228 55C6  
                                          l16196 6D40                                            l16428 6EE0  
                                          l15820 576C                                            l15740 437A  
                                          l17084 41A0                                            l17076 4152  
                                          l16372 5F04                                            l17412 45BA  
                                          l17324 23A6                                            l18044 0674  
                                          l18036 063C                                            l18028 0612  
                                          l15718 6ABA                                            l18206 31D8  
                                          l17254 5680                                            l16198 6D48  
                                          l15830 57A6                                            l15806 4484  
                                          l17086 41DC                                            l16286 4244  
                                          l16278 4214                                            l17406 4568  
                                          l17318 2344                                            l18054 06D0  
                                          l18310 5230                                            l15648 56DE  
                                          l17248 5644                                            l16560 3B20  
                                          l15808 448E                                            l15744 4390  
                                          l15912 35C8                                            l16448 687A  
                                          l17600 6DA6                                            l16624 4BF6  
                                          l17088 41E2                                            l16368 5EA2  
                                          l17440 23CE                                            l17264 5B86  
                                          l18072 078A                                            l18064 0752  
                                          l18304 51FA                                            l19008 295A  
                                          l15658 573E                                            l15834 57B0  
                                          l15754 439C                                            l15906 35A8  
                                          l17610 5328                                            l17354 48E0  
                                          l17346 48A8                                            l17522 2EBA  
                                          l17506 2E4A                                            l17450 249A  
                                          l18138 0A1C                                            l18154 0A80  
                                          l19050 2A56                                            l19042 2A18  
                                          l15596 6584                                            l18412 50BA  
                                          l15692 5B70                                            l15668 5ADE  
                                          l16580 3C22                                            l15924 3614  
                                          l15852 3486                                            l17612 532E  
                                          l16476 54E0                                            l17700 0BC6  
                                          l17540 6432                                            l16708 1E90  
                                          l17364 4930                                            l17356 4904  
                                          l17196 3638                                            l16820 37E8  
                                          l17508 2E70                                            l17268 5BF6  
                                          l18084 07E8                                            l18076 07B0  
                                          l19036 29F0                                            l18502 58F2  
                                          l18422 5102                                            l18414 50C4  
                                          l18350 4FB4                                            l18334 4F72  
                                          l18190 3122                                            l15678 5AFA  
                                          l16494 656C                                            l15790 4430  
                                          l15774 43F2                                            l15918 35F4  
                                          l15926 361A                                            l15870 34D4  
                                          l17622 539E                                            l16910 1838  
                                          l16654 4D02                                            l16646 4CD8  
                                          l17374 4972                                            l16830 3872  
                                          l16750 2768                                            l17518 2E9E  
                                          l17470 2574                                            l17462 254A  
                                          l17446 2464                                            l17294 220E  
                                          l18174 0ACE                                            l18094 0844  
                                          l18182 0B12                                            l19038 29F6  
                                          l18504 5904                                            l18600 1396  
                                          l15688 5B5A                                            l16496 6574  
                                          l15792 4434                                            l15768 43E0  
                                          l17720 0D70                                            l17544 648A  
                                          l16672 6C7E                                            l16656 4D08  
                                          l16840 38BE                                            l16760 27D0  
                                          l16728 2684                                            l17288 2178  
                                          l18168 0AA8                                            l18096 0864  
                                          l18088 0826                                            l19056 2A86  
                                          l18522 594E                                            l18610 13C0  
                                          l15794 443C                                            l15778 43FA  
                                          l15890 354C                                            l17634 53F8  
                                          l17650 2F80                                            l16922 18E2  
                                          l17730 0E38                                            l17722 0D96  
                                          l17714 0C96                                            l16682 1BF0  
                                          l16850 3956                                            l16754 278A  
                                          l16738 26EC                                            l17490 2DB4  
                                          l17482 2D3E                                            l17466 255A  
                                          l17458 24FA                                            l17298 2242  
                                          l18178 0B06                                            l19058 2A8C  
                                          l18524 5960                                            l18516 5928  
                                          l18604 13A4                                            l15884 352C  
                                          l15876 34F4                                            l17660 305C  
                                          l16908 1822                                            l15972 6700  
                                          l17708 0BD6                                            l17820 19F2  
                                          l17812 19C2                                            l16668 6C50  
                                          l16836 38B0                                            l16748 274A  
                                          l16756 27A8                                            l17492 2DE6  
                                          l18460 4B68                                            l18700 6CEE  
                                          l18542 67B0                                            l15990 675C  
                                          l15982 672A                                            l17662 3068  
                                          l17646 2F2E                                            l15966 66D6  
                                          l15974 6716                                            l17734 0E70  
                                          l17718 0D18                                            l17742 0F00  
                                          l17814 19CA                                            l17806 1970  
                                          l16766 2816                                            l17494 2E10  
                                          l18552 67CE                                            l18544 67B2  
                                          l18640 14BC                                            l18632 14A4  
                                          l18616 13DC                                            l15984 6736  
                                          l18376 5016                                            l17656 3034  
                                          l16936 191E                                            l16928 1904  
                                          l16872 1664                                            l17744 0F30  
                                          l17672 0B18                                            l17840 1A98  
                                          l17824 1A20                                            l17808 1978  
                                          l16696 1D4A                                            l16776 2876  
                                          l18296 5192                                            l18464 4BA0  
                                          l18800 1F6C                                            l18538 67A8  
                                          l18570 12E4                                            l17754 5FB0  
                                          l15986 673A                                            l17930 1140  
                                          l17906 0FFA                                            l17666 3108  
                                          l17690 0BA8                                            l17674 0B1C  
                                          l16954 4EF2                                            l16946 4E64  
                                          l18466 4BBC                                            l18458 4B42  
                                          l18802 1F70                                            l18556 67D6  
                                          l18644 1536                                            l18636 14AE  
                                          l18628 1496                                            l17860 1B7C  
                                          l17836 1A88                                            l17828 1A28  
                                          l16972 6064                                            l18468 4BE2  
                                          l18820 1FE2                                            l18812 1FB4  
                                          l18558 67D8                                            l18654 154A  
                                          l18574 12F0                                            l18566 12DA  
                                          l17950 11B4                                            l17942 115E  
                                          l16886 1790                                            l17686 0B38  
                                          l17678 0B2A                                            l16966 6048  
                                          l18910 4A7C                                            l18814 1FC4  
                                          l18496 58CC                                            l18488 58C2  
                                          l18672 15DA                                            l18656 155C  
                                          l18576 1300                                            l16896 17CA  
                                          l17864 1B96                                            l17792 1934  
                                          l16976 6084                                            l18904 4A20  
                                          l18808 1FA4                                            l18824 1FF4  
                                          l18586 1316                                            l17954 11BE  
                                          l17970 123C                                            l17882 0F46  
                                          l16898 17CE                                            l17698 0BBA  
                                          l17874 1BC2                                            l18930 4AB4  
                                          l18826 201A                                            l18668 15CC  
                                          l18588 1326                                            l17892 0FEA  
                                          l17796 1942                                            l18844 2056  
                                          l18836 2030                                            l18772 1EC0  
                                          l18678 15F8                                            l18686 1602  
                                          l17982 1288                                            l17798 194A  
                                          l18926 4AAC                                            l18918 4A90  
                                          l18790 1F46                                            l18782 1EEE  
                                          l18766 1EA0                                            l18688 162A  
                                          l18864 20C6                                            l18872 2116  
                                          l18856 209E                                            l18776 1EC6  
                                          l18946 5D32                                            l17994 12C8  
                                          l18858 20A4                                            l18874 211C  
                                          l18876 2134                                            l18894 49CA  
                                          l18798 1F66                                            l18990 28DC  
                                          l18994 28FC                                            ?_main 0001  
              __end_of_BroadcastManagerDelaySend 3AE4                                  __end_of___awdiv 633A  
                                          ?_krnd 0073                                            STR_10 FFBA  
                  MiApp_EstablishConnection@Mode 009A                                  __end_of___lldiv 6428  
              TunnelManagerInvalidateTunnel@addr 0085                                            u20000 18DE  
                                          _T0CON 000FD5                                            u20050 191A  
                                ___awdiv@divisor 0075                                            u21101 5338  
                                          u20310 3390                                            u21030 2ECE  
                                __end_of___llmod 677C                                            u21121 538E  
                                          u21050 6498                                            u21131 53A8  
                                          u21151 53E8                                            u21071 6D88  
                                          u21240 3118                                            u21080 6DA6  
                                          u21400 7184                                            u20440 371E  
                                          u20450 372A                                            u20610 232A  
                                          u21091 6DB8                                            u21331 0DBE  
                                          u22300 3208                                            u21500 1A1C  
                                          u20380 3474                                            u20460 3734  
                                          u20620 2332                                            u20630 234C  
                                          u22311 71FC                                            u21191 2FFE  
                                          u21351 0E98                                            u20551 2232  
                                          u21360 0EB4                                            u21601 1BA0  
                                          u21521 1A46                                            u20641 239E  
                                          u21370 0F40                                            u21610 1BC0  
                                          u22500 6790                                            u20900 2562  
                                          u21461 19BA                                            u23045 499A  
                                          u20910 257E                                            u21551 1AB6  
                                          u20591 22E0                                            u22280 31E8  
                                          u21640 0FD8                                            u21481 19E2  
                                          u20921 260A                             main@pMemberOfNetwork 027C  
                                          u22290 31F6                                            u21491 19FC  
                                          u21900 065C                                            u21591 1B8C  
                                          u20890 255A                                            u22740 1518  
                                          u20980 2E24                                            u22840 1638  
                                          u22680 1438                                            u18115 71CE  
                                          u18300 6AE2                                            u18140 3E2E  
                                          u18116 71D0                                            u19100 4244  
                                          u18125 7370                                            u18126 7372  
                                          u18135 3DF0                                            u19031 3A1A  
                                          u18065 72AE                                            u18145 3E24  
                                          u19041 3A56                                            u18066 72B0  
                                          u19210 409E                                            u18307 6AD8  
                                          u18155 3E54                                            u18075 3CD6  
                                          u18260 6DD0                                            u18085 3D2E  
                                          u18430 4476                                            u19070 3AE0  
                                          u18095 3D6C                                            u19135 4312  
                                          u19136 4314                                            u19080 420A  
                                          u16744 7316                                            u19145 433C  
                                          u16745 7312                                            u19410 7570  
                                          u19146 433E                                  __end_of___lwdiv 6D7A  
                                          u19500 3C34                                            u19260 5F12  
                                          u19181 402A                                            u18711 5F84  
                                          u19191 403C                                            u19280 6EBA  
                              _userDataAvailable 01D8                                            u18721 6156  
                                          u18705 5F62                                            u18706 5F66  
                                          u18650 5F24                                            u19460 3B0C  
                                          u18581 70CA                                            u18901 6142  
                                          u18670 5F3C                                            u18751 5C6E  
                                          u19560 4CE8                                            u19801 3842  
                                          u18668 5F28                                            u19590 6C8E  
                                          u19830 38BE                                            u18695 5F56  
                                          u18696 5F5A                                            u18688 5F40  
                                          u19840 38C8                                            u18881 6398  
                                          u19861 3928                                            u19950 17E4  
                                          u19960 17EC                                  __end_of___lwmod 6F06  
                                          i2l125 6E50                                            i2l730 45D8  
                                          i2l731 45DA                                            i2l740 4650  
                                          i2l747 4684                                            i2l923 0482  
                                          i2l908 032C                                            i2l871 007E  
                                          i2l873 00B4                                            i2l884 00D8  
                                ___awdiv@counter 0077                                            i2l878 009C  
                                          i2l887 015E                    RouteManagerPerformUpdate@best 009D  
                       __size_of_InitSymbolTimer 0016                         ?_TMSendFormedPacketToRFD 00C5  
               __size_of_TransportManagerNoRoute 0002                                            _TMR0H 000FD7  
                                          _TMR0L 000FD6                                     _routingTable 0698  
               RouteManagerShouldInsert@neighEtx 008E                      ?_RouteManagerProcessReceive 009D  
                               ?_NetworkSequence 0001                                 SendPacket@tParam 00B7  
                __end_of_le_findEmptyNeighborIdx 6C98                                 __end_ofi2_SPIGet 762E  
                      MiApp_SearchConnection@res 0276                                _justEvictedParent 0044  
                               __end_ofi2_SPIPut 7554                                  _TMSendDataToRFD 6BF8  
                             __size_ofi2_DelayUS 002A                               __size_ofi2_DelayMs 0096  
                                          _crc32 5B78                  __size_of_NetworkDiscoveredEvent 01A2  
                               RouterEvicted@idx 0095                     ??_NetworkSendDiscoverRequest 00AE  
                               SendPacket@status 00B5                    __size_of_MiApp_UnicastAddress 003A  
                                          _pcnt1 022F                                  __end_of_isdigit 7420  
                                  _routeInfoInit 69A6                              __size_of_LEDCommand 003C  
               CoordinatorGenericAddress@address 01E4                   __end_of_GetRouteAddressOfChild 68F6  
                                LEDManagerTask@i 0091                                            krnd@t 007B  
                                          tablat 000FF5                        __end_of_LE_InsertNeighbor 60C2  
                                   ?_LE_ClearDLQ 0085                            ??_RMRoutingTableCount 0075  
                        ?_netChooseAdvertiseTime 0001                                            plusw0 000FEB  
                                          plusw1 000FE3                                            plusw2 000FDB  
                  __size_of_NetworkSetAddressPAN 0056                                            status 000FD8  
                    le_updateNeighborTableEst@ne 0097                                  __end_of_sprintf 2140  
                             __size_of_MSTickGet 0036                               __size_of_CacheInit 0018  
                         __end_of_InitConfigRegs FF3D                         LE_RemoveNeighborDevice@i 009B  
                        MiApp_SearchConnection@i 0277                                  ?_LE_PinNeighbor 0085  
                        MiApp_SetChannel@Channel 007C                        __size_of_LELinkQualityGet 0070  
                                 ??_LCD_WriteCmd 0075                                   ?_LCD_WriteData 0001  
                      __size_of_MiMAC_SetChannel 0090                             __end_of_HardwareInit 5A20  
                        __CFG_DSWDTOSC$INTOSCREF 000000                                      _BlinkRedLED 758C  
                __end_of_LE_RemoveNeighborDevice 66B8                        __size_of_Read_MAC_Address 004A  
                                __initialization 5236                                  ?_LEDManagerTask 0001  
                                ??_isSameAddress 0081                                      ?i2_TxPacket 0015  
                       LE_UnpinNeighbor@neighbor 0085                            _AddNodeToNetworkTable 311A  
                      __size_of_MiMAC_SendPacket 01AA                           ?_NetworkAddressSizeGet 0001  
                                   __end_of_main 2AC2                                     __end_of_krnd 3F4E  
                           _UserMessageAvailable 01D3                  __size_of_TunnelManagerGetTunnel 015A  
                    LE_GetNeighborDeviceType@dev 0078                                   ??_le_updateETX 0084  
                                     _ButtonTask 677C                                   TxPacket@status 009C  
                                  krndInit@value 0073                        isBroadcastAddress@address 007B  
                                      ??_CBC_MAC 0091                                  ??i2_RegisterSet 0005  
                              ??_IsNetworkDevice 0092                                        ??_CCM_Dec 009D  
                             MiWi_TickGet@tmrval 007B                                        ??_CCM_Enc 009D  
                                  ??_RegisterSet 0077                                           ??_main 00E7  
                             MiWi_TickGetMs@tnow 0083                                      ?_MiMAC_Init 0087  
                                         ??_krnd 0077                                    __activetblptr 000002  
                       _RouteManagerShouldInsert 54EE                                    le_findIdx@res 0083  
                       ??_MiApp_SearchConnection 0263                                        ??_LCDInit 0087  
                           __end_of_MiWi_TickGet 6E48                                           CTR@len 008C  
                                         CTR@key 008D                                    _IRQ1_Received 00E9  
                              __end_of_LCDUpdate 596C                                    ??_NetworkInit 0098  
                               __end_of_TxPacket 4492                      radioReceivedPacket@isSecure 0190  
                              ?_isInvalidAddress 0086                      __size_of_NetworkUnicastData 012E  
                          radioReceivedPacket@bt 019E                BroadcastManagerDelaySend@isSecure 00A3  
              MiApp_ProtocolInit@bNetworkFreezer 0001                                  ??_le_computeETX 007D  
                           _MiMAC_ReceivedPacket 0F42                                           ?_crc32 0073  
                                i2SetRFMode@mode 0006                                       _SendPacket 5F14  
                                      ??_SPIGet2 0075                    __size_of_NetworkSetDeviceType 000A  
                                 ?_routeInfoInit 007B                       __size_of_BeaconManagerInit 0020  
                             ??_isInvalidAddress 0088                       __size_of_BeaconManagerTask 00E8  
                               ___llmod@dividend 007F                      __size_of_isBroadcastAddress 0044  
                                         _EECON2 000FA7                                           _ANCON0 000F48  
                                         _ANCON1 000F49                        le_findRandomNeighborIdx@i 008C  
                                      ??_SPIPut2 0073                                 ___awdiv@dividend 0073  
                            routingTableFind@res 008C                   __end_of_netChooseAdvertiseTime 63B2  
                                         _LEDCmd 01C2                                           _MACSeq 003D  
                                 __CFG_WDTEN$OFF 000000                                        ??_DelayUS 0077  
                                      ??_DelayMs 007F                 __end_of_NetworkPrepareSendPacket 54EE  
                           _BroadcastManagerInit 7488                                           _OSCCON 000FD3  
                           _BroadcastManagerTask 2F2A                                        ??_HighISR 002C  
                                         _PVALUE FF3D                                           _RPOR21 000EDB  
                                         _RPINR1 000EE7                                           _RPOR19 000ED9  
                                ??_RouterEvicted 0091                                   MiMAC_Init@seed 008B  
                 RouteManagerPerformUpdate@entry 00A1                                           _SVALUE FF5D  
                                 __CFG_WPCFG$OFF 000000                                           _SPIGet 7610  
                     __size_of_networkSendBeacon 0236                                           _SSPBUF 000FC9  
                                         _SPIPut 743E                    RouteManagerShouldInsert@found 0094  
                  RouteManagerShouldInsert@entry 0090              __end_of_NetworkSendDiscoverResponse 62C2  
                    _NetworkSendDiscoverResponse 624A                  __size_of_TunnelManagerSetTunnel 0266  
                                ??_isKnownPacket 00AF                          i2RegisterSet@IRQ1select 0005  
                                         i2_krnd 470E                                   __CFG_WPDIS$OFF 000000  
                     MiApp_SearchConnection@mask 0272                                    ?_radioUnicast 00BC  
              __size_of_le_findRandomNeighborIdx 01AC                                    ??_TimeTickISR 0073  
                                     TxPacket@t1 008C                                       TxPacket@t2 0090  
        TMSendFormedPacketTowardsCoordinator@res 0092                        ?_le_findRandomNeighborIdx 0084  
                NetworkPrepareSendPacket@address 007F                                           _NetSeq 01CE  
                             __size_of_SetRFMode 006C                                   __CFG_XINST$OFF 000000  
              RouteManagerShouldInsert@rcvBeacon 0095                                           _TxData 01D2  
                                         _TxBuff 0748                           _NetworkDiscoveredEvent 3628  
                   ??_DeviceManagerGetDeviceData 0089                                     ?_AddMSToTick 008F  
                               LCD_WriteCmd@data 0075                          _le_findWorstNeighborIdx 4BE6  
                 le_findWorstNeighborIdx@thisETX 008A                                __end_ofi2_DelayUS 72DC  
                              __end_ofi2_DelayMs 5E84                               HighISR@PacketForMe 006A  
                   ??_DeviceManagerGetDeviceType 0083                   ?_TunnelManagerInvalidateTunnel 0081  
                                         ___wmul 72DC                                        ??___awdiv 0077  
                             _radioDiscardPacket 7660                                           crc32@p 0085  
                                 __CFG_STVREN$ON 000000                                           _hasAck 0043  
                                      ??___lldiv 007B                                        ??___llmod 0087  
      NetworkManagerProcessIncomingData@isFormed 0180                                           _nState 01D5  
                      __size_of_MiApp_SetChannel 000C                                        ??___lwdiv 0077  
                                      ??___lwmod 0083                                           _encode 3C6E  
                    routingTableUpdateEntry@from 008F                                 _MSTickGetDiffNow 614C  
                                  ??_TimerEnable 0073        NetworkManagerProcessIncomingData@isSecure 00E1  
                                         _myAddr 01E8                  __end_of_TMSendFormedPacketToRFD 287A  
                                         _memcmp 69FC                                           _memcpy 6AA8  
                 radioReceivedPacket@isBroadcast 018F                                           _memset 725E  
                                         clear_0 5296                                           clear_1 52A8  
                                         clear_2 52B4                                           clear_3 52C0  
                                         clear_4 52CC                                           clear_5 52D8  
                                         clear_6 52E4                                           clear_7 52F0  
                                         clear_8 52FC                                           clear_9 5312  
                   __end_of_LEAppendNeighborInfo 3C6E                                 ___awdiv@quotient 0079  
                                   _CCM_Dec$2738 00A1                                  _currentInterval 01B2  
                   __end_of_passLinkEtxThreshold 7572                        __size_ofi2_MiWi_TickGetMs 0036  
                        __end_of_TMSendDataToRFD 6C48                               radioBroadcast@addr 01EA  
                             radioBroadcast@data 00BC                                 __end_of_krndInit 58B6  
                               _netResetInterval 74A0                       ?_RouteManagerPerformUpdate 0001  
                              __end_of_MSTickGet 70D4                              ?_radioDiscardPacket 0001  
                       __end_of_netDecayInterval 709E                                __end_of_CacheInit 7488  
                                   ??_EEPROMRead 0078                  le_updateNeighborTableEst@newEst 0094  
                    __end_of_MiApp_IsNetworkBusy 768E                                     __pdataCOMRAM 0047  
                                      ??_isdigit 0073                                     _CCM_Enc$2730 009F  
                        Read_MAC_Address@address 0088                                     __mediumconst FAFC  
                          ?_MiMAC_ReceivedPacket 0001                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                    ??_MiApp_EstablishConnection 009B                         ?_NetworkDataArrivedEvent 007B  
                         _RouteMgrUpdateRequired 01D1                           _TunnelManagerGetTunnel 3F4E  
                            __end_of_RegisterSet 72B2                                  LE_ClearDLQ@nidx 008C  
                                  ?_RegisterRead 0001                          _NetworkGetParentAddress 761A  
                   __end_of_TransportManagerInit 74FC                              __size_ofi2_TxPacket 013E  
                                      ??_sprintf 0082                     __end_of_TransportManagerTask 0F42  
                                  LEDCommand@cmd 0073                                    LEDCommand@led 0075  
                              _ReceivedBankIndex 003F                                ??_InitSymbolTimer 0073  
                                __CFG_DSBOREN$ON 000000                                     ?i2_SetRFMode 0001  
                        ??_NetworkGetMyRouteInfo 0075                              networkSendBeacon@bt 00CD  
               __size_of_routingTableUpdateEntry 011A                            ?_BroadcastManagerInit 0001  
                            _MiApp_SetAddressPan 6C98                              __end_of_NetworkInit 5144  
                               HighISR@BankIndex 0071                        radioReceivedPacket@myAddr 0197  
                          ?_BroadcastManagerTask 0001                       __size_of_LE_InsertNeighbor 008E  
                      radioReceivedPacket@parent 01A4                             _MiApp_DiscardMessage 7646  
                                     __accesstop 0060                               __size_of_WriteFIFO 0026  
                        __end_of__initialization 5318                              le_initNeighborIdx@i 0075  
             __size_of_le_updateNeighborEntryIdx 0156                                  ??_LCD_WriteData 0075  
                           ??_radioDiscardPacket 0073                        radioReceivedPacket@source 0186  
               __end_of_isNetworkSecurityEnabled 7654                                ?_LE_UnpinNeighbor 0085  
                MiMAC_ReceivedPacket@currentTick 00AC                                   ??_radioUnicast 00C4  
                            __size_of_MiMAC_Init 00FA                                    ___rparam_used 000001  
             __size_of_le_updateNeighborTableEst 02AC                          _MiApp_IsMemberOfNetwork 766C  
                              CCM_Enc@payloadLen 009A                    LE_RemoveNeighborDevice@device 0097  
                     RouteManagerPerformUpdate@i 0097                       __end_of_NetworkManagerTask 1BEE  
                     RouteManagerPerformUpdate@r 00A3                             __CFG_WPEND$PAGE_WPFP 000000  
                         ?_AddNodeToNetworkTable 0081                               ??_LE_UnpinNeighbor 0087  
                            i2MiWi_TickGet@t1ext 0005                               __end_of_EEPROMRead 7172  
                                 __pcstackCOMRAM 0001              __size_of_RouteManagerProcessReceive 013E  
                                      ?i2_SPIGet 0001                                        ?i2_SPIPut 0001  
                                   __pidataBANK0 7684                                     __pidataBANK1 7554  
                   MiApp_MessageAvailable@tStart 0224                                     ??_LEDCommand 0074  
                                  __end_of_crc32 5C1E                                     ButtonTask@Sw 0087  
                                    ?_ButtonTask 0001                            i2RegisterRead@address 0003  
                     le_findEmptyNeighborIdx@res 0077                   DeviceManagerGetDeviceData@data 0083  
               MiMAC_ReceivedPacket@FrameCounter 00B2                         ??_MiApp_GetParentAddress 0077  
                                __CFG_DSWDTEN$ON 000000                             ?_MiApp_SetAddressPan 0083  
                            __end_of_TimeTickISR 71A4                                        CTR@nounce 008F  
                                __CFG_DSWDTPS$G2 000000                  ??_DeviceManagerBufferDeviceData 0087  
                    ??_BroadcastManagerDelaySend 00A5                          _TransportManagerNoRoute 768A  
                         _TunnelManagerSetTunnel 23AE                                  TxPacket@rssival 009A  
      __end_of_NetworkManagerProcessIncomingData 2F2A       __size_of_NetworkManagerProcessIncomingData 0232  
            ??_NetworkManagerProcessIncomingData 00E2               ?_NetworkManagerProcessIncomingData 00DC  
              _NetworkManagerProcessIncomingData 2CF8               le_updateNeighborEntryIdx@packetGap 009D  
              __end_of_RouteManagerPerformUpdate 1922                              isButtonPressed@mask 0076  
                __size_of_MiApp_SearchConnection 0136                                routingTableFind@i 008E  
                      __size_of_routingTableFind 0062                                  _ConnectionTable 04B8  
                                     _addressLen 01F7                                 ??i2_RegisterRead 0003  
                            __end_of_TimerEnable 767C                             __end_of_LCD_WriteCmd 7528  
                      NetworkSetAddressPAN@PANID 0081                                __end_of_SetRFMode 65EA  
                                ??_routeInfoInit 007D                                     ?i2_WriteFIFO 0001  
             __end_of_NetworkSendDiscoverRequest 650E                       _NetworkSendDiscoverRequest 649C  
                               HighISR@PacketLen 0070                                          ??_crc32 007B  
                                 ??_RegisterRead 0075                         AddNodeToNetworkTable@ind 0089  
                                    ?_SendPacket 00AE                           NetworkUnicastData@data 0142  
               __size_of_LE_RemoveNeighborDevice 0066                            Read_MAC_Address@addr8 0082  
                 NetworkPrepareSendPacket@buffer 0081                           NetworkUnicastData@size 0144  
                                   sprintf@width 0090                       routingTableUpdateEntry@idx 0097  
                          IsNetworkDevice@oldest 0094                       routingTableUpdateEntry@etx 0093  
                           __end_of_le_updateETX 683E                                       __pbssBANK0 00E7  
                                     __pbssBANK1 01AE                                       __pbssBANK2 0200  
                                     __pbssBANK3 0300                                       __pbssBANK4 0400  
                                     __pbssBANK5 0500                                       __pbssBANK6 0600  
                                     __pbssBANK7 0700                                       __pbssBANK8 0800  
                       radioReceivedPacket@PANID 0188                            ?_MiApp_DiscardMessage 0001  
                             __end_of_LEDCommand 6F7E                             MSTickGetDiffNow@diff 0097  
                    __size_of_MiApp_ProtocolInit 0058                            __size_of_HardwareInit 00B4  
                           MSTickGetDiffNow@tNow 009B                             MSTickGetDiffNow@tick 008F  
                                        ?_SPIGet 0001                                          CTR@text 008A  
                                        ?_SPIPut 0001                               RegisterSet@setting 0075  
                      SendPacket@SecurityEnabled 00B3                                    MSTickGet@tNow 0087  
                      LE_InsertNeighbor@neighbor 0097                DeviceManagerGetDeviceType@address 0081  
                           __size_of_LE_ClearDLQ 0054                        ??_le_findWorstNeighborIdx 0083  
                            i2RegisterRead@value 0004                                          ?i2_krnd 0001  
                       radioReceivedPacket@child 01A2                                 _LELinkQualityGet 650E  
              __end_of_le_updateNeighborEntryIdx 41FE                                 _MiMAC_SetChannel 5FA4  
                       _NetworkPrepareSendPacket 540E                                       CBC_MAC@MIC 008F  
                      _MiApp_EstablishConnection 5CBE                                 _Read_MAC_Address 6CE6  
                             HighISR@RxPacketPtr 006E                        __size_of_RouteManagerInit 0030  
                                   CBC_MAC@block 0094                           radioReceivedPacket@crc 019A  
                      __size_of_RouteManagerTask 0048                __end_of_le_updateNeighborTableEst 1E9A  
                                     CBC_MAC@len 008C                                       CBC_MAC@key 008D  
               RouteManagerPerformUpdate@linkEtx 0095                    LE_GetNeighborDeviceType@index 0073  
                                      ?_TxPacket 0087                 RouteManagerPerformUpdate@pathEtx 0099  
                               _MiMAC_SendPacket 347E                                       ??i2_SPIGet 0003  
                                     ??i2_SPIPut 0001                                          ?___wmul 0073  
                   TunnelManagerGetTunnel@device 00AB                            ??_MiApp_SetAddressPan 0087  
              RoutingTableFindDeviceOrParent@res 0087                                          ?_encode 0073  
                               radioUnicast@addr 0261                                 radioUnicast@data 00C0  
                          __size_of_MiWi_TickGet 0042                                 radioUnicast@dest 00BC  
                                        ?_memcmp 0073                               _TimerEnterCritical 767C  
                                        ?_memcpy 0075                                          _CBC_MAC 5ACC  
                                        ?_memset 0073                RouteManagerSetNeighborCongested@n 0073  
                                        SPIPut@i 0074                                          SPIPut@v 0073  
                                        _CCM_Dec 55C4                                          _CCM_Enc 5748  
                               ?_TMSendDataToRFD 00D4                                __end_of_WriteFIFO 7374  
                __end_of_NetworkDataArrivedEvent 6B52                                      _RegisterSet 7288  
                       __size_of_isButtonPressed 0026                         LE_InsertNeighbor@devType 0099  
                              isKnownPacket@hash 00AB                                          _LCDInit 4D12  
                         ??_MiMAC_ReceivedPacket 00A4                                          i2l15100 46B0  
                                        i2l15102 46B4                                          i2l15104 46BA  
                                        i2l15050 45FA                                          i2l14420 65EE  
                                        i2l15060 461A                                          i2l15116 4702  
                                        i2l15054 460E                                          i2l14432 661E  
                                        i2l14424 65FE                                          i2l15064 4622  
                                        i2l14442 663C                                          i2l15402 030C  
                                        i2l15330 0192                                          i2l15314 012E  
                                        i2l14436 662E                                          i2l14428 660E  
                                        i2l15084 4672                                          i2l15412 0330  
                                        i2l15260 0070                                          i2l15252 0052  
                                        i2l15078 4664                                          i2l15350 0230  
                                        i2l15342 01EA                                          i2l15318 0136  
                                        i2l15088 467A                                          i2l15424 03AC  
                                        i2l15360 024E                                          i2l15352 0232  
                                        i2l15440 0432                                          i2l15272 0094  
                                        i2l15264 0080                                          i2l15418 0390  
                                        i2l15354 0242                                          i2l15346 01F2  
                                        i2l15282 00BE                                          i2l15442 043A  
                                        i2l15428 03B4                                          i2l15364 027E  
                                        i2l15444 0440                                          i2l15438 041C  
                                        i2l15382 02C0                                          i2l15366 0280  
                                        i2l15374 02A8                                          i2l15368 0290  
                                        i2l15448 0444                                          i2l15466 047A  
                             __CFG_OSC$INTOSCPLL 000000                                          _LCDText 03AC  
                  __size_of_NetworkGetDeviceType 0006                                    ?_TimerDisable 0001  
                        NetworkDiscoveredEvent@i 007D                                   NetworkInit@dev 0097  
                            ?_TimerEnterCritical 0001                                          _BMState 01CD  
                      ??_NetworkGetParentAddress 0075                                      _NetworkInit 504A  
               MiApp_SearchConnection@msDuration 0270                                     _HardwareInit 596C  
                          i2WriteFIFO@IRQ1select 0004                                       _le_findIdx 68F6  
                                        _RPINR21 000EFB                                 HighISR@ackPacket 0064  
                                        _SSP2BUF 000F75                  RouteManagerPerformUpdate@minEtx 009F  
                                        _SPIGet2 75D4                           ??_BroadcastManagerInit 007B  
                                        _RF_Mode 003E                                          _AckInfo 0300  
                         ??_BroadcastManagerTask 00C3                                          _SPIPut2 74B8  
                    __size_of_le_initNeighborIdx 007E                                          _RSSIVal 01D0  
                    __size_of_CoordinatorAddress 000A                     ??_TransportManagerRouteFound 0073  
                               ??_LE_PinNeighbor 0087                              __size_of_ButtonTask 0062  
                        __size_of_MiWi_TickGetMs 0036                                          _TMState 0040  
                                        _DelayUS 7206                                          _DelayMs 5D58  
                      _BroadcastManagerDelaySend 395A                       AddNodeToNetworkTable@PANID 0083  
                        __size_of_radioBroadcast 005E                        ??_MiApp_IsMemberOfNetwork 008A  
             NetworkDataArrivedEvent@isBroadcast 0081                                          _HighISR 0008  
                           _LEAppendNeighborInfo 3AE4                 __size_of_TMSendFormedPacketToRFD 0266  
                       ?_le_findEmptyNeighborIdx 0073                                 ??_LEDManagerTask 0087  
                     ?_CoordinatorGenericAddress 007B                        MiApp_MessageAvailable@src 01A8  
                           _passLinkEtxThreshold 7564                                      TxPacket@CCA 0087  
                                        i2krnd@t 0009                                  __size_of_SPIGet 000A  
                                __size_of_SPIPut 001A                                        ?_krndInit 0073  
                    __end_of_MiMAC_DiscardPacket 743E                           _MiApp_SearchConnection 4982  
                                _IsNetworkDevice 37CA                          ??_NetworkAddressSizeGet 0073  
              DeviceManagerGetDeviceData@address 0081                                  __size_ofi2_krnd 013C  
                           ??_TimerEnterCritical 0073                                     _MiWi_TickGet 6E06  
                   __size_of_radioReceivedPacket 0674               __end_of_DeviceManagerGetDeviceData 758C  
                     _DeviceManagerGetDeviceData 7580                    __size_of_BeaconManagerTrigger 0004  
                                        __Hparam 0000                                     ?_BlinkRedLED 0001  
                                    _TimeTickISR 7172                                          _Tick_MS 0249  
                                        __Lparam 0000               __end_of_DeviceManagerGetDeviceType 649C  
                     _DeviceManagerGetDeviceType 6428                                          _TxIndex 0041  
                                   ??i2_TxPacket 0016                                       ??_TxPacket 0088  
                                     CCM_Dec@key 009B                                  radioBroadcast@i 00C2  
                   __end_of_MiApp_UnicastAddress 7030                       ??_RouteManagerShouldInsert 008A  
                     ?_LE_processReceivedMessage 009F                                          _t1fired 00EA  
                              LCD_WriteData@data 0075                         __size_of_NetworkGetPANID 000A  
                        __size_ofi2_MiWi_TickGet 0042                                          ___awdiv 62C2  
                                     _linkEstSeq 01C8                                       CCM_Enc@key 009B  
                                        ___lldiv 63B2                                  __size_of___wmul 0026  
                                        ___llmod 671A                                 _MiApp_SetChannel 75C8  
                            __size_of_SendPacket 0090                __size_of_LE_GetNeighborDeviceType 003C  
                                        ___lwdiv 6D30                                          ___lwmod 6EC8  
                      ??_TransportManagerNoRoute 0073                             __size_of_AddMSToTick 008A  
                           _TransportManagerInit 74E6                        ?_LE_GetNeighborDeviceType 0073  
                           _TransportManagerTask 0B16                                  __size_of_encode 0170  
                          __CFG_RTCOSC$INTOSCREF 000000                  __size_of_MiApp_GetParentAddress 000E  
                                    _TimerEnable 7678                                _TunnelManagerInit 74D0  
                   __end_of_NetworkSetAddressPAN 6AA8                         __size_of_NetworkHasRoute 0038  
                                        __pcinit 5236                                  __size_of_memcmp 0056  
                                __size_of_memcpy 0056                                 i2_MiWi_TickGetMs 710A  
                                __size_of_memset 002A                                          __ramtop 0F00  
                               HighISR@fifo_stat 0063                                          __ptext0 287A  
                                        __ptext1 1E9A                                     ??_MiMAC_Init 008A  
                                        __ptext2 7402                                          __ptext3 72DC  
                                        __ptext4 7302                                          __ptext5 6CE6  
                                        __ptext6 7140                                          __ptext7 75D4  
                                        __ptext8 6FF6                                          __ptext9 4AB8  
                                        _myPANID 00EB                                        _T0CONbits 000FD5  
                            radioBroadcast@PANID 00BF                               ?_TunnelManagerInit 0001  
                __end_of_le_findWorstNeighborIdx 4D12                __size_of_isNetworkSecurityEnabled 0006  
                                   __size_of_CTR 00BE                                   ??_TimerDisable 0073  
                              __end_of_hexpowers FF85                        ?_isNetworkSecurityEnabled 0001  
                       ??_MiApp_MessageAvailable 00E3                              __end_of_crc32_table FEFD  
                           __end_of_radioUnicast 6BF8                  le_findWorstNeighborIdx@worstETX 008C  
                                        _isdigit 7402              BroadcastManagerDelaySend@isInterPan 00A4  
                                  HighISR@dstPan 0068                                    _myLongAddress 01FA  
          __end_of_DeviceManagerBufferDeviceData 75F2           __size_of_DeviceManagerBufferDeviceData 000A  
                  _DeviceManagerBufferDeviceData 75E8                                 NetworkInit@PANID 0095  
                         RegisterRead@IRQ1select 0077                       ?_RouteManagerRequestUpdate 0001  
                    __end_of_RMRoutingTableCount 75FC                          MiApp_SetAddressPan@addr 0087  
                                        encode@i 0083                              ??_TunnelManagerInit 007B  
                   ??_NetworkManagerGetMyAddress 0075                          _routingTableUpdateEntry 4E36  
                                        _sprintf 1E9A                                        _LCDUpdate 58B6  
                                        main@src 027D                           ??_MiApp_DiscardMessage 0073  
                                        _tunnels 0400                               __end_ofi2_TxPacket 470E  
                           end_of_initialization 5318                                        DelayMs@ms 007B  
                       __end_of_MSTickGetDiffNow 61CC                         __size_of_NetworkSequence 0008  
                                        memcmp@n 0077                                        i2SPIPut@v 0002  
                                        memcpy@d 007B                                          memcpy@n 0079  
                          ?_LEAppendNeighborInfo 0084                                          memcpy@s 007D  
                                     _srcAddress 025F                            ?_passLinkEtxThreshold 0073  
                       Read_MAC_Address@pAddress 008A                                          memset@c 0075  
                                        memset@n 0077                                          memset@p 0079  
                  MiMAC_SendPacket@MACPayloadLen 00A9                                   le_computeETX@q 007E  
                                  __Lmediumconst FAFC                                    _intervalDelay 01BA  
                           __size_ofi2_SetRFMode 0068                         __end_of_netResetInterval 74B8  
                        ?_NetworkDiscoveredEvent 0073            NetworkManagerProcessIncomingData@dHdr 0184  
                                     ??_krndInit 0075                __end_of_CoordinatorGenericAddress 734E  
          NetworkManagerProcessIncomingData@data 00DC                                        i2u1638_45 73BC  
                                      i2u1638_46 73BE                                        i2u1655_45 7258  
                                      i2u1655_46 725A                                        i2u1744_40 46F4  
                                      i2u1656_45 73DE                                        i2u1656_46 73E0  
                                      i2u1657_45 4720                                        i2u1658_40 475C  
                                      i2u1658_45 4752                                        i2u1659_45 4782  
                                      i2u1776_40 01D6                                        i2u1777_40 01E2  
                                ___lldiv@divisor 0077                               __end_of_MiMAC_Init 504A  
                      __size_of_isInvalidAddress 000C            NetworkManagerProcessIncomingData@size 00DE  
                                ___lldiv@counter 007B                         LEAppendNeighborInfo@data 0084  
                      RouteManagerShouldInsert@i 0092                         LEAppendNeighborInfo@size 0086  
                   __end_of_NetworkSetDeviceType 7610                          MiMAC_SetChannel@channel 007B  
                                        postdec1 000FE5                                          postdec2 000FDD  
            NetworkSendDiscoverResponse@databuff 0100                             __end_of_RegisterRead 71D6  
                                        postinc0 000FEE                                          postinc1 000FE6  
                                        postinc2 000FDE                        __end_of_TunnelManagerInit 74E6  
                          ?_TransportManagerInit 0001                __end_of_LE_processReceivedMessage 4982  
                          __end_of_isSameAddress 739A                            ?_TransportManagerTask 0001  
                            RegisterRead@address 0075                              TMSendDataToRFD@data 00D7  
                                  WriteFIFO@Data 0075                              TMSendDataToRFD@size 00D9  
                                      i2_DelayUS 72B2                                        i2_DelayMs 5DEE  
                          __size_of_LCD_WriteCmd 0016             __size_of_NetworkSendDiscoverResponse 0078  
                       MiMAC_ReceivedPacket@addr 00B0                                        _PORTBbits 000F81  
                         radioBroadcast@datasize 00BE                                  _InitSymbolTimer 7528  
             DeviceManagerBufferDeviceData@empty 008C                            __end_ofi2_RegisterSet 73C0  
                     __end_of_NetworkUnicastData 4BE6                             networkSendBeacon@adr 00CB  
                     le_findWorstNeighborIdx@res 0088                      ??_RouteManagerPerformUpdate 0093  
                           networkSendBeacon@hdr 00D1                          ?_TunnelManagerGetTunnel 00AB  
                               _routingTableFind 66B8                                ?_netDecayInterval 0001  
                               __CFG_CPUDIV$OSC1 000000                            __size_of_le_updateETX 0060  
                     __end_of_isBroadcastAddress 6E06                           radioBroadcast@isSecure 00C1  
                                      _TRISAbits 000F92                                        _TRISBbits 000F93  
                                _CoordinatorAddr 01E6                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                        _TRISEbits 000F96  
                                     encode@text 0073                  ??_TunnelManagerInvalidateTunnel 0083  
                        _LE_RemoveNeighborDevice 6652                                      ?_le_findIdx 0081  
                             ??_netDecayInterval 0093                                        _MSTickGet 709E  
                         LE_PinNeighbor@neighbor 0085                                    _mySecurityKey FF8D  
                                      _CacheInit 7470                          MiMAC_SendPacket@TxIndex 00AD  
                            LELinkQualityGet@idx 008D                __end_of_RouteManagerRequestUpdate 763E  
                            LELinkQualityGet@res 008B                             le_initNeighborIdx@ne 0076  
                              ??_isButtonPressed 0073                         ??_NetworkReleaseUserData 0073  
                                     ?_LCDUpdate 0001                            __end_of_le_computeETX 6EC8  
                        TunnelManagerGetTunnel@i 00BF                             __size_ofi2_WriteFIFO 0022  
                        __end_of_IsNetworkDevice 395A                                      _t1extension 01BE  
                         _MiApp_GetParentAddress 7572                                le_findIdx@ll_addr 0081  
                 __end_of_NetworkDiscoveredEvent 37CA                                CCM_Dec@payloadLen 009A  
                     MiMAC_SendPacket@transParam 00A2                    RouteManagerProcessReceive@len 00A1  
                 __size_of_NetworkGetMyRouteInfo 000C                    __end_of_NetworkGetMyRouteInfo 75B0  
                        ??_AddNodeToNetworkTable 0085                                   _lcdInitialized 0045  
                              __CFG_WPFP$PAGE_63 000000                        MiApp_UnicastAddress@SecEn 014B  
                      LEAppendNeighborInfo@count 008E                                 __CFG_IOL1WAY$OFF 000000  
                                 __end_of_PVALUE FF5D                                   RouterEvicted@i 0096  
                          __end_of_RouterEvicted 5CBE                                   RouterEvicted@r 0093  
                                 __end_of_SVALUE FF7D                                   __end_of_SPIGet 761A  
                           radioUnicast@datasize 00C2                 __size_of_NetworkDataArrivedEvent 0054  
                                 __end_of_SPIPut 7458                        BroadcastManagerTask@PANID 00CD  
                               _RouteManagerInit 71D6                            __end_of_isKnownPacket 23AE  
                              _DeviceManagerInit 7458                                   __end_ofi2_krnd 484A  
                               _RouteManagerTask 6D7A                                     _LCD_WriteCmd 7512  
                            __CFG_MSSP7B_EN$MSK7 000000                               le_updateETX@newEst 0082  
                             ?_DeviceManagerInit 0001                             radioUnicast@isSecure 00C3  
                                   DelayUS@delay 0073                                     ??_ButtonTask 0087  
                    TMSendFormedPacketToRFD@data 00C7                          ?_TunnelManagerSetTunnel 008F  
                    TMSendFormedPacketToRFD@dhdr 00D0                                      _crc32_table FAFD  
              NetworkSendDiscoverRequest@address 0144                                   isKnownPacket@i 00D0  
                    TMSendFormedPacketToRFD@size 00C9                                       LCDUpdate@i 0087  
                                 __end_of___wmul 7302                                    ButtonTask@pS0 0039  
                                  ButtonTask@pS1 003A                                     _le_updateETX 67DE  
                              __size_ofi2_SPIGet 000A                                __size_ofi2_SPIPut 0016  
                                     ?i2_DelayUS 0001                                    __pidataCOMRAM 762E  
                                     ?i2_DelayMs 0009              RoutingTableFindDeviceOrParent@entry 0089  
                                 __end_of_encode 3DDE                             i2MiWi_TickGet@tmrval 0009  
             __size_of_MiApp_EstablishConnection 009A                   __end_of_TunnelManagerGetTunnel 40A8  
                           i2MiWi_TickGetMs@tnow 0011                        __size_of_LE_UnpinNeighbor 003C  
                                 __end_of_memcmp 6A52                                   __end_of_memcpy 6AFE  
                                 __end_of_memset 7288                               _NetworkManagerTask 1922  
                            ??_DeviceManagerInit 007B                                ??_NetworkGetPANID 0075  
                         isBroadcastAddress@F537 FF85                         __end_of_LELinkQualityGet 657E  
                __size_of_MiApp_MessageAvailable 00F2                 MiMAC_ReceivedPacket@PayloadIndex 00B7  
                       __end_of_MiMAC_SetChannel 6034                         ??_GetRouteAddressOfChild 008D  
                            start_initialization 5236                                        _MyAddress 01F8  
                      ??_routingTableUpdateEntry 0095                         __end_of_Read_MAC_Address 6D30  
                                    __end_of_CTR 5748                                    TxPacket@delay 0094  
                              ??_NetworkHasRoute 0088                                MiWi_TickGet@t1ext 0077  
                    ?_NetworkSendDiscoverRequest 0001                                       ?_MSTickGet 007F  
                                  TxPacket@reTry 0096                              WriteFIFO@IRQ1select 0076  
                         isBroadcastAddress@addr 007D                                       ?_CacheInit 0001  
                       __end_of_MiMAC_SendPacket 3628                                     ??_SendPacket 00B4  
                            ?_NetworkManagerTask 0001                       i2TxPacket@allowedTxFailure 0027  
             __end_of_TransportManagerRouteFound 768A                       _TransportManagerRouteFound 7688  
                         TransportManagerTask@sz 0140                             _MiApp_UnicastAddress 6FF6  
                     ??_NetworkPrepareSendPacket 0088                        GetRouteAddressOfChild@res 008D  
                            NetworkInit@devPanID 0098                     __size_of_MiApp_IsNetworkBusy 0002  
                   BroadcastManagerDelaySend@res 00AB                           ??_LEAppendNeighborInfo 0088  
                   BroadcastManagerDelaySend@pkt 009F                   ?_DeviceManagerBufferDeviceData 007F  
                                      _SetRFMode 657E                                   _MiWi_TickGetMs 70D4  
                         ??_passLinkEtxThreshold 0075                    LE_processReceivedMessage@bhdr 00A9  
                  LE_processReceivedMessage@data 00A1                                   _radioBroadcast 683E  
                        _TMSendFormedPacketToRFD 2614                    LE_processReceivedMessage@nidx 00AD  
                  LE_processReceivedMessage@rssi 00A4                                         CBC_MAC@i 0096  
                                       CBC_MAC@j 0095                         _le_findRandomNeighborIdx 32D2  
                             __end_of_ButtonTask 67DE                             isButtonPressed@index 0075  
                           _NetworkSetAddressPAN 6A52                                         ??_SPIGet 0075  
                      _RouteManagerPerformUpdate 163A                                         ??_SPIPut 0073  
                                ___llmod@divisor 0083                        __end_of_DeviceManagerInit 7470  
                    __size_of_radioDiscardPacket 0004                                  ___llmod@counter 0087  
                                       ??i2_krnd 0005                             __end_of_TimerDisable 7684  
                          __end_of_LCD_WriteData 7512                               NetworkHasRoute@res 0089  
                                      TxPacket@i 009D                                        TxPacket@j 0098  
                              ??_NetworkSequence 0073                                         CCM_Dec@i 00A3  
                                       CCM_Enc@i 00A1                           IsNetworkDevice@address 008F  
                           ??_NetworkManagerTask 00D3                           ??_TransportManagerInit 007B  
                 __end_of_TunnelManagerSetTunnel 2614                           ??_TransportManagerTask 00C5  
             __size_of_BroadcastManagerDelaySend 018A              le_findWorstNeighborIdx@thresholdETX 0085  
                        __end_of_InitSymbolTimer 753E                                   i2_MiWi_TickGet 6E48  
                            __size_of_le_findIdx 0058            TMSendFormedPacketTowardsCoordinator@i 0093  
                                       ??___wmul 0077                       __size_of_TunnelManagerInit 0016  
                           __size_of_BlinkRedLED 000C                           IsNetworkDevice@devType 0091  
        NetworkManagerProcessIncomingData@buffer 0140                                         ??_encode 0077  
                                    __pdataBANK0 00EB                                      __pdataBANK1 01EC  
                              __size_of_TxPacket 014A                                 __CFG_LPT1OSC$OFF 000000  
                             __end_of_SendPacket 5FA4                                         ??_memcmp 0079  
                          __size_of_radioUnicast 0052                                         ??_memcpy 007B  
                                       ?_CBC_MAC 008A                                         ??_memset 0079  
                                       ?_CCM_Dec 0097                                         ?_CCM_Enc 0097  
                                   ?_RegisterSet 0075                       SendPacket@destinationPANID 00B0  
             MiApp_SearchConnection@ScanDuartion 026B                               networkSendBeacon@r 00CF  
                      ??_LE_RemoveNeighborDevice 0099                                RegisterRead@value 0076  
                                       ?_LCDInit 0001                                      __pbssBIGRAM 08DC  
                       le_findEmptyNeighborIdx@i 0079                         ??_netChooseAdvertiseTime 008F  
                            _radioReceivedPacket 04A2                             LEDManagerTask@tStart 0200  
                                    __pbssCOMRAM 0036                                     ?_NetworkInit 0093  
                                   _neighbor_tbl 0500                     ??_RouteManagerProcessReceive 00A2  
                                      _WriteFIFO 734E                                    __pcstackBANK0 0060  
                                  __pcstackBANK1 0100                                    __pcstackBANK2 0263  
             __end_of_NetworkManagerGetMyAddress 75A4                       _NetworkManagerGetMyAddress 7598  
                           LE_UnpinNeighbor@nidx 008A                            MSTickGetDiffNow@tdiff 00A3  
                            SendPacket@Broadcast 00B6                                         CTR@block 0094  
         MiApp_UnicastAddress@DestinationAddress 0147                           __end_of_MiWi_TickGetMs 710A  
                          ?_MiApp_UnicastAddress 0147                               main@pButtonPressed 027A  
                          __end_of_routeInfoInit 69FC                                     _isdigit$4813 0074  
                         __end_of_radioBroadcast 689C                                         ?_SPIGet2 0001  
                           _NetworkSetDeviceType 7606                                     _myDeviceType 01FC  
                     __end_of_MiApp_ProtocolInit 69A6                                      ??_LCDUpdate 0087  
                                       ?_SPIPut2 0001                  __size_of_NetworkReleaseUserData 0004  
                       __end_of_MiApp_SetChannel 75D4                                 ?_IsNetworkDevice 008F  
                                     ?_SetRFMode 0001                                Read_MAC_Address@i 008C  
    NetworkManagerProcessIncomingData@packetsize 0181                                  isSameAddress@a1 007D  
                                isSameAddress@a2 007F                                    ??_LE_ClearDLQ 0087  
                        ?_MiApp_SearchConnection 01AA                             RouterEvicted@address 008F  
          __end_of_TunnelManagerInvalidateTunnel 5F14           __size_of_TunnelManagerInvalidateTunnel 0090  
                  _TunnelManagerInvalidateTunnel 5E84                                      MiMAC_Init@i 008D  
                                       ?_DelayUS 0073                                         ?_DelayMs 007B  
                          ?_NetworkSetAddressPAN 007F                         __end_ofi2_MiWi_TickGetMs 7140  
                                       ?_HighISR 0001                 __end_of_LE_GetNeighborDeviceType 6F42  
                                    sprintf@flag 0087                         routingTableFind@neighbor 0088  
                          NetworkUnicastData@res 00DE                             IsNetworkDevice@empty 009D  
                                    sprintf@prec 008A                 TunnelManagerSetTunnel@OldestTick 009F  
                              _LinkEstimatorInit 75BC                    NetworkPrepareSendPacket@pType 0083  
                    ??_CoordinatorGenericAddress 007D                     __end_of_NetworkGetDeviceType 765A  
                                      crc32@size 0079                               LE_PinNeighbor@nidx 008A  
                                      __pnvBANK1 01FC                            __size_of_RegisterRead 0032  
                         _MiApp_MessageAvailable 5144                             ?_radioReceivedPacket 0186  
                    __end_of_MiApp_SetAddressPan 6CE6                                 _isInvalidAddress 75B0  
                __end_of_routingTableUpdateEntry 4F50                               ?_LinkEstimatorInit 0001  
                                   _radioUnicast 6BA6                           __end_ofi2_MiWi_TickGet 6E8A  
                                   ?_TimeTickISR 0001                          radioReceivedPacket@data 018A  
                        radioReceivedPacket@dhdr 01A6                      ?_DeviceManagerGetDeviceData 0081  
               ??_RoutingTableFindDeviceOrParent 0083                  ?_RoutingTableFindDeviceOrParent 0081  
                        TMSendDataToRFD@databuff 0100                                MiMAC_SendPacket@i 00AC  
                               ___lwdiv@dividend 0073                          radioReceivedPacket@rhdr 01A0  
                     MiApp_SetAddressPan@address 0083                          radioReceivedPacket@size 018C  
                 __size_of_NetworkAddressSizeGet 0006                          radioReceivedPacket@rssi 018E  
                     ?_le_updateNeighborEntryIdx 0099                                __size_of_krndInit 00B6  
                    ?_DeviceManagerGetDeviceType 0081                     TransportManagerTask@databuff 0100  
                  __end_of_NetworkAddressSizeGet 7660                                      CBC_MAC@text 008A  
                                      __pintcode 0008                       ?_le_updateNeighborTableEst 0088  
                                  __pmediumconst FAFC                      ??_LE_processReceivedMessage 00A5  
                                       ?___awdiv 0073                                        __ptext100 55C4  
                                      __ptext101 568A                                        __ptext110 4F50  
                                      __ptext102 5ACC                                        __ptext111 5800  
                                      __ptext103 3C6E                                        __ptext120 7572  
                                      __ptext112 71A4                                        __ptext104 311A  
                                      __ptext121 761A                                        __ptext113 7610  
                                      __ptext105 7374                                        __ptext130 7488  
                                      __ptext122 5CBE                                        __ptext114 766C  
                                      __ptext106 7646                                        __ptext131 725E  
                                      __ptext123 504A                                        __ptext115 7670  
                                      __ptext107 7668                                        __ptext140 767C  
                                      __ptext132 73E2                                        __ptext124 74D0  
                                      __ptext116 7030                                        __ptext108 694E  
                                      __ptext141 7680                                        __ptext133 74A0  
                                      __ptext125 74E6                                        __ptext117 75B0  
                                      __ptext109 7606                                        __ptext150 7654  
                                      __ptext142 75C8                                        __ptext134 633A  
                                      __ptext126 71D6                                        __ptext118 6DC2  
                                      __ptext151 765A                                        __ptext143 5FA4  
                                      __ptext135 3DDE                                        __ptext127 75BC  
                                      __ptext119 69FC                                        __ptext160 7528  
                                      __ptext152 12D4                                        __ptext144 657E  
                                      __ptext136 671A                                        __ptext128 7458  
                                      __ptext161 596C                                        __ptext153 58B6  
                                      __ptext145 7288                                        __ptext137 709E  
                                      __ptext129 7470                                        __ptext170 739A  
                                      __ptext162 677C                                        __ptext154 74FC  
                                      __ptext146 743E                                        __ptext138 7674  
                                      __ptext171 7232                                        __ptext163 70D4  
                                      __ptext155 4D12                                        __ptext147 6C98  
                                      __ptext139 7678                                        __ptext172 7624  
                                      __ptext164 6E06                                        __ptext156 7512  
                                      __ptext148 6A52                                        __ptext173 753E  
                                      __ptext157 74B8                                        __ptext149 6AA8  
                                      __ptext174 710A                                        __ptext166 45D0  
                                      __ptext158 5D58                                        __ptext175 6E48  
                                      __ptext167 470E                                        __ptext159 7206  
                                      __ptext176 5DEE                                        __ptext168 73C0  
                                      __ptext177 72B2                                        __ptext169 65EA  
                      MiMAC_SendPacket@headerLen 00AB                                         ?___lldiv 0073  
                                       ?___llmod 007F                                         ?___lwdiv 0073  
                                       ?___lwmod 007F                                radioUnicast@PANID 00BE  
                        TMSendDataToRFD@isSecure 00DB                              ??_LinkEstimatorInit 0073  
                                   ?_TimerEnable 0001              RouteManagerPerformUpdate@currentEtx 009B  
               __size_of_le_findEmptyNeighborIdx 0050                                      ??i2_DelayUS 0005  
                                    ??i2_DelayMs 000D                            LEAppendNeighborInfo@i 0090  
                          LEAppendNeighborInfo@j 0092                            LEAppendNeighborInfo@k 0094  
                                      _tInterval 0214               NetworkSendDiscoverRequest@databuff 0100  
                 routingTableUpdateEntry@linkEtx 0095                     __end_of_BeaconManagerTrigger 7668  
                  TunnelManagerGetTunnel@retAddr 00BD                                         ?_isdigit 0001  
                                       SPIPut2@i 0074                                         SPIPut2@v 0073  
                                     ?_WriteFIFO 0001                  __size_of_GetRouteAddressOfChild 005A  
                     __end_of_le_initNeighborIdx 624A                       __end_of_CoordinatorAddress 75E8  
                  __size_of_MiMAC_ReceivedPacket 0392                                      ??_MSTickGet 0087  
                               CCM_Dec@headerLen 0099                                      ??_CacheInit 007B  
                    ??_RouteManagerRequestUpdate 0073                                        _hexpowers FF7D  
                                 __size_of_crc32 00A6                            ?_NetworkSetDeviceType 0001  
                                      _tRouteMgr 021C                        ??_TMSendFormedPacketToRFD 00CC  
                                ?_MiWi_TickGetMs 007F                                 ___lwdiv@quotient 0078  
                       __size_of_TMSendDataToRFD 0050                                  ?_radioBroadcast 00BC  
                 __end_of_MiApp_SearchConnection 4AB8                                         ?_sprintf 007A  
           DeviceManagerBufferDeviceData@address 007F                                     _RegisterRead 71A4  
                                       _DEVPanID 01F4                          TunnelManagerSetTunnel@i 00A7  
                       ?_le_findWorstNeighborIdx 0081                        __end_of_LinkEstimatorInit 75C8  
                              ?_MSTickGetDiffNow 008F                    __size_of_BroadcastManagerInit 0018  
                  __size_of_BroadcastManagerTask 01F0                               isKnownPacket@index 00C4  
                        isInvalidAddress@address 0086                                   ___wmul@product 0077  
                         _isNetworkTrafficSecure 01D4                          __size_ofi2_RegisterRead 002C  
                                       _LATAbits 000F89                      NetworkDiscoveredEvent@PANID 0073  
                           i2RegisterSet@setting 0003                                         _LATCbits 000F8B  
                                       DelayUS@i 0077                                         _LATDbits 000F8C  
                                       _LATEbits 000F8D                          _NetworkDataArrivedEvent 6AFE  
                     __size_of_DeviceManagerInit 0018                                         _LEDState 01C5  
                             ??_MSTickGetDiffNow 0097                               isKnownPacket@zeros 00B5  
                          ??_radioReceivedPacket 0191                                ?_netResetInterval 0001  
                   ?_NetworkSendDiscoverResponse 0001                         __end_of_routingTableFind 671A  
                               IsNetworkDevice@i 009F                      __size_of_TimerEnterCritical 0004  
                                ?i2_MiWi_TickGet 0001                              __end_of_LE_ClearDLQ 6BA6  
                                       HighISR@i 0072                                         _PIR1bits 000F9E  
                              ButtonTask@s0Count 003B                                    ??_AddMSToTick 009B  
                                       _PIR3bits 000FA4                                ButtonTask@s1Count 003C  
                             ??_netResetInterval 0093                          LEAppendNeighborInfo@cnt 008A  
                                      _rxMessage 023F                          MiApp_UnicastAddress@src 00DF  
                    NetworkDiscoveredEvent@empty 007B                                 __CFG_WDTPS$32768 000000  
                                       i2_SPIGet 7624                                         i2_SPIPut 753E  
                               ?_InitSymbolTimer 0001                                        main@F8333 0231  
               RouteManagerProcessReceive@source 009D                                         _SSP1CON1 000FC6  
                                       _SSP2CON1 000F72                           _NetworkReleaseUserData 7668  
            __size_of_NetworkSendDiscoverRequest 0072                DeviceManagerBufferDeviceData@data 0081  
                                       _SSP1STAT 000FC7                                         _SSP2STAT 000F73  
                   __size_of_MiMAC_DiscardPacket 001E                DeviceManagerBufferDeviceData@size 0083  
                  BroadcastManagerDelaySend@size 00A1         MiApp_EstablishConnection@ActiveScanIndex 009E  
                        GetRouteAddressOfChild@i 008F                                      _MACRxPacket 0233  
                                      encode@key 0075                                   i2DelayUS@delay 0001  
                   MiApp_EstablishConnection@dev 009B                                        encode@sum 0088  
                                _isButtonPressed 7302                         ?_NetworkGetParentAddress 0073  
                                       _RSSILock 01CF                                      _MACTxBuffer 0478  
                   MiApp_EstablishConnection@src 009C                                    AddMSToTick@ms 0097  
                                  SetRFMode@mode 0078                                 __size_of_CBC_MAC 00AC  
                               _LE_UnpinNeighbor 6F7E                        _CoordinatorGenericAddress 7328  
                        passLinkEtxThreshold@etx 0073                                ___wmul@multiplier 0073  
   __end_of_TMSendFormedPacketTowardsCoordinator 4348    __size_of_TMSendFormedPacketTowardsCoordinator 014A  
         ??_TMSendFormedPacketTowardsCoordinator 0090            ?_TMSendFormedPacketTowardsCoordinator 008A  
           _TMSendFormedPacketTowardsCoordinator 41FE                  RouteManagerShouldInsert@pathEtx 008C  
                               __size_of_CCM_Dec 00C6                                 __size_of_CCM_Enc 00B8  
                                      _routeInfo 01D9                     le_updateNeighborEntryIdx@dev 009A  
                              _netSequenceNumber 01D6                     le_updateNeighborEntryIdx@idx 009E  
                   le_updateNeighborEntryIdx@seq 0099                                _TimerExitCritical 7674  
                   AddNodeToNetworkTable@address 0081                            i2TxPacket@TxPacketLen 001A  
                  TMSendFormedPacketToRFD@device 00C5                                 __size_of_LCDInit 0124  
                __size_of_netChooseAdvertiseTime 0078                             _OutgoingFrameCounter 0259  
                       __end_of_RouteManagerInit 7206                           ??_MiApp_UnicastAddress 00DF  
                       __end_of_RouteManagerTask 6DC2                          isKnownPacket@OldestTick 00C8  
                                   ??_le_findIdx 0083                          ?_MiApp_GetParentAddress 0075  
                            SendPacket@isCommand 00B2                __size_of_RouteManagerShouldInsert 00D6  
                             ?_TimerExitCritical 0001                    TMSendFormedPacketToRFD@parent 00D2  
                      ?_RouteManagerShouldInsert 0088                    TMSendFormedPacketToRFD@myaddr 00CD  
                      _LE_processReceivedMessage 484A                         ?_MiApp_IsMemberOfNetwork 0001  
          RoutingTableFindDeviceOrParent@address 0081                                      _INTCON2bits 000FF1  
                                    _INTCON3bits 000FF0                                        copy_data0 524A  
                                      copy_data1 5282                                    ??i2_SetRFMode 0006  
                                    ??_SetRFMode 0078                           ??_NetworkSetAddressPAN 0083  
                               __size_of_SPIGet2 000A                        le_initNeighborIdx@ll_addr 0073  
                          __size_of_TimerDisable 0004                                 __size_of_SPIPut2 0018  
                             _NetworkUnicastData 4AB8                    __size_of_MiApp_DiscardMessage 0008  
   NetworkManagerProcessIncomingData@isBroadcast 00E0                              ??_TimerExitCritical 0073  
                          TransportManagerTask@i 0142                                         _TxMACSeq 0042  
                          isBroadcastAddress@res 0085                               NetworkInit@address 0093  
                               __size_of_DelayUS 002C                                 __size_of_DelayMs 0096  
                   __size_of_RMRoutingTableCount 000A                                 __size_of_HighISR 0496  
                      __size_of_netDecayInterval 0036                     LE_processReceivedMessage@hdr 00A7  
                   LE_processReceivedMessage@len 00A3                               _isBroadcastAddress 6DC2  
  le_findRandomNeighborIdx@num_eligible_eviction 008B                   __size_of_AddNodeToNetworkTable 01B8  
                        NetworkSetDeviceType@dev 0073                    __end_of_AddNodeToNetworkTable 32D2  
                         _GetRouteAddressOfChild 689C                                         __Hrparam 0000  
                                       _RxPacket 031E                         ?_TransportManagerNoRoute 0001  
                            ?_NetworkUnicastData 0140                         _LE_GetNeighborDeviceType 6F06  
                                       _TxBuffer 0788                    ??_NetworkSendDiscoverResponse 00AE  
                      _RouteManagerRequestUpdate 7636                                         __Lrparam 0000  
                                _NetworkGetPANID 75FC                                         _TxPacket 4348  
                        __size_of_LE_PinNeighbor 003C               DeviceManagerGetDeviceData@isFormed 0087  
                                    CCM_Dec@text 0097                              ?_isBroadcastAddress 007B  
             DeviceManagerGetDeviceData@isSecure 0085     TMSendFormedPacketTowardsCoordinator@isFormed 008E  
             __size_of_RouteManagerPerformUpdate 02E8                               __end_of_le_findIdx 694E  
                                _NetworkHasRoute 7030                            MiMAC_ReceivedPacket@i 00B8  
                          MiMAC_ReceivedPacket@j 00B6     TMSendFormedPacketTowardsCoordinator@isSecure 008F  
                            _MiApp_IsNetworkBusy 768C                          __size_of_LEDManagerTask 0366  
                               __size_of___awdiv 0078                         _isNetworkSecurityEnabled 764E  
                               __size_of___lldiv 0076                                 __size_of___llmod 0062  
                               __size_of___lwdiv 004A                                 __size_of___lwmod 003E  
                                    CCM_Enc@text 0097                              __end_of_AddMSToTick 614C  
                      __end_of_TimerExitCritical 7678                         i2RegisterRead@IRQ1select 0005  
                            LE_ClearDLQ@neighbor 0085                           AddNodeToNetworkTable@i 008B  
                                     sprintf@idx 0086                                       _EEPROMRead 7140  
                                     sprintf@len 008E               __end_of_RouteManagerProcessReceive 45D0  
                     _RouteManagerProcessReceive 4492                                      _currentTime 01B6  
                                     sprintf@val 0088                   __end_of_MiApp_GetParentAddress 7580  
                                       crc32@crc 0073                             _NetworkGetDeviceType 7654  
                                       crc32@buf 0077                 LE_processReceivedMessage@ll_addr 00AB  
                    DeviceManagerGetDeviceType@i 0086                                     _TimerDisable 7680  
                           __size_of_RegisterSet 002A                       ??_le_findRandomNeighborIdx 0086  
                           ??_NetworkUnicastData 00DC                                    ??i2_WriteFIFO 0003  
                              ?_LELinkQualityGet 0085                                      ??_WriteFIFO 0075  
                         ??_NetworkSetDeviceType 0073                      NetworkSetAddressPAN@address 007F  
                               __size_of_isdigit 001E                                ?_MiMAC_SetChannel 0079  
                                ___lwdiv@divisor 0075                                         _hc_table 0A98  
                     TunnelManagerGetTunnel@addr 00BB                                ?_Read_MAC_Address 007F  
                RoutingTableFindDeviceOrParent@i 0085                                  ___lwdiv@counter 0077  
            RouteManagerProcessReceive@congested 00A5                                         __ptext10 4982  
                                       __ptext11 649C                                         __ptext20 4E36  
                                       __ptext12 5144                                         __ptext21 7686  
                                       __ptext13 04A2                                         __ptext30 6652  
                                       __ptext22 6034                                         __ptext14 7660  
                                       __ptext31 689C                                         __ptext23 624A  
                                       __ptext15 7420                                         __ptext40 3628  
                                       __ptext32 5A20                                         __ptext24 2CF8  
                                       __ptext16 2140                                         __ptext41 484A  
                                       __ptext33 6F06                                         __ptext25 6BF8  
                                       __ptext17 5B78                                         __ptext50 32D2  
                                       __ptext42 40A8                                         __ptext34 75DE  
                                       __ptext26 2614                                         __ptext18 23AE  
                                       __ptext51 6C48                                         __ptext43 1BEE  
                                       __ptext35 395A                                         __ptext27 5E84  
                                       __ptext19 4492                                         __ptext60 6BA6  
                                       __ptext52 54EE                                         __ptext44 67DE  
                                       __ptext36 60C2                                         __ptext28 3F4E  
                                       __ptext61 5C1E                                         __ptext53 6428  
                                       __ptext45 6E8A                                         __ptext37 6AFE  
                                       __ptext29 41FE                                         __ptext70 7564  
                                       __ptext62 66B8                                         __ptext54 75E8  
                                       __ptext46 62C2                                         __ptext38 37CA  
                                       __ptext71 7688                                         __ptext63 69A6  
                                       __ptext55 758C                                         __ptext47 63B2  
                                       __ptext39 7580                                         __ptext80 5326  
                                       __ptext72 768A                                         __ptext64 7636  
                                       __ptext56 6F42                                         __ptext48 61CC  
                                       __ptext81 2AC2                                         __ptext73 6F7E  
                                       __ptext65 540E                                         __ptext57 7172  
                                       __ptext49 4BE6                                         __ptext90 75FC  
                                       __ptext82 683E                                         __ptext74 6FBA  
                                       __ptext66 763E                                         __ptext58 1922  
                                       __ptext91 75A4                                         __ptext83 5F14  
                                       __ptext75 6B52                                         __ptext67 7328  
                                       __ptext59 0B16                                         __ptext92 650E  
                                       __ptext84 347E                                         __ptext76 7664  
                                       __ptext68 6D7A                                         __ptext93 68F6  
                                       __ptext85 4348                                         __ptext77 75F2  
                                       __ptext69 163A                                         __ptext94 3AE4  
                                       __ptext86 734E                                         __ptext78 768C  
                                       __ptext95 6EC8                                         __ptext87 5748  
                                       __ptext79 2F2A                                         __ptext96 6D30  
                                       __ptext88 764E                                         __ptext97 7068  
                                       __ptext89 7598                                         __ptext98 614C  
                                       __ptext99 0F42                       TunnelManagerGetTunnel@trec 00B3  
            __size_of_DeviceManagerGetDeviceData 000C                             ??_isBroadcastAddress 007D  
                             ??_LELinkQualityGet 0089                             __size_of_NetworkInit 00FA  
             LEAppendNeighborInfo@newPrevSentIdx 008C                         TxPacket@allowedTxFailure 0097  
                             ??_MiMAC_SetChannel 007A                                ?_MiMAC_SendPacket 00A2  
                    ?_TransportManagerRouteFound 0001              __size_of_DeviceManagerGetDeviceType 0074  
                   TunnelManagerSetTunnel@device 008F                             ?_MiApp_IsNetworkBusy 0001  
                             ??_Read_MAC_Address 0081                                     _SSP2CON1bits 000F72  
                                _NetworkSequence 763E                    routingTableUpdateEntry@parent 0091  
                               __size_of_sprintf 02A6                        ??_NetworkDataArrivedEvent 0082  
                     __size_of_LinkEstimatorInit 000C                                      i2DelayMs@ms 0009  
                   TunnelManagerSetTunnel@parent 0091                           __size_of_isSameAddress 0026  
                             ??_MiMAC_SendPacket 00AA                                      _LE_ClearDLQ 6B52  
                     BroadcastManagerDelaySend@i 00AC                                      HighISR@bAck 006B  
                                  __size_of_main 0248                                    __size_of_krnd 0170  
                                    HighISR@dPan 0060                TunnelManagerSetTunnel@oldestindex 0099  
                              ??_TMSendDataToRFD 00DC                                         _krndInit 5800  
                                 HighISR@counter 0061                           __size_ofi2_RegisterSet 0026  
            RouteManagerProcessReceive@rcvBeacon 00A8                              __end_ofi2_SetRFMode 6652  
                         _netChooseAdvertiseTime 633A                            _NetworkGetMyRouteInfo 75A4  
                           _BeaconManagerTrigger 7664                          __end_of_isButtonPressed 7328  
                                       _tmpBlock 01E0                                _IsMemberOfNetwork 7670  
                __end_of_NetworkGetParentAddress 7624                            BroadcastManagerTask@i 00CF  
                           __size_of_TimeTickISR 0032                                       _LEDCommand 6F42  
                                       int$flags 004F                         MiApp_SetAddressPan@panid 0085  
                        _le_findEmptyNeighborIdx 6C48                   __end_ofisBroadcastAddress@F537 FF8D  
                             ?_IsMemberOfNetwork 0001                                         main@addr 027F  
                         __size_of_le_computeETX 003E                      le_findRandomNeighborIdx@cnt 0088  
                    le_findRandomNeighborIdx@res 0089                                         main@src1 0278  
                                       _userdata 07C8                                         _switches 0046  
                           _NetworkHasRoute$4283 0088                   TunnelManagerInvalidateTunnel@i 0087  
                     MiMAC_SendPacket@MACPayload 00A7                 TunnelManagerSetTunnel@emptyindex 009B  
                           __size_of_TimerEnable 0004                             isKnownPacket@unknown 00C1  
                    GetRouteAddressOfChild@child 008B                            ?_NetworkGetDeviceType 0001  
                __end_of_MiApp_IsMemberOfNetwork 7670                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                              ??_IsMemberOfNetwork 008A  
                       __end_of_isInvalidAddress 75BC                                         memcmp@s1 0073  
                                       memcmp@s2 0075                                    ?_HardwareInit 0001  
                         __size_of_RouterEvicted 00A0                                         memcpy@d1 0075  
                                i2WriteFIFO@Data 0003                                         memcpy@s1 0077  
                    ?_NetworkManagerGetMyAddress 0073                    DeviceManagerGetDeviceType@dev 0085  
                         __size_of_isKnownPacket 026E                                         isdigit@c 0075  
                                       memset@p1 0073                                  le_computeETX@q1 007D  
                          ??_MiApp_IsNetworkBusy 0073                                   le_updateETX@ne 0080  
                    MiApp_ProtocolInit@initValue 008F                                         intlevel2 0000  
                              ?_MiApp_SetChannel 0001                                        sprintf@ap 008B  
                                      sprintf@cp 008C                                        sprintf@sp 007A  
                             IsNetworkDevice@res 009C                       __end_of_radioDiscardPacket 7664  
                        ?_MiApp_MessageAvailable 0001                              __end_ofi2_WriteFIFO 73E2  
                                 i2_RegisterRead 7232                            TMSendDataToRFD@device 00D4  
                __end_of_TransportManagerNoRoute 768C                                    radioUnicast@i 00C4  
                        __end_of_NetworkGetPANID 7606                                 ___lwmod@dividend 007F  
                  __size_of_LEAppendNeighborInfo 018A                                 ___lldiv@dividend 0073  
                              ?i2_MiWi_TickGetMs 000D                    __size_of_passLinkEtxThreshold 000E  
                             ??_MiApp_SetChannel 007C                            LE_InsertNeighbor@nidx 009C  
                                     i2DelayUS@i 0005                  LE_processReceivedMessage@source 009F  
                    TunnelManagerSetTunnel@index 009D                            ?_BeaconManagerTrigger 0001  
                                  ?_MiWi_TickGet 0073                          __end_of_NetworkHasRoute 7068  
              le_updateNeighborTableEst@totalPkt 0093                               ??i2_MiWi_TickGetMs 0011  
                                  ??_BlinkRedLED 0076                        __end_of_IsMemberOfNetwork 7674  
                                     HighISR@tmr 006C                         le_findWorstNeighborIdx@i 008E  
                            _beaconMessageBuffer 0700                               _MiApp_ProtocolInit 694E  
                   SendPacket@DestinationAddress 00AE                                      _AddMSToTick 60C2  
                    ??_le_updateNeighborEntryIdx 009B               NetworkSendDiscoverResponse@address 0144  
                    __size_of_NetworkManagerTask 02CC                                    _MACInitParams 0036  
                            MiMAC_Init@initValue 0087                      ??_le_updateNeighborTableEst 008A  
              __size_of_NetworkPrepareSendPacket 00E0                        ?_NetworkPrepareSendPacket 007F  
                  __size_of_TransportManagerInit 0016                    __size_of_TransportManagerTask 042C  
        le_findWorstNeighborIdx@worstNeighborIdx 0086                                    _isSameAddress 7374  
            TunnelManagerInvalidateTunnel@device 0081                              ?_MiApp_ProtocolInit 0001  
                                EEPROMRead@count 0077                       __size_of_TimerExitCritical 0004  
                       ?_routingTableUpdateEntry 008F                                      _prevSentIdx 01CA  
                   MiApp_SearchConnection@tStart 026C                         LEDManagerTask@lNextState 022C  
                                routeInfoInit@ri 007B                                         sprintf@c 0092  
                                       sprintf@f 007C                              HighISR@ackInfoIndex 006F  
                               ??_MiWi_TickGetMs 0083                                 ??_radioBroadcast 00C2  
                                  i2_RegisterSet 739A           __end_of_RoutingTableFindDeviceOrParent 5ACC  
        __size_of_RoutingTableFindDeviceOrParent 00AC                   _RoutingTableFindDeviceOrParent 5A20  
                                    ?_EEPROMRead 0075                                   ??_HardwareInit 0073  
                                     _PPSCONbits 000EFF                                 ___lldiv@quotient 007C  
                           TMSendDataToRFD@pType 00D6                          __end_of_NetworkSequence 7646  
                                ___lwmod@divisor 0081                                  ___lwmod@counter 0083  
                              i2TxPacket@rssival 002A                              TxPacket@TxPacketLen 009B  
                     ?_MiApp_EstablishConnection 009A                         ??_NetworkDiscoveredEvent 0077  
                         __size_of_LCD_WriteData 0016                                      _SSPCON1bits 000FC6  
                                     _WDTCONbits 000FC0                               _routingTableActive 00E7  
                 NetworkSendDiscoverRequest@dhdr 0142                                   EEPROMRead@addr 0076  
             __size_of_CoordinatorGenericAddress 0026                                   EEPROMRead@dest 0075  
                 NetworkSendDiscoverRequest@size 0140                   __end_of_MiApp_MessageAvailable 5236  
                         __end_ofi2_RegisterRead 725E                  NetworkSendDiscoverResponse@dhdr 0142  
                            _MiMAC_DiscardPacket 7420                       TMSendFormedPacketToRFD@res 00CF  
                                  _le_computeETX 6E8A                  NetworkSendDiscoverResponse@size 0140  
                                    i2_SetRFMode 65EA         TMSendFormedPacketTowardsCoordinator@data 008A  
NetworkManagerProcessIncomingData@isSecurePacket 0183                             ??_MiApp_ProtocolInit 008E  
                               i2TxPacket@status 001B                                _BeaconManagerInit 73E2  
                          networkSendBeacon@last 00C9         TMSendFormedPacketTowardsCoordinator@size 008C  
                              _BeaconManagerTask 5326                                 ??i2_MiWi_TickGet 0005  
                                i2TxPacket@delay 0024                         __end_of_LE_UnpinNeighbor 6FBA  
                                i2TxPacket@reTry 0026                               ?_BeaconManagerInit 0001  
                                 ??_MiWi_TickGet 0077                           ?_NetworkGetMyRouteInfo 0073  
                               _netDecayInterval 7068                               ?_BeaconManagerTask 0001  
             __size_of_LE_processReceivedMessage 0138                                    i2TxPacket@CCA 0015  
                             _le_initNeighborIdx 61CC                               _CoordinatorAddress 75DE  
                              _networkSendBeacon 2AC2                                      encode@delta 0081  
                        ?_NetworkReleaseUserData 0001                            RegisterSet@IRQ1select 0077  
                   __end_of_MiMAC_ReceivedPacket 12D4                                    _RouterEvicted 5C1E  
                              _ActiveScanChannel 01CC                         __size_of_IsNetworkDevice 0190  
                              ?_routingTableFind 0088                                     i2TxPacket@t1 001C  
                                   i2TxPacket@t2 0020                                      encode@part1 0084  
                                    encode@part2 0086                        ??_le_findEmptyNeighborIdx 0075  
                                    i2TxPacket@i 002B                                      i2TxPacket@j 0028  
                                 _LE_PinNeighbor 6FBA                                    _isKnownPacket 2140  
