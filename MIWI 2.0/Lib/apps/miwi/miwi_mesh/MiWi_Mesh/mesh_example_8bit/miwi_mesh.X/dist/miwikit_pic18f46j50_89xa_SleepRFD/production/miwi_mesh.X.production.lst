

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Nov 02 10:45:09 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=2,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=2,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=2,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	text148,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	text175,global,reloc=2,class=CODE,delta=1
   203                           	psect	text176,global,reloc=2,class=CODE,delta=1
   204                           	psect	text177,global,reloc=2,class=CODE,delta=1
   205                           	psect	text178,global,reloc=2,class=CODE,delta=1
   206                           	psect	text179,global,reloc=2,class=CODE,delta=1
   207                           	psect	text180,global,reloc=2,class=CODE,delta=1
   208                           	psect	text181,global,reloc=2,class=CODE,delta=1
   209                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   210                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   211                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   212  0000                     
   213                           	psect	idataCOMRAM
   214  0077FC                     __pidataCOMRAM:
   215                           	opt stack 0
   216                           
   217                           ;initializer for _w
   218  0077FC  07CD               	dw	1997
   219  0077FE  387B               	dw	14459
   220                           
   221                           ;initializer for _y
   222  007800  B535               	dw	46389
   223  007802  2053               	dw	8275
   224                           
   225                           ;initializer for _myPANID
   226  007804  1234               	dw	4660
   227                           
   228                           	psect	idataBANK1
   229  00777C                     __pidataBANK1:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _x
   233  00777C  BA36               	dw	47670
   234  00777E  38D1               	dw	14545
   235                           
   236                           ;initializer for _z
   237  007780  9799               	dw	38809
   238  007782  0DFC               	dw	3580
   239                           
   240                           ;initializer for _DEVPanID
   241  007784  FFE3               	dw	65507
   242                           
   243                           ;initializer for _DeviceType
   244  007786  01                 	db	1
   245                           
   246                           ;initializer for _addressLen
   247  007787  02                 	db	2
   248                           
   249                           ;initializer for _MyAddress
   250  007788  01                 	db	1
   251  007789  03                 	db	3
   252                           
   253                           ;initializer for _myLongAddress
   254  00778A  04                 	db	4
   255  00778B  77                 	db	119
   256                           
   257                           	psect	mediumconst
   258  00FB08                     __pmediumconst:
   259                           	opt stack 0
   260  00FB08  00                 	db	0
   261  00FB09                     _crc32_table:
   262                           	opt stack 0
   263  00FB09  0000               	dw	0
   264  00FB0B  0000               	dw	0
   265  00FB0D  3096               	dw	12438
   266  00FB0F  7707               	dw	30471
   267  00FB11  612C               	dw	24876
   268  00FB13  EE0E               	dw	60942
   269  00FB15  51BA               	dw	20922
   270  00FB17  9909               	dw	39177
   271  00FB19  C419               	dw	50201
   272  00FB1B  076D               	dw	1901
   273  00FB1D  F48F               	dw	62607
   274  00FB1F  706A               	dw	28778
   275  00FB21  A535               	dw	42293
   276  00FB23  E963               	dw	59747
   277  00FB25  95A3               	dw	38307
   278  00FB27  9E64               	dw	40548
   279  00FB29  8832               	dw	34866
   280  00FB2B  0EDB               	dw	3803
   281  00FB2D  B8A4               	dw	47268
   282  00FB2F  79DC               	dw	31196
   283  00FB31  E91E               	dw	59678
   284  00FB33  E0D5               	dw	57557
   285  00FB35  D988               	dw	55688
   286  00FB37  97D2               	dw	38866
   287  00FB39  4C2B               	dw	19499
   288  00FB3B  09B6               	dw	2486
   289  00FB3D  7CBD               	dw	31933
   290  00FB3F  7EB1               	dw	32433
   291  00FB41  2D07               	dw	11527
   292  00FB43  E7B8               	dw	59320
   293  00FB45  1D91               	dw	7569
   294  00FB47  90BF               	dw	37055
   295  00FB49  1064               	dw	4196
   296  00FB4B  1DB7               	dw	7607
   297  00FB4D  20F2               	dw	8434
   298  00FB4F  6AB0               	dw	27312
   299  00FB51  7148               	dw	29000
   300  00FB53  F3B9               	dw	62393
   301  00FB55  41DE               	dw	16862
   302  00FB57  84BE               	dw	33982
   303  00FB59  D47D               	dw	54397
   304  00FB5B  1ADA               	dw	6874
   305  00FB5D  E4EB               	dw	58603
   306  00FB5F  6DDD               	dw	28125
   307  00FB61  B551               	dw	46417
   308  00FB63  F4D4               	dw	62676
   309  00FB65  85C7               	dw	34247
   310  00FB67  83D3               	dw	33747
   311  00FB69  9856               	dw	38998
   312  00FB6B  136C               	dw	4972
   313  00FB6D  A8C0               	dw	43200
   314  00FB6F  646B               	dw	25707
   315  00FB71  F97A               	dw	63866
   316  00FB73  FD62               	dw	64866
   317  00FB75  C9EC               	dw	51692
   318  00FB77  8A65               	dw	35429
   319  00FB79  5C4F               	dw	23631
   320  00FB7B  1401               	dw	5121
   321  00FB7D  6CD9               	dw	27865
   322  00FB7F  6306               	dw	25350
   323  00FB81  3D63               	dw	15715
   324  00FB83  FA0F               	dw	64015
   325  00FB85  0DF5               	dw	3573
   326  00FB87  8D08               	dw	36104
   327  00FB89  20C8               	dw	8392
   328  00FB8B  3B6E               	dw	15214
   329  00FB8D  105E               	dw	4190
   330  00FB8F  4C69               	dw	19561
   331  00FB91  41E4               	dw	16868
   332  00FB93  D560               	dw	54624
   333  00FB95  7172               	dw	29042
   334  00FB97  A267               	dw	41575
   335  00FB99  E4D1               	dw	58577
   336  00FB9B  3C03               	dw	15363
   337  00FB9D  D447               	dw	54343
   338  00FB9F  4B04               	dw	19204
   339  00FBA1  85FD               	dw	34301
   340  00FBA3  D20D               	dw	53773
   341  00FBA5  B56B               	dw	46443
   342  00FBA7  A50A               	dw	42250
   343  00FBA9  A8FA               	dw	43258
   344  00FBAB  35B5               	dw	13749
   345  00FBAD  986C               	dw	39020
   346  00FBAF  42B2               	dw	17074
   347  00FBB1  C9D6               	dw	51670
   348  00FBB3  DBBB               	dw	56251
   349  00FBB5  F940               	dw	63808
   350  00FBB7  ACBC               	dw	44220
   351  00FBB9  6CE3               	dw	27875
   352  00FBBB  32D8               	dw	13016
   353  00FBBD  5C75               	dw	23669
   354  00FBBF  45DF               	dw	17887
   355  00FBC1  0DCF               	dw	3535
   356  00FBC3  DCD6               	dw	56534
   357  00FBC5  3D59               	dw	15705
   358  00FBC7  ABD1               	dw	43985
   359  00FBC9  30AC               	dw	12460
   360  00FBCB  26D9               	dw	9945
   361  00FBCD  003A               	dw	58
   362  00FBCF  51DE               	dw	20958
   363  00FBD1  5180               	dw	20864
   364  00FBD3  C8D7               	dw	51415
   365  00FBD5  6116               	dw	24854
   366  00FBD7  BFD0               	dw	49104
   367  00FBD9  F4B5               	dw	62645
   368  00FBDB  21B4               	dw	8628
   369  00FBDD  C423               	dw	50211
   370  00FBDF  56B3               	dw	22195
   371  00FBE1  9599               	dw	38297
   372  00FBE3  CFBA               	dw	53178
   373  00FBE5  A50F               	dw	42255
   374  00FBE7  B8BD               	dw	47293
   375  00FBE9  B89E               	dw	47262
   376  00FBEB  2802               	dw	10242
   377  00FBED  8808               	dw	34824
   378  00FBEF  5F05               	dw	24325
   379  00FBF1  D9B2               	dw	55730
   380  00FBF3  C60C               	dw	50700
   381  00FBF5  E924               	dw	59684
   382  00FBF7  B10B               	dw	45323
   383  00FBF9  7C87               	dw	31879
   384  00FBFB  2F6F               	dw	12143
   385  00FBFD  4C11               	dw	19473
   386  00FBFF  5868               	dw	22632
   387  00FC01  1DAB               	dw	7595
   388  00FC03  C161               	dw	49505
   389  00FC05  2D3D               	dw	11581
   390  00FC07  B666               	dw	46694
   391  00FC09  4190               	dw	16784
   392  00FC0B  76DC               	dw	30428
   393  00FC0D  7106               	dw	28934
   394  00FC0F  01DB               	dw	475
   395  00FC11  20BC               	dw	8380
   396  00FC13  98D2               	dw	39122
   397  00FC15  102A               	dw	4138
   398  00FC17  EFD5               	dw	61397
   399  00FC19  8589               	dw	34185
   400  00FC1B  71B1               	dw	29105
   401  00FC1D  B51F               	dw	46367
   402  00FC1F  06B6               	dw	1718
   403  00FC21  E4A5               	dw	58533
   404  00FC23  9FBF               	dw	40895
   405  00FC25  D433               	dw	54323
   406  00FC27  E8B8               	dw	59576
   407  00FC29  C9A2               	dw	51618
   408  00FC2B  7807               	dw	30727
   409  00FC2D  F934               	dw	63796
   410  00FC2F  0F00               	dw	3840
   411  00FC31  A88E               	dw	43150
   412  00FC33  9609               	dw	38409
   413  00FC35  9818               	dw	38936
   414  00FC37  E10E               	dw	57614
   415  00FC39  0DBB               	dw	3515
   416  00FC3B  7F6A               	dw	32618
   417  00FC3D  3D2D               	dw	15661
   418  00FC3F  086D               	dw	2157
   419  00FC41  6C97               	dw	27799
   420  00FC43  9164               	dw	37220
   421  00FC45  5C01               	dw	23553
   422  00FC47  E663               	dw	58979
   423  00FC49  51F4               	dw	20980
   424  00FC4B  6B6B               	dw	27499
   425  00FC4D  6162               	dw	24930
   426  00FC4F  1C6C               	dw	7276
   427  00FC51  30D8               	dw	12504
   428  00FC53  8565               	dw	34149
   429  00FC55  004E               	dw	78
   430  00FC57  F262               	dw	62050
   431  00FC59  95ED               	dw	38381
   432  00FC5B  6C06               	dw	27654
   433  00FC5D  A57B               	dw	42363
   434  00FC5F  1B01               	dw	6913
   435  00FC61  F4C1               	dw	62657
   436  00FC63  8208               	dw	33288
   437  00FC65  C457               	dw	50263
   438  00FC67  F50F               	dw	62735
   439  00FC69  D9C6               	dw	55750
   440  00FC6B  65B0               	dw	26032
   441  00FC6D  E950               	dw	59728
   442  00FC6F  12B7               	dw	4791
   443  00FC71  B8EA               	dw	47338
   444  00FC73  8BBE               	dw	35774
   445  00FC75  887C               	dw	34940
   446  00FC77  FCB9               	dw	64697
   447  00FC79  1DDF               	dw	7647
   448  00FC7B  62DD               	dw	25309
   449  00FC7D  2D49               	dw	11593
   450  00FC7F  15DA               	dw	5594
   451  00FC81  7CF3               	dw	31987
   452  00FC83  8CD3               	dw	36051
   453  00FC85  4C65               	dw	19557
   454  00FC87  FBD4               	dw	64468
   455  00FC89  6158               	dw	24920
   456  00FC8B  4DB2               	dw	19890
   457  00FC8D  51CE               	dw	20942
   458  00FC8F  3AB5               	dw	15029
   459  00FC91  0074               	dw	116
   460  00FC93  A3BC               	dw	41916
   461  00FC95  30E2               	dw	12514
   462  00FC97  D4BB               	dw	54459
   463  00FC99  A541               	dw	42305
   464  00FC9B  4ADF               	dw	19167
   465  00FC9D  95D7               	dw	38359
   466  00FC9F  3DD8               	dw	15832
   467  00FCA1  C46D               	dw	50285
   468  00FCA3  A4D1               	dw	42193
   469  00FCA5  F4FB               	dw	62715
   470  00FCA7  D3D6               	dw	54230
   471  00FCA9  E96A               	dw	59754
   472  00FCAB  4369               	dw	17257
   473  00FCAD  D9FC               	dw	55804
   474  00FCAF  346E               	dw	13422
   475  00FCB1  8846               	dw	34886
   476  00FCB3  AD67               	dw	44391
   477  00FCB5  B8D0               	dw	47312
   478  00FCB7  DA60               	dw	55904
   479  00FCB9  2D73               	dw	11635
   480  00FCBB  4404               	dw	17412
   481  00FCBD  1DE5               	dw	7653
   482  00FCBF  3303               	dw	13059
   483  00FCC1  4C5F               	dw	19551
   484  00FCC3  AA0A               	dw	43530
   485  00FCC5  7CC9               	dw	31945
   486  00FCC7  DD0D               	dw	56589
   487  00FCC9  713C               	dw	28988
   488  00FCCB  5005               	dw	20485
   489  00FCCD  41AA               	dw	16810
   490  00FCCF  2702               	dw	9986
   491  00FCD1  1010               	dw	4112
   492  00FCD3  BE0B               	dw	48651
   493  00FCD5  2086               	dw	8326
   494  00FCD7  C90C               	dw	51468
   495  00FCD9  B525               	dw	46373
   496  00FCDB  5768               	dw	22376
   497  00FCDD  85B3               	dw	34227
   498  00FCDF  206F               	dw	8303
   499  00FCE1  D409               	dw	54281
   500  00FCE3  B966               	dw	47462
   501  00FCE5  E49F               	dw	58527
   502  00FCE7  CE61               	dw	52833
   503  00FCE9  F90E               	dw	63758
   504  00FCEB  5EDE               	dw	24286
   505  00FCED  C998               	dw	51608
   506  00FCEF  29D9               	dw	10713
   507  00FCF1  9822               	dw	38946
   508  00FCF3  B0D0               	dw	45264
   509  00FCF5  A8B4               	dw	43188
   510  00FCF7  C7D7               	dw	51159
   511  00FCF9  3D17               	dw	15639
   512  00FCFB  59B3               	dw	22963
   513  00FCFD  0D81               	dw	3457
   514  00FCFF  2EB4               	dw	11956
   515  00FD01  5C3B               	dw	23611
   516  00FD03  B7BD               	dw	47037
   517  00FD05  6CAD               	dw	27821
   518  00FD07  C0BA               	dw	49338
   519  00FD09  8320               	dw	33568
   520  00FD0B  EDB8               	dw	60856
   521  00FD0D  B3B6               	dw	46006
   522  00FD0F  9ABF               	dw	39615
   523  00FD11  E20C               	dw	57868
   524  00FD13  03B6               	dw	950
   525  00FD15  D29A               	dw	53914
   526  00FD17  74B1               	dw	29873
   527  00FD19  4739               	dw	18233
   528  00FD1B  EAD5               	dw	60117
   529  00FD1D  77AF               	dw	30639
   530  00FD1F  9DD2               	dw	40402
   531  00FD21  2615               	dw	9749
   532  00FD23  04DB               	dw	1243
   533  00FD25  1683               	dw	5763
   534  00FD27  73DC               	dw	29660
   535  00FD29  0B12               	dw	2834
   536  00FD2B  E363               	dw	58211
   537  00FD2D  3B84               	dw	15236
   538  00FD2F  9464               	dw	37988
   539  00FD31  6A3E               	dw	27198
   540  00FD33  0D6D               	dw	3437
   541  00FD35  5AA8               	dw	23208
   542  00FD37  7A6A               	dw	31338
   543  00FD39  CF0B               	dw	53003
   544  00FD3B  E40E               	dw	58382
   545  00FD3D  FF9D               	dw	65437
   546  00FD3F  9309               	dw	37641
   547  00FD41  AE27               	dw	44583
   548  00FD43  0A00               	dw	2560
   549  00FD45  9EB1               	dw	40625
   550  00FD47  7D07               	dw	32007
   551  00FD49  9344               	dw	37700
   552  00FD4B  F00F               	dw	61455
   553  00FD4D  A3D2               	dw	41938
   554  00FD4F  8708               	dw	34568
   555  00FD51  F268               	dw	62056
   556  00FD53  1E01               	dw	7681
   557  00FD55  C2FE               	dw	49918
   558  00FD57  6906               	dw	26886
   559  00FD59  575D               	dw	22365
   560  00FD5B  F762               	dw	63330
   561  00FD5D  67CB               	dw	26571
   562  00FD5F  8065               	dw	32869
   563  00FD61  3671               	dw	13937
   564  00FD63  196C               	dw	6508
   565  00FD65  06E7               	dw	1767
   566  00FD67  6E6B               	dw	28267
   567  00FD69  1B76               	dw	7030
   568  00FD6B  FED4               	dw	65236
   569  00FD6D  2BE0               	dw	11232
   570  00FD6F  89D3               	dw	35283
   571  00FD71  7A5A               	dw	31322
   572  00FD73  10DA               	dw	4314
   573  00FD75  4ACC               	dw	19148
   574  00FD77  67DD               	dw	26589
   575  00FD79  DF6F               	dw	57199
   576  00FD7B  F9B9               	dw	63929
   577  00FD7D  EFF9               	dw	61433
   578  00FD7F  8EBE               	dw	36542
   579  00FD81  BE43               	dw	48707
   580  00FD83  17B7               	dw	6071
   581  00FD85  8ED5               	dw	36565
   582  00FD87  60B0               	dw	24752
   583  00FD89  A3E8               	dw	41960
   584  00FD8B  D6D6               	dw	54998
   585  00FD8D  937E               	dw	37758
   586  00FD8F  A1D1               	dw	41425
   587  00FD91  C2C4               	dw	49860
   588  00FD93  38D8               	dw	14552
   589  00FD95  F252               	dw	62034
   590  00FD97  4FDF               	dw	20447
   591  00FD99  67F1               	dw	26609
   592  00FD9B  D1BB               	dw	53691
   593  00FD9D  5767               	dw	22375
   594  00FD9F  A6BC               	dw	42684
   595  00FDA1  06DD               	dw	1757
   596  00FDA3  3FB5               	dw	16309
   597  00FDA5  364B               	dw	13899
   598  00FDA7  48B2               	dw	18610
   599  00FDA9  2BDA               	dw	11226
   600  00FDAB  D80D               	dw	55309
   601  00FDAD  1B4C               	dw	6988
   602  00FDAF  AF0A               	dw	44810
   603  00FDB1  4AF6               	dw	19190
   604  00FDB3  3603               	dw	13827
   605  00FDB5  7A60               	dw	31328
   606  00FDB7  4104               	dw	16644
   607  00FDB9  EFC3               	dw	61379
   608  00FDBB  DF60               	dw	57184
   609  00FDBD  DF55               	dw	57173
   610  00FDBF  A867               	dw	43111
   611  00FDC1  8EEF               	dw	36591
   612  00FDC3  316E               	dw	12654
   613  00FDC5  BE79               	dw	48761
   614  00FDC7  4669               	dw	18025
   615  00FDC9  B38C               	dw	45964
   616  00FDCB  CB61               	dw	52065
   617  00FDCD  831A               	dw	33562
   618  00FDCF  BC66               	dw	48230
   619  00FDD1  D2A0               	dw	53920
   620  00FDD3  256F               	dw	9583
   621  00FDD5  E236               	dw	57910
   622  00FDD7  5268               	dw	21096
   623  00FDD9  7795               	dw	30613
   624  00FDDB  CC0C               	dw	52236
   625  00FDDD  4703               	dw	18179
   626  00FDDF  BB0B               	dw	47883
   627  00FDE1  16B9               	dw	5817
   628  00FDE3  2202               	dw	8706
   629  00FDE5  262F               	dw	9775
   630  00FDE7  5505               	dw	21765
   631  00FDE9  3BBE               	dw	15294
   632  00FDEB  C5BA               	dw	50618
   633  00FDED  0B28               	dw	2856
   634  00FDEF  B2BD               	dw	45757
   635  00FDF1  5A92               	dw	23186
   636  00FDF3  2BB4               	dw	11188
   637  00FDF5  6A04               	dw	27140
   638  00FDF7  5CB3               	dw	23731
   639  00FDF9  FFA7               	dw	65447
   640  00FDFB  C2D7               	dw	49879
   641  00FDFD  CF31               	dw	53041
   642  00FDFF  B5D0               	dw	46544
   643  00FE01  9E8B               	dw	40587
   644  00FE03  2CD9               	dw	11481
   645  00FE05  AE1D               	dw	44573
   646  00FE07  5BDE               	dw	23518
   647  00FE09  C2B0               	dw	49840
   648  00FE0B  9B64               	dw	39780
   649  00FE0D  F226               	dw	61990
   650  00FE0F  EC63               	dw	60515
   651  00FE11  A39C               	dw	41884
   652  00FE13  756A               	dw	30058
   653  00FE15  930A               	dw	37642
   654  00FE17  026D               	dw	621
   655  00FE19  06A9               	dw	1705
   656  00FE1B  9C09               	dw	39945
   657  00FE1D  363F               	dw	13887
   658  00FE1F  EB0E               	dw	60174
   659  00FE21  6785               	dw	26501
   660  00FE23  7207               	dw	29191
   661  00FE25  5713               	dw	22291
   662  00FE27  0500               	dw	1280
   663  00FE29  4A82               	dw	19074
   664  00FE2B  95BF               	dw	38335
   665  00FE2D  7A14               	dw	31252
   666  00FE2F  E2B8               	dw	58040
   667  00FE31  2BAE               	dw	11182
   668  00FE33  7BB1               	dw	31665
   669  00FE35  1B38               	dw	6968
   670  00FE37  0CB6               	dw	3254
   671  00FE39  8E9B               	dw	36507
   672  00FE3B  92D2               	dw	37586
   673  00FE3D  BE0D               	dw	48653
   674  00FE3F  E5D5               	dw	58837
   675  00FE41  EFB7               	dw	61367
   676  00FE43  7CDC               	dw	31964
   677  00FE45  DF21               	dw	57121
   678  00FE47  0BDB               	dw	3035
   679  00FE49  D2D4               	dw	53972
   680  00FE4B  86D3               	dw	34515
   681  00FE4D  E242               	dw	57922
   682  00FE4F  F1D4               	dw	61908
   683  00FE51  B3F8               	dw	46072
   684  00FE53  68DD               	dw	26845
   685  00FE55  836E               	dw	33646
   686  00FE57  1FDA               	dw	8154
   687  00FE59  16CD               	dw	5837
   688  00FE5B  81BE               	dw	33214
   689  00FE5D  265B               	dw	9819
   690  00FE5F  F6B9               	dw	63161
   691  00FE61  77E1               	dw	30689
   692  00FE63  6FB0               	dw	28592
   693  00FE65  4777               	dw	18295
   694  00FE67  18B7               	dw	6327
   695  00FE69  5AE6               	dw	23270
   696  00FE6B  8808               	dw	34824
   697  00FE6D  6A70               	dw	27248
   698  00FE6F  FF0F               	dw	65295
   699  00FE71  3BCA               	dw	15306
   700  00FE73  6606               	dw	26118
   701  00FE75  0B5C               	dw	2908
   702  00FE77  1101               	dw	4353
   703  00FE79  9EFF               	dw	40703
   704  00FE7B  8F65               	dw	36709
   705  00FE7D  AE69               	dw	44649
   706  00FE7F  F862               	dw	63586
   707  00FE81  FFD3               	dw	65491
   708  00FE83  616B               	dw	24939
   709  00FE85  CF45               	dw	53061
   710  00FE87  166C               	dw	5740
   711  00FE89  E278               	dw	57976
   712  00FE8B  A00A               	dw	40970
   713  00FE8D  D2EE               	dw	53998
   714  00FE8F  D70D               	dw	55053
   715  00FE91  8354               	dw	33620
   716  00FE93  4E04               	dw	19972
   717  00FE95  B3C2               	dw	46018
   718  00FE97  3903               	dw	14595
   719  00FE99  2661               	dw	9825
   720  00FE9B  A767               	dw	42855
   721  00FE9D  16F7               	dw	5879
   722  00FE9F  D060               	dw	53344
   723  00FEA1  474D               	dw	18253
   724  00FEA3  4969               	dw	18793
   725  00FEA5  77DB               	dw	30683
   726  00FEA7  3E6E               	dw	15982
   727  00FEA9  6A4A               	dw	27210
   728  00FEAB  AED1               	dw	44753
   729  00FEAD  5ADC               	dw	23260
   730  00FEAF  D9D6               	dw	55766
   731  00FEB1  0B66               	dw	2918
   732  00FEB3  40DF               	dw	16607
   733  00FEB5  3BF0               	dw	15344
   734  00FEB7  37D8               	dw	14296
   735  00FEB9  AE53               	dw	44627
   736  00FEBB  A9BC               	dw	43452
   737  00FEBD  9EC5               	dw	40645
   738  00FEBF  DEBB               	dw	57019
   739  00FEC1  CF7F               	dw	53119
   740  00FEC3  47B2               	dw	18354
   741  00FEC5  FFE9               	dw	65513
   742  00FEC7  30B5               	dw	12469
   743  00FEC9  F21C               	dw	61980
   744  00FECB  BDBD               	dw	48573
   745  00FECD  C28A               	dw	49802
   746  00FECF  CABA               	dw	51898
   747  00FED1  9330               	dw	37680
   748  00FED3  53B3               	dw	21427
   749  00FED5  A3A6               	dw	41894
   750  00FED7  24B4               	dw	9396
   751  00FED9  3605               	dw	13829
   752  00FEDB  BAD0               	dw	47824
   753  00FEDD  0693               	dw	1683
   754  00FEDF  CDD7               	dw	52695
   755  00FEE1  5729               	dw	22313
   756  00FEE3  54DE               	dw	21726
   757  00FEE5  67BF               	dw	26559
   758  00FEE7  23D9               	dw	9177
   759  00FEE9  7A2E               	dw	31278
   760  00FEEB  B366               	dw	45926
   761  00FEED  4AB8               	dw	19128
   762  00FEEF  C461               	dw	50273
   763  00FEF1  1B02               	dw	6914
   764  00FEF3  5D68               	dw	23912
   765  00FEF5  2B94               	dw	11156
   766  00FEF7  2A6F               	dw	10863
   767  00FEF9  BE37               	dw	48695
   768  00FEFB  B40B               	dw	46091
   769  00FEFD  8EA1               	dw	36513
   770  00FEFF  C30C               	dw	49932
   771  00FF01  DF1B               	dw	57115
   772  00FF03  5A05               	dw	23045
   773  00FF05  EF8D               	dw	61325
   774  00FF07  2D02               	dw	11522
   775  00FF09                     __end_of_crc32_table:
   776                           	opt stack 0
   777  00FF09                     _InitConfigRegs:
   778                           	opt stack 0
   779  00FF09  002E               	dw	46
   780  00FF0B  0284               	dw	644
   781  00FF0D  0401               	dw	1025
   782  00FF0F  0601               	dw	1537
   783  00FF11  080C               	dw	2060
   784  00FF13  0AC1               	dw	2753
   785  00FF15  0C77               	dw	3191
   786  00FF17  0E64               	dw	3684
   787  00FF19  1032               	dw	4146
   788  00FF1B  1200               	dw	4608
   789  00FF1D  1400               	dw	5120
   790  00FF1F  1600               	dw	5632
   791  00FF21  1838               	dw	6200
   792  00FF23  1AC8               	dw	6856
   793  00FF25  1C0D               	dw	7181
   794  00FF27  1E00               	dw	7680
   795  00FF29  20FF               	dw	8447
   796  00FF2B  2238               	dw	8760
   797  00FF2D  2438               	dw	9272
   798  00FF2F  2607               	dw	9735
   799  00FF31  2800               	dw	10240
   800  00FF33  2A00               	dw	10752
   801  00FF35  2C69               	dw	11369
   802  00FF37  2E81               	dw	11905
   803  00FF39  307E               	dw	12414
   804  00FF3B  3296               	dw	12950
   805  00FF3D  34F8               	dw	13560
   806  00FF3F  3688               	dw	13960
   807  00FF41  3840               	dw	14400
   808  00FF43  3A00               	dw	14848
   809  00FF45  3CE8               	dw	15592
   810  00FF47  3E00               	dw	15872
   811  00FF49                     __end_of_InitConfigRegs:
   812                           	opt stack 0
   813  00FF49                     _PVALUE:
   814                           	opt stack 0
   815  00FF49  54                 	db	84
   816  00FF4A  54                 	db	84
   817  00FF4B  54                 	db	84
   818  00FF4C  54                 	db	84
   819  00FF4D  54                 	db	84
   820  00FF4E  54                 	db	84
   821  00FF4F  54                 	db	84
   822  00FF50  54                 	db	84
   823  00FF51  54                 	db	84
   824  00FF52  54                 	db	84
   825  00FF53  54                 	db	84
   826  00FF54  54                 	db	84
   827  00FF55  54                 	db	84
   828  00FF56  54                 	db	84
   829  00FF57  55                 	db	85
   830  00FF58  55                 	db	85
   831  00FF59  55                 	db	85
   832  00FF5A  55                 	db	85
   833  00FF5B  55                 	db	85
   834  00FF5C  55                 	db	85
   835  00FF5D  55                 	db	85
   836  00FF5E  55                 	db	85
   837  00FF5F  55                 	db	85
   838  00FF60  55                 	db	85
   839  00FF61  55                 	db	85
   840  00FF62  55                 	db	85
   841  00FF63  55                 	db	85
   842  00FF64  55                 	db	85
   843  00FF65  55                 	db	85
   844  00FF66  55                 	db	85
   845  00FF67  55                 	db	85
   846  00FF68  55                 	db	85
   847  00FF69                     __end_of_PVALUE:
   848                           	opt stack 0
   849  00FF69                     _SVALUE:
   850                           	opt stack 0
   851  00FF69  2D                 	db	45
   852  00FF6A  30                 	db	48
   853  00FF6B  33                 	db	51
   854  00FF6C  35                 	db	53
   855  00FF6D  38                 	db	56
   856  00FF6E  3B                 	db	59
   857  00FF6F  3E                 	db	62
   858  00FF70  41                 	db	65
   859  00FF71  43                 	db	67
   860  00FF72  46                 	db	70
   861  00FF73  49                 	db	73
   862  00FF74  4C                 	db	76
   863  00FF75  4F                 	db	79
   864  00FF76  51                 	db	81
   865  00FF77  09                 	db	9
   866  00FF78  0C                 	db	12
   867  00FF79  0F                 	db	15
   868  00FF7A  12                 	db	18
   869  00FF7B  15                 	db	21
   870  00FF7C  17                 	db	23
   871  00FF7D  1A                 	db	26
   872  00FF7E  1D                 	db	29
   873  00FF7F  20                 	db	32
   874  00FF80  23                 	db	35
   875  00FF81  25                 	db	37
   876  00FF82  28                 	db	40
   877  00FF83  2B                 	db	43
   878  00FF84  2E                 	db	46
   879  00FF85  31                 	db	49
   880  00FF86  33                 	db	51
   881  00FF87  36                 	db	54
   882  00FF88  39                 	db	57
   883  00FF89                     __end_of_SVALUE:
   884                           	opt stack 0
   885  00FF89                     _hexpowers:
   886                           	opt stack 0
   887  00FF89  0001               	dw	1
   888  00FF8B  0010               	dw	16
   889  00FF8D  0100               	dw	256
   890  00FF8F  1000               	dw	4096
   891  00FF91                     __end_of_hexpowers:
   892                           	opt stack 0
   893  00FF91                     isBroadcastAddress@F537:
   894                           	opt stack 0
   895  00FF91  FF                 	db	255
   896  00FF92  FF                 	db	255
   897  00FF93  FF                 	db	255
   898  00FF94  FF                 	db	255
   899  00FF95  FF                 	db	255
   900  00FF96  FF                 	db	255
   901  00FF97  FF                 	db	255
   902  00FF98  FF                 	db	255
   903  00FF99                     __end_ofisBroadcastAddress@F537:
   904                           	opt stack 0
   905  00FF99                     _mySecurityKey:
   906                           	opt stack 0
   907  00FF99  00                 	db	0
   908  00FF9A  01                 	db	1
   909  00FF9B  02                 	db	2
   910  00FF9C  03                 	db	3
   911  00FF9D  04                 	db	4
   912  00FF9E  05                 	db	5
   913  00FF9F  06                 	db	6
   914  00FFA0  07                 	db	7
   915  00FFA1                     __end_of_mySecurityKey:
   916                           	opt stack 0
   917  00FFA1                     STR_3:
   918  00FFA1  6F                 	db	111	;'o'
   919  00FFA2  3A                 	db	58	;':'
   920  00FFA3  25                 	db	37
   921  00FFA4  30                 	db	48	;'0'
   922  00FFA5  32                 	db	50	;'2'
   923  00FFA6  58                 	db	88	;'X'
   924  00FFA7  20                 	db	32
   925  00FFA8  20                 	db	32
   926  00FFA9  20                 	db	32
   927  00FFAA  20                 	db	32
   928  00FFAB  20                 	db	32
   929  00FFAC  20                 	db	32
   930  00FFAD  20                 	db	32
   931  00FFAE  20                 	db	32
   932  00FFAF  20                 	db	32
   933  00FFB0  20                 	db	32
   934  00FFB1  20                 	db	32
   935  00FFB2  00                 	db	0
   936  00FFB3                     STR_2:
   937  00FFB3  69                 	db	105	;'i'
   938  00FFB4  3A                 	db	58	;':'
   939  00FFB5  25                 	db	37
   940  00FFB6  30                 	db	48	;'0'
   941  00FFB7  34                 	db	52	;'4'
   942  00FFB8  58                 	db	88	;'X'
   943  00FFB9  3D                 	db	61	;'='
   944  00FFBA  25                 	db	37
   945  00FFBB  30                 	db	48	;'0'
   946  00FFBC  32                 	db	50	;'2'
   947  00FFBD  58                 	db	88	;'X'
   948  00FFBE  20                 	db	32
   949  00FFBF  20                 	db	32
   950  00FFC0  20                 	db	32
   951  00FFC1  20                 	db	32
   952  00FFC2  20                 	db	32
   953  00FFC3  20                 	db	32
   954  00FFC4  00                 	db	0
   955  00FFC5                     STR_8:
   956  00FFC5  30                 	db	48	;'0'
   957  00FFC6  31                 	db	49	;'1'
   958  00FFC7  32                 	db	50	;'2'
   959  00FFC8  33                 	db	51	;'3'
   960  00FFC9  34                 	db	52	;'4'
   961  00FFCA  35                 	db	53	;'5'
   962  00FFCB  36                 	db	54	;'6'
   963  00FFCC  37                 	db	55	;'7'
   964  00FFCD  38                 	db	56	;'8'
   965  00FFCE  39                 	db	57	;'9'
   966  00FFCF  41                 	db	65	;'A'
   967  00FFD0  42                 	db	66	;'B'
   968  00FFD1  43                 	db	67	;'C'
   969  00FFD2  44                 	db	68	;'D'
   970  00FFD3  45                 	db	69	;'E'
   971  00FFD4  46                 	db	70	;'F'
   972  00FFD5  00                 	db	0
   973  00FFD6                     STR_1:
   974  00FFD6  61                 	db	97	;'a'
   975  00FFD7  3A                 	db	58	;':'
   976  00FFD8  25                 	db	37
   977  00FFD9  30                 	db	48	;'0'
   978  00FFDA  34                 	db	52	;'4'
   979  00FFDB  58                 	db	88	;'X'
   980  00FFDC  20                 	db	32
   981  00FFDD  70                 	db	112	;'p'
   982  00FFDE  3A                 	db	58	;':'
   983  00FFDF  46                 	db	70	;'F'
   984  00FFE0  46                 	db	70	;'F'
   985  00FFE1  46                 	db	70	;'F'
   986  00FFE2  46                 	db	70	;'F'
   987  00FFE3  00                 	db	0
   988  00FFE4                     STR_7:
   989  00FFE4  28                 	db	40
   990  00FFE5  6E                 	db	110	;'n'
   991  00FFE6  75                 	db	117	;'u'
   992  00FFE7  6C                 	db	108	;'l'
   993  00FFE8  6C                 	db	108	;'l'
   994  00FFE9  29                 	db	41
   995  00FFEA  00                 	db	0
   996  00FFEB                     STR_4:
   997  00FFEB  70                 	db	112	;'p'
   998  00FFEC  3A                 	db	58	;':'
   999  00FFED  25                 	db	37
  1000  00FFEE  30                 	db	48	;'0'
  1001  00FFEF  34                 	db	52	;'4'
  1002  00FFF0  58                 	db	88	;'X'
  1003  00FFF1  00                 	db	0
  1004  00FFF2                     STR_5:
  1005  00FFF2  70                 	db	112	;'p'
  1006  00FFF3  3A                 	db	58	;':'
  1007  00FFF4  25                 	db	37
  1008  00FFF5  73                 	db	115	;'s'
  1009  00FFF6  00                 	db	0
  1010  0000                     
  1011                           ; #config settings
  1012  00FFF7  00                 	db	0	; dummy byte at the end
  1013  0000                     
  1014                           	psect	nvBANK2
  1015  0002C2                     __pnvBANK2:
  1016                           	opt stack 0
  1017  0002C2                     _myDeviceType:
  1018                           	opt stack 0
  1019  0002C2                     	ds	1
  1020  0000                     _PPSCONbits	set	3839
  1021  0000                     _RPINR1	set	3815
  1022  0000                     _RPINR21	set	3835
  1023  0000                     _RPOR19	set	3801
  1024  0000                     _RPOR21	set	3803
  1025  0000                     _ANCON0	set	3912
  1026  0000                     _ANCON1	set	3913
  1027  0000                     _TMR0	set	4054
  1028  0000                     _EECON2	set	4007
  1029  0000                     _INTCON2bits	set	4081
  1030  0000                     _INTCON3bits	set	4080
  1031  0000                     _INTCONbits	set	4082
  1032  0000                     _LATAbits	set	3977
  1033  0000                     _LATCbits	set	3979
  1034  0000                     _LATDbits	set	3980
  1035  0000                     _LATEbits	set	3981
  1036  0000                     _OSCCON	set	4051
  1037  0000                     _OSCTUNEbits	set	3995
  1038  0000                     _PIR1bits	set	3998
  1039  0000                     _PIR3bits	set	4004
  1040  0000                     _PORTBbits	set	3969
  1041  0000                     _SSP1CON1	set	4038
  1042  0000                     _SSP1STAT	set	4039
  1043  0000                     _SSP2BUF	set	3957
  1044  0000                     _SSP2CON1	set	3954
  1045  0000                     _SSP2CON1bits	set	3954
  1046  0000                     _SSP2STAT	set	3955
  1047  0000                     _SSPBUF	set	4041
  1048  0000                     _SSPCON1bits	set	4038
  1049  0000                     _T0CON	set	4053
  1050  0000                     _T0CONbits	set	4053
  1051  0000                     _TMR0H	set	4055
  1052  0000                     _TMR0L	set	4054
  1053  0000                     _TRISAbits	set	3986
  1054  0000                     _TRISBbits	set	3987
  1055  0000                     _TRISCbits	set	3988
  1056  0000                     _TRISDbits	set	3989
  1057  0000                     _TRISEbits	set	3990
  1058  0000                     _WDTCONbits	set	4032
  1059  0000                     _GIE	set	32663
  1060                           
  1061                           	psect	cinit
  1062  005632                     __pcinit:
  1063                           	opt stack 0
  1064  005632                     start_initialization:
  1065                           	opt stack 0
  1066  005632                     __initialization:
  1067                           	opt stack 0
  1068                           
  1069                           ; Initialize objects allocated to BANK1 (16 bytes)
  1070                           ; load TBLPTR registers with __pidataBANK1
  1071  005632  0E7C               	movlw	low __pidataBANK1
  1072  005634  6EF6               	movwf	tblptrl,c
  1073  005636  0E77               	movlw	high __pidataBANK1
  1074  005638  6EF7               	movwf	tblptrh,c
  1075  00563A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1076  00563C  6EF8               	movwf	tblptru,c
  1077  00563E  EE01  F0EE         	lfsr	0,__pdataBANK1
  1078  005642  EE10 F010          	lfsr	1,16
  1079  005646                     copy_data0:
  1080  005646  0009               	tblrd		*+
  1081  005648  CFF5 FFEE          	movff	tablat,postinc0
  1082  00564C  50E5               	movf	postdec1,w,c
  1083  00564E  50E1               	movf	fsr1l,w,c
  1084  005650  E1FA               	bnz	copy_data0
  1085                           
  1086                           ; Initialize objects allocated to COMRAM (10 bytes)
  1087                           ; load TBLPTR registers with __pidataCOMRAM
  1088  005652  0EFC               	movlw	low __pidataCOMRAM
  1089  005654  6EF6               	movwf	tblptrl,c
  1090  005656  0E77               	movlw	high __pidataCOMRAM
  1091  005658  6EF7               	movwf	tblptrh,c
  1092  00565A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1093  00565C  6EF8               	movwf	tblptru,c
  1094  00565E  EE00  F045         	lfsr	0,__pdataCOMRAM
  1095  005662  EE10 F00A          	lfsr	1,10
  1096  005666                     copy_data1:
  1097  005666  0009               	tblrd		*+
  1098  005668  CFF5 FFEE          	movff	tablat,postinc0
  1099  00566C  50E5               	movf	postdec1,w,c
  1100  00566E  50E1               	movf	fsr1l,w,c
  1101  005670  E1FA               	bnz	copy_data1
  1102                           
  1103                           ; Clear objects allocated to BIGRAM (804 bytes)
  1104  005672  EE08  F0DC         	lfsr	0,__pbssBIGRAM
  1105  005676  EE13 F024          	lfsr	1,804
  1106  00567A                     clear_0:
  1107  00567A  6AEE               	clrf	postinc0,c
  1108  00567C  50E5               	movf	postdec1,w,c
  1109  00567E  50E1               	movf	fsr1l,w,c
  1110  005680  E1FC               	bnz	clear_0
  1111  005682  50E2               	movf	fsr1h,w,c
  1112  005684  E1FA               	bnz	clear_0
  1113                           
  1114                           ; Clear objects allocated to BANK8 (220 bytes)
  1115  005686  EE08  F000         	lfsr	0,__pbssBANK8
  1116  00568A  0EDC               	movlw	220
  1117  00568C                     clear_1:
  1118  00568C  6AEE               	clrf	postinc0,c
  1119  00568E  06E8               	decf	wreg,f,c
  1120  005690  E1FD               	bnz	clear_1
  1121                           
  1122                           ; Clear objects allocated to BANK7 (254 bytes)
  1123  005692  EE07  F000         	lfsr	0,__pbssBANK7
  1124  005696  0EFE               	movlw	254
  1125  005698                     clear_2:
  1126  005698  6AEE               	clrf	postinc0,c
  1127  00569A  06E8               	decf	wreg,f,c
  1128  00569C  E1FD               	bnz	clear_2
  1129                           
  1130                           ; Clear objects allocated to BANK6 (242 bytes)
  1131  00569E  EE06  F000         	lfsr	0,__pbssBANK6
  1132  0056A2  0EF2               	movlw	242
  1133  0056A4                     clear_3:
  1134  0056A4  6AEE               	clrf	postinc0,c
  1135  0056A6  06E8               	decf	wreg,f,c
  1136  0056A8  E1FD               	bnz	clear_3
  1137                           
  1138                           ; Clear objects allocated to BANK5 (220 bytes)
  1139  0056AA  EE05  F000         	lfsr	0,__pbssBANK5
  1140  0056AE  0EDC               	movlw	220
  1141  0056B0                     clear_4:
  1142  0056B0  6AEE               	clrf	postinc0,c
  1143  0056B2  06E8               	decf	wreg,f,c
  1144  0056B4  E1FD               	bnz	clear_4
  1145                           
  1146                           ; Clear objects allocated to BANK4 (175 bytes)
  1147  0056B6  EE04  F000         	lfsr	0,__pbssBANK4
  1148  0056BA  0EAF               	movlw	175
  1149  0056BC                     clear_5:
  1150  0056BC  6AEE               	clrf	postinc0,c
  1151  0056BE  06E8               	decf	wreg,f,c
  1152  0056C0  E1FD               	bnz	clear_5
  1153                           
  1154                           ; Clear objects allocated to BANK3 (239 bytes)
  1155  0056C2  EE03  F000         	lfsr	0,__pbssBANK3
  1156  0056C6  0EEF               	movlw	239
  1157  0056C8                     clear_6:
  1158  0056C8  6AEE               	clrf	postinc0,c
  1159  0056CA  06E8               	decf	wreg,f,c
  1160  0056CC  E1FD               	bnz	clear_6
  1161                           
  1162                           ; Clear objects allocated to BANK2 (165 bytes)
  1163  0056CE  EE02  F000         	lfsr	0,__pbssBANK2
  1164  0056D2  0EA5               	movlw	165
  1165  0056D4                     clear_7:
  1166  0056D4  6AEE               	clrf	postinc0,c
  1167  0056D6  06E8               	decf	wreg,f,c
  1168  0056D8  E1FD               	bnz	clear_7
  1169                           
  1170                           ; Clear objects allocated to BANK1 (56 bytes)
  1171  0056DA  EE01  F0B6         	lfsr	0,__pbssBANK1
  1172  0056DE  0E38               	movlw	56
  1173  0056E0                     clear_8:
  1174  0056E0  6AEE               	clrf	postinc0,c
  1175  0056E2  06E8               	decf	wreg,f,c
  1176  0056E4  E1FD               	bnz	clear_8
  1177                           
  1178                           ; Clear objects allocated to BANK0 (2 bytes)
  1179  0056E6  0100               	movlb	0
  1180  0056E8  6BEC               	clrf	(__pbssBANK0+1)& (0+255),b
  1181  0056EA  6BEB               	clrf	__pbssBANK0& (0+255),b
  1182                           
  1183                           ; Clear objects allocated to COMRAM (15 bytes)
  1184  0056EC  EE00  F036         	lfsr	0,__pbssCOMRAM
  1185  0056F0  0E0F               	movlw	15
  1186  0056F2                     clear_9:
  1187  0056F2  6AEE               	clrf	postinc0,c
  1188  0056F4  06E8               	decf	wreg,f,c
  1189  0056F6  E1FD               	bnz	clear_9
  1190  0056F8                     end_of_initialization:
  1191                           	opt stack 0
  1192  0056F8                     __end_of__initialization:
  1193                           	opt stack 0
  1194  0056F8  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1195  0056FA  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1196  0056FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1197  0056FE  6EF8               	movwf	tblptru,c
  1198  005700  0100               	movlb	0
  1199  005702  EF71  F009         	goto	_main	;jump to C main() function
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	bssCOMRAM
  1211  000036                     __pbssCOMRAM:
  1212                           	opt stack 0
  1213  000036                     _MACInitParams:
  1214                           	opt stack 0
  1215  000036                     	ds	3
  1216  000039                     ButtonTask@pS0:
  1217                           	opt stack 0
  1218  000039                     	ds	1
  1219  00003A                     ButtonTask@pS1:
  1220                           	opt stack 0
  1221  00003A                     	ds	1
  1222  00003B                     _IRQ1_Received:
  1223                           	opt stack 0
  1224  00003B                     	ds	1
  1225  00003C                     _MACSeq:
  1226                           	opt stack 0
  1227  00003C                     	ds	1
  1228  00003D                     _RF_Mode:
  1229                           	opt stack 0
  1230  00003D                     	ds	1
  1231  00003E                     _ReceivedBankIndex:
  1232                           	opt stack 0
  1233  00003E                     	ds	1
  1234  00003F                     _TMState:
  1235                           	opt stack 0
  1236  00003F                     	ds	1
  1237  000040                     _TxIndex:
  1238                           	opt stack 0
  1239  000040                     	ds	1
  1240  000041                     _TxMACSeq:
  1241                           	opt stack 0
  1242  000041                     	ds	1
  1243  000042                     _hasAck:
  1244                           	opt stack 0
  1245  000042                     	ds	1
  1246  000043                     _justEvictedParent:
  1247                           	opt stack 0
  1248  000043                     	ds	1
  1249  000044                     _t1fired:
  1250                           	opt stack 0
  1251  000044                     	ds	1
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           
  1262                           	psect	dataCOMRAM
  1263  000045                     __pdataCOMRAM:
  1264                           	opt stack 0
  1265  000045                     _w:
  1266                           	opt stack 0
  1267  000045                     	ds	4
  1268  000049                     _y:
  1269                           	opt stack 0
  1270  000049                     	ds	4
  1271  00004D                     _myPANID:
  1272                           	opt stack 0
  1273  00004D                     	ds	2
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284                           	psect	bssBANK0
  1285  0000EB                     __pbssBANK0:
  1286                           	opt stack 0
  1287  0000EB                     _routingTableActive:
  1288                           	opt stack 0
  1289  0000EB                     	ds	2
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           
  1300                           	psect	bssBANK1
  1301  0001B6                     __pbssBANK1:
  1302                           	opt stack 0
  1303  0001B6                     _currentInterval:
  1304                           	opt stack 0
  1305  0001B6                     	ds	4
  1306  0001BA                     _currentTime:
  1307                           	opt stack 0
  1308  0001BA                     	ds	4
  1309  0001BE                     _intervalDelay:
  1310                           	opt stack 0
  1311  0001BE                     	ds	4
  1312  0001C2                     _t1extension:
  1313                           	opt stack 0
  1314  0001C2                     	ds	4
  1315  0001C6                     _LEDCmd:
  1316                           	opt stack 0
  1317  0001C6                     	ds	3
  1318  0001C9                     _LEDState:
  1319                           	opt stack 0
  1320  0001C9                     	ds	3
  1321  0001CC                     _linkEstSeq:
  1322                           	opt stack 0
  1323  0001CC                     	ds	2
  1324  0001CE                     _prevSentIdx:
  1325                           	opt stack 0
  1326  0001CE                     	ds	2
  1327  0001D0                     ButtonTask@s0Count:
  1328                           	opt stack 0
  1329  0001D0                     	ds	1
  1330  0001D1                     ButtonTask@s1Count:
  1331                           	opt stack 0
  1332  0001D1                     	ds	1
  1333  0001D2                     _ActiveScanChannel:
  1334                           	opt stack 0
  1335  0001D2                     	ds	1
  1336  0001D3                     _BMState:
  1337                           	opt stack 0
  1338  0001D3                     	ds	1
  1339  0001D4                     _NetSeq:
  1340                           	opt stack 0
  1341  0001D4                     	ds	1
  1342  0001D5                     _RSSILock:
  1343                           	opt stack 0
  1344  0001D5                     	ds	1
  1345  0001D6                     _RSSIVal:
  1346                           	opt stack 0
  1347  0001D6                     	ds	1
  1348  0001D7                     _RouteMgrUpdateRequired:
  1349                           	opt stack 0
  1350  0001D7                     	ds	1
  1351  0001D8                     _TxData:
  1352                           	opt stack 0
  1353  0001D8                     	ds	1
  1354  0001D9                     _UserMessageAvailable:
  1355                           	opt stack 0
  1356  0001D9                     	ds	1
  1357  0001DA                     _devState:
  1358                           	opt stack 0
  1359  0001DA                     	ds	1
  1360  0001DB                     _isNetworkTrafficSecure:
  1361                           	opt stack 0
  1362  0001DB                     	ds	1
  1363  0001DC                     _lcdInitialized:
  1364                           	opt stack 0
  1365  0001DC                     	ds	1
  1366  0001DD                     _nState:
  1367                           	opt stack 0
  1368  0001DD                     	ds	1
  1369  0001DE                     _netSequenceNumber:
  1370                           	opt stack 0
  1371  0001DE                     	ds	1
  1372  0001DF                     _nst:
  1373                           	opt stack 0
  1374  0001DF                     	ds	1
  1375  0001E0                     _switches:
  1376                           	opt stack 0
  1377  0001E0                     	ds	1
  1378  0001E1                     _userDataAvailable:
  1379                           	opt stack 0
  1380  0001E1                     	ds	1
  1381  0001E2                     _tmpBlock:
  1382                           	opt stack 0
  1383  0001E2                     	ds	4
  1384  0001E6                     CoordinatorGenericAddress@address:
  1385                           	opt stack 0
  1386  0001E6                     	ds	2
  1387  0001E8                     _CoordinatorAddr:
  1388                           	opt stack 0
  1389  0001E8                     	ds	2
  1390  0001EA                     _myAddr:
  1391                           	opt stack 0
  1392  0001EA                     	ds	2
  1393  0001EC                     radioBroadcast@addr:
  1394                           	opt stack 0
  1395  0001EC                     	ds	2
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           	psect	dataBANK1
  1407  0001EE                     __pdataBANK1:
  1408                           	opt stack 0
  1409  0001EE                     _x:
  1410                           	opt stack 0
  1411  0001EE                     	ds	4
  1412  0001F2                     _z:
  1413                           	opt stack 0
  1414  0001F2                     	ds	4
  1415  0001F6                     _DEVPanID:
  1416                           	opt stack 0
  1417  0001F6                     	ds	2
  1418  0001F8                     _DeviceType:
  1419                           	opt stack 0
  1420  0001F8                     	ds	1
  1421  0001F9                     _addressLen:
  1422                           	opt stack 0
  1423  0001F9                     	ds	1
  1424  0001FA                     _MyAddress:
  1425                           	opt stack 0
  1426  0001FA                     	ds	2
  1427  0001FC                     _myLongAddress:
  1428                           	opt stack 0
  1429  0001FC                     	ds	2
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           
  1440                           	psect	bssBANK2
  1441  000200                     __pbssBANK2:
  1442                           	opt stack 0
  1443  000200                     _AckInfo:
  1444                           	opt stack 0
  1445  000200                     	ds	30
  1446  00021E                     LEDManagerTask@tStart:
  1447                           	opt stack 0
  1448  00021E                     	ds	12
  1449  00022A                     NetworkManagerTask@tStart:
  1450                           	opt stack 0
  1451  00022A                     	ds	8
  1452  000232                     _tInterval:
  1453                           	opt stack 0
  1454  000232                     	ds	8
  1455  00023A                     _tRouteMgr:
  1456                           	opt stack 0
  1457  00023A                     	ds	8
  1458  000242                     MiApp_MessageAvailable@tStart:
  1459                           	opt stack 0
  1460  000242                     	ds	4
  1461  000246                     NetworkManagerTask@delay:
  1462                           	opt stack 0
  1463  000246                     	ds	4
  1464  00024A                     _c:
  1465                           	opt stack 0
  1466  00024A                     	ds	4
  1467  00024E                     LEDManagerTask@lNextState:
  1468                           	opt stack 0
  1469  00024E                     	ds	3
  1470  000251                     _pcnt1:
  1471                           	opt stack 0
  1472  000251                     	ds	2
  1473  000253                     main@F8344:
  1474                           	opt stack 0
  1475  000253                     	ds	2
  1476  000255                     _ActiveScanResults:
  1477                           	opt stack 0
  1478  000255                     	ds	25
  1479  00026E                     _MACRxPacket:
  1480                           	opt stack 0
  1481  00026E                     	ds	12
  1482  00027A                     _rxMessage:
  1483                           	opt stack 0
  1484  00027A                     	ds	10
  1485  000284                     _Tick_MS:
  1486                           	opt stack 0
  1487  000284                     	ds	8
  1488  00028C                     _key:
  1489                           	opt stack 0
  1490  00028C                     	ds	8
  1491  000294                     _routeInfo:
  1492                           	opt stack 0
  1493  000294                     	ds	7
  1494  00029B                     _OutgoingFrameCounter:
  1495                           	opt stack 0
  1496  00029B                     	ds	4
  1497  00029F                     _NewBestParent:
  1498                           	opt stack 0
  1499  00029F                     	ds	2
  1500  0002A1                     _srcAddress:
  1501                           	opt stack 0
  1502  0002A1                     	ds	2
  1503  0002A3                     radioUnicast@addr:
  1504                           	opt stack 0
  1505  0002A3                     	ds	2
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postdec1	equ	0xFE5
  1513                           fsr1h	equ	0xFE2
  1514                           fsr1l	equ	0xFE1
  1515                           
  1516                           	psect	bssBANK3
  1517  000300                     __pbssBANK3:
  1518                           	opt stack 0
  1519  000300                     _RxPacket:
  1520                           	opt stack 0
  1521  000300                     	ds	142
  1522  00038E                     _MACTxBuffer:
  1523                           	opt stack 0
  1524  00038E                     	ds	64
  1525  0003CE                     _LCDText:
  1526                           	opt stack 0
  1527  0003CE                     	ds	33
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1h	equ	0xFE2
  1536                           fsr1l	equ	0xFE1
  1537                           
  1538                           	psect	bssBANK4
  1539  000400                     __pbssBANK4:
  1540                           	opt stack 0
  1541  000400                     _tunnels:
  1542                           	opt stack 0
  1543  000400                     	ds	120
  1544  000478                     _ConnectionTable:
  1545                           	opt stack 0
  1546  000478                     	ds	55
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           postdec1	equ	0xFE5
  1554                           fsr1h	equ	0xFE2
  1555                           fsr1l	equ	0xFE1
  1556                           
  1557                           	psect	bssBANK5
  1558  000500                     __pbssBANK5:
  1559                           	opt stack 0
  1560  000500                     _neighbor_tbl:
  1561                           	opt stack 0
  1562  000500                     	ds	220
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1h	equ	0xFE2
  1571                           fsr1l	equ	0xFE1
  1572                           
  1573                           	psect	bssBANK6
  1574  000600                     __pbssBANK6:
  1575                           	opt stack 0
  1576  000600                     _TMQ:
  1577                           	opt stack 0
  1578  000600                     	ds	152
  1579  000698                     _routingTable:
  1580                           	opt stack 0
  1581  000698                     	ds	90
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           
  1592                           	psect	bssBANK7
  1593  000700                     __pbssBANK7:
  1594                           	opt stack 0
  1595  000700                     _beaconMessageBuffer:
  1596                           	opt stack 0
  1597  000700                     	ds	72
  1598  000748                     _TxBuff:
  1599                           	opt stack 0
  1600  000748                     	ds	64
  1601  000788                     _TxBuffer:
  1602                           	opt stack 0
  1603  000788                     	ds	64
  1604  0007C8                     _userdata:
  1605                           	opt stack 0
  1606  0007C8                     	ds	54
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1h	equ	0xFE2
  1615                           fsr1l	equ	0xFE1
  1616                           
  1617                           	psect	bssBANK8
  1618  000800                     __pbssBANK8:
  1619                           	opt stack 0
  1620  000800                     _list:
  1621                           	opt stack 0
  1622  000800                     	ds	220
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1h	equ	0xFE2
  1631                           fsr1l	equ	0xFE1
  1632                           
  1633                           	psect	bssBIGRAM
  1634  0008DC                     __pbssBIGRAM:
  1635                           	opt stack 0
  1636  0008DC                     _RbcQ:
  1637                           	opt stack 0
  1638  0008DC                     	ds	444
  1639  000A98                     _hc_table:
  1640                           	opt stack 0
  1641  000A98                     	ds	360
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1h	equ	0xFE2
  1650                           fsr1l	equ	0xFE1
  1651                           
  1652                           	psect	cstackBANK2
  1653  0002A5                     __pcstackBANK2:
  1654                           	opt stack 0
  1655  0002A5                     MiApp_SearchConnection@tStart:
  1656                           	opt stack 0
  1657                           
  1658                           ; 4 bytes @ 0x0
  1659  0002A5                     	ds	4
  1660  0002A9                     MiApp_SearchConnection@ScanDuartion:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x4
  1664  0002A9                     	ds	1
  1665  0002AA                     MiApp_SearchConnection@msDuration:
  1666                           	opt stack 0
  1667                           
  1668                           ; 2 bytes @ 0x5
  1669  0002AA                     	ds	2
  1670  0002AC                     MiApp_SearchConnection@mask:
  1671                           	opt stack 0
  1672                           
  1673                           ; 4 bytes @ 0x7
  1674  0002AC                     	ds	4
  1675  0002B0                     MiApp_SearchConnection@res:
  1676                           	opt stack 0
  1677                           
  1678                           ; 1 bytes @ 0xB
  1679  0002B0                     	ds	1
  1680  0002B1                     MiApp_SearchConnection@i:
  1681                           	opt stack 0
  1682                           
  1683                           ; 1 bytes @ 0xC
  1684  0002B1                     	ds	1
  1685  0002B2                     main@src1:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0xD
  1689  0002B2                     	ds	2
  1690  0002B4                     main@pButtonPressed_0:
  1691                           	opt stack 0
  1692                           
  1693                           ; 1 bytes @ 0xF
  1694  0002B4                     	ds	1
  1695  0002B5                     main@pButtonPressed_1:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x10
  1699  0002B5                     	ds	1
  1700  0002B6                     main@tStart:
  1701                           	opt stack 0
  1702                           
  1703                           ; 4 bytes @ 0x11
  1704  0002B6                     	ds	4
  1705  0002BA                     main@SendPacket:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x15
  1709  0002BA                     	ds	1
  1710  0002BB                     main@RequestData:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x16
  1714  0002BB                     	ds	1
  1715  0002BC                     main@counter:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x17
  1719  0002BC                     	ds	1
  1720  0002BD                     main@pMemberOfNetwork:
  1721                           	opt stack 0
  1722                           
  1723                           ; 1 bytes @ 0x18
  1724  0002BD                     	ds	1
  1725  0002BE                     main@src:
  1726                           	opt stack 0
  1727                           
  1728                           ; 2 bytes @ 0x19
  1729  0002BE                     	ds	2
  1730  0002C0                     main@coord:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x1B
  1734  0002C0                     	ds	2
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745                           	psect	cstackBANK1
  1746  000100                     __pcstackBANK1:
  1747                           	opt stack 0
  1748  000100                     TransportManagerTask@databuff:
  1749                           	opt stack 0
  1750  000100                     TMSendDataToRFD@databuff:
  1751                           	opt stack 0
  1752  000100                     NetworkSendDiscoverRequest@databuff:
  1753                           	opt stack 0
  1754  000100                     NetworkSendDiscoverResponse@databuff:
  1755                           	opt stack 0
  1756                           
  1757                           ; 64 bytes @ 0x0
  1758  000100                     	ds	64
  1759  000140                     NetworkUnicastData@address:
  1760                           	opt stack 0
  1761  000140                     TransportManagerTask@sz:
  1762                           	opt stack 0
  1763  000140                     NetworkSendDiscoverRequest@size:
  1764                           	opt stack 0
  1765  000140                     NetworkSendDiscoverResponse@size:
  1766                           	opt stack 0
  1767  000140                     NetworkManagerProcessIncomingData@buffer:
  1768                           	opt stack 0
  1769                           
  1770                           ; 64 bytes @ 0x40
  1771  000140                     	ds	2
  1772  000142                     NetworkUnicastData@data:
  1773                           	opt stack 0
  1774  000142                     TransportManagerTask@i:
  1775                           	opt stack 0
  1776  000142                     NetworkSendDiscoverRequest@dhdr:
  1777                           	opt stack 0
  1778  000142                     NetworkSendDiscoverResponse@dhdr:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x42
  1782  000142                     	ds	2
  1783  000144                     NetworkUnicastData@size:
  1784                           	opt stack 0
  1785  000144                     NetworkSendDiscoverRequest@address:
  1786                           	opt stack 0
  1787  000144                     NetworkSendDiscoverResponse@address:
  1788                           	opt stack 0
  1789  000144                     NetworkManagerTask@data:
  1790                           	opt stack 0
  1791                           
  1792                           ; 19 bytes @ 0x44
  1793  000144                     	ds	2
  1794  000146                     NetworkUnicastData@isSecure:
  1795                           	opt stack 0
  1796                           
  1797                           ; 1 bytes @ 0x46
  1798  000146                     	ds	1
  1799  000147                     MiApp_UnicastAddress@DestinationAddress:
  1800                           	opt stack 0
  1801                           
  1802                           ; 2 bytes @ 0x47
  1803  000147                     	ds	2
  1804  000149                     MiApp_UnicastAddress@Origin:
  1805                           	opt stack 0
  1806                           
  1807                           ; 2 bytes @ 0x49
  1808  000149                     	ds	2
  1809  00014B                     MiApp_UnicastAddress@SecEn:
  1810                           	opt stack 0
  1811                           
  1812                           ; 1 bytes @ 0x4B
  1813  00014B                     	ds	12
  1814  000157                     NetworkManagerTask@sz:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x57
  1818  000157                     	ds	41
  1819  000180                     NetworkManagerProcessIncomingData@isFormed:
  1820                           	opt stack 0
  1821                           
  1822                           ; 1 bytes @ 0x80
  1823  000180                     	ds	1
  1824  000181                     NetworkManagerProcessIncomingData@packetsize:
  1825                           	opt stack 0
  1826                           
  1827                           ; 2 bytes @ 0x81
  1828  000181                     	ds	2
  1829  000183                     NetworkManagerProcessIncomingData@isSecurePacket:
  1830                           	opt stack 0
  1831                           
  1832                           ; 1 bytes @ 0x83
  1833  000183                     	ds	1
  1834  000184                     NetworkManagerProcessIncomingData@dHdr:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x84
  1838  000184                     	ds	2
  1839  000186                     radioReceivedPacket@source:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x86
  1843  000186                     	ds	2
  1844  000188                     radioReceivedPacket@PANID:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x88
  1848  000188                     	ds	2
  1849  00018A                     radioReceivedPacket@data:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x8A
  1853  00018A                     	ds	2
  1854  00018C                     radioReceivedPacket@size:
  1855                           	opt stack 0
  1856                           
  1857                           ; 2 bytes @ 0x8C
  1858  00018C                     	ds	2
  1859  00018E                     radioReceivedPacket@rssi:
  1860                           	opt stack 0
  1861                           
  1862                           ; 1 bytes @ 0x8E
  1863  00018E                     	ds	1
  1864  00018F                     radioReceivedPacket@isBroadcast:
  1865                           	opt stack 0
  1866                           
  1867                           ; 1 bytes @ 0x8F
  1868  00018F                     	ds	1
  1869  000190                     radioReceivedPacket@isSecure:
  1870                           	opt stack 0
  1871                           
  1872                           ; 1 bytes @ 0x90
  1873  000190                     	ds	1
  1874  000191                     radioReceivedPacket@myAddr:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x91
  1878  000191                     	ds	2
  1879  000193                     _radioReceivedPacket$5373:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x93
  1883  000193                     	ds	1
  1884  000194                     radioReceivedPacket@crc:
  1885                           	opt stack 0
  1886                           
  1887                           ; 4 bytes @ 0x94
  1888  000194                     	ds	4
  1889  000198                     radioReceivedPacket@bt:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x98
  1893  000198                     	ds	2
  1894  00019A                     radioReceivedPacket@rhdr:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x9A
  1898  00019A                     	ds	2
  1899  00019C                     radioReceivedPacket@child:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x9C
  1903  00019C                     	ds	2
  1904  00019E                     radioReceivedPacket@parent:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x9E
  1908  00019E                     	ds	2
  1909  0001A0                     radioReceivedPacket@dhdr:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0xA0
  1913  0001A0                     	ds	2
  1914  0001A2                     ??_MiApp_MessageAvailable:
  1915                           
  1916                           ; 1 bytes @ 0xA2
  1917  0001A2                     	ds	4
  1918  0001A6                     MiApp_SearchConnection@ChannelMap:
  1919                           	opt stack 0
  1920                           
  1921                           ; 4 bytes @ 0xA6
  1922  0001A6                     	ds	4
  1923  0001AA                     ??_MiApp_SearchConnection:
  1924                           
  1925                           ; 1 bytes @ 0xAA
  1926  0001AA                     	ds	8
  1927  0001B2                     ??_main:
  1928                           
  1929                           ; 1 bytes @ 0xB2
  1930  0001B2                     	ds	4
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           
  1941                           	psect	cstackBANK0
  1942  000060                     __pcstackBANK0:
  1943                           	opt stack 0
  1944  000060                     HighISR@dPan:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x0
  1948  000060                     	ds	1
  1949  000061                     HighISR@counter:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x1
  1953  000061                     	ds	2
  1954  000063                     HighISR@fifo_stat:
  1955                           	opt stack 0
  1956                           
  1957                           ; 1 bytes @ 0x3
  1958  000063                     	ds	1
  1959  000064                     HighISR@ackPacket:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x4
  1963  000064                     	ds	4
  1964  000068                     HighISR@dstPan:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x8
  1968  000068                     	ds	2
  1969  00006A                     HighISR@PacketForMe:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0xA
  1973  00006A                     	ds	1
  1974  00006B                     HighISR@bAck:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0xB
  1978  00006B                     	ds	1
  1979  00006C                     HighISR@tmr:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0xC
  1983  00006C                     	ds	2
  1984  00006E                     HighISR@RxPacketPtr:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0xE
  1988  00006E                     	ds	1
  1989  00006F                     HighISR@ackInfoIndex:
  1990                           	opt stack 0
  1991                           
  1992                           ; 1 bytes @ 0xF
  1993  00006F                     	ds	1
  1994  000070                     HighISR@PacketLen:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x10
  1998  000070                     	ds	1
  1999  000071                     HighISR@BankIndex:
  2000                           	opt stack 0
  2001                           
  2002                           ; 1 bytes @ 0x11
  2003  000071                     	ds	1
  2004  000072                     HighISR@i:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x12
  2008  000072                     	ds	1
  2009  000073                     ??_isdigit:
  2010  000073                     ??_isButtonPressed:
  2011  000073                     ?_memcmp:
  2012                           	opt stack 0
  2013  000073                     ?_NetworkGetParentAddress:
  2014                           	opt stack 0
  2015  000073                     ?_NetworkManagerGetMyAddress:
  2016                           	opt stack 0
  2017  000073                     ?_NetworkGetPANID:
  2018                           	opt stack 0
  2019  000073                     ?_CoordinatorAddress:
  2020                           	opt stack 0
  2021  000073                     ?_NetworkGetMyRouteInfo:
  2022                           	opt stack 0
  2023  000073                     ?_RMRoutingTableCount:
  2024                           	opt stack 0
  2025  000073                     ?_le_findEmptyNeighborIdx:
  2026                           	opt stack 0
  2027  000073                     ?___wmul:
  2028                           	opt stack 0
  2029  000073                     ?___awdiv:
  2030                           	opt stack 0
  2031  000073                     ?___lwdiv:
  2032                           	opt stack 0
  2033  000073                     ?_krnd:
  2034                           	opt stack 0
  2035  000073                     ?_MiWi_TickGet:
  2036                           	opt stack 0
  2037  000073                     ?_crc32:
  2038                           	opt stack 0
  2039  000073                     ?___lldiv:
  2040                           	opt stack 0
  2041  000073                     SPIPut@v:
  2042                           	opt stack 0
  2043  000073                     SPIPut2@v:
  2044                           	opt stack 0
  2045  000073                     LEDCommand@cmd:
  2046                           	opt stack 0
  2047  000073                     NetworkSetDeviceType@dev:
  2048                           	opt stack 0
  2049  000073                     encode@text:
  2050                           	opt stack 0
  2051  000073                     NetworkDiscoveredEvent@PANID:
  2052                           	opt stack 0
  2053  000073                     passLinkEtxThreshold@etx:
  2054                           	opt stack 0
  2055  000073                     RouteManagerSetNeighborCongested@n:
  2056                           	opt stack 0
  2057  000073                     le_initNeighborIdx@ll_addr:
  2058                           	opt stack 0
  2059  000073                     LE_GetNeighborDeviceType@index:
  2060                           	opt stack 0
  2061  000073                     krndInit@value:
  2062                           	opt stack 0
  2063  000073                     ___wmul@multiplier:
  2064                           	opt stack 0
  2065  000073                     ___awdiv@dividend:
  2066                           	opt stack 0
  2067  000073                     ___lwdiv@dividend:
  2068                           	opt stack 0
  2069  000073                     memcmp@s1:
  2070                           	opt stack 0
  2071  000073                     memset@p1:
  2072                           	opt stack 0
  2073  000073                     DelayUS@delay:
  2074                           	opt stack 0
  2075  000073                     crc32@crc:
  2076                           	opt stack 0
  2077  000073                     ___lldiv@dividend:
  2078                           	opt stack 0
  2079                           
  2080                           ; 4 bytes @ 0x13
  2081  000073                     	ds	1
  2082  000074                     SPIPut@i:
  2083                           	opt stack 0
  2084  000074                     SPIPut2@i:
  2085                           	opt stack 0
  2086  000074                     _isdigit$4824:
  2087                           	opt stack 0
  2088                           
  2089                           ; 1 bytes @ 0x14
  2090  000074                     	ds	1
  2091  000075                     ??_krndInit:
  2092  000075                     ??_LE_GetNeighborDeviceType:
  2093  000075                     ??_le_findEmptyNeighborIdx:
  2094  000075                     ?_MiApp_GetParentAddress:
  2095                           	opt stack 0
  2096  000075                     RegisterRead@address:
  2097                           	opt stack 0
  2098  000075                     WriteFIFO@Data:
  2099                           	opt stack 0
  2100  000075                     LCD_WriteCmd@data:
  2101                           	opt stack 0
  2102  000075                     LCD_WriteData@data:
  2103                           	opt stack 0
  2104  000075                     isButtonPressed@index:
  2105                           	opt stack 0
  2106  000075                     LEDCommand@led:
  2107                           	opt stack 0
  2108  000075                     EEPROMRead@dest:
  2109                           	opt stack 0
  2110  000075                     RouteManagerSetNeighborCongested@congested:
  2111                           	opt stack 0
  2112  000075                     le_initNeighborIdx@i:
  2113                           	opt stack 0
  2114  000075                     isdigit@c:
  2115                           	opt stack 0
  2116  000075                     RegisterSet@setting:
  2117                           	opt stack 0
  2118  000075                     encode@key:
  2119                           	opt stack 0
  2120  000075                     NetworkDiscoveredEvent@rssi:
  2121                           	opt stack 0
  2122  000075                     ___wmul@multiplicand:
  2123                           	opt stack 0
  2124  000075                     ___awdiv@divisor:
  2125                           	opt stack 0
  2126  000075                     ___lwdiv@divisor:
  2127                           	opt stack 0
  2128  000075                     memcmp@s2:
  2129                           	opt stack 0
  2130  000075                     memcpy@d1:
  2131                           	opt stack 0
  2132  000075                     memset@c:
  2133                           	opt stack 0
  2134                           
  2135                           ; 2 bytes @ 0x15
  2136  000075                     	ds	1
  2137  000076                     RegisterRead@value:
  2138                           	opt stack 0
  2139  000076                     WriteFIFO@IRQ1select:
  2140                           	opt stack 0
  2141  000076                     isButtonPressed@mask:
  2142                           	opt stack 0
  2143  000076                     EEPROMRead@addr:
  2144                           	opt stack 0
  2145  000076                     le_initNeighborIdx@ne:
  2146                           	opt stack 0
  2147                           
  2148                           ; 2 bytes @ 0x16
  2149  000076                     	ds	1
  2150  000077                     ??_krnd:
  2151  000077                     ??_encode:
  2152  000077                     ??_NetworkDiscoveredEvent:
  2153  000077                     RegisterSet@IRQ1select:
  2154                           	opt stack 0
  2155  000077                     RegisterRead@IRQ1select:
  2156                           	opt stack 0
  2157  000077                     EEPROMRead@count:
  2158                           	opt stack 0
  2159  000077                     ___awdiv@counter:
  2160                           	opt stack 0
  2161  000077                     ___lwdiv@counter:
  2162                           	opt stack 0
  2163  000077                     le_findEmptyNeighborIdx@res:
  2164                           	opt stack 0
  2165  000077                     crc32@buf:
  2166                           	opt stack 0
  2167  000077                     ___wmul@product:
  2168                           	opt stack 0
  2169  000077                     memcmp@n:
  2170                           	opt stack 0
  2171  000077                     memcpy@s1:
  2172                           	opt stack 0
  2173  000077                     memset@n:
  2174                           	opt stack 0
  2175  000077                     DelayUS@i:
  2176                           	opt stack 0
  2177  000077                     MiWi_TickGet@t1ext:
  2178                           	opt stack 0
  2179  000077                     ___lldiv@divisor:
  2180                           	opt stack 0
  2181                           
  2182                           ; 4 bytes @ 0x17
  2183  000077                     	ds	1
  2184  000078                     SetRFMode@mode:
  2185                           	opt stack 0
  2186  000078                     LE_GetNeighborDeviceType@dev:
  2187                           	opt stack 0
  2188  000078                     ___awdiv@sign:
  2189                           	opt stack 0
  2190  000078                     ___lwdiv@quotient:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x18
  2194  000078                     	ds	1
  2195  000079                     ??_memcmp:
  2196  000079                     MiMAC_SetChannel@offsetFreq:
  2197                           	opt stack 0
  2198  000079                     le_findEmptyNeighborIdx@i:
  2199                           	opt stack 0
  2200  000079                     crc32@size:
  2201                           	opt stack 0
  2202  000079                     ___awdiv@quotient:
  2203                           	opt stack 0
  2204  000079                     memcpy@n:
  2205                           	opt stack 0
  2206  000079                     memset@p:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0x19
  2210  000079                     	ds	1
  2211  00007A                     ??_MiMAC_SetChannel:
  2212  00007A                     ?_sprintf:
  2213                           	opt stack 0
  2214  00007A                     sprintf@sp:
  2215                           	opt stack 0
  2216                           
  2217                           ; 2 bytes @ 0x1A
  2218  00007A                     	ds	1
  2219  00007B                     ??_crc32:
  2220  00007B                     ?_CoordinatorGenericAddress:
  2221                           	opt stack 0
  2222  00007B                     ?_le_computeETX:
  2223                           	opt stack 0
  2224  00007B                     MiMAC_SetChannel@channel:
  2225                           	opt stack 0
  2226  00007B                     NetworkDataArrivedEvent@source:
  2227                           	opt stack 0
  2228  00007B                     NetworkDiscoveredEvent@empty:
  2229                           	opt stack 0
  2230  00007B                     routeInfoInit@ri:
  2231                           	opt stack 0
  2232  00007B                     isBroadcastAddress@address:
  2233                           	opt stack 0
  2234  00007B                     memcpy@d:
  2235                           	opt stack 0
  2236  00007B                     DelayMs@ms:
  2237                           	opt stack 0
  2238  00007B                     MiWi_TickGet@tmrval:
  2239                           	opt stack 0
  2240  00007B                     krnd@t:
  2241                           	opt stack 0
  2242  00007B                     ___lldiv@quotient:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x1B
  2246  00007B                     	ds	1
  2247  00007C                     MiApp_SetChannel@Channel:
  2248                           	opt stack 0
  2249  00007C                     sprintf@f:
  2250                           	opt stack 0
  2251                           
  2252                           ; 2 bytes @ 0x1C
  2253  00007C                     	ds	1
  2254  00007D                     le_computeETX@q1:
  2255                           	opt stack 0
  2256  00007D                     NetworkDataArrivedEvent@data:
  2257                           	opt stack 0
  2258  00007D                     NetworkDiscoveredEvent@i:
  2259                           	opt stack 0
  2260  00007D                     isSameAddress@a1:
  2261                           	opt stack 0
  2262  00007D                     memcpy@s:
  2263                           	opt stack 0
  2264  00007D                     isBroadcastAddress@addr:
  2265                           	opt stack 0
  2266                           
  2267                           ; 8 bytes @ 0x1D
  2268  00007D                     	ds	1
  2269  00007E                     le_computeETX@q:
  2270                           	opt stack 0
  2271                           
  2272                           ; 2 bytes @ 0x1E
  2273  00007E                     	ds	1
  2274  00007F                     ??_DelayMs:
  2275  00007F                     ?_Read_MAC_Address:
  2276                           	opt stack 0
  2277  00007F                     ?_NetworkPrepareSendPacket:
  2278                           	opt stack 0
  2279  00007F                     ?___lwmod:
  2280                           	opt stack 0
  2281  00007F                     ?_MiWi_TickGetMs:
  2282                           	opt stack 0
  2283  00007F                     ?___llmod:
  2284                           	opt stack 0
  2285  00007F                     ?_MSTickGet:
  2286                           	opt stack 0
  2287  00007F                     ___lldiv@counter:
  2288                           	opt stack 0
  2289  00007F                     NetworkDataArrivedEvent@size:
  2290                           	opt stack 0
  2291  00007F                     isSameAddress@a2:
  2292                           	opt stack 0
  2293  00007F                     NetworkPrepareSendPacket@address:
  2294                           	opt stack 0
  2295  00007F                     NetworkSetAddressPAN@address:
  2296                           	opt stack 0
  2297  00007F                     DeviceManagerBufferDeviceData@address:
  2298                           	opt stack 0
  2299  00007F                     ___lwmod@dividend:
  2300                           	opt stack 0
  2301  00007F                     ___llmod@dividend:
  2302                           	opt stack 0
  2303                           
  2304                           ; 4 bytes @ 0x1F
  2305  00007F                     	ds	1
  2306  000080                     le_updateETX@ne:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x20
  2310  000080                     	ds	1
  2311  000081                     ??_Read_MAC_Address:
  2312  000081                     ?_DeviceManagerGetDeviceData:
  2313                           	opt stack 0
  2314  000081                     ?_RoutingTableFindDeviceOrParent:
  2315                           	opt stack 0
  2316  000081                     ?_le_findWorstNeighborIdx:
  2317                           	opt stack 0
  2318  000081                     NetworkDataArrivedEvent@isBroadcast:
  2319                           	opt stack 0
  2320  000081                     encode@delta:
  2321                           	opt stack 0
  2322  000081                     AddNodeToNetworkTable@address:
  2323                           	opt stack 0
  2324  000081                     RoutingTableFindDeviceOrParent@address:
  2325                           	opt stack 0
  2326  000081                     le_findIdx@ll_addr:
  2327                           	opt stack 0
  2328  000081                     TunnelManagerInvalidateTunnel@device:
  2329                           	opt stack 0
  2330  000081                     NetworkPrepareSendPacket@buffer:
  2331                           	opt stack 0
  2332  000081                     NetworkSetAddressPAN@PANID:
  2333                           	opt stack 0
  2334  000081                     DeviceManagerGetDeviceType@address:
  2335                           	opt stack 0
  2336  000081                     DeviceManagerBufferDeviceData@data:
  2337                           	opt stack 0
  2338  000081                     DeviceManagerGetDeviceData@address:
  2339                           	opt stack 0
  2340  000081                     ___lwmod@divisor:
  2341                           	opt stack 0
  2342                           
  2343                           ; 2 bytes @ 0x21
  2344  000081                     	ds	1
  2345  000082                     ??_sprintf:
  2346  000082                     le_updateETX@newEst:
  2347                           	opt stack 0
  2348  000082                     Read_MAC_Address@addr8:
  2349                           	opt stack 0
  2350                           
  2351                           ; 6 bytes @ 0x22
  2352  000082                     	ds	1
  2353  000083                     ??_DeviceManagerGetDeviceType:
  2354  000083                     ??_TunnelManagerInvalidateTunnel:
  2355  000083                     ??_RoutingTableFindDeviceOrParent:
  2356  000083                     ??_le_findWorstNeighborIdx:
  2357  000083                     encode@i:
  2358                           	opt stack 0
  2359  000083                     le_findIdx@res:
  2360                           	opt stack 0
  2361  000083                     NetworkPrepareSendPacket@pType:
  2362                           	opt stack 0
  2363  000083                     ___lwmod@counter:
  2364                           	opt stack 0
  2365  000083                     MiApp_SetAddressPan@address:
  2366                           	opt stack 0
  2367  000083                     AddNodeToNetworkTable@PANID:
  2368                           	opt stack 0
  2369  000083                     DeviceManagerBufferDeviceData@size:
  2370                           	opt stack 0
  2371  000083                     DeviceManagerGetDeviceData@data:
  2372                           	opt stack 0
  2373  000083                     MiWi_TickGetMs@tnow:
  2374                           	opt stack 0
  2375  000083                     ___llmod@divisor:
  2376                           	opt stack 0
  2377                           
  2378                           ; 4 bytes @ 0x23
  2379  000083                     	ds	1
  2380  000084                     ??_le_updateETX:
  2381  000084                     ?_LEAppendNeighborInfo:
  2382                           	opt stack 0
  2383  000084                     ?_le_findRandomNeighborIdx:
  2384                           	opt stack 0
  2385  000084                     le_findIdx@i:
  2386                           	opt stack 0
  2387  000084                     encode@part1:
  2388                           	opt stack 0
  2389  000084                     LEAppendNeighborInfo@data:
  2390                           	opt stack 0
  2391  000084                     NetworkPrepareSendPacket@data:
  2392                           	opt stack 0
  2393                           
  2394                           ; 2 bytes @ 0x24
  2395  000084                     	ds	1
  2396  000085                     ??_AddNodeToNetworkTable:
  2397  000085                     ?_LELinkQualityGet:
  2398                           	opt stack 0
  2399  000085                     le_findWorstNeighborIdx@thresholdETX:
  2400                           	opt stack 0
  2401  000085                     isBroadcastAddress@res:
  2402                           	opt stack 0
  2403  000085                     DeviceManagerGetDeviceType@dev:
  2404                           	opt stack 0
  2405  000085                     DeviceManagerBufferDeviceData@isSecure:
  2406                           	opt stack 0
  2407  000085                     MiApp_SetAddressPan@panid:
  2408                           	opt stack 0
  2409  000085                     RoutingTableFindDeviceOrParent@i:
  2410                           	opt stack 0
  2411  000085                     LELinkQualityGet@address:
  2412                           	opt stack 0
  2413  000085                     LE_PinNeighbor@neighbor:
  2414                           	opt stack 0
  2415  000085                     LE_UnpinNeighbor@neighbor:
  2416                           	opt stack 0
  2417  000085                     LE_ClearDLQ@neighbor:
  2418                           	opt stack 0
  2419  000085                     TunnelManagerInvalidateTunnel@addr:
  2420                           	opt stack 0
  2421  000085                     DeviceManagerGetDeviceData@isSecure:
  2422                           	opt stack 0
  2423  000085                     crc32@p:
  2424                           	opt stack 0
  2425                           
  2426                           ; 2 bytes @ 0x25
  2427  000085                     	ds	1
  2428  000086                     ??_le_findRandomNeighborIdx:
  2429  000086                     sprintf@idx:
  2430                           	opt stack 0
  2431  000086                     DeviceManagerBufferDeviceData@isFormed:
  2432                           	opt stack 0
  2433  000086                     encode@part2:
  2434                           	opt stack 0
  2435  000086                     LEAppendNeighborInfo@size:
  2436                           	opt stack 0
  2437  000086                     le_findWorstNeighborIdx@worstNeighborIdx:
  2438                           	opt stack 0
  2439  000086                     isInvalidAddress@address:
  2440                           	opt stack 0
  2441  000086                     NetworkPrepareSendPacket@size:
  2442                           	opt stack 0
  2443  000086                     DeviceManagerGetDeviceType@i:
  2444                           	opt stack 0
  2445                           
  2446                           ; 2 bytes @ 0x26
  2447  000086                     	ds	1
  2448  000087                     ??_LE_UnpinNeighbor:
  2449  000087                     ??_LE_PinNeighbor:
  2450  000087                     ??_LE_ClearDLQ:
  2451  000087                     ??_LEDManagerTask:
  2452  000087                     TxPacket@CCA:
  2453                           	opt stack 0
  2454  000087                     MiMAC_PowerState@PowerState:
  2455                           	opt stack 0
  2456  000087                     LCDUpdate@i:
  2457                           	opt stack 0
  2458  000087                     ButtonTask@Sw:
  2459                           	opt stack 0
  2460  000087                     sprintf@flag:
  2461                           	opt stack 0
  2462  000087                     ___llmod@counter:
  2463                           	opt stack 0
  2464  000087                     MiApp_SetAddressPan@addr:
  2465                           	opt stack 0
  2466  000087                     RoutingTableFindDeviceOrParent@res:
  2467                           	opt stack 0
  2468  000087                     LELinkQualityGet@offset:
  2469                           	opt stack 0
  2470  000087                     TunnelManagerInvalidateTunnel@i:
  2471                           	opt stack 0
  2472  000087                     DeviceManagerGetDeviceData@isFormed:
  2473                           	opt stack 0
  2474  000087                     MiMAC_Init@initValue:
  2475                           	opt stack 0
  2476  000087                     MSTickGet@tNow:
  2477                           	opt stack 0
  2478                           
  2479                           ; 8 bytes @ 0x27
  2480  000087                     	ds	1
  2481  000088                     ??_LEAppendNeighborInfo:
  2482  000088                     ??_TxPacket:
  2483  000088                     MiMAC_PowerState@i:
  2484                           	opt stack 0
  2485  000088                     le_findRandomNeighborIdx@cnt:
  2486                           	opt stack 0
  2487  000088                     _NetworkHasRoute$4294:
  2488                           	opt stack 0
  2489  000088                     encode@sum:
  2490                           	opt stack 0
  2491  000088                     Read_MAC_Address@address:
  2492                           	opt stack 0
  2493  000088                     sprintf@val:
  2494                           	opt stack 0
  2495  000088                     routingTableFind@neighbor:
  2496                           	opt stack 0
  2497  000088                     RouteManagerShouldInsert@hdr:
  2498                           	opt stack 0
  2499  000088                     le_findWorstNeighborIdx@res:
  2500                           	opt stack 0
  2501  000088                     le_updateNeighborTableEst@n:
  2502                           	opt stack 0
  2503  000088                     NetworkPrepareSendPacket@nHdr:
  2504                           	opt stack 0
  2505                           
  2506                           ; 2 bytes @ 0x28
  2507  000088                     	ds	1
  2508  000089                     ??_LELinkQualityGet:
  2509  000089                     NetworkHasRoute@res:
  2510                           	opt stack 0
  2511  000089                     AddNodeToNetworkTable@ind:
  2512                           	opt stack 0
  2513  000089                     RoutingTableFindDeviceOrParent@entry:
  2514                           	opt stack 0
  2515  000089                     le_findRandomNeighborIdx@res:
  2516                           	opt stack 0
  2517                           
  2518                           ; 2 bytes @ 0x29
  2519  000089                     	ds	1
  2520  00008A                     ??_MiMAC_Init:
  2521  00008A                     ??_routingTableFind:
  2522  00008A                     ??_RouteManagerShouldInsert:
  2523  00008A                     ??_le_updateNeighborTableEst:
  2524  00008A                     Read_MAC_Address@pAddress:
  2525                           	opt stack 0
  2526  00008A                     MiApp_TransceiverPowerState@Mode:
  2527                           	opt stack 0
  2528  00008A                     sprintf@prec:
  2529                           	opt stack 0
  2530  00008A                     CTR@text:
  2531                           	opt stack 0
  2532  00008A                     CBC_MAC@text:
  2533                           	opt stack 0
  2534  00008A                     LEAppendNeighborInfo@cnt:
  2535                           	opt stack 0
  2536  00008A                     LE_PinNeighbor@nidx:
  2537                           	opt stack 0
  2538  00008A                     LE_UnpinNeighbor@nidx:
  2539                           	opt stack 0
  2540  00008A                     LE_ClearDLQ@ne:
  2541                           	opt stack 0
  2542  00008A                     le_findWorstNeighborIdx@thisETX:
  2543                           	opt stack 0
  2544  00008A                     TMSendFormedPacketTowardsCoordinator@data:
  2545                           	opt stack 0
  2546                           
  2547                           ; 2 bytes @ 0x2A
  2548  00008A                     	ds	1
  2549  00008B                     ?_GetRouteAddressOfChild:
  2550                           	opt stack 0
  2551  00008B                     sprintf@ap:
  2552                           	opt stack 0
  2553  00008B                     le_findRandomNeighborIdx@num_eligible_eviction:
  2554                           	opt stack 0
  2555  00008B                     MiMAC_Init@seed:
  2556                           	opt stack 0
  2557  00008B                     AddNodeToNetworkTable@i:
  2558                           	opt stack 0
  2559  00008B                     GetRouteAddressOfChild@child:
  2560                           	opt stack 0
  2561  00008B                     LELinkQualityGet@res:
  2562                           	opt stack 0
  2563                           
  2564                           ; 2 bytes @ 0x2B
  2565  00008B                     	ds	1
  2566  00008C                     CTR@len:
  2567                           	opt stack 0
  2568  00008C                     CBC_MAC@len:
  2569                           	opt stack 0
  2570  00008C                     Read_MAC_Address@i:
  2571                           	opt stack 0
  2572  00008C                     sprintf@cp:
  2573                           	opt stack 0
  2574  00008C                     routingTableFind@res:
  2575                           	opt stack 0
  2576  00008C                     RouteManagerShouldInsert@pathEtx:
  2577                           	opt stack 0
  2578  00008C                     LEAppendNeighborInfo@newPrevSentIdx:
  2579                           	opt stack 0
  2580  00008C                     LE_ClearDLQ@nidx:
  2581                           	opt stack 0
  2582  00008C                     le_findWorstNeighborIdx@worstETX:
  2583                           	opt stack 0
  2584  00008C                     le_findRandomNeighborIdx@i:
  2585                           	opt stack 0
  2586  00008C                     TMSendFormedPacketTowardsCoordinator@size:
  2587                           	opt stack 0
  2588  00008C                     DeviceManagerBufferDeviceData@empty:
  2589                           	opt stack 0
  2590  00008C                     TxPacket@t1:
  2591                           	opt stack 0
  2592                           
  2593                           ; 4 bytes @ 0x2C
  2594  00008C                     	ds	1
  2595  00008D                     MiMAC_Init@i:
  2596                           	opt stack 0
  2597  00008D                     LELinkQualityGet@idx:
  2598                           	opt stack 0
  2599  00008D                     CTR@key:
  2600                           	opt stack 0
  2601  00008D                     CBC_MAC@key:
  2602                           	opt stack 0
  2603  00008D                     GetRouteAddressOfChild@res:
  2604                           	opt stack 0
  2605                           
  2606                           ; 2 bytes @ 0x2D
  2607  00008D                     	ds	1
  2608  00008E                     routingTableFind@i:
  2609                           	opt stack 0
  2610  00008E                     TMSendFormedPacketTowardsCoordinator@isFormed:
  2611                           	opt stack 0
  2612  00008E                     sprintf@len:
  2613                           	opt stack 0
  2614  00008E                     RouteManagerShouldInsert@neighEtx:
  2615                           	opt stack 0
  2616  00008E                     LEAppendNeighborInfo@count:
  2617                           	opt stack 0
  2618  00008E                     le_findWorstNeighborIdx@i:
  2619                           	opt stack 0
  2620                           
  2621                           ; 2 bytes @ 0x2E
  2622  00008E                     	ds	1
  2623  00008F                     ?_MSTickGetDiffNow:
  2624                           	opt stack 0
  2625  00008F                     ?_AddMSToTick:
  2626                           	opt stack 0
  2627  00008F                     TMSendFormedPacketTowardsCoordinator@isSecure:
  2628                           	opt stack 0
  2629  00008F                     CTR@nounce:
  2630                           	opt stack 0
  2631  00008F                     CBC_MAC@MIC:
  2632                           	opt stack 0
  2633  00008F                     RouterEvicted@address:
  2634                           	opt stack 0
  2635  00008F                     routingTableUpdateEntry@from:
  2636                           	opt stack 0
  2637  00008F                     GetRouteAddressOfChild@i:
  2638                           	opt stack 0
  2639  00008F                     TunnelManagerSetTunnel@device:
  2640                           	opt stack 0
  2641  00008F                     IsNetworkDevice@address:
  2642                           	opt stack 0
  2643  00008F                     MiApp_ProtocolInit@initValue:
  2644                           	opt stack 0
  2645  00008F                     netChooseAdvertiseTime@t:
  2646                           	opt stack 0
  2647  00008F                     MSTickGetDiffNow@tick:
  2648                           	opt stack 0
  2649  00008F                     AddMSToTick@tick:
  2650                           	opt stack 0
  2651                           
  2652                           ; 8 bytes @ 0x2F
  2653  00008F                     	ds	1
  2654  000090                     ??_TMSendFormedPacketTowardsCoordinator:
  2655  000090                     sprintf@width:
  2656                           	opt stack 0
  2657  000090                     RouteManagerShouldInsert@entry:
  2658                           	opt stack 0
  2659  000090                     LEAppendNeighborInfo@i:
  2660                           	opt stack 0
  2661  000090                     TxPacket@t2:
  2662                           	opt stack 0
  2663                           
  2664                           ; 4 bytes @ 0x30
  2665  000090                     	ds	1
  2666  000091                     ??_CTR:
  2667  000091                     ??_CBC_MAC:
  2668  000091                     ??_RouterEvicted:
  2669  000091                     IsNetworkDevice@devType:
  2670                           	opt stack 0
  2671  000091                     LEDManagerTask@i:
  2672                           	opt stack 0
  2673  000091                     routingTableUpdateEntry@parent:
  2674                           	opt stack 0
  2675  000091                     TunnelManagerSetTunnel@parent:
  2676                           	opt stack 0
  2677                           
  2678                           ; 2 bytes @ 0x31
  2679  000091                     	ds	1
  2680  000092                     ??_IsNetworkDevice:
  2681  000092                     sprintf@c:
  2682                           	opt stack 0
  2683  000092                     TMSendFormedPacketTowardsCoordinator@res:
  2684                           	opt stack 0
  2685  000092                     RouteManagerShouldInsert@i:
  2686                           	opt stack 0
  2687  000092                     LEAppendNeighborInfo@j:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x32
  2691  000092                     	ds	1
  2692  000093                     ??_TunnelManagerSetTunnel:
  2693  000093                     ??_RouteManagerPerformUpdate:
  2694  000093                     le_updateNeighborTableEst@totalPkt:
  2695                           	opt stack 0
  2696  000093                     RouterEvicted@r:
  2697                           	opt stack 0
  2698  000093                     routingTableUpdateEntry@etx:
  2699                           	opt stack 0
  2700  000093                     TMSendFormedPacketTowardsCoordinator@i:
  2701                           	opt stack 0
  2702  000093                     NetworkInit@address:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0x33
  2706  000093                     	ds	1
  2707  000094                     CTR@block:
  2708                           	opt stack 0
  2709  000094                     CBC_MAC@block:
  2710                           	opt stack 0
  2711  000094                     RouteManagerShouldInsert@found:
  2712                           	opt stack 0
  2713  000094                     TxPacket@delay:
  2714                           	opt stack 0
  2715  000094                     LEAppendNeighborInfo@k:
  2716                           	opt stack 0
  2717  000094                     le_updateNeighborTableEst@newEst:
  2718                           	opt stack 0
  2719  000094                     IsNetworkDevice@oldest:
  2720                           	opt stack 0
  2721                           
  2722                           ; 8 bytes @ 0x34
  2723  000094                     	ds	1
  2724  000095                     CTR@i:
  2725                           	opt stack 0
  2726  000095                     CBC_MAC@j:
  2727                           	opt stack 0
  2728  000095                     RouterEvicted@idx:
  2729                           	opt stack 0
  2730  000095                     RouteManagerPerformUpdate@linkEtx:
  2731                           	opt stack 0
  2732  000095                     routingTableUpdateEntry@linkEtx:
  2733                           	opt stack 0
  2734  000095                     RouteManagerShouldInsert@rcvBeacon:
  2735                           	opt stack 0
  2736  000095                     NetworkInit@PANID:
  2737                           	opt stack 0
  2738                           
  2739                           ; 2 bytes @ 0x35
  2740  000095                     	ds	1
  2741  000096                     TxPacket@reTry:
  2742                           	opt stack 0
  2743  000096                     CTR@j:
  2744                           	opt stack 0
  2745  000096                     CBC_MAC@i:
  2746                           	opt stack 0
  2747  000096                     RouterEvicted@i:
  2748                           	opt stack 0
  2749  000096                     le_updateNeighborTableEst@i:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x36
  2753  000096                     	ds	1
  2754  000097                     TxPacket@allowedTxFailure:
  2755                           	opt stack 0
  2756  000097                     routingTableUpdateEntry@idx:
  2757                           	opt stack 0
  2758  000097                     NetworkInit@dev:
  2759                           	opt stack 0
  2760  000097                     CCM_Enc@text:
  2761                           	opt stack 0
  2762  000097                     CCM_Dec@text:
  2763                           	opt stack 0
  2764  000097                     RouteManagerPerformUpdate@i:
  2765                           	opt stack 0
  2766  000097                     LE_InsertNeighbor@neighbor:
  2767                           	opt stack 0
  2768  000097                     le_updateNeighborTableEst@ne:
  2769                           	opt stack 0
  2770  000097                     LE_RemoveNeighborDevice@device:
  2771                           	opt stack 0
  2772  000097                     MSTickGetDiffNow@diff:
  2773                           	opt stack 0
  2774  000097                     AddMSToTick@ms:
  2775                           	opt stack 0
  2776                           
  2777                           ; 4 bytes @ 0x37
  2778  000097                     	ds	1
  2779  000098                     TxPacket@j:
  2780                           	opt stack 0
  2781  000098                     NetworkInit@devPanID:
  2782                           	opt stack 0
  2783                           
  2784                           ; 2 bytes @ 0x38
  2785  000098                     	ds	1
  2786  000099                     ??_LE_RemoveNeighborDevice:
  2787  000099                     CCM_Enc@headerLen:
  2788                           	opt stack 0
  2789  000099                     CCM_Dec@headerLen:
  2790                           	opt stack 0
  2791  000099                     LE_InsertNeighbor@devType:
  2792                           	opt stack 0
  2793  000099                     le_updateNeighborEntryIdx@seq:
  2794                           	opt stack 0
  2795  000099                     RouteManagerPerformUpdate@pathEtx:
  2796                           	opt stack 0
  2797  000099                     TunnelManagerSetTunnel@oldestindex:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x39
  2801  000099                     	ds	1
  2802  00009A                     ??_LE_InsertNeighbor:
  2803  00009A                     TxPacket@rssival:
  2804                           	opt stack 0
  2805  00009A                     CCM_Enc@payloadLen:
  2806                           	opt stack 0
  2807  00009A                     CCM_Dec@payloadLen:
  2808                           	opt stack 0
  2809  00009A                     MiApp_EstablishConnection@Mode:
  2810                           	opt stack 0
  2811  00009A                     le_updateNeighborEntryIdx@dev:
  2812                           	opt stack 0
  2813                           
  2814                           ; 1 bytes @ 0x3A
  2815  00009A                     	ds	1
  2816  00009B                     ??_AddMSToTick:
  2817  00009B                     ??_le_updateNeighborEntryIdx:
  2818  00009B                     TxPacket@status:
  2819                           	opt stack 0
  2820  00009B                     MiApp_EstablishConnection@dev:
  2821                           	opt stack 0
  2822  00009B                     CCM_Enc@key:
  2823                           	opt stack 0
  2824  00009B                     CCM_Dec@key:
  2825                           	opt stack 0
  2826  00009B                     RouteManagerPerformUpdate@currentEtx:
  2827                           	opt stack 0
  2828  00009B                     LE_RemoveNeighborDevice@i:
  2829                           	opt stack 0
  2830  00009B                     TunnelManagerSetTunnel@emptyindex:
  2831                           	opt stack 0
  2832  00009B                     MSTickGetDiffNow@tNow:
  2833                           	opt stack 0
  2834                           
  2835                           ; 8 bytes @ 0x3B
  2836  00009B                     	ds	1
  2837  00009C                     TxPacket@TxPacketLen:
  2838                           	opt stack 0
  2839  00009C                     LE_InsertNeighbor@nidx:
  2840                           	opt stack 0
  2841  00009C                     IsNetworkDevice@res:
  2842                           	opt stack 0
  2843  00009C                     MiApp_EstablishConnection@src:
  2844                           	opt stack 0
  2845                           
  2846                           ; 2 bytes @ 0x3C
  2847  00009C                     	ds	1
  2848  00009D                     ??_CCM_Enc:
  2849  00009D                     ??_CCM_Dec:
  2850  00009D                     TxPacket@i:
  2851                           	opt stack 0
  2852  00009D                     le_updateNeighborEntryIdx@packetGap:
  2853                           	opt stack 0
  2854  00009D                     RouteManagerPerformUpdate@best:
  2855                           	opt stack 0
  2856  00009D                     RouteManagerProcessReceive@source:
  2857                           	opt stack 0
  2858  00009D                     TunnelManagerSetTunnel@index:
  2859                           	opt stack 0
  2860  00009D                     IsNetworkDevice@empty:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x3D
  2864  00009D                     	ds	1
  2865  00009E                     MiApp_EstablishConnection@ActiveScanIndex:
  2866                           	opt stack 0
  2867  00009E                     le_updateNeighborEntryIdx@idx:
  2868                           	opt stack 0
  2869                           
  2870                           ; 1 bytes @ 0x3E
  2871  00009E                     	ds	1
  2872  00009F                     _CCM_Enc$776:
  2873                           	opt stack 0
  2874  00009F                     RouteManagerPerformUpdate@minEtx:
  2875                           	opt stack 0
  2876  00009F                     RouteManagerProcessReceive@data:
  2877                           	opt stack 0
  2878  00009F                     LE_processReceivedMessage@source:
  2879                           	opt stack 0
  2880  00009F                     BroadcastManagerDelaySend@pkt:
  2881                           	opt stack 0
  2882  00009F                     IsNetworkDevice@i:
  2883                           	opt stack 0
  2884  00009F                     TunnelManagerSetTunnel@OldestTick:
  2885                           	opt stack 0
  2886                           
  2887                           ; 8 bytes @ 0x3F
  2888  00009F                     	ds	2
  2889  0000A1                     CCM_Enc@i:
  2890                           	opt stack 0
  2891  0000A1                     RouteManagerProcessReceive@len:
  2892                           	opt stack 0
  2893  0000A1                     _CCM_Dec$784:
  2894                           	opt stack 0
  2895  0000A1                     RouteManagerPerformUpdate@entry:
  2896                           	opt stack 0
  2897  0000A1                     LE_processReceivedMessage@data:
  2898                           	opt stack 0
  2899  0000A1                     BroadcastManagerDelaySend@size:
  2900                           	opt stack 0
  2901                           
  2902                           ; 2 bytes @ 0x41
  2903  0000A1                     	ds	1
  2904  0000A2                     MiMAC_SendPacket@transParam:
  2905                           	opt stack 0
  2906                           
  2907                           ; 5 bytes @ 0x42
  2908  0000A2                     	ds	1
  2909  0000A3                     CCM_Dec@i:
  2910                           	opt stack 0
  2911  0000A3                     LE_processReceivedMessage@len:
  2912                           	opt stack 0
  2913  0000A3                     BroadcastManagerDelaySend@isSecure:
  2914                           	opt stack 0
  2915  0000A3                     RouteManagerPerformUpdate@r:
  2916                           	opt stack 0
  2917  0000A3                     MSTickGetDiffNow@tdiff:
  2918                           	opt stack 0
  2919                           
  2920                           ; 8 bytes @ 0x43
  2921  0000A3                     	ds	1
  2922  0000A4                     ??_MiMAC_ReceivedPacket:
  2923  0000A4                     LE_processReceivedMessage@rssi:
  2924                           	opt stack 0
  2925  0000A4                     BroadcastManagerDelaySend@isInterPan:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x44
  2929  0000A4                     	ds	1
  2930  0000A5                     ??_BroadcastManagerDelaySend:
  2931  0000A5                     RouteManagerProcessReceive@congested:
  2932                           	opt stack 0
  2933                           
  2934                           ; 1 bytes @ 0x45
  2935  0000A5                     	ds	1
  2936  0000A6                     RouteManagerProcessReceive@from:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x46
  2940  0000A6                     	ds	1
  2941  0000A7                     MiMAC_SendPacket@MACPayload:
  2942                           	opt stack 0
  2943  0000A7                     LE_processReceivedMessage@hdr:
  2944                           	opt stack 0
  2945  0000A7                     TunnelManagerSetTunnel@i:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x47
  2949  0000A7                     	ds	1
  2950  0000A8                     RouteManagerProcessReceive@rcvBeacon:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x48
  2954  0000A8                     	ds	1
  2955  0000A9                     MiMAC_SendPacket@MACPayloadLen:
  2956                           	opt stack 0
  2957  0000A9                     LE_processReceivedMessage@bhdr:
  2958                           	opt stack 0
  2959                           
  2960                           ; 2 bytes @ 0x49
  2961  0000A9                     	ds	1
  2962  0000AA                     ??_MiMAC_SendPacket:
  2963                           
  2964                           ; 1 bytes @ 0x4A
  2965  0000AA                     	ds	1
  2966  0000AB                     ?_TunnelManagerGetTunnel:
  2967                           	opt stack 0
  2968  0000AB                     MiMAC_SendPacket@headerLen:
  2969                           	opt stack 0
  2970  0000AB                     BroadcastManagerDelaySend@res:
  2971                           	opt stack 0
  2972  0000AB                     LE_processReceivedMessage@ll_addr:
  2973                           	opt stack 0
  2974  0000AB                     TunnelManagerGetTunnel@device:
  2975                           	opt stack 0
  2976  0000AB                     isKnownPacket@hash:
  2977                           	opt stack 0
  2978                           
  2979                           ; 4 bytes @ 0x4B
  2980  0000AB                     	ds	1
  2981  0000AC                     MiMAC_SendPacket@i:
  2982                           	opt stack 0
  2983  0000AC                     BroadcastManagerDelaySend@i:
  2984                           	opt stack 0
  2985  0000AC                     MiMAC_ReceivedPacket@currentTick:
  2986                           	opt stack 0
  2987                           
  2988                           ; 4 bytes @ 0x4C
  2989  0000AC                     	ds	1
  2990  0000AD                     ??_TunnelManagerGetTunnel:
  2991  0000AD                     MiMAC_SendPacket@TxIndex:
  2992                           	opt stack 0
  2993  0000AD                     LE_processReceivedMessage@nidx:
  2994                           	opt stack 0
  2995                           
  2996                           ; 1 bytes @ 0x4D
  2997  0000AD                     	ds	1
  2998  0000AE                     SendPacket@DestinationAddress:
  2999                           	opt stack 0
  3000                           
  3001                           ; 2 bytes @ 0x4E
  3002  0000AE                     	ds	1
  3003  0000AF                     ??_isKnownPacket:
  3004                           
  3005                           ; 1 bytes @ 0x4F
  3006  0000AF                     	ds	1
  3007  0000B0                     MiMAC_ReceivedPacket@addr:
  3008                           	opt stack 0
  3009  0000B0                     SendPacket@destinationPANID:
  3010                           	opt stack 0
  3011                           
  3012                           ; 2 bytes @ 0x50
  3013  0000B0                     	ds	2
  3014  0000B2                     SendPacket@isCommand:
  3015                           	opt stack 0
  3016  0000B2                     MiMAC_ReceivedPacket@FrameCounter:
  3017                           	opt stack 0
  3018                           
  3019                           ; 4 bytes @ 0x52
  3020  0000B2                     	ds	1
  3021  0000B3                     SendPacket@SecurityEnabled:
  3022                           	opt stack 0
  3023  0000B3                     TunnelManagerGetTunnel@trec:
  3024                           	opt stack 0
  3025                           
  3026                           ; 8 bytes @ 0x53
  3027  0000B3                     	ds	1
  3028  0000B4                     ??_SendPacket:
  3029                           
  3030                           ; 1 bytes @ 0x54
  3031  0000B4                     	ds	1
  3032  0000B5                     SendPacket@status:
  3033                           	opt stack 0
  3034  0000B5                     isKnownPacket@zeros:
  3035                           	opt stack 0
  3036                           
  3037                           ; 12 bytes @ 0x55
  3038  0000B5                     	ds	1
  3039  0000B6                     MiMAC_ReceivedPacket@j:
  3040                           	opt stack 0
  3041  0000B6                     SendPacket@Broadcast:
  3042                           	opt stack 0
  3043                           
  3044                           ; 1 bytes @ 0x56
  3045  0000B6                     	ds	1
  3046  0000B7                     MiMAC_ReceivedPacket@PayloadIndex:
  3047                           	opt stack 0
  3048  0000B7                     SendPacket@tParam:
  3049                           	opt stack 0
  3050                           
  3051                           ; 5 bytes @ 0x57
  3052  0000B7                     	ds	1
  3053  0000B8                     MiMAC_ReceivedPacket@i:
  3054                           	opt stack 0
  3055                           
  3056                           ; 1 bytes @ 0x58
  3057  0000B8                     	ds	3
  3058  0000BB                     TunnelManagerGetTunnel@addr:
  3059                           	opt stack 0
  3060                           
  3061                           ; 2 bytes @ 0x5B
  3062  0000BB                     	ds	1
  3063  0000BC                     radioBroadcast@data:
  3064                           	opt stack 0
  3065  0000BC                     radioUnicast@dest:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x5C
  3069  0000BC                     	ds	1
  3070  0000BD                     TunnelManagerGetTunnel@retAddr:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x5D
  3074  0000BD                     	ds	1
  3075  0000BE                     radioBroadcast@datasize:
  3076                           	opt stack 0
  3077  0000BE                     radioUnicast@PANID:
  3078                           	opt stack 0
  3079                           
  3080                           ; 2 bytes @ 0x5E
  3081  0000BE                     	ds	1
  3082  0000BF                     radioBroadcast@PANID:
  3083                           	opt stack 0
  3084  0000BF                     TunnelManagerGetTunnel@i:
  3085                           	opt stack 0
  3086                           
  3087                           ; 2 bytes @ 0x5F
  3088  0000BF                     	ds	1
  3089  0000C0                     radioUnicast@data:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x60
  3093  0000C0                     	ds	1
  3094  0000C1                     radioBroadcast@isSecure:
  3095                           	opt stack 0
  3096  0000C1                     isKnownPacket@unknown:
  3097                           	opt stack 0
  3098                           
  3099                           ; 1 bytes @ 0x61
  3100  0000C1                     	ds	1
  3101  0000C2                     radioBroadcast@i:
  3102                           	opt stack 0
  3103  0000C2                     radioUnicast@datasize:
  3104                           	opt stack 0
  3105  0000C2                     isKnownPacket@oldestindex:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x62
  3109  0000C2                     	ds	1
  3110  0000C3                     ??_networkSendBeacon:
  3111  0000C3                     ??_BroadcastManagerTask:
  3112  0000C3                     radioUnicast@isSecure:
  3113                           	opt stack 0
  3114                           
  3115                           ; 1 bytes @ 0x63
  3116  0000C3                     	ds	1
  3117  0000C4                     radioUnicast@i:
  3118                           	opt stack 0
  3119  0000C4                     isKnownPacket@index:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x64
  3123  0000C4                     	ds	1
  3124  0000C5                     ??_TransportManagerTask:
  3125  0000C5                     TMSendFormedPacketToRFD@device:
  3126                           	opt stack 0
  3127  0000C5                     NetworkIssueDataRequest@data:
  3128                           	opt stack 0
  3129                           
  3130                           ; 10 bytes @ 0x65
  3131  0000C5                     	ds	1
  3132  0000C6                     isKnownPacket@emptyindex:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x66
  3136  0000C6                     	ds	1
  3137  0000C7                     TMSendFormedPacketToRFD@data:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x67
  3141  0000C7                     	ds	1
  3142  0000C8                     isKnownPacket@OldestTick:
  3143                           	opt stack 0
  3144                           
  3145                           ; 8 bytes @ 0x68
  3146  0000C8                     	ds	1
  3147  0000C9                     networkSendBeacon@last:
  3148                           	opt stack 0
  3149  0000C9                     TMSendFormedPacketToRFD@size:
  3150                           	opt stack 0
  3151                           
  3152                           ; 2 bytes @ 0x69
  3153  0000C9                     	ds	2
  3154  0000CB                     TMSendFormedPacketToRFD@isSecure:
  3155                           	opt stack 0
  3156  0000CB                     networkSendBeacon@adr:
  3157                           	opt stack 0
  3158                           
  3159                           ; 2 bytes @ 0x6B
  3160  0000CB                     	ds	1
  3161  0000CC                     
  3162                           ; 1 bytes @ 0x6C
  3163  0000CC                     	ds	1
  3164  0000CD                     networkSendBeacon@bt:
  3165                           	opt stack 0
  3166  0000CD                     BroadcastManagerTask@PANID:
  3167                           	opt stack 0
  3168  0000CD                     TMSendFormedPacketToRFD@myaddr:
  3169                           	opt stack 0
  3170                           
  3171                           ; 2 bytes @ 0x6D
  3172  0000CD                     	ds	2
  3173  0000CF                     TMSendFormedPacketToRFD@res:
  3174                           	opt stack 0
  3175  0000CF                     networkSendBeacon@r:
  3176                           	opt stack 0
  3177  0000CF                     BroadcastManagerTask@i:
  3178                           	opt stack 0
  3179  0000CF                     NetworkIssueDataRequest@sz:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x6F
  3183  0000CF                     	ds	1
  3184  0000D0                     isKnownPacket@i:
  3185                           	opt stack 0
  3186  0000D0                     TMSendFormedPacketToRFD@dhdr:
  3187                           	opt stack 0
  3188                           
  3189                           ; 2 bytes @ 0x70
  3190  0000D0                     	ds	1
  3191  0000D1                     networkSendBeacon@hdr:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x71
  3195  0000D1                     	ds	1
  3196  0000D2                     TMSendFormedPacketToRFD@parent:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x72
  3200  0000D2                     	ds	1
  3201  0000D3                     ??_NetworkManagerTask:
  3202  0000D3                     
  3203                           ; 1 bytes @ 0x73
  3204  0000D3                     	ds	1
  3205  0000D4                     TMSendDataToRFD@device:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x74
  3209  0000D4                     	ds	2
  3210  0000D6                     TMSendDataToRFD@pType:
  3211                           	opt stack 0
  3212                           
  3213                           ; 1 bytes @ 0x76
  3214  0000D6                     	ds	1
  3215  0000D7                     TMSendDataToRFD@data:
  3216                           	opt stack 0
  3217                           
  3218                           ; 2 bytes @ 0x77
  3219  0000D7                     	ds	2
  3220  0000D9                     TMSendDataToRFD@size:
  3221                           	opt stack 0
  3222                           
  3223                           ; 2 bytes @ 0x79
  3224  0000D9                     	ds	2
  3225  0000DB                     TMSendDataToRFD@isSecure:
  3226                           	opt stack 0
  3227                           
  3228                           ; 1 bytes @ 0x7B
  3229  0000DB                     	ds	1
  3230  0000DC                     NetworkUnicastData@mAddress:
  3231                           	opt stack 0
  3232  0000DC                     NetworkManagerProcessIncomingData@data:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x7C
  3236  0000DC                     	ds	2
  3237  0000DE                     NetworkUnicastData@res:
  3238                           	opt stack 0
  3239  0000DE                     NetworkManagerProcessIncomingData@size:
  3240                           	opt stack 0
  3241                           
  3242                           ; 2 bytes @ 0x7E
  3243  0000DE                     	ds	1
  3244  0000DF                     MiApp_UnicastAddress@src:
  3245                           	opt stack 0
  3246                           
  3247                           ; 2 bytes @ 0x7F
  3248  0000DF                     	ds	1
  3249  0000E0                     NetworkManagerProcessIncomingData@isBroadcast:
  3250                           	opt stack 0
  3251                           
  3252                           ; 1 bytes @ 0x80
  3253  0000E0                     	ds	1
  3254  0000E1                     NetworkManagerProcessIncomingData@isSecure:
  3255                           	opt stack 0
  3256                           
  3257                           ; 1 bytes @ 0x81
  3258  0000E1                     	ds	1
  3259  0000E2                     
  3260                           ; 1 bytes @ 0x82
  3261  0000E2                     	ds	1
  3262  0000E3                     ??_radioReceivedPacket:
  3263                           
  3264                           ; 1 bytes @ 0x83
  3265  0000E3                     	ds	6
  3266  0000E9                     MiApp_MessageAvailable@src:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x89
  3270  0000E9                     	ds	2
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           postdec1	equ	0xFE5
  3278                           fsr1h	equ	0xFE2
  3279                           fsr1l	equ	0xFE1
  3280                           
  3281                           	psect	cstackCOMRAM
  3282  000001                     __pcstackCOMRAM:
  3283                           	opt stack 0
  3284  000001                     ?i2_MiWi_TickGet:
  3285                           	opt stack 0
  3286  000001                     ?i2_krnd:
  3287                           	opt stack 0
  3288  000001                     i2DelayUS@delay:
  3289                           	opt stack 0
  3290                           
  3291                           ; 4 bytes @ 0x0
  3292  000001                     	ds	1
  3293  000002                     i2SPIPut@v:
  3294                           	opt stack 0
  3295                           
  3296                           ; 1 bytes @ 0x1
  3297  000002                     	ds	1
  3298  000003                     i2RegisterRead@address:
  3299                           	opt stack 0
  3300  000003                     i2WriteFIFO@Data:
  3301                           	opt stack 0
  3302  000003                     i2RegisterSet@setting:
  3303                           	opt stack 0
  3304                           
  3305                           ; 2 bytes @ 0x2
  3306  000003                     	ds	1
  3307  000004                     i2RegisterRead@value:
  3308                           	opt stack 0
  3309  000004                     i2WriteFIFO@IRQ1select:
  3310                           	opt stack 0
  3311                           
  3312                           ; 1 bytes @ 0x3
  3313  000004                     	ds	1
  3314  000005                     ??i2_krnd:
  3315  000005                     i2RegisterSet@IRQ1select:
  3316                           	opt stack 0
  3317  000005                     i2RegisterRead@IRQ1select:
  3318                           	opt stack 0
  3319  000005                     i2DelayUS@i:
  3320                           	opt stack 0
  3321  000005                     i2MiWi_TickGet@t1ext:
  3322                           	opt stack 0
  3323                           
  3324                           ; 4 bytes @ 0x4
  3325  000005                     	ds	1
  3326  000006                     i2SetRFMode@mode:
  3327                           	opt stack 0
  3328                           
  3329                           ; 1 bytes @ 0x5
  3330  000006                     	ds	3
  3331  000009                     i2DelayMs@ms:
  3332                           	opt stack 0
  3333  000009                     i2MiWi_TickGet@tmrval:
  3334                           	opt stack 0
  3335  000009                     i2krnd@t:
  3336                           	opt stack 0
  3337                           
  3338                           ; 4 bytes @ 0x8
  3339  000009                     	ds	4
  3340  00000D                     ??i2_DelayMs:
  3341  00000D                     ?i2_MiWi_TickGetMs:
  3342                           	opt stack 0
  3343                           
  3344                           ; 4 bytes @ 0xC
  3345  00000D                     	ds	4
  3346  000011                     i2MiWi_TickGetMs@tnow:
  3347                           	opt stack 0
  3348                           
  3349                           ; 4 bytes @ 0x10
  3350  000011                     	ds	4
  3351  000015                     i2TxPacket@CCA:
  3352                           	opt stack 0
  3353                           
  3354                           ; 1 bytes @ 0x14
  3355  000015                     	ds	1
  3356  000016                     ??i2_TxPacket:
  3357                           
  3358                           ; 1 bytes @ 0x15
  3359  000016                     	ds	4
  3360  00001A                     i2TxPacket@TxPacketLen:
  3361                           	opt stack 0
  3362                           
  3363                           ; 1 bytes @ 0x19
  3364  00001A                     	ds	1
  3365  00001B                     i2TxPacket@status:
  3366                           	opt stack 0
  3367                           
  3368                           ; 1 bytes @ 0x1A
  3369  00001B                     	ds	1
  3370  00001C                     i2TxPacket@t1:
  3371                           	opt stack 0
  3372                           
  3373                           ; 4 bytes @ 0x1B
  3374  00001C                     	ds	4
  3375  000020                     i2TxPacket@t2:
  3376                           	opt stack 0
  3377                           
  3378                           ; 4 bytes @ 0x1F
  3379  000020                     	ds	4
  3380  000024                     i2TxPacket@delay:
  3381                           	opt stack 0
  3382                           
  3383                           ; 2 bytes @ 0x23
  3384  000024                     	ds	2
  3385  000026                     i2TxPacket@reTry:
  3386                           	opt stack 0
  3387                           
  3388                           ; 1 bytes @ 0x25
  3389  000026                     	ds	1
  3390  000027                     i2TxPacket@allowedTxFailure:
  3391                           	opt stack 0
  3392                           
  3393                           ; 1 bytes @ 0x26
  3394  000027                     	ds	1
  3395  000028                     i2TxPacket@j:
  3396                           	opt stack 0
  3397                           
  3398                           ; 2 bytes @ 0x27
  3399  000028                     	ds	2
  3400  00002A                     i2TxPacket@rssival:
  3401                           	opt stack 0
  3402                           
  3403                           ; 1 bytes @ 0x29
  3404  00002A                     	ds	1
  3405  00002B                     i2TxPacket@i:
  3406                           	opt stack 0
  3407                           
  3408                           ; 1 bytes @ 0x2A
  3409  00002B                     	ds	1
  3410  00002C                     ??_HighISR:
  3411                           
  3412                           ; 1 bytes @ 0x2B
  3413  00002C                     	ds	10
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           postinc0	equ	0xFEE
  3419                           wreg	equ	0xFE8
  3420                           postdec1	equ	0xFE5
  3421                           fsr1h	equ	0xFE2
  3422                           fsr1l	equ	0xFE1
  3423                           
  3424 ;;
  3425 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3426 ;;
  3427 ;; *************** function _main *****************
  3428 ;; Defined at:
  3429 ;;		line 51 in file "../src/mainRFD-Sleeping.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  coord           2   27[BANK2 ] struct addr_t_def
  3434 ;;  tStart          4   17[BANK2 ] struct MIWI_TICK_t
  3435 ;;  src             2   25[BANK2 ] struct addr_t_def
  3436 ;;  src1            2   13[BANK2 ] struct addr_t_def
  3437 ;;  pMemberOfNet    1   24[BANK2 ] unsigned char 
  3438 ;;  counter         1   23[BANK2 ] unsigned char 
  3439 ;;  RequestData     1   22[BANK2 ] unsigned char 
  3440 ;;  SendPacket      1   21[BANK2 ] unsigned char 
  3441 ;;  pButtonPress    1   16[BANK2 ] unsigned char 
  3442 ;;  pButtonPress    1   15[BANK2 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2  741[None  ] int 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : F/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Totals:         0       0       4      16       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;Total ram usage:       20 bytes
  3457 ;; Hardware stack levels required when called:   18
  3458 ;; This function calls:
  3459 ;;		_ButtonTask
  3460 ;;		_HardwareInit
  3461 ;;		_InitSymbolTimer
  3462 ;;		_LCDUpdate
  3463 ;;		_LEDCommand
  3464 ;;		_LEDManagerTask
  3465 ;;		_MiApp_DiscardMessage
  3466 ;;		_MiApp_EstablishConnection
  3467 ;;		_MiApp_GetParentAddress
  3468 ;;		_MiApp_IsMemberOfNetwork
  3469 ;;		_MiApp_MessageAvailable
  3470 ;;		_MiApp_ProtocolInit
  3471 ;;		_MiApp_RequestData
  3472 ;;		_MiApp_SearchConnection
  3473 ;;		_MiApp_SetAddressPan
  3474 ;;		_MiApp_TransceiverPowerState
  3475 ;;		_MiApp_UnicastAddress
  3476 ;;		_MiWi_TickGetMs
  3477 ;;		_Read_MAC_Address
  3478 ;;		_isButtonPressed
  3479 ;;		_memcmp
  3480 ;;		_memset
  3481 ;;		_sprintf
  3482 ;; This function is called by:
  3483 ;;		Startup code after reset
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text0
  3488  0012E2                     __ptext0:
  3489                           	opt stack 0
  3490  0012E2                     _main:
  3491                           	opt stack 13
  3492                           
  3493                           ;mainRFD-Sleeping.c: 53: addr_t src;
  3494                           ;mainRFD-Sleeping.c: 54: addr_t src1;
  3495                           ;mainRFD-Sleeping.c: 55: MIWI_TICK tStart;
  3496                           ;mainRFD-Sleeping.c: 56: bool pButtonPressed_0=0;
  3497                           
  3498                           ;incstack = 0
  3499  0012E2  0102               	movlb	2	; () banked
  3500  0012E4  6BB4               	clrf	main@pButtonPressed_0& (0+255),b
  3501                           
  3502                           ;mainRFD-Sleeping.c: 57: bool pButtonPressed_1=0;
  3503  0012E6  6BB5               	clrf	main@pButtonPressed_1& (0+255),b
  3504                           
  3505                           ;mainRFD-Sleeping.c: 58: bool SendPacket=0;
  3506  0012E8  6BBA               	clrf	main@SendPacket& (0+255),b
  3507                           
  3508                           ;mainRFD-Sleeping.c: 59: bool RequestData=0;
  3509  0012EA  6BBB               	clrf	main@RequestData& (0+255),b
  3510                           
  3511                           ;mainRFD-Sleeping.c: 60: uint8_t counter=0;
  3512  0012EC  6BBC               	clrf	main@counter& (0+255),b
  3513                           
  3514                           ;mainRFD-Sleeping.c: 61: bool pMemberOfNetwork=0;
  3515  0012EE  6BBD               	clrf	main@pMemberOfNetwork& (0+255),b
  3516                           
  3517                           ; BSR set to: 2
  3518                           ;mainRFD-Sleeping.c: 64: myDeviceType=DeviceSleepingRFD;
  3519  0012F0  0E02               	movlw	2
  3520  0012F2  6FC2               	movwf	_myDeviceType& (0+255),b
  3521                           
  3522                           ; BSR set to: 2
  3523                           ;mainRFD-Sleeping.c: 66: HardwareInit();
  3524  0012F4  EC58  F02D         	call	_HardwareInit	;wreg free
  3525                           
  3526                           ;mainRFD-Sleeping.c: 67: InitSymbolTimer();
  3527  0012F8  EC9E  F03B         	call	_InitSymbolTimer	;wreg free
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;mainRFD-Sleeping.c: 71: currentChannel = 25;
  3531  0012FC  EC7C  F037         	call	_Read_MAC_Address	;wreg free
  3532  001300  C07F  F1EA         	movff	?_Read_MAC_Address,_myAddr
  3533  001304  C080  F1EB         	movff	?_Read_MAC_Address+1,_myAddr+1
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;mainRFD-Sleeping.c: 72: MiApp_SetAddressPan(myAddr.bytes, 0x5533);
  3537  001308  0EEA               	movlw	low _myAddr
  3538  00130A  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
  3539  00130C  0E01               	movlw	high _myAddr
  3540  00130E  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
  3541  001310  0E55               	movlw	85
  3542  001312  6F86               	movwf	(MiApp_SetAddressPan@panid+1)& (0+255),b
  3543  001314  0E33               	movlw	51
  3544  001316  6F85               	movwf	MiApp_SetAddressPan@panid& (0+255),b
  3545  001318  EC55  F037         	call	_MiApp_SetAddressPan	;wreg free
  3546                           
  3547                           ;mainRFD-Sleeping.c: 73: MiApp_ProtocolInit(0);
  3548  00131C  ECB0  F035         	call	_MiApp_ProtocolInit
  3549                           
  3550                           ;mainRFD-Sleeping.c: 75: LATCbits.LATC2 = 0;
  3551  001320  948B               	bcf	3979,2,c	;volatile
  3552                           
  3553                           ;mainRFD-Sleeping.c: 76: LATAbits.LATA6 = 0;
  3554  001322  9C89               	bcf	3977,6,c	;volatile
  3555                           
  3556                           ;mainRFD-Sleeping.c: 77: LATAbits.LATA7 = 0;
  3557  001324  9E89               	bcf	3977,7,c	;volatile
  3558                           
  3559                           ;mainRFD-Sleeping.c: 78: sprintf(&LCDText[0],"a:%04X p:FFFF",*(uint16_t*)(&myAddr)); LCD
      +                          Update();
  3560  001326  0ECE               	movlw	low _LCDText
  3561  001328  0100               	movlb	0	; () banked
  3562  00132A  6F7A               	movwf	sprintf@sp& (0+255),b
  3563  00132C  0E03               	movlw	high _LCDText
  3564  00132E  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3565  001330  0ED6               	movlw	low STR_1
  3566  001332  6F7C               	movwf	sprintf@f& (0+255),b
  3567  001334  0EFF               	movlw	high STR_1
  3568  001336  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3569  001338  C1EA  F07E         	movff	_myAddr,?_sprintf+4
  3570  00133C  C1EB  F07F         	movff	_myAddr+1,?_sprintf+5
  3571  001340  EC14  F011         	call	_sprintf	;wreg free
  3572                           
  3573                           ; BSR set to: 0
  3574  001344  ECA1  F02C         	call	_LCDUpdate	;wreg free
  3575  001348                     l15674:
  3576  001348  0101               	movlb	1	; () banked
  3577  00134A  6BA6               	clrf	MiApp_SearchConnection@ChannelMap& (0+255),b
  3578  00134C  6BA7               	clrf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  3579  00134E  6BA8               	clrf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  3580  001350  0E1E               	movlw	30
  3581  001352  6FA9               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  3582  001354  0E0E               	movlw	14
  3583  001356  ECED  F022         	call	_MiApp_SearchConnection
  3584  00135A  0AFF               	xorlw	255
  3585  00135C  E0F5               	bz	l15674
  3586                           
  3587                           ; BSR set to: 2
  3588                           ;mainRFD-Sleeping.c: 88: MiApp_EstablishConnection(0,0);
  3589  00135E  0E00               	movlw	0
  3590  001360  0100               	movlb	0	; () banked
  3591  001362  6B9A               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3592  001364  EC01  F02F         	call	_MiApp_EstablishConnection
  3593  001368                     l15678:
  3594                           
  3595                           ;mainRFD-Sleeping.c: 91: {
  3596                           ;mainRFD-Sleeping.c: 92: ButtonTask();
  3597  001368  ECCF  F033         	call	_ButtonTask	;wreg free
  3598                           
  3599                           ;mainRFD-Sleeping.c: 93: LEDManagerTask();
  3600  00136C  EC30  F00B         	call	_LEDManagerTask	;wreg free
  3601                           
  3602                           ;mainRFD-Sleeping.c: 94: switch(devState)
  3603  001370  D0FA               	goto	l15770
  3604  001372                     l15682:
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;mainRFD-Sleeping.c: 97: tStart=MiWi_TickGetMs();
  3608  001372  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3609  001376  C07F  F2B6         	movff	?_MiWi_TickGetMs,main@tStart
  3610  00137A  C080  F2B7         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3611  00137E  C081  F2B8         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3612  001382  C082  F2B9         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;mainRFD-Sleeping.c: 98: SendPacket=0;
  3616  001386  0102               	movlb	2	; () banked
  3617  001388  6BBA               	clrf	main@SendPacket& (0+255),b
  3618                           
  3619                           ; BSR set to: 2
  3620                           ;mainRFD-Sleeping.c: 99: RequestData=0;
  3621  00138A  6BBB               	clrf	main@RequestData& (0+255),b
  3622  00138C                     l15688:
  3623                           
  3624                           ;mainRFD-Sleeping.c: 100: devState=devWaitJoin;
  3625  00138C  0E01               	movlw	1
  3626  00138E  D0E8               	goto	L1
  3627  001390                     l15690:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;mainRFD-Sleeping.c: 104: if(MiApp_IsMemberOfNetwork()==1)
  3631  001390  EC4D  F03C         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3632  001394  06E8               	decf	wreg,f,c
  3633  001396  E10D               	bnz	l15696
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;mainRFD-Sleeping.c: 105: {
  3637                           ;mainRFD-Sleeping.c: 106: devState=devAwake;
  3638  001398  0E02               	movlw	2
  3639  00139A  0101               	movlb	1	; () banked
  3640  00139C  6FDA               	movwf	_devState& (0+255),b
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;mainRFD-Sleeping.c: 107: tStart=MiWi_TickGetMs();
  3644  00139E  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3645  0013A2  C07F  F2B6         	movff	?_MiWi_TickGetMs,main@tStart
  3646  0013A6  C080  F2B7         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3647  0013AA  C081  F2B8         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3648  0013AE  C082  F2B9         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3649  0013B2                     l15696:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;mainRFD-Sleeping.c: 108: }
  3653                           ;mainRFD-Sleeping.c: 109: if(MiApp_MessageAvailable()==1)
  3654  0013B2  EC4F  F029         	call	_MiApp_MessageAvailable	;wreg free
  3655  0013B6  06E8               	decf	wreg,f,c
  3656  0013B8  E001 D0E1          	bnz	l15772
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;mainRFD-Sleeping.c: 110: {
  3660                           ;mainRFD-Sleeping.c: 111: MiApp_DiscardMessage();
  3661  0013BC  EC30  F03C         	call	_MiApp_DiscardMessage	;wreg free
  3662  0013C0  D0DE               	goto	l15772
  3663  0013C2                     l15700:
  3664                           
  3665                           ; BSR set to: 1
  3666                           ;mainRFD-Sleeping.c: 116: if((MiWi_TickGetMs().Val - tStart.Val)<300)
  3667  0013C2  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3668  0013C6  0102               	movlb	2	; () banked
  3669  0013C8  51B6               	movf	main@tStart& (0+255),w,b
  3670  0013CA  0100               	movlb	0	; () banked
  3671  0013CC  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  3672  0013CE  0101               	movlb	1	; () banked
  3673  0013D0  6FB2               	movwf	??_main& (0+255),b
  3674  0013D2  0102               	movlb	2	; () banked
  3675  0013D4  51B7               	movf	(main@tStart+1)& (0+255),w,b
  3676  0013D6  0100               	movlb	0	; () banked
  3677  0013D8  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  3678  0013DA  0101               	movlb	1	; () banked
  3679  0013DC  6FB3               	movwf	(??_main+1)& (0+255),b
  3680  0013DE  0102               	movlb	2	; () banked
  3681  0013E0  51B8               	movf	(main@tStart+2)& (0+255),w,b
  3682  0013E2  0100               	movlb	0	; () banked
  3683  0013E4  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  3684  0013E6  0101               	movlb	1	; () banked
  3685  0013E8  6FB4               	movwf	(??_main+2)& (0+255),b
  3686  0013EA  0102               	movlb	2	; () banked
  3687  0013EC  51B9               	movf	(main@tStart+3)& (0+255),w,b
  3688  0013EE  0100               	movlb	0	; () banked
  3689  0013F0  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  3690  0013F2  0101               	movlb	1	; () banked
  3691  0013F4  6FB5               	movwf	(??_main+3)& (0+255),b
  3692  0013F6  51B5               	movf	(??_main+3)& (0+255),w,b
  3693  0013F8  11B4               	iorwf	(??_main+2)& (0+255),w,b
  3694  0013FA  E13D               	bnz	l15716
  3695  0013FC  0E2C               	movlw	44
  3696  0013FE  5DB2               	subwf	??_main& (0+255),w,b
  3697  001400  0E01               	movlw	1
  3698  001402  59B3               	subwfb	(??_main+1)& (0+255),w,b
  3699  001404  E238               	bc	l15716
  3700                           
  3701                           ; BSR set to: 1
  3702                           ;mainRFD-Sleeping.c: 117: {
  3703                           ;mainRFD-Sleeping.c: 118: if(MiApp_MessageAvailable()==1)
  3704  001406  EC4F  F029         	call	_MiApp_MessageAvailable	;wreg free
  3705  00140A  06E8               	decf	wreg,f,c
  3706  00140C  E13A               	bnz	l15720
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;mainRFD-Sleeping.c: 119: {
  3710                           ;mainRFD-Sleeping.c: 120: sprintf(&LCDText[17],"i:%04X=%02X      ",*((uint16_t*)(rxMessa
      +                          ge.SourceAddress)),rxMessage.Payload[1]); LCDUpdate();
  3711  00140E  0EDF               	movlw	low (_LCDText+17)
  3712  001410  0100               	movlb	0	; () banked
  3713  001412  6F7A               	movwf	sprintf@sp& (0+255),b
  3714  001414  0E03               	movlw	high (_LCDText+17)
  3715  001416  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3716  001418  0EB3               	movlw	low STR_2
  3717  00141A  6F7C               	movwf	sprintf@f& (0+255),b
  3718  00141C  0EFF               	movlw	high STR_2
  3719  00141E  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3720  001420  C27D  FFD9         	movff	_rxMessage+3,fsr2l
  3721  001424  C27E  FFDA         	movff	_rxMessage+4,fsr2h
  3722  001428  CFDE F07E          	movff	postinc2,?_sprintf+4
  3723  00142C  CFDD F07F          	movff	postdec2,?_sprintf+5
  3724  001430  0102               	movlb	2	; () banked
  3725  001432  EE20 F001          	lfsr	2,1
  3726  001436  517F               	movf	(_rxMessage+5)& (0+255),w,b
  3727  001438  26D9               	addwf	fsr2l,f,c
  3728  00143A  5180               	movf	(_rxMessage+6)& (0+255),w,b
  3729  00143C  22DA               	addwfc	fsr2h,f,c
  3730  00143E  50DF               	movf	indf2,w,c
  3731  001440  0100               	movlb	0	; () banked
  3732  001442  6F80               	movwf	(?_sprintf+6)& (0+255),b
  3733  001444  6B81               	clrf	(?_sprintf+7)& (0+255),b
  3734  001446  EC14  F011         	call	_sprintf	;wreg free
  3735                           
  3736                           ; BSR set to: 0
  3737  00144A  ECA1  F02C         	call	_LCDUpdate	;wreg free
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;mainRFD-Sleeping.c: 121: LEDCommand(LEDGreen,lCMD_Toggle);
  3741  00144E  0E04               	movlw	4
  3742  001450  6F73               	movwf	LEDCommand@cmd& (0+255),b
  3743  001452  0E00               	movlw	0
  3744  001454  ECAA  F038         	call	_LEDCommand
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;mainRFD-Sleeping.c: 122: MiApp_DiscardMessage();
  3748  001458  EC30  F03C         	call	_MiApp_DiscardMessage	;wreg free
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;mainRFD-Sleeping.c: 123: tStart=MiWi_TickGetMs();
  3752  00145C  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3753  001460  C07F  F2B6         	movff	?_MiWi_TickGetMs,main@tStart
  3754  001464  C080  F2B7         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3755  001468  C081  F2B8         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3756  00146C  C082  F2B9         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;mainRFD-Sleeping.c: 124: MiApp_RequestData();
  3760  001470  EC4B  F03C         	call	_MiApp_RequestData	;wreg free
  3761  001474  D006               	goto	l15720
  3762  001476                     l15716:
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;mainRFD-Sleeping.c: 128: {
  3766                           ;mainRFD-Sleeping.c: 129: MiApp_TransceiverPowerState(0x00);
  3767  001476  0E00               	movlw	0
  3768  001478  ECB4  F03B         	call	_MiApp_TransceiverPowerState
  3769                           
  3770                           ;mainRFD-Sleeping.c: 130: devState=devSleep;
  3771  00147C  0E03               	movlw	3
  3772  00147E  0101               	movlb	1	; () banked
  3773  001480  6FDA               	movwf	_devState& (0+255),b
  3774  001482                     l15720:
  3775                           
  3776                           ;mainRFD-Sleeping.c: 131: }
  3777                           ;mainRFD-Sleeping.c: 132: if(MiApp_IsMemberOfNetwork()==0)
  3778  001482  EC4D  F03C         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3779  001486  0900               	iorlw	0
  3780  001488  E081               	bz	l15688
  3781  00148A  D079               	goto	l15772
  3782  00148C                     l15724:
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;mainRFD-Sleeping.c: 143: if(SendPacket==1)
  3786  00148C  0102               	movlb	2	; () banked
  3787  00148E  05BA               	decf	main@SendPacket& (0+255),w,b
  3788  001490  E152               	bnz	l15756
  3789                           
  3790                           ; BSR set to: 2
  3791                           ;mainRFD-Sleeping.c: 144: {
  3792                           ;mainRFD-Sleeping.c: 145: MiApp_TransceiverPowerState(0x01);
  3793  001492  0E01               	movlw	1
  3794  001494  ECB4  F03B         	call	_MiApp_TransceiverPowerState
  3795                           
  3796                           ;mainRFD-Sleeping.c: 146: addr_t coord={0};
  3797  001498  C253  F2C0         	movff	main@F8344,main@coord
  3798  00149C  C254  F2C1         	movff	main@F8344+1,main@coord+1
  3799                           
  3800                           ;mainRFD-Sleeping.c: 147: memset(coord.bytes,0x00,sizeof(coord));
  3801  0014A0  0EC0               	movlw	low main@coord
  3802  0014A2  0100               	movlb	0	; () banked
  3803  0014A4  6F73               	movwf	memset@p1& (0+255),b
  3804  0014A6  0E02               	movlw	high main@coord
  3805  0014A8  6F74               	movwf	(memset@p1+1)& (0+255),b
  3806  0014AA  6B76               	clrf	(memset@c+1)& (0+255),b
  3807  0014AC  6B75               	clrf	memset@c& (0+255),b
  3808  0014AE  6B78               	clrf	(memset@n+1)& (0+255),b
  3809  0014B0  0E02               	movlw	2
  3810  0014B2  6F77               	movwf	memset@n& (0+255),b
  3811  0014B4  EC4C  F03A         	call	_memset	;wreg free
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;mainRFD-Sleeping.c: 148: {TxData = 0;};
  3815  0014B8  0101               	movlb	1	; () banked
  3816  0014BA  6BD8               	clrf	_TxData& (0+255),b
  3817                           
  3818                           ; BSR set to: 1
  3819                           ;mainRFD-Sleeping.c: 149: TxBuffer[TxData++] = mUserDataType;
  3820  0014BC  0E88               	movlw	low _TxBuffer
  3821  0014BE  25D8               	addwf	_TxData& (0+255),w,b
  3822  0014C0  6ED9               	movwf	fsr2l,c
  3823  0014C2  6ADA               	clrf	fsr2h,c
  3824  0014C4  0E07               	movlw	high _TxBuffer
  3825  0014C6  22DA               	addwfc	fsr2h,f,c
  3826  0014C8  0E0A               	movlw	10
  3827  0014CA  6EDF               	movwf	indf2,c
  3828                           
  3829                           ; BSR set to: 1
  3830  0014CC  2BD8               	incf	_TxData& (0+255),f,b
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;mainRFD-Sleeping.c: 150: TxBuffer[TxData++] = counter;
  3834  0014CE  0E88               	movlw	low _TxBuffer
  3835  0014D0  25D8               	addwf	_TxData& (0+255),w,b
  3836  0014D2  6ED9               	movwf	fsr2l,c
  3837  0014D4  6ADA               	clrf	fsr2h,c
  3838  0014D6  0E07               	movlw	high _TxBuffer
  3839  0014D8  22DA               	addwfc	fsr2h,f,c
  3840  0014DA  C2BC  FFDF         	movff	main@counter,indf2
  3841                           
  3842                           ; BSR set to: 1
  3843  0014DE  2BD8               	incf	_TxData& (0+255),f,b
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;mainRFD-Sleeping.c: 151: if(MiApp_UnicastAddress(coord.bytes, (0), 0)==1)
  3847  0014E0  0EC0               	movlw	low main@coord
  3848  0014E2  6F47               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  3849  0014E4  0E02               	movlw	high main@coord
  3850  0014E6  6F48               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  3851  0014E8  6B49               	clrf	MiApp_UnicastAddress@Origin& (0+255),b
  3852  0014EA  6B4A               	clrf	(MiApp_UnicastAddress@Origin+1)& (0+255),b
  3853  0014EC  6B4B               	clrf	MiApp_UnicastAddress@SecEn& (0+255),b
  3854  0014EE  EC04  F039         	call	_MiApp_UnicastAddress	;wreg free
  3855  0014F2  06E8               	decf	wreg,f,c
  3856  0014F4  E111               	bnz	l15750
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;mainRFD-Sleeping.c: 152: {
  3860                           ;mainRFD-Sleeping.c: 155: sprintf(&LCDText[17],"o:%02X           ",counter++); LCDUpdate
      +                          ();
  3861  0014F6  0EDF               	movlw	low (_LCDText+17)
  3862  0014F8  6F7A               	movwf	sprintf@sp& (0+255),b
  3863  0014FA  0E03               	movlw	high (_LCDText+17)
  3864  0014FC  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3865  0014FE  0EA1               	movlw	low STR_3
  3866  001500  6F7C               	movwf	sprintf@f& (0+255),b
  3867  001502  0EFF               	movlw	high STR_3
  3868  001504  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3869  001506  C2BC  F07E         	movff	main@counter,?_sprintf+4
  3870  00150A  6B7F               	clrf	(?_sprintf+5)& (0+255),b
  3871  00150C  EC14  F011         	call	_sprintf	;wreg free
  3872                           
  3873                           ; BSR set to: 0
  3874  001510  0102               	movlb	2	; () banked
  3875  001512  2BBC               	incf	main@counter& (0+255),f,b
  3876                           
  3877                           ; BSR set to: 2
  3878  001514  ECA1  F02C         	call	_LCDUpdate	;wreg free
  3879  001518                     l15750:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;mainRFD-Sleeping.c: 156: }
  3883                           ;mainRFD-Sleeping.c: 157: tStart=MiWi_TickGetMs();
  3884  001518  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3885  00151C  C07F  F2B6         	movff	?_MiWi_TickGetMs,main@tStart
  3886  001520  C080  F2B7         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3887  001524  C081  F2B8         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3888  001528  C082  F2B9         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;mainRFD-Sleeping.c: 158: SendPacket=0;
  3892  00152C  0102               	movlb	2	; () banked
  3893  00152E  6BBA               	clrf	main@SendPacket& (0+255),b
  3894                           
  3895                           ; BSR set to: 2
  3896                           ;mainRFD-Sleeping.c: 159: devState=devAwake;
  3897  001530  0E02               	movlw	2
  3898  001532  0101               	movlb	1	; () banked
  3899  001534  6FDA               	movwf	_devState& (0+255),b
  3900  001536                     l15756:
  3901                           
  3902                           ;mainRFD-Sleeping.c: 160: }
  3903                           ;mainRFD-Sleeping.c: 161: if(RequestData==1)
  3904  001536  0102               	movlb	2	; () banked
  3905  001538  05BB               	decf	main@RequestData& (0+255),w,b
  3906  00153A  E121               	bnz	l15772
  3907                           
  3908                           ; BSR set to: 2
  3909                           ;mainRFD-Sleeping.c: 162: {
  3910                           ;mainRFD-Sleeping.c: 163: MiApp_TransceiverPowerState(0x01);
  3911  00153C  0E01               	movlw	1
  3912  00153E  ECB4  F03B         	call	_MiApp_TransceiverPowerState
  3913                           
  3914                           ;mainRFD-Sleeping.c: 164: MiApp_RequestData();
  3915  001542  EC4B  F03C         	call	_MiApp_RequestData	;wreg free
  3916                           
  3917                           ;mainRFD-Sleeping.c: 165: tStart=MiWi_TickGetMs();
  3918  001546  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  3919  00154A  C07F  F2B6         	movff	?_MiWi_TickGetMs,main@tStart
  3920  00154E  C080  F2B7         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3921  001552  C081  F2B8         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3922  001556  C082  F2B9         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;mainRFD-Sleeping.c: 166: RequestData=0;
  3926  00155A  0102               	movlb	2	; () banked
  3927  00155C  6BBB               	clrf	main@RequestData& (0+255),b
  3928                           
  3929                           ; BSR set to: 2
  3930                           ;mainRFD-Sleeping.c: 167: devState=devAwake;
  3931  00155E  0E02               	movlw	2
  3932  001560                     L1:
  3933  001560  0101               	movlb	1	; () banked
  3934  001562  6FDA               	movwf	_devState& (0+255),b
  3935  001564  D00C               	goto	l15772
  3936  001566                     l15770:
  3937                           
  3938                           ; BSR set to: 0
  3939  001566  0101               	movlb	1	; () banked
  3940  001568  51DA               	movf	_devState& (0+255),w,b
  3941                           
  3942                           ; Switch size 1, requested type "speed"
  3943                           ; Number of cases is 4, Range of values is 0 to 3
  3944                           ; switch strategies available:
  3945                           ; Name         Instructions Cycles
  3946                           ; simple_byte           13     7 (average)
  3947                           ;	Chosen strategy is simple_byte
  3948  00156A  E101 D702          	bz	l15682
  3949  00156E  0A01               	xorlw	1	; case 1
  3950  001570  E101 D70E          	bz	l15690
  3951  001574  0A03               	xorlw	3	; case 2
  3952  001576  E101 D724          	bz	l15700
  3953  00157A  0A01               	xorlw	1	; case 3
  3954  00157C  E087               	bz	l15724
  3955  00157E                     l15772:
  3956                           
  3957                           ;mainRFD-Sleeping.c: 172: if(isButtonPressed(0)==1)
  3958  00157E  0E00               	movlw	0
  3959  001580  EC0A  F03A         	call	_isButtonPressed
  3960  001584  06E8               	decf	wreg,f,c
  3961  001586  E107               	bnz	l763
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;mainRFD-Sleeping.c: 173: {
  3965                           ;mainRFD-Sleeping.c: 174: if(pButtonPressed_0==0)
  3966  001588  0102               	movlb	2	; () banked
  3967  00158A  51B4               	movf	main@pButtonPressed_0& (0+255),w,b
  3968  00158C  E106               	bnz	l15778
  3969                           
  3970                           ; BSR set to: 2
  3971                           ;mainRFD-Sleeping.c: 175: {
  3972                           ;mainRFD-Sleeping.c: 176: pButtonPressed_0=1;
  3973  00158E  0E01               	movlw	1
  3974  001590  6FB4               	movwf	main@pButtonPressed_0& (0+255),b
  3975                           
  3976                           ;mainRFD-Sleeping.c: 177: SendPacket=1;
  3977  001592  6FBA               	movwf	main@SendPacket& (0+255),b
  3978  001594  D002               	goto	l15778
  3979  001596                     l763:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;mainRFD-Sleeping.c: 180: {
  3983                           ;mainRFD-Sleeping.c: 181: pButtonPressed_0=0;
  3984  001596  0102               	movlb	2	; () banked
  3985  001598  6BB4               	clrf	main@pButtonPressed_0& (0+255),b
  3986  00159A                     l15778:
  3987                           
  3988                           ; BSR set to: 2
  3989                           ;mainRFD-Sleeping.c: 182: }
  3990                           ;mainRFD-Sleeping.c: 183: if(isButtonPressed(1)==1)
  3991  00159A  0E01               	movlw	1
  3992  00159C  EC0A  F03A         	call	_isButtonPressed
  3993  0015A0  06E8               	decf	wreg,f,c
  3994  0015A2  E107               	bnz	l766
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;mainRFD-Sleeping.c: 184: {
  3998                           ;mainRFD-Sleeping.c: 185: if(pButtonPressed_1==0)
  3999  0015A4  0102               	movlb	2	; () banked
  4000  0015A6  51B5               	movf	main@pButtonPressed_1& (0+255),w,b
  4001  0015A8  E106               	bnz	l15784
  4002                           
  4003                           ; BSR set to: 2
  4004                           ;mainRFD-Sleeping.c: 186: {
  4005                           ;mainRFD-Sleeping.c: 187: pButtonPressed_1=1;
  4006  0015AA  0E01               	movlw	1
  4007  0015AC  6FB5               	movwf	main@pButtonPressed_1& (0+255),b
  4008                           
  4009                           ;mainRFD-Sleeping.c: 188: RequestData=1;
  4010  0015AE  6FBB               	movwf	main@RequestData& (0+255),b
  4011  0015B0  D002               	goto	l15784
  4012  0015B2                     l766:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;mainRFD-Sleeping.c: 191: {
  4016                           ;mainRFD-Sleeping.c: 192: pButtonPressed_1=0;
  4017  0015B2  0102               	movlb	2	; () banked
  4018  0015B4  6BB5               	clrf	main@pButtonPressed_1& (0+255),b
  4019  0015B6                     l15784:
  4020                           
  4021                           ; BSR set to: 2
  4022                           ;mainRFD-Sleeping.c: 193: }
  4023                           ;mainRFD-Sleeping.c: 195: if(MiApp_IsMemberOfNetwork()==1)
  4024  0015B6  EC4D  F03C         	call	_MiApp_IsMemberOfNetwork	;wreg free
  4025  0015BA  06E8               	decf	wreg,f,c
  4026  0015BC  E136               	bnz	l15800
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;mainRFD-Sleeping.c: 196: {
  4030                           ;mainRFD-Sleeping.c: 197: src1=MiApp_GetParentAddress();
  4031  0015BE  ECCD  F03B         	call	_MiApp_GetParentAddress	;wreg free
  4032  0015C2  C075  F2B2         	movff	?_MiApp_GetParentAddress,main@src1
  4033  0015C6  C076  F2B3         	movff	?_MiApp_GetParentAddress+1,main@src1+1
  4034                           
  4035                           ;mainRFD-Sleeping.c: 198: if( (pMemberOfNetwork==0) || (memcmp(src.bytes,src1.bytes,2)!=
      +                          0))
  4036  0015CA  0102               	movlb	2	; () banked
  4037  0015CC  51BD               	movf	main@pMemberOfNetwork& (0+255),w,b
  4038  0015CE  E012               	bz	l15792
  4039                           
  4040                           ; BSR set to: 2
  4041  0015D0  0EBE               	movlw	low main@src
  4042  0015D2  0100               	movlb	0	; () banked
  4043  0015D4  6F73               	movwf	memcmp@s1& (0+255),b
  4044  0015D6  0E02               	movlw	high main@src
  4045  0015D8  6F74               	movwf	(memcmp@s1+1)& (0+255),b
  4046  0015DA  0EB2               	movlw	low main@src1
  4047  0015DC  6F75               	movwf	memcmp@s2& (0+255),b
  4048  0015DE  0E02               	movlw	high main@src1
  4049  0015E0  6F76               	movwf	(memcmp@s2+1)& (0+255),b
  4050  0015E2  6B78               	clrf	(memcmp@n+1)& (0+255),b
  4051  0015E4  0E02               	movlw	2
  4052  0015E6  6F77               	movwf	memcmp@n& (0+255),b
  4053  0015E8  EC07  F036         	call	_memcmp	;wreg free
  4054  0015EC  5173               	movf	?_memcmp& (0+255),w,b
  4055  0015EE  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
  4056  0015F0  E101 D6BA          	bz	l15678
  4057  0015F4                     l15792:
  4058                           
  4059                           ;mainRFD-Sleeping.c: 199: {
  4060                           ;mainRFD-Sleeping.c: 200: pMemberOfNetwork=1;
  4061  0015F4  0E01               	movlw	1
  4062  0015F6  0102               	movlb	2	; () banked
  4063  0015F8  6FBD               	movwf	main@pMemberOfNetwork& (0+255),b
  4064                           
  4065                           ; BSR set to: 2
  4066                           ;mainRFD-Sleeping.c: 201: src=MiApp_GetParentAddress();
  4067  0015FA  ECCD  F03B         	call	_MiApp_GetParentAddress	;wreg free
  4068  0015FE  C075  F2BE         	movff	?_MiApp_GetParentAddress,main@src
  4069  001602  C076  F2BF         	movff	?_MiApp_GetParentAddress+1,main@src+1
  4070                           
  4071                           ;mainRFD-Sleeping.c: 202: sprintf(&LCDText[7],"p:%04X",*(uint16_t*)(&src)); LCDUpdate();
  4072  001606  0ED5               	movlw	low (_LCDText+7)
  4073  001608  0100               	movlb	0	; () banked
  4074  00160A  6F7A               	movwf	sprintf@sp& (0+255),b
  4075  00160C  0E03               	movlw	high (_LCDText+7)
  4076  00160E  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  4077  001610  0EEB               	movlw	low STR_4
  4078  001612  6F7C               	movwf	sprintf@f& (0+255),b
  4079  001614  0EFF               	movlw	high STR_4
  4080  001616  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  4081  001618  C2BE  F07E         	movff	main@src,?_sprintf+4
  4082  00161C  C2BF  F07F         	movff	main@src+1,?_sprintf+5
  4083  001620  EC14  F011         	call	_sprintf	;wreg free
  4084  001624                     l15798:
  4085                           
  4086                           ; BSR set to: 0
  4087  001624  ECA1  F02C         	call	_LCDUpdate	;wreg free
  4088  001628  D69F               	goto	l15678
  4089  00162A                     l15800:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;mainRFD-Sleeping.c: 205: {
  4093                           ;mainRFD-Sleeping.c: 206: if(pMemberOfNetwork==1)
  4094  00162A  0102               	movlb	2	; () banked
  4095  00162C  05BD               	decf	main@pMemberOfNetwork& (0+255),w,b
  4096  00162E  E001 D69B          	bnz	l15678
  4097                           
  4098                           ; BSR set to: 2
  4099                           ;mainRFD-Sleeping.c: 207: {
  4100                           ;mainRFD-Sleeping.c: 208: pMemberOfNetwork=0;
  4101  001632  6BBD               	clrf	main@pMemberOfNetwork& (0+255),b
  4102                           
  4103                           ; BSR set to: 2
  4104                           ;mainRFD-Sleeping.c: 209: src=MiApp_GetParentAddress();
  4105  001634  ECCD  F03B         	call	_MiApp_GetParentAddress	;wreg free
  4106  001638  C075  F2BE         	movff	?_MiApp_GetParentAddress,main@src
  4107  00163C  C076  F2BF         	movff	?_MiApp_GetParentAddress+1,main@src+1
  4108                           
  4109                           ;mainRFD-Sleeping.c: 210: sprintf(&LCDText[7],"p:%s","FFFF"); LCDUpdate();
  4110  001640  0ED5               	movlw	low (_LCDText+7)
  4111  001642  0100               	movlb	0	; () banked
  4112  001644  6F7A               	movwf	sprintf@sp& (0+255),b
  4113  001646  0E03               	movlw	high (_LCDText+7)
  4114  001648  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  4115  00164A  0EF2               	movlw	low STR_5
  4116  00164C  6F7C               	movwf	sprintf@f& (0+255),b
  4117  00164E  0EFF               	movlw	high STR_5
  4118  001650  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  4119  001652  0EDF               	movlw	low (STR_1+9)
  4120  001654  6F7E               	movwf	(?_sprintf+4)& (0+255),b
  4121  001656  0EFF               	movlw	high (STR_1+9)
  4122  001658  6F7F               	movwf	(?_sprintf+5)& (0+255),b
  4123  00165A  EC14  F011         	call	_sprintf	;wreg free
  4124  00165E  D7E2               	goto	l15798
  4125  001660                     __end_of_main:
  4126                           	opt stack 0
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           postinc0	equ	0xFEE
  4132                           wreg	equ	0xFE8
  4133                           postdec1	equ	0xFE5
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           
  4142 ;; *************** function _sprintf *****************
  4143 ;; Defined at:
  4144 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  sp              2   26[BANK0 ] PTR unsigned char 
  4147 ;;		 -> LCDText(33), 
  4148 ;;  f               2   28[BANK0 ] PTR const unsigned char 
  4149 ;;		 -> STR_5(5), STR_4(7), STR_3(18), STR_2(18), 
  4150 ;;		 -> STR_1(14), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  idx             1   38[BANK0 ] unsigned char 
  4153 ;;  tmpval          4    0        struct .
  4154 ;;  width           2   48[BANK0 ] int 
  4155 ;;  len             2   46[BANK0 ] unsigned int 
  4156 ;;  cp              2   44[BANK0 ] PTR const unsigned char 
  4157 ;;		 -> STR_7(7), STR_6(5), 
  4158 ;;  val             2   40[BANK0 ] unsigned int 
  4159 ;;  c               1   50[BANK0 ] char 
  4160 ;;  ap              1   43[BANK0 ] PTR void [1]
  4161 ;;		 -> ?_sprintf(2), 
  4162 ;;  prec            1   42[BANK0 ] char 
  4163 ;;  flag            1   39[BANK0 ] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2   26[BANK0 ] int 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : F/0
  4170 ;;		On exit  : F/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4173 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;Total ram usage:       25 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    6
  4180 ;; This function calls:
  4181 ;;		___lwdiv
  4182 ;;		___wmul
  4183 ;;		_isdigit
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text1
  4190  002228                     __ptext1:
  4191                           	opt stack 0
  4192  002228                     _sprintf:
  4193                           	opt stack 24
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;doprnt.c: 494: va_list ap;
  4197                           ;doprnt.c: 499: signed char c;
  4198                           ;doprnt.c: 501: int width;
  4199                           ;doprnt.c: 506: signed char prec;
  4200                           ;doprnt.c: 508: unsigned char flag;
  4201                           ;doprnt.c: 523: union {
  4202                           ;doprnt.c: 524: unsigned long vd;
  4203                           ;doprnt.c: 525: double integ;
  4204                           ;doprnt.c: 526: } tmpval;
  4205                           ;doprnt.c: 528: unsigned int val;
  4206                           ;doprnt.c: 529: unsigned len;
  4207                           ;doprnt.c: 530: const char * cp;
  4208                           ;doprnt.c: 533: *ap = __va_start();
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;incstack = 0
  4212  002228  0E7E               	movlw	low (?_sprintf+4)
  4213  00222A  6F8B               	movwf	sprintf@ap& (0+255),b
  4214                           
  4215                           ;doprnt.c: 536: while(c = *f++) {
  4216  00222C  D13E               	goto	l15228
  4217  00222E                     l15120:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;doprnt.c: 538: if(c != '%')
  4221  00222E  0E25               	movlw	37
  4222  002230  1992               	xorwf	sprintf@c& (0+255),w,b
  4223  002232  E009               	bz	l1010
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;doprnt.c: 540: {
  4227                           ;doprnt.c: 541: ((*sp++ = (c)));
  4228  002234  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4229  002238  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4230  00223C  C092  FFDF         	movff	sprintf@c,indf2
  4231                           
  4232                           ; BSR set to: 0
  4233  002240  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4234  002242  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4235                           
  4236                           ;doprnt.c: 542: continue;
  4237  002244  D132               	goto	l15228
  4238  002246                     l1010:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;doprnt.c: 543: }
  4242                           ;doprnt.c: 546: width = 0;
  4243  002246  6B90               	clrf	sprintf@width& (0+255),b
  4244  002248  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4245                           
  4246                           ;doprnt.c: 548: flag = 0;
  4247  00224A  6B87               	clrf	sprintf@flag& (0+255),b
  4248  00224C  D003               	goto	l15130
  4249  00224E                     l15126:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;doprnt.c: 580: flag |= 0x04;
  4253  00224E  8587               	bsf	sprintf@flag& (0+255),2,b
  4254                           
  4255                           ;doprnt.c: 581: f++;
  4256  002250  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4257  002252  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4258  002254                     l15130:
  4259                           
  4260                           ; BSR set to: 0
  4261  002254  C07C  FFF6         	movff	sprintf@f,tblptrl
  4262  002258  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4263  00225C                     	if	0	;tblptru may be non-zero
  4264  00225C                     	endif
  4265  00225C                     	if	0	;tblptru may be non-zero
  4266  00225C                     	endif
  4267  00225C  0008               	tblrd		*
  4268  00225E  50F5               	movf	tablat,w,c
  4269                           
  4270                           ; Switch size 1, requested type "speed"
  4271                           ; Number of cases is 1, Range of values is 48 to 48
  4272                           ; switch strategies available:
  4273                           ; Name         Instructions Cycles
  4274                           ; simple_byte            4     3 (average)
  4275                           ;	Chosen strategy is simple_byte
  4276  002260  0A30               	xorlw	48	; case 48
  4277  002262  E0F5               	bz	l15126
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4281  002264  C07C  FFF6         	movff	sprintf@f,tblptrl
  4282  002268  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4283  00226C                     	if	0	;tblptru may be non-zero
  4284  00226C                     	endif
  4285  00226C                     	if	0	;tblptru may be non-zero
  4286  00226C                     	endif
  4287  00226C  0008               	tblrd		*
  4288  00226E  50F5               	movf	tablat,w,c
  4289  002270  EC0B  F03B         	call	_isdigit
  4290  002274  E201 D085          	bnc	l15178
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;doprnt.c: 598: width = 0;
  4294  002278  6B90               	clrf	sprintf@width& (0+255),b
  4295  00227A  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4296  00227C                     l15136:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;doprnt.c: 600: width *= 10;
  4300  00227C  C090  F073         	movff	sprintf@width,___wmul@multiplier
  4301  002280  C091  F074         	movff	sprintf@width+1,___wmul@multiplier+1
  4302  002284  6B76               	clrf	(___wmul@multiplicand+1)& (0+255),b
  4303  002286  0E0A               	movlw	10
  4304  002288  6F75               	movwf	___wmul@multiplicand& (0+255),b
  4305  00228A  EC8B  F03A         	call	___wmul	;wreg free
  4306  00228E  C073  F090         	movff	?___wmul,sprintf@width
  4307  002292  C074  F091         	movff	?___wmul+1,sprintf@width+1
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;doprnt.c: 601: width += *f++ - '0';
  4311  002296  0ED0               	movlw	208
  4312  002298  6F82               	movwf	??_sprintf& (0+255),b
  4313  00229A  6983               	setf	(??_sprintf+1)& (0+255),b
  4314  00229C  C07C  FFF6         	movff	sprintf@f,tblptrl
  4315  0022A0  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4316  0022A4                     	if	0	;tblptru may be non-zero
  4317  0022A4                     	endif
  4318  0022A4                     	if	0	;tblptru may be non-zero
  4319  0022A4                     	endif
  4320  0022A4  0008               	tblrd		*
  4321  0022A6  50F5               	movf	tablat,w,c
  4322  0022A8  6F84               	movwf	(??_sprintf+2)& (0+255),b
  4323  0022AA  6B85               	clrf	(??_sprintf+3)& (0+255),b
  4324  0022AC  5182               	movf	??_sprintf& (0+255),w,b
  4325  0022AE  2784               	addwf	(??_sprintf+2)& (0+255),f,b
  4326  0022B0  5183               	movf	(??_sprintf+1)& (0+255),w,b
  4327  0022B2  2385               	addwfc	(??_sprintf+3)& (0+255),f,b
  4328  0022B4  5184               	movf	(??_sprintf+2)& (0+255),w,b
  4329  0022B6  2790               	addwf	sprintf@width& (0+255),f,b
  4330  0022B8  5185               	movf	(??_sprintf+3)& (0+255),w,b
  4331  0022BA  2391               	addwfc	(sprintf@width+1)& (0+255),f,b
  4332                           
  4333                           ; BSR set to: 0
  4334  0022BC  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4335  0022BE  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4339  0022C0  C07C  FFF6         	movff	sprintf@f,tblptrl
  4340  0022C4  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4341  0022C8                     	if	0	;tblptru may be non-zero
  4342  0022C8                     	endif
  4343  0022C8                     	if	0	;tblptru may be non-zero
  4344  0022C8                     	endif
  4345  0022C8  0008               	tblrd		*
  4346  0022CA  50F5               	movf	tablat,w,c
  4347  0022CC  EC0B  F03B         	call	_isdigit
  4348  0022D0  E358               	bnc	l15178
  4349  0022D2  D7D4               	goto	l15136
  4350  0022D4                     l15144:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4354  0022D4  518B               	movf	sprintf@ap& (0+255),w,b
  4355  0022D6  6ED9               	movwf	fsr2l,c
  4356  0022D8  6ADA               	clrf	fsr2h,c
  4357  0022DA  CFDE F08C          	movff	postinc2,sprintf@cp
  4358  0022DE  CFDD F08D          	movff	postdec2,sprintf@cp+1
  4359                           
  4360                           ; BSR set to: 0
  4361  0022E2  0E02               	movlw	2
  4362  0022E4  278B               	addwf	sprintf@ap& (0+255),f,b
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;doprnt.c: 740: if(!cp)
  4366  0022E6  518C               	movf	sprintf@cp& (0+255),w,b
  4367  0022E8  118D               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4368  0022EA  E104               	bnz	l15152
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;doprnt.c: 741: cp = "(null)";
  4372  0022EC  0EE4               	movlw	low STR_7
  4373  0022EE  6F8C               	movwf	sprintf@cp& (0+255),b
  4374  0022F0  0EFF               	movlw	high STR_7
  4375  0022F2  6F8D               	movwf	(sprintf@cp+1)& (0+255),b
  4376  0022F4                     l15152:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;doprnt.c: 745: len = 0;
  4380  0022F4  6B8E               	clrf	sprintf@len& (0+255),b
  4381  0022F6  6B8F               	clrf	(sprintf@len+1)& (0+255),b
  4382                           
  4383                           ;doprnt.c: 746: while(cp[len])
  4384  0022F8  D002               	goto	l15156
  4385  0022FA                     l15154:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;doprnt.c: 747: len++;
  4389  0022FA  4B8E               	infsnz	sprintf@len& (0+255),f,b
  4390  0022FC  2B8F               	incf	(sprintf@len+1)& (0+255),f,b
  4391  0022FE                     l15156:
  4392                           
  4393                           ; BSR set to: 0
  4394  0022FE  518E               	movf	sprintf@len& (0+255),w,b
  4395  002300  258C               	addwf	sprintf@cp& (0+255),w,b
  4396  002302  6F82               	movwf	??_sprintf& (0+255),b
  4397  002304  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4398  002306  218D               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4399  002308  6F83               	movwf	(??_sprintf+1)& (0+255),b
  4400  00230A  C082  FFF6         	movff	??_sprintf,tblptrl
  4401  00230E  C083  FFF7         	movff	??_sprintf+1,tblptrh
  4402  002312                     	if	0	;tblptru may be non-zero
  4403  002312                     	endif
  4404  002312                     	if	0	;tblptru may be non-zero
  4405  002312                     	endif
  4406  002312  0008               	tblrd		*
  4407  002314  50F5               	movf	tablat,w,c
  4408  002316  E1F1               	bnz	l15154
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;doprnt.c: 757: if(width > len)
  4412  002318  5190               	movf	sprintf@width& (0+255),w,b
  4413  00231A  5D8E               	subwf	sprintf@len& (0+255),w,b
  4414  00231C  5191               	movf	(sprintf@width+1)& (0+255),w,b
  4415  00231E  598F               	subwfb	(sprintf@len+1)& (0+255),w,b
  4416  002320  E205               	bc	l1031
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;doprnt.c: 758: width -= len;
  4420  002322  518E               	movf	sprintf@len& (0+255),w,b
  4421  002324  5F90               	subwf	sprintf@width& (0+255),f,b
  4422  002326  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4423  002328  5B91               	subwfb	(sprintf@width+1)& (0+255),f,b
  4424  00232A  D00B               	goto	l15166
  4425  00232C                     l1031:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;doprnt.c: 759: else
  4429                           ;doprnt.c: 760: width = 0;
  4430  00232C  6B90               	clrf	sprintf@width& (0+255),b
  4431  00232E  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4432  002330  D008               	goto	l15166
  4433  002332                     l15162:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4437  002332  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4438  002336  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4439  00233A  0E20               	movlw	32
  4440  00233C  6EDF               	movwf	indf2,c
  4441                           
  4442                           ; BSR set to: 0
  4443  00233E  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4444  002340  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4445  002342                     l15166:
  4446                           
  4447                           ; BSR set to: 0
  4448  002342  0790               	decf	sprintf@width& (0+255),f,b
  4449  002344  A0D8               	btfss	status,0,c
  4450  002346  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4451  002348  2990               	incf	sprintf@width& (0+255),w,b
  4452  00234A  E1F3               	bnz	l15162
  4453  00234C  2991               	incf	(sprintf@width+1)& (0+255),w,b
  4454  00234E  E010               	bz	l15174
  4455  002350  D7F0               	goto	l15162
  4456  002352                     l15168:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4460  002352  C08C  FFF6         	movff	sprintf@cp,tblptrl
  4461  002356  C08D  FFF7         	movff	sprintf@cp+1,tblptrh
  4462  00235A                     	if	0	;tblptru may be non-zero
  4463  00235A                     	endif
  4464  00235A                     	if	0	;tblptru may be non-zero
  4465  00235A                     	endif
  4466  00235A  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4467  00235E  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4468  002362  0008               	tblrd		*
  4469  002364  CFF5 FFDF          	movff	tablat,indf2
  4470                           
  4471                           ; BSR set to: 0
  4472  002368  4B8C               	infsnz	sprintf@cp& (0+255),f,b
  4473  00236A  2B8D               	incf	(sprintf@cp+1)& (0+255),f,b
  4474                           
  4475                           ; BSR set to: 0
  4476  00236C  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4477  00236E  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4478  002370                     l15174:
  4479                           
  4480                           ; BSR set to: 0
  4481  002370  078E               	decf	sprintf@len& (0+255),f,b
  4482  002372  A0D8               	btfss	status,0,c
  4483  002374  078F               	decf	(sprintf@len+1)& (0+255),f,b
  4484  002376  298E               	incf	sprintf@len& (0+255),w,b
  4485  002378  E1EC               	bnz	l15168
  4486  00237A  298F               	incf	(sprintf@len+1)& (0+255),w,b
  4487  00237C  E101 D095          	bz	l15228
  4488  002380  D7E8               	goto	l15168
  4489  002382                     l15178:
  4490                           
  4491                           ; BSR set to: 0
  4492  002382  C07C  FFF6         	movff	sprintf@f,tblptrl
  4493  002386  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4494  00238A  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4495  00238C  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4496  00238E                     	if	0	;tblptru may be non-zero
  4497  00238E                     	endif
  4498  00238E                     	if	0	;tblptru may be non-zero
  4499  00238E                     	endif
  4500  00238E  0008               	tblrd		*
  4501  002390  CFF5 F092          	movff	tablat,sprintf@c
  4502  002394  5192               	movf	sprintf@c& (0+255),w,b
  4503                           
  4504                           ; Switch size 1, requested type "speed"
  4505                           ; Number of cases is 4, Range of values is 0 to 120
  4506                           ; switch strategies available:
  4507                           ; Name         Instructions Cycles
  4508                           ; simple_byte           13     7 (average)
  4509                           ;	Chosen strategy is simple_byte
  4510  002396  E101 D094          	bz	l15230
  4511  00239A  0A58               	xorlw	88	; case 88
  4512  00239C  E005               	bz	l15180
  4513  00239E  0A2B               	xorlw	43	; case 115
  4514  0023A0  E099               	bz	l15144
  4515  0023A2  0A0B               	xorlw	11	; case 120
  4516  0023A4  E001 D081          	bnz	l15228
  4517  0023A8                     l15180:
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;doprnt.c: 1273: {
  4521                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4522  0023A8  518B               	movf	sprintf@ap& (0+255),w,b
  4523  0023AA  6ED9               	movwf	fsr2l,c
  4524  0023AC  6ADA               	clrf	fsr2h,c
  4525  0023AE  CFDE F088          	movff	postinc2,sprintf@val
  4526  0023B2  CFDD F089          	movff	postdec2,sprintf@val+1
  4527                           
  4528                           ; BSR set to: 0
  4529  0023B6  0E02               	movlw	2
  4530  0023B8  278B               	addwf	sprintf@ap& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;doprnt.c: 1287: }
  4534                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4535  0023BA  0E01               	movlw	1
  4536  0023BC  6F92               	movwf	sprintf@c& (0+255),b
  4537  0023BE                     l15190:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4541  0023BE  5192               	movf	sprintf@c& (0+255),w,b
  4542  0023C0  0D02               	mullw	2
  4543  0023C2  0E89               	movlw	low _hexpowers
  4544  0023C4  24F3               	addwf	prodl,w,c
  4545  0023C6  6EF6               	movwf	tblptrl,c
  4546  0023C8  0EFF               	movlw	high _hexpowers
  4547  0023CA  20F4               	addwfc	prodh,w,c
  4548  0023CC  6EF7               	movwf	tblptrh,c
  4549  0023CE                     	if	0	;There are less than 3 active tblptr bytes
  4550  0023CE                     	endif
  4551  0023CE  0009               	tblrd		*+
  4552  0023D0  50F5               	movf	tablat,w,c
  4553  0023D2  5D88               	subwf	sprintf@val& (0+255),w,b
  4554  0023D4  0009               	tblrd		*+
  4555  0023D6  50F5               	movf	tablat,w,c
  4556  0023D8  5989               	subwfb	(sprintf@val+1)& (0+255),w,b
  4557  0023DA  E304               	bnc	l15198
  4558                           
  4559                           ; BSR set to: 0
  4560  0023DC  2B92               	incf	sprintf@c& (0+255),f,b
  4561                           
  4562                           ; BSR set to: 0
  4563  0023DE  0E04               	movlw	4
  4564  0023E0  1992               	xorwf	sprintf@c& (0+255),w,b
  4565  0023E2  E1ED               	bnz	l15190
  4566  0023E4                     l15198:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;doprnt.c: 1381: if(width > c)
  4570  0023E4  0E80               	movlw	128
  4571  0023E6  BF92               	btfsc	sprintf@c& (0+255),7,b
  4572  0023E8  0E7F               	movlw	127
  4573  0023EA  6F82               	movwf	??_sprintf& (0+255),b
  4574  0023EC  5190               	movf	sprintf@width& (0+255),w,b
  4575  0023EE  5D92               	subwf	sprintf@c& (0+255),w,b
  4576  0023F0  5191               	movf	(sprintf@width+1)& (0+255),w,b
  4577  0023F2  0A80               	xorlw	128
  4578  0023F4  5982               	subwfb	??_sprintf& (0+255),w,b
  4579  0023F6  E207               	bc	l1043
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;doprnt.c: 1382: width -= c;
  4583  0023F8  5192               	movf	sprintf@c& (0+255),w,b
  4584  0023FA  5F90               	subwf	sprintf@width& (0+255),f,b
  4585  0023FC  0E00               	movlw	0
  4586  0023FE  BF92               	btfsc	sprintf@c& (0+255),7,b
  4587  002400  0EFF               	movlw	255
  4588  002402  5B91               	subwfb	(sprintf@width+1)& (0+255),f,b
  4589  002404  D002               	goto	l1044
  4590  002406                     l1043:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;doprnt.c: 1383: else
  4594                           ;doprnt.c: 1384: width = 0;
  4595  002406  6B90               	clrf	sprintf@width& (0+255),b
  4596  002408  6B91               	clrf	(sprintf@width+1)& (0+255),b
  4597  00240A                     l1044:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;doprnt.c: 1387: if(flag & 0x04) {
  4601  00240A  A587               	btfss	sprintf@flag& (0+255),2,b
  4602  00240C  D00F               	goto	l15210
  4603  00240E                     
  4604                           ; BSR set to: 0
  4605                           ;doprnt.c: 1415: if(width)
  4606  00240E  5190               	movf	sprintf@width& (0+255),w,b
  4607  002410  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4608  002412  E01D               	bz	l1049
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4612  002414  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4613  002418  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4614  00241C  0E30               	movlw	48
  4615  00241E  6EDF               	movwf	indf2,c
  4616                           
  4617                           ; BSR set to: 0
  4618  002420  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4619  002422  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;doprnt.c: 1418: while(--width);
  4623  002424  0790               	decf	sprintf@width& (0+255),f,b
  4624  002426  A0D8               	btfss	status,0,c
  4625  002428  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4626  00242A  D7F1               	goto	L15
  4627  00242C                     l15210:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;doprnt.c: 1422: {
  4631                           ;doprnt.c: 1424: if(width
  4632                           ;doprnt.c: 1428: )
  4633  00242C  5190               	movf	sprintf@width& (0+255),w,b
  4634  00242E  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4635  002430  E00E               	bz	l1049
  4636  002432                     l15212:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4640  002432  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4641  002436  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4642  00243A  0E20               	movlw	32
  4643  00243C  6EDF               	movwf	indf2,c
  4644                           
  4645                           ; BSR set to: 0
  4646  00243E  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4647  002440  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;doprnt.c: 1431: while(--width);
  4651  002442  0790               	decf	sprintf@width& (0+255),f,b
  4652  002444  A0D8               	btfss	status,0,c
  4653  002446  0791               	decf	(sprintf@width+1)& (0+255),f,b
  4654  002448  5190               	movf	sprintf@width& (0+255),w,b
  4655  00244A  1191               	iorwf	(sprintf@width+1)& (0+255),w,b
  4656  00244C  E1F2               	bnz	l15212
  4657  00244E                     l1049:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;doprnt.c: 1469: }
  4661                           ;doprnt.c: 1472: prec = c;
  4662  00244E  C092  F08A         	movff	sprintf@c,sprintf@prec
  4663                           
  4664                           ;doprnt.c: 1474: while(prec--) {
  4665  002452  D028               	goto	l15226
  4666  002454                     l15218:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;doprnt.c: 1478: {
  4670                           ;doprnt.c: 1499: {
  4671                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4672  002454  C088  F073         	movff	sprintf@val,___lwdiv@dividend
  4673  002458  C089  F074         	movff	sprintf@val+1,___lwdiv@dividend+1
  4674  00245C  518A               	movf	sprintf@prec& (0+255),w,b
  4675  00245E  0D02               	mullw	2
  4676  002460  0E89               	movlw	low _hexpowers
  4677  002462  24F3               	addwf	prodl,w,c
  4678  002464  6EF6               	movwf	tblptrl,c
  4679  002466  0EFF               	movlw	high _hexpowers
  4680  002468  20F4               	addwfc	prodh,w,c
  4681  00246A  6EF7               	movwf	tblptrh,c
  4682  00246C                     	if	0	;There are less than 3 active tblptr bytes
  4683  00246C                     	endif
  4684  00246C  0009               	tblrd		*+
  4685  00246E  CFF5 F075          	movff	tablat,___lwdiv@divisor
  4686  002472  000A               	tblrd		*-
  4687  002474  CFF5 F076          	movff	tablat,___lwdiv@divisor+1
  4688  002478  ECA1  F037         	call	___lwdiv	;wreg free
  4689  00247C  5173               	movf	?___lwdiv& (0+255),w,b
  4690  00247E  0B0F               	andlw	15
  4691  002480  6F86               	movwf	sprintf@idx& (0+255),b
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4695  002482  0EC5               	movlw	low STR_8
  4696  002484  2586               	addwf	sprintf@idx& (0+255),w,b
  4697  002486  6EF6               	movwf	tblptrl,c
  4698  002488  6AF7               	clrf	tblptrh,c
  4699  00248A  0EFF               	movlw	high STR_8
  4700  00248C  22F7               	addwfc	tblptrh,f,c
  4701  00248E                     	if	0	;There are less than 3 active tblptr bytes
  4702  00248E                     	endif
  4703  00248E  0008               	tblrd		*
  4704  002490  CFF5 F092          	movff	tablat,sprintf@c
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;doprnt.c: 1508: }
  4708                           ;doprnt.c: 1523: }
  4709                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4710  002494  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4711  002498  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4712  00249C  C092  FFDF         	movff	sprintf@c,indf2
  4713                           
  4714                           ; BSR set to: 0
  4715  0024A0  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4716  0024A2  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4717  0024A4                     l15226:
  4718                           
  4719                           ; BSR set to: 0
  4720  0024A4  078A               	decf	sprintf@prec& (0+255),f,b
  4721  0024A6  298A               	incf	sprintf@prec& (0+255),w,b
  4722  0024A8  E1D5               	bnz	l15218
  4723  0024AA                     l15228:
  4724                           
  4725                           ; BSR set to: 0
  4726  0024AA  C07C  FFF6         	movff	sprintf@f,tblptrl
  4727  0024AE  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4728  0024B2  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4729  0024B4  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4730  0024B6                     	if	0	;tblptru may be non-zero
  4731  0024B6                     	endif
  4732  0024B6                     	if	0	;tblptru may be non-zero
  4733  0024B6                     	endif
  4734  0024B6  0008               	tblrd		*
  4735  0024B8  CFF5 F092          	movff	tablat,sprintf@c
  4736  0024BC  5192               	movf	sprintf@c& (0+255),w,b
  4737  0024BE  E001 D6B6          	bnz	l15120
  4738  0024C2                     l15230:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;doprnt.c: 1538: *sp = 0;
  4742  0024C2  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4743  0024C6  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4744  0024CA  6ADF               	clrf	indf2,c
  4745                           
  4746                           ; BSR set to: 0
  4747  0024CC  0C00               	retlw	0	;funcret
  4748  0024CE                     __end_of_sprintf:
  4749                           	opt stack 0
  4750                           tblptru	equ	0xFF8
  4751                           tblptrh	equ	0xFF7
  4752                           tblptrl	equ	0xFF6
  4753                           tablat	equ	0xFF5
  4754                           prodh	equ	0xFF4
  4755                           prodl	equ	0xFF3
  4756                           postinc0	equ	0xFEE
  4757                           wreg	equ	0xFE8
  4758                           postdec1	equ	0xFE5
  4759                           fsr1h	equ	0xFE2
  4760                           fsr1l	equ	0xFE1
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           postdec2	equ	0xFDD
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function _isdigit *****************
  4769 ;; Defined at:
  4770 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  c               1    wreg     unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  c               1   21[BANK0 ] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;		None               void
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : F/0
  4781 ;;		On exit  : F/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4787 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;Total ram usage:        3 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    5
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_sprintf
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text2
  4799  007616                     __ptext2:
  4800                           	opt stack 0
  4801  007616                     _isdigit:
  4802                           	opt stack 24
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;incstack = 0
  4806                           ;isdigit@c stored from wreg
  4807  007616  6F75               	movwf	isdigit@c& (0+255),b
  4808  007618  0100               	movlb	0	; () banked
  4809  00761A  6B74               	clrf	_isdigit$4824& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812  00761C  0E3A               	movlw	58
  4813  00761E  6175               	cpfslt	isdigit@c& (0+255),b
  4814  007620  D005               	goto	l14656
  4815                           
  4816                           ; BSR set to: 0
  4817  007622  0E2F               	movlw	47
  4818  007624  6575               	cpfsgt	isdigit@c& (0+255),b
  4819  007626  D002               	goto	l14656
  4820                           
  4821                           ; BSR set to: 0
  4822  007628  0E01               	movlw	1
  4823  00762A  6F74               	movwf	_isdigit$4824& (0+255),b
  4824  00762C                     l14656:
  4825                           
  4826                           ; BSR set to: 0
  4827  00762C  C074  F073         	movff	_isdigit$4824,??_isdigit
  4828  007630  3173               	rrcf	??_isdigit& (0+255),w,b
  4829                           
  4830                           ; BSR set to: 0
  4831  007632  0012               	return		;funcret
  4832  007634                     __end_of_isdigit:
  4833                           	opt stack 0
  4834                           tblptru	equ	0xFF8
  4835                           tblptrh	equ	0xFF7
  4836                           tblptrl	equ	0xFF6
  4837                           tablat	equ	0xFF5
  4838                           prodh	equ	0xFF4
  4839                           prodl	equ	0xFF3
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           postdec2	equ	0xFDD
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function ___wmul *****************
  4853 ;; Defined at:
  4854 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  multiplier      2   19[BANK0 ] unsigned int 
  4857 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  product         2   23[BANK0 ] unsigned int 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2   19[BANK0 ] unsigned int 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, prodl, prodh
  4864 ;; Tracked objects:
  4865 ;;		On entry : F/0
  4866 ;;		On exit  : F/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4873 ;;Total ram usage:        6 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    5
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_sprintf
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text3
  4884  007516                     __ptext3:
  4885                           	opt stack 0
  4886  007516                     ___wmul:
  4887                           	opt stack 24
  4888                           
  4889                           ; BSR set to: 0
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;incstack = 0
  4893  007516  5173               	movf	___wmul@multiplier& (0+255),w,b
  4894  007518  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4895  00751A  CFF3 F077          	movff	prodl,___wmul@product
  4896  00751E  CFF4 F078          	movff	prodh,___wmul@product+1
  4897  007522  5173               	movf	___wmul@multiplier& (0+255),w,b
  4898  007524  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4899  007526  50F3               	movf	prodl,w,c
  4900  007528  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4901  00752A  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4902  00752C  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4903  00752E  50F3               	movf	prodl,w,c
  4904  007530  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4905                           
  4906                           ; BSR set to: 0
  4907  007532  C077  F073         	movff	___wmul@product,?___wmul
  4908  007536  C078  F074         	movff	___wmul@product+1,?___wmul+1
  4909                           
  4910                           ; BSR set to: 0
  4911  00753A  0012               	return		;funcret
  4912  00753C                     __end_of___wmul:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           postdec1	equ	0xFE5
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           indf2	equ	0xFDF
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function _isButtonPressed *****************
  4933 ;; Defined at:
  4934 ;;		line 475 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  index           1    wreg     unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  index           1   21[BANK0 ] unsigned char 
  4939 ;;  mask            1   22[BANK0 ] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      unsigned char 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : C/1
  4946 ;;		On exit  : F/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;Total ram usage:        4 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    5
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text4
  4964  007414                     __ptext4:
  4965                           	opt stack 0
  4966  007414                     _isButtonPressed:
  4967                           	opt stack 25
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;incstack = 0
  4971                           ;isButtonPressed@index stored from wreg
  4972  007414  0100               	movlb	0	; () banked
  4973  007416  6F75               	movwf	isButtonPressed@index& (0+255),b
  4974                           
  4975                           ;system.c: 477: uint8_t mask=(1<<index);
  4976  007418  C075  F073         	movff	isButtonPressed@index,??_isButtonPressed
  4977  00741C  0E01               	movlw	1
  4978  00741E  6F74               	movwf	(??_isButtonPressed+1)& (0+255),b
  4979  007420  2B73               	incf	??_isButtonPressed& (0+255),f,b
  4980  007422  D002               	goto	u16964
  4981  007424                     u16965:
  4982  007424  90D8               	bcf	status,0,c
  4983  007426  3774               	rlcf	(??_isButtonPressed+1)& (0+255),f,b
  4984  007428                     u16964:
  4985  007428  2F73               	decfsz	??_isButtonPressed& (0+255),f,b
  4986  00742A  D7FC               	goto	u16965
  4987  00742C  0100               	movlb	0	; () banked
  4988  00742E  5174               	movf	(??_isButtonPressed+1)& (0+255),w,b
  4989  007430  6F76               	movwf	isButtonPressed@mask& (0+255),b
  4990                           
  4991                           ;system.c: 478: return((switches & mask)>0);
  4992  007432  0101               	movlb	1	; () banked
  4993  007434  51E0               	movf	_switches& (0+255),w,b
  4994  007436  0100               	movlb	0	; () banked
  4995  007438  1576               	andwf	isButtonPressed@mask& (0+255),w,b
  4996  00743A  A4D8               	btfss	status,2,c
  4997  00743C  0C01               	retlw	1
  4998                           
  4999                           ; BSR set to: 0
  5000  00743E  0C00               	retlw	0	;funcret
  5001  007440                     __end_of_isButtonPressed:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           postdec1	equ	0xFE5
  5012                           fsr1h	equ	0xFE2
  5013                           fsr1l	equ	0xFE1
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _Read_MAC_Address *****************
  5022 ;; Defined at:
  5023 ;;		line 239 in file "../src/mainRFD-Sleeping.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  addr8           6   34[BANK0 ] unsigned char [6]
  5028 ;;  address         2   40[BANK0 ] struct addr_t_def
  5029 ;;  i               1   44[BANK0 ] unsigned char 
  5030 ;;  j               1    0        unsigned char 
  5031 ;;  pAddress        1   42[BANK0 ] PTR unsigned char 
  5032 ;;		 -> Read_MAC_Address@address(2), 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  2   31[BANK0 ] struct addr_t_def
  5035 ;; Registers used:
  5036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : F/1
  5039 ;;		On exit  : F/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;Total ram usage:       14 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    8
  5049 ;; This function calls:
  5050 ;;		_EEPROMRead
  5051 ;;		_memcpy
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text5
  5058  006EF8                     __ptext5:
  5059                           	opt stack 0
  5060  006EF8                     _Read_MAC_Address:
  5061                           	opt stack 22
  5062                           
  5063                           ; BSR set to: 1
  5064                           ;mainRFD-Sleeping.c: 241: uint8_t addr8[6];
  5065                           ;mainRFD-Sleeping.c: 242: addr_t address;
  5066                           ;mainRFD-Sleeping.c: 243: uint8_t *pAddress=(uint8_t*)&address;
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;incstack = 0
  5070  006EF8  0E88               	movlw	low Read_MAC_Address@address
  5071  006EFA  0100               	movlb	0	; () banked
  5072  006EFC  6F8A               	movwf	Read_MAC_Address@pAddress& (0+255),b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;mainRFD-Sleeping.c: 246: for(i=0;i<6;i++)
  5076                           
  5077                           ; BSR set to: 0
  5078  006EFE  6B8C               	clrf	Read_MAC_Address@i& (0+255),b
  5079  006F00                     l15054:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;mainRFD-Sleeping.c: 247: {
  5083                           ;mainRFD-Sleeping.c: 248: EEPROMRead(&(addr8[6-1-i]), 0xFA+i, 1);
  5084  006F00  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  5085  006F02  0805               	sublw	5
  5086  006F04  6F81               	movwf	??_Read_MAC_Address& (0+255),b
  5087  006F06  5181               	movf	??_Read_MAC_Address& (0+255),w,b
  5088  006F08  0F82               	addlw	low Read_MAC_Address@addr8
  5089  006F0A  6F75               	movwf	EEPROMRead@dest& (0+255),b
  5090  006F0C  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  5091  006F0E  0FFA               	addlw	250
  5092  006F10  6F76               	movwf	EEPROMRead@addr& (0+255),b
  5093  006F12  0E01               	movlw	1
  5094  006F14  6F77               	movwf	EEPROMRead@count& (0+255),b
  5095  006F16  ECF3  F039         	call	_EEPROMRead	;wreg free
  5096                           
  5097                           ; BSR set to: 0
  5098  006F1A  2B8C               	incf	Read_MAC_Address@i& (0+255),f,b
  5099                           
  5100                           ; BSR set to: 0
  5101  006F1C  0E05               	movlw	5
  5102  006F1E  658C               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5103  006F20  D7EF               	goto	l15054
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;mainRFD-Sleeping.c: 266: else
  5107                           ;mainRFD-Sleeping.c: 267: {
  5108                           ;mainRFD-Sleeping.c: 268: memcpy(pAddress,addr8,2);
  5109  006F22  C08A  F075         	movff	Read_MAC_Address@pAddress,memcpy@d1
  5110  006F26  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  5111  006F28  0E82               	movlw	low Read_MAC_Address@addr8
  5112  006F2A  6F77               	movwf	memcpy@s1& (0+255),b
  5113  006F2C  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  5114  006F2E  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5115  006F30  0E02               	movlw	2
  5116  006F32  6F79               	movwf	memcpy@n& (0+255),b
  5117  006F34  EC5D  F036         	call	_memcpy	;wreg free
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;mainRFD-Sleeping.c: 269: }
  5121                           ;mainRFD-Sleeping.c: 270: return address;
  5122  006F38  C088  F07F         	movff	Read_MAC_Address@address,?_Read_MAC_Address
  5123  006F3C  C089  F080         	movff	Read_MAC_Address@address+1,?_Read_MAC_Address+1
  5124                           
  5125                           ; BSR set to: 0
  5126  006F40  0012               	return		;funcret
  5127  006F42                     __end_of_Read_MAC_Address:
  5128                           	opt stack 0
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           postinc0	equ	0xFEE
  5136                           wreg	equ	0xFE8
  5137                           postdec1	equ	0xFE5
  5138                           fsr1h	equ	0xFE2
  5139                           fsr1l	equ	0xFE1
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function _EEPROMRead *****************
  5148 ;; Defined at:
  5149 ;;		line 226 in file "../src/mainRFD-Sleeping.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  dest            1   21[BANK0 ] PTR unsigned char 
  5152 ;;		 -> Read_MAC_Address@addr8(6), 
  5153 ;;  addr            1   22[BANK0 ] unsigned char 
  5154 ;;  count           1   23[BANK0 ] unsigned char 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : F/0
  5163 ;;		On exit  : F/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5166 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5170 ;;Total ram usage:        3 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    7
  5173 ;; This function calls:
  5174 ;;		_SPIGet2
  5175 ;;		_SPIPut2
  5176 ;; This function is called by:
  5177 ;;		_Read_MAC_Address
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text6
  5182  0073E6                     __ptext6:
  5183                           	opt stack 0
  5184  0073E6                     _EEPROMRead:
  5185                           	opt stack 22
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;mainRFD-Sleeping.c: 228: LATDbits.LATD5 = 0;
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;incstack = 0
  5192  0073E6  9A8C               	bcf	3980,5,c	;volatile
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;mainRFD-Sleeping.c: 229: SPIPut2(0x03);
  5196  0073E8  0E03               	movlw	3
  5197  0073EA  EC66  F03B         	call	_SPIPut2
  5198                           
  5199                           ;mainRFD-Sleeping.c: 230: SPIPut2(addr);
  5200  0073EE  0100               	movlb	0	; () banked
  5201  0073F0  5176               	movf	EEPROMRead@addr& (0+255),w,b
  5202  0073F2  EC66  F03B         	call	_SPIPut2
  5203                           
  5204                           ;mainRFD-Sleeping.c: 231: while( count )
  5205  0073F6  D009               	goto	l14546
  5206  0073F8                     l14540:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;mainRFD-Sleeping.c: 232: {
  5210                           ;mainRFD-Sleeping.c: 233: *dest++ = SPIGet2();
  5211  0073F8  5175               	movf	EEPROMRead@dest& (0+255),w,b
  5212  0073FA  6ED9               	movwf	fsr2l,c
  5213  0073FC  6ADA               	clrf	fsr2h,c
  5214  0073FE  EC03  F03C         	call	_SPIGet2	;wreg free
  5215  007402  6EDF               	movwf	indf2,c
  5216  007404  0100               	movlb	0	; () banked
  5217  007406  2B75               	incf	EEPROMRead@dest& (0+255),f,b
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;mainRFD-Sleeping.c: 234: count--;
  5221  007408  0777               	decf	EEPROMRead@count& (0+255),f,b
  5222  00740A                     l14546:
  5223  00740A  0100               	movlb	0	; () banked
  5224  00740C  5177               	movf	EEPROMRead@count& (0+255),w,b
  5225  00740E  E1F4               	bnz	l14540
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;mainRFD-Sleeping.c: 235: }
  5229                           ;mainRFD-Sleeping.c: 236: LATDbits.LATD5 = 1;
  5230  007410  8A8C               	bsf	3980,5,c	;volatile
  5231                           
  5232                           ; BSR set to: 0
  5233  007412  0012               	return		;funcret
  5234  007414                     __end_of_EEPROMRead:
  5235                           	opt stack 0
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           postinc0	equ	0xFEE
  5243                           wreg	equ	0xFE8
  5244                           postdec1	equ	0xFE5
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           fsr2h	equ	0xFDA
  5251                           fsr2l	equ	0xFD9
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _SPIGet2 *****************
  5255 ;; Defined at:
  5256 ;;		line 383 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      unsigned char 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : F/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    6
  5277 ;; This function calls:
  5278 ;;		_SPIPut2
  5279 ;; This function is called by:
  5280 ;;		_EEPROMRead
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text7
  5285  007806                     __ptext7:
  5286                           	opt stack 0
  5287  007806                     _SPIGet2:
  5288                           	opt stack 22
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;spi.c: 408: SPIPut2(0x00);
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;incstack = 0
  5295  007806  0E00               	movlw	0
  5296  007808  EC66  F03B         	call	_SPIPut2
  5297                           
  5298                           ;spi.c: 409: return SSP2BUF;
  5299  00780C  5075               	movf	3957,w,c	;volatile
  5300  00780E  0012               	return		;funcret
  5301  007810                     __end_of_SPIGet2:
  5302                           	opt stack 0
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           postdec1	equ	0xFE5
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _MiApp_UnicastAddress *****************
  5322 ;; Defined at:
  5323 ;;		line 224 in file "../src/Bridge.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  DestinationA    2   71[BANK1 ] PTR unsigned char 
  5326 ;;		 -> main@coord(2), 
  5327 ;;  Origin          2   73[BANK1 ] PTR unsigned char 
  5328 ;;		 -> NULL(0), 
  5329 ;;  SecEn           1   75[BANK1 ] unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  src             2  127[BANK0 ] struct addr_t_def
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      unsigned char 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : F/1
  5338 ;;		On exit  : F/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5341 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5345 ;;Total ram usage:        7 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   15
  5348 ;; This function calls:
  5349 ;;		_NetworkUnicastData
  5350 ;;		_memcpy
  5351 ;; This function is called by:
  5352 ;;		_main
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text8
  5357  007208                     __ptext8:
  5358                           	opt stack 0
  5359  007208                     _MiApp_UnicastAddress:
  5360                           	opt stack 15
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;Bridge.c: 226: addr_t src;
  5364                           ;Bridge.c: 227: memcpy(src.bytes,DestinationAddress,2);
  5365                           
  5366                           ;incstack = 0
  5367  007208  0EDF               	movlw	low MiApp_UnicastAddress@src
  5368  00720A  0100               	movlb	0	; () banked
  5369  00720C  6F75               	movwf	memcpy@d1& (0+255),b
  5370  00720E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  5371  007210  C147  F077         	movff	MiApp_UnicastAddress@DestinationAddress,memcpy@s1
  5372  007214  C148  F078         	movff	MiApp_UnicastAddress@DestinationAddress+1,memcpy@s1+1
  5373  007218  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5374  00721A  0E02               	movlw	2
  5375  00721C  6F79               	movwf	memcpy@n& (0+255),b
  5376  00721E  EC5D  F036         	call	_memcpy	;wreg free
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;Bridge.c: 228: return(NetworkUnicastData(src, TxBuffer, TxData,SecEn));
  5380  007222  C0DF  F140         	movff	MiApp_UnicastAddress@src,NetworkUnicastData@address
  5381  007226  C0E0  F141         	movff	MiApp_UnicastAddress@src+1,NetworkUnicastData@address+1
  5382  00722A  0E88               	movlw	low _TxBuffer
  5383  00722C  0101               	movlb	1	; () banked
  5384  00722E  6F42               	movwf	NetworkUnicastData@data& (0+255),b
  5385  007230  0E07               	movlw	high _TxBuffer
  5386  007232  6F43               	movwf	(NetworkUnicastData@data+1)& (0+255),b
  5387  007234  C1D8  F144         	movff	_TxData,NetworkUnicastData@size
  5388  007238  6B45               	clrf	(NetworkUnicastData@size+1)& (0+255),b
  5389  00723A  C14B  F146         	movff	MiApp_UnicastAddress@SecEn,NetworkUnicastData@isSecure
  5390  00723E  EF09  F026         	goto	_NetworkUnicastData	;wreg free
  5391  007242                     __end_of_MiApp_UnicastAddress:
  5392                           	opt stack 0
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           postdec1	equ	0xFE5
  5402                           fsr1h	equ	0xFE2
  5403                           fsr1l	equ	0xFE1
  5404                           indf2	equ	0xFDF
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function _NetworkUnicastData *****************
  5412 ;; Defined at:
  5413 ;;		line 237 in file "../NetworkBridge.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  address         2   64[BANK1 ] struct addr_t_def
  5416 ;;  data            2   66[BANK1 ] PTR unsigned char 
  5417 ;;		 -> TxBuffer(64), 
  5418 ;;  size            2   68[BANK1 ] unsigned int 
  5419 ;;  isSecure        1   70[BANK1 ] unsigned char 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  mAddress        2  124[BANK0 ] PTR struct addr_t_def
  5422 ;;		 -> MyAddress(2), 
  5423 ;;  res             1  126[BANK0 ] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      unsigned char 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : F/1
  5430 ;;		On exit  : F/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5433 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5436 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5437 ;;Total ram usage:       10 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:   14
  5440 ;; This function calls:
  5441 ;;		_CoordinatorAddress
  5442 ;;		_CoordinatorGenericAddress
  5443 ;;		_DeviceManagerBufferDeviceData
  5444 ;;		_DeviceManagerGetDeviceType
  5445 ;;		_NetworkGetDeviceType
  5446 ;;		_NetworkManagerGetMyAddress
  5447 ;;		_TMSendDataToRFD
  5448 ;;		_TMSendFormedPacketTowardsCoordinator
  5449 ;;		_isSameAddress
  5450 ;; This function is called by:
  5451 ;;		_MiApp_UnicastAddress
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text9
  5456  004C12                     __ptext9:
  5457                           	opt stack 0
  5458  004C12                     _NetworkUnicastData:
  5459                           	opt stack 15
  5460                           
  5461                           ; BSR set to: 1
  5462                           ;NetworkBridge.c: 239: bool res=0;
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;incstack = 0
  5466  004C12  0100               	movlb	0	; () banked
  5467  004C14  6BDE               	clrf	NetworkUnicastData@res& (0+255),b
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;NetworkBridge.c: 240: addr_t *mAddress=NetworkManagerGetMyAddress();
  5471  004C16  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
  5472  004C1A  C073  F0DC         	movff	?_NetworkManagerGetMyAddress,NetworkUnicastData@mAddress
  5473  004C1E  C074  F0DD         	movff	?_NetworkManagerGetMyAddress+1,NetworkUnicastData@mAddress+1
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;NetworkBridge.c: 241: if(NetworkGetDeviceType()==DeviceCoordinator)
  5477  004C22  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  5478  004C26  0900               	iorlw	0
  5479  004C28  E14C               	bnz	l14620
  5480                           
  5481                           ; BSR set to: 1
  5482                           ;NetworkBridge.c: 242: {
  5483                           ;NetworkBridge.c: 243: if( (isSameAddress(address,*mAddress)==0) && (isSameAddress(addre
      +                          ss,CoordinatorGenericAddress())==0) )
  5484  004C2A  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5485  004C2E  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5486  004C32  C0DC  FFD9         	movff	NetworkUnicastData@mAddress,fsr2l
  5487  004C36  C0DD  FFDA         	movff	NetworkUnicastData@mAddress+1,fsr2h
  5488  004C3A  CFDE F07F          	movff	postinc2,isSameAddress@a2
  5489  004C3E  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  5490  004C42  ECB1  F03A         	call	_isSameAddress	;wreg free
  5491  004C46  0900               	iorlw	0
  5492  004C48  E179               	bnz	l14628
  5493                           
  5494                           ; BSR set to: 0
  5495  004C4A  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5496  004C4E  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5497  004C52  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
  5498  004C56  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  5499  004C5A  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  5500  004C5E  ECB1  F03A         	call	_isSameAddress	;wreg free
  5501  004C62  0900               	iorlw	0
  5502  004C64  E16B               	bnz	l14628
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;NetworkBridge.c: 244: {
  5506                           ;NetworkBridge.c: 246: if(DeviceManagerGetDeviceType(address)==DeviceSleepingRFD)
  5507  004C66  C140  F081         	movff	NetworkUnicastData@address,DeviceManagerGetDeviceType@address
  5508  004C6A  C141  F082         	movff	NetworkUnicastData@address+1,DeviceManagerGetDeviceType@address+1
  5509  004C6E  ECB6  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  5510  004C72  0A02               	xorlw	2
  5511  004C74  E113               	bnz	l14618
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;NetworkBridge.c: 247: {
  5515                           ;NetworkBridge.c: 250: res=DeviceManagerBufferDeviceData(address,data,size,isSecure,0);
  5516  004C76  C140  F07F         	movff	NetworkUnicastData@address,DeviceManagerBufferDeviceData@address
  5517  004C7A  C141  F080         	movff	NetworkUnicastData@address+1,DeviceManagerBufferDeviceData@address+1
  5518  004C7E  C142  F081         	movff	NetworkUnicastData@data,DeviceManagerBufferDeviceData@data
  5519  004C82  C143  F082         	movff	NetworkUnicastData@data+1,DeviceManagerBufferDeviceData@data+1
  5520  004C86  C144  F083         	movff	NetworkUnicastData@size,DeviceManagerBufferDeviceData@size
  5521  004C8A  C145  F084         	movff	NetworkUnicastData@size+1,DeviceManagerBufferDeviceData@size+1
  5522  004C8E  C146  F085         	movff	NetworkUnicastData@isSecure,DeviceManagerBufferDeviceData@isSecure
  5523  004C92  6B86               	clrf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  5524  004C94  EC0D  F03C         	call	_DeviceManagerBufferDeviceData	;wreg free
  5525  004C98  0100               	movlb	0	; () banked
  5526  004C9A  D04F               	goto	L2
  5527  004C9C                     l14618:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;NetworkBridge.c: 253: {
  5531                           ;NetworkBridge.c: 254: res=TMSendDataToRFD(address,PacketData,data,size, isSecure);
  5532  004C9C  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  5533  004CA0  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  5534  004CA4  0E23               	movlw	35
  5535  004CA6  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  5536  004CA8  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5537  004CAC  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5538  004CB0  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5539  004CB4  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5540  004CB8  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5541  004CBC  EC05  F037         	call	_TMSendDataToRFD	;wreg free
  5542  004CC0  D03C               	goto	L2
  5543  004CC2                     l14620:
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;NetworkBridge.c: 258: {
  5547                           ;NetworkBridge.c: 259: if( (isSameAddress(address,CoordinatorAddress())==1) || (isSameAd
      +                          dress(address,CoordinatorGenericAddress())==1) )
  5548  004CC2  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5549  004CC6  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5550  004CCA  EC08  F03C         	call	_CoordinatorAddress	;wreg free
  5551  004CCE  C073  F07F         	movff	?_CoordinatorAddress,isSameAddress@a2
  5552  004CD2  C074  F080         	movff	?_CoordinatorAddress+1,isSameAddress@a2+1
  5553  004CD6  ECB1  F03A         	call	_isSameAddress	;wreg free
  5554  004CDA  06E8               	decf	wreg,f,c
  5555  004CDC  E00E               	bz	l14624
  5556                           
  5557                           ; BSR set to: 0
  5558  004CDE  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  5559  004CE2  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  5560  004CE6  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
  5561  004CEA  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  5562  004CEE  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  5563  004CF2  ECB1  F03A         	call	_isSameAddress	;wreg free
  5564  004CF6  06E8               	decf	wreg,f,c
  5565  004CF8  E10E               	bnz	l14626
  5566  004CFA                     l14624:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;NetworkBridge.c: 260: {
  5570                           ;NetworkBridge.c: 261: res=TMSendFormedPacketTowardsCoordinator(data,size,0, isSecure);
  5571  004CFA  C142  F08A         	movff	NetworkUnicastData@data,TMSendFormedPacketTowardsCoordinator@data
  5572  004CFE  C143  F08B         	movff	NetworkUnicastData@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  5573  004D02  C144  F08C         	movff	NetworkUnicastData@size,TMSendFormedPacketTowardsCoordinator@size
  5574  004D06  C145  F08D         	movff	NetworkUnicastData@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  5575  004D0A  6B8E               	clrf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  5576  004D0C  C146  F08F         	movff	NetworkUnicastData@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  5577  004D10  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  5578  004D14  D012               	goto	L2
  5579  004D16                     l14626:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;NetworkBridge.c: 263: {
  5583                           ;NetworkBridge.c: 264: res=TMSendDataToRFD(address,PacketRoutedData,data,size, isSecure)
      +                          ;
  5584  004D16  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  5585  004D1A  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  5586  004D1E  0E26               	movlw	38
  5587  004D20  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  5588  004D22  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5589  004D26  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5590  004D2A  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5591  004D2E  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5592  004D32  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5593  004D36  EC05  F037         	call	_TMSendDataToRFD	;wreg free
  5594  004D3A                     L2:
  5595  004D3A  6FDE               	movwf	NetworkUnicastData@res& (0+255),b
  5596  004D3C                     l14628:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;NetworkBridge.c: 265: }
  5600                           ;NetworkBridge.c: 266: }
  5601                           ;NetworkBridge.c: 267: return(res);
  5602  004D3C  51DE               	movf	NetworkUnicastData@res& (0+255),w,b
  5603                           
  5604                           ; BSR set to: 0
  5605  004D3E  0012               	return		;funcret
  5606  004D40                     __end_of_NetworkUnicastData:
  5607                           	opt stack 0
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           postinc0	equ	0xFEE
  5615                           wreg	equ	0xFE8
  5616                           postdec1	equ	0xFE5
  5617                           fsr1h	equ	0xFE2
  5618                           fsr1l	equ	0xFE1
  5619                           indf2	equ	0xFDF
  5620                           postinc2	equ	0xFDE
  5621                           postdec2	equ	0xFDD
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function _MiApp_TransceiverPowerState *****************
  5627 ;; Defined at:
  5628 ;;		line 419 in file "../src/Bridge.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  Mode            1    wreg     unsigned char 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  Mode            1   42[BANK0 ] unsigned char 
  5633 ;;  res             1    0        unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      unsigned char 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : C/1
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;Total ram usage:        2 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    9
  5650 ;; This function calls:
  5651 ;;		_MiMAC_PowerState
  5652 ;; This function is called by:
  5653 ;;		_main
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text10
  5658  007768                     __ptext10:
  5659                           	opt stack 0
  5660  007768                     _MiApp_TransceiverPowerState:
  5661                           	opt stack 21
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;incstack = 0
  5665                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  5666  007768  0100               	movlb	0	; () banked
  5667  00776A  6F8A               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  5668                           
  5669                           ;Bridge.c: 421: uint8_t res;
  5670                           ;Bridge.c: 422: if(Mode==0x00)
  5671  00776C  518A               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  5672  00776E  E103               	bnz	l15318
  5673                           
  5674                           ; BSR set to: 0
  5675  007770  0E00               	movlw	0
  5676  007772  EF58  F035         	goto	_MiMAC_PowerState
  5677  007776                     l15318:
  5678                           
  5679                           ; BSR set to: 0
  5680  007776  0EFF               	movlw	255
  5681  007778  EF58  F035         	goto	_MiMAC_PowerState
  5682  00777C                     __end_of_MiApp_TransceiverPowerState:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           postinc0	equ	0xFEE
  5691                           wreg	equ	0xFE8
  5692                           postdec1	equ	0xFE5
  5693                           fsr1h	equ	0xFE2
  5694                           fsr1l	equ	0xFE1
  5695                           indf2	equ	0xFDF
  5696                           postinc2	equ	0xFDE
  5697                           postdec2	equ	0xFDD
  5698                           fsr2h	equ	0xFDA
  5699                           fsr2l	equ	0xFD9
  5700                           status	equ	0xFD8
  5701                           
  5702 ;; *************** function _MiMAC_PowerState *****************
  5703 ;; Defined at:
  5704 ;;		line 1248 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  PowerState      1    wreg     unsigned char 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  PowerState      1   39[BANK0 ] unsigned char 
  5709 ;;  i               1   40[BANK0 ] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      unsigned char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : F/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;Total ram usage:        2 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    8
  5726 ;; This function calls:
  5727 ;;		_DelayMs
  5728 ;;		_SetRFMode
  5729 ;; This function is called by:
  5730 ;;		_MiApp_TransceiverPowerState
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text11
  5735  006AB0                     __ptext11:
  5736                           	opt stack 0
  5737  006AB0                     _MiMAC_PowerState:
  5738                           	opt stack 21
  5739                           
  5740                           ;incstack = 0
  5741                           ;MiMAC_PowerState@PowerState stored from wreg
  5742  006AB0  6F87               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  5743                           
  5744                           ;drv_mrf_miwi_mesh_89xa.c: 1250: switch(PowerState)
  5745  006AB2  D023               	goto	l14454
  5746  006AB4                     l14426:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;drv_mrf_miwi_mesh_89xa.c: 1253: {
  5750                           ;drv_mrf_miwi_mesh_89xa.c: 1254: SetRFMode(0x00);
  5751  006AB4  0E00               	movlw	0
  5752  006AB6  EC99  F033         	call	_SetRFMode
  5753                           
  5754                           ;drv_mrf_miwi_mesh_89xa.c: 1258: INTCON3bits.INT1IE = 0;
  5755  006ABA  96F0               	bcf	intcon3,3,c	;volatile
  5756                           
  5757                           ;drv_mrf_miwi_mesh_89xa.c: 1259: }
  5758                           ;drv_mrf_miwi_mesh_89xa.c: 1260: break;
  5759  006ABC  0C01               	retlw	1
  5760  006ABE                     l14430:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;drv_mrf_miwi_mesh_89xa.c: 1263: {
  5764                           ;drv_mrf_miwi_mesh_89xa.c: 1264: uint8_t i;
  5765                           ;drv_mrf_miwi_mesh_89xa.c: 1266: SetRFMode(0x20);
  5766  006ABE  0E20               	movlw	32
  5767  006AC0  EC99  F033         	call	_SetRFMode
  5768                           
  5769                           ;drv_mrf_miwi_mesh_89xa.c: 1267: SetRFMode(0x60);
  5770  006AC4  0E60               	movlw	96
  5771  006AC6  EC99  F033         	call	_SetRFMode
  5772                           
  5773                           ;drv_mrf_miwi_mesh_89xa.c: 1271: INTCON3bits.INT1IE = 1;
  5774  006ACA  86F0               	bsf	intcon3,3,c	;volatile
  5775                           
  5776                           ;drv_mrf_miwi_mesh_89xa.c: 1272: DelayMs(10);
  5777  006ACC  0E0A               	movlw	10
  5778  006ACE  0100               	movlb	0	; () banked
  5779  006AD0  6F7B               	movwf	DelayMs@ms& (0+255),b
  5780  006AD2  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
  5781  006AD4  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
  5782  006AD6  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
  5783  006AD8  EC4E  F02F         	call	_DelayMs	;wreg free
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;drv_mrf_miwi_mesh_89xa.c: 1274: for(i = 0; i < 5; i++)
  5787  006ADC  6B88               	clrf	MiMAC_PowerState@i& (0+255),b
  5788  006ADE                     l14442:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;drv_mrf_miwi_mesh_89xa.c: 1275: {
  5792                           ;drv_mrf_miwi_mesh_89xa.c: 1276: AckInfo[i].Valid = 0;
  5793  006ADE  5188               	movf	MiMAC_PowerState@i& (0+255),w,b
  5794  006AE0  0D06               	mullw	6
  5795  006AE2  0E00               	movlw	low _AckInfo
  5796  006AE4  24F3               	addwf	prodl,w,c
  5797  006AE6  6ED9               	movwf	fsr2l,c
  5798  006AE8  0E02               	movlw	high _AckInfo
  5799  006AEA  20F4               	addwfc	prodh,w,c
  5800  006AEC  6EDA               	movwf	fsr2h,c
  5801  006AEE  6ADF               	clrf	indf2,c
  5802                           
  5803                           ; BSR set to: 0
  5804  006AF0  2B88               	incf	MiMAC_PowerState@i& (0+255),f,b
  5805                           
  5806                           ; BSR set to: 0
  5807  006AF2  0E04               	movlw	4
  5808  006AF4  6588               	cpfsgt	MiMAC_PowerState@i& (0+255),b
  5809  006AF6  D7F3               	goto	l14442
  5810  006AF8  0C01               	retlw	1
  5811  006AFA                     l14454:
  5812  006AFA  0100               	movlb	0	; () banked
  5813  006AFC  5187               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  5814                           
  5815                           ; Switch size 1, requested type "speed"
  5816                           ; Number of cases is 2, Range of values is 0 to 255
  5817                           ; switch strategies available:
  5818                           ; Name         Instructions Cycles
  5819                           ; simple_byte            7     4 (average)
  5820                           ;	Chosen strategy is simple_byte
  5821  006AFE  E0DA               	bz	l14426
  5822  006B00  0AFF               	xorlw	255	; case 255
  5823  006B02  A4D8               	btfss	status,2,c
  5824  006B04  0C00               	retlw	0
  5825  006B06  D7DB               	goto	l14430
  5826  006B08                     __end_of_MiMAC_PowerState:
  5827                           	opt stack 0
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon3	equ	0xFF0
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1h	equ	0xFE2
  5839                           fsr1l	equ	0xFE1
  5840                           indf2	equ	0xFDF
  5841                           postinc2	equ	0xFDE
  5842                           postdec2	equ	0xFDD
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8
  5846                           
  5847 ;; *************** function _MiApp_SearchConnection *****************
  5848 ;; Defined at:
  5849 ;;		line 344 in file "../src/Bridge.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  ScanDuartion    1    wreg     unsigned char 
  5852 ;;  ChannelMap      4  166[BANK1 ] unsigned long 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  ScanDuartion    1    4[BANK2 ] unsigned char 
  5855 ;;  mask            4    7[BANK2 ] unsigned long 
  5856 ;;  tStart          4    0[BANK2 ] struct MIWI_TICK_t
  5857 ;;  msDuration      2    5[BANK2 ] unsigned int 
  5858 ;;  i               1   12[BANK2 ] unsigned char 
  5859 ;;  res             1   11[BANK2 ] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      unsigned char 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : F/1
  5866 ;;		On exit  : F/2
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5869 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5870 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5871 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Totals:         0       0      12      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;Total ram usage:       25 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:   17
  5876 ;; This function calls:
  5877 ;;		_MiApp_DiscardMessage
  5878 ;;		_MiApp_MessageAvailable
  5879 ;;		_MiApp_SetChannel
  5880 ;;		_MiWi_TickGetMs
  5881 ;;		_NetworkSendDiscoverRequest
  5882 ;;		_memset
  5883 ;; This function is called by:
  5884 ;;		_main
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text12
  5889  0045DA                     __ptext12:
  5890                           	opt stack 0
  5891  0045DA                     _MiApp_SearchConnection:
  5892                           	opt stack 13
  5893                           
  5894                           ;incstack = 0
  5895                           ;MiApp_SearchConnection@ScanDuartion stored from wreg
  5896  0045DA  0102               	movlb	2	; () banked
  5897  0045DC  6FA9               	movwf	MiApp_SearchConnection@ScanDuartion& (0+255),b
  5898                           
  5899                           ;Bridge.c: 346: uint8_t res=0xff;
  5900  0045DE  69B0               	setf	MiApp_SearchConnection@res& (0+255),b
  5901                           
  5902                           ; BSR set to: 2
  5903                           ;Bridge.c: 347: uint8_t i;
  5904                           ;Bridge.c: 348: MIWI_TICK tStart;
  5905                           ;Bridge.c: 349: uint32_t mask=(1<<1);
  5906  0045E0  0E02               	movlw	2
  5907  0045E2  6FAC               	movwf	MiApp_SearchConnection@mask& (0+255),b
  5908  0045E4  6BAD               	clrf	(MiApp_SearchConnection@mask+1)& (0+255),b
  5909  0045E6  6BAE               	clrf	(MiApp_SearchConnection@mask+2)& (0+255),b
  5910  0045E8  6BAF               	clrf	(MiApp_SearchConnection@mask+3)& (0+255),b
  5911                           
  5912                           ; BSR set to: 2
  5913                           ;Bridge.c: 350: uint16_t msDuration=((uint16_t)ScanDuartion)<<5;
  5914  0045EA  51A9               	movf	MiApp_SearchConnection@ScanDuartion& (0+255),w,b
  5915  0045EC  0101               	movlb	1	; () banked
  5916  0045EE  6FAA               	movwf	??_MiApp_SearchConnection& (0+255),b
  5917  0045F0  6BAB               	clrf	(??_MiApp_SearchConnection+1)& (0+255),b
  5918  0045F2  0E05               	movlw	5
  5919  0045F4                     u17465:
  5920  0045F4  90D8               	bcf	status,0,c
  5921  0045F6  37AA               	rlcf	??_MiApp_SearchConnection& (0+255),f,b
  5922  0045F8  37AB               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
  5923  0045FA  2EE8               	decfsz	wreg,f,c
  5924  0045FC  D7FB               	goto	u17465
  5925  0045FE  C1AA  F2AA         	movff	??_MiApp_SearchConnection,MiApp_SearchConnection@msDuration
  5926  004602  C1AB  F2AB         	movff	??_MiApp_SearchConnection+1,MiApp_SearchConnection@msDuration+1
  5927                           
  5928                           ; BSR set to: 1
  5929                           ;Bridge.c: 351: memset(ActiveScanResults,0x00,sizeof(ActiveScanResults));
  5930  004606  0E55               	movlw	low _ActiveScanResults
  5931  004608  0100               	movlb	0	; () banked
  5932  00460A  6F73               	movwf	memset@p1& (0+255),b
  5933  00460C  0E02               	movlw	high _ActiveScanResults
  5934  00460E  6F74               	movwf	(memset@p1+1)& (0+255),b
  5935  004610  6B76               	clrf	(memset@c+1)& (0+255),b
  5936  004612  6B75               	clrf	memset@c& (0+255),b
  5937  004614  6B78               	clrf	(memset@n+1)& (0+255),b
  5938  004616  0E19               	movlw	25
  5939  004618  6F77               	movwf	memset@n& (0+255),b
  5940  00461A  EC4C  F03A         	call	_memset	;wreg free
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;Bridge.c: 352: for(i=1;i<32;i++)
  5944  00461E  0E01               	movlw	1
  5945  004620  0102               	movlb	2	; () banked
  5946  004622  6FB1               	movwf	MiApp_SearchConnection@i& (0+255),b
  5947  004624                     l15248:
  5948                           
  5949                           ; BSR set to: 2
  5950                           ;Bridge.c: 353: {
  5951                           ;Bridge.c: 354: if((mask & ChannelMap)>0)
  5952  004624  0101               	movlb	1	; () banked
  5953  004626  51A6               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
  5954  004628  0102               	movlb	2	; () banked
  5955  00462A  15AC               	andwf	MiApp_SearchConnection@mask& (0+255),w,b
  5956  00462C  0101               	movlb	1	; () banked
  5957  00462E  6FAA               	movwf	??_MiApp_SearchConnection& (0+255),b
  5958  004630  51A7               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
  5959  004632  0102               	movlb	2	; () banked
  5960  004634  15AD               	andwf	(MiApp_SearchConnection@mask+1)& (0+255),w,b
  5961  004636  0101               	movlb	1	; () banked
  5962  004638  6FAB               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  5963  00463A  51A8               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
  5964  00463C  0102               	movlb	2	; () banked
  5965  00463E  15AE               	andwf	(MiApp_SearchConnection@mask+2)& (0+255),w,b
  5966  004640  0101               	movlb	1	; () banked
  5967  004642  6FAC               	movwf	(??_MiApp_SearchConnection+2)& (0+255),b
  5968  004644  51A9               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
  5969  004646  0102               	movlb	2	; () banked
  5970  004648  15AF               	andwf	(MiApp_SearchConnection@mask+3)& (0+255),w,b
  5971  00464A  0101               	movlb	1	; () banked
  5972  00464C  6FAD               	movwf	(??_MiApp_SearchConnection+3)& (0+255),b
  5973  00464E  51AA               	movf	??_MiApp_SearchConnection& (0+255),w,b
  5974  004650  11AB               	iorwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  5975  004652  11AC               	iorwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  5976  004654  11AD               	iorwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  5977  004656  E045               	bz	l15264
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;Bridge.c: 355: {
  5981                           ;Bridge.c: 356: ActiveScanChannel=i;
  5982  004658  C2B1  F1D2         	movff	MiApp_SearchConnection@i,_ActiveScanChannel
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;Bridge.c: 357: MiApp_SetChannel(ActiveScanChannel);
  5986  00465C  51D2               	movf	_ActiveScanChannel& (0+255),w,b
  5987  00465E  ECF8  F03B         	call	_MiApp_SetChannel
  5988                           
  5989                           ;Bridge.c: 358: NetworkSendDiscoverRequest();
  5990  004662  ECF0  F032         	call	_NetworkSendDiscoverRequest	;wreg free
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;Bridge.c: 359: tStart=MiWi_TickGetMs();
  5994  004666  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  5995  00466A  C07F  F2A5         	movff	?_MiWi_TickGetMs,MiApp_SearchConnection@tStart
  5996  00466E  C080  F2A6         	movff	?_MiWi_TickGetMs+1,MiApp_SearchConnection@tStart+1
  5997  004672  C081  F2A7         	movff	?_MiWi_TickGetMs+2,MiApp_SearchConnection@tStart+2
  5998  004676  C082  F2A8         	movff	?_MiWi_TickGetMs+3,MiApp_SearchConnection@tStart+3
  5999  00467A                     l15258:
  6000                           
  6001                           ;Bridge.c: 361: {
  6002                           ;Bridge.c: 362: if(MiApp_MessageAvailable())
  6003  00467A  EC4F  F029         	call	_MiApp_MessageAvailable	;wreg free
  6004  00467E  0900               	iorlw	0
  6005  004680  E002               	bz	l971
  6006                           
  6007                           ; BSR set to: 1
  6008                           ;Bridge.c: 363: {
  6009                           ;Bridge.c: 364: MiApp_DiscardMessage();
  6010  004682  EC30  F03C         	call	_MiApp_DiscardMessage	;wreg free
  6011  004686                     l971:
  6012                           
  6013                           ; BSR set to: 1
  6014  004686  0004               	clrwdt		;# 
  6015                           
  6016                           ;Bridge.c: 367: }while((MiWi_TickGetMs().Val - tStart.Val)<msDuration);
  6017  004688  0102               	movlb	2	; () banked
  6018  00468A  51AA               	movf	MiApp_SearchConnection@msDuration& (0+255),w,b
  6019  00468C  0101               	movlb	1	; () banked
  6020  00468E  6FAA               	movwf	??_MiApp_SearchConnection& (0+255),b
  6021  004690  0102               	movlb	2	; () banked
  6022  004692  51AB               	movf	(MiApp_SearchConnection@msDuration+1)& (0+255),w,b
  6023  004694  0101               	movlb	1	; () banked
  6024  004696  6FAB               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  6025  004698  6BAC               	clrf	(??_MiApp_SearchConnection+2)& (0+255),b
  6026  00469A  6BAD               	clrf	(??_MiApp_SearchConnection+3)& (0+255),b
  6027  00469C  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  6028  0046A0  0102               	movlb	2	; () banked
  6029  0046A2  51A5               	movf	MiApp_SearchConnection@tStart& (0+255),w,b
  6030  0046A4  0100               	movlb	0	; () banked
  6031  0046A6  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  6032  0046A8  0101               	movlb	1	; () banked
  6033  0046AA  6FAE               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
  6034  0046AC  0102               	movlb	2	; () banked
  6035  0046AE  51A6               	movf	(MiApp_SearchConnection@tStart+1)& (0+255),w,b
  6036  0046B0  0100               	movlb	0	; () banked
  6037  0046B2  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  6038  0046B4  0101               	movlb	1	; () banked
  6039  0046B6  6FAF               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
  6040  0046B8  0102               	movlb	2	; () banked
  6041  0046BA  51A7               	movf	(MiApp_SearchConnection@tStart+2)& (0+255),w,b
  6042  0046BC  0100               	movlb	0	; () banked
  6043  0046BE  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  6044  0046C0  0101               	movlb	1	; () banked
  6045  0046C2  6FB0               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
  6046  0046C4  0102               	movlb	2	; () banked
  6047  0046C6  51A8               	movf	(MiApp_SearchConnection@tStart+3)& (0+255),w,b
  6048  0046C8  0100               	movlb	0	; () banked
  6049  0046CA  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  6050  0046CC  0101               	movlb	1	; () banked
  6051  0046CE  6FB1               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
  6052  0046D0  51AA               	movf	??_MiApp_SearchConnection& (0+255),w,b
  6053  0046D2  5DAE               	subwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
  6054  0046D4  51AB               	movf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  6055  0046D6  59AF               	subwfb	(??_MiApp_SearchConnection+5)& (0+255),w,b
  6056  0046D8  51AC               	movf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  6057  0046DA  59B0               	subwfb	(??_MiApp_SearchConnection+6)& (0+255),w,b
  6058  0046DC  51AD               	movf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  6059  0046DE  59B1               	subwfb	(??_MiApp_SearchConnection+7)& (0+255),w,b
  6060  0046E0  E3CC               	bnc	l15258
  6061  0046E2                     l15264:
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;Bridge.c: 368: }
  6065                           ;Bridge.c: 369: mask<<=1;
  6066  0046E2  0102               	movlb	2	; () banked
  6067  0046E4  90D8               	bcf	status,0,c
  6068  0046E6  37AC               	rlcf	MiApp_SearchConnection@mask& (0+255),f,b
  6069  0046E8  37AD               	rlcf	(MiApp_SearchConnection@mask+1)& (0+255),f,b
  6070  0046EA  37AE               	rlcf	(MiApp_SearchConnection@mask+2)& (0+255),f,b
  6071  0046EC  37AF               	rlcf	(MiApp_SearchConnection@mask+3)& (0+255),f,b
  6072  0046EE  2BB1               	incf	MiApp_SearchConnection@i& (0+255),f,b
  6073                           
  6074                           ; BSR set to: 2
  6075  0046F0  0E1F               	movlw	31
  6076  0046F2  65B1               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  6077  0046F4  D797               	goto	l15248
  6078                           
  6079                           ; BSR set to: 2
  6080                           ;Bridge.c: 370: }
  6081                           ;Bridge.c: 371: for(i=0;i<5;i++)
  6082  0046F6  6BB1               	clrf	MiApp_SearchConnection@i& (0+255),b
  6083  0046F8                     l15272:
  6084                           
  6085                           ; BSR set to: 2
  6086                           ;Bridge.c: 372: {
  6087                           ;Bridge.c: 373: if(ActiveScanResults[i].Flags==0)
  6088  0046F8  51B1               	movf	MiApp_SearchConnection@i& (0+255),w,b
  6089  0046FA  0D05               	mullw	5
  6090  0046FC  0E59               	movlw	low (_ActiveScanResults+4)
  6091  0046FE  24F3               	addwf	prodl,w,c
  6092  004700  6ED9               	movwf	fsr2l,c
  6093  004702  0E02               	movlw	high (_ActiveScanResults+4)
  6094  004704  20F4               	addwfc	prodh,w,c
  6095  004706  6EDA               	movwf	fsr2h,c
  6096  004708  50DF               	movf	indf2,w,c
  6097  00470A  E004               	bz	l15280
  6098                           
  6099                           ; BSR set to: 2
  6100  00470C  2BB1               	incf	MiApp_SearchConnection@i& (0+255),f,b
  6101                           
  6102                           ; BSR set to: 2
  6103  00470E  0E04               	movlw	4
  6104  004710  65B1               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  6105  004712  D7F2               	goto	l15272
  6106  004714                     l15280:
  6107                           
  6108                           ; BSR set to: 2
  6109                           ;Bridge.c: 376: }
  6110                           ;Bridge.c: 377: }
  6111                           ;Bridge.c: 378: if(i>0)
  6112  004714  51B1               	movf	MiApp_SearchConnection@i& (0+255),w,b
  6113  004716  E002               	bz	l15284
  6114                           
  6115                           ; BSR set to: 2
  6116                           ;Bridge.c: 379: {
  6117                           ;Bridge.c: 380: res=i;
  6118  004718  C2B1  F2B0         	movff	MiApp_SearchConnection@i,MiApp_SearchConnection@res
  6119  00471C                     l15284:
  6120                           
  6121                           ; BSR set to: 2
  6122                           ;Bridge.c: 381: }
  6123                           ;Bridge.c: 382: return(res);
  6124  00471C  51B0               	movf	MiApp_SearchConnection@res& (0+255),w,b
  6125                           
  6126                           ; BSR set to: 2
  6127  00471E  0012               	return		;funcret
  6128  004720                     __end_of_MiApp_SearchConnection:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           intcon3	equ	0xFF0
  6137                           postinc0	equ	0xFEE
  6138                           wreg	equ	0xFE8
  6139                           postdec1	equ	0xFE5
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           indf2	equ	0xFDF
  6143                           postinc2	equ	0xFDE
  6144                           postdec2	equ	0xFDD
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           
  6149 ;; *************** function _NetworkSendDiscoverRequest *****************
  6150 ;; Defined at:
  6151 ;;		line 395 in file "../NetworkManager.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  6156 ;;  address         2   68[BANK1 ] struct addr_t_def
  6157 ;;  dhdr            2   66[BANK1 ] PTR struct net_data_head
  6158 ;;		 -> NetworkSendDiscoverRequest@databuff(64), 
  6159 ;;  size            2   64[BANK1 ] unsigned int 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/1
  6166 ;;		On exit  : F/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Totals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;Total ram usage:       70 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    9
  6176 ;; This function calls:
  6177 ;;		_BroadcastManagerDelaySend
  6178 ;;		_NetworkAddressSizeGet
  6179 ;;		_NetworkPrepareSendPacket
  6180 ;;		_memset
  6181 ;; This function is called by:
  6182 ;;		_MiApp_SearchConnection
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text13
  6187  0065E0                     __ptext13:
  6188                           	opt stack 0
  6189  0065E0                     _NetworkSendDiscoverRequest:
  6190                           	opt stack 20
  6191                           
  6192                           ;NetworkManager.c: 397: addr_t address;
  6193                           ;NetworkManager.c: 398: uint16_t size;
  6194                           ;NetworkManager.c: 399: uint8_t databuff[64];
  6195                           ;NetworkManager.c: 400: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;incstack = 0
  6199  0065E0  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  6200  0065E2  0101               	movlb	1	; () banked
  6201  0065E4  6F42               	movwf	NetworkSendDiscoverRequest@dhdr& (0+255),b
  6202  0065E6  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  6203  0065E8  6F43               	movwf	(NetworkSendDiscoverRequest@dhdr+1)& (0+255),b
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;NetworkManager.c: 401: memset(address.bytes,0xff,NetworkAddressSizeGet());
  6207  0065EA  0E44               	movlw	low NetworkSendDiscoverRequest@address
  6208  0065EC  0100               	movlb	0	; () banked
  6209  0065EE  6F73               	movwf	memset@p1& (0+255),b
  6210  0065F0  0E01               	movlw	high NetworkSendDiscoverRequest@address
  6211  0065F2  6F74               	movwf	(memset@p1+1)& (0+255),b
  6212  0065F4  6B76               	clrf	(memset@c+1)& (0+255),b
  6213  0065F6  6975               	setf	memset@c& (0+255),b
  6214  0065F8  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
  6215  0065FC  0100               	movlb	0	; () banked
  6216  0065FE  6F77               	movwf	memset@n& (0+255),b
  6217  006600  6B78               	clrf	(memset@n+1)& (0+255),b
  6218  006602  EC4C  F03A         	call	_memset	;wreg free
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;NetworkManager.c: 402: size=NetworkPrepareSendPacket(address,databuff,PacketScanRequest
      +                          ,(0),0);
  6222  006606  C144  F07F         	movff	NetworkSendDiscoverRequest@address,NetworkPrepareSendPacket@address
  6223  00660A  C145  F080         	movff	NetworkSendDiscoverRequest@address+1,NetworkPrepareSendPacket@address+1
  6224  00660E  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  6225  006610  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  6226  006612  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  6227  006614  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  6228  006616  0E27               	movlw	39
  6229  006618  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  6230  00661A  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  6231  00661C  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  6232  00661E  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  6233  006620  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  6234  006622  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  6235  006626  C07F  F140         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverRequest@size
  6236  00662A  C080  F141         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverRequest@size+1
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;NetworkManager.c: 403: dhdr->Hops=0;
  6240  00662E  C142  FFD9         	movff	NetworkSendDiscoverRequest@dhdr,fsr2l
  6241  006632  C143  FFDA         	movff	NetworkSendDiscoverRequest@dhdr+1,fsr2h
  6242  006636  6ADF               	clrf	indf2,c
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;NetworkManager.c: 404: BroadcastManagerDelaySend(databuff,size,0,1);
  6246  006638  0E00               	movlw	low NetworkSendDiscoverRequest@databuff
  6247  00663A  6F9F               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  6248  00663C  0E01               	movlw	high NetworkSendDiscoverRequest@databuff
  6249  00663E  6FA0               	movwf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  6250  006640  C140  F0A1         	movff	NetworkSendDiscoverRequest@size,BroadcastManagerDelaySend@size
  6251  006644  C141  F0A2         	movff	NetworkSendDiscoverRequest@size+1,BroadcastManagerDelaySend@size+1
  6252  006648  6BA3               	clrf	BroadcastManagerDelaySend@isSecure& (0+255),b
  6253  00664A  0E01               	movlw	1
  6254  00664C  6FA4               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  6255  00664E  EF52  F01D         	goto	_BroadcastManagerDelaySend	;wreg free
  6256  006652                     __end_of_NetworkSendDiscoverRequest:
  6257                           	opt stack 0
  6258                           tblptru	equ	0xFF8
  6259                           tblptrh	equ	0xFF7
  6260                           tblptrl	equ	0xFF6
  6261                           tablat	equ	0xFF5
  6262                           prodh	equ	0xFF4
  6263                           prodl	equ	0xFF3
  6264                           intcon3	equ	0xFF0
  6265                           postinc0	equ	0xFEE
  6266                           wreg	equ	0xFE8
  6267                           postdec1	equ	0xFE5
  6268                           fsr1h	equ	0xFE2
  6269                           fsr1l	equ	0xFE1
  6270                           indf2	equ	0xFDF
  6271                           postinc2	equ	0xFDE
  6272                           postdec2	equ	0xFDD
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277 ;; *************** function _MiApp_MessageAvailable *****************
  6278 ;; Defined at:
  6279 ;;		line 236 in file "../src/Bridge.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  src             2  137[BANK0 ] struct addr_t_def
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      unsigned char 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : F/1
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6297 ;;Total ram usage:        6 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:   16
  6300 ;; This function calls:
  6301 ;;		_AddNodeToNetworkTable
  6302 ;;		_MiMAC_ReceivedPacket
  6303 ;;		_MiWi_TickGetMs
  6304 ;;		_NetworkManagerTask
  6305 ;;		_TimeTickISR
  6306 ;;		_memcpy
  6307 ;;		_radioReceivedPacket
  6308 ;; This function is called by:
  6309 ;;		_main
  6310 ;;		_MiApp_SearchConnection
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text14
  6315  00529E                     __ptext14:
  6316                           	opt stack 0
  6317  00529E                     _MiApp_MessageAvailable:
  6318                           	opt stack 13
  6319                           
  6320                           ;Bridge.c: 238: addr_t src;
  6321                           ;Bridge.c: 239: static MIWI_TICK tStart={0};
  6322                           ;Bridge.c: 241: if((MiWi_TickGetMs().Val - tStart.Val)>=1)
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;incstack = 0
  6326  00529E  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  6327  0052A2  0102               	movlb	2	; () banked
  6328  0052A4  5142               	movf	MiApp_MessageAvailable@tStart& (0+255),w,b
  6329  0052A6  0100               	movlb	0	; () banked
  6330  0052A8  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  6331  0052AA  0101               	movlb	1	; () banked
  6332  0052AC  6FA2               	movwf	??_MiApp_MessageAvailable& (0+255),b
  6333  0052AE  0102               	movlb	2	; () banked
  6334  0052B0  5143               	movf	(MiApp_MessageAvailable@tStart+1)& (0+255),w,b
  6335  0052B2  0100               	movlb	0	; () banked
  6336  0052B4  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  6337  0052B6  0101               	movlb	1	; () banked
  6338  0052B8  6FA3               	movwf	(??_MiApp_MessageAvailable+1)& (0+255),b
  6339  0052BA  0102               	movlb	2	; () banked
  6340  0052BC  5144               	movf	(MiApp_MessageAvailable@tStart+2)& (0+255),w,b
  6341  0052BE  0100               	movlb	0	; () banked
  6342  0052C0  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  6343  0052C2  0101               	movlb	1	; () banked
  6344  0052C4  6FA4               	movwf	(??_MiApp_MessageAvailable+2)& (0+255),b
  6345  0052C6  0102               	movlb	2	; () banked
  6346  0052C8  5145               	movf	(MiApp_MessageAvailable@tStart+3)& (0+255),w,b
  6347  0052CA  0100               	movlb	0	; () banked
  6348  0052CC  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  6349  0052CE  0101               	movlb	1	; () banked
  6350  0052D0  6FA5               	movwf	(??_MiApp_MessageAvailable+3)& (0+255),b
  6351  0052D2  51A2               	movf	??_MiApp_MessageAvailable& (0+255),w,b
  6352  0052D4  11A3               	iorwf	(??_MiApp_MessageAvailable+1)& (0+255),w,b
  6353  0052D6  11A4               	iorwf	(??_MiApp_MessageAvailable+2)& (0+255),w,b
  6354  0052D8  11A5               	iorwf	(??_MiApp_MessageAvailable+3)& (0+255),w,b
  6355  0052DA  E00C               	bz	l14512
  6356                           
  6357                           ; BSR set to: 1
  6358                           ;Bridge.c: 242: {
  6359                           ;Bridge.c: 243: tStart=MiWi_TickGetMs();
  6360  0052DC  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
  6361  0052E0  C07F  F242         	movff	?_MiWi_TickGetMs,MiApp_MessageAvailable@tStart
  6362  0052E4  C080  F243         	movff	?_MiWi_TickGetMs+1,MiApp_MessageAvailable@tStart+1
  6363  0052E8  C081  F244         	movff	?_MiWi_TickGetMs+2,MiApp_MessageAvailable@tStart+2
  6364  0052EC  C082  F245         	movff	?_MiWi_TickGetMs+3,MiApp_MessageAvailable@tStart+3
  6365                           
  6366                           ;Bridge.c: 244: TimeTickISR();
  6367  0052F0  ECA9  F039         	call	_TimeTickISR	;wreg free
  6368  0052F4                     l14512:
  6369                           
  6370                           ;Bridge.c: 245: }
  6371                           ;Bridge.c: 246: NetworkManagerTask();
  6372  0052F4  EC58  F00E         	call	_NetworkManagerTask	;wreg free
  6373                           
  6374                           ;Bridge.c: 247: if(MiMAC_ReceivedPacket()==1)
  6375  0052F8  ECA8  F007         	call	_MiMAC_ReceivedPacket	;wreg free
  6376  0052FC  06E8               	decf	wreg,f,c
  6377  0052FE  E12D               	bnz	l14520
  6378                           
  6379                           ;Bridge.c: 248: {
  6380                           ;Bridge.c: 249: memcpy(src.bytes,MACRxPacket.SourceAddress,sizeof(src));
  6381  005300  0EE9               	movlw	low MiApp_MessageAvailable@src
  6382  005302  0100               	movlb	0	; () banked
  6383  005304  6F75               	movwf	memcpy@d1& (0+255),b
  6384  005306  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  6385  005308  C26F  F077         	movff	_MACRxPacket+1,memcpy@s1
  6386  00530C  C270  F078         	movff	_MACRxPacket+2,memcpy@s1+1
  6387  005310  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6388  005312  0E02               	movlw	2
  6389  005314  6F79               	movwf	memcpy@n& (0+255),b
  6390  005316  EC5D  F036         	call	_memcpy	;wreg free
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;Bridge.c: 250: radioReceivedPacket(src,MACRxPacket.SourcePANID,MACRxPacket.Payload,MACR
      +                          xPacket.PayloadLen,MACRxPacket.RSSIValue,MACRxPacket.flags.bits.broadcast,MACRxPacket.fl
      +                          ags.bits.secEn);
  6394  00531A  C0E9  F186         	movff	MiApp_MessageAvailable@src,radioReceivedPacket@source
  6395  00531E  C0EA  F187         	movff	MiApp_MessageAvailable@src+1,radioReceivedPacket@source+1
  6396  005322  C276  F188         	movff	_MACRxPacket+8,radioReceivedPacket@PANID
  6397  005326  C277  F189         	movff	_MACRxPacket+9,radioReceivedPacket@PANID+1
  6398  00532A  C271  F18A         	movff	_MACRxPacket+3,radioReceivedPacket@data
  6399  00532E  C272  F18B         	movff	_MACRxPacket+4,radioReceivedPacket@data+1
  6400  005332  C273  F18C         	movff	_MACRxPacket+5,radioReceivedPacket@size
  6401  005336  0101               	movlb	1	; () banked
  6402  005338  6B8D               	clrf	(radioReceivedPacket@size+1)& (0+255),b
  6403  00533A  C274  F18E         	movff	_MACRxPacket+6,radioReceivedPacket@rssi
  6404  00533E  0102               	movlb	2	; () banked
  6405  005340  0E00               	movlw	0
  6406  005342  B56E               	btfsc	_MACRxPacket& (0+255),2,b
  6407  005344  0E01               	movlw	1
  6408  005346  0101               	movlb	1	; () banked
  6409  005348  6F8F               	movwf	radioReceivedPacket@isBroadcast& (0+255),b
  6410  00534A  0102               	movlb	2	; () banked
  6411  00534C  0E00               	movlw	0
  6412  00534E  B76E               	btfsc	_MACRxPacket& (0+255),3,b
  6413  005350  0E01               	movlw	1
  6414  005352  0101               	movlb	1	; () banked
  6415  005354  6F90               	movwf	radioReceivedPacket@isSecure& (0+255),b
  6416  005356  EC52  F002         	call	_radioReceivedPacket	;wreg free
  6417  00535A                     l14520:
  6418                           
  6419                           ;Bridge.c: 251: }
  6420                           ;Bridge.c: 253: if(UserMessageAvailable==1)
  6421  00535A  0101               	movlb	1	; () banked
  6422  00535C  05D9               	decf	_UserMessageAvailable& (0+255),w,b
  6423  00535E  E117               	bnz	l14526
  6424                           
  6425                           ; BSR set to: 1
  6426                           ;Bridge.c: 254: {
  6427                           ;Bridge.c: 255: memcpy(src.bytes,rxMessage.SourceAddress,sizeof(src));
  6428  005360  0EE9               	movlw	low MiApp_MessageAvailable@src
  6429  005362  0100               	movlb	0	; () banked
  6430  005364  6F75               	movwf	memcpy@d1& (0+255),b
  6431  005366  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  6432  005368  C27D  F077         	movff	_rxMessage+3,memcpy@s1
  6433  00536C  C27E  F078         	movff	_rxMessage+4,memcpy@s1+1
  6434  005370  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6435  005372  0E02               	movlw	2
  6436  005374  6F79               	movwf	memcpy@n& (0+255),b
  6437  005376  EC5D  F036         	call	_memcpy	;wreg free
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;Bridge.c: 256: AddNodeToNetworkTable(src,rxMessage.SourcePANID.Val);
  6441  00537A  C0E9  F081         	movff	MiApp_MessageAvailable@src,AddNodeToNetworkTable@address
  6442  00537E  C0EA  F082         	movff	MiApp_MessageAvailable@src+1,AddNodeToNetworkTable@address+1
  6443  005382  C27B  F083         	movff	_rxMessage+1,AddNodeToNetworkTable@PANID
  6444  005386  C27C  F084         	movff	_rxMessage+2,AddNodeToNetworkTable@PANID+1
  6445  00538A  EC32  F019         	call	_AddNodeToNetworkTable	;wreg free
  6446  00538E                     l14526:
  6447                           
  6448                           ;Bridge.c: 257: }
  6449                           ;Bridge.c: 259: return(UserMessageAvailable);
  6450  00538E  0101               	movlb	1	; () banked
  6451  005390  51D9               	movf	_UserMessageAvailable& (0+255),w,b
  6452                           
  6453                           ; BSR set to: 1
  6454  005392  0012               	return		;funcret
  6455  005394                     __end_of_MiApp_MessageAvailable:
  6456                           	opt stack 0
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           intcon3	equ	0xFF0
  6464                           postinc0	equ	0xFEE
  6465                           wreg	equ	0xFE8
  6466                           postdec1	equ	0xFE5
  6467                           fsr1h	equ	0xFE2
  6468                           fsr1l	equ	0xFE1
  6469                           indf2	equ	0xFDF
  6470                           postinc2	equ	0xFDE
  6471                           postdec2	equ	0xFDD
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function _radioReceivedPacket *****************
  6477 ;; Defined at:
  6478 ;;		line 48 in file "../NetworkBridge.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  source          2  134[BANK1 ] struct addr_t_def
  6481 ;;  PANID           2  136[BANK1 ] unsigned int 
  6482 ;;  data            2  138[BANK1 ] PTR unsigned char 
  6483 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6484 ;;  size            2  140[BANK1 ] unsigned int 
  6485 ;;  rssi            1  142[BANK1 ] unsigned char 
  6486 ;;  isBroadcast     1  143[BANK1 ] unsigned char 
  6487 ;;  isSecure        1  144[BANK1 ] unsigned char 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  bt              2  152[BANK1 ] unsigned int 
  6490 ;;  crc             4  148[BANK1 ] unsigned long 
  6491 ;;  dhdr            2  160[BANK1 ] PTR struct net_data_head
  6492 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6493 ;;  parent          2  158[BANK1 ] struct addr_t_def
  6494 ;;  child           2  156[BANK1 ] struct addr_t_def
  6495 ;;  rhdr            2  154[BANK1 ] PTR struct net_routing_h
  6496 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  6497 ;;  myAddr          2  145[BANK1 ] PTR struct addr_t_def
  6498 ;;		 -> MyAddress(2), 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : F/1
  6505 ;;		On exit  : E/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6508 ;;      Params:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Totals:         0       6      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;Total ram usage:       34 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:   15
  6515 ;; This function calls:
  6516 ;;		_BlinkRedLED
  6517 ;;		_BroadcastManagerDelaySend
  6518 ;;		_CoordinatorGenericAddress
  6519 ;;		_DeviceManagerBufferDeviceData
  6520 ;;		_DeviceManagerGetDeviceType
  6521 ;;		_GetRouteAddressOfChild
  6522 ;;		_IsMemberOfNetwork
  6523 ;;		_IsNetworkDevice
  6524 ;;		_LE_RemoveNeighborDevice
  6525 ;;		_LE_processReceivedMessage
  6526 ;;		_NetworkDiscoveredEvent
  6527 ;;		_NetworkGetDeviceType
  6528 ;;		_NetworkGetPANID
  6529 ;;		_NetworkGetParentAddress
  6530 ;;		_NetworkManagerGetMyAddress
  6531 ;;		_NetworkManagerProcessIncomingData
  6532 ;;		_NetworkSendDiscoverResponse
  6533 ;;		_RouteManagerProcessReceive
  6534 ;;		_TMSendFormedPacketTowardsCoordinator
  6535 ;;		_TunnelManagerGetTunnel
  6536 ;;		_TunnelManagerInvalidateTunnel
  6537 ;;		_TunnelManagerSetTunnel
  6538 ;;		_crc32
  6539 ;;		_isBroadcastAddress
  6540 ;;		_isKnownPacket
  6541 ;;		_isSameAddress
  6542 ;;		_memcpy
  6543 ;;		_radioDiscardPacket
  6544 ;;		_radioUnicast
  6545 ;; This function is called by:
  6546 ;;		_MiApp_MessageAvailable
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text15
  6551  0004A4                     __ptext15:
  6552                           	opt stack 0
  6553  0004A4                     _radioReceivedPacket:
  6554                           	opt stack 13
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;NetworkBridge.c: 50: net_routing_header_t *rhdr=(net_routing_header_t*)data;
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;incstack = 0
  6561  0004A4  C18A  F19A         	movff	radioReceivedPacket@data,radioReceivedPacket@rhdr
  6562  0004A8  C18B  F19B         	movff	radioReceivedPacket@data+1,radioReceivedPacket@rhdr+1
  6563                           
  6564                           ;NetworkBridge.c: 51: net_data_header_t *dhdr=(net_data_header_t*)data;
  6565  0004AC  C18A  F1A0         	movff	radioReceivedPacket@data,radioReceivedPacket@dhdr
  6566  0004B0  C18B  F1A1         	movff	radioReceivedPacket@data+1,radioReceivedPacket@dhdr+1
  6567                           
  6568                           ; BSR set to: 1
  6569                           ;NetworkBridge.c: 52: addr_t* myAddr=NetworkManagerGetMyAddress();
  6570  0004B4  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
  6571  0004B8  C073  F191         	movff	?_NetworkManagerGetMyAddress,radioReceivedPacket@myAddr
  6572  0004BC  C074  F192         	movff	?_NetworkManagerGetMyAddress+1,radioReceivedPacket@myAddr+1
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;NetworkBridge.c: 53: uint32_t crc=0;
  6576  0004C0  0101               	movlb	1	; () banked
  6577  0004C2  6B94               	clrf	radioReceivedPacket@crc& (0+255),b
  6578  0004C4  6B95               	clrf	(radioReceivedPacket@crc+1)& (0+255),b
  6579  0004C6  6B96               	clrf	(radioReceivedPacket@crc+2)& (0+255),b
  6580  0004C8  6B97               	clrf	(radioReceivedPacket@crc+3)& (0+255),b
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;NetworkBridge.c: 54: addr_t child,parent;
  6584                           ;NetworkBridge.c: 57: crc=crc32(crc,(uint8_t*)&data[1], size);
  6585  0004CA  C194  F073         	movff	radioReceivedPacket@crc,crc32@crc
  6586  0004CE  C195  F074         	movff	radioReceivedPacket@crc+1,crc32@crc+1
  6587  0004D2  C196  F075         	movff	radioReceivedPacket@crc+2,crc32@crc+2
  6588  0004D6  C197  F076         	movff	radioReceivedPacket@crc+3,crc32@crc+3
  6589  0004DA  298A               	incf	radioReceivedPacket@data& (0+255),w,b
  6590  0004DC  0100               	movlb	0	; () banked
  6591  0004DE  6F77               	movwf	crc32@buf& (0+255),b
  6592  0004E0  0E00               	movlw	0
  6593  0004E2  0101               	movlb	1	; () banked
  6594  0004E4  218B               	addwfc	(radioReceivedPacket@data+1)& (0+255),w,b
  6595  0004E6  0100               	movlb	0	; () banked
  6596  0004E8  6F78               	movwf	(crc32@buf+1)& (0+255),b
  6597  0004EA  C18C  F079         	movff	radioReceivedPacket@size,crc32@size
  6598  0004EE  C18D  F07A         	movff	radioReceivedPacket@size+1,crc32@size+1
  6599  0004F2  EC5E  F02E         	call	_crc32	;wreg free
  6600  0004F6  C073  F194         	movff	?_crc32,radioReceivedPacket@crc
  6601  0004FA  C074  F195         	movff	?_crc32+1,radioReceivedPacket@crc+1
  6602  0004FE  C075  F196         	movff	?_crc32+2,radioReceivedPacket@crc+2
  6603  000502  C076  F197         	movff	?_crc32+3,radioReceivedPacket@crc+3
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;NetworkBridge.c: 59: if(isKnownPacket(crc)==0)
  6607  000506  C194  F0AB         	movff	radioReceivedPacket@crc,isKnownPacket@hash
  6608  00050A  C195  F0AC         	movff	radioReceivedPacket@crc+1,isKnownPacket@hash+1
  6609  00050E  C196  F0AD         	movff	radioReceivedPacket@crc+2,isKnownPacket@hash+2
  6610  000512  C197  F0AE         	movff	radioReceivedPacket@crc+3,isKnownPacket@hash+3
  6611  000516  EC67  F012         	call	_isKnownPacket	;wreg free
  6612  00051A  0900               	iorlw	0
  6613  00051C  E002 EF1A  F03B    	bnz	_MiMAC_DiscardPacket
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;NetworkBridge.c: 60: {
  6617                           ;NetworkBridge.c: 61: if( (isBroadcast==1) && (rhdr->packettype==PacketRouting) )
  6618  000522  0101               	movlb	1	; () banked
  6619  000524  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6620  000526  E15F               	bnz	l14088
  6621                           
  6622                           ; BSR set to: 1
  6623  000528  EE20 F002          	lfsr	2,2
  6624  00052C  519A               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6625  00052E  26D9               	addwf	fsr2l,f,c
  6626  000530  519B               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6627  000532  22DA               	addwfc	fsr2h,f,c
  6628  000534  0E22               	movlw	34
  6629  000536  18DE               	xorwf	postinc2,w,c
  6630  000538  E156               	bnz	l14088
  6631                           
  6632                           ; BSR set to: 1
  6633                           ;NetworkBridge.c: 62: {
  6634                           ;NetworkBridge.c: 65: uint16_t bt;
  6635                           ;NetworkBridge.c: 66: memcpy(&bt,source.bytes,2);
  6636  00053A  0E98               	movlw	low radioReceivedPacket@bt
  6637  00053C  0100               	movlb	0	; () banked
  6638  00053E  6F75               	movwf	memcpy@d1& (0+255),b
  6639  000540  0E01               	movlw	high radioReceivedPacket@bt
  6640  000542  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6641  000544  0E86               	movlw	low radioReceivedPacket@source
  6642  000546  6F77               	movwf	memcpy@s1& (0+255),b
  6643  000548  0E01               	movlw	high radioReceivedPacket@source
  6644  00054A  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  6645  00054C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6646  00054E  0E02               	movlw	2
  6647  000550  6F79               	movwf	memcpy@n& (0+255),b
  6648  000552  EC5D  F036         	call	_memcpy	;wreg free
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;NetworkBridge.c: 67: rhdr->etx=rhdr->etx ^ (((uint16_t)(~bt))+(uint16_t)0x3497);
  6652  000556  0101               	movlb	1	; () banked
  6653  000558  EE20 F006          	lfsr	2,6
  6654  00055C  519A               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6655  00055E  26D9               	addwf	fsr2l,f,c
  6656  000560  519B               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6657  000562  22DA               	addwfc	fsr2h,f,c
  6658  000564  CFDE F0E3          	movff	postinc2,??_radioReceivedPacket
  6659  000568  CFDD F0E4          	movff	postdec2,??_radioReceivedPacket+1
  6660  00056C  0E97               	movlw	151
  6661  00056E  0100               	movlb	0	; () banked
  6662  000570  6FE5               	movwf	(??_radioReceivedPacket+2)& (0+255),b
  6663  000572  0E34               	movlw	52
  6664  000574  6FE6               	movwf	(??_radioReceivedPacket+3)& (0+255),b
  6665  000576  0101               	movlb	1	; () banked
  6666  000578  1D98               	comf	radioReceivedPacket@bt& (0+255),w,b
  6667  00057A  0100               	movlb	0	; () banked
  6668  00057C  6FE7               	movwf	(??_radioReceivedPacket+4)& (0+255),b
  6669  00057E  0101               	movlb	1	; () banked
  6670  000580  1D99               	comf	(radioReceivedPacket@bt+1)& (0+255),w,b
  6671  000582  0100               	movlb	0	; () banked
  6672  000584  6FE8               	movwf	(??_radioReceivedPacket+5)& (0+255),b
  6673  000586  51E5               	movf	(??_radioReceivedPacket+2)& (0+255),w,b
  6674  000588  27E7               	addwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6675  00058A  51E6               	movf	(??_radioReceivedPacket+3)& (0+255),w,b
  6676  00058C  23E8               	addwfc	(??_radioReceivedPacket+5)& (0+255),f,b
  6677  00058E  51E3               	movf	??_radioReceivedPacket& (0+255),w,b
  6678  000590  1BE7               	xorwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6679  000592  51E4               	movf	(??_radioReceivedPacket+1)& (0+255),w,b
  6680  000594  1BE8               	xorwf	(??_radioReceivedPacket+5)& (0+255),f,b
  6681  000596  0101               	movlb	1	; () banked
  6682  000598  EE20 F006          	lfsr	2,6
  6683  00059C  519A               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6684  00059E  26D9               	addwf	fsr2l,f,c
  6685  0005A0  519B               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6686  0005A2  22DA               	addwfc	fsr2h,f,c
  6687  0005A4  C0E7  FFDE         	movff	??_radioReceivedPacket+4,postinc2
  6688  0005A8  C0E8  FFDD         	movff	??_radioReceivedPacket+5,postdec2
  6689                           
  6690                           ; BSR set to: 1
  6691                           ;NetworkBridge.c: 69: LE_processReceivedMessage(&source,data,size,rssi);
  6692  0005AC  0E86               	movlw	low radioReceivedPacket@source
  6693  0005AE  0100               	movlb	0	; () banked
  6694  0005B0  6F9F               	movwf	LE_processReceivedMessage@source& (0+255),b
  6695  0005B2  0E01               	movlw	high radioReceivedPacket@source
  6696  0005B4  6FA0               	movwf	(LE_processReceivedMessage@source+1)& (0+255),b
  6697  0005B6  C18A  F0A1         	movff	radioReceivedPacket@data,LE_processReceivedMessage@data
  6698  0005BA  C18B  F0A2         	movff	radioReceivedPacket@data+1,LE_processReceivedMessage@data+1
  6699  0005BE  C18C  F0A3         	movff	radioReceivedPacket@size,LE_processReceivedMessage@len
  6700  0005C2  C18E  F0A4         	movff	radioReceivedPacket@rssi,LE_processReceivedMessage@rssi
  6701  0005C6  EC6D  F025         	call	_LE_processReceivedMessage	;wreg free
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;NetworkBridge.c: 70: RouteManagerProcessReceive(&source,data,size);
  6705  0005CA  0E86               	movlw	low radioReceivedPacket@source
  6706  0005CC  6F9D               	movwf	RouteManagerProcessReceive@source& (0+255),b
  6707  0005CE  0E01               	movlw	high radioReceivedPacket@source
  6708  0005D0  6F9E               	movwf	(RouteManagerProcessReceive@source+1)& (0+255),b
  6709  0005D2  C18A  F09F         	movff	radioReceivedPacket@data,RouteManagerProcessReceive@data
  6710  0005D6  C18B  F0A0         	movff	radioReceivedPacket@data+1,RouteManagerProcessReceive@data+1
  6711  0005DA  C18C  F0A1         	movff	radioReceivedPacket@size,RouteManagerProcessReceive@len
  6712  0005DE  EC30  F024         	call	_RouteManagerProcessReceive	;wreg free
  6713                           
  6714                           ;NetworkBridge.c: 71: }else if( (NetworkGetDeviceType()!=DeviceCoordinator) || (IsNetwor
      +                          kDevice(dhdr->origin,(dhdr->flags & 0x07))==1) )
  6715  0005E2  EF45  F03C         	goto	_radioDiscardPacket
  6716  0005E6                     l14088:
  6717                           
  6718                           ; BSR set to: 1
  6719  0005E6  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  6720  0005EA  0900               	iorlw	0
  6721  0005EC  E119               	bnz	l14092
  6722                           
  6723                           ; BSR set to: 1
  6724  0005EE  EE20 F006          	lfsr	2,6
  6725  0005F2  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6726  0005F4  26D9               	addwf	fsr2l,f,c
  6727  0005F6  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6728  0005F8  22DA               	addwfc	fsr2h,f,c
  6729  0005FA  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
  6730  0005FE  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
  6731  000602  EE20 F003          	lfsr	2,3
  6732  000606  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6733  000608  26D9               	addwf	fsr2l,f,c
  6734  00060A  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6735  00060C  22DA               	addwfc	fsr2h,f,c
  6736  00060E  50DF               	movf	indf2,w,c
  6737  000610  0B07               	andlw	7
  6738  000612  0100               	movlb	0	; () banked
  6739  000614  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
  6740  000616  EC8A  F01C         	call	_IsNetworkDevice	;wreg free
  6741  00061A  06E8               	decf	wreg,f,c
  6742  00061C  E001 D280          	bnz	l14246
  6743  000620                     l14092:
  6744                           
  6745                           ;NetworkBridge.c: 72: {
  6746                           ;NetworkBridge.c: 75: if( (isBroadcast==1) && (rhdr->packettype==PacketScanRequest) )
  6747  000620  0101               	movlb	1	; () banked
  6748  000622  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6749  000624  E112               	bnz	l14100
  6750                           
  6751                           ; BSR set to: 1
  6752  000626  EE20 F002          	lfsr	2,2
  6753  00062A  519A               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6754  00062C  26D9               	addwf	fsr2l,f,c
  6755  00062E  519B               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6756  000630  22DA               	addwfc	fsr2h,f,c
  6757  000632  0E27               	movlw	39
  6758  000634  18DE               	xorwf	postinc2,w,c
  6759  000636  E109               	bnz	l14100
  6760                           
  6761                           ; BSR set to: 1
  6762                           ;NetworkBridge.c: 76: {
  6763                           ;NetworkBridge.c: 77: if(IsMemberOfNetwork()==1)
  6764  000638  EC4F  F03C         	call	_IsMemberOfNetwork	;wreg free
  6765  00063C  06E8               	decf	wreg,f,c
  6766  00063E  E001 D26F          	bnz	l14246
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;NetworkBridge.c: 78: {
  6770                           ;NetworkBridge.c: 80: NetworkSendDiscoverResponse();
  6771  000642  ECC7  F031         	call	_NetworkSendDiscoverResponse	;wreg free
  6772  000646  EF45  F03C         	goto	_radioDiscardPacket
  6773  00064A                     l14100:
  6774                           
  6775                           ; BSR set to: 1
  6776  00064A  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6777  00064C  E11A               	bnz	l14108
  6778                           
  6779                           ; BSR set to: 1
  6780  00064E  EE20 F002          	lfsr	2,2
  6781  000652  519A               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6782  000654  26D9               	addwf	fsr2l,f,c
  6783  000656  519B               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6784  000658  22DA               	addwfc	fsr2h,f,c
  6785  00065A  0E28               	movlw	40
  6786  00065C  18DE               	xorwf	postinc2,w,c
  6787  00065E  E111               	bnz	l14108
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;NetworkBridge.c: 83: {
  6791                           ;NetworkBridge.c: 84: if(PANID!=0xffff)
  6792  000660  2988               	incf	radioReceivedPacket@PANID& (0+255),w,b
  6793  000662  E103               	bnz	u16140
  6794  000664  2989               	incf	(radioReceivedPacket@PANID+1)& (0+255),w,b
  6795  000666  E101 D25B          	bz	l14246
  6796  00066A                     u16140:
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;NetworkBridge.c: 85: {
  6800                           ;NetworkBridge.c: 86: NetworkDiscoveredEvent(PANID, rssi);
  6801  00066A  C188  F073         	movff	radioReceivedPacket@PANID,NetworkDiscoveredEvent@PANID
  6802  00066E  C189  F074         	movff	radioReceivedPacket@PANID+1,NetworkDiscoveredEvent@PANID+1
  6803  000672  C18E  F075         	movff	radioReceivedPacket@rssi,NetworkDiscoveredEvent@rssi
  6804  000676  0100               	movlb	0	; () banked
  6805  000678  6B76               	clrf	(NetworkDiscoveredEvent@rssi+1)& (0+255),b
  6806  00067A  ECB9  F01B         	call	_NetworkDiscoveredEvent	;wreg free
  6807                           
  6808                           ;NetworkBridge.c: 87: }
  6809                           ;NetworkBridge.c: 88: }else if( (dhdr->packettype==PacketData) || (dhdr->packettype==Pac
      +                          ketCheckin)
  6810  00067E  EF45  F03C         	goto	_radioDiscardPacket
  6811  000682                     l14108:
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;NetworkBridge.c: 89: || (dhdr->packettype==PacketCheckinReply) ||(dhdr->packettype==Pac
      +                          ketRoutedData)
  6815                           ;NetworkBridge.c: 90: || (dhdr->packettype==PacketRFDRequestData) )
  6816  000682  EE20 F002          	lfsr	2,2
  6817  000686  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6818  000688  26D9               	addwf	fsr2l,f,c
  6819  00068A  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6820  00068C  22DA               	addwfc	fsr2h,f,c
  6821  00068E  0E23               	movlw	35
  6822  000690  18DE               	xorwf	postinc2,w,c
  6823  000692  E025               	bz	l14118
  6824                           
  6825                           ; BSR set to: 1
  6826  000694  EE20 F002          	lfsr	2,2
  6827  000698  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6828  00069A  26D9               	addwf	fsr2l,f,c
  6829  00069C  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6830  00069E  22DA               	addwfc	fsr2h,f,c
  6831  0006A0  0E24               	movlw	36
  6832  0006A2  18DE               	xorwf	postinc2,w,c
  6833  0006A4  E01C               	bz	l14118
  6834                           
  6835                           ; BSR set to: 1
  6836  0006A6  EE20 F002          	lfsr	2,2
  6837  0006AA  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6838  0006AC  26D9               	addwf	fsr2l,f,c
  6839  0006AE  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6840  0006B0  22DA               	addwfc	fsr2h,f,c
  6841  0006B2  0E25               	movlw	37
  6842  0006B4  18DE               	xorwf	postinc2,w,c
  6843  0006B6  E013               	bz	l14118
  6844                           
  6845                           ; BSR set to: 1
  6846  0006B8  EE20 F002          	lfsr	2,2
  6847  0006BC  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6848  0006BE  26D9               	addwf	fsr2l,f,c
  6849  0006C0  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6850  0006C2  22DA               	addwfc	fsr2h,f,c
  6851  0006C4  0E26               	movlw	38
  6852  0006C6  18DE               	xorwf	postinc2,w,c
  6853  0006C8  E00A               	bz	l14118
  6854                           
  6855                           ; BSR set to: 1
  6856  0006CA  EE20 F002          	lfsr	2,2
  6857  0006CE  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6858  0006D0  26D9               	addwf	fsr2l,f,c
  6859  0006D2  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6860  0006D4  22DA               	addwfc	fsr2h,f,c
  6861  0006D6  0E29               	movlw	41
  6862  0006D8  18DE               	xorwf	postinc2,w,c
  6863  0006DA  E001 D221          	bnz	l14246
  6864  0006DE                     l14118:
  6865                           
  6866                           ; BSR set to: 1
  6867                           ;NetworkBridge.c: 91: {
  6868                           ;NetworkBridge.c: 92: BlinkRedLED();
  6869  0006DE  ECDA  F03B         	call	_BlinkRedLED	;wreg free
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;NetworkBridge.c: 93: if( (isSameAddress(*myAddr,dhdr->target)) || (isBroadcastAddress(d
      +                          hdr->target))
  6873                           ;NetworkBridge.c: 94: || ((NetworkGetDeviceType()==DeviceCoordinator) && (isSameAddress(
      +                          CoordinatorGenericAddress(),dhdr->target)) ) )
  6874  0006E2  C191  FFD9         	movff	radioReceivedPacket@myAddr,fsr2l
  6875  0006E6  C192  FFDA         	movff	radioReceivedPacket@myAddr+1,fsr2h
  6876  0006EA  CFDE F07D          	movff	postinc2,isSameAddress@a1
  6877  0006EE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  6878  0006F2  0101               	movlb	1	; () banked
  6879  0006F4  EE20 F004          	lfsr	2,4
  6880  0006F8  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6881  0006FA  26D9               	addwf	fsr2l,f,c
  6882  0006FC  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6883  0006FE  22DA               	addwfc	fsr2h,f,c
  6884  000700  CFDE F07F          	movff	postinc2,isSameAddress@a2
  6885  000704  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  6886  000708  ECB1  F03A         	call	_isSameAddress	;wreg free
  6887  00070C  0900               	iorlw	0
  6888  00070E  E128               	bnz	l14128
  6889                           
  6890                           ; BSR set to: 0
  6891  000710  0101               	movlb	1	; () banked
  6892  000712  EE20 F004          	lfsr	2,4
  6893  000716  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6894  000718  26D9               	addwf	fsr2l,f,c
  6895  00071A  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6896  00071C  22DA               	addwfc	fsr2h,f,c
  6897  00071E  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  6898  000722  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  6899  000726  ECEA  F037         	call	_isBroadcastAddress	;wreg free
  6900  00072A  0900               	iorlw	0
  6901  00072C  E119               	bnz	l14128
  6902                           
  6903                           ; BSR set to: 0
  6904  00072E  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  6905  000732  0900               	iorlw	0
  6906  000734  E17F               	bnz	l14152
  6907                           
  6908                           ; BSR set to: 1
  6909  000736  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
  6910  00073A  C07B  F07D         	movff	?_CoordinatorGenericAddress,isSameAddress@a1
  6911  00073E  C07C  F07E         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a1+1
  6912  000742  0101               	movlb	1	; () banked
  6913  000744  EE20 F004          	lfsr	2,4
  6914  000748  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6915  00074A  26D9               	addwf	fsr2l,f,c
  6916  00074C  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6917  00074E  22DA               	addwfc	fsr2h,f,c
  6918  000750  CFDE F07F          	movff	postinc2,isSameAddress@a2
  6919  000754  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  6920  000758  ECB1  F03A         	call	_isSameAddress	;wreg free
  6921  00075C  0900               	iorlw	0
  6922  00075E  E06A               	bz	l14152
  6923  000760                     l14128:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;NetworkBridge.c: 95: {
  6927                           ;NetworkBridge.c: 98: if( (dhdr->Hops>0) && ((isBroadcastAddress(dhdr->target) ) || ((is
      +                          Broadcast==1) && (NetworkGetDeviceType()==DeviceCoordinator) ) ))
  6928  000760  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6929  000764  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6930  000768  50DF               	movf	indf2,w,c
  6931  00076A  E029               	bz	l14140
  6932                           
  6933                           ; BSR set to: 0
  6934  00076C  0101               	movlb	1	; () banked
  6935  00076E  EE20 F004          	lfsr	2,4
  6936  000772  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6937  000774  26D9               	addwf	fsr2l,f,c
  6938  000776  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6939  000778  22DA               	addwfc	fsr2h,f,c
  6940  00077A  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  6941  00077E  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  6942  000782  ECEA  F037         	call	_isBroadcastAddress	;wreg free
  6943  000786  0900               	iorlw	0
  6944  000788  E107               	bnz	l14136
  6945                           
  6946                           ; BSR set to: 0
  6947  00078A  0101               	movlb	1	; () banked
  6948  00078C  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6949  00078E  E117               	bnz	l14140
  6950                           
  6951                           ; BSR set to: 1
  6952  000790  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  6953  000794  0900               	iorlw	0
  6954  000796  E113               	bnz	l14140
  6955  000798                     l14136:
  6956                           
  6957                           ;NetworkBridge.c: 99: {
  6958                           ;NetworkBridge.c: 100: dhdr->Hops--;
  6959  000798  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  6960  00079C  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  6961  0007A0  06DF               	decf	indf2,f,c
  6962                           
  6963                           ;NetworkBridge.c: 101: BroadcastManagerDelaySend(data,size,isSecure,0);
  6964  0007A2  C18A  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  6965  0007A6  C18B  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  6966  0007AA  C18C  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  6967  0007AE  C18D  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  6968  0007B2  C190  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  6969  0007B6  0100               	movlb	0	; () banked
  6970  0007B8  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  6971  0007BA  EC52  F01D         	call	_BroadcastManagerDelaySend	;wreg free
  6972  0007BE                     l14140:
  6973                           
  6974                           ;NetworkBridge.c: 102: }
  6975                           ;NetworkBridge.c: 103: if(isBroadcast==0)
  6976  0007BE  0101               	movlb	1	; () banked
  6977  0007C0  518F               	movf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6978  0007C2  E119               	bnz	l14148
  6979                           
  6980                           ; BSR set to: 1
  6981                           ;NetworkBridge.c: 104: {
  6982                           ;NetworkBridge.c: 105: child=dhdr->origin;
  6983  0007C4  EE20 F006          	lfsr	2,6
  6984  0007C8  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6985  0007CA  26D9               	addwf	fsr2l,f,c
  6986  0007CC  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6987  0007CE  22DA               	addwfc	fsr2h,f,c
  6988  0007D0  CFDE F19C          	movff	postinc2,radioReceivedPacket@child
  6989  0007D4  CFDD F19D          	movff	postdec2,radioReceivedPacket@child+1
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;NetworkBridge.c: 106: parent=source;
  6993  0007D8  C186  F19E         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  6994  0007DC  C187  F19F         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  6995                           
  6996                           ; BSR set to: 1
  6997                           ;NetworkBridge.c: 107: TunnelManagerSetTunnel(&child, &parent);
  6998  0007E0  0E9C               	movlw	low radioReceivedPacket@child
  6999  0007E2  0100               	movlb	0	; () banked
  7000  0007E4  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7001  0007E6  0E01               	movlw	high radioReceivedPacket@child
  7002  0007E8  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7003  0007EA  0E9E               	movlw	low radioReceivedPacket@parent
  7004  0007EC  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7005  0007EE  0E01               	movlw	high radioReceivedPacket@parent
  7006  0007F0  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7007  0007F2  EC9E  F013         	call	_TunnelManagerSetTunnel	;wreg free
  7008  0007F6                     l14148:
  7009                           
  7010                           ;NetworkBridge.c: 108: }
  7011                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7012  0007F6  0101               	movlb	1	; () banked
  7013  0007F8  EE20 F004          	lfsr	2,4
  7014  0007FC  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7015  0007FE  26D9               	addwf	fsr2l,f,c
  7016  000800  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7017  000802  22DA               	addwfc	fsr2h,f,c
  7018  000804  CFDE F07B          	movff	postinc2,isBroadcastAddress@address
  7019  000808  CFDD F07C          	movff	postdec2,isBroadcastAddress@address+1
  7020  00080C  ECEA  F037         	call	_isBroadcastAddress	;wreg free
  7021  000810  0101               	movlb	1	; () banked
  7022  000812  6F93               	movwf	_radioReceivedPacket$5373& (0+255),b
  7023                           
  7024                           ; BSR set to: 1
  7025                           ;NetworkBridge.c: 108: }
  7026                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7027  000814  C18A  F0DC         	movff	radioReceivedPacket@data,NetworkManagerProcessIncomingData@data
  7028  000818  C18B  F0DD         	movff	radioReceivedPacket@data+1,NetworkManagerProcessIncomingData@data+1
  7029  00081C  C18C  F0DE         	movff	radioReceivedPacket@size,NetworkManagerProcessIncomingData@size
  7030  000820  C18D  F0DF         	movff	radioReceivedPacket@size+1,NetworkManagerProcessIncomingData@size+1
  7031  000824  C193  F0E0         	movff	_radioReceivedPacket$5373,NetworkManagerProcessIncomingData@isBroadcast
  7032  000828  C190  F0E1         	movff	radioReceivedPacket@isSecure,NetworkManagerProcessIncomingData@isSecure
  7033  00082C  EC04  F016         	call	_NetworkManagerProcessIncomingData	;wreg free
  7034                           
  7035                           ;NetworkBridge.c: 111: }else
  7036  000830  EF45  F03C         	goto	_radioDiscardPacket
  7037  000834                     l14152:
  7038                           
  7039                           ;NetworkBridge.c: 112: {
  7040                           ;NetworkBridge.c: 114: if(isBroadcast==1)
  7041  000834  0101               	movlb	1	; () banked
  7042  000836  058F               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7043  000838  E11C               	bnz	l14160
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;NetworkBridge.c: 115: {
  7047                           ;NetworkBridge.c: 116: if(dhdr->Hops>0)
  7048  00083A  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7049  00083E  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7050  000842  50DF               	movf	indf2,w,c
  7051  000844  E101 D16C          	bz	l14246
  7052                           
  7053                           ; BSR set to: 1
  7054                           ;NetworkBridge.c: 117: {
  7055                           ;NetworkBridge.c: 118: dhdr->Hops--;
  7056  000848  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7057  00084C  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7058  000850  06DF               	decf	indf2,f,c
  7059  000852                     l14158:
  7060                           
  7061                           ;NetworkBridge.c: 119: BroadcastManagerDelaySend(data,size,isSecure,0);
  7062  000852  C18A  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  7063  000856  C18B  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  7064  00085A  C18C  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  7065  00085E  C18D  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  7066  000862  C190  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  7067  000866  0100               	movlb	0	; () banked
  7068  000868  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  7069  00086A  EC52  F01D         	call	_BroadcastManagerDelaySend	;wreg free
  7070  00086E  EF45  F03C         	goto	_radioDiscardPacket
  7071  000872                     l14160:
  7072                           
  7073                           ; BSR set to: 1
  7074  000872  EE20 F004          	lfsr	2,4
  7075  000876  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7076  000878  26D9               	addwf	fsr2l,f,c
  7077  00087A  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7078  00087C  22DA               	addwfc	fsr2h,f,c
  7079  00087E  CFDE F07D          	movff	postinc2,isSameAddress@a1
  7080  000882  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  7081  000886  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
  7082  00088A  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  7083  00088E  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  7084  000892  ECB1  F03A         	call	_isSameAddress	;wreg free
  7085  000896  06E8               	decf	wreg,f,c
  7086  000898  E12B               	bnz	l14170
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;NetworkBridge.c: 122: {
  7090                           ;NetworkBridge.c: 124: child=dhdr->origin;
  7091  00089A  0101               	movlb	1	; () banked
  7092  00089C  EE20 F006          	lfsr	2,6
  7093  0008A0  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7094  0008A2  26D9               	addwf	fsr2l,f,c
  7095  0008A4  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7096  0008A6  22DA               	addwfc	fsr2h,f,c
  7097  0008A8  CFDE F19C          	movff	postinc2,radioReceivedPacket@child
  7098  0008AC  CFDD F19D          	movff	postdec2,radioReceivedPacket@child+1
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;NetworkBridge.c: 125: parent=source;
  7102  0008B0  C186  F19E         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  7103  0008B4  C187  F19F         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  7104                           
  7105                           ; BSR set to: 1
  7106                           ;NetworkBridge.c: 126: TunnelManagerSetTunnel(&child, &parent);
  7107  0008B8  0E9C               	movlw	low radioReceivedPacket@child
  7108  0008BA  0100               	movlb	0	; () banked
  7109  0008BC  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7110  0008BE  0E01               	movlw	high radioReceivedPacket@child
  7111  0008C0  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7112  0008C2  0E9E               	movlw	low radioReceivedPacket@parent
  7113  0008C4  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7114  0008C6  0E01               	movlw	high radioReceivedPacket@parent
  7115  0008C8  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7116  0008CA  EC9E  F013         	call	_TunnelManagerSetTunnel	;wreg free
  7117  0008CE                     l14168:
  7118                           
  7119                           ;NetworkBridge.c: 127: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
  7120  0008CE  C18A  F08A         	movff	radioReceivedPacket@data,TMSendFormedPacketTowardsCoordinator@data
  7121  0008D2  C18B  F08B         	movff	radioReceivedPacket@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  7122  0008D6  C18C  F08C         	movff	radioReceivedPacket@size,TMSendFormedPacketTowardsCoordinator@size
  7123  0008DA  C18D  F08D         	movff	radioReceivedPacket@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  7124  0008DE  0E01               	movlw	1
  7125  0008E0  0100               	movlb	0	; () banked
  7126  0008E2  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  7127  0008E4  C190  F08F         	movff	radioReceivedPacket@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  7128  0008E8  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  7129                           
  7130                           ;NetworkBridge.c: 128: }else
  7131  0008EC  EF45  F03C         	goto	_radioDiscardPacket
  7132  0008F0                     l14170:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;NetworkBridge.c: 129: {
  7136                           ;NetworkBridge.c: 138: if(dhdr->packettype==PacketRoutedData)
  7137  0008F0  0101               	movlb	1	; () banked
  7138  0008F2  EE20 F002          	lfsr	2,2
  7139  0008F6  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7140  0008F8  26D9               	addwf	fsr2l,f,c
  7141  0008FA  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7142  0008FC  22DA               	addwfc	fsr2h,f,c
  7143  0008FE  0E26               	movlw	38
  7144  000900  18DE               	xorwf	postinc2,w,c
  7145  000902  E125               	bnz	l1156
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;NetworkBridge.c: 139: {
  7149                           ;NetworkBridge.c: 142: child=dhdr->origin;
  7150  000904  EE20 F006          	lfsr	2,6
  7151  000908  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7152  00090A  26D9               	addwf	fsr2l,f,c
  7153  00090C  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7154  00090E  22DA               	addwfc	fsr2h,f,c
  7155  000910  CFDE F19C          	movff	postinc2,radioReceivedPacket@child
  7156  000914  CFDD F19D          	movff	postdec2,radioReceivedPacket@child+1
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;NetworkBridge.c: 143: parent=source;
  7160  000918  C186  F19E         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  7161  00091C  C187  F19F         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;NetworkBridge.c: 144: TunnelManagerSetTunnel(&child, &parent);
  7165  000920  0E9C               	movlw	low radioReceivedPacket@child
  7166  000922  0100               	movlb	0	; () banked
  7167  000924  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7168  000926  0E01               	movlw	high radioReceivedPacket@child
  7169  000928  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7170  00092A  0E9E               	movlw	low radioReceivedPacket@parent
  7171  00092C  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7172  00092E  0E01               	movlw	high radioReceivedPacket@parent
  7173  000930  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7174  000932  EC9E  F013         	call	_TunnelManagerSetTunnel	;wreg free
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;NetworkBridge.c: 145: if(NetworkGetDeviceType()==DeviceCoordinator)
  7178  000936  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  7179  00093A  0900               	iorlw	0
  7180  00093C  E108               	bnz	l1156
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;NetworkBridge.c: 146: {
  7184                           ;NetworkBridge.c: 147: dhdr->packettype=PacketData;
  7185  00093E  EE20 F002          	lfsr	2,2
  7186  000942  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7187  000944  26D9               	addwf	fsr2l,f,c
  7188  000946  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7189  000948  22DA               	addwfc	fsr2h,f,c
  7190  00094A  0E23               	movlw	35
  7191  00094C  6EDF               	movwf	indf2,c
  7192  00094E                     l1156:
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;NetworkBridge.c: 148: }
  7196                           ;NetworkBridge.c: 149: }
  7197                           ;NetworkBridge.c: 150: child=dhdr->target;
  7198  00094E  EE20 F004          	lfsr	2,4
  7199  000952  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7200  000954  26D9               	addwf	fsr2l,f,c
  7201  000956  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7202  000958  22DA               	addwfc	fsr2h,f,c
  7203  00095A  CFDE F19C          	movff	postinc2,radioReceivedPacket@child
  7204  00095E  CFDD F19D          	movff	postdec2,radioReceivedPacket@child+1
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;NetworkBridge.c: 151: if(DeviceManagerGetDeviceType(child)==DeviceSleepingRFD)
  7208  000962  C19C  F081         	movff	radioReceivedPacket@child,DeviceManagerGetDeviceType@address
  7209  000966  C19D  F082         	movff	radioReceivedPacket@child+1,DeviceManagerGetDeviceType@address+1
  7210  00096A  ECB6  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  7211  00096E  0A02               	xorlw	2
  7212  000970  E114               	bnz	l14186
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;NetworkBridge.c: 152: {
  7216                           ;NetworkBridge.c: 154: DeviceManagerBufferDeviceData(child,data,size,isSecure,1);
  7217  000972  C19C  F07F         	movff	radioReceivedPacket@child,DeviceManagerBufferDeviceData@address
  7218  000976  C19D  F080         	movff	radioReceivedPacket@child+1,DeviceManagerBufferDeviceData@address+1
  7219  00097A  C18A  F081         	movff	radioReceivedPacket@data,DeviceManagerBufferDeviceData@data
  7220  00097E  C18B  F082         	movff	radioReceivedPacket@data+1,DeviceManagerBufferDeviceData@data+1
  7221  000982  C18C  F083         	movff	radioReceivedPacket@size,DeviceManagerBufferDeviceData@size
  7222  000986  C18D  F084         	movff	radioReceivedPacket@size+1,DeviceManagerBufferDeviceData@size+1
  7223  00098A  C190  F085         	movff	radioReceivedPacket@isSecure,DeviceManagerBufferDeviceData@isSecure
  7224  00098E  0E01               	movlw	1
  7225  000990  6F86               	movwf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  7226  000992  EC0D  F03C         	call	_DeviceManagerBufferDeviceData	;wreg free
  7227                           
  7228                           ;NetworkBridge.c: 155: }else
  7229  000996  EF45  F03C         	goto	_radioDiscardPacket
  7230  00099A                     l14186:
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;NetworkBridge.c: 156: {
  7234                           ;NetworkBridge.c: 157: parent = TunnelManagerGetTunnel(child);
  7235  00099A  C19C  F0AB         	movff	radioReceivedPacket@child,TunnelManagerGetTunnel@device
  7236  00099E  C19D  F0AC         	movff	radioReceivedPacket@child+1,TunnelManagerGetTunnel@device+1
  7237  0009A2  EC4C  F020         	call	_TunnelManagerGetTunnel	;wreg free
  7238  0009A6  C0AB  F19E         	movff	?_TunnelManagerGetTunnel,radioReceivedPacket@parent
  7239  0009AA  C0AC  F19F         	movff	?_TunnelManagerGetTunnel+1,radioReceivedPacket@parent+1
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;NetworkBridge.c: 158: if(isBroadcastAddress(parent)==1)
  7243  0009AE  C19E  F07B         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  7244  0009B2  C19F  F07C         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  7245  0009B6  ECEA  F037         	call	_isBroadcastAddress	;wreg free
  7246  0009BA  06E8               	decf	wreg,f,c
  7247  0009BC  E17C               	bnz	l14232
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;NetworkBridge.c: 159: {
  7251                           ;NetworkBridge.c: 160: if(dhdr->packettype==PacketRoutedData)
  7252  0009BE  0101               	movlb	1	; () banked
  7253  0009C0  EE20 F002          	lfsr	2,2
  7254  0009C4  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7255  0009C6  26D9               	addwf	fsr2l,f,c
  7256  0009C8  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7257  0009CA  22DA               	addwfc	fsr2h,f,c
  7258  0009CC  0E26               	movlw	38
  7259  0009CE  18DE               	xorwf	postinc2,w,c
  7260  0009D0  E001 D0A0          	bnz	l14242
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;NetworkBridge.c: 161: {
  7264                           ;NetworkBridge.c: 162: parent=GetRouteAddressOfChild(dhdr->target);
  7265  0009D4  EE20 F004          	lfsr	2,4
  7266  0009D8  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7267  0009DA  26D9               	addwf	fsr2l,f,c
  7268  0009DC  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7269  0009DE  22DA               	addwfc	fsr2h,f,c
  7270  0009E0  CFDE F08B          	movff	postinc2,GetRouteAddressOfChild@child
  7271  0009E4  CFDD F08C          	movff	postdec2,GetRouteAddressOfChild@child+1
  7272  0009E8  EC2B  F035         	call	_GetRouteAddressOfChild	;wreg free
  7273  0009EC  C08B  F19E         	movff	?_GetRouteAddressOfChild,radioReceivedPacket@parent
  7274  0009F0  C08C  F19F         	movff	?_GetRouteAddressOfChild+1,radioReceivedPacket@parent+1
  7275                           
  7276                           ;NetworkBridge.c: 163: if(isBroadcastAddress(parent)==0)
  7277  0009F4  C19E  F07B         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  7278  0009F8  C19F  F07C         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  7279  0009FC  ECEA  F037         	call	_isBroadcastAddress	;wreg free
  7280  000A00  0900               	iorlw	0
  7281  000A02  E145               	bnz	l14218
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;NetworkBridge.c: 164: {
  7285                           ;NetworkBridge.c: 166: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  7286  000A04  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  7287  000A08  0900               	iorlw	0
  7288  000A0A  E00F               	bz	l14202
  7289                           
  7290                           ; BSR set to: 1
  7291  000A0C  C19E  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  7292  000A10  C19F  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  7293  000A14  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
  7294  000A18  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  7295  000A1C  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  7296  000A20  ECB1  F03A         	call	_isSameAddress	;wreg free
  7297  000A24  0900               	iorlw	0
  7298  000A26  E001 D752          	bnz	l14168
  7299  000A2A                     l14202:
  7300                           
  7301                           ;NetworkBridge.c: 170: {
  7302                           ;NetworkBridge.c: 171: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  7303  000A2A  C19E  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  7304  000A2E  C19F  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  7305  000A32  EC17  F03C         	call	_NetworkGetPANID	;wreg free
  7306  000A36  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  7307  000A3A  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  7308  000A3E  C18A  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  7309  000A42  C18B  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  7310  000A46  C18C  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  7311  000A4A  C190  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  7312  000A4E  ECDC  F036         	call	_radioUnicast	;wreg free
  7313  000A52  0900               	iorlw	0
  7314  000A54  E165               	bnz	l14246
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;NetworkBridge.c: 172: {
  7318                           ;NetworkBridge.c: 173: LE_RemoveNeighborDevice(parent);
  7319  000A56  C19E  F097         	movff	radioReceivedPacket@parent,LE_RemoveNeighborDevice@device
  7320  000A5A  C19F  F098         	movff	radioReceivedPacket@parent+1,LE_RemoveNeighborDevice@device+1
  7321  000A5E  EC37  F034         	call	_LE_RemoveNeighborDevice	;wreg free
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;NetworkBridge.c: 174: if(isSameAddress(dhdr->target,parent)==1)
  7325  000A62  0101               	movlb	1	; () banked
  7326  000A64  EE20 F004          	lfsr	2,4
  7327  000A68  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7328  000A6A  26D9               	addwf	fsr2l,f,c
  7329  000A6C  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7330  000A6E  22DA               	addwfc	fsr2h,f,c
  7331  000A70  CFDE F07D          	movff	postinc2,isSameAddress@a1
  7332  000A74  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  7333  000A78  C19E  F07F         	movff	radioReceivedPacket@parent,isSameAddress@a2
  7334  000A7C  C19F  F080         	movff	radioReceivedPacket@parent+1,isSameAddress@a2+1
  7335  000A80  ECB1  F03A         	call	_isSameAddress	;wreg free
  7336  000A84  06E8               	decf	wreg,f,c
  7337  000A86  E14C               	bnz	l14246
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;NetworkBridge.c: 175: {
  7341                           ;NetworkBridge.c: 178: if(NetworkGetDeviceType()==DeviceCoordinator)
  7342  000A88  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  7343  000A8C  D002               	goto	L16
  7344  000A8E                     l14218:
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;NetworkBridge.c: 193: {
  7348                           ;NetworkBridge.c: 195: if(NetworkGetDeviceType()==DeviceCoordinator)
  7349  000A8E  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  7350  000A92                     L16:
  7351  000A92  0900               	iorlw	0
  7352  000A94  E001 D71B          	bnz	l14168
  7353                           
  7354                           ; BSR set to: 1
  7355                           ;NetworkBridge.c: 196: {
  7356                           ;NetworkBridge.c: 198: dhdr->Hops=20;
  7357  000A98  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7358  000A9C  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7359  000AA0  0E14               	movlw	20
  7360  000AA2  6EDF               	movwf	indf2,c
  7361                           
  7362                           ; BSR set to: 1
  7363                           ;NetworkBridge.c: 199: dhdr->packettype=PacketData;
  7364  000AA4  EE20 F002          	lfsr	2,2
  7365  000AA8  51A0               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7366  000AAA  26D9               	addwf	fsr2l,f,c
  7367  000AAC  51A1               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7368  000AAE  22DA               	addwfc	fsr2h,f,c
  7369  000AB0  0E23               	movlw	35
  7370  000AB2                     L3:
  7371  000AB2  6EDF               	movwf	indf2,c
  7372  000AB4  D6CE               	goto	l14158
  7373  000AB6                     l14232:
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;NetworkBridge.c: 213: {
  7377                           ;NetworkBridge.c: 215: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  7378  000AB6  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  7379  000ABA  0900               	iorlw	0
  7380  000ABC  E00F               	bz	l14238
  7381                           
  7382                           ; BSR set to: 1
  7383  000ABE  C19E  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  7384  000AC2  C19F  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  7385  000AC6  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
  7386  000ACA  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  7387  000ACE  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  7388  000AD2  ECB1  F03A         	call	_isSameAddress	;wreg free
  7389  000AD6  0900               	iorlw	0
  7390  000AD8  E001 D6F9          	bnz	l14168
  7391  000ADC                     l14238:
  7392                           
  7393                           ;NetworkBridge.c: 219: {
  7394                           ;NetworkBridge.c: 220: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  7395  000ADC  C19E  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  7396  000AE0  C19F  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  7397  000AE4  EC17  F03C         	call	_NetworkGetPANID	;wreg free
  7398  000AE8  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  7399  000AEC  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  7400  000AF0  C18A  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  7401  000AF4  C18B  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  7402  000AF8  C18C  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  7403  000AFC  C190  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  7404  000B00  ECDC  F036         	call	_radioUnicast	;wreg free
  7405  000B04  0900               	iorlw	0
  7406  000B06  E10C               	bnz	l14246
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;NetworkBridge.c: 221: {
  7410                           ;NetworkBridge.c: 222: TunnelManagerInvalidateTunnel(child);
  7411  000B08  C19C  F081         	movff	radioReceivedPacket@child,TunnelManagerInvalidateTunnel@device
  7412  000B0C  C19D  F082         	movff	radioReceivedPacket@child+1,TunnelManagerInvalidateTunnel@device+1
  7413  000B10  ECE4  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
  7414  000B14                     l14242:
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;NetworkBridge.c: 223: dhdr->Hops=20;
  7418  000B14  C1A0  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7419  000B18  C1A1  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7420  000B1C  0E14               	movlw	20
  7421  000B1E  D7C9               	goto	L3
  7422  000B20                     l14246:
  7423                           
  7424                           ;NetworkBridge.c: 225: }
  7425                           ;NetworkBridge.c: 226: }
  7426                           ;NetworkBridge.c: 227: }
  7427                           ;NetworkBridge.c: 228: }
  7428                           ;NetworkBridge.c: 229: }
  7429                           ;NetworkBridge.c: 230: }
  7430                           ;NetworkBridge.c: 231: }
  7431                           ;NetworkBridge.c: 232: }
  7432                           ;NetworkBridge.c: 233: }
  7433                           ;NetworkBridge.c: 234: radioDiscardPacket();
  7434  000B20  EF45  F03C         	goto	_radioDiscardPacket	;wreg free
  7435  000B24                     __end_of_radioReceivedPacket:
  7436                           	opt stack 0
  7437                           tblptru	equ	0xFF8
  7438                           tblptrh	equ	0xFF7
  7439                           tblptrl	equ	0xFF6
  7440                           tablat	equ	0xFF5
  7441                           prodh	equ	0xFF4
  7442                           prodl	equ	0xFF3
  7443                           intcon3	equ	0xFF0
  7444                           postinc0	equ	0xFEE
  7445                           wreg	equ	0xFE8
  7446                           postdec1	equ	0xFE5
  7447                           fsr1h	equ	0xFE2
  7448                           fsr1l	equ	0xFE1
  7449                           indf2	equ	0xFDF
  7450                           postinc2	equ	0xFDE
  7451                           postdec2	equ	0xFDD
  7452                           fsr2h	equ	0xFDA
  7453                           fsr2l	equ	0xFD9
  7454                           status	equ	0xFD8
  7455                           
  7456 ;; *************** function _radioDiscardPacket *****************
  7457 ;; Defined at:
  7458 ;;		line 143 in file "../src/Bridge.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;		None
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7467 ;; Tracked objects:
  7468 ;;		On entry : E/0
  7469 ;;		On exit  : E/0
  7470 ;;		Unchanged: E/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;Total ram usage:        0 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    6
  7479 ;; This function calls:
  7480 ;;		_MiMAC_DiscardPacket
  7481 ;; This function is called by:
  7482 ;;		_radioReceivedPacket
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text16
  7487  00788A                     __ptext16:
  7488                           	opt stack 0
  7489  00788A                     _radioDiscardPacket:
  7490                           	opt stack 21
  7491                           
  7492                           ;Bridge.c: 145: MiMAC_DiscardPacket();
  7493                           
  7494                           ;incstack = 0
  7495  00788A  EF1A  F03B         	goto	_MiMAC_DiscardPacket	;wreg free
  7496  00788E                     __end_of_radioDiscardPacket:
  7497                           	opt stack 0
  7498                           tblptru	equ	0xFF8
  7499                           tblptrh	equ	0xFF7
  7500                           tblptrl	equ	0xFF6
  7501                           tablat	equ	0xFF5
  7502                           prodh	equ	0xFF4
  7503                           prodl	equ	0xFF3
  7504                           intcon3	equ	0xFF0
  7505                           postinc0	equ	0xFEE
  7506                           wreg	equ	0xFE8
  7507                           postdec1	equ	0xFE5
  7508                           fsr1h	equ	0xFE2
  7509                           fsr1l	equ	0xFE1
  7510                           indf2	equ	0xFDF
  7511                           postinc2	equ	0xFDE
  7512                           postdec2	equ	0xFDD
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _MiMAC_DiscardPacket *****************
  7518 ;; Defined at:
  7519 ;;		line 1131 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7528 ;; Tracked objects:
  7529 ;;		On entry : E/0
  7530 ;;		On exit  : E/0
  7531 ;;		Unchanged: E/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    5
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_radioDiscardPacket
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text17
  7548  007634                     __ptext17:
  7549                           	opt stack 0
  7550  007634                     _MiMAC_DiscardPacket:
  7551                           	opt stack 21
  7552                           
  7553                           ;drv_mrf_miwi_mesh_89xa.c: 1133: if( ReceivedBankIndex < 2 )
  7554                           
  7555                           ;incstack = 0
  7556  007634  0E02               	movlw	2
  7557  007636  603E               	cpfslt	_ReceivedBankIndex,c
  7558  007638  0C02               	retlw	2
  7559                           
  7560                           ;drv_mrf_miwi_mesh_89xa.c: 1134: {
  7561                           ;drv_mrf_miwi_mesh_89xa.c: 1135: RxPacket[ReceivedBankIndex].flags.Val = 0;
  7562  00763A  503E               	movf	_ReceivedBankIndex,w,c
  7563  00763C  0D47               	mullw	71
  7564  00763E  0E00               	movlw	low _RxPacket
  7565  007640  24F3               	addwf	prodl,w,c
  7566  007642  6ED9               	movwf	fsr2l,c
  7567  007644  0E03               	movlw	high _RxPacket
  7568  007646  20F4               	addwfc	prodh,w,c
  7569  007648  6EDA               	movwf	fsr2h,c
  7570  00764A  0E00               	movlw	0
  7571  00764C  6ADF               	clrf	indf2,c
  7572                           
  7573                           ;drv_mrf_miwi_mesh_89xa.c: 1136: ReceivedBankIndex = 0xFF;
  7574  00764E  683E               	setf	_ReceivedBankIndex,c
  7575  007650  0012               	return		;funcret
  7576  007652                     __end_of_MiMAC_DiscardPacket:
  7577                           	opt stack 0
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           prodh	equ	0xFF4
  7583                           prodl	equ	0xFF3
  7584                           intcon3	equ	0xFF0
  7585                           postinc0	equ	0xFEE
  7586                           wreg	equ	0xFE8
  7587                           postdec1	equ	0xFE5
  7588                           fsr1h	equ	0xFE2
  7589                           fsr1l	equ	0xFE1
  7590                           indf2	equ	0xFDF
  7591                           postinc2	equ	0xFDE
  7592                           postdec2	equ	0xFDD
  7593                           fsr2h	equ	0xFDA
  7594                           fsr2l	equ	0xFD9
  7595                           status	equ	0xFD8
  7596                           
  7597 ;; *************** function _isKnownPacket *****************
  7598 ;; Defined at:
  7599 ;;		line 17 in file "../Cache.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  hash            4   75[BANK0 ] unsigned long 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  zeros          12   85[BANK0 ] unsigned char [12]
  7604 ;;  OldestTick      8  104[BANK0 ] struct TickMS_t_def
  7605 ;;  i               2  112[BANK0 ] unsigned int 
  7606 ;;  emptyindex      2  102[BANK0 ] unsigned int 
  7607 ;;  index           2  100[BANK0 ] unsigned int 
  7608 ;;  oldestindex     2   98[BANK0 ] unsigned int 
  7609 ;;  unknown         1   97[BANK0 ] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      unsigned char 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : F/0
  7616 ;;		On exit  : F/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;Total ram usage:       39 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    9
  7626 ;; This function calls:
  7627 ;;		_MSTickGet
  7628 ;;		_MSTickGetDiffNow
  7629 ;;		_memcmp
  7630 ;;		_memset
  7631 ;; This function is called by:
  7632 ;;		_radioReceivedPacket
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text18
  7637  0024CE                     __ptext18:
  7638                           	opt stack 0
  7639  0024CE                     _isKnownPacket:
  7640                           	opt stack 18
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;Cache.c: 19: uint16_t i;
  7644                           ;Cache.c: 20: uint16_t oldestindex=0xffff;
  7645                           
  7646                           ;incstack = 0
  7647  0024CE  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  7648  0024D0  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  7649                           
  7650                           ;Cache.c: 21: uint16_t emptyindex=0xffff;
  7651  0024D2  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  7652  0024D4  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;Cache.c: 23: bool unknown=1;
  7656  0024D6  0E01               	movlw	1
  7657  0024D8  6FC1               	movwf	isKnownPacket@unknown& (0+255),b
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;Cache.c: 24: uint8_t zeros[sizeof(HashCache_t)];;
  7661                           ;Cache.c: 26: TickMS OldestTick;
  7662                           ;Cache.c: 28: memset(&OldestTick,0xff,sizeof(OldestTick));
  7663  0024DA  0EC8               	movlw	low isKnownPacket@OldestTick
  7664  0024DC  6F73               	movwf	memset@p1& (0+255),b
  7665  0024DE  6B74               	clrf	(memset@p1+1)& (0+255),b
  7666  0024E0  6B76               	clrf	(memset@c+1)& (0+255),b
  7667  0024E2  6975               	setf	memset@c& (0+255),b
  7668  0024E4  6B78               	clrf	(memset@n+1)& (0+255),b
  7669  0024E6  0E08               	movlw	8
  7670  0024E8  6F77               	movwf	memset@n& (0+255),b
  7671  0024EA  EC4C  F03A         	call	_memset	;wreg free
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;Cache.c: 29: memset(zeros,0x00,sizeof(zeros));
  7675  0024EE  0EB5               	movlw	low isKnownPacket@zeros
  7676  0024F0  6F73               	movwf	memset@p1& (0+255),b
  7677  0024F2  6B74               	clrf	(memset@p1+1)& (0+255),b
  7678  0024F4  6B76               	clrf	(memset@c+1)& (0+255),b
  7679  0024F6  6B75               	clrf	memset@c& (0+255),b
  7680  0024F8  6B78               	clrf	(memset@n+1)& (0+255),b
  7681  0024FA  0E0C               	movlw	12
  7682  0024FC  6F77               	movwf	memset@n& (0+255),b
  7683  0024FE  EC4C  F03A         	call	_memset	;wreg free
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;Cache.c: 31: for(i=0;i<30;i++)
  7687  002502  6BD0               	clrf	isKnownPacket@i& (0+255),b
  7688  002504  6BD1               	clrf	(isKnownPacket@i+1)& (0+255),b
  7689  002506                     l13328:
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;Cache.c: 32: {
  7693                           ;Cache.c: 33: if(((OldestTick.msb>hc_table[i].RxTimeMs.msb) || ((OldestTick.msb==hc_tabl
      +                          e[i].RxTimeMs.msb) && (OldestTick.lsb>=hc_table[i].RxTimeMs.lsb) ) )==1)
  7694  002506  0E0C               	movlw	12
  7695  002508  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7696  00250A  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7697  00250E  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7698  002512  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7699  002514  50F3               	movf	prodl,w,c
  7700  002516  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7701  002518  0EA0               	movlw	low (_hc_table+8)
  7702  00251A  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7703  00251C  6ED9               	movwf	fsr2l,c
  7704  00251E  0E0A               	movlw	high (_hc_table+8)
  7705  002520  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7706  002522  6EDA               	movwf	fsr2h,c
  7707  002524  51CC               	movf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7708  002526  5CDE               	subwf	postinc2,w,c
  7709  002528  51CD               	movf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7710  00252A  58DE               	subwfb	postinc2,w,c
  7711  00252C  51CE               	movf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7712  00252E  58DE               	subwfb	postinc2,w,c
  7713  002530  51CF               	movf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7714  002532  58DE               	subwfb	postinc2,w,c
  7715  002534  E333               	bnc	l13334
  7716                           
  7717                           ; BSR set to: 0
  7718  002536  0E0C               	movlw	12
  7719  002538  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7720  00253A  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7721  00253E  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7722  002542  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7723  002544  50F3               	movf	prodl,w,c
  7724  002546  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7725  002548  0EA0               	movlw	low (_hc_table+8)
  7726  00254A  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7727  00254C  6ED9               	movwf	fsr2l,c
  7728  00254E  0E0A               	movlw	high (_hc_table+8)
  7729  002550  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7730  002552  6EDA               	movwf	fsr2h,c
  7731  002554  50DE               	movf	postinc2,w,c
  7732  002556  19CC               	xorwf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7733  002558  E13B               	bnz	l13338
  7734  00255A  50DE               	movf	postinc2,w,c
  7735  00255C  19CD               	xorwf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7736  00255E  E138               	bnz	l13338
  7737  002560  50DE               	movf	postinc2,w,c
  7738  002562  19CE               	xorwf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7739  002564  E135               	bnz	l13338
  7740  002566  50DE               	movf	postinc2,w,c
  7741  002568  19CF               	xorwf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7742  00256A  E132               	bnz	l13338
  7743                           
  7744                           ; BSR set to: 0
  7745  00256C  0E0C               	movlw	12
  7746  00256E  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7747  002570  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7748  002574  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7749  002578  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7750  00257A  50F3               	movf	prodl,w,c
  7751  00257C  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7752  00257E  0E9C               	movlw	low (_hc_table+4)
  7753  002580  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7754  002582  6ED9               	movwf	fsr2l,c
  7755  002584  0E0A               	movlw	high (_hc_table+4)
  7756  002586  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7757  002588  6EDA               	movwf	fsr2h,c
  7758  00258A  50DE               	movf	postinc2,w,c
  7759  00258C  5DC8               	subwf	isKnownPacket@OldestTick& (0+255),w,b
  7760  00258E  50DE               	movf	postinc2,w,c
  7761  002590  59C9               	subwfb	(isKnownPacket@OldestTick+1)& (0+255),w,b
  7762  002592  50DE               	movf	postinc2,w,c
  7763  002594  59CA               	subwfb	(isKnownPacket@OldestTick+2)& (0+255),w,b
  7764  002596  50DE               	movf	postinc2,w,c
  7765  002598  59CB               	subwfb	(isKnownPacket@OldestTick+3)& (0+255),w,b
  7766  00259A  E31A               	bnc	l13338
  7767  00259C                     l13334:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;Cache.c: 34: {
  7771                           ;Cache.c: 35: OldestTick=hc_table[i].RxTimeMs;
  7772  00259C  0E0C               	movlw	12
  7773  00259E  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7774  0025A0  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7775  0025A4  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7776  0025A8  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7777  0025AA  50F3               	movf	prodl,w,c
  7778  0025AC  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7779  0025AE  0E9C               	movlw	low (_hc_table+4)
  7780  0025B0  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7781  0025B2  6ED9               	movwf	fsr2l,c
  7782  0025B4  0E0A               	movlw	high (_hc_table+4)
  7783  0025B6  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7784  0025B8  6EDA               	movwf	fsr2h,c
  7785  0025BA  EE10  F0C8         	lfsr	1,isKnownPacket@OldestTick
  7786  0025BE  0E07               	movlw	7
  7787  0025C0                     u14771:
  7788  0025C0  CFDB FFE3          	movff	plusw2,plusw1
  7789  0025C4  06E8               	decf	wreg,f,c
  7790  0025C6  E2FC               	bc	u14771
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;Cache.c: 36: oldestindex=i;
  7794  0025C8  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  7795  0025CC  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  7796  0025D0                     l13338:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;Cache.c: 37: }
  7800                           ;Cache.c: 38: if((emptyindex==0xffff) && (memcmp((uint8_t*)&hc_table[i],zeros,sizeof(zer
      +                          os))==0) )
  7801  0025D0  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  7802  0025D2  E120               	bnz	l13344
  7803  0025D4  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  7804  0025D6  E11E               	bnz	l13344
  7805                           
  7806                           ; BSR set to: 0
  7807  0025D8  0E0C               	movlw	12
  7808  0025DA  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7809  0025DC  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7810  0025E0  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7811  0025E4  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7812  0025E6  50F3               	movf	prodl,w,c
  7813  0025E8  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7814  0025EA  0E98               	movlw	low _hc_table
  7815  0025EC  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7816  0025EE  6F73               	movwf	memcmp@s1& (0+255),b
  7817  0025F0  0E0A               	movlw	high _hc_table
  7818  0025F2  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7819  0025F4  6F74               	movwf	(memcmp@s1+1)& (0+255),b
  7820  0025F6  0EB5               	movlw	low isKnownPacket@zeros
  7821  0025F8  6F75               	movwf	memcmp@s2& (0+255),b
  7822  0025FA  6B76               	clrf	(memcmp@s2+1)& (0+255),b
  7823  0025FC  6B78               	clrf	(memcmp@n+1)& (0+255),b
  7824  0025FE  0E0C               	movlw	12
  7825  002600  6F77               	movwf	memcmp@n& (0+255),b
  7826  002602  EC07  F036         	call	_memcmp	;wreg free
  7827  002606  5173               	movf	?_memcmp& (0+255),w,b
  7828  002608  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
  7829  00260A  E104               	bnz	l13344
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;Cache.c: 39: {
  7833                           ;Cache.c: 40: emptyindex=i;
  7834  00260C  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  7835  002610  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  7836  002614                     l13344:
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;Cache.c: 41: }
  7840                           ;Cache.c: 42: if( hc_table[i].Hash==hash )
  7841  002614  0E0C               	movlw	12
  7842  002616  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7843  002618  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7844  00261C  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7845  002620  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7846  002622  50F3               	movf	prodl,w,c
  7847  002624  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7848  002626  0E98               	movlw	low _hc_table
  7849  002628  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7850  00262A  6ED9               	movwf	fsr2l,c
  7851  00262C  0E0A               	movlw	high _hc_table
  7852  00262E  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7853  002630  6EDA               	movwf	fsr2h,c
  7854  002632  51AB               	movf	isKnownPacket@hash& (0+255),w,b
  7855  002634  18DE               	xorwf	postinc2,w,c
  7856  002636  E138               	bnz	l13350
  7857  002638  51AC               	movf	(isKnownPacket@hash+1)& (0+255),w,b
  7858  00263A  18DE               	xorwf	postinc2,w,c
  7859  00263C  E135               	bnz	l13350
  7860  00263E  51AD               	movf	(isKnownPacket@hash+2)& (0+255),w,b
  7861  002640  18DE               	xorwf	postinc2,w,c
  7862  002642  E132               	bnz	l13350
  7863  002644  51AE               	movf	(isKnownPacket@hash+3)& (0+255),w,b
  7864  002646  18DE               	xorwf	postinc2,w,c
  7865  002648  E12F               	bnz	l13350
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;Cache.c: 43: {
  7869                           ;Cache.c: 44: if(MSTickGetDiffNow(hc_table[i].RxTimeMs)<((SPAN)2*1000ULL))
  7870  00264A  0E0C               	movlw	12
  7871  00264C  03D0               	mulwf	isKnownPacket@i& (0+255),b
  7872  00264E  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7873  002652  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7874  002656  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7875  002658  50F3               	movf	prodl,w,c
  7876  00265A  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7877  00265C  0E9C               	movlw	low (_hc_table+4)
  7878  00265E  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7879  002660  6ED9               	movwf	fsr2l,c
  7880  002662  0E0A               	movlw	high (_hc_table+4)
  7881  002664  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7882  002666  6EDA               	movwf	fsr2h,c
  7883  002668  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
  7884  00266C  0E07               	movlw	7
  7885  00266E                     u14811:
  7886  00266E  CFDB FFEB          	movff	plusw2,plusw0
  7887  002672  06E8               	decf	wreg,f,c
  7888  002674  E2FC               	bc	u14811
  7889  002676  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
  7890  00267A  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
  7891  00267C  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
  7892  00267E  E10F               	bnz	l1730
  7893  002680  0ED0               	movlw	208
  7894  002682  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
  7895  002684  0E07               	movlw	7
  7896  002686  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
  7897  002688  E20A               	bc	l1730
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;Cache.c: 45: {
  7901                           ;Cache.c: 46: emptyindex=i;
  7902  00268A  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  7903  00268E  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  7904                           
  7905                           ;Cache.c: 47: oldestindex=i;
  7906  002692  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  7907  002696  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  7908                           
  7909                           ;Cache.c: 48: unknown=0;
  7910  00269A  6BC1               	clrf	isKnownPacket@unknown& (0+255),b
  7911                           
  7912                           ;Cache.c: 49: }else
  7913  00269C  D00D               	goto	l13354
  7914  00269E                     l1730:
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;Cache.c: 50: {
  7918                           ;Cache.c: 51: emptyindex=0xffff;
  7919  00269E  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  7920  0026A0  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  7921                           
  7922                           ;Cache.c: 52: oldestindex=0xffff;
  7923  0026A2  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  7924  0026A4  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  7925  0026A6  D008               	goto	l13354
  7926  0026A8                     l13350:
  7927                           
  7928                           ; BSR set to: 0
  7929  0026A8  4BD0               	infsnz	isKnownPacket@i& (0+255),f,b
  7930  0026AA  2BD1               	incf	(isKnownPacket@i+1)& (0+255),f,b
  7931                           
  7932                           ; BSR set to: 0
  7933  0026AC  51D1               	movf	(isKnownPacket@i+1)& (0+255),w,b
  7934  0026AE  E104               	bnz	u14830
  7935  0026B0  0E1E               	movlw	30
  7936  0026B2  5DD0               	subwf	isKnownPacket@i& (0+255),w,b
  7937  0026B4  E201 D727          	bnc	l13328
  7938  0026B8                     u14830:
  7939  0026B8                     l13354:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;Cache.c: 55: }
  7943                           ;Cache.c: 56: }
  7944                           ;Cache.c: 57: if(emptyindex!=0xffff)
  7945  0026B8  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  7946  0026BA  E102               	bnz	u14840
  7947  0026BC  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  7948  0026BE  E005               	bz	l1732
  7949  0026C0                     u14840:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;Cache.c: 58: {
  7953                           ;Cache.c: 59: index=emptyindex;
  7954  0026C0  C0C6  F0C4         	movff	isKnownPacket@emptyindex,isKnownPacket@index
  7955  0026C4  C0C7  F0C5         	movff	isKnownPacket@emptyindex+1,isKnownPacket@index+1
  7956                           
  7957                           ;Cache.c: 60: }else
  7958  0026C8  D004               	goto	l13358
  7959  0026CA                     l1732:
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;Cache.c: 61: {
  7963                           ;Cache.c: 62: index=oldestindex;
  7964  0026CA  C0C2  F0C4         	movff	isKnownPacket@oldestindex,isKnownPacket@index
  7965  0026CE  C0C3  F0C5         	movff	isKnownPacket@oldestindex+1,isKnownPacket@index+1
  7966  0026D2                     l13358:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;Cache.c: 63: }
  7970                           ;Cache.c: 64: if(index!=0xffff)
  7971  0026D2  29C4               	incf	isKnownPacket@index& (0+255),w,b
  7972  0026D4  E102               	bnz	u14850
  7973  0026D6  29C5               	incf	(isKnownPacket@index+1)& (0+255),w,b
  7974  0026D8  E02D               	bz	l13364
  7975  0026DA                     u14850:
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;Cache.c: 65: {
  7979                           ;Cache.c: 66: hc_table[index].Hash=hash;
  7980  0026DA  0E0C               	movlw	12
  7981  0026DC  03C4               	mulwf	isKnownPacket@index& (0+255),b
  7982  0026DE  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  7983  0026E2  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  7984  0026E6  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  7985  0026E8  50F3               	movf	prodl,w,c
  7986  0026EA  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7987  0026EC  0E98               	movlw	low _hc_table
  7988  0026EE  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  7989  0026F0  6ED9               	movwf	fsr2l,c
  7990  0026F2  0E0A               	movlw	high _hc_table
  7991  0026F4  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7992  0026F6  6EDA               	movwf	fsr2h,c
  7993  0026F8  C0AB  FFDE         	movff	isKnownPacket@hash,postinc2
  7994  0026FC  C0AC  FFDE         	movff	isKnownPacket@hash+1,postinc2
  7995  002700  C0AD  FFDE         	movff	isKnownPacket@hash+2,postinc2
  7996  002704  C0AE  FFDE         	movff	isKnownPacket@hash+3,postinc2
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;Cache.c: 67: hc_table[index].RxTimeMs=MSTickGet();
  8000  002708  EC58  F039         	call	_MSTickGet	;wreg free
  8001  00270C  0E0C               	movlw	12
  8002  00270E  03C4               	mulwf	isKnownPacket@index& (0+255),b
  8003  002710  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8004  002714  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8005  002718  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  8006  00271A  50F3               	movf	prodl,w,c
  8007  00271C  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8008  00271E  0E9C               	movlw	low (_hc_table+4)
  8009  002720  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8010  002722  6ED9               	movwf	fsr2l,c
  8011  002724  0E0A               	movlw	high (_hc_table+4)
  8012  002726  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8013  002728  6EDA               	movwf	fsr2h,c
  8014  00272A  0E07               	movlw	7
  8015  00272C                     u14861:
  8016  00272C  CFEB FFDB          	movff	plusw0,plusw2
  8017  002730  06E8               	decf	wreg,f,c
  8018  002732  E2FC               	bc	u14861
  8019  002734                     l13364:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;Cache.c: 68: }
  8023                           ;Cache.c: 69: return(!unknown);
  8024  002734  51C1               	movf	isKnownPacket@unknown& (0+255),w,b
  8025  002736  B4D8               	btfsc	status,2,c
  8026  002738  0C01               	retlw	1
  8027                           
  8028                           ; BSR set to: 0
  8029  00273A  0C00               	retlw	0	;funcret
  8030  00273C                     __end_of_isKnownPacket:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon3	equ	0xFF0
  8039                           postinc0	equ	0xFEE
  8040                           plusw0	equ	0xFEB
  8041                           wreg	equ	0xFE8
  8042                           postdec1	equ	0xFE5
  8043                           plusw1	equ	0xFE3
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           plusw2	equ	0xFDB
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _crc32 *****************
  8055 ;; Defined at:
  8056 ;;		line 52 in file "../CRC32.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  crc             4   19[BANK0 ] unsigned long 
  8059 ;;  buf             2   23[BANK0 ] PTR unsigned char 
  8060 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8061 ;;  size            2   25[BANK0 ] unsigned int 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  p               2   37[BANK0 ] PTR unsigned char 
  8064 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  4   19[BANK0 ] unsigned long 
  8067 ;; Registers used:
  8068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8069 ;; Tracked objects:
  8070 ;;		On entry : F/0
  8071 ;;		On exit  : F/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8077 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;Total ram usage:       20 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    5
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_radioReceivedPacket
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text19
  8089  005CBC                     __ptext19:
  8090                           	opt stack 0
  8091  005CBC                     _crc32:
  8092                           	opt stack 22
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;CRC32.c: 54: uint8_t *p;
  8096                           ;CRC32.c: 56: p = buf;
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;incstack = 0
  8100  005CBC  C077  F085         	movff	crc32@buf,crc32@p
  8101  005CC0  C078  F086         	movff	crc32@buf+1,crc32@p+1
  8102                           
  8103                           ;CRC32.c: 57: crc = crc ^ ~0U;
  8104  005CC4  1F73               	comf	crc32@crc& (0+255),f,b
  8105  005CC6  1F74               	comf	(crc32@crc+1)& (0+255),f,b
  8106                           
  8107                           ;CRC32.c: 59: while (size--)
  8108  005CC8  D038               	goto	l13308
  8109  005CCA                     l13304:
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;CRC32.c: 60: crc = crc32_table[(crc ^ *p++) & 0xFF] ^ (crc >> 8);
  8113  005CCA  C085  FFD9         	movff	crc32@p,fsr2l
  8114  005CCE  C086  FFDA         	movff	crc32@p+1,fsr2h
  8115  005CD2  50DF               	movf	indf2,w,c
  8116  005CD4  1973               	xorwf	crc32@crc& (0+255),w,b
  8117  005CD6  6F7B               	movwf	??_crc32& (0+255),b
  8118  005CD8  0E00               	movlw	0
  8119  005CDA  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  8120  005CDC  6F7C               	movwf	(??_crc32+1)& (0+255),b
  8121  005CDE  6B7C               	clrf	(??_crc32+1)& (0+255),b
  8122  005CE0  90D8               	bcf	status,0,c
  8123  005CE2  377B               	rlcf	??_crc32& (0+255),f,b
  8124  005CE4  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  8125  005CE6  90D8               	bcf	status,0,c
  8126  005CE8  377B               	rlcf	??_crc32& (0+255),f,b
  8127  005CEA  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  8128  005CEC  0E09               	movlw	low _crc32_table
  8129  005CEE  257B               	addwf	??_crc32& (0+255),w,b
  8130  005CF0  6EF6               	movwf	tblptrl,c
  8131  005CF2  0EFB               	movlw	high _crc32_table
  8132  005CF4  217C               	addwfc	(??_crc32+1)& (0+255),w,b
  8133  005CF6  6EF7               	movwf	tblptrh,c
  8134  005CF8                     	if	0	;There are less than 3 active tblptr bytes
  8135  005CF8                     	endif
  8136  005CF8  0009               	tblrd		*+
  8137  005CFA  CFF5 F07D          	movff	tablat,??_crc32+2
  8138  005CFE  0009               	tblrd		*+
  8139  005D00  CFF5 F07E          	movff	tablat,??_crc32+3
  8140  005D04  0009               	tblrd		*+
  8141  005D06  CFF5 F07F          	movff	tablat,??_crc32+4
  8142  005D0A  0009               	tblrd		*+
  8143  005D0C  CFF5 F080          	movff	tablat,??_crc32+5
  8144  005D10  5174               	movf	(crc32@crc+1)& (0+255),w,b
  8145  005D12  6F81               	movwf	(??_crc32+6)& (0+255),b
  8146  005D14  5175               	movf	(crc32@crc+2)& (0+255),w,b
  8147  005D16  6F82               	movwf	(??_crc32+7)& (0+255),b
  8148  005D18  5176               	movf	(crc32@crc+3)& (0+255),w,b
  8149  005D1A  6F83               	movwf	(??_crc32+8)& (0+255),b
  8150  005D1C  6B84               	clrf	(??_crc32+9)& (0+255),b
  8151  005D1E  517D               	movf	(??_crc32+2)& (0+255),w,b
  8152  005D20  1981               	xorwf	(??_crc32+6)& (0+255),w,b
  8153  005D22  6F73               	movwf	crc32@crc& (0+255),b
  8154  005D24  517E               	movf	(??_crc32+3)& (0+255),w,b
  8155  005D26  1982               	xorwf	(??_crc32+7)& (0+255),w,b
  8156  005D28  6F74               	movwf	(crc32@crc+1)& (0+255),b
  8157  005D2A  517F               	movf	(??_crc32+4)& (0+255),w,b
  8158  005D2C  1983               	xorwf	(??_crc32+8)& (0+255),w,b
  8159  005D2E  6F75               	movwf	(crc32@crc+2)& (0+255),b
  8160  005D30  5180               	movf	(??_crc32+5)& (0+255),w,b
  8161  005D32  1984               	xorwf	(??_crc32+9)& (0+255),w,b
  8162  005D34  6F76               	movwf	(crc32@crc+3)& (0+255),b
  8163                           
  8164                           ; BSR set to: 0
  8165  005D36  4B85               	infsnz	crc32@p& (0+255),f,b
  8166  005D38  2B86               	incf	(crc32@p+1)& (0+255),f,b
  8167  005D3A                     l13308:
  8168                           
  8169                           ; BSR set to: 0
  8170  005D3A  0779               	decf	crc32@size& (0+255),f,b
  8171  005D3C  A0D8               	btfss	status,0,c
  8172  005D3E  077A               	decf	(crc32@size+1)& (0+255),f,b
  8173  005D40  2979               	incf	crc32@size& (0+255),w,b
  8174  005D42  E1C3               	bnz	l13304
  8175  005D44  297A               	incf	(crc32@size+1)& (0+255),w,b
  8176  005D46  E1C1               	bnz	l13304
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;CRC32.c: 62: return crc ^ ~0U;
  8180  005D48  0EFF               	movlw	255
  8181  005D4A  1973               	xorwf	crc32@crc& (0+255),w,b
  8182  005D4C  6F73               	movwf	?_crc32& (0+255),b
  8183  005D4E  0EFF               	movlw	255
  8184  005D50  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  8185  005D52  6F74               	movwf	(?_crc32+1)& (0+255),b
  8186  005D54  0E00               	movlw	0
  8187  005D56  1975               	xorwf	(crc32@crc+2)& (0+255),w,b
  8188  005D58  6F75               	movwf	(?_crc32+2)& (0+255),b
  8189  005D5A  0E00               	movlw	0
  8190  005D5C  1976               	xorwf	(crc32@crc+3)& (0+255),w,b
  8191  005D5E  6F76               	movwf	(?_crc32+3)& (0+255),b
  8192                           
  8193                           ; BSR set to: 0
  8194  005D60  0012               	return		;funcret
  8195  005D62                     __end_of_crc32:
  8196                           	opt stack 0
  8197                           tblptru	equ	0xFF8
  8198                           tblptrh	equ	0xFF7
  8199                           tblptrl	equ	0xFF6
  8200                           tablat	equ	0xFF5
  8201                           prodh	equ	0xFF4
  8202                           prodl	equ	0xFF3
  8203                           intcon3	equ	0xFF0
  8204                           postinc0	equ	0xFEE
  8205                           plusw0	equ	0xFEB
  8206                           wreg	equ	0xFE8
  8207                           postdec1	equ	0xFE5
  8208                           plusw1	equ	0xFE3
  8209                           fsr1h	equ	0xFE2
  8210                           fsr1l	equ	0xFE1
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           plusw2	equ	0xFDB
  8215                           fsr2h	equ	0xFDA
  8216                           fsr2l	equ	0xFD9
  8217                           status	equ	0xFD8
  8218                           
  8219 ;; *************** function _TunnelManagerSetTunnel *****************
  8220 ;; Defined at:
  8221 ;;		line 22 in file "../TunnelManager.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  device          2   47[BANK0 ] PTR struct addr_t_def
  8224 ;;		 -> radioReceivedPacket@child(2), 
  8225 ;;  parent          2   49[BANK0 ] PTR struct addr_t_def
  8226 ;;		 -> radioReceivedPacket@parent(2), 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  OldestTick      8   63[BANK0 ] struct TickMS_t_def
  8229 ;;  trec            8    0        struct TickMS_t_def
  8230 ;;  i               2   71[BANK0 ] unsigned int 
  8231 ;;  index           2   61[BANK0 ] unsigned int 
  8232 ;;  emptyindex      2   59[BANK0 ] unsigned int 
  8233 ;;  oldestindex     2   57[BANK0 ] unsigned int 
  8234 ;;  unknown         1    0        unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : F/0
  8241 ;;		On exit  : F/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8245 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8246 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8247 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8248 ;;Total ram usage:       26 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    8
  8251 ;; This function calls:
  8252 ;;		_MSTickGet
  8253 ;;		_NetworkAddressSizeGet
  8254 ;;		_isSameAddress
  8255 ;;		_memcpy
  8256 ;;		_memset
  8257 ;; This function is called by:
  8258 ;;		_radioReceivedPacket
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text20
  8263  00273C                     __ptext20:
  8264                           	opt stack 0
  8265  00273C                     _TunnelManagerSetTunnel:
  8266                           	opt stack 19
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;TunnelManager.c: 24: uint16_t i;
  8270                           ;TunnelManager.c: 25: uint16_t oldestindex=0xffff;
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;incstack = 0
  8274  00273C  6999               	setf	TunnelManagerSetTunnel@oldestindex& (0+255),b
  8275  00273E  699A               	setf	(TunnelManagerSetTunnel@oldestindex+1)& (0+255),b
  8276                           
  8277                           ;TunnelManager.c: 26: uint16_t emptyindex=0xffff;
  8278  002740  699B               	setf	TunnelManagerSetTunnel@emptyindex& (0+255),b
  8279  002742  699C               	setf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),b
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;TunnelManager.c: 29: TickMS trec;
  8283                           ;TunnelManager.c: 31: TickMS OldestTick;
  8284                           ;TunnelManager.c: 33: memset(&OldestTick,0xff,sizeof(OldestTick));
  8285  002744  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  8286  002746  6F73               	movwf	memset@p1& (0+255),b
  8287  002748  6B74               	clrf	(memset@p1+1)& (0+255),b
  8288  00274A  6B76               	clrf	(memset@c+1)& (0+255),b
  8289  00274C  6975               	setf	memset@c& (0+255),b
  8290  00274E  6B78               	clrf	(memset@n+1)& (0+255),b
  8291  002750  0E08               	movlw	8
  8292  002752  6F77               	movwf	memset@n& (0+255),b
  8293  002754  EC4C  F03A         	call	_memset	;wreg free
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;TunnelManager.c: 35: for(i=0;i<10;i++)
  8297  002758  6BA7               	clrf	TunnelManagerSetTunnel@i& (0+255),b
  8298  00275A  6BA8               	clrf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8299  00275C                     l13480:
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;TunnelManager.c: 36: {
  8303                           ;TunnelManager.c: 37: if(((OldestTick.msb>tunnels[i].TxTime.msb) || ((OldestTick.msb==tu
      +                          nnels[i].TxTime.msb) && (OldestTick.lsb>=tunnels[i].TxTime.lsb) ) )==1)
  8304  00275C  0E0C               	movlw	12
  8305  00275E  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8306  002760  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8307  002764  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8308  002768  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8309  00276A  50F3               	movf	prodl,w,c
  8310  00276C  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8311  00276E  0E04               	movlw	low (_tunnels+4)
  8312  002770  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8313  002772  6ED9               	movwf	fsr2l,c
  8314  002774  0E04               	movlw	high (_tunnels+4)
  8315  002776  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8316  002778  6EDA               	movwf	fsr2h,c
  8317  00277A  51A3               	movf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  8318  00277C  5CDE               	subwf	postinc2,w,c
  8319  00277E  51A4               	movf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  8320  002780  58DE               	subwfb	postinc2,w,c
  8321  002782  51A5               	movf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  8322  002784  58DE               	subwfb	postinc2,w,c
  8323  002786  51A6               	movf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  8324  002788  58DE               	subwfb	postinc2,w,c
  8325  00278A  E333               	bnc	l13486
  8326                           
  8327                           ; BSR set to: 0
  8328  00278C  0E0C               	movlw	12
  8329  00278E  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8330  002790  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8331  002794  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8332  002798  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8333  00279A  50F3               	movf	prodl,w,c
  8334  00279C  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8335  00279E  0E04               	movlw	low (_tunnels+4)
  8336  0027A0  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8337  0027A2  6ED9               	movwf	fsr2l,c
  8338  0027A4  0E04               	movlw	high (_tunnels+4)
  8339  0027A6  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8340  0027A8  6EDA               	movwf	fsr2h,c
  8341  0027AA  50DE               	movf	postinc2,w,c
  8342  0027AC  19A3               	xorwf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  8343  0027AE  E13C               	bnz	l13490
  8344  0027B0  50DE               	movf	postinc2,w,c
  8345  0027B2  19A4               	xorwf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  8346  0027B4  E139               	bnz	l13490
  8347  0027B6  50DE               	movf	postinc2,w,c
  8348  0027B8  19A5               	xorwf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  8349  0027BA  E136               	bnz	l13490
  8350  0027BC  50DE               	movf	postinc2,w,c
  8351  0027BE  19A6               	xorwf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  8352  0027C0  E133               	bnz	l13490
  8353                           
  8354                           ; BSR set to: 0
  8355  0027C2  0E0C               	movlw	12
  8356  0027C4  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8357  0027C6  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8358  0027CA  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8359  0027CE  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8360  0027D0  50F3               	movf	prodl,w,c
  8361  0027D2  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8362  0027D4  0E00               	movlw	low _tunnels
  8363  0027D6  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8364  0027D8  6ED9               	movwf	fsr2l,c
  8365  0027DA  0E04               	movlw	high _tunnels
  8366  0027DC  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8367  0027DE  6EDA               	movwf	fsr2h,c
  8368  0027E0  50DE               	movf	postinc2,w,c
  8369  0027E2  5D9F               	subwf	TunnelManagerSetTunnel@OldestTick& (0+255),w,b
  8370  0027E4  50DE               	movf	postinc2,w,c
  8371  0027E6  59A0               	subwfb	(TunnelManagerSetTunnel@OldestTick+1)& (0+255),w,b
  8372  0027E8  50DE               	movf	postinc2,w,c
  8373  0027EA  59A1               	subwfb	(TunnelManagerSetTunnel@OldestTick+2)& (0+255),w,b
  8374  0027EC  50DE               	movf	postinc2,w,c
  8375  0027EE  59A2               	subwfb	(TunnelManagerSetTunnel@OldestTick+3)& (0+255),w,b
  8376  0027F0  E31B               	bnc	l13490
  8377  0027F2                     l13486:
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;TunnelManager.c: 38: {
  8381                           ;TunnelManager.c: 39: memcpy(&OldestTick,&tunnels[i].TxTime,sizeof(TickMS));
  8382  0027F2  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  8383  0027F4  6F75               	movwf	memcpy@d1& (0+255),b
  8384  0027F6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  8385  0027F8  0E0C               	movlw	12
  8386  0027FA  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8387  0027FC  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8388  002800  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8389  002804  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8390  002806  50F3               	movf	prodl,w,c
  8391  002808  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8392  00280A  0E00               	movlw	low _tunnels
  8393  00280C  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8394  00280E  6F77               	movwf	memcpy@s1& (0+255),b
  8395  002810  0E04               	movlw	high _tunnels
  8396  002812  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8397  002814  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  8398  002816  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8399  002818  0E08               	movlw	8
  8400  00281A  6F79               	movwf	memcpy@n& (0+255),b
  8401  00281C  EC5D  F036         	call	_memcpy	;wreg free
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;TunnelManager.c: 40: oldestindex=i;
  8405  002820  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  8406  002824  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  8407  002828                     l13490:
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;TunnelManager.c: 41: }
  8411                           ;TunnelManager.c: 42: if( (emptyindex==0xffff) && (((tunnels[i].TxTime.msb==0) && (tunne
      +                          ls[i].TxTime.lsb==0))==1) )
  8412  002828  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  8413  00282A  E12E               	bnz	l13498
  8414  00282C  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  8415  00282E  E12C               	bnz	l13498
  8416                           
  8417                           ; BSR set to: 0
  8418  002830  0E0C               	movlw	12
  8419  002832  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8420  002834  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8421  002838  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8422  00283C  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8423  00283E  50F3               	movf	prodl,w,c
  8424  002840  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8425  002842  0E04               	movlw	low (_tunnels+4)
  8426  002844  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8427  002846  6ED9               	movwf	fsr2l,c
  8428  002848  0E04               	movlw	high (_tunnels+4)
  8429  00284A  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8430  00284C  6EDA               	movwf	fsr2h,c
  8431  00284E  50DE               	movf	postinc2,w,c
  8432  002850  10DE               	iorwf	postinc2,w,c
  8433  002852  10DE               	iorwf	postinc2,w,c
  8434  002854  10DE               	iorwf	postinc2,w,c
  8435  002856  E118               	bnz	l13498
  8436                           
  8437                           ; BSR set to: 0
  8438  002858  0E0C               	movlw	12
  8439  00285A  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8440  00285C  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8441  002860  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8442  002864  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8443  002866  50F3               	movf	prodl,w,c
  8444  002868  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8445  00286A  0E00               	movlw	low _tunnels
  8446  00286C  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8447  00286E  6ED9               	movwf	fsr2l,c
  8448  002870  0E04               	movlw	high _tunnels
  8449  002872  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8450  002874  6EDA               	movwf	fsr2h,c
  8451  002876  50DE               	movf	postinc2,w,c
  8452  002878  10DE               	iorwf	postinc2,w,c
  8453  00287A  10DE               	iorwf	postinc2,w,c
  8454  00287C  10DE               	iorwf	postinc2,w,c
  8455  00287E  E104               	bnz	l13498
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;TunnelManager.c: 43: {
  8459                           ;TunnelManager.c: 44: emptyindex=i;
  8460  002880  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  8461  002884  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  8462  002888                     l13498:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;TunnelManager.c: 47: {
  8466                           ;TunnelManager.c: 48: trec=tunnels[i].TxTime;
  8467  002888  C08F  FFD9         	movff	TunnelManagerSetTunnel@device,fsr2l
  8468  00288C  C090  FFDA         	movff	TunnelManagerSetTunnel@device+1,fsr2h
  8469  002890  CFDE F07D          	movff	postinc2,isSameAddress@a1
  8470  002894  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  8471  002898  0E0C               	movlw	12
  8472  00289A  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8473  00289C  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8474  0028A0  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8475  0028A4  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8476  0028A6  50F3               	movf	prodl,w,c
  8477  0028A8  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8478  0028AA  0E08               	movlw	low (_tunnels+8)
  8479  0028AC  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8480  0028AE  6ED9               	movwf	fsr2l,c
  8481  0028B0  0E04               	movlw	high (_tunnels+8)
  8482  0028B2  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8483  0028B4  6EDA               	movwf	fsr2h,c
  8484  0028B6  CFDE F07F          	movff	postinc2,isSameAddress@a2
  8485  0028BA  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  8486  0028BE  ECB1  F03A         	call	_isSameAddress	;wreg free
  8487  0028C2  06E8               	decf	wreg,f,c
  8488  0028C4  E109               	bnz	l13502
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;TunnelManager.c: 49: emptyindex=i;
  8492  0028C6  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  8493  0028CA  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  8494                           
  8495                           ;TunnelManager.c: 51: unknown=0;
  8496  0028CE  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  8497  0028D2  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  8498                           
  8499                           ;TunnelManager.c: 52: break;
  8500  0028D6  D008               	goto	l13506
  8501  0028D8                     l13502:
  8502                           
  8503                           ; BSR set to: 0
  8504  0028D8  4BA7               	infsnz	TunnelManagerSetTunnel@i& (0+255),f,b
  8505  0028DA  2BA8               	incf	(TunnelManagerSetTunnel@i+1)& (0+255),f,b
  8506                           
  8507                           ; BSR set to: 0
  8508  0028DC  51A8               	movf	(TunnelManagerSetTunnel@i+1)& (0+255),w,b
  8509  0028DE  E104               	bnz	u15110
  8510  0028E0  0E0A               	movlw	10
  8511  0028E2  5DA7               	subwf	TunnelManagerSetTunnel@i& (0+255),w,b
  8512  0028E4  E201 D73A          	bnc	l13480
  8513  0028E8                     u15110:
  8514  0028E8                     l13506:
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;TunnelManager.c: 53: }
  8518                           ;TunnelManager.c: 54: }
  8519                           ;TunnelManager.c: 55: if(emptyindex!=0xffff)
  8520  0028E8  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  8521  0028EA  E102               	bnz	u15120
  8522  0028EC  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  8523  0028EE  E005               	bz	l1681
  8524  0028F0                     u15120:
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;TunnelManager.c: 56: {
  8528                           ;TunnelManager.c: 57: index=emptyindex;
  8529  0028F0  C09B  F09D         	movff	TunnelManagerSetTunnel@emptyindex,TunnelManagerSetTunnel@index
  8530  0028F4  C09C  F09E         	movff	TunnelManagerSetTunnel@emptyindex+1,TunnelManagerSetTunnel@index+1
  8531                           
  8532                           ;TunnelManager.c: 58: }else
  8533  0028F8  D004               	goto	l13510
  8534  0028FA                     l1681:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;TunnelManager.c: 59: {
  8538                           ;TunnelManager.c: 60: index=oldestindex;
  8539  0028FA  C099  F09D         	movff	TunnelManagerSetTunnel@oldestindex,TunnelManagerSetTunnel@index
  8540  0028FE  C09A  F09E         	movff	TunnelManagerSetTunnel@oldestindex+1,TunnelManagerSetTunnel@index+1
  8541  002902                     l13510:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;TunnelManager.c: 61: }
  8545                           ;TunnelManager.c: 62: if(index!=0xffff)
  8546  002902  299D               	incf	TunnelManagerSetTunnel@index& (0+255),w,b
  8547  002904  E103               	bnz	u15130
  8548  002906  299E               	incf	(TunnelManagerSetTunnel@index+1)& (0+255),w,b
  8549  002908  B4D8               	btfsc	status,2,c
  8550  00290A  0012               	return	
  8551  00290C                     u15130:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;TunnelManager.c: 63: {
  8555                           ;TunnelManager.c: 64: memcpy(&tunnels[index].devAddress,device,NetworkAddressSizeGet());
  8556  00290C  0E0C               	movlw	12
  8557  00290E  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8558  002910  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8559  002914  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8560  002918  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8561  00291A  50F3               	movf	prodl,w,c
  8562  00291C  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8563  00291E  0E08               	movlw	low (_tunnels+8)
  8564  002920  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8565  002922  6F75               	movwf	memcpy@d1& (0+255),b
  8566  002924  0E04               	movlw	high (_tunnels+8)
  8567  002926  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8568  002928  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  8569  00292A  C08F  F077         	movff	TunnelManagerSetTunnel@device,memcpy@s1
  8570  00292E  C090  F078         	movff	TunnelManagerSetTunnel@device+1,memcpy@s1+1
  8571  002932  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
  8572  002936  0100               	movlb	0	; () banked
  8573  002938  6F79               	movwf	memcpy@n& (0+255),b
  8574  00293A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8575  00293C  EC5D  F036         	call	_memcpy	;wreg free
  8576                           
  8577                           ;TunnelManager.c: 65: memcpy(&tunnels[index].parent,parent,NetworkAddressSizeGet());
  8578  002940  0E0C               	movlw	12
  8579  002942  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8580  002944  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8581  002948  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8582  00294C  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8583  00294E  50F3               	movf	prodl,w,c
  8584  002950  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8585  002952  0E0A               	movlw	low (_tunnels+10)
  8586  002954  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8587  002956  6F75               	movwf	memcpy@d1& (0+255),b
  8588  002958  0E04               	movlw	high (_tunnels+10)
  8589  00295A  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8590  00295C  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  8591  00295E  C091  F077         	movff	TunnelManagerSetTunnel@parent,memcpy@s1
  8592  002962  C092  F078         	movff	TunnelManagerSetTunnel@parent+1,memcpy@s1+1
  8593  002966  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
  8594  00296A  0100               	movlb	0	; () banked
  8595  00296C  6F79               	movwf	memcpy@n& (0+255),b
  8596  00296E  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8597  002970  EC5D  F036         	call	_memcpy	;wreg free
  8598                           
  8599                           ;TunnelManager.c: 66: tunnels[index].TxTime=MSTickGet();
  8600  002974  EC58  F039         	call	_MSTickGet	;wreg free
  8601  002978  0E0C               	movlw	12
  8602  00297A  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8603  00297C  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  8604  002980  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  8605  002984  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8606  002986  50F3               	movf	prodl,w,c
  8607  002988  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8608  00298A  0E00               	movlw	low _tunnels
  8609  00298C  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8610  00298E  6ED9               	movwf	fsr2l,c
  8611  002990  0E04               	movlw	high _tunnels
  8612  002992  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8613  002994  6EDA               	movwf	fsr2h,c
  8614  002996  0E07               	movlw	7
  8615  002998                     u15141:
  8616  002998  CFEB FFDB          	movff	plusw0,plusw2
  8617  00299C  06E8               	decf	wreg,f,c
  8618  00299E  E2FC               	bc	u15141
  8619                           
  8620                           ; BSR set to: 0
  8621  0029A0  0012               	return		;funcret
  8622  0029A2                     __end_of_TunnelManagerSetTunnel:
  8623                           	opt stack 0
  8624                           tblptru	equ	0xFF8
  8625                           tblptrh	equ	0xFF7
  8626                           tblptrl	equ	0xFF6
  8627                           tablat	equ	0xFF5
  8628                           prodh	equ	0xFF4
  8629                           prodl	equ	0xFF3
  8630                           intcon3	equ	0xFF0
  8631                           postinc0	equ	0xFEE
  8632                           plusw0	equ	0xFEB
  8633                           wreg	equ	0xFE8
  8634                           postdec1	equ	0xFE5
  8635                           plusw1	equ	0xFE3
  8636                           fsr1h	equ	0xFE2
  8637                           fsr1l	equ	0xFE1
  8638                           indf2	equ	0xFDF
  8639                           postinc2	equ	0xFDE
  8640                           postdec2	equ	0xFDD
  8641                           plusw2	equ	0xFDB
  8642                           fsr2h	equ	0xFDA
  8643                           fsr2l	equ	0xFD9
  8644                           status	equ	0xFD8
  8645                           
  8646 ;; *************** function _RouteManagerProcessReceive *****************
  8647 ;; Defined at:
  8648 ;;		line 310 in file "../RouteManager.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  source          2   61[BANK0 ] PTR struct addr_t_def
  8651 ;;		 -> radioReceivedPacket@source(2), 
  8652 ;;  data            2   63[BANK0 ] PTR unsigned char 
  8653 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8654 ;;  len             1   65[BANK0 ] unsigned char 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  rcvBeacon       2   72[BANK0 ] PTR struct net_routing_h
  8657 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8658 ;;  from            2   70[BANK0 ] struct addr_t_def
  8659 ;;  congested       1   69[BANK0 ] unsigned char 
  8660 ;;  res             1    0        enum E180
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      enum E179
  8663 ;; Registers used:
  8664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : F/0
  8667 ;;		On exit  : E/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8670 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8671 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;Total ram usage:       13 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:   11
  8677 ;; This function calls:
  8678 ;;		_BeaconManagerTrigger
  8679 ;;		_LE_InsertNeighbor
  8680 ;;		_LE_PinNeighbor
  8681 ;;		_NetworkAddressSizeGet
  8682 ;;		_RouteManagerSetNeighborCongested
  8683 ;;		_RouterEvicted
  8684 ;;		_isInvalidAddress
  8685 ;;		_memcpy
  8686 ;;		_routingTableUpdateEntry
  8687 ;; This function is called by:
  8688 ;;		_radioReceivedPacket
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text21
  8693  004860                     __ptext21:
  8694                           	opt stack 0
  8695  004860                     _RouteManagerProcessReceive:
  8696                           	opt stack 16
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;RouteManager.c: 313: addr_t from;
  8700                           ;RouteManager.c: 314: net_routing_header_t* rcvBeacon;
  8701                           ;RouteManager.c: 315: bool congested;
  8702                           ;RouteManager.c: 316: rcvBeacon=(net_routing_header_t*)data;
  8703                           
  8704                           ; BSR set to: 0
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;incstack = 0
  8708  004860  C09F  F0A8         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8709  004864  C0A0  F0A9         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;RouteManager.c: 318: if ( (len >= sizeof (net_routing_header_t)) && (rcvBeacon->packett
      +                          ype==PacketRouting) )
  8713  004868  0E09               	movlw	9
  8714  00486A  65A1               	cpfsgt	RouteManagerProcessReceive@len& (0+255),b
  8715  00486C  0C09               	retlw	9
  8716                           
  8717                           ; BSR set to: 0
  8718  00486E  EE20 F002          	lfsr	2,2
  8719  004872  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8720  004874  26D9               	addwf	fsr2l,f,c
  8721  004876  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8722  004878  22DA               	addwfc	fsr2h,f,c
  8723  00487A  0E22               	movlw	34
  8724  00487C  18DE               	xorwf	postinc2,w,c
  8725  00487E  A4D8               	btfss	status,2,c
  8726  004880  0012               	return	
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;RouteManager.c: 319: {
  8730                           ;RouteManager.c: 321: memcpy(&from,source,NetworkAddressSizeGet());
  8731  004882  0EA6               	movlw	low RouteManagerProcessReceive@from
  8732  004884  6F75               	movwf	memcpy@d1& (0+255),b
  8733  004886  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  8734  004888  C09D  F077         	movff	RouteManagerProcessReceive@source,memcpy@s1
  8735  00488C  C09E  F078         	movff	RouteManagerProcessReceive@source+1,memcpy@s1+1
  8736  004890  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
  8737  004894  0100               	movlb	0	; () banked
  8738  004896  6F79               	movwf	memcpy@n& (0+255),b
  8739  004898  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  8740  00489A  EC5D  F036         	call	_memcpy	;wreg free
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;RouteManager.c: 322: rcvBeacon = (net_routing_header_t*) data;
  8744  00489E  C09F  F0A8         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8745  0048A2  C0A0  F0A9         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;RouteManager.c: 324: congested = (rcvBeacon->options.congested==1);
  8749  0048A6  EE20 F003          	lfsr	2,3
  8750  0048AA  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8751  0048AC  26D9               	addwf	fsr2l,f,c
  8752  0048AE  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8753  0048B0  22DA               	addwfc	fsr2h,f,c
  8754  0048B2  0E00               	movlw	0
  8755  0048B4  B8DF               	btfsc	indf2,4,c
  8756  0048B6  0E01               	movlw	1
  8757  0048B8  6FA5               	movwf	RouteManagerProcessReceive@congested& (0+255),b
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;RouteManager.c: 331: if( (!isInvalidAddress(rcvBeacon->parent)) && (rcvBeacon->options.
      +                          deviceType!=DeviceSleepingRFD) && (rcvBeacon->options.hasroute==1) )
  8761  0048BA  EE20 F004          	lfsr	2,4
  8762  0048BE  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8763  0048C0  26D9               	addwf	fsr2l,f,c
  8764  0048C2  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8765  0048C4  22DA               	addwfc	fsr2h,f,c
  8766  0048C6  CFDE F086          	movff	postinc2,isInvalidAddress@address
  8767  0048CA  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
  8768  0048CE  ECEC  F03B         	call	_isInvalidAddress	;wreg free
  8769  0048D2  0900               	iorlw	0
  8770  0048D4  E153               	bnz	l13450
  8771                           
  8772                           ; BSR set to: 0
  8773  0048D6  EE20 F003          	lfsr	2,3
  8774  0048DA  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8775  0048DC  26D9               	addwf	fsr2l,f,c
  8776  0048DE  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8777  0048E0  22DA               	addwfc	fsr2h,f,c
  8778  0048E2  50DF               	movf	223,w,c
  8779  0048E4  0B07               	andlw	7
  8780  0048E6  0A02               	xorlw	2
  8781  0048E8  E049               	bz	l13450
  8782                           
  8783                           ; BSR set to: 0
  8784  0048EA  EE20 F003          	lfsr	2,3
  8785  0048EE  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8786  0048F0  26D9               	addwf	fsr2l,f,c
  8787  0048F2  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8788  0048F4  22DA               	addwfc	fsr2h,f,c
  8789  0048F6  A6DF               	btfss	indf2,3,c
  8790  0048F8  D041               	goto	l13450
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;RouteManager.c: 332: {
  8794                           ;RouteManager.c: 335: if (rcvBeacon->etx == 0)
  8795  0048FA  EE20 F006          	lfsr	2,6
  8796  0048FE  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8797  004900  26D9               	addwf	fsr2l,f,c
  8798  004902  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8799  004904  22DA               	addwfc	fsr2h,f,c
  8800  004906  50DE               	movf	postinc2,w,c
  8801  004908  10DE               	iorwf	postinc2,w,c
  8802  00490A  E115               	bnz	l13446
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;RouteManager.c: 336: {
  8806                           ;RouteManager.c: 338: LE_InsertNeighbor(from, rcvBeacon->options.deviceType);
  8807  00490C  C0A6  F097         	movff	RouteManagerProcessReceive@from,LE_InsertNeighbor@neighbor
  8808  004910  C0A7  F098         	movff	RouteManagerProcessReceive@from+1,LE_InsertNeighbor@neighbor+1
  8809  004914  EE20 F003          	lfsr	2,3
  8810  004918  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8811  00491A  26D9               	addwf	fsr2l,f,c
  8812  00491C  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8813  00491E  22DA               	addwfc	fsr2h,f,c
  8814  004920  50DF               	movf	223,w,c
  8815  004922  0B07               	andlw	7
  8816  004924  6F99               	movwf	LE_InsertNeighbor@devType& (0+255),b
  8817  004926  ECBC  F030         	call	_LE_InsertNeighbor	;wreg free
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;RouteManager.c: 339: LE_PinNeighbor(from);
  8821  00492A  C0A6  F085         	movff	RouteManagerProcessReceive@from,LE_PinNeighbor@neighbor
  8822  00492E  C0A7  F086         	movff	RouteManagerProcessReceive@from+1,LE_PinNeighbor@neighbor+1
  8823  004932  ECE6  F038         	call	_LE_PinNeighbor	;wreg free
  8824  004936                     l13446:
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;RouteManager.c: 340: }
  8828                           ;RouteManager.c: 343: routingTableUpdateEntry(from, rcvBeacon->parent, rcvBeacon->etx);
  8829  004936  C0A6  F08F         	movff	RouteManagerProcessReceive@from,routingTableUpdateEntry@from
  8830  00493A  C0A7  F090         	movff	RouteManagerProcessReceive@from+1,routingTableUpdateEntry@from+1
  8831  00493E  EE20 F004          	lfsr	2,4
  8832  004942  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8833  004944  26D9               	addwf	fsr2l,f,c
  8834  004946  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8835  004948  22DA               	addwfc	fsr2h,f,c
  8836  00494A  CFDE F091          	movff	postinc2,routingTableUpdateEntry@parent
  8837  00494E  CFDD F092          	movff	postdec2,routingTableUpdateEntry@parent+1
  8838  004952  EE20 F006          	lfsr	2,6
  8839  004956  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8840  004958  26D9               	addwf	fsr2l,f,c
  8841  00495A  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8842  00495C  22DA               	addwfc	fsr2h,f,c
  8843  00495E  CFDE F093          	movff	postinc2,routingTableUpdateEntry@etx
  8844  004962  CFDD F094          	movff	postdec2,routingTableUpdateEntry@etx+1
  8845  004966  ECC8  F027         	call	_routingTableUpdateEntry	;wreg free
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;RouteManager.c: 344: RouteManagerSetNeighborCongested(from, congested);
  8849  00496A  C0A6  F073         	movff	RouteManagerProcessReceive@from,RouteManagerSetNeighborCongested@n
  8850  00496E  C0A7  F074         	movff	RouteManagerProcessReceive@from+1,RouteManagerSetNeighborCongested@n+1
  8851  004972  C0A5  F075         	movff	RouteManagerProcessReceive@congested,RouteManagerSetNeighborCongested@congested
  8852  004976  EC59  F03C         	call	_RouteManagerSetNeighborCongested	;wreg free
  8853                           
  8854                           ;RouteManager.c: 345: }else
  8855  00497A  D006               	goto	l13452
  8856  00497C                     l13450:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;RouteManager.c: 346: {
  8860                           ;RouteManager.c: 348: RouterEvicted(from);
  8861  00497C  C0A6  F08F         	movff	RouteManagerProcessReceive@from,RouterEvicted@address
  8862  004980  C0A7  F090         	movff	RouteManagerProcessReceive@from+1,RouterEvicted@address+1
  8863  004984  ECB1  F02E         	call	_RouterEvicted	;wreg free
  8864  004988                     l13452:
  8865                           
  8866                           ;RouteManager.c: 349: }
  8867                           ;RouteManager.c: 351: if (rcvBeacon->options.pull==1)
  8868  004988  0100               	movlb	0	; () banked
  8869  00498A  EE20 F003          	lfsr	2,3
  8870  00498E  51A8               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8871  004990  26D9               	addwf	fsr2l,f,c
  8872  004992  51A9               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8873  004994  22DA               	addwfc	fsr2h,f,c
  8874  004996  BADF               	btfsc	indf2,5,c
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;RouteManager.c: 352: {
  8878                           ;RouteManager.c: 353: BeaconManagerTrigger();
  8879  004998  EC47  F03C         	call	_BeaconManagerTrigger	;wreg free
  8880  00499C  0012               	return		;funcret
  8881  00499E                     __end_of_RouteManagerProcessReceive:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodh	equ	0xFF4
  8888                           prodl	equ	0xFF3
  8889                           intcon3	equ	0xFF0
  8890                           postinc0	equ	0xFEE
  8891                           plusw0	equ	0xFEB
  8892                           wreg	equ	0xFE8
  8893                           postdec1	equ	0xFE5
  8894                           plusw1	equ	0xFE3
  8895                           fsr1h	equ	0xFE2
  8896                           fsr1l	equ	0xFE1
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           plusw2	equ	0xFDB
  8901                           fsr2h	equ	0xFDA
  8902                           fsr2l	equ	0xFD9
  8903                           status	equ	0xFD8
  8904                           
  8905 ;; *************** function _routingTableUpdateEntry *****************
  8906 ;; Defined at:
  8907 ;;		line 247 in file "../RouteManager.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  from            2   47[BANK0 ] struct addr_t_def
  8910 ;;  parent          2   49[BANK0 ] struct addr_t_def
  8911 ;;  etx             2   51[BANK0 ] unsigned int 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  linkEtx         2   53[BANK0 ] unsigned int 
  8914 ;;  idx             1   55[BANK0 ] unsigned char 
  8915 ;;  res             1    0        enum E180
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      enum E180
  8918 ;; Registers used:
  8919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : F/0
  8922 ;;		On exit  : F/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;Total ram usage:        9 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    9
  8932 ;; This function calls:
  8933 ;;		_LELinkQualityGet
  8934 ;;		_passLinkEtxThreshold
  8935 ;;		_routingTableFind
  8936 ;; This function is called by:
  8937 ;;		_RouteManagerProcessReceive
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text22
  8942  004F90                     __ptext22:
  8943                           	opt stack 0
  8944  004F90                     _routingTableUpdateEntry:
  8945                           	opt stack 17
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;RouteManager.c: 249: uint8_t idx;
  8949                           ;RouteManager.c: 250: error_t res;
  8950                           ;RouteManager.c: 251: uint16_t linkEtx;
  8951                           ;RouteManager.c: 252: linkEtx = LELinkQualityGet(from,0);
  8952                           
  8953                           ;incstack = 0
  8954  004F90  C08F  F085         	movff	routingTableUpdateEntry@from,LELinkQualityGet@address
  8955  004F94  C090  F086         	movff	routingTableUpdateEntry@from+1,LELinkQualityGet@address+1
  8956  004F98  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
  8957  004F9A  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
  8958  004F9C  EC29  F033         	call	_LELinkQualityGet	;wreg free
  8959  004FA0  C085  F095         	movff	?_LELinkQualityGet,routingTableUpdateEntry@linkEtx
  8960  004FA4  C086  F096         	movff	?_LELinkQualityGet+1,routingTableUpdateEntry@linkEtx+1
  8961                           
  8962                           ;RouteManager.c: 254: idx = routingTableFind(from);
  8963  004FA8  C08F  F088         	movff	routingTableUpdateEntry@from,routingTableFind@neighbor
  8964  004FAC  C090  F089         	movff	routingTableUpdateEntry@from+1,routingTableFind@neighbor+1
  8965  004FB0  EC6A  F034         	call	_routingTableFind	;wreg free
  8966  004FB4  6F97               	movwf	routingTableUpdateEntry@idx& (0+255),b
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;RouteManager.c: 256: {
  8970                           ;RouteManager.c: 258: res=err_FAIL;
  8971  004FB6  0E0A               	movlw	10
  8972  004FB8  1997               	xorwf	routingTableUpdateEntry@idx& (0+255),w,b
  8973  004FBA  E101               	bnz	l12980
  8974  004FBC  0012               	return	
  8975  004FBE                     l12980:
  8976                           
  8977                           ; BSR set to: 0
  8978  004FBE  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8979  004FC0  19EB               	xorwf	_routingTableActive& (0+255),w,b
  8980  004FC2  11EC               	iorwf	(_routingTableActive+1)& (0+255),w,b
  8981  004FC4  E143               	bnz	l12988
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;RouteManager.c: 260: {
  8985                           ;RouteManager.c: 262: if (passLinkEtxThreshold(linkEtx))
  8986  004FC6  C095  F073         	movff	routingTableUpdateEntry@linkEtx,passLinkEtxThreshold@etx
  8987  004FCA  C096  F074         	movff	routingTableUpdateEntry@linkEtx+1,passLinkEtxThreshold@etx+1
  8988  004FCE  ECC6  F03B         	call	_passLinkEtxThreshold	;wreg free
  8989  004FD2  0900               	iorlw	0
  8990  004FD4  B4D8               	btfsc	status,2,c
  8991  004FD6  0012               	return	
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;RouteManager.c: 263: {
  8995                           ;RouteManager.c: 264: routingTable[idx].neighbor = from;
  8996  004FD8  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  8997  004FDA  0D09               	mullw	9
  8998  004FDC  0E98               	movlw	low _routingTable
  8999  004FDE  24F3               	addwf	prodl,w,c
  9000  004FE0  6ED9               	movwf	fsr2l,c
  9001  004FE2  0E06               	movlw	high _routingTable
  9002  004FE4  20F4               	addwfc	prodh,w,c
  9003  004FE6  6EDA               	movwf	fsr2h,c
  9004  004FE8  C08F  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  9005  004FEC  C090  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  9006                           
  9007                           ;RouteManager.c: 265: routingTable[idx].info.parent = parent;
  9008  004FF0  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9009  004FF2  0D09               	mullw	9
  9010  004FF4  0E9A               	movlw	low (_routingTable+2)
  9011  004FF6  24F3               	addwf	prodl,w,c
  9012  004FF8  6ED9               	movwf	fsr2l,c
  9013  004FFA  0E06               	movlw	high (_routingTable+2)
  9014  004FFC  20F4               	addwfc	prodh,w,c
  9015  004FFE  6EDA               	movwf	fsr2h,c
  9016  005000  C091  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  9017  005004  C092  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  9018                           
  9019                           ;RouteManager.c: 266: routingTable[idx].info.etx = etx;
  9020  005008  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9021  00500A  0D09               	mullw	9
  9022  00500C  0E9C               	movlw	low (_routingTable+4)
  9023  00500E  24F3               	addwf	prodl,w,c
  9024  005010  6ED9               	movwf	fsr2l,c
  9025  005012  0E06               	movlw	high (_routingTable+4)
  9026  005014  20F4               	addwfc	prodh,w,c
  9027  005016  6EDA               	movwf	fsr2h,c
  9028  005018  C093  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9029  00501C  C094  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9030                           
  9031                           ;RouteManager.c: 267: routingTable[idx].info.haveHeard = 1;
  9032  005020  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9033  005022  0D09               	mullw	9
  9034  005024  0E9E               	movlw	low (_routingTable+6)
  9035  005026  24F3               	addwf	prodl,w,c
  9036  005028  6ED9               	movwf	fsr2l,c
  9037  00502A  0E06               	movlw	high (_routingTable+6)
  9038  00502C  20F4               	addwfc	prodh,w,c
  9039  00502E  6EDA               	movwf	fsr2h,c
  9040  005030  0E01               	movlw	1
  9041  005032  6EDF               	movwf	indf2,c
  9042                           
  9043                           ;RouteManager.c: 268: routingTable[idx].info.congested = 0;
  9044  005034  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9045  005036  0D09               	mullw	9
  9046  005038  0E9F               	movlw	low (_routingTable+7)
  9047  00503A  24F3               	addwf	prodl,w,c
  9048  00503C  6ED9               	movwf	fsr2l,c
  9049  00503E  0E06               	movlw	high (_routingTable+7)
  9050  005040  20F4               	addwfc	prodh,w,c
  9051  005042  6EDA               	movwf	fsr2h,c
  9052  005044  6ADF               	clrf	indf2,c
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;RouteManager.c: 269: routingTableActive++;
  9056  005046  4BEB               	infsnz	_routingTableActive& (0+255),f,b
  9057  005048  2BEC               	incf	(_routingTableActive+1)& (0+255),f,b
  9058  00504A  0C00               	retlw	0
  9059  00504C                     l12988:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;RouteManager.c: 272: {
  9063                           ;RouteManager.c: 274: routingTable[idx].neighbor = from;
  9064  00504C  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9065  00504E  0D09               	mullw	9
  9066  005050  0E98               	movlw	low _routingTable
  9067  005052  24F3               	addwf	prodl,w,c
  9068  005054  6ED9               	movwf	fsr2l,c
  9069  005056  0E06               	movlw	high _routingTable
  9070  005058  20F4               	addwfc	prodh,w,c
  9071  00505A  6EDA               	movwf	fsr2h,c
  9072  00505C  C08F  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  9073  005060  C090  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  9074                           
  9075                           ;RouteManager.c: 275: routingTable[idx].info.parent = parent;
  9076  005064  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9077  005066  0D09               	mullw	9
  9078  005068  0E9A               	movlw	low (_routingTable+2)
  9079  00506A  24F3               	addwf	prodl,w,c
  9080  00506C  6ED9               	movwf	fsr2l,c
  9081  00506E  0E06               	movlw	high (_routingTable+2)
  9082  005070  20F4               	addwfc	prodh,w,c
  9083  005072  6EDA               	movwf	fsr2h,c
  9084  005074  C091  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  9085  005078  C092  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  9086                           
  9087                           ;RouteManager.c: 276: routingTable[idx].info.etx = etx;
  9088  00507C  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9089  00507E  0D09               	mullw	9
  9090  005080  0E9C               	movlw	low (_routingTable+4)
  9091  005082  24F3               	addwf	prodl,w,c
  9092  005084  6ED9               	movwf	fsr2l,c
  9093  005086  0E06               	movlw	high (_routingTable+4)
  9094  005088  20F4               	addwfc	prodh,w,c
  9095  00508A  6EDA               	movwf	fsr2h,c
  9096  00508C  C093  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9097  005090  C094  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9098                           
  9099                           ;RouteManager.c: 277: routingTable[idx].info.haveHeard = 1;
  9100  005094  5197               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9101  005096  0D09               	mullw	9
  9102  005098  0E9E               	movlw	low (_routingTable+6)
  9103  00509A  24F3               	addwf	prodl,w,c
  9104  00509C  6ED9               	movwf	fsr2l,c
  9105  00509E  0E06               	movlw	high (_routingTable+6)
  9106  0050A0  20F4               	addwfc	prodh,w,c
  9107  0050A2  6EDA               	movwf	fsr2h,c
  9108  0050A4  0E01               	movlw	1
  9109  0050A6  6EDF               	movwf	indf2,c
  9110  0050A8  0C01               	retlw	1
  9111  0050AA                     __end_of_routingTableUpdateEntry:
  9112                           	opt stack 0
  9113                           tblptru	equ	0xFF8
  9114                           tblptrh	equ	0xFF7
  9115                           tblptrl	equ	0xFF6
  9116                           tablat	equ	0xFF5
  9117                           prodh	equ	0xFF4
  9118                           prodl	equ	0xFF3
  9119                           intcon3	equ	0xFF0
  9120                           postinc0	equ	0xFEE
  9121                           plusw0	equ	0xFEB
  9122                           wreg	equ	0xFE8
  9123                           postdec1	equ	0xFE5
  9124                           plusw1	equ	0xFE3
  9125                           fsr1h	equ	0xFE2
  9126                           fsr1l	equ	0xFE1
  9127                           indf2	equ	0xFDF
  9128                           postinc2	equ	0xFDE
  9129                           postdec2	equ	0xFDD
  9130                           plusw2	equ	0xFDB
  9131                           fsr2h	equ	0xFDA
  9132                           fsr2l	equ	0xFD9
  9133                           status	equ	0xFD8
  9134                           
  9135 ;; *************** function _RouteManagerSetNeighborCongested *****************
  9136 ;; Defined at:
  9137 ;;		line 294 in file "../RouteManager.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  n               2   19[BANK0 ] struct addr_t_def
  9140 ;;  congested       1   21[BANK0 ] unsigned char 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		None
  9147 ;; Tracked objects:
  9148 ;;		On entry : F/0
  9149 ;;		On exit  : F/0
  9150 ;;		Unchanged: F/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9152 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9155 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9156 ;;Total ram usage:        3 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    5
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_RouteManagerProcessReceive
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text23
  9167  0078B2                     __ptext23:
  9168                           	opt stack 0
  9169  0078B2                     _RouteManagerSetNeighborCongested:
  9170                           	opt stack 21
  9171                           
  9172                           ; BSR set to: 0
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;incstack = 0
  9176  0078B2  0012               	return		;funcret
  9177  0078B4                     __end_of_RouteManagerSetNeighborCongested:
  9178                           	opt stack 0
  9179                           tblptru	equ	0xFF8
  9180                           tblptrh	equ	0xFF7
  9181                           tblptrl	equ	0xFF6
  9182                           tablat	equ	0xFF5
  9183                           prodh	equ	0xFF4
  9184                           prodl	equ	0xFF3
  9185                           intcon3	equ	0xFF0
  9186                           postinc0	equ	0xFEE
  9187                           plusw0	equ	0xFEB
  9188                           wreg	equ	0xFE8
  9189                           postdec1	equ	0xFE5
  9190                           plusw1	equ	0xFE3
  9191                           fsr1h	equ	0xFE2
  9192                           fsr1l	equ	0xFE1
  9193                           indf2	equ	0xFDF
  9194                           postinc2	equ	0xFDE
  9195                           postdec2	equ	0xFDD
  9196                           plusw2	equ	0xFDB
  9197                           fsr2h	equ	0xFDA
  9198                           fsr2l	equ	0xFD9
  9199                           status	equ	0xFD8
  9200                           
  9201 ;; *************** function _LE_InsertNeighbor *****************
  9202 ;; Defined at:
  9203 ;;		line 240 in file "../LinkEstimator.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  neighbor        2   55[BANK0 ] struct addr_t_def
  9206 ;;  devType         1   57[BANK0 ] enum E144
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  nidx            1   60[BANK0 ] unsigned char 
  9209 ;;  res             1    0        enum E179
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      enum E180
  9212 ;; Registers used:
  9213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : F/0
  9216 ;;		On exit  : F/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9219 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;Total ram usage:        6 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:   10
  9226 ;; This function calls:
  9227 ;;		_RouterEvicted
  9228 ;;		_le_findEmptyNeighborIdx
  9229 ;;		_le_findIdx
  9230 ;;		_le_findWorstNeighborIdx
  9231 ;;		_le_initNeighborIdx
  9232 ;; This function is called by:
  9233 ;;		_RouteManagerProcessReceive
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text24
  9238  006178                     __ptext24:
  9239                           	opt stack 0
  9240  006178                     _LE_InsertNeighbor:
  9241                           	opt stack 16
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;LinkEstimator.c: 244: nidx = le_findIdx(neighbor);
  9245                           
  9246                           ; BSR set to: 0
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  006178  C097  F081         	movff	LE_InsertNeighbor@neighbor,le_findIdx@ll_addr
  9251  00617C  C098  F082         	movff	LE_InsertNeighbor@neighbor+1,le_findIdx@ll_addr+1
  9252  006180  EC84  F035         	call	_le_findIdx	;wreg free
  9253  006184  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;LinkEstimator.c: 245: if (nidx != 0xff)
  9257  006186  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9258  006188  E001               	bz	l13000
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;LinkEstimator.c: 249: }else
  9262  00618A  0012               	return	
  9263  00618C                     l13000:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;LinkEstimator.c: 250: {
  9267                           ;LinkEstimator.c: 251: nidx = le_findEmptyNeighborIdx();
  9268  00618C  EC2D  F037         	call	_le_findEmptyNeighborIdx	;wreg free
  9269  006190  0100               	movlb	0	; () banked
  9270  006192  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
  9271  006194  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;LinkEstimator.c: 252: if (nidx != 0xff)
  9275  006196  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9276  006198  E017               	bz	l13010
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;LinkEstimator.c: 253: {
  9280                           ;LinkEstimator.c: 255: le_initNeighborIdx(nidx, neighbor);
  9281  00619A  C097  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
  9282  00619E  C098  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
  9283  0061A2  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9284  0061A4  EC88  F031         	call	_le_initNeighborIdx
  9285  0061A8                     l13006:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;LinkEstimator.c: 256: neighbor_tbl[nidx].flags|=(devType<<4);
  9289  0061A8  C099  F09A         	movff	LE_InsertNeighbor@devType,??_LE_InsertNeighbor
  9290  0061AC  3B9A               	swapf	??_LE_InsertNeighbor& (0+255),f,b
  9291  0061AE  0EF0               	movlw	240
  9292  0061B0  179A               	andwf	??_LE_InsertNeighbor& (0+255),f,b
  9293  0061B2  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9294  0061B4  0D0B               	mullw	11
  9295  0061B6  0E05               	movlw	low (_neighbor_tbl+5)
  9296  0061B8  24F3               	addwf	prodl,w,c
  9297  0061BA  6ED9               	movwf	fsr2l,c
  9298  0061BC  0E05               	movlw	high (_neighbor_tbl+5)
  9299  0061BE  20F4               	addwfc	prodh,w,c
  9300  0061C0  6EDA               	movwf	fsr2h,c
  9301  0061C2  519A               	movf	??_LE_InsertNeighbor& (0+255),w,b
  9302  0061C4  12DF               	iorwf	indf2,f,c
  9303  0061C6  0012               	return	
  9304  0061C8                     l13010:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;LinkEstimator.c: 259: {
  9308                           ;LinkEstimator.c: 260: nidx = le_findWorstNeighborIdx(10);
  9309  0061C8  0E0A               	movlw	10
  9310  0061CA  ECA0  F026         	call	_le_findWorstNeighborIdx
  9311  0061CE  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
  9312  0061D0  6F9C               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;LinkEstimator.c: 261: if (nidx != 0xff)
  9316  0061D2  299C               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9317  0061D4  B4D8               	btfsc	status,2,c
  9318  0061D6  0012               	return	
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;LinkEstimator.c: 262: {
  9322                           ;LinkEstimator.c: 265: RouterEvicted(neighbor_tbl[nidx].ll_addr);
  9323  0061D8  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9324  0061DA  0D0B               	mullw	11
  9325  0061DC  0E00               	movlw	low _neighbor_tbl
  9326  0061DE  24F3               	addwf	prodl,w,c
  9327  0061E0  6ED9               	movwf	fsr2l,c
  9328  0061E2  0E05               	movlw	high _neighbor_tbl
  9329  0061E4  20F4               	addwfc	prodh,w,c
  9330  0061E6  6EDA               	movwf	fsr2h,c
  9331  0061E8  CFDE F08F          	movff	postinc2,RouterEvicted@address
  9332  0061EC  CFDD F090          	movff	postdec2,RouterEvicted@address+1
  9333  0061F0  ECB1  F02E         	call	_RouterEvicted	;wreg free
  9334                           
  9335                           ;LinkEstimator.c: 266: le_initNeighborIdx(nidx, neighbor);
  9336  0061F4  C097  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
  9337  0061F8  C098  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
  9338  0061FC  0100               	movlb	0	; () banked
  9339  0061FE  519C               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9340  006200  EC88  F031         	call	_le_initNeighborIdx
  9341  006204  D7D1               	goto	l13006
  9342  006206                     __end_of_LE_InsertNeighbor:
  9343                           	opt stack 0
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon3	equ	0xFF0
  9351                           postinc0	equ	0xFEE
  9352                           plusw0	equ	0xFEB
  9353                           wreg	equ	0xFE8
  9354                           postdec1	equ	0xFE5
  9355                           plusw1	equ	0xFE3
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           postdec2	equ	0xFDD
  9361                           plusw2	equ	0xFDB
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function _NetworkSendDiscoverResponse *****************
  9367 ;; Defined at:
  9368 ;;		line 407 in file "../NetworkManager.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  9373 ;;  address         2   68[BANK1 ] struct addr_t_def
  9374 ;;  dhdr            2   66[BANK1 ] PTR struct net_data_head
  9375 ;;		 -> NetworkSendDiscoverResponse@databuff(64), 
  9376 ;;  size            2   64[BANK1 ] unsigned int 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : F/0
  9383 ;;		On exit  : F/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9389 ;;      Totals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9390 ;;Total ram usage:       70 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    9
  9393 ;; This function calls:
  9394 ;;		_BroadcastManagerDelaySend
  9395 ;;		_NetworkAddressSizeGet
  9396 ;;		_NetworkPrepareSendPacket
  9397 ;;		_isNetworkSecurityEnabled
  9398 ;;		_memset
  9399 ;; This function is called by:
  9400 ;;		_radioReceivedPacket
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text25
  9405  00638E                     __ptext25:
  9406                           	opt stack 0
  9407  00638E                     _NetworkSendDiscoverResponse:
  9408                           	opt stack 18
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;NetworkManager.c: 409: addr_t address;
  9412                           ;NetworkManager.c: 410: uint16_t size;
  9413                           ;NetworkManager.c: 411: uint8_t databuff[64];
  9414                           ;NetworkManager.c: 412: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;incstack = 0
  9418  00638E  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  9419  006390  0101               	movlb	1	; () banked
  9420  006392  6F42               	movwf	NetworkSendDiscoverResponse@dhdr& (0+255),b
  9421  006394  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  9422  006396  6F43               	movwf	(NetworkSendDiscoverResponse@dhdr+1)& (0+255),b
  9423                           
  9424                           ; BSR set to: 1
  9425                           ;NetworkManager.c: 413: memset(address.bytes,0xff,NetworkAddressSizeGet());
  9426  006398  0E44               	movlw	low NetworkSendDiscoverResponse@address
  9427  00639A  0100               	movlb	0	; () banked
  9428  00639C  6F73               	movwf	memset@p1& (0+255),b
  9429  00639E  0E01               	movlw	high NetworkSendDiscoverResponse@address
  9430  0063A0  6F74               	movwf	(memset@p1+1)& (0+255),b
  9431  0063A2  6B76               	clrf	(memset@c+1)& (0+255),b
  9432  0063A4  6975               	setf	memset@c& (0+255),b
  9433  0063A6  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
  9434  0063AA  0100               	movlb	0	; () banked
  9435  0063AC  6F77               	movwf	memset@n& (0+255),b
  9436  0063AE  6B78               	clrf	(memset@n+1)& (0+255),b
  9437  0063B0  EC4C  F03A         	call	_memset	;wreg free
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;NetworkManager.c: 414: size=NetworkPrepareSendPacket(address,databuff,PacketScanRespons
      +                          e,(0),0);
  9441  0063B4  C144  F07F         	movff	NetworkSendDiscoverResponse@address,NetworkPrepareSendPacket@address
  9442  0063B8  C145  F080         	movff	NetworkSendDiscoverResponse@address+1,NetworkPrepareSendPacket@address+1
  9443  0063BC  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  9444  0063BE  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  9445  0063C0  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  9446  0063C2  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  9447  0063C4  0E28               	movlw	40
  9448  0063C6  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  9449  0063C8  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  9450  0063CA  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  9451  0063CC  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  9452  0063CE  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  9453  0063D0  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  9454  0063D4  C07F  F140         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverResponse@size
  9455  0063D8  C080  F141         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverResponse@size+1
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;NetworkManager.c: 415: dhdr->Hops=0;
  9459  0063DC  C142  FFD9         	movff	NetworkSendDiscoverResponse@dhdr,fsr2l
  9460  0063E0  C143  FFDA         	movff	NetworkSendDiscoverResponse@dhdr+1,fsr2h
  9461  0063E4  6ADF               	clrf	indf2,c
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;NetworkManager.c: 416: BroadcastManagerDelaySend(databuff,size,isNetworkSecurityEnabled
      +                          (),1);
  9465  0063E6  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
  9466  0063E8  6F9F               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  9467  0063EA  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
  9468  0063EC  6FA0               	movwf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  9469  0063EE  C140  F0A1         	movff	NetworkSendDiscoverResponse@size,BroadcastManagerDelaySend@size
  9470  0063F2  C141  F0A2         	movff	NetworkSendDiscoverResponse@size+1,BroadcastManagerDelaySend@size+1
  9471  0063F6  EC3C  F03C         	call	_isNetworkSecurityEnabled	;wreg free
  9472  0063FA  0100               	movlb	0	; () banked
  9473  0063FC  6FA3               	movwf	BroadcastManagerDelaySend@isSecure& (0+255),b
  9474  0063FE  0E01               	movlw	1
  9475  006400  6FA4               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  9476  006402  EF52  F01D         	goto	_BroadcastManagerDelaySend	;wreg free
  9477  006406                     __end_of_NetworkSendDiscoverResponse:
  9478                           	opt stack 0
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon3	equ	0xFF0
  9486                           postinc0	equ	0xFEE
  9487                           plusw0	equ	0xFEB
  9488                           wreg	equ	0xFE8
  9489                           postdec1	equ	0xFE5
  9490                           plusw1	equ	0xFE3
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           postinc2	equ	0xFDE
  9495                           postdec2	equ	0xFDD
  9496                           plusw2	equ	0xFDB
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           
  9501 ;; *************** function _NetworkManagerProcessIncomingData *****************
  9502 ;; Defined at:
  9503 ;;		line 276 in file "../NetworkManager.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  data            2  124[BANK0 ] PTR unsigned char 
  9506 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9507 ;;  size            2  126[BANK0 ] unsigned int 
  9508 ;;  isBroadcast     1  128[BANK0 ] unsigned char 
  9509 ;;  isSecure        1  129[BANK0 ] unsigned char 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  buffer         64   64[BANK1 ] unsigned char [64]
  9512 ;;  dHdr            2  132[BANK1 ] PTR struct net_data_head
  9513 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9514 ;;  packetsize      2  129[BANK1 ] unsigned int 
  9515 ;;  isSecurePack    1  131[BANK1 ] unsigned char 
  9516 ;;  isFormed        1  128[BANK1 ] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : F/1
  9523 ;;		On exit  : E/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         0       7      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:       77 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:   14
  9533 ;; This function calls:
  9534 ;;		_BeaconManagerTrigger
  9535 ;;		_DeviceManagerGetDeviceData
  9536 ;;		_IsNetworkDevice
  9537 ;;		_NetworkDataArrivedEvent
  9538 ;;		_NetworkGetDeviceType
  9539 ;;		_TMSendDataToRFD
  9540 ;;		_TMSendFormedPacketToRFD
  9541 ;;		_isInvalidAddress
  9542 ;;		_memcpy
  9543 ;; This function is called by:
  9544 ;;		_radioReceivedPacket
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text26
  9549  002C08                     __ptext26:
  9550                           	opt stack 0
  9551  002C08                     _NetworkManagerProcessIncomingData:
  9552                           	opt stack 13
  9553                           
  9554                           ; BSR set to: 1
  9555                           ;NetworkManager.c: 278: net_data_header_t *dHdr=(net_data_header_t*)data;
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;incstack = 0
  9559  002C08  C0DC  F184         	movff	NetworkManagerProcessIncomingData@data,NetworkManagerProcessIncomingData@dHdr
  9560  002C0C  C0DD  F185         	movff	NetworkManagerProcessIncomingData@data+1,NetworkManagerProcessIncomingData@dHdr+1
  9561                           
  9562                           ; BSR set to: 1
  9563                           ;NetworkManager.c: 279: uint16_t packetsize;
  9564                           ;NetworkManager.c: 280: uint8_t buffer[64];
  9565                           ;NetworkManager.c: 281: bool isSecurePacket;
  9566                           ;NetworkManager.c: 282: bool isFormed;
  9567                           ;NetworkManager.c: 284: if(NetworkGetDeviceType()==DeviceCoordinator)
  9568  002C10  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
  9569  002C14  0900               	iorlw	0
  9570  002C16  E001 D0B3          	bnz	l13548
  9571                           
  9572                           ; BSR set to: 1
  9573                           ;NetworkManager.c: 285: {
  9574                           ;NetworkManager.c: 286: if(IsNetworkDevice(dHdr->origin,(dHdr->flags & 0x07))==1)
  9575  002C1A  EE20 F006          	lfsr	2,6
  9576  002C1E  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9577  002C20  26D9               	addwf	fsr2l,f,c
  9578  002C22  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9579  002C24  22DA               	addwfc	fsr2h,f,c
  9580  002C26  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
  9581  002C2A  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
  9582  002C2E  EE20 F003          	lfsr	2,3
  9583  002C32  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9584  002C34  26D9               	addwf	fsr2l,f,c
  9585  002C36  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9586  002C38  22DA               	addwfc	fsr2h,f,c
  9587  002C3A  50DF               	movf	indf2,w,c
  9588  002C3C  0B07               	andlw	7
  9589  002C3E  0100               	movlb	0	; () banked
  9590  002C40  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
  9591  002C42  EC8A  F01C         	call	_IsNetworkDevice	;wreg free
  9592  002C46  06E8               	decf	wreg,f,c
  9593  002C48  E101 D087          	bz	l13546
  9594  002C4C  0012               	return	
  9595  002C4E                     l13522:
  9596                           
  9597                           ; BSR set to: 1
  9598                           ;NetworkManager.c: 293: packetsize=DeviceManagerGetDeviceData(dHdr->origin,buffer,&isSec
      +                          urePacket,&isFormed);
  9599  002C4E  EE20 F006          	lfsr	2,6
  9600  002C52  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9601  002C54  26D9               	addwf	fsr2l,f,c
  9602  002C56  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9603  002C58  22DA               	addwfc	fsr2h,f,c
  9604  002C5A  CFDE F081          	movff	postinc2,DeviceManagerGetDeviceData@address
  9605  002C5E  CFDD F082          	movff	postdec2,DeviceManagerGetDeviceData@address+1
  9606  002C62  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9607  002C64  0100               	movlb	0	; () banked
  9608  002C66  6F83               	movwf	DeviceManagerGetDeviceData@data& (0+255),b
  9609  002C68  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9610  002C6A  6F84               	movwf	(DeviceManagerGetDeviceData@data+1)& (0+255),b
  9611  002C6C  0E83               	movlw	low NetworkManagerProcessIncomingData@isSecurePacket
  9612  002C6E  6F85               	movwf	DeviceManagerGetDeviceData@isSecure& (0+255),b
  9613  002C70  0E01               	movlw	high NetworkManagerProcessIncomingData@isSecurePacket
  9614  002C72  6F86               	movwf	(DeviceManagerGetDeviceData@isSecure+1)& (0+255),b
  9615  002C74  0E80               	movlw	low NetworkManagerProcessIncomingData@isFormed
  9616  002C76  6F87               	movwf	DeviceManagerGetDeviceData@isFormed& (0+255),b
  9617  002C78  0E01               	movlw	high NetworkManagerProcessIncomingData@isFormed
  9618  002C7A  6F88               	movwf	(DeviceManagerGetDeviceData@isFormed+1)& (0+255),b
  9619  002C7C  ECD4  F03B         	call	_DeviceManagerGetDeviceData	;wreg free
  9620  002C80  C081  F181         	movff	?_DeviceManagerGetDeviceData,NetworkManagerProcessIncomingData@packetsize
  9621  002C84  C082  F182         	movff	?_DeviceManagerGetDeviceData+1,NetworkManagerProcessIncomingData@packetsize+1
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;NetworkManager.c: 294: if(packetsize>0)
  9625  002C88  0101               	movlb	1	; () banked
  9626  002C8A  5181               	movf	NetworkManagerProcessIncomingData@packetsize& (0+255),w,b
  9627  002C8C  1182               	iorwf	(NetworkManagerProcessIncomingData@packetsize+1)& (0+255),w,b
  9628  002C8E  B4D8               	btfsc	status,2,c
  9629  002C90  0012               	return	
  9630                           
  9631                           ; BSR set to: 1
  9632                           ;NetworkManager.c: 295: {
  9633                           ;NetworkManager.c: 296: if(isFormed==1)
  9634  002C92  0580               	decf	NetworkManagerProcessIncomingData@isFormed& (0+255),w,b
  9635  002C94  E117               	bnz	l13530
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;NetworkManager.c: 297: {
  9639                           ;NetworkManager.c: 298: TMSendFormedPacketToRFD(dHdr->origin, buffer, packetsize, isSecu
      +                          rePacket);
  9640  002C96  EE20 F006          	lfsr	2,6
  9641  002C9A  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9642  002C9C  26D9               	addwf	fsr2l,f,c
  9643  002C9E  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9644  002CA0  22DA               	addwfc	fsr2h,f,c
  9645  002CA2  CFDE F0C5          	movff	postinc2,TMSendFormedPacketToRFD@device
  9646  002CA6  CFDD F0C6          	movff	postdec2,TMSendFormedPacketToRFD@device+1
  9647  002CAA  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9648  002CAC  0100               	movlb	0	; () banked
  9649  002CAE  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
  9650  002CB0  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9651  002CB2  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
  9652  002CB4  C181  F0C9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendFormedPacketToRFD@size
  9653  002CB8  C182  F0CA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendFormedPacketToRFD@size+1
  9654  002CBC  C183  F0CB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendFormedPacketToRFD@isSecure
  9655  002CC0  EFD1  F014         	goto	_TMSendFormedPacketToRFD	;wreg free
  9656  002CC4                     l13530:
  9657                           
  9658                           ; BSR set to: 1
  9659                           ;NetworkManager.c: 300: {
  9660                           ;NetworkManager.c: 301: TMSendDataToRFD(dHdr->origin,PacketData,buffer,packetsize,isSecu
      +                          rePacket);
  9661  002CC4  EE20 F006          	lfsr	2,6
  9662  002CC8  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9663  002CCA  26D9               	addwf	fsr2l,f,c
  9664  002CCC  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9665  002CCE  22DA               	addwfc	fsr2h,f,c
  9666  002CD0  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
  9667  002CD4  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
  9668  002CD8  0E23               	movlw	35
  9669  002CDA  0100               	movlb	0	; () banked
  9670  002CDC  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  9671  002CDE  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9672  002CE0  6FD7               	movwf	TMSendDataToRFD@data& (0+255),b
  9673  002CE2  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9674  002CE4  6FD8               	movwf	(TMSendDataToRFD@data+1)& (0+255),b
  9675  002CE6  C181  F0D9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendDataToRFD@size
  9676  002CEA  C182  F0DA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendDataToRFD@size+1
  9677  002CEE  C183  F0DB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendDataToRFD@isSecure
  9678  002CF2  EF05  F037         	goto	_TMSendDataToRFD	;wreg free
  9679  002CF6                     l13532:
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;NetworkManager.c: 307: TMSendDataToRFD(dHdr->origin,PacketCheckinReply,(0),0, isSecure)
      +                          ;
  9683  002CF6  EE20 F006          	lfsr	2,6
  9684  002CFA  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9685  002CFC  26D9               	addwf	fsr2l,f,c
  9686  002CFE  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9687  002D00  22DA               	addwfc	fsr2h,f,c
  9688  002D02  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
  9689  002D06  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
  9690  002D0A  0E25               	movlw	37
  9691  002D0C  0100               	movlb	0	; () banked
  9692  002D0E  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  9693  002D10  6BD7               	clrf	TMSendDataToRFD@data& (0+255),b
  9694  002D12  6BD8               	clrf	(TMSendDataToRFD@data+1)& (0+255),b
  9695  002D14  6BDA               	clrf	(TMSendDataToRFD@size+1)& (0+255),b
  9696  002D16  6BD9               	clrf	TMSendDataToRFD@size& (0+255),b
  9697  002D18  C0E1  F0DB         	movff	NetworkManagerProcessIncomingData@isSecure,TMSendDataToRFD@isSecure
  9698  002D1C  EF05  F037         	goto	_TMSendDataToRFD	;wreg free
  9699  002D20                     l13534:
  9700                           
  9701                           ; BSR set to: 1
  9702                           ;NetworkManager.c: 315: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
  9703  002D20  51E1               	movf	_userDataAvailable& (0+255),w,b
  9704  002D22  A4D8               	btfss	status,2,c
  9705  002D24  0012               	return	
  9706                           
  9707                           ; BSR set to: 1
  9708  002D26  0100               	movlb	0	; () banked
  9709  002D28  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9710  002D2A  E104               	bnz	u15200
  9711  002D2C  0E0B               	movlw	11
  9712  002D2E  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9713  002D30  A0D8               	btfss	status,0,c
  9714  002D32  0012               	return	
  9715  002D34                     u15200:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;NetworkManager.c: 316: {
  9719                           ;NetworkManager.c: 317: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
  9720  002D34  0EC8               	movlw	low _userdata
  9721  002D36  6F75               	movwf	memcpy@d1& (0+255),b
  9722  002D38  0E07               	movlw	high _userdata
  9723  002D3A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9724  002D3C  0E0A               	movlw	10
  9725  002D3E  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
  9726  002D40  6F77               	movwf	memcpy@s1& (0+255),b
  9727  002D42  0E00               	movlw	0
  9728  002D44  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
  9729  002D46  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  9730  002D48  0EF6               	movlw	246
  9731  002D4A  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9732  002D4C  6F79               	movwf	memcpy@n& (0+255),b
  9733  002D4E  0EFF               	movlw	255
  9734  002D50  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9735  002D52  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  9736  002D54  EC5D  F036         	call	_memcpy	;wreg free
  9737  002D58  D056               	goto	L17
  9738  002D5A                     l13546:
  9739                           
  9740                           ; BSR set to: 0
  9741  002D5A  0101               	movlb	1	; () banked
  9742  002D5C  EE20 F002          	lfsr	2,2
  9743  002D60  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9744  002D62  26D9               	addwf	fsr2l,f,c
  9745  002D64  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9746  002D66  22DA               	addwfc	fsr2h,f,c
  9747  002D68  50DF               	movf	indf2,w,c
  9748                           
  9749                           ; Switch size 1, requested type "speed"
  9750                           ; Number of cases is 4, Range of values is 35 to 41
  9751                           ; switch strategies available:
  9752                           ; Name         Instructions Cycles
  9753                           ; simple_byte           13     7 (average)
  9754                           ;	Chosen strategy is simple_byte
  9755  002D6A  0A23               	xorlw	35	; case 35
  9756  002D6C  E0D9               	bz	l13534
  9757  002D6E  0A07               	xorlw	7	; case 36
  9758  002D70  E0C2               	bz	l13532
  9759  002D72  0A01               	xorlw	1	; case 37
  9760  002D74  B4D8               	btfsc	status,2,c
  9761  002D76  0012               	return	
  9762  002D78  0A0C               	xorlw	12	; case 41
  9763  002D7A  E101 D768          	bz	l13522
  9764                           
  9765                           ;NetworkManager.c: 327: }
  9766                           ;NetworkManager.c: 328: }else
  9767  002D7E  0012               	return	
  9768  002D80                     l13548:
  9769                           
  9770                           ; BSR set to: 1
  9771                           ;NetworkManager.c: 329: {
  9772                           ;NetworkManager.c: 330: if(dHdr->packettype==PacketCheckinReply)
  9773  002D80  EE20 F002          	lfsr	2,2
  9774  002D84  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9775  002D86  26D9               	addwf	fsr2l,f,c
  9776  002D88  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9777  002D8A  22DA               	addwfc	fsr2h,f,c
  9778  002D8C  0E25               	movlw	37
  9779  002D8E  18DE               	xorwf	postinc2,w,c
  9780  002D90  E11E               	bnz	l13562
  9781                           
  9782                           ; BSR set to: 1
  9783                           ;NetworkManager.c: 331: {
  9784                           ;NetworkManager.c: 332: if( (routeInfo.hasCheckedIn==0) && (isInvalidAddress(routeInfo.p
      +                          arent)==0) )
  9785  002D92  0102               	movlb	2	; () banked
  9786  002D94  519A               	movf	(_routeInfo+6)& (0+255),w,b
  9787  002D96  E10D               	bnz	l13558
  9788                           
  9789                           ; BSR set to: 2
  9790  002D98  C294  F086         	movff	_routeInfo,isInvalidAddress@address
  9791  002D9C  C295  F087         	movff	_routeInfo+1,isInvalidAddress@address+1
  9792  002DA0  ECEC  F03B         	call	_isInvalidAddress	;wreg free
  9793  002DA4  0900               	iorlw	0
  9794  002DA6  E105               	bnz	l13558
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;NetworkManager.c: 333: {
  9798                           ;NetworkManager.c: 335: BeaconManagerTrigger();
  9799  002DA8  EC47  F03C         	call	_BeaconManagerTrigger	;wreg free
  9800                           
  9801                           ; BSR set to: 1
  9802                           ;NetworkManager.c: 336: routeInfo.hasCheckedIn=1;
  9803  002DAC  0E01               	movlw	1
  9804  002DAE  0102               	movlb	2	; () banked
  9805  002DB0  6F9A               	movwf	(_routeInfo+6)& (0+255),b
  9806  002DB2                     l13558:
  9807                           
  9808                           ;NetworkManager.c: 337: }
  9809                           ;NetworkManager.c: 338: CoordinatorAddr=dHdr->origin;
  9810  002DB2  0101               	movlb	1	; () banked
  9811  002DB4  EE20 F006          	lfsr	2,6
  9812  002DB8  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9813  002DBA  26D9               	addwf	fsr2l,f,c
  9814  002DBC  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9815  002DBE  22DA               	addwfc	fsr2h,f,c
  9816  002DC0  CFDE F1E8          	movff	postinc2,_CoordinatorAddr
  9817  002DC4  CFDD F1E9          	movff	postdec2,_CoordinatorAddr+1
  9818                           
  9819                           ; BSR set to: 1
  9820                           ;NetworkManager.c: 339: nState=netOperating;
  9821  002DC8  0E04               	movlw	4
  9822  002DCA  6FDD               	movwf	_nState& (0+255),b
  9823                           
  9824                           ;NetworkManager.c: 340: }else
  9825  002DCC  0C04               	retlw	4
  9826  002DCE                     l13562:
  9827                           
  9828                           ; BSR set to: 1
  9829                           ;NetworkManager.c: 341: {
  9830                           ;NetworkManager.c: 343: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
  9831  002DCE  51E1               	movf	_userDataAvailable& (0+255),w,b
  9832  002DD0  A4D8               	btfss	status,2,c
  9833  002DD2  0012               	return	
  9834                           
  9835                           ; BSR set to: 1
  9836  002DD4  0100               	movlb	0	; () banked
  9837  002DD6  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9838  002DD8  E104               	bnz	u15250
  9839  002DDA  0E0B               	movlw	11
  9840  002DDC  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9841  002DDE  A0D8               	btfss	status,0,c
  9842  002DE0  0012               	return	
  9843  002DE2                     u15250:
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;NetworkManager.c: 344: {
  9847                           ;NetworkManager.c: 345: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
  9848  002DE2  0EC8               	movlw	low _userdata
  9849  002DE4  6F75               	movwf	memcpy@d1& (0+255),b
  9850  002DE6  0E07               	movlw	high _userdata
  9851  002DE8  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9852  002DEA  0E0A               	movlw	10
  9853  002DEC  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
  9854  002DEE  6F77               	movwf	memcpy@s1& (0+255),b
  9855  002DF0  0E00               	movlw	0
  9856  002DF2  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
  9857  002DF4  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  9858  002DF6  0EF6               	movlw	246
  9859  002DF8  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9860  002DFA  6F79               	movwf	memcpy@n& (0+255),b
  9861  002DFC  0EFF               	movlw	255
  9862  002DFE  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9863  002E00  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  9864  002E02  EC5D  F036         	call	_memcpy	;wreg free
  9865  002E06                     L17:
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;NetworkManager.c: 346: userDataAvailable=1;
  9869  002E06  0E01               	movlw	1
  9870  002E08  0101               	movlb	1	; () banked
  9871  002E0A  6FE1               	movwf	_userDataAvailable& (0+255),b
  9872                           
  9873                           ; BSR set to: 1
  9874                           ;NetworkManager.c: 347: NetworkDataArrivedEvent(dHdr->origin,userdata,size-sizeof(net_da
      +                          ta_header_t),isBroadcast);
  9875  002E0C  EE20 F006          	lfsr	2,6
  9876  002E10  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9877  002E12  26D9               	addwf	fsr2l,f,c
  9878  002E14  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9879  002E16  22DA               	addwfc	fsr2h,f,c
  9880  002E18  CFDE F07B          	movff	postinc2,NetworkDataArrivedEvent@source
  9881  002E1C  CFDD F07C          	movff	postdec2,NetworkDataArrivedEvent@source+1
  9882  002E20  0EC8               	movlw	low _userdata
  9883  002E22  0100               	movlb	0	; () banked
  9884  002E24  6F7D               	movwf	NetworkDataArrivedEvent@data& (0+255),b
  9885  002E26  0E07               	movlw	high _userdata
  9886  002E28  6F7E               	movwf	(NetworkDataArrivedEvent@data+1)& (0+255),b
  9887  002E2A  0EF6               	movlw	246
  9888  002E2C  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
  9889  002E2E  6F7F               	movwf	NetworkDataArrivedEvent@size& (0+255),b
  9890  002E30  0EFF               	movlw	255
  9891  002E32  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
  9892  002E34  6F80               	movwf	(NetworkDataArrivedEvent@size+1)& (0+255),b
  9893  002E36  C0E0  F081         	movff	NetworkManagerProcessIncomingData@isBroadcast,NetworkDataArrivedEvent@isBroadcast
  9894  002E3A  EF88  F036         	goto	_NetworkDataArrivedEvent	;wreg free
  9895  002E3E                     __end_of_NetworkManagerProcessIncomingData:
  9896                           	opt stack 0
  9897                           tblptru	equ	0xFF8
  9898                           tblptrh	equ	0xFF7
  9899                           tblptrl	equ	0xFF6
  9900                           tablat	equ	0xFF5
  9901                           prodh	equ	0xFF4
  9902                           prodl	equ	0xFF3
  9903                           intcon3	equ	0xFF0
  9904                           postinc0	equ	0xFEE
  9905                           plusw0	equ	0xFEB
  9906                           wreg	equ	0xFE8
  9907                           postdec1	equ	0xFE5
  9908                           plusw1	equ	0xFE3
  9909                           fsr1h	equ	0xFE2
  9910                           fsr1l	equ	0xFE1
  9911                           indf2	equ	0xFDF
  9912                           postinc2	equ	0xFDE
  9913                           postdec2	equ	0xFDD
  9914                           plusw2	equ	0xFDB
  9915                           fsr2h	equ	0xFDA
  9916                           fsr2l	equ	0xFD9
  9917                           status	equ	0xFD8
  9918                           
  9919 ;; *************** function _TMSendDataToRFD *****************
  9920 ;; Defined at:
  9921 ;;		line 195 in file "../TransportManager.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  device          2  116[BANK0 ] struct addr_t_def
  9924 ;;  pType           1  118[BANK0 ] enum E232
  9925 ;;  data            2  119[BANK0 ] PTR unsigned char 
  9926 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TxBuffer(64), NULL(0), 
  9927 ;;  size            2  121[BANK0 ] unsigned int 
  9928 ;;  isSecure        1  123[BANK0 ] unsigned char 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  databuff       64    0[BANK1 ] unsigned char [64]
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      unsigned char 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : F/0
  9937 ;;		On exit  : F/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9940 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Totals:         0       8      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;Total ram usage:       72 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:   13
  9947 ;; This function calls:
  9948 ;;		_NetworkPrepareSendPacket
  9949 ;;		_TMSendFormedPacketToRFD
  9950 ;; This function is called by:
  9951 ;;		_NetworkUnicastData
  9952 ;;		_NetworkManagerProcessIncomingData
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text27
  9957  006E0A                     __ptext27:
  9958                           	opt stack 0
  9959  006E0A                     _TMSendDataToRFD:
  9960                           	opt stack 15
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;TransportManager.c: 197: uint8_t databuff[64];
  9964                           ;TransportManager.c: 198: size=NetworkPrepareSendPacket(device,databuff,pType,data,size)
      +                          ;
  9965                           
  9966                           ;incstack = 0
  9967  006E0A  C0D4  F07F         	movff	TMSendDataToRFD@device,NetworkPrepareSendPacket@address
  9968  006E0E  C0D5  F080         	movff	TMSendDataToRFD@device+1,NetworkPrepareSendPacket@address+1
  9969  006E12  0E00               	movlw	low TMSendDataToRFD@databuff
  9970  006E14  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  9971  006E16  0E01               	movlw	high TMSendDataToRFD@databuff
  9972  006E18  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  9973  006E1A  C0D6  F083         	movff	TMSendDataToRFD@pType,NetworkPrepareSendPacket@pType
  9974  006E1E  C0D7  F084         	movff	TMSendDataToRFD@data,NetworkPrepareSendPacket@data
  9975  006E22  C0D8  F085         	movff	TMSendDataToRFD@data+1,NetworkPrepareSendPacket@data+1
  9976  006E26  C0D9  F086         	movff	TMSendDataToRFD@size,NetworkPrepareSendPacket@size
  9977  006E2A  C0DA  F087         	movff	TMSendDataToRFD@size+1,NetworkPrepareSendPacket@size+1
  9978  006E2E  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
  9979  006E32  C07F  F0D9         	movff	?_NetworkPrepareSendPacket,TMSendDataToRFD@size
  9980  006E36  C080  F0DA         	movff	?_NetworkPrepareSendPacket+1,TMSendDataToRFD@size+1
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;TransportManager.c: 199: return(TMSendFormedPacketToRFD(device, databuff, size, isSecur
      +                          e));
  9984  006E3A  C0D4  F0C5         	movff	TMSendDataToRFD@device,TMSendFormedPacketToRFD@device
  9985  006E3E  C0D5  F0C6         	movff	TMSendDataToRFD@device+1,TMSendFormedPacketToRFD@device+1
  9986  006E42  0E00               	movlw	low TMSendDataToRFD@databuff
  9987  006E44  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
  9988  006E46  0E01               	movlw	high TMSendDataToRFD@databuff
  9989  006E48  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
  9990  006E4A  C0D9  F0C9         	movff	TMSendDataToRFD@size,TMSendFormedPacketToRFD@size
  9991  006E4E  C0DA  F0CA         	movff	TMSendDataToRFD@size+1,TMSendFormedPacketToRFD@size+1
  9992  006E52  C0DB  F0CB         	movff	TMSendDataToRFD@isSecure,TMSendFormedPacketToRFD@isSecure
  9993  006E56  EFD1  F014         	goto	_TMSendFormedPacketToRFD	;wreg free
  9994  006E5A                     __end_of_TMSendDataToRFD:
  9995                           	opt stack 0
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           intcon3	equ	0xFF0
 10003                           postinc0	equ	0xFEE
 10004                           plusw0	equ	0xFEB
 10005                           wreg	equ	0xFE8
 10006                           postdec1	equ	0xFE5
 10007                           plusw1	equ	0xFE3
 10008                           fsr1h	equ	0xFE2
 10009                           fsr1l	equ	0xFE1
 10010                           indf2	equ	0xFDF
 10011                           postinc2	equ	0xFDE
 10012                           postdec2	equ	0xFDD
 10013                           plusw2	equ	0xFDB
 10014                           fsr2h	equ	0xFDA
 10015                           fsr2l	equ	0xFD9
 10016                           status	equ	0xFD8
 10017                           
 10018 ;; *************** function _TMSendFormedPacketToRFD *****************
 10019 ;; Defined at:
 10020 ;;		line 202 in file "../TransportManager.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  device          2  101[BANK0 ] struct addr_t_def
 10023 ;;  data            2  103[BANK0 ] PTR unsigned char 
 10024 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10025 ;;  size            2  105[BANK0 ] unsigned int 
 10026 ;;  isSecure        1  107[BANK0 ] unsigned char 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;  parent          2  114[BANK0 ] struct addr_t_def
 10029 ;;  dhdr            2  112[BANK0 ] PTR struct net_data_head
 10030 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10031 ;;  myaddr          2  109[BANK0 ] PTR struct addr_t_def
 10032 ;;		 -> MyAddress(2), 
 10033 ;;  res             1  111[BANK0 ] unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      unsigned char 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : F/0
 10040 ;;		On exit  : F/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10043 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;Total ram usage:       15 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:   12
 10050 ;; This function calls:
 10051 ;;		_BroadcastManagerDelaySend
 10052 ;;		_GetRouteAddressOfChild
 10053 ;;		_LE_RemoveNeighborDevice
 10054 ;;		_NetworkGetDeviceType
 10055 ;;		_NetworkGetPANID
 10056 ;;		_NetworkGetParentAddress
 10057 ;;		_NetworkManagerGetMyAddress
 10058 ;;		_TMSendFormedPacketTowardsCoordinator
 10059 ;;		_TunnelManagerGetTunnel
 10060 ;;		_TunnelManagerInvalidateTunnel
 10061 ;;		_isBroadcastAddress
 10062 ;;		_isSameAddress
 10063 ;;		_radioUnicast
 10064 ;; This function is called by:
 10065 ;;		_TMSendDataToRFD
 10066 ;;		_NetworkManagerProcessIncomingData
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text28
 10071  0029A2                     __ptext28:
 10072                           	opt stack 0
 10073  0029A2                     _TMSendFormedPacketToRFD:
 10074                           	opt stack 15
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;TransportManager.c: 204: bool res=1;
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;incstack = 0
 10081  0029A2  0E01               	movlw	1
 10082  0029A4  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;TransportManager.c: 205: addr_t parent;
 10086                           ;TransportManager.c: 206: addr_t *myaddr=NetworkManagerGetMyAddress();
 10087  0029A6  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
 10088  0029AA  C073  F0CD         	movff	?_NetworkManagerGetMyAddress,TMSendFormedPacketToRFD@myaddr
 10089  0029AE  C074  F0CE         	movff	?_NetworkManagerGetMyAddress+1,TMSendFormedPacketToRFD@myaddr+1
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;TransportManager.c: 207: net_data_header_t *dhdr=(net_data_header_t*)data;
 10093  0029B2  C0C7  F0D0         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketToRFD@dhdr
 10094  0029B6  C0C8  F0D1         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketToRFD@dhdr+1
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;TransportManager.c: 209: parent = TunnelManagerGetTunnel(device);
 10098  0029BA  C0C5  F0AB         	movff	TMSendFormedPacketToRFD@device,TunnelManagerGetTunnel@device
 10099  0029BE  C0C6  F0AC         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerGetTunnel@device+1
 10100  0029C2  EC4C  F020         	call	_TunnelManagerGetTunnel	;wreg free
 10101  0029C6  C0AB  F0D2         	movff	?_TunnelManagerGetTunnel,TMSendFormedPacketToRFD@parent
 10102  0029CA  C0AC  F0D3         	movff	?_TunnelManagerGetTunnel+1,TMSendFormedPacketToRFD@parent+1
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;TransportManager.c: 210: if(isBroadcastAddress(parent)==1)
 10106  0029CE  C0D2  F07B         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
 10107  0029D2  C0D3  F07C         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
 10108  0029D6  ECEA  F037         	call	_isBroadcastAddress	;wreg free
 10109  0029DA  06E8               	decf	wreg,f,c
 10110  0029DC  E001 D0AB          	bnz	l12790
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;TransportManager.c: 211: {
 10114                           ;TransportManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 10115  0029E0  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 10116  0029E4  0900               	iorlw	0
 10117  0029E6  E115               	bnz	l12762
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;TransportManager.c: 213: {
 10121                           ;TransportManager.c: 214: dhdr->Hops=20;
 10122  0029E8  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 10123  0029EC  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 10124  0029F0  0E14               	movlw	20
 10125  0029F2  6EDF               	movwf	indf2,c
 10126                           
 10127                           ; BSR set to: 1
 10128                           ;TransportManager.c: 215: BroadcastManagerDelaySend(data,size,isSecure,0);
 10129  0029F4  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 10130  0029F8  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 10131  0029FC  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 10132  002A00  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 10133  002A04  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 10134  002A08  0100               	movlb	0	; () banked
 10135  002A0A  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10136  002A0C  EC52  F01D         	call	_BroadcastManagerDelaySend	;wreg free
 10137                           
 10138                           ;TransportManager.c: 216: }else
 10139  002A10  D0F9               	goto	l12810
 10140  002A12                     l12762:
 10141                           
 10142                           ; BSR set to: 1
 10143                           ;TransportManager.c: 217: {
 10144                           ;TransportManager.c: 219: parent=GetRouteAddressOfChild(device);
 10145  002A12  C0C5  F08B         	movff	TMSendFormedPacketToRFD@device,GetRouteAddressOfChild@child
 10146  002A16  C0C6  F08C         	movff	TMSendFormedPacketToRFD@device+1,GetRouteAddressOfChild@child+1
 10147  002A1A  EC2B  F035         	call	_GetRouteAddressOfChild	;wreg free
 10148  002A1E  C08B  F0D2         	movff	?_GetRouteAddressOfChild,TMSendFormedPacketToRFD@parent
 10149  002A22  C08C  F0D3         	movff	?_GetRouteAddressOfChild+1,TMSendFormedPacketToRFD@parent+1
 10150                           
 10151                           ;TransportManager.c: 220: if(isBroadcastAddress(parent)==0)
 10152  002A26  C0D2  F07B         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
 10153  002A2A  C0D3  F07C         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
 10154  002A2E  ECEA  F037         	call	_isBroadcastAddress	;wreg free
 10155  002A32  0900               	iorlw	0
 10156  002A34  E160               	bnz	l12784
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;TransportManager.c: 221: {
 10160                           ;TransportManager.c: 224: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 10161  002A36  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 10162  002A3A  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 10163  002A3E  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 10164  002A42  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 10165  002A46  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 10166  002A4A  ECB1  F03A         	call	_isSameAddress	;wreg free
 10167  002A4E  0900               	iorlw	0
 10168  002A50  E014               	bz	l12772
 10169                           
 10170                           ; BSR set to: 0
 10171  002A52  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 10172  002A56  0900               	iorlw	0
 10173  002A58  E010               	bz	l12772
 10174                           
 10175                           ; BSR set to: 1
 10176                           ;TransportManager.c: 225: {
 10177                           ;TransportManager.c: 226: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10178  002A5A  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10179  002A5E  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10180  002A62  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10181  002A66  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10182  002A6A  0E01               	movlw	1
 10183  002A6C  0100               	movlb	0	; () banked
 10184  002A6E  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10185  002A70  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10186  002A74  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10187  002A78  D093               	goto	L5
 10188  002A7A                     l12772:
 10189                           
 10190                           ;TransportManager.c: 228: {
 10191                           ;TransportManager.c: 229: res=radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)
      +                          ;
 10192  002A7A  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
 10193  002A7E  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
 10194  002A82  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 10195  002A86  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 10196  002A8A  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 10197  002A8E  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 10198  002A92  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 10199  002A96  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 10200  002A9A  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 10201  002A9E  ECDC  F036         	call	_radioUnicast	;wreg free
 10202  002AA2  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;TransportManager.c: 230: if(res==0)
 10206  002AA4  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10207  002AA6  E001 D0AD          	bnz	l12810
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;TransportManager.c: 231: {
 10211                           ;TransportManager.c: 232: LE_RemoveNeighborDevice(parent);
 10212  002AAA  C0D2  F097         	movff	TMSendFormedPacketToRFD@parent,LE_RemoveNeighborDevice@device
 10213  002AAE  C0D3  F098         	movff	TMSendFormedPacketToRFD@parent+1,LE_RemoveNeighborDevice@device+1
 10214  002AB2  EC37  F034         	call	_LE_RemoveNeighborDevice	;wreg free
 10215                           
 10216                           ; BSR set to: 0
 10217                           ;TransportManager.c: 233: if(dhdr->packettype==PacketData)
 10218  002AB6  EE20 F002          	lfsr	2,2
 10219  002ABA  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10220  002ABC  26D9               	addwf	fsr2l,f,c
 10221  002ABE  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10222  002AC0  22DA               	addwfc	fsr2h,f,c
 10223  002AC2  0E23               	movlw	35
 10224  002AC4  18DE               	xorwf	postinc2,w,c
 10225  002AC6  E108               	bnz	l12782
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;TransportManager.c: 234: {
 10229                           ;TransportManager.c: 235: dhdr->packettype=PacketRoutedData;
 10230  002AC8  EE20 F002          	lfsr	2,2
 10231  002ACC  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10232  002ACE  26D9               	addwf	fsr2l,f,c
 10233  002AD0  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10234  002AD2  22DA               	addwfc	fsr2h,f,c
 10235  002AD4  0E26               	movlw	38
 10236  002AD6  6EDF               	movwf	indf2,c
 10237  002AD8                     l12782:
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;TransportManager.c: 236: }
 10241                           ;TransportManager.c: 237: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10242  002AD8  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10243  002ADC  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10244  002AE0  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10245  002AE4  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10246  002AE8  0E01               	movlw	1
 10247  002AEA  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10248  002AEC  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10249  002AF0  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10250  002AF4  D055               	goto	L5
 10251  002AF6                     l12784:
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;TransportManager.c: 241: {
 10255                           ;TransportManager.c: 242: if(dhdr->packettype==PacketData)
 10256  002AF6  EE20 F002          	lfsr	2,2
 10257  002AFA  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10258  002AFC  26D9               	addwf	fsr2l,f,c
 10259  002AFE  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10260  002B00  22DA               	addwfc	fsr2h,f,c
 10261  002B02  0E23               	movlw	35
 10262  002B04  18DE               	xorwf	postinc2,w,c
 10263  002B06  E108               	bnz	l12788
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;TransportManager.c: 243: {
 10267                           ;TransportManager.c: 244: dhdr->packettype=PacketRoutedData;
 10268  002B08  EE20 F002          	lfsr	2,2
 10269  002B0C  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10270  002B0E  26D9               	addwf	fsr2l,f,c
 10271  002B10  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10272  002B12  22DA               	addwfc	fsr2h,f,c
 10273  002B14  0E26               	movlw	38
 10274  002B16  6EDF               	movwf	indf2,c
 10275  002B18                     l12788:
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;TransportManager.c: 245: }
 10279                           ;TransportManager.c: 246: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
 10280  002B18  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10281  002B1C  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10282  002B20  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10283  002B24  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10284  002B28  0E01               	movlw	1
 10285  002B2A  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10286  002B2C  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10287  002B30  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;TransportManager.c: 247: }
 10291                           ;TransportManager.c: 248: }
 10292                           ;TransportManager.c: 249: }else
 10293  002B34  D067               	goto	l12810
 10294  002B36                     l12790:
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;TransportManager.c: 250: {
 10298                           ;TransportManager.c: 252: if(isSameAddress(parent,*myaddr))
 10299  002B36  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 10300  002B3A  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 10301  002B3E  C0CD  FFD9         	movff	TMSendFormedPacketToRFD@myaddr,fsr2l
 10302  002B42  C0CE  FFDA         	movff	TMSendFormedPacketToRFD@myaddr+1,fsr2h
 10303  002B46  CFDE F07F          	movff	postinc2,isSameAddress@a2
 10304  002B4A  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 10305  002B4E  ECB1  F03A         	call	_isSameAddress	;wreg free
 10306  002B52  0900               	iorlw	0
 10307  002B54  E004               	bz	l12794
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;TransportManager.c: 253: {
 10311                           ;TransportManager.c: 254: parent=device;
 10312  002B56  C0C5  F0D2         	movff	TMSendFormedPacketToRFD@device,TMSendFormedPacketToRFD@parent
 10313  002B5A  C0C6  F0D3         	movff	TMSendFormedPacketToRFD@device+1,TMSendFormedPacketToRFD@parent+1
 10314  002B5E                     l12794:
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;TransportManager.c: 255: }
 10318                           ;TransportManager.c: 256: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 10319  002B5E  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 10320  002B62  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 10321  002B66  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 10322  002B6A  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 10323  002B6E  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 10324  002B72  ECB1  F03A         	call	_isSameAddress	;wreg free
 10325  002B76  0900               	iorlw	0
 10326  002B78  E015               	bz	l12800
 10327                           
 10328                           ; BSR set to: 0
 10329  002B7A  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 10330  002B7E  0900               	iorlw	0
 10331  002B80  E011               	bz	l12800
 10332                           
 10333                           ; BSR set to: 1
 10334                           ;TransportManager.c: 257: {
 10335                           ;TransportManager.c: 258: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10336  002B82  C0C7  F08A         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10337  002B86  C0C8  F08B         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10338  002B8A  C0C9  F08C         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10339  002B8E  C0CA  F08D         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10340  002B92  0E01               	movlw	1
 10341  002B94  0100               	movlb	0	; () banked
 10342  002B96  6F8E               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10343  002B98  C0CB  F08F         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10344  002B9C  ECA4  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10345  002BA0                     L5:
 10346  002BA0  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10347                           
 10348                           ;TransportManager.c: 259: }else
 10349  002BA2  D030               	goto	l12810
 10350  002BA4                     l12800:
 10351                           
 10352                           ;TransportManager.c: 260: {
 10353                           ;TransportManager.c: 261: res=radioUnicast(parent,NetworkGetPANID(),data,size,isSecure);
 10354  002BA4  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
 10355  002BA8  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
 10356  002BAC  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 10357  002BB0  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 10358  002BB4  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 10359  002BB8  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 10360  002BBC  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 10361  002BC0  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 10362  002BC4  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 10363  002BC8  ECDC  F036         	call	_radioUnicast	;wreg free
 10364  002BCC  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;TransportManager.c: 262: if(res==0)
 10368  002BCE  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10369  002BD0  E119               	bnz	l12810
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;TransportManager.c: 263: {
 10373                           ;TransportManager.c: 264: TunnelManagerInvalidateTunnel(device);
 10374  002BD2  C0C5  F081         	movff	TMSendFormedPacketToRFD@device,TunnelManagerInvalidateTunnel@device
 10375  002BD6  C0C6  F082         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerInvalidateTunnel@device+1
 10376  002BDA  ECE4  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;TransportManager.c: 265: dhdr->Hops=20;
 10380  002BDE  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 10381  002BE2  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 10382  002BE6  0E14               	movlw	20
 10383  002BE8  6EDF               	movwf	indf2,c
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;TransportManager.c: 266: BroadcastManagerDelaySend(data,size,isSecure,0);
 10387  002BEA  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 10388  002BEE  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 10389  002BF2  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 10390  002BF6  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 10391  002BFA  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 10392  002BFE  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10393  002C00  EC52  F01D         	call	_BroadcastManagerDelaySend	;wreg free
 10394  002C04                     l12810:
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;TransportManager.c: 267: }
 10398                           ;TransportManager.c: 268: }
 10399                           ;TransportManager.c: 269: }
 10400                           ;TransportManager.c: 270: return(res);
 10401  002C04  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10402                           
 10403                           ; BSR set to: 0
 10404  002C06  0012               	return		;funcret
 10405  002C08                     __end_of_TMSendFormedPacketToRFD:
 10406                           	opt stack 0
 10407                           tblptru	equ	0xFF8
 10408                           tblptrh	equ	0xFF7
 10409                           tblptrl	equ	0xFF6
 10410                           tablat	equ	0xFF5
 10411                           prodh	equ	0xFF4
 10412                           prodl	equ	0xFF3
 10413                           intcon3	equ	0xFF0
 10414                           postinc0	equ	0xFEE
 10415                           plusw0	equ	0xFEB
 10416                           wreg	equ	0xFE8
 10417                           postdec1	equ	0xFE5
 10418                           plusw1	equ	0xFE3
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           plusw2	equ	0xFDB
 10425                           fsr2h	equ	0xFDA
 10426                           fsr2l	equ	0xFD9
 10427                           status	equ	0xFD8
 10428                           
 10429 ;; *************** function _TunnelManagerInvalidateTunnel *****************
 10430 ;; Defined at:
 10431 ;;		line 96 in file "../TunnelManager.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  device          2   33[BANK0 ] struct addr_t_def
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  i               2   39[BANK0 ] unsigned int 
 10436 ;;  addr            2   37[BANK0 ] struct addr_t_def
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : F/0
 10443 ;;		On exit  : F/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;Total ram usage:        8 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    7
 10453 ;; This function calls:
 10454 ;;		_NetworkAddressSizeGet
 10455 ;;		_isSameAddress
 10456 ;;		_memcpy
 10457 ;;		_memset
 10458 ;; This function is called by:
 10459 ;;		_radioReceivedPacket
 10460 ;;		_TMSendFormedPacketToRFD
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text29
 10465  005FC8                     __ptext29:
 10466                           	opt stack 0
 10467  005FC8                     _TunnelManagerInvalidateTunnel:
 10468                           	opt stack 19
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;TunnelManager.c: 98: uint16_t i;
 10472                           ;TunnelManager.c: 99: addr_t addr;
 10473                           ;TunnelManager.c: 101: memcpy((uint8_t*)&addr,&device,NetworkAddressSizeGet());
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;incstack = 0
 10477  005FC8  0E85               	movlw	low TunnelManagerInvalidateTunnel@addr
 10478  005FCA  6F75               	movwf	memcpy@d1& (0+255),b
 10479  005FCC  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10480  005FCE  0E81               	movlw	low TunnelManagerInvalidateTunnel@device
 10481  005FD0  6F77               	movwf	memcpy@s1& (0+255),b
 10482  005FD2  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 10483  005FD4  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 10484  005FD8  0100               	movlb	0	; () banked
 10485  005FDA  6F79               	movwf	memcpy@n& (0+255),b
 10486  005FDC  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10487  005FDE  EC5D  F036         	call	_memcpy	;wreg free
 10488                           
 10489                           ; BSR set to: 0
 10490                           ;TunnelManager.c: 103: for(i=0;i<10;i++)
 10491  005FE2  6B87               	clrf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10492  005FE4  6B88               	clrf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10493  005FE6                     l12402:
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;TunnelManager.c: 104: {
 10497                           ;TunnelManager.c: 105: if(isSameAddress(addr,tunnels[i].devAddress)==1)
 10498  005FE6  C085  F07D         	movff	TunnelManagerInvalidateTunnel@addr,isSameAddress@a1
 10499  005FEA  C086  F07E         	movff	TunnelManagerInvalidateTunnel@addr+1,isSameAddress@a1+1
 10500  005FEE  0E0C               	movlw	12
 10501  005FF0  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10502  005FF2  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 10503  005FF6  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 10504  005FFA  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10505  005FFC  50F3               	movf	prodl,w,c
 10506  005FFE  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 10507  006000  0E08               	movlw	low (_tunnels+8)
 10508  006002  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 10509  006004  6ED9               	movwf	fsr2l,c
 10510  006006  0E04               	movlw	high (_tunnels+8)
 10511  006008  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 10512  00600A  6EDA               	movwf	fsr2h,c
 10513  00600C  CFDE F07F          	movff	postinc2,isSameAddress@a2
 10514  006010  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 10515  006014  ECB1  F03A         	call	_isSameAddress	;wreg free
 10516  006018  06E8               	decf	wreg,f,c
 10517  00601A  E116               	bnz	l12406
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;TunnelManager.c: 106: {
 10521                           ;TunnelManager.c: 107: memset(&tunnels[i].TxTime,0x00,sizeof(TickMS));
 10522  00601C  0E0C               	movlw	12
 10523  00601E  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10524  006020  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 10525  006024  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 10526  006028  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10527  00602A  50F3               	movf	prodl,w,c
 10528  00602C  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 10529  00602E  0E00               	movlw	low _tunnels
 10530  006030  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 10531  006032  6F73               	movwf	memset@p1& (0+255),b
 10532  006034  0E04               	movlw	high _tunnels
 10533  006036  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 10534  006038  6F74               	movwf	(memset@p1+1)& (0+255),b
 10535  00603A  6B76               	clrf	(memset@c+1)& (0+255),b
 10536  00603C  6B75               	clrf	memset@c& (0+255),b
 10537  00603E  6B78               	clrf	(memset@n+1)& (0+255),b
 10538  006040  0E08               	movlw	8
 10539  006042  6F77               	movwf	memset@n& (0+255),b
 10540  006044  EC4C  F03A         	call	_memset	;wreg free
 10541  006048                     l12406:
 10542                           
 10543                           ; BSR set to: 0
 10544  006048  4B87               	infsnz	TunnelManagerInvalidateTunnel@i& (0+255),f,b
 10545  00604A  2B88               	incf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),f,b
 10546                           
 10547                           ; BSR set to: 0
 10548  00604C  5188               	movf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),w,b
 10549  00604E  E103               	bnz	u13460
 10550  006050  0E0A               	movlw	10
 10551  006052  5D87               	subwf	TunnelManagerInvalidateTunnel@i& (0+255),w,b
 10552  006054  E3C8               	bnc	l12402
 10553  006056                     u13460:
 10554                           
 10555                           ; BSR set to: 0
 10556  006056  0012               	return		;funcret
 10557  006058                     __end_of_TunnelManagerInvalidateTunnel:
 10558                           	opt stack 0
 10559                           tblptru	equ	0xFF8
 10560                           tblptrh	equ	0xFF7
 10561                           tblptrl	equ	0xFF6
 10562                           tablat	equ	0xFF5
 10563                           prodh	equ	0xFF4
 10564                           prodl	equ	0xFF3
 10565                           intcon3	equ	0xFF0
 10566                           postinc0	equ	0xFEE
 10567                           plusw0	equ	0xFEB
 10568                           wreg	equ	0xFE8
 10569                           postdec1	equ	0xFE5
 10570                           plusw1	equ	0xFE3
 10571                           fsr1h	equ	0xFE2
 10572                           fsr1l	equ	0xFE1
 10573                           indf2	equ	0xFDF
 10574                           postinc2	equ	0xFDE
 10575                           postdec2	equ	0xFDD
 10576                           plusw2	equ	0xFDB
 10577                           fsr2h	equ	0xFDA
 10578                           fsr2l	equ	0xFD9
 10579                           status	equ	0xFD8
 10580                           
 10581 ;; *************** function _TunnelManagerGetTunnel *****************
 10582 ;; Defined at:
 10583 ;;		line 70 in file "../TunnelManager.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;  device          2   75[BANK0 ] struct addr_t_def
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  trec            8   83[BANK0 ] struct TickMS_t_def
 10588 ;;  i               2   95[BANK0 ] unsigned int 
 10589 ;;  retAddr         2   93[BANK0 ] struct addr_t_def
 10590 ;;  addr            2   91[BANK0 ] struct addr_t_def
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  2   75[BANK0 ] struct addr_t_def
 10593 ;; Registers used:
 10594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10595 ;; Tracked objects:
 10596 ;;		On entry : F/0
 10597 ;;		On exit  : F/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;Total ram usage:       22 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    9
 10607 ;; This function calls:
 10608 ;;		_MSTickGetDiffNow
 10609 ;;		_NetworkAddressSizeGet
 10610 ;;		_isSameAddress
 10611 ;;		_memcpy
 10612 ;;		_memset
 10613 ;; This function is called by:
 10614 ;;		_radioReceivedPacket
 10615 ;;		_TMSendFormedPacketToRFD
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text30
 10620  004098                     __ptext30:
 10621                           	opt stack 0
 10622  004098                     _TunnelManagerGetTunnel:
 10623                           	opt stack 17
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;TunnelManager.c: 72: addr_t retAddr;
 10627                           ;TunnelManager.c: 73: uint16_t i;
 10628                           ;TunnelManager.c: 74: TickMS trec;
 10629                           ;TunnelManager.c: 75: addr_t addr;
 10630                           ;TunnelManager.c: 77: memset(&retAddr,0xff,sizeof(retAddr));
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;incstack = 0
 10634  004098  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 10635  00409A  6F73               	movwf	memset@p1& (0+255),b
 10636  00409C  6B74               	clrf	(memset@p1+1)& (0+255),b
 10637  00409E  6B76               	clrf	(memset@c+1)& (0+255),b
 10638  0040A0  6975               	setf	memset@c& (0+255),b
 10639  0040A2  6B78               	clrf	(memset@n+1)& (0+255),b
 10640  0040A4  0E02               	movlw	2
 10641  0040A6  6F77               	movwf	memset@n& (0+255),b
 10642  0040A8  EC4C  F03A         	call	_memset	;wreg free
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;TunnelManager.c: 78: memcpy((uint8_t*)&addr,(uint8_t*)&device,NetworkAddressSizeGet());
 10646  0040AC  0EBB               	movlw	low TunnelManagerGetTunnel@addr
 10647  0040AE  6F75               	movwf	memcpy@d1& (0+255),b
 10648  0040B0  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10649  0040B2  0EAB               	movlw	low TunnelManagerGetTunnel@device
 10650  0040B4  6F77               	movwf	memcpy@s1& (0+255),b
 10651  0040B6  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 10652  0040B8  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 10653  0040BC  0100               	movlb	0	; () banked
 10654  0040BE  6F79               	movwf	memcpy@n& (0+255),b
 10655  0040C0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10656  0040C2  EC5D  F036         	call	_memcpy	;wreg free
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;TunnelManager.c: 80: for(i=0;i<10;i++)
 10660  0040C6  6BBF               	clrf	TunnelManagerGetTunnel@i& (0+255),b
 10661  0040C8  6BC0               	clrf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10662  0040CA                     l12352:
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;TunnelManager.c: 81: {
 10666                           ;TunnelManager.c: 82: if((isSameAddress(addr,tunnels[i].devAddress)==1) && (((tunnels[i]
      +                          .TxTime.msb==0) && (tunnels[i].TxTime.lsb==0))==0))
 10667  0040CA  C0BB  F07D         	movff	TunnelManagerGetTunnel@addr,isSameAddress@a1
 10668  0040CE  C0BC  F07E         	movff	TunnelManagerGetTunnel@addr+1,isSameAddress@a1+1
 10669  0040D2  0E0C               	movlw	12
 10670  0040D4  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10671  0040D6  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10672  0040DA  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10673  0040DE  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10674  0040E0  50F3               	movf	prodl,w,c
 10675  0040E2  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10676  0040E4  0E08               	movlw	low (_tunnels+8)
 10677  0040E6  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10678  0040E8  6ED9               	movwf	fsr2l,c
 10679  0040EA  0E04               	movlw	high (_tunnels+8)
 10680  0040EC  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10681  0040EE  6EDA               	movwf	fsr2h,c
 10682  0040F0  CFDE F07F          	movff	postinc2,isSameAddress@a2
 10683  0040F4  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 10684  0040F8  ECB1  F03A         	call	_isSameAddress	;wreg free
 10685  0040FC  06E8               	decf	wreg,f,c
 10686  0040FE  E16C               	bnz	l12364
 10687                           
 10688                           ; BSR set to: 0
 10689  004100  0E0C               	movlw	12
 10690  004102  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10691  004104  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10692  004108  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10693  00410C  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10694  00410E  50F3               	movf	prodl,w,c
 10695  004110  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10696  004112  0E04               	movlw	low (_tunnels+4)
 10697  004114  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10698  004116  6ED9               	movwf	fsr2l,c
 10699  004118  0E04               	movlw	high (_tunnels+4)
 10700  00411A  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10701  00411C  6EDA               	movwf	fsr2h,c
 10702  00411E  50DE               	movf	postinc2,w,c
 10703  004120  10DE               	iorwf	postinc2,w,c
 10704  004122  10DE               	iorwf	postinc2,w,c
 10705  004124  10DE               	iorwf	postinc2,w,c
 10706  004126  E114               	bnz	l12358
 10707                           
 10708                           ; BSR set to: 0
 10709  004128  0E0C               	movlw	12
 10710  00412A  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10711  00412C  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10712  004130  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10713  004134  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10714  004136  50F3               	movf	prodl,w,c
 10715  004138  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10716  00413A  0E00               	movlw	low _tunnels
 10717  00413C  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10718  00413E  6ED9               	movwf	fsr2l,c
 10719  004140  0E04               	movlw	high _tunnels
 10720  004142  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10721  004144  6EDA               	movwf	fsr2h,c
 10722  004146  50DE               	movf	postinc2,w,c
 10723  004148  10DE               	iorwf	postinc2,w,c
 10724  00414A  10DE               	iorwf	postinc2,w,c
 10725  00414C  10DE               	iorwf	postinc2,w,c
 10726  00414E  E044               	bz	l12364
 10727  004150                     l12358:
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;TunnelManager.c: 83: {
 10731                           ;TunnelManager.c: 84: trec=tunnels[i].TxTime;
 10732  004150  0E0C               	movlw	12
 10733  004152  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10734  004154  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10735  004158  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10736  00415C  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10737  00415E  50F3               	movf	prodl,w,c
 10738  004160  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10739  004162  0E00               	movlw	low _tunnels
 10740  004164  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10741  004166  6ED9               	movwf	fsr2l,c
 10742  004168  0E04               	movlw	high _tunnels
 10743  00416A  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10744  00416C  6EDA               	movwf	fsr2h,c
 10745  00416E  EE10  F0B3         	lfsr	1,TunnelManagerGetTunnel@trec
 10746  004172  0E07               	movlw	7
 10747  004174                     u13381:
 10748  004174  CFDB FFE3          	movff	plusw2,plusw1
 10749  004178  06E8               	decf	wreg,f,c
 10750  00417A  E2FC               	bc	u13381
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;TunnelManager.c: 86: if(MSTickGetDiffNow(trec)<tmTimeout)
 10754  00417C  EE20  F0B3         	lfsr	2,TunnelManagerGetTunnel@trec
 10755  004180  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 10756  004184  0E07               	movlw	7
 10757  004186                     u13391:
 10758  004186  CFDB FFEB          	movff	plusw2,plusw0
 10759  00418A  06E8               	decf	wreg,f,c
 10760  00418C  E2FC               	bc	u13391
 10761  00418E  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 10762  004192  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 10763  004194  E121               	bnz	l12364
 10764  004196  0E60               	movlw	96
 10765  004198  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 10766  00419A  0E5B               	movlw	91
 10767  00419C  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 10768  00419E  0E03               	movlw	3
 10769  0041A0  5991               	subwfb	(?_MSTickGetDiffNow+2)& (0+255),w,b
 10770  0041A2  E21A               	bc	l12364
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;TunnelManager.c: 87: {
 10774                           ;TunnelManager.c: 88: memcpy((uint8_t*)&retAddr,(uint8_t*)&tunnels[i].parent,NetworkAddr
      +                          essSizeGet());
 10775  0041A4  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 10776  0041A6  6F75               	movwf	memcpy@d1& (0+255),b
 10777  0041A8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 10778  0041AA  0E0C               	movlw	12
 10779  0041AC  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 10780  0041AE  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 10781  0041B2  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 10782  0041B6  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 10783  0041B8  50F3               	movf	prodl,w,c
 10784  0041BA  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 10785  0041BC  0E0A               	movlw	low (_tunnels+10)
 10786  0041BE  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 10787  0041C0  6F77               	movwf	memcpy@s1& (0+255),b
 10788  0041C2  0E04               	movlw	high (_tunnels+10)
 10789  0041C4  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 10790  0041C6  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 10791  0041C8  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 10792  0041CC  0100               	movlb	0	; () banked
 10793  0041CE  6F79               	movwf	memcpy@n& (0+255),b
 10794  0041D0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 10795  0041D2  EC5D  F036         	call	_memcpy	;wreg free
 10796                           
 10797                           ;TunnelManager.c: 89: break;
 10798  0041D6  D008               	goto	l1688
 10799  0041D8                     l12364:
 10800                           
 10801                           ; BSR set to: 0
 10802  0041D8  4BBF               	infsnz	TunnelManagerGetTunnel@i& (0+255),f,b
 10803  0041DA  2BC0               	incf	(TunnelManagerGetTunnel@i+1)& (0+255),f,b
 10804                           
 10805                           ; BSR set to: 0
 10806  0041DC  51C0               	movf	(TunnelManagerGetTunnel@i+1)& (0+255),w,b
 10807  0041DE  E104               	bnz	u13410
 10808  0041E0  0E0A               	movlw	10
 10809  0041E2  5DBF               	subwf	TunnelManagerGetTunnel@i& (0+255),w,b
 10810  0041E4  E201 D771          	bnc	l12352
 10811  0041E8                     u13410:
 10812  0041E8                     l1688:
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;TunnelManager.c: 90: }
 10816                           ;TunnelManager.c: 91: }
 10817                           ;TunnelManager.c: 92: }
 10818                           ;TunnelManager.c: 93: return(retAddr);
 10819  0041E8  C0BD  F0AB         	movff	TunnelManagerGetTunnel@retAddr,?_TunnelManagerGetTunnel
 10820  0041EC  C0BE  F0AC         	movff	TunnelManagerGetTunnel@retAddr+1,?_TunnelManagerGetTunnel+1
 10821                           
 10822                           ; BSR set to: 0
 10823  0041F0  0012               	return		;funcret
 10824  0041F2                     __end_of_TunnelManagerGetTunnel:
 10825                           	opt stack 0
 10826                           tblptru	equ	0xFF8
 10827                           tblptrh	equ	0xFF7
 10828                           tblptrl	equ	0xFF6
 10829                           tablat	equ	0xFF5
 10830                           prodh	equ	0xFF4
 10831                           prodl	equ	0xFF3
 10832                           intcon3	equ	0xFF0
 10833                           postinc0	equ	0xFEE
 10834                           plusw0	equ	0xFEB
 10835                           wreg	equ	0xFE8
 10836                           postdec1	equ	0xFE5
 10837                           plusw1	equ	0xFE3
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           postdec2	equ	0xFDD
 10843                           plusw2	equ	0xFDB
 10844                           fsr2h	equ	0xFDA
 10845                           fsr2l	equ	0xFD9
 10846                           status	equ	0xFD8
 10847                           
 10848 ;; *************** function _TMSendFormedPacketTowardsCoordinator *****************
 10849 ;; Defined at:
 10850 ;;		line 151 in file "../TransportManager.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  data            2   42[BANK0 ] PTR unsigned char 
 10853 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), TxBuffer(64), RxPacket.Payload(64), 
 10854 ;;		 -> RxPacket(142), 
 10855 ;;  size            2   44[BANK0 ] unsigned int 
 10856 ;;  isFormed        1   46[BANK0 ] unsigned char 
 10857 ;;  isSecure        1   47[BANK0 ] unsigned char 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  i               2   51[BANK0 ] unsigned int 
 10860 ;;  res             1   50[BANK0 ] unsigned char 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      unsigned char 
 10863 ;; Registers used:
 10864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10865 ;; Tracked objects:
 10866 ;;		On entry : F/0
 10867 ;;		On exit  : F/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10874 ;;Total ram usage:       11 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    9
 10877 ;; This function calls:
 10878 ;;		_NetworkHasRoute
 10879 ;;		_memcpy
 10880 ;; This function is called by:
 10881 ;;		_radioReceivedPacket
 10882 ;;		_NetworkUnicastData
 10883 ;;		_TMSendFormedPacketToRFD
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text31
 10888  004348                     __ptext31:
 10889                           	opt stack 0
 10890  004348                     _TMSendFormedPacketTowardsCoordinator:
 10891                           	opt stack 19
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;TransportManager.c: 153: bool res=0;
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;incstack = 0
 10898  004348  6B92               	clrf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;TransportManager.c: 154: uint16_t i;
 10902                           ;TransportManager.c: 155: if(size>64-1)
 10903  00434A  518D               	movf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),w,b
 10904  00434C  E103               	bnz	u13280
 10905  00434E  0E40               	movlw	64
 10906  004350  5D8C               	subwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),w,b
 10907  004352  E303               	bnc	l12306
 10908  004354                     u13280:
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;TransportManager.c: 156: {
 10912                           ;TransportManager.c: 157: size=64-1;
 10913  004354  6B8D               	clrf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),b
 10914  004356  0E3F               	movlw	63
 10915  004358  6F8C               	movwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),b
 10916  00435A                     l12306:
 10917                           
 10918                           ; BSR set to: 0
 10919                           ;TransportManager.c: 158: }
 10920                           ;TransportManager.c: 160: for(i=0;i<2;i++)
 10921  00435A  6B93               	clrf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10922  00435C  6B94               	clrf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10923  00435E                     l12312:
 10924                           
 10925                           ; BSR set to: 0
 10926                           ;TransportManager.c: 161: {
 10927                           ;TransportManager.c: 162: if(TMQ[i].TMQState==TMQIdle)
 10928  00435E  0E4C               	movlw	76
 10929  004360  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10930  004362  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10931  004366  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10932  00436A  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10933  00436C  50F3               	movf	prodl,w,c
 10934  00436E  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10935  004370  0E4B               	movlw	low (_TMQ+75)
 10936  004372  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10937  004374  6ED9               	movwf	fsr2l,c
 10938  004376  0E06               	movlw	high (_TMQ+75)
 10939  004378  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10940  00437A  6EDA               	movwf	fsr2h,c
 10941  00437C  50DF               	movf	indf2,w,c
 10942  00437E  E007               	bz	l12320
 10943                           
 10944                           ; BSR set to: 0
 10945  004380  4B93               	infsnz	TMSendFormedPacketTowardsCoordinator@i& (0+255),f,b
 10946  004382  2B94               	incf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),f,b
 10947                           
 10948                           ; BSR set to: 0
 10949  004384  5194               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 10950  004386  E103               	bnz	u13300
 10951  004388  0E02               	movlw	2
 10952  00438A  5D93               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 10953  00438C  E3E8               	bnc	l12312
 10954  00438E                     u13300:
 10955  00438E                     l12320:
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;TransportManager.c: 165: }
 10959                           ;TransportManager.c: 166: }
 10960                           ;TransportManager.c: 167: if( (i<2) && (NetworkHasRoute()==1) )
 10961  00438E  5194               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 10962  004390  E17E               	bnz	l12338
 10963  004392  0E02               	movlw	2
 10964  004394  5D93               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 10965  004396  E27B               	bc	l12338
 10966                           
 10967                           ; BSR set to: 0
 10968  004398  EC21  F039         	call	_NetworkHasRoute	;wreg free
 10969  00439C  06E8               	decf	wreg,f,c
 10970  00439E  E177               	bnz	l12338
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;TransportManager.c: 168: {
 10974                           ;TransportManager.c: 169: memcpy(TMQ[i].data,data,size);
 10975  0043A0  0E4C               	movlw	76
 10976  0043A2  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10977  0043A4  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10978  0043A8  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 10979  0043AC  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 10980  0043AE  50F3               	movf	prodl,w,c
 10981  0043B0  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 10982  0043B2  0E00               	movlw	low _TMQ
 10983  0043B4  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 10984  0043B6  6F75               	movwf	memcpy@d1& (0+255),b
 10985  0043B8  0E06               	movlw	high _TMQ
 10986  0043BA  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 10987  0043BC  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 10988  0043BE  C08A  F077         	movff	TMSendFormedPacketTowardsCoordinator@data,memcpy@s1
 10989  0043C2  C08B  F078         	movff	TMSendFormedPacketTowardsCoordinator@data+1,memcpy@s1+1
 10990  0043C6  C08C  F079         	movff	TMSendFormedPacketTowardsCoordinator@size,memcpy@n
 10991  0043CA  C08D  F07A         	movff	TMSendFormedPacketTowardsCoordinator@size+1,memcpy@n+1
 10992  0043CE  EC5D  F036         	call	_memcpy	;wreg free
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;TransportManager.c: 170: TMQ[i].datasize=size;
 10996  0043D2  0E4C               	movlw	76
 10997  0043D4  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 10998  0043D6  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 10999  0043DA  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11000  0043DE  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11001  0043E0  50F3               	movf	prodl,w,c
 11002  0043E2  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11003  0043E4  0E40               	movlw	low (_TMQ+64)
 11004  0043E6  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11005  0043E8  6ED9               	movwf	fsr2l,c
 11006  0043EA  0E06               	movlw	high (_TMQ+64)
 11007  0043EC  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11008  0043EE  6EDA               	movwf	fsr2h,c
 11009  0043F0  C08C  FFDF         	movff	TMSendFormedPacketTowardsCoordinator@size,indf2
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;TransportManager.c: 171: TMQ[i].retryCount=0;
 11013  0043F4  0E4C               	movlw	76
 11014  0043F6  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11015  0043F8  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11016  0043FC  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11017  004400  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11018  004402  50F3               	movf	prodl,w,c
 11019  004404  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11020  004406  0E49               	movlw	low (_TMQ+73)
 11021  004408  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11022  00440A  6ED9               	movwf	fsr2l,c
 11023  00440C  0E06               	movlw	high (_TMQ+73)
 11024  00440E  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11025  004410  6EDA               	movwf	fsr2h,c
 11026  004412  6ADF               	clrf	indf2,c
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;TransportManager.c: 172: TMQ[i].TMQState=TMQSend;
 11030  004414  0E4C               	movlw	76
 11031  004416  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11032  004418  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11033  00441C  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11034  004420  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11035  004422  50F3               	movf	prodl,w,c
 11036  004424  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11037  004426  0E4B               	movlw	low (_TMQ+75)
 11038  004428  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11039  00442A  6ED9               	movwf	fsr2l,c
 11040  00442C  0E06               	movlw	high (_TMQ+75)
 11041  00442E  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11042  004430  6EDA               	movwf	fsr2h,c
 11043  004432  0E01               	movlw	1
 11044  004434  6EDF               	movwf	indf2,c
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;TransportManager.c: 173: TMQ[i].flags.isFormedPacket=isFormed;
 11048  004436  0E4C               	movlw	76
 11049  004438  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11050  00443A  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11051  00443E  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11052  004442  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11053  004444  50F3               	movf	prodl,w,c
 11054  004446  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11055  004448  0E4A               	movlw	low (_TMQ+74)
 11056  00444A  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11057  00444C  6ED9               	movwf	fsr2l,c
 11058  00444E  0E06               	movlw	high (_TMQ+74)
 11059  004450  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11060  004452  6EDA               	movwf	fsr2h,c
 11061  004454  B18E               	btfsc	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),0,b
 11062  004456  D002               	bra	u13335
 11063  004458  90DF               	bcf	indf2,0,c
 11064  00445A  D001               	bra	u13336
 11065  00445C                     u13335:
 11066  00445C  80DF               	bsf	indf2,0,c
 11067  00445E                     u13336:
 11068                           
 11069                           ; BSR set to: 6
 11070                           ;TransportManager.c: 174: TMQ[i].flags.isSecure=isSecure;
 11071  00445E  0E4C               	movlw	76
 11072  004460  0100               	movlb	0	; () banked
 11073  004462  0393               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11074  004464  CFF3 F090          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11075  004468  CFF4 F091          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11076  00446C  0394               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11077  00446E  50F3               	movf	prodl,w,c
 11078  004470  2791               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11079  004472  0E4A               	movlw	low (_TMQ+74)
 11080  004474  2590               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11081  004476  6ED9               	movwf	fsr2l,c
 11082  004478  0E06               	movlw	high (_TMQ+74)
 11083  00447A  2191               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11084  00447C  6EDA               	movwf	fsr2h,c
 11085  00447E  B18F               	btfsc	TMSendFormedPacketTowardsCoordinator@isSecure& (0+255),0,b
 11086  004480  D002               	bra	u13345
 11087  004482  92DF               	bcf	indf2,1,c
 11088  004484  D001               	bra	u13346
 11089  004486                     u13345:
 11090  004486  82DF               	bsf	indf2,1,c
 11091  004488                     u13346:
 11092                           
 11093                           ; BSR set to: 6
 11094                           ;TransportManager.c: 175: res=1;
 11095  004488  0E01               	movlw	1
 11096  00448A  0100               	movlb	0	; () banked
 11097  00448C  6F92               	movwf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 11098  00448E                     l12338:
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;TransportManager.c: 176: }
 11102                           ;TransportManager.c: 177: return(res);
 11103  00448E  5192               	movf	TMSendFormedPacketTowardsCoordinator@res& (0+255),w,b
 11104                           
 11105                           ; BSR set to: 0
 11106  004490  0012               	return		;funcret
 11107  004492                     __end_of_TMSendFormedPacketTowardsCoordinator:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           intcon3	equ	0xFF0
 11116                           postinc0	equ	0xFEE
 11117                           plusw0	equ	0xFEB
 11118                           wreg	equ	0xFE8
 11119                           postdec1	equ	0xFE5
 11120                           plusw1	equ	0xFE3
 11121                           fsr1h	equ	0xFE2
 11122                           fsr1l	equ	0xFE1
 11123                           indf2	equ	0xFDF
 11124                           postinc2	equ	0xFDE
 11125                           postdec2	equ	0xFDD
 11126                           plusw2	equ	0xFDB
 11127                           fsr2h	equ	0xFDA
 11128                           fsr2l	equ	0xFD9
 11129                           status	equ	0xFD8
 11130                           
 11131 ;; *************** function _LE_RemoveNeighborDevice *****************
 11132 ;; Defined at:
 11133 ;;		line 519 in file "../LinkEstimator.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  device          2   55[BANK0 ] struct addr_t_def
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;  i               2   59[BANK0 ] unsigned int 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : F/0
 11144 ;;		On exit  : F/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;Total ram usage:        6 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   10
 11154 ;; This function calls:
 11155 ;;		_RouterEvicted
 11156 ;;		_le_findIdx
 11157 ;; This function is called by:
 11158 ;;		_radioReceivedPacket
 11159 ;;		_TMSendFormedPacketToRFD
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text32
 11164  00686E                     __ptext32:
 11165                           	opt stack 0
 11166  00686E                     _LE_RemoveNeighborDevice:
 11167                           	opt stack 16
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;LinkEstimator.c: 521: uint16_t i=le_findIdx(device);
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;incstack = 0
 11174  00686E  C097  F081         	movff	LE_RemoveNeighborDevice@device,le_findIdx@ll_addr
 11175  006872  C098  F082         	movff	LE_RemoveNeighborDevice@device+1,le_findIdx@ll_addr+1
 11176  006876  EC84  F035         	call	_le_findIdx	;wreg free
 11177  00687A  6F9B               	movwf	LE_RemoveNeighborDevice@i& (0+255),b
 11178  00687C  6B9C               	clrf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;LinkEstimator.c: 522: if(i != 0xff)
 11182  00687E  299B               	incf	LE_RemoveNeighborDevice@i& (0+255),w,b
 11183  006880  119C               	iorwf	(LE_RemoveNeighborDevice@i+1)& (0+255),w,b
 11184  006882  B4D8               	btfsc	status,2,c
 11185  006884  0012               	return	
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;LinkEstimator.c: 523: {
 11189                           ;LinkEstimator.c: 524: RouterEvicted(neighbor_tbl[i].ll_addr);
 11190  006886  0E0B               	movlw	11
 11191  006888  039B               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11192  00688A  CFF3 F099          	movff	prodl,??_LE_RemoveNeighborDevice
 11193  00688E  CFF4 F09A          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11194  006892  039C               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11195  006894  50F3               	movf	prodl,w,c
 11196  006896  279A               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11197  006898  0E00               	movlw	low _neighbor_tbl
 11198  00689A  2599               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11199  00689C  6ED9               	movwf	fsr2l,c
 11200  00689E  0E05               	movlw	high _neighbor_tbl
 11201  0068A0  219A               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11202  0068A2  6EDA               	movwf	fsr2h,c
 11203  0068A4  CFDE F08F          	movff	postinc2,RouterEvicted@address
 11204  0068A8  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 11205  0068AC  ECB1  F02E         	call	_RouterEvicted	;wreg free
 11206                           
 11207                           ;LinkEstimator.c: 525: neighbor_tbl[i].flags=0;
 11208  0068B0  0E0B               	movlw	11
 11209  0068B2  0100               	movlb	0	; () banked
 11210  0068B4  039B               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11211  0068B6  CFF3 F099          	movff	prodl,??_LE_RemoveNeighborDevice
 11212  0068BA  CFF4 F09A          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11213  0068BE  039C               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11214  0068C0  50F3               	movf	prodl,w,c
 11215  0068C2  279A               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11216  0068C4  0E05               	movlw	low (_neighbor_tbl+5)
 11217  0068C6  2599               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11218  0068C8  6ED9               	movwf	fsr2l,c
 11219  0068CA  0E05               	movlw	high (_neighbor_tbl+5)
 11220  0068CC  219A               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11221  0068CE  6EDA               	movwf	fsr2h,c
 11222  0068D0  6ADF               	clrf	indf2,c
 11223                           
 11224                           ; BSR set to: 0
 11225  0068D2  0C00               	retlw	0	;funcret
 11226  0068D4                     __end_of_LE_RemoveNeighborDevice:
 11227                           	opt stack 0
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon3	equ	0xFF0
 11235                           postinc0	equ	0xFEE
 11236                           plusw0	equ	0xFEB
 11237                           wreg	equ	0xFE8
 11238                           postdec1	equ	0xFE5
 11239                           plusw1	equ	0xFE3
 11240                           fsr1h	equ	0xFE2
 11241                           fsr1l	equ	0xFE1
 11242                           indf2	equ	0xFDF
 11243                           postinc2	equ	0xFDE
 11244                           postdec2	equ	0xFDD
 11245                           plusw2	equ	0xFDB
 11246                           fsr2h	equ	0xFDA
 11247                           fsr2l	equ	0xFD9
 11248                           status	equ	0xFD8
 11249                           
 11250 ;; *************** function _GetRouteAddressOfChild *****************
 11251 ;; Defined at:
 11252 ;;		line 438 in file "../RouteManager.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  child           2   43[BANK0 ] struct addr_t_def
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  i               2   47[BANK0 ] unsigned int 
 11257 ;;  res             2   45[BANK0 ] struct addr_t_def
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  2   43[BANK0 ] struct addr_t_def
 11260 ;; Registers used:
 11261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : F/1
 11264 ;;		On exit  : E/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;Total ram usage:        6 bytes
 11272 ;; Hardware stack levels used:    1
 11273 ;; Hardware stack levels required when called:    8
 11274 ;; This function calls:
 11275 ;;		_CoordinatorAddress
 11276 ;;		_LE_GetNeighborDeviceType
 11277 ;;		_RoutingTableFindDeviceOrParent
 11278 ;;		_le_findIdx
 11279 ;; This function is called by:
 11280 ;;		_radioReceivedPacket
 11281 ;;		_TMSendFormedPacketToRFD
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text33
 11286  006A56                     __ptext33:
 11287                           	opt stack 0
 11288  006A56                     _GetRouteAddressOfChild:
 11289                           	opt stack 18
 11290                           
 11291                           ; BSR set to: 1
 11292                           ;RouteManager.c: 440: uint16_t i;
 11293                           ;RouteManager.c: 441: addr_t res;
 11294                           ;RouteManager.c: 442: i=le_findIdx(child);
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;incstack = 0
 11298  006A56  C08B  F081         	movff	GetRouteAddressOfChild@child,le_findIdx@ll_addr
 11299  006A5A  C08C  F082         	movff	GetRouteAddressOfChild@child+1,le_findIdx@ll_addr+1
 11300  006A5E  EC84  F035         	call	_le_findIdx	;wreg free
 11301  006A62  6F8F               	movwf	GetRouteAddressOfChild@i& (0+255),b
 11302  006A64  6B90               	clrf	(GetRouteAddressOfChild@i+1)& (0+255),b
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;RouteManager.c: 443: res=child;
 11306  006A66  C08B  F08D         	movff	GetRouteAddressOfChild@child,GetRouteAddressOfChild@res
 11307  006A6A  C08C  F08E         	movff	GetRouteAddressOfChild@child+1,GetRouteAddressOfChild@res+1
 11308                           
 11309                           ; BSR set to: 0
 11310                           ;RouteManager.c: 444: if(i==0xff)
 11311  006A6E  298F               	incf	GetRouteAddressOfChild@i& (0+255),w,b
 11312  006A70  1190               	iorwf	(GetRouteAddressOfChild@i+1)& (0+255),w,b
 11313  006A72  E10B               	bnz	l12376
 11314                           
 11315                           ; BSR set to: 0
 11316                           ;RouteManager.c: 445: {
 11317                           ;RouteManager.c: 447: res=RoutingTableFindDeviceOrParent(child);
 11318  006A74  C08B  F081         	movff	GetRouteAddressOfChild@child,RoutingTableFindDeviceOrParent@address
 11319  006A78  C08C  F082         	movff	GetRouteAddressOfChild@child+1,RoutingTableFindDeviceOrParent@address+1
 11320  006A7C  ECB2  F02D         	call	_RoutingTableFindDeviceOrParent	;wreg free
 11321  006A80  C081  F08D         	movff	?_RoutingTableFindDeviceOrParent,GetRouteAddressOfChild@res
 11322  006A84  C082  F08E         	movff	?_RoutingTableFindDeviceOrParent+1,GetRouteAddressOfChild@res+1
 11323                           
 11324                           ;RouteManager.c: 448: }else if(LE_GetNeighborDeviceType(i)==DeviceSleepingRFD)
 11325  006A88  D00E               	goto	l12380
 11326  006A8A                     l12376:
 11327                           
 11328                           ; BSR set to: 0
 11329  006A8A  C08F  F073         	movff	GetRouteAddressOfChild@i,LE_GetNeighborDeviceType@index
 11330  006A8E  C090  F074         	movff	GetRouteAddressOfChild@i+1,LE_GetNeighborDeviceType@index+1
 11331  006A92  EC8C  F038         	call	_LE_GetNeighborDeviceType	;wreg free
 11332  006A96  0A02               	xorlw	2
 11333  006A98  E106               	bnz	l12380
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;RouteManager.c: 449: {
 11337                           ;RouteManager.c: 450: res=CoordinatorAddress();
 11338  006A9A  EC08  F03C         	call	_CoordinatorAddress	;wreg free
 11339  006A9E  C073  F08D         	movff	?_CoordinatorAddress,GetRouteAddressOfChild@res
 11340  006AA2  C074  F08E         	movff	?_CoordinatorAddress+1,GetRouteAddressOfChild@res+1
 11341  006AA6                     l12380:
 11342                           
 11343                           ;RouteManager.c: 451: }
 11344                           ;RouteManager.c: 452: return(res);
 11345  006AA6  C08D  F08B         	movff	GetRouteAddressOfChild@res,?_GetRouteAddressOfChild
 11346  006AAA  C08E  F08C         	movff	GetRouteAddressOfChild@res+1,?_GetRouteAddressOfChild+1
 11347  006AAE  0012               	return		;funcret
 11348  006AB0                     __end_of_GetRouteAddressOfChild:
 11349                           	opt stack 0
 11350                           tblptru	equ	0xFF8
 11351                           tblptrh	equ	0xFF7
 11352                           tblptrl	equ	0xFF6
 11353                           tablat	equ	0xFF5
 11354                           prodh	equ	0xFF4
 11355                           prodl	equ	0xFF3
 11356                           intcon3	equ	0xFF0
 11357                           postinc0	equ	0xFEE
 11358                           plusw0	equ	0xFEB
 11359                           wreg	equ	0xFE8
 11360                           postdec1	equ	0xFE5
 11361                           plusw1	equ	0xFE3
 11362                           fsr1h	equ	0xFE2
 11363                           fsr1l	equ	0xFE1
 11364                           indf2	equ	0xFDF
 11365                           postinc2	equ	0xFDE
 11366                           postdec2	equ	0xFDD
 11367                           plusw2	equ	0xFDB
 11368                           fsr2h	equ	0xFDA
 11369                           fsr2l	equ	0xFD9
 11370                           status	equ	0xFD8
 11371                           
 11372 ;; *************** function _RoutingTableFindDeviceOrParent *****************
 11373 ;; Defined at:
 11374 ;;		line 413 in file "../RouteManager.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  address         2   33[BANK0 ] struct addr_t_def
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  entry           2   41[BANK0 ] PTR struct routing_table
 11379 ;;		 -> routingTable(90), 
 11380 ;;  res             2   39[BANK0 ] struct addr_t_def
 11381 ;;  i               2   37[BANK0 ] unsigned int 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  2   33[BANK0 ] struct addr_t_def
 11384 ;; Registers used:
 11385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : F/0
 11388 ;;		On exit  : F/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;Total ram usage:       10 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:    7
 11398 ;; This function calls:
 11399 ;;		_NetworkAddressSizeGet
 11400 ;;		_isSameAddress
 11401 ;;		_memset
 11402 ;; This function is called by:
 11403 ;;		_GetRouteAddressOfChild
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text34
 11408  005B64                     __ptext34:
 11409                           	opt stack 0
 11410  005B64                     _RoutingTableFindDeviceOrParent:
 11411                           	opt stack 18
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;RouteManager.c: 415: uint16_t i;
 11415                           ;RouteManager.c: 416: routing_table_entry_t *entry;
 11416                           ;RouteManager.c: 417: addr_t res;
 11417                           ;RouteManager.c: 419: memset(res.bytes,0xff,NetworkAddressSizeGet());
 11418                           
 11419                           ;incstack = 0
 11420  005B64  0E87               	movlw	low RoutingTableFindDeviceOrParent@res
 11421  005B66  6F73               	movwf	memset@p1& (0+255),b
 11422  005B68  6B74               	clrf	(memset@p1+1)& (0+255),b
 11423  005B6A  6B76               	clrf	(memset@c+1)& (0+255),b
 11424  005B6C  6975               	setf	memset@c& (0+255),b
 11425  005B6E  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 11426  005B72  0100               	movlb	0	; () banked
 11427  005B74  6F77               	movwf	memset@n& (0+255),b
 11428  005B76  6B78               	clrf	(memset@n+1)& (0+255),b
 11429  005B78  EC4C  F03A         	call	_memset	;wreg free
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;RouteManager.c: 421: for (i = 0; i < routingTableActive; i++)
 11433  005B7C  6B85               	clrf	RoutingTableFindDeviceOrParent@i& (0+255),b
 11434  005B7E  6B86               	clrf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 11435  005B80  D03D               	goto	l12112
 11436  005B82                     l12098:
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;RouteManager.c: 422: {
 11440                           ;RouteManager.c: 423: entry = &routingTable[i];
 11441  005B82  0E09               	movlw	9
 11442  005B84  0385               	mulwf	RoutingTableFindDeviceOrParent@i& (0+255),b
 11443  005B86  CFF3 F083          	movff	prodl,??_RoutingTableFindDeviceOrParent
 11444  005B8A  CFF4 F084          	movff	prodh,??_RoutingTableFindDeviceOrParent+1
 11445  005B8E  0386               	mulwf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 11446  005B90  50F3               	movf	prodl,w,c
 11447  005B92  2784               	addwf	(??_RoutingTableFindDeviceOrParent+1)& (0+255),f,b
 11448  005B94  0E98               	movlw	low _routingTable
 11449  005B96  2583               	addwf	??_RoutingTableFindDeviceOrParent& (0+255),w,b
 11450  005B98  6F89               	movwf	RoutingTableFindDeviceOrParent@entry& (0+255),b
 11451  005B9A  0E06               	movlw	high _routingTable
 11452  005B9C  2184               	addwfc	(??_RoutingTableFindDeviceOrParent+1)& (0+255),w,b
 11453  005B9E  6F8A               	movwf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;RouteManager.c: 425: if (isSameAddress(entry->neighbor, address)==1)
 11457  005BA0  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 11458  005BA4  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 11459  005BA8  CFDE F07D          	movff	postinc2,isSameAddress@a1
 11460  005BAC  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 11461  005BB0  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 11462  005BB4  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 11463  005BB8  ECB1  F03A         	call	_isSameAddress	;wreg free
 11464  005BBC  06E8               	decf	wreg,f,c
 11465  005BBE  E101               	bnz	l12106
 11466  005BC0  D012               	goto	l12108
 11467  005BC2                     l12106:
 11468                           
 11469                           ; BSR set to: 0
 11470  005BC2  EE20 F002          	lfsr	2,2
 11471  005BC6  5189               	movf	RoutingTableFindDeviceOrParent@entry& (0+255),w,b
 11472  005BC8  26D9               	addwf	fsr2l,f,c
 11473  005BCA  518A               	movf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),w,b
 11474  005BCC  22DA               	addwfc	fsr2h,f,c
 11475  005BCE  CFDE F07D          	movff	postinc2,isSameAddress@a1
 11476  005BD2  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 11477  005BD6  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 11478  005BDA  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 11479  005BDE  ECB1  F03A         	call	_isSameAddress	;wreg free
 11480  005BE2  06E8               	decf	wreg,f,c
 11481  005BE4  E109               	bnz	l12110
 11482  005BE6                     l12108:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;RouteManager.c: 430: {
 11486                           ;RouteManager.c: 431: res=entry->neighbor;
 11487  005BE6  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 11488  005BEA  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 11489  005BEE  CFDE F087          	movff	postinc2,RoutingTableFindDeviceOrParent@res
 11490  005BF2  CFDD F088          	movff	postdec2,RoutingTableFindDeviceOrParent@res+1
 11491                           
 11492                           ;RouteManager.c: 432: break;
 11493  005BF6  D007               	goto	l1362
 11494  005BF8                     l12110:
 11495                           
 11496                           ; BSR set to: 0
 11497  005BF8  4B85               	infsnz	RoutingTableFindDeviceOrParent@i& (0+255),f,b
 11498  005BFA  2B86               	incf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),f,b
 11499  005BFC                     l12112:
 11500                           
 11501                           ; BSR set to: 0
 11502  005BFC  51EB               	movf	_routingTableActive& (0+255),w,b
 11503  005BFE  5D85               	subwf	RoutingTableFindDeviceOrParent@i& (0+255),w,b
 11504  005C00  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 11505  005C02  5986               	subwfb	(RoutingTableFindDeviceOrParent@i+1)& (0+255),w,b
 11506  005C04  E3BE               	bnc	l12098
 11507  005C06                     l1362:
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;RouteManager.c: 433: }
 11511                           ;RouteManager.c: 434: }
 11512                           ;RouteManager.c: 435: return(res);
 11513  005C06  C087  F081         	movff	RoutingTableFindDeviceOrParent@res,?_RoutingTableFindDeviceOrParent
 11514  005C0A  C088  F082         	movff	RoutingTableFindDeviceOrParent@res+1,?_RoutingTableFindDeviceOrParent+1
 11515                           
 11516                           ; BSR set to: 0
 11517  005C0E  0012               	return		;funcret
 11518  005C10                     __end_of_RoutingTableFindDeviceOrParent:
 11519                           	opt stack 0
 11520                           tblptru	equ	0xFF8
 11521                           tblptrh	equ	0xFF7
 11522                           tblptrl	equ	0xFF6
 11523                           tablat	equ	0xFF5
 11524                           prodh	equ	0xFF4
 11525                           prodl	equ	0xFF3
 11526                           intcon3	equ	0xFF0
 11527                           postinc0	equ	0xFEE
 11528                           plusw0	equ	0xFEB
 11529                           wreg	equ	0xFE8
 11530                           postdec1	equ	0xFE5
 11531                           plusw1	equ	0xFE3
 11532                           fsr1h	equ	0xFE2
 11533                           fsr1l	equ	0xFE1
 11534                           indf2	equ	0xFDF
 11535                           postinc2	equ	0xFDE
 11536                           postdec2	equ	0xFDD
 11537                           plusw2	equ	0xFDB
 11538                           fsr2h	equ	0xFDA
 11539                           fsr2l	equ	0xFD9
 11540                           status	equ	0xFD8
 11541                           
 11542 ;; *************** function _LE_GetNeighborDeviceType *****************
 11543 ;; Defined at:
 11544 ;;		line 509 in file "../LinkEstimator.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;  index           2   19[BANK0 ] unsigned int 
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;  dev             1   24[BANK0 ] enum E144
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      enum E145
 11551 ;; Registers used:
 11552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11553 ;; Tracked objects:
 11554 ;;		On entry : F/0
 11555 ;;		On exit  : F/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11562 ;;Total ram usage:        6 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:    5
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_GetRouteAddressOfChild
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text35
 11573  007118                     __ptext35:
 11574                           	opt stack 0
 11575  007118                     _LE_GetNeighborDeviceType:
 11576                           	opt stack 20
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;LinkEstimator.c: 511: DeviceType_t dev=DeviceRFD;
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;incstack = 0
 11583  007118  0E01               	movlw	1
 11584  00711A  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;LinkEstimator.c: 512: if(index<=20)
 11588  00711C  5174               	movf	(LE_GetNeighborDeviceType@index+1)& (0+255),w,b
 11589  00711E  E118               	bnz	l12140
 11590  007120  0E15               	movlw	21
 11591  007122  5D73               	subwf	LE_GetNeighborDeviceType@index& (0+255),w,b
 11592  007124  E215               	bc	l12140
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;LinkEstimator.c: 513: {
 11596                           ;LinkEstimator.c: 514: dev=(DeviceType_t)((neighbor_tbl[index].flags & 0x70)>>4);
 11597  007126  0E0B               	movlw	11
 11598  007128  0373               	mulwf	LE_GetNeighborDeviceType@index& (0+255),b
 11599  00712A  CFF3 F075          	movff	prodl,??_LE_GetNeighborDeviceType
 11600  00712E  CFF4 F076          	movff	prodh,??_LE_GetNeighborDeviceType+1
 11601  007132  0374               	mulwf	(LE_GetNeighborDeviceType@index+1)& (0+255),b
 11602  007134  50F3               	movf	prodl,w,c
 11603  007136  2776               	addwf	(??_LE_GetNeighborDeviceType+1)& (0+255),f,b
 11604  007138  0E05               	movlw	low (_neighbor_tbl+5)
 11605  00713A  2575               	addwf	??_LE_GetNeighborDeviceType& (0+255),w,b
 11606  00713C  6ED9               	movwf	fsr2l,c
 11607  00713E  0E05               	movlw	high (_neighbor_tbl+5)
 11608  007140  2176               	addwfc	(??_LE_GetNeighborDeviceType+1)& (0+255),w,b
 11609  007142  6EDA               	movwf	fsr2h,c
 11610  007144  50DF               	movf	indf2,w,c
 11611  007146  6F77               	movwf	(??_LE_GetNeighborDeviceType+2)& (0+255),b
 11612  007148  3977               	swapf	(??_LE_GetNeighborDeviceType+2)& (0+255),w,b
 11613  00714A  0B0F               	andlw	15
 11614  00714C  0B07               	andlw	7
 11615  00714E  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 11616  007150                     l12140:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;LinkEstimator.c: 515: }
 11620                           ;LinkEstimator.c: 516: return(dev);
 11621  007150  5178               	movf	LE_GetNeighborDeviceType@dev& (0+255),w,b
 11622                           
 11623                           ; BSR set to: 0
 11624  007152  0012               	return		;funcret
 11625  007154                     __end_of_LE_GetNeighborDeviceType:
 11626                           	opt stack 0
 11627                           tblptru	equ	0xFF8
 11628                           tblptrh	equ	0xFF7
 11629                           tblptrl	equ	0xFF6
 11630                           tablat	equ	0xFF5
 11631                           prodh	equ	0xFF4
 11632                           prodl	equ	0xFF3
 11633                           intcon3	equ	0xFF0
 11634                           postinc0	equ	0xFEE
 11635                           plusw0	equ	0xFEB
 11636                           wreg	equ	0xFE8
 11637                           postdec1	equ	0xFE5
 11638                           plusw1	equ	0xFE3
 11639                           fsr1h	equ	0xFE2
 11640                           fsr1l	equ	0xFE1
 11641                           indf2	equ	0xFDF
 11642                           postinc2	equ	0xFDE
 11643                           postdec2	equ	0xFDD
 11644                           plusw2	equ	0xFDB
 11645                           fsr2h	equ	0xFDA
 11646                           fsr2l	equ	0xFD9
 11647                           status	equ	0xFD8
 11648                           
 11649 ;; *************** function _CoordinatorAddress *****************
 11650 ;; Defined at:
 11651 ;;		line 265 in file "../NetworkManager.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;		None
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  2   19[BANK0 ] struct addr_t_def
 11658 ;; Registers used:
 11659 ;;		None
 11660 ;; Tracked objects:
 11661 ;;		On entry : E/1
 11662 ;;		On exit  : E/0
 11663 ;;		Unchanged: E/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;Total ram usage:        2 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:    5
 11672 ;; This function calls:
 11673 ;;		Nothing
 11674 ;; This function is called by:
 11675 ;;		_NetworkUnicastData
 11676 ;;		_GetRouteAddressOfChild
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           	psect	text36
 11681  007810                     __ptext36:
 11682                           	opt stack 0
 11683  007810                     _CoordinatorAddress:
 11684                           	opt stack 20
 11685                           
 11686                           ;NetworkManager.c: 267: return(CoordinatorAddr);
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;incstack = 0
 11690  007810  C1E8  F073         	movff	_CoordinatorAddr,?_CoordinatorAddress
 11691  007814  C1E9  F074         	movff	_CoordinatorAddr+1,?_CoordinatorAddress+1
 11692  007818  0012               	return		;funcret
 11693  00781A                     __end_of_CoordinatorAddress:
 11694                           	opt stack 0
 11695                           tblptru	equ	0xFF8
 11696                           tblptrh	equ	0xFF7
 11697                           tblptrl	equ	0xFF6
 11698                           tablat	equ	0xFF5
 11699                           prodh	equ	0xFF4
 11700                           prodl	equ	0xFF3
 11701                           intcon3	equ	0xFF0
 11702                           postinc0	equ	0xFEE
 11703                           plusw0	equ	0xFEB
 11704                           wreg	equ	0xFE8
 11705                           postdec1	equ	0xFE5
 11706                           plusw1	equ	0xFE3
 11707                           fsr1h	equ	0xFE2
 11708                           fsr1l	equ	0xFE1
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           postdec2	equ	0xFDD
 11712                           plusw2	equ	0xFDB
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function _BroadcastManagerDelaySend *****************
 11718 ;; Defined at:
 11719 ;;		line 52 in file "../BroadcastManager.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  pkt             2   63[BANK0 ] PTR unsigned char 
 11722 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), TMSendDataToRFD@databuff(64), 
 11723 ;;		 -> NetworkBroadcastData@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 11724 ;;  size            2   65[BANK0 ] unsigned int 
 11725 ;;  isSecure        1   67[BANK0 ] unsigned char 
 11726 ;;  isInterPan      1   68[BANK0 ] unsigned char 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  i               2   76[BANK0 ] unsigned int 
 11729 ;;  res             1   75[BANK0 ] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      unsigned char 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : F/0
 11736 ;;		On exit  : F/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11739 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11740 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11741 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11742 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11743 ;;Total ram usage:       15 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    8
 11746 ;; This function calls:
 11747 ;;		_AddMSToTick
 11748 ;;		_MSTickGet
 11749 ;;		_krnd
 11750 ;;		_memcpy
 11751 ;; This function is called by:
 11752 ;;		_radioReceivedPacket
 11753 ;;		_TMSendFormedPacketToRFD
 11754 ;;		_NetworkSendDiscoverRequest
 11755 ;;		_NetworkSendDiscoverResponse
 11756 ;;		_NetworkBroadcastData
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text37
 11761  003AA4                     __ptext37:
 11762                           	opt stack 0
 11763  003AA4                     _BroadcastManagerDelaySend:
 11764                           	opt stack 18
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;BroadcastManager.c: 54: bool res=0;
 11768                           
 11769                           ;incstack = 0
 11770  003AA4  6BAB               	clrf	BroadcastManagerDelaySend@res& (0+255),b
 11771                           
 11772                           ;BroadcastManager.c: 55: uint16_t i;
 11773                           ;BroadcastManager.c: 56: for(i=0;i<6;i++)
 11774  003AA6  6BAC               	clrf	BroadcastManagerDelaySend@i& (0+255),b
 11775  003AA8  6BAD               	clrf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11776  003AAA                     l12272:
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;BroadcastManager.c: 57: {
 11780                           ;BroadcastManager.c: 58: if(((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==1)
 11781  003AAA  0E4A               	movlw	74
 11782  003AAC  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11783  003AAE  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11784  003AB2  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11785  003AB6  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11786  003AB8  50F3               	movf	prodl,w,c
 11787  003ABA  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11788  003ABC  0EE0               	movlw	low (_RbcQ+4)
 11789  003ABE  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11790  003AC0  6ED9               	movwf	fsr2l,c
 11791  003AC2  0E08               	movlw	high (_RbcQ+4)
 11792  003AC4  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11793  003AC6  6EDA               	movwf	fsr2h,c
 11794  003AC8  50DE               	movf	postinc2,w,c
 11795  003ACA  10DE               	iorwf	postinc2,w,c
 11796  003ACC  10DE               	iorwf	postinc2,w,c
 11797  003ACE  10DE               	iorwf	postinc2,w,c
 11798  003AD0  E001 D0A3          	bnz	l12292
 11799                           
 11800                           ; BSR set to: 0
 11801  003AD4  0E4A               	movlw	74
 11802  003AD6  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11803  003AD8  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11804  003ADC  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11805  003AE0  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11806  003AE2  50F3               	movf	prodl,w,c
 11807  003AE4  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11808  003AE6  0EDC               	movlw	low _RbcQ
 11809  003AE8  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11810  003AEA  6ED9               	movwf	fsr2l,c
 11811  003AEC  0E08               	movlw	high _RbcQ
 11812  003AEE  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11813  003AF0  6EDA               	movwf	fsr2h,c
 11814  003AF2  50DE               	movf	postinc2,w,c
 11815  003AF4  10DE               	iorwf	postinc2,w,c
 11816  003AF6  10DE               	iorwf	postinc2,w,c
 11817  003AF8  10DE               	iorwf	postinc2,w,c
 11818  003AFA  E001 D08E          	bnz	l12292
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;BroadcastManager.c: 59: {
 11822                           ;BroadcastManager.c: 60: memcpy(RbcQ[i].pkt,pkt,size);
 11823  003AFE  0E4A               	movlw	74
 11824  003B00  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11825  003B02  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11826  003B06  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11827  003B0A  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11828  003B0C  50F3               	movf	prodl,w,c
 11829  003B0E  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11830  003B10  0EE4               	movlw	low (_RbcQ+8)
 11831  003B12  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11832  003B14  6F75               	movwf	memcpy@d1& (0+255),b
 11833  003B16  0E08               	movlw	high (_RbcQ+8)
 11834  003B18  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11835  003B1A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 11836  003B1C  C09F  F077         	movff	BroadcastManagerDelaySend@pkt,memcpy@s1
 11837  003B20  C0A0  F078         	movff	BroadcastManagerDelaySend@pkt+1,memcpy@s1+1
 11838  003B24  C0A1  F079         	movff	BroadcastManagerDelaySend@size,memcpy@n
 11839  003B28  C0A2  F07A         	movff	BroadcastManagerDelaySend@size+1,memcpy@n+1
 11840  003B2C  EC5D  F036         	call	_memcpy	;wreg free
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;BroadcastManager.c: 61: RbcQ[i].pktSize=size;
 11844  003B30  0E4A               	movlw	74
 11845  003B32  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11846  003B34  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11847  003B38  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11848  003B3C  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11849  003B3E  50F3               	movf	prodl,w,c
 11850  003B40  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11851  003B42  0E24               	movlw	low (_RbcQ+72)
 11852  003B44  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11853  003B46  6ED9               	movwf	fsr2l,c
 11854  003B48  0E09               	movlw	high (_RbcQ+72)
 11855  003B4A  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11856  003B4C  6EDA               	movwf	fsr2h,c
 11857  003B4E  C0A1  FFDF         	movff	BroadcastManagerDelaySend@size,indf2
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;BroadcastManager.c: 62: RbcQ[i].TxTime=AddMSToTick(MSTickGet(),(krnd() & 0x3f));
 11861  003B52  EC58  F039         	call	_MSTickGet	;wreg free
 11862  003B56  CFE9 FFD9          	movff	fsr0l,fsr2l
 11863  003B5A  CFEA FFDA          	movff	fsr0h,fsr2h
 11864  003B5E  EE00  F08F         	lfsr	0,AddMSToTick@tick
 11865  003B62  0E07               	movlw	7
 11866  003B64                     u13231:
 11867  003B64  CFDB FFEB          	movff	plusw2,plusw0
 11868  003B68  06E8               	decf	wreg,f,c
 11869  003B6A  E2FC               	bc	u13231
 11870  003B6C  EC94  F01F         	call	_krnd	;wreg free
 11871  003B70  0E3F               	movlw	63
 11872  003B72  1573               	andwf	?_krnd& (0+255),w,b
 11873  003B74  6F97               	movwf	AddMSToTick@ms& (0+255),b
 11874  003B76  6B98               	clrf	(AddMSToTick@ms+1)& (0+255),b
 11875  003B78  6B99               	clrf	(AddMSToTick@ms+2)& (0+255),b
 11876  003B7A  6B9A               	clrf	(AddMSToTick@ms+3)& (0+255),b
 11877  003B7C  EC03  F031         	call	_AddMSToTick	;wreg free
 11878  003B80  0E4A               	movlw	74
 11879  003B82  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11880  003B84  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11881  003B88  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11882  003B8C  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11883  003B8E  50F3               	movf	prodl,w,c
 11884  003B90  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11885  003B92  0EDC               	movlw	low _RbcQ
 11886  003B94  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11887  003B96  6ED9               	movwf	fsr2l,c
 11888  003B98  0E08               	movlw	high _RbcQ
 11889  003B9A  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11890  003B9C  6EDA               	movwf	fsr2h,c
 11891  003B9E  0E07               	movlw	7
 11892  003BA0                     u13241:
 11893  003BA0  CFEB FFDB          	movff	plusw0,plusw2
 11894  003BA4  06E8               	decf	wreg,f,c
 11895  003BA6  E2FC               	bc	u13241
 11896                           
 11897                           ;BroadcastManager.c: 63: RbcQ[i].Flags=0;
 11898  003BA8  0E4A               	movlw	74
 11899  003BAA  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11900  003BAC  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11901  003BB0  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11902  003BB4  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11903  003BB6  50F3               	movf	prodl,w,c
 11904  003BB8  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11905  003BBA  0E25               	movlw	low (_RbcQ+73)
 11906  003BBC  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11907  003BBE  6ED9               	movwf	fsr2l,c
 11908  003BC0  0E09               	movlw	high (_RbcQ+73)
 11909  003BC2  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11910  003BC4  6EDA               	movwf	fsr2h,c
 11911  003BC6  6ADF               	clrf	indf2,c
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;BroadcastManager.c: 64: if(isSecure==1)
 11915  003BC8  05A3               	decf	BroadcastManagerDelaySend@isSecure& (0+255),w,b
 11916  003BCA  E111               	bnz	l12286
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;BroadcastManager.c: 65: {
 11920                           ;BroadcastManager.c: 66: RbcQ[i].Flags|=(1<<0);
 11921  003BCC  0E4A               	movlw	74
 11922  003BCE  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11923  003BD0  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11924  003BD4  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11925  003BD8  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11926  003BDA  50F3               	movf	prodl,w,c
 11927  003BDC  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11928  003BDE  0E25               	movlw	low (_RbcQ+73)
 11929  003BE0  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11930  003BE2  6ED9               	movwf	fsr2l,c
 11931  003BE4  0E09               	movlw	high (_RbcQ+73)
 11932  003BE6  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11933  003BE8  6EDA               	movwf	fsr2h,c
 11934  003BEA  0E00               	movlw	0
 11935  003BEC  80DB               	bsf	plusw2,0,c
 11936  003BEE                     l12286:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;BroadcastManager.c: 67: }
 11940                           ;BroadcastManager.c: 68: if(isInterPan==1)
 11941  003BEE  05A4               	decf	BroadcastManagerDelaySend@isInterPan& (0+255),w,b
 11942  003BF0  E111               	bnz	l12290
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;BroadcastManager.c: 69: {
 11946                           ;BroadcastManager.c: 70: RbcQ[i].Flags|=(1<<1);
 11947  003BF2  0E4A               	movlw	74
 11948  003BF4  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 11949  003BF6  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 11950  003BFA  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 11951  003BFE  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 11952  003C00  50F3               	movf	prodl,w,c
 11953  003C02  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 11954  003C04  0E25               	movlw	low (_RbcQ+73)
 11955  003C06  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 11956  003C08  6ED9               	movwf	fsr2l,c
 11957  003C0A  0E09               	movlw	high (_RbcQ+73)
 11958  003C0C  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 11959  003C0E  6EDA               	movwf	fsr2h,c
 11960  003C10  0E00               	movlw	0
 11961  003C12  82DB               	bsf	plusw2,1,c
 11962  003C14                     l12290:
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;BroadcastManager.c: 71: }
 11966                           ;BroadcastManager.c: 72: res=1;
 11967  003C14  0E01               	movlw	1
 11968  003C16  6FAB               	movwf	BroadcastManagerDelaySend@res& (0+255),b
 11969                           
 11970                           ;BroadcastManager.c: 73: break;
 11971  003C18  D008               	goto	l12296
 11972  003C1A                     l12292:
 11973                           
 11974                           ; BSR set to: 0
 11975  003C1A  4BAC               	infsnz	BroadcastManagerDelaySend@i& (0+255),f,b
 11976  003C1C  2BAD               	incf	(BroadcastManagerDelaySend@i+1)& (0+255),f,b
 11977                           
 11978                           ; BSR set to: 0
 11979  003C1E  51AD               	movf	(BroadcastManagerDelaySend@i+1)& (0+255),w,b
 11980  003C20  E104               	bnz	u13270
 11981  003C22  0E06               	movlw	6
 11982  003C24  5DAC               	subwf	BroadcastManagerDelaySend@i& (0+255),w,b
 11983  003C26  E201 D740          	bnc	l12272
 11984  003C2A                     u13270:
 11985  003C2A                     l12296:
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;BroadcastManager.c: 74: }
 11989                           ;BroadcastManager.c: 75: }
 11990                           ;BroadcastManager.c: 76: return(res);
 11991  003C2A  51AB               	movf	BroadcastManagerDelaySend@res& (0+255),w,b
 11992                           
 11993                           ; BSR set to: 0
 11994  003C2C  0012               	return		;funcret
 11995  003C2E                     __end_of_BroadcastManagerDelaySend:
 11996                           	opt stack 0
 11997                           tblptru	equ	0xFF8
 11998                           tblptrh	equ	0xFF7
 11999                           tblptrl	equ	0xFF6
 12000                           tablat	equ	0xFF5
 12001                           prodh	equ	0xFF4
 12002                           prodl	equ	0xFF3
 12003                           intcon3	equ	0xFF0
 12004                           postinc0	equ	0xFEE
 12005                           plusw0	equ	0xFEB
 12006                           fsr0h	equ	0xFEA
 12007                           fsr0l	equ	0xFE9
 12008                           wreg	equ	0xFE8
 12009                           postdec1	equ	0xFE5
 12010                           plusw1	equ	0xFE3
 12011                           fsr1h	equ	0xFE2
 12012                           fsr1l	equ	0xFE1
 12013                           indf2	equ	0xFDF
 12014                           postinc2	equ	0xFDE
 12015                           postdec2	equ	0xFDD
 12016                           plusw2	equ	0xFDB
 12017                           fsr2h	equ	0xFDA
 12018                           fsr2l	equ	0xFD9
 12019                           status	equ	0xFD8
 12020                           
 12021 ;; *************** function _AddMSToTick *****************
 12022 ;; Defined at:
 12023 ;;		line 57 in file "../TimeTick.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 12026 ;;  ms              4   55[BANK0 ] unsigned long 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  8   47[BANK0 ] struct TickMS_t_def
 12031 ;; Registers used:
 12032 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : F/0
 12035 ;;		On exit  : F/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:       16 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    5
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_BroadcastManagerDelaySend
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text38
 12053  006206                     __ptext38:
 12054                           	opt stack 0
 12055  006206                     _AddMSToTick:
 12056                           	opt stack 20
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;TimeTick.c: 59: if((0xffffffff-tick.lsb)>=ms)
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;incstack = 0
 12063  006206  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 12064  00620A  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12065  00620E  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12066  006212  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12067  006216  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 12068  006218  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12069  00621A  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12070  00621C  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12071  00621E  5197               	movf	AddMSToTick@ms& (0+255),w,b
 12072  006220  5D9B               	subwf	??_AddMSToTick& (0+255),w,b
 12073  006222  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12074  006224  599C               	subwfb	(??_AddMSToTick+1)& (0+255),w,b
 12075  006226  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12076  006228  599D               	subwfb	(??_AddMSToTick+2)& (0+255),w,b
 12077  00622A  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12078  00622C  599E               	subwfb	(??_AddMSToTick+3)& (0+255),w,b
 12079  00622E  E309               	bnc	l12174
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;TimeTick.c: 60: {
 12083                           ;TimeTick.c: 61: tick.lsb+=ms;
 12084  006230  5197               	movf	AddMSToTick@ms& (0+255),w,b
 12085  006232  278F               	addwf	AddMSToTick@tick& (0+255),f,b
 12086  006234  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12087  006236  2390               	addwfc	(AddMSToTick@tick+1)& (0+255),f,b
 12088  006238  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12089  00623A  2391               	addwfc	(AddMSToTick@tick+2)& (0+255),f,b
 12090  00623C  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12091  00623E  2392               	addwfc	(AddMSToTick@tick+3)& (0+255),f,b
 12092                           
 12093                           ;TimeTick.c: 62: }else
 12094  006240  D01D               	goto	l12176
 12095  006242                     l12174:
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;TimeTick.c: 63: {
 12099                           ;TimeTick.c: 64: tick.lsb=ms-(0xffffffff-tick.lsb);
 12100  006242  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 12101  006246  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12102  00624A  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12103  00624E  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12104  006252  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 12105  006254  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12106  006256  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12107  006258  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12108  00625A  519B               	movf	??_AddMSToTick& (0+255),w,b
 12109  00625C  5D97               	subwf	AddMSToTick@ms& (0+255),w,b
 12110  00625E  6F8F               	movwf	AddMSToTick@tick& (0+255),b
 12111  006260  519C               	movf	(??_AddMSToTick+1)& (0+255),w,b
 12112  006262  5998               	subwfb	(AddMSToTick@ms+1)& (0+255),w,b
 12113  006264  6F90               	movwf	(AddMSToTick@tick+1)& (0+255),b
 12114  006266  519D               	movf	(??_AddMSToTick+2)& (0+255),w,b
 12115  006268  5999               	subwfb	(AddMSToTick@ms+2)& (0+255),w,b
 12116  00626A  6F91               	movwf	(AddMSToTick@tick+2)& (0+255),b
 12117  00626C  519E               	movf	(??_AddMSToTick+3)& (0+255),w,b
 12118  00626E  599A               	subwfb	(AddMSToTick@ms+3)& (0+255),w,b
 12119  006270  6F92               	movwf	(AddMSToTick@tick+3)& (0+255),b
 12120                           
 12121                           ;TimeTick.c: 65: tick.msb++;
 12122  006272  2B93               	incf	(AddMSToTick@tick+4)& (0+255),f,b
 12123  006274  0E00               	movlw	0
 12124  006276  2394               	addwfc	(AddMSToTick@tick+5)& (0+255),f,b
 12125  006278  2395               	addwfc	(AddMSToTick@tick+6)& (0+255),f,b
 12126  00627A  2396               	addwfc	(AddMSToTick@tick+7)& (0+255),f,b
 12127  00627C                     l12176:
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;TimeTick.c: 66: }
 12131                           ;TimeTick.c: 67: return(tick);
 12132  00627C  EE20  F08F         	lfsr	2,AddMSToTick@tick
 12133  006280  EE00  F08F         	lfsr	0,?_AddMSToTick
 12134  006284  0E07               	movlw	7
 12135  006286                     u13101:
 12136  006286  CFDB FFEB          	movff	plusw2,plusw0
 12137  00628A  06E8               	decf	wreg,f,c
 12138  00628C  E2FC               	bc	u13101
 12139                           
 12140                           ; BSR set to: 0
 12141  00628E  0012               	return		;funcret
 12142  006290                     __end_of_AddMSToTick:
 12143                           	opt stack 0
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           intcon3	equ	0xFF0
 12151                           postinc0	equ	0xFEE
 12152                           plusw0	equ	0xFEB
 12153                           fsr0h	equ	0xFEA
 12154                           fsr0l	equ	0xFE9
 12155                           wreg	equ	0xFE8
 12156                           postdec1	equ	0xFE5
 12157                           plusw1	equ	0xFE3
 12158                           fsr1h	equ	0xFE2
 12159                           fsr1l	equ	0xFE1
 12160                           indf2	equ	0xFDF
 12161                           postinc2	equ	0xFDE
 12162                           postdec2	equ	0xFDD
 12163                           plusw2	equ	0xFDB
 12164                           fsr2h	equ	0xFDA
 12165                           fsr2l	equ	0xFD9
 12166                           status	equ	0xFD8
 12167                           
 12168 ;; *************** function _NetworkDataArrivedEvent *****************
 12169 ;; Defined at:
 12170 ;;		line 268 in file "../src/Bridge.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  source          2   27[BANK0 ] struct addr_t_def
 12173 ;;  data            2   29[BANK0 ] PTR unsigned char 
 12174 ;;		 -> userdata(54), 
 12175 ;;  size            2   31[BANK0 ] unsigned int 
 12176 ;;  isBroadcast     1   33[BANK0 ] unsigned char 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;		None
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  1    wreg      void 
 12181 ;; Registers used:
 12182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12183 ;; Tracked objects:
 12184 ;;		On entry : F/0
 12185 ;;		On exit  : F/1
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12188 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;Total ram usage:        7 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; Hardware stack levels required when called:    6
 12195 ;; This function calls:
 12196 ;;		_memset
 12197 ;; This function is called by:
 12198 ;;		_NetworkManagerProcessIncomingData
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           
 12202                           	psect	text39
 12203  006D10                     __ptext39:
 12204                           	opt stack 0
 12205  006D10                     _NetworkDataArrivedEvent:
 12206                           	opt stack 20
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;Bridge.c: 270: srcAddress=source;
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;incstack = 0
 12213  006D10  C07B  F2A1         	movff	NetworkDataArrivedEvent@source,_srcAddress
 12214  006D14  C07C  F2A2         	movff	NetworkDataArrivedEvent@source+1,_srcAddress+1
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;Bridge.c: 271: memset(&rxMessage,0x00,sizeof(rxMessage));
 12218  006D18  0E7A               	movlw	low _rxMessage
 12219  006D1A  6F73               	movwf	memset@p1& (0+255),b
 12220  006D1C  0E02               	movlw	high _rxMessage
 12221  006D1E  6F74               	movwf	(memset@p1+1)& (0+255),b
 12222  006D20  6B76               	clrf	(memset@c+1)& (0+255),b
 12223  006D22  6B75               	clrf	memset@c& (0+255),b
 12224  006D24  6B78               	clrf	(memset@n+1)& (0+255),b
 12225  006D26  0E0A               	movlw	10
 12226  006D28  6F77               	movwf	memset@n& (0+255),b
 12227  006D2A  EC4C  F03A         	call	_memset	;wreg free
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;Bridge.c: 272: rxMessage.Payload=data;
 12231  006D2E  C07D  F27F         	movff	NetworkDataArrivedEvent@data,_rxMessage+5
 12232  006D32  C07E  F280         	movff	NetworkDataArrivedEvent@data+1,_rxMessage+6
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;Bridge.c: 273: rxMessage.PayloadSize=size;
 12236  006D36  C07F  F281         	movff	NetworkDataArrivedEvent@size,_rxMessage+7
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;Bridge.c: 274: rxMessage.SourceAddress=srcAddress.bytes;
 12240  006D3A  0EA1               	movlw	low _srcAddress
 12241  006D3C  0102               	movlb	2	; () banked
 12242  006D3E  6F7D               	movwf	(_rxMessage+3)& (0+255),b
 12243  006D40  0E02               	movlw	high _srcAddress
 12244  006D42  6F7E               	movwf	(_rxMessage+4)& (0+255),b
 12245                           
 12246                           ; BSR set to: 2
 12247                           ;Bridge.c: 275: rxMessage.SourcePANID.Val=myPANID;
 12248  006D44  C04D  F27B         	movff	_myPANID,_rxMessage+1
 12249  006D48  C04E  F27C         	movff	_myPANID+1,_rxMessage+2
 12250                           
 12251                           ; BSR set to: 2
 12252                           ;Bridge.c: 276: rxMessage.flags.bits.broadcast=isBroadcast;
 12253  006D4C  517A               	movf	_rxMessage& (0+255),w,b
 12254  006D4E  0100               	movlb	0	; () banked
 12255  006D50  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 12256  006D52  0BFC               	andlw	-4
 12257  006D54  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 12258  006D56  0102               	movlb	2	; () banked
 12259  006D58  6F7A               	movwf	_rxMessage& (0+255),b
 12260                           
 12261                           ; BSR set to: 2
 12262                           ;Bridge.c: 277: rxMessage.flags.bits.srcPrsnt=1;
 12263  006D5A  8D7A               	bsf	_rxMessage& (0+255),6,b
 12264                           
 12265                           ; BSR set to: 2
 12266                           ;Bridge.c: 278: UserMessageAvailable=1;
 12267  006D5C  0E01               	movlw	1
 12268  006D5E  0101               	movlb	1	; () banked
 12269  006D60  6FD9               	movwf	_UserMessageAvailable& (0+255),b
 12270                           
 12271                           ; BSR set to: 1
 12272  006D62  0C01               	retlw	1	;funcret
 12273  006D64                     __end_of_NetworkDataArrivedEvent:
 12274                           	opt stack 0
 12275                           tblptru	equ	0xFF8
 12276                           tblptrh	equ	0xFF7
 12277                           tblptrl	equ	0xFF6
 12278                           tablat	equ	0xFF5
 12279                           prodh	equ	0xFF4
 12280                           prodl	equ	0xFF3
 12281                           intcon3	equ	0xFF0
 12282                           postinc0	equ	0xFEE
 12283                           plusw0	equ	0xFEB
 12284                           fsr0h	equ	0xFEA
 12285                           fsr0l	equ	0xFE9
 12286                           wreg	equ	0xFE8
 12287                           postdec1	equ	0xFE5
 12288                           plusw1	equ	0xFE3
 12289                           fsr1h	equ	0xFE2
 12290                           fsr1l	equ	0xFE1
 12291                           indf2	equ	0xFDF
 12292                           postinc2	equ	0xFDE
 12293                           postdec2	equ	0xFDD
 12294                           plusw2	equ	0xFDB
 12295                           fsr2h	equ	0xFDA
 12296                           fsr2l	equ	0xFD9
 12297                           status	equ	0xFD8
 12298                           
 12299 ;; *************** function _IsNetworkDevice *****************
 12300 ;; Defined at:
 12301 ;;		line 47 in file "../DeviceManager.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  address         2   47[BANK0 ] struct addr_t_def
 12304 ;;  devType         1   49[BANK0 ] enum E145
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  oldest          8   52[BANK0 ] struct TickMS_t_def
 12307 ;;  i               2   63[BANK0 ] unsigned int 
 12308 ;;  empty           2   61[BANK0 ] unsigned int 
 12309 ;;  res             1   60[BANK0 ] unsigned char 
 12310 ;; Return value:  Size  Location     Type
 12311 ;;                  1    wreg      unsigned char 
 12312 ;; Registers used:
 12313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12314 ;; Tracked objects:
 12315 ;;		On entry : F/0
 12316 ;;		On exit  : F/0
 12317 ;;		Unchanged: 0/0
 12318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12319 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12320 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12321 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12322 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12323 ;;Total ram usage:       18 bytes
 12324 ;; Hardware stack levels used:    1
 12325 ;; Hardware stack levels required when called:    8
 12326 ;; This function calls:
 12327 ;;		_MSTickGet
 12328 ;;		_NetworkAddressSizeGet
 12329 ;;		_isInvalidAddress
 12330 ;;		_isSameAddress
 12331 ;;		_memcpy
 12332 ;;		_memset
 12333 ;; This function is called by:
 12334 ;;		_radioReceivedPacket
 12335 ;;		_NetworkManagerProcessIncomingData
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           	psect	text40
 12340  003914                     __ptext40:
 12341                           	opt stack 0
 12342  003914                     _IsNetworkDevice:
 12343                           	opt stack 18
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;DeviceManager.c: 49: uint16_t i;
 12347                           ;DeviceManager.c: 50: uint16_t empty=0xffff;
 12348                           
 12349                           ; BSR set to: 1
 12350                           ;incstack = 0
 12351  003914  699D               	setf	IsNetworkDevice@empty& (0+255),b
 12352  003916  699E               	setf	(IsNetworkDevice@empty+1)& (0+255),b
 12353                           
 12354                           ;DeviceManager.c: 51: TickMS oldest;
 12355                           ;DeviceManager.c: 52: bool res=0;
 12356  003918  6B9C               	clrf	IsNetworkDevice@res& (0+255),b
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;DeviceManager.c: 54: memset(&oldest,0x00,sizeof(oldest));
 12360  00391A  0E94               	movlw	low IsNetworkDevice@oldest
 12361  00391C  6F73               	movwf	memset@p1& (0+255),b
 12362  00391E  6B74               	clrf	(memset@p1+1)& (0+255),b
 12363  003920  6B76               	clrf	(memset@c+1)& (0+255),b
 12364  003922  6B75               	clrf	memset@c& (0+255),b
 12365  003924  6B78               	clrf	(memset@n+1)& (0+255),b
 12366  003926  0E08               	movlw	8
 12367  003928  6F77               	movwf	memset@n& (0+255),b
 12368  00392A  EC4C  F03A         	call	_memset	;wreg free
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;DeviceManager.c: 56: for(i=0;i<20;i++)
 12372  00392E  6B9F               	clrf	IsNetworkDevice@i& (0+255),b
 12373  003930  6BA0               	clrf	(IsNetworkDevice@i+1)& (0+255),b
 12374  003932                     l12854:
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;DeviceManager.c: 57: {
 12378                           ;DeviceManager.c: 58: if(isSameAddress(address,list[i].address)==1)
 12379  003932  C08F  F07D         	movff	IsNetworkDevice@address,isSameAddress@a1
 12380  003936  C090  F07E         	movff	IsNetworkDevice@address+1,isSameAddress@a1+1
 12381  00393A  0E0B               	movlw	11
 12382  00393C  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 12383  00393E  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12384  003942  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12385  003946  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 12386  003948  50F3               	movf	prodl,w,c
 12387  00394A  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12388  00394C  0E00               	movlw	low _list
 12389  00394E  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12390  003950  6ED9               	movwf	fsr2l,c
 12391  003952  0E08               	movlw	high _list
 12392  003954  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12393  003956  6EDA               	movwf	fsr2h,c
 12394  003958  CFDE F07F          	movff	postinc2,isSameAddress@a2
 12395  00395C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 12396  003960  ECB1  F03A         	call	_isSameAddress	;wreg free
 12397  003964  06E8               	decf	wreg,f,c
 12398  003966  E12A               	bnz	l12864
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;DeviceManager.c: 59: {
 12402                           ;DeviceManager.c: 60: list[i].LastHeard=MSTickGet();
 12403  003968  EC58  F039         	call	_MSTickGet	;wreg free
 12404  00396C  0E0B               	movlw	11
 12405  00396E  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 12406  003970  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12407  003974  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12408  003978  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 12409  00397A  50F3               	movf	prodl,w,c
 12410  00397C  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12411  00397E  0E02               	movlw	low (_list+2)
 12412  003980  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12413  003982  6ED9               	movwf	fsr2l,c
 12414  003984  0E08               	movlw	high (_list+2)
 12415  003986  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12416  003988  6EDA               	movwf	fsr2h,c
 12417  00398A  0E07               	movlw	7
 12418  00398C                     u14001:
 12419  00398C  CFEB FFDB          	movff	plusw0,plusw2
 12420  003990  06E8               	decf	wreg,f,c
 12421  003992  E2FC               	bc	u14001
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;DeviceManager.c: 61: list[i].devType=devType;
 12425  003994  0E0B               	movlw	11
 12426  003996  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 12427  003998  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12428  00399C  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12429  0039A0  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 12430  0039A2  50F3               	movf	prodl,w,c
 12431  0039A4  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12432  0039A6  0E0A               	movlw	low (_list+10)
 12433  0039A8  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12434  0039AA  6ED9               	movwf	fsr2l,c
 12435  0039AC  0E08               	movlw	high (_list+10)
 12436  0039AE  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12437  0039B0  6EDA               	movwf	fsr2h,c
 12438  0039B2  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;DeviceManager.c: 62: res=1;
 12442  0039B6  0E01               	movlw	1
 12443  0039B8  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 12444                           
 12445                           ;DeviceManager.c: 63: break;
 12446  0039BA  D026               	goto	l12874
 12447  0039BC                     l12864:
 12448                           
 12449                           ; BSR set to: 0
 12450  0039BC  0E0B               	movlw	11
 12451  0039BE  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 12452  0039C0  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12453  0039C4  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12454  0039C8  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 12455  0039CA  50F3               	movf	prodl,w,c
 12456  0039CC  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12457  0039CE  0E00               	movlw	low _list
 12458  0039D0  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12459  0039D2  6ED9               	movwf	fsr2l,c
 12460  0039D4  0E08               	movlw	high _list
 12461  0039D6  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12462  0039D8  6EDA               	movwf	fsr2h,c
 12463  0039DA  CFDE F086          	movff	postinc2,isInvalidAddress@address
 12464  0039DE  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 12465  0039E2  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 12466  0039E6  0900               	iorlw	0
 12467  0039E8  E008               	bz	l12870
 12468                           
 12469                           ; BSR set to: 0
 12470  0039EA  299D               	incf	IsNetworkDevice@empty& (0+255),w,b
 12471  0039EC  E106               	bnz	l12870
 12472  0039EE  299E               	incf	(IsNetworkDevice@empty+1)& (0+255),w,b
 12473  0039F0  E104               	bnz	l12870
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;DeviceManager.c: 65: {
 12477                           ;DeviceManager.c: 66: empty=i;
 12478  0039F2  C09F  F09D         	movff	IsNetworkDevice@i,IsNetworkDevice@empty
 12479  0039F6  C0A0  F09E         	movff	IsNetworkDevice@i+1,IsNetworkDevice@empty+1
 12480  0039FA                     l12870:
 12481                           
 12482                           ; BSR set to: 0
 12483  0039FA  4B9F               	infsnz	IsNetworkDevice@i& (0+255),f,b
 12484  0039FC  2BA0               	incf	(IsNetworkDevice@i+1)& (0+255),f,b
 12485                           
 12486                           ; BSR set to: 0
 12487  0039FE  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 12488  003A00  E103               	bnz	u14030
 12489  003A02  0E14               	movlw	20
 12490  003A04  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 12491  003A06  E395               	bnc	l12854
 12492  003A08                     u14030:
 12493  003A08                     l12874:
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;DeviceManager.c: 67: }
 12497                           ;DeviceManager.c: 68: }
 12498                           ;DeviceManager.c: 69: if(i>=20)
 12499  003A08  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 12500  003A0A  E103               	bnz	u14040
 12501  003A0C  0E14               	movlw	20
 12502  003A0E  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 12503  003A10  E347               	bnc	l12884
 12504  003A12                     u14040:
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;DeviceManager.c: 70: {
 12508                           ;DeviceManager.c: 72: if(empty<20)
 12509  003A12  519E               	movf	(IsNetworkDevice@empty+1)& (0+255),w,b
 12510  003A14  E145               	bnz	l12884
 12511  003A16  0E14               	movlw	20
 12512  003A18  5D9D               	subwf	IsNetworkDevice@empty& (0+255),w,b
 12513  003A1A  E242               	bc	l12884
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;DeviceManager.c: 73: {
 12517                           ;DeviceManager.c: 74: memcpy(list[empty].address.bytes,address.bytes,NetworkAddressSizeG
      +                          et());
 12518  003A1C  0E0B               	movlw	11
 12519  003A1E  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12520  003A20  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12521  003A24  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12522  003A28  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12523  003A2A  50F3               	movf	prodl,w,c
 12524  003A2C  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12525  003A2E  0E00               	movlw	low _list
 12526  003A30  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12527  003A32  6F75               	movwf	memcpy@d1& (0+255),b
 12528  003A34  0E08               	movlw	high _list
 12529  003A36  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12530  003A38  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 12531  003A3A  0E8F               	movlw	low IsNetworkDevice@address
 12532  003A3C  6F77               	movwf	memcpy@s1& (0+255),b
 12533  003A3E  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 12534  003A40  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 12535  003A44  0100               	movlb	0	; () banked
 12536  003A46  6F79               	movwf	memcpy@n& (0+255),b
 12537  003A48  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 12538  003A4A  EC5D  F036         	call	_memcpy	;wreg free
 12539                           
 12540                           ;DeviceManager.c: 75: list[empty].LastHeard=MSTickGet();
 12541  003A4E  EC58  F039         	call	_MSTickGet	;wreg free
 12542  003A52  0E0B               	movlw	11
 12543  003A54  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12544  003A56  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12545  003A5A  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12546  003A5E  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12547  003A60  50F3               	movf	prodl,w,c
 12548  003A62  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12549  003A64  0E02               	movlw	low (_list+2)
 12550  003A66  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12551  003A68  6ED9               	movwf	fsr2l,c
 12552  003A6A  0E08               	movlw	high (_list+2)
 12553  003A6C  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12554  003A6E  6EDA               	movwf	fsr2h,c
 12555  003A70  0E07               	movlw	7
 12556  003A72                     u14061:
 12557  003A72  CFEB FFDB          	movff	plusw0,plusw2
 12558  003A76  06E8               	decf	wreg,f,c
 12559  003A78  E2FC               	bc	u14061
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;DeviceManager.c: 76: list[empty].devType=devType;
 12563  003A7A  0E0B               	movlw	11
 12564  003A7C  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 12565  003A7E  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 12566  003A82  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 12567  003A86  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 12568  003A88  50F3               	movf	prodl,w,c
 12569  003A8A  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 12570  003A8C  0E0A               	movlw	low (_list+10)
 12571  003A8E  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 12572  003A90  6ED9               	movwf	fsr2l,c
 12573  003A92  0E08               	movlw	high (_list+10)
 12574  003A94  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 12575  003A96  6EDA               	movwf	fsr2h,c
 12576  003A98  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;DeviceManager.c: 77: res=1;
 12580  003A9C  0E01               	movlw	1
 12581  003A9E  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 12582  003AA0                     l12884:
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;DeviceManager.c: 78: }
 12586                           ;DeviceManager.c: 79: }
 12587                           ;DeviceManager.c: 83: return(res);
 12588  003AA0  519C               	movf	IsNetworkDevice@res& (0+255),w,b
 12589                           
 12590                           ; BSR set to: 0
 12591  003AA2  0012               	return		;funcret
 12592  003AA4                     __end_of_IsNetworkDevice:
 12593                           	opt stack 0
 12594                           tblptru	equ	0xFF8
 12595                           tblptrh	equ	0xFF7
 12596                           tblptrl	equ	0xFF6
 12597                           tablat	equ	0xFF5
 12598                           prodh	equ	0xFF4
 12599                           prodl	equ	0xFF3
 12600                           intcon3	equ	0xFF0
 12601                           postinc0	equ	0xFEE
 12602                           plusw0	equ	0xFEB
 12603                           fsr0h	equ	0xFEA
 12604                           fsr0l	equ	0xFE9
 12605                           wreg	equ	0xFE8
 12606                           postdec1	equ	0xFE5
 12607                           plusw1	equ	0xFE3
 12608                           fsr1h	equ	0xFE2
 12609                           fsr1l	equ	0xFE1
 12610                           indf2	equ	0xFDF
 12611                           postinc2	equ	0xFDE
 12612                           postdec2	equ	0xFDD
 12613                           plusw2	equ	0xFDB
 12614                           fsr2h	equ	0xFDA
 12615                           fsr2l	equ	0xFD9
 12616                           status	equ	0xFD8
 12617                           
 12618 ;; *************** function _DeviceManagerGetDeviceData *****************
 12619 ;; Defined at:
 12620 ;;		line 185 in file "../DeviceManager.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;  address         2   33[BANK0 ] struct addr_t_def
 12623 ;;  data            2   35[BANK0 ] PTR unsigned char 
 12624 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), 
 12625 ;;  isSecure        2   37[BANK0 ] PTR unsigned char 
 12626 ;;		 -> NetworkManagerProcessIncomingData@isSecurePacket(1), 
 12627 ;;  isFormed        2   39[BANK0 ] PTR unsigned char 
 12628 ;;		 -> NetworkManagerProcessIncomingData@isFormed(1), 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;  devBuffer       2    0        PTR struct devDataBuffer
 12631 ;;		 -> NULL(0), 
 12632 ;;  j               2    0        unsigned int 
 12633 ;;  recordLen       2    0        unsigned int 
 12634 ;;  index           2    0        unsigned int 
 12635 ;;  size            2    0        unsigned int 
 12636 ;;  i               2    0        unsigned int 
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  2   33[BANK0 ] unsigned int 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : F/0
 12643 ;;		On exit  : F/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12646 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12647 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12650 ;;Total ram usage:       20 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    7
 12653 ;; This function calls:
 12654 ;;		_NetworkAddressSizeGet
 12655 ;;		_isSameAddress
 12656 ;;		_memcpy
 12657 ;; This function is called by:
 12658 ;;		_NetworkManagerProcessIncomingData
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           	psect	text41
 12663  0077A8                     __ptext41:
 12664                           	opt stack 0
 12665  0077A8                     _DeviceManagerGetDeviceData:
 12666                           	opt stack 19
 12667                           
 12668                           ; BSR set to: 0
 12669                           
 12670                           ; BSR set to: 0
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674  0077A8  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 12675                           
 12676                           ; BSR set to: 1
 12677                           ;DeviceManager.c: 218: }
 12678                           ;DeviceManager.c: 219: return(size);
 12679                           
 12680                           ; BSR set to: 1
 12681                           
 12682                           ; BSR set to: 1
 12683  0077AC  0100               	movlb	0	; () banked
 12684  0077AE  6B81               	clrf	?_DeviceManagerGetDeviceData& (0+255),b
 12685  0077B0  6B82               	clrf	(?_DeviceManagerGetDeviceData+1)& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688  0077B2  0012               	return		;funcret
 12689  0077B4                     __end_of_DeviceManagerGetDeviceData:
 12690                           	opt stack 0
 12691                           tblptru	equ	0xFF8
 12692                           tblptrh	equ	0xFF7
 12693                           tblptrl	equ	0xFF6
 12694                           tablat	equ	0xFF5
 12695                           prodh	equ	0xFF4
 12696                           prodl	equ	0xFF3
 12697                           intcon3	equ	0xFF0
 12698                           postinc0	equ	0xFEE
 12699                           plusw0	equ	0xFEB
 12700                           fsr0h	equ	0xFEA
 12701                           fsr0l	equ	0xFE9
 12702                           wreg	equ	0xFE8
 12703                           postdec1	equ	0xFE5
 12704                           plusw1	equ	0xFE3
 12705                           fsr1h	equ	0xFE2
 12706                           fsr1l	equ	0xFE1
 12707                           indf2	equ	0xFDF
 12708                           postinc2	equ	0xFDE
 12709                           postdec2	equ	0xFDD
 12710                           plusw2	equ	0xFDB
 12711                           fsr2h	equ	0xFDA
 12712                           fsr2l	equ	0xFD9
 12713                           status	equ	0xFD8
 12714                           
 12715 ;; *************** function _NetworkDiscoveredEvent *****************
 12716 ;; Defined at:
 12717 ;;		line 385 in file "../src/Bridge.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  PANID           2   19[BANK0 ] unsigned int 
 12720 ;;  rssi            2   21[BANK0 ] unsigned int 
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;  i               2   29[BANK0 ] unsigned int 
 12723 ;;  empty           2   27[BANK0 ] unsigned int 
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      void 
 12726 ;; Registers used:
 12727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12728 ;; Tracked objects:
 12729 ;;		On entry : F/0
 12730 ;;		On exit  : F/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12735 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12736 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12737 ;;Total ram usage:       12 bytes
 12738 ;; Hardware stack levels used:    1
 12739 ;; Hardware stack levels required when called:    5
 12740 ;; This function calls:
 12741 ;;		Nothing
 12742 ;; This function is called by:
 12743 ;;		_radioReceivedPacket
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747                           	psect	text42
 12748  003772                     __ptext42:
 12749                           	opt stack 0
 12750  003772                     _NetworkDiscoveredEvent:
 12751                           	opt stack 22
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;Bridge.c: 387: uint16_t i;
 12755                           ;Bridge.c: 388: uint16_t empty=0xffff;
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;incstack = 0
 12759  003772  697B               	setf	NetworkDiscoveredEvent@empty& (0+255),b
 12760  003774  697C               	setf	(NetworkDiscoveredEvent@empty+1)& (0+255),b
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;Bridge.c: 389: pcnt1++;
 12764  003776  0102               	movlb	2	; () banked
 12765  003778  4B51               	infsnz	_pcnt1& (0+255),f,b	;volatile
 12766  00377A  2B52               	incf	(_pcnt1+1)& (0+255),f,b	;volatile
 12767                           
 12768                           ; BSR set to: 2
 12769                           ;Bridge.c: 390: for(i=0;i<5;i++)
 12770  00377C  0100               	movlb	0	; () banked
 12771  00377E  6B7D               	clrf	NetworkDiscoveredEvent@i& (0+255),b
 12772  003780  6B7E               	clrf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12773  003782                     l13276:
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;Bridge.c: 391: {
 12777                           ;Bridge.c: 392: if( (ActiveScanResults[i].PANID.Val==PANID) && (ActiveScanResults[i].Cha
      +                          nnel==ActiveScanChannel) )
 12778  003782  0E05               	movlw	5
 12779  003784  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12780  003786  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12781  00378A  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12782  00378E  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12783  003790  50F3               	movf	prodl,w,c
 12784  003792  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12785  003794  0E56               	movlw	low (_ActiveScanResults+1)
 12786  003796  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12787  003798  6ED9               	movwf	fsr2l,c
 12788  00379A  0E02               	movlw	high (_ActiveScanResults+1)
 12789  00379C  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12790  00379E  6EDA               	movwf	fsr2h,c
 12791  0037A0  5173               	movf	NetworkDiscoveredEvent@PANID& (0+255),w,b
 12792  0037A2  18DE               	xorwf	postinc2,w,c
 12793  0037A4  E140               	bnz	l13284
 12794  0037A6  5174               	movf	(NetworkDiscoveredEvent@PANID+1)& (0+255),w,b
 12795  0037A8  18DE               	xorwf	postinc2,w,c
 12796  0037AA  E13D               	bnz	l13284
 12797                           
 12798                           ; BSR set to: 0
 12799  0037AC  0E05               	movlw	5
 12800  0037AE  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12801  0037B0  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12802  0037B4  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12803  0037B8  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12804  0037BA  50F3               	movf	prodl,w,c
 12805  0037BC  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12806  0037BE  0E55               	movlw	low _ActiveScanResults
 12807  0037C0  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12808  0037C2  6ED9               	movwf	fsr2l,c
 12809  0037C4  0E02               	movlw	high _ActiveScanResults
 12810  0037C6  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12811  0037C8  6EDA               	movwf	fsr2h,c
 12812  0037CA  0101               	movlb	1	; () banked
 12813  0037CC  51D2               	movf	_ActiveScanChannel& (0+255),w,b
 12814  0037CE  18DE               	xorwf	postinc2,w,c
 12815  0037D0  E12A               	bnz	l13284
 12816                           
 12817                           ; BSR set to: 1
 12818                           ;Bridge.c: 393: {
 12819                           ;Bridge.c: 394: if(ActiveScanResults[i].RSSIValue<rssi)
 12820  0037D2  0E05               	movlw	5
 12821  0037D4  0100               	movlb	0	; () banked
 12822  0037D6  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12823  0037D8  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12824  0037DC  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12825  0037E0  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12826  0037E2  50F3               	movf	prodl,w,c
 12827  0037E4  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12828  0037E6  0E58               	movlw	low (_ActiveScanResults+3)
 12829  0037E8  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12830  0037EA  6ED9               	movwf	fsr2l,c
 12831  0037EC  0E02               	movlw	high (_ActiveScanResults+3)
 12832  0037EE  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12833  0037F0  6EDA               	movwf	fsr2h,c
 12834  0037F2  50DF               	movf	indf2,w,c
 12835  0037F4  6F79               	movwf	(??_NetworkDiscoveredEvent+2)& (0+255),b
 12836  0037F6  6B7A               	clrf	(??_NetworkDiscoveredEvent+3)& (0+255),b
 12837  0037F8  5175               	movf	NetworkDiscoveredEvent@rssi& (0+255),w,b
 12838  0037FA  5D79               	subwf	(??_NetworkDiscoveredEvent+2)& (0+255),w,b
 12839  0037FC  5176               	movf	(NetworkDiscoveredEvent@rssi+1)& (0+255),w,b
 12840  0037FE  597A               	subwfb	(??_NetworkDiscoveredEvent+3)& (0+255),w,b
 12841  003800  E233               	bc	l13294
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;Bridge.c: 395: {
 12845                           ;Bridge.c: 396: ActiveScanResults[i].RSSIValue=rssi;
 12846  003802  0E05               	movlw	5
 12847  003804  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12848  003806  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12849  00380A  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12850  00380E  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12851  003810  50F3               	movf	prodl,w,c
 12852  003812  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12853  003814  0E58               	movlw	low (_ActiveScanResults+3)
 12854  003816  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12855  003818  6ED9               	movwf	fsr2l,c
 12856  00381A  0E02               	movlw	high (_ActiveScanResults+3)
 12857  00381C  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12858  00381E  6EDA               	movwf	fsr2h,c
 12859  003820  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 12860  003824  D021               	goto	l13294
 12861  003826                     l13284:
 12862                           
 12863                           ;Bridge.c: 399: }
 12864                           ;Bridge.c: 400: if( (ActiveScanResults[i].Flags==0) && (empty==0xffff) )
 12865  003826  0E05               	movlw	5
 12866  003828  0100               	movlb	0	; () banked
 12867  00382A  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12868  00382C  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12869  003830  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12870  003834  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12871  003836  50F3               	movf	prodl,w,c
 12872  003838  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12873  00383A  0E59               	movlw	low (_ActiveScanResults+4)
 12874  00383C  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12875  00383E  6ED9               	movwf	fsr2l,c
 12876  003840  0E02               	movlw	high (_ActiveScanResults+4)
 12877  003842  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12878  003844  6EDA               	movwf	fsr2h,c
 12879  003846  50DF               	movf	indf2,w,c
 12880  003848  E108               	bnz	l13290
 12881                           
 12882                           ; BSR set to: 0
 12883  00384A  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 12884  00384C  E106               	bnz	l13290
 12885  00384E  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 12886  003850  E104               	bnz	l13290
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;Bridge.c: 401: {
 12890                           ;Bridge.c: 402: empty=i;
 12891  003852  C07D  F07B         	movff	NetworkDiscoveredEvent@i,NetworkDiscoveredEvent@empty
 12892  003856  C07E  F07C         	movff	NetworkDiscoveredEvent@i+1,NetworkDiscoveredEvent@empty+1
 12893  00385A                     l13290:
 12894                           
 12895                           ; BSR set to: 0
 12896  00385A  4B7D               	infsnz	NetworkDiscoveredEvent@i& (0+255),f,b
 12897  00385C  2B7E               	incf	(NetworkDiscoveredEvent@i+1)& (0+255),f,b
 12898                           
 12899                           ; BSR set to: 0
 12900  00385E  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 12901  003860  E103               	bnz	u14700
 12902  003862  0E05               	movlw	5
 12903  003864  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 12904  003866  E38D               	bnc	l13276
 12905  003868                     u14700:
 12906  003868                     l13294:
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;Bridge.c: 403: }
 12910                           ;Bridge.c: 404: }
 12911                           ;Bridge.c: 405: if(i>=5)
 12912  003868  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 12913  00386A  E104               	bnz	u14710
 12914  00386C  0E05               	movlw	5
 12915  00386E  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 12916  003870  A0D8               	btfss	status,0,c
 12917  003872  0012               	return	
 12918  003874                     u14710:
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;Bridge.c: 406: {
 12922                           ;Bridge.c: 407: if(empty!=0xffff)
 12923  003874  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 12924  003876  E103               	bnz	u14720
 12925  003878  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 12926  00387A  B4D8               	btfsc	status,2,c
 12927  00387C  0012               	return	
 12928  00387E                     u14720:
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;Bridge.c: 408: {
 12932                           ;Bridge.c: 409: i=empty;
 12933  00387E  C07B  F07D         	movff	NetworkDiscoveredEvent@empty,NetworkDiscoveredEvent@i
 12934  003882  C07C  F07E         	movff	NetworkDiscoveredEvent@empty+1,NetworkDiscoveredEvent@i+1
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;Bridge.c: 411: ActiveScanResults[i].Flags=1;
 12938  003886  0E05               	movlw	5
 12939  003888  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12940  00388A  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12941  00388E  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12942  003892  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12943  003894  50F3               	movf	prodl,w,c
 12944  003896  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12945  003898  0E59               	movlw	low (_ActiveScanResults+4)
 12946  00389A  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12947  00389C  6ED9               	movwf	fsr2l,c
 12948  00389E  0E02               	movlw	high (_ActiveScanResults+4)
 12949  0038A0  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12950  0038A2  6EDA               	movwf	fsr2h,c
 12951  0038A4  0E01               	movlw	1
 12952  0038A6  6EDF               	movwf	indf2,c
 12953                           
 12954                           ;Bridge.c: 412: ActiveScanResults[i].PANID.Val=PANID;
 12955  0038A8  0E05               	movlw	5
 12956  0038AA  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12957  0038AC  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12958  0038B0  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12959  0038B4  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12960  0038B6  50F3               	movf	prodl,w,c
 12961  0038B8  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12962  0038BA  0E56               	movlw	low (_ActiveScanResults+1)
 12963  0038BC  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12964  0038BE  6ED9               	movwf	fsr2l,c
 12965  0038C0  0E02               	movlw	high (_ActiveScanResults+1)
 12966  0038C2  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12967  0038C4  6EDA               	movwf	fsr2h,c
 12968  0038C6  C073  FFDE         	movff	NetworkDiscoveredEvent@PANID,postinc2
 12969  0038CA  C074  FFDD         	movff	NetworkDiscoveredEvent@PANID+1,postdec2
 12970                           
 12971                           ;Bridge.c: 413: ActiveScanResults[i].RSSIValue=rssi;
 12972  0038CE  0E05               	movlw	5
 12973  0038D0  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12974  0038D2  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12975  0038D6  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12976  0038DA  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12977  0038DC  50F3               	movf	prodl,w,c
 12978  0038DE  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12979  0038E0  0E58               	movlw	low (_ActiveScanResults+3)
 12980  0038E2  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12981  0038E4  6ED9               	movwf	fsr2l,c
 12982  0038E6  0E02               	movlw	high (_ActiveScanResults+3)
 12983  0038E8  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 12984  0038EA  6EDA               	movwf	fsr2h,c
 12985  0038EC  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 12986                           
 12987                           ;Bridge.c: 414: ActiveScanResults[i].Channel=ActiveScanChannel;
 12988  0038F0  0E05               	movlw	5
 12989  0038F2  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 12990  0038F4  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 12991  0038F8  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 12992  0038FC  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 12993  0038FE  50F3               	movf	prodl,w,c
 12994  003900  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 12995  003902  0E55               	movlw	low _ActiveScanResults
 12996  003904  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 12997  003906  6ED9               	movwf	fsr2l,c
 12998  003908  0E02               	movlw	high _ActiveScanResults
 12999  00390A  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13000  00390C  6EDA               	movwf	fsr2h,c
 13001  00390E  C1D2  FFDF         	movff	_ActiveScanChannel,indf2
 13002                           
 13003                           ; BSR set to: 0
 13004  003912  0012               	return		;funcret
 13005  003914                     __end_of_NetworkDiscoveredEvent:
 13006                           	opt stack 0
 13007                           tblptru	equ	0xFF8
 13008                           tblptrh	equ	0xFF7
 13009                           tblptrl	equ	0xFF6
 13010                           tablat	equ	0xFF5
 13011                           prodh	equ	0xFF4
 13012                           prodl	equ	0xFF3
 13013                           intcon3	equ	0xFF0
 13014                           postinc0	equ	0xFEE
 13015                           plusw0	equ	0xFEB
 13016                           fsr0h	equ	0xFEA
 13017                           fsr0l	equ	0xFE9
 13018                           wreg	equ	0xFE8
 13019                           postdec1	equ	0xFE5
 13020                           plusw1	equ	0xFE3
 13021                           fsr1h	equ	0xFE2
 13022                           fsr1l	equ	0xFE1
 13023                           indf2	equ	0xFDF
 13024                           postinc2	equ	0xFDE
 13025                           postdec2	equ	0xFDD
 13026                           plusw2	equ	0xFDB
 13027                           fsr2h	equ	0xFDA
 13028                           fsr2l	equ	0xFD9
 13029                           status	equ	0xFD8
 13030                           
 13031 ;; *************** function _LE_processReceivedMessage *****************
 13032 ;; Defined at:
 13033 ;;		line 425 in file "../LinkEstimator.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;  source          2   63[BANK0 ] PTR struct addr_t_def
 13036 ;;		 -> radioReceivedPacket@source(2), 
 13037 ;;  data            2   65[BANK0 ] PTR unsigned char 
 13038 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 13039 ;;  len             1   67[BANK0 ] unsigned char 
 13040 ;;  rssi            1   68[BANK0 ] unsigned char 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  ll_addr         2   75[BANK0 ] struct addr_t_def
 13043 ;;  bhdr            2   73[BANK0 ] PTR struct net_routing_h
 13044 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 13045 ;;  hdr             2   71[BANK0 ] PTR struct linkest_heade
 13046 ;;		 -> RxPacket.lnk_header(2), RxPacket.Payload.lnk_header(2), RxPacket(142), 
 13047 ;;  nidx            1   77[BANK0 ] unsigned char 
 13048 ;;  res             1    0        enum E179
 13049 ;;  num_entries     1    0        unsigned char 
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      enum E179
 13052 ;; Registers used:
 13053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13054 ;; Tracked objects:
 13055 ;;		On entry : F/0
 13056 ;;		On exit  : F/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13060 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13062 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13063 ;;Total ram usage:       15 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; Hardware stack levels required when called:   10
 13066 ;; This function calls:
 13067 ;;		_NetworkAddressSizeGet
 13068 ;;		_RouteManagerShouldInsert
 13069 ;;		_RouterEvicted
 13070 ;;		_le_findEmptyNeighborIdx
 13071 ;;		_le_findIdx
 13072 ;;		_le_findRandomNeighborIdx
 13073 ;;		_le_findWorstNeighborIdx
 13074 ;;		_le_initNeighborIdx
 13075 ;;		_le_updateNeighborEntryIdx
 13076 ;;		_memcpy
 13077 ;; This function is called by:
 13078 ;;		_radioReceivedPacket
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text43
 13083  004ADA                     __ptext43:
 13084                           	opt stack 0
 13085  004ADA                     _LE_processReceivedMessage:
 13086                           	opt stack 17
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;LinkEstimator.c: 428: uint8_t nidx;
 13090                           ;LinkEstimator.c: 429: uint8_t num_entries;
 13091                           ;LinkEstimator.c: 430: net_routing_header_t *bhdr;
 13092                           ;LinkEstimator.c: 431: linkest_header_t* hdr;
 13093                           ;LinkEstimator.c: 432: addr_t ll_addr;
 13094                           ;LinkEstimator.c: 434: bhdr=(net_routing_header_t*)data;
 13095                           
 13096                           ; BSR set to: 0
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;incstack = 0
 13100  004ADA  C0A1  F0A9         	movff	LE_processReceivedMessage@data,LE_processReceivedMessage@bhdr
 13101  004ADE  C0A2  F0AA         	movff	LE_processReceivedMessage@data+1,LE_processReceivedMessage@bhdr+1
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;LinkEstimator.c: 436: if ( (len >= sizeof (net_routing_header_t)) && (bhdr->packettype=
      +                          =PacketRouting) )
 13105  004AE2  0E09               	movlw	9
 13106  004AE4  65A3               	cpfsgt	LE_processReceivedMessage@len& (0+255),b
 13107  004AE6  0C09               	retlw	9
 13108                           
 13109                           ; BSR set to: 0
 13110  004AE8  EE20 F002          	lfsr	2,2
 13111  004AEC  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13112  004AEE  26D9               	addwf	fsr2l,f,c
 13113  004AF0  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13114  004AF2  22DA               	addwfc	fsr2h,f,c
 13115  004AF4  0E22               	movlw	34
 13116  004AF6  18DE               	xorwf	postinc2,w,c
 13117  004AF8  A4D8               	btfss	status,2,c
 13118  004AFA  0012               	return	
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;LinkEstimator.c: 437: {
 13122                           ;LinkEstimator.c: 438: hdr = &bhdr->lnk_header;
 13123  004AFC  0E08               	movlw	8
 13124  004AFE  25A9               	addwf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13125  004B00  6FA7               	movwf	LE_processReceivedMessage@hdr& (0+255),b
 13126  004B02  0E00               	movlw	0
 13127  004B04  21AA               	addwfc	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13128  004B06  6FA8               	movwf	(LE_processReceivedMessage@hdr+1)& (0+255),b
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;LinkEstimator.c: 441: num_entries = hdr->count;
 13132  004B08  0EAB               	movlw	low LE_processReceivedMessage@ll_addr
 13133  004B0A  6F75               	movwf	memcpy@d1& (0+255),b
 13134  004B0C  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 13135  004B0E  C09F  F077         	movff	LE_processReceivedMessage@source,memcpy@s1
 13136  004B12  C0A0  F078         	movff	LE_processReceivedMessage@source+1,memcpy@s1+1
 13137  004B16  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 13138  004B1A  0100               	movlb	0	; () banked
 13139  004B1C  6F79               	movwf	memcpy@n& (0+255),b
 13140  004B1E  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 13141  004B20  EC5D  F036         	call	_memcpy	;wreg free
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;LinkEstimator.c: 457: nidx = le_findIdx(ll_addr);
 13145  004B24  C0AB  F081         	movff	LE_processReceivedMessage@ll_addr,le_findIdx@ll_addr
 13146  004B28  C0AC  F082         	movff	LE_processReceivedMessage@ll_addr+1,le_findIdx@ll_addr+1
 13147  004B2C  EC84  F035         	call	_le_findIdx	;wreg free
 13148  004B30  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;LinkEstimator.c: 458: if (nidx != 0xff)
 13152  004B32  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13153  004B34  E001               	bz	l13386
 13154  004B36  D01C               	goto	l13394
 13155  004B38                     l13386:
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;LinkEstimator.c: 463: {
 13159                           ;LinkEstimator.c: 464: nidx = le_findEmptyNeighborIdx();
 13160  004B38  EC2D  F037         	call	_le_findEmptyNeighborIdx	;wreg free
 13161  004B3C  0100               	movlb	0	; () banked
 13162  004B3E  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
 13163  004B40  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;LinkEstimator.c: 465: if (nidx != 0xff)
 13167  004B42  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13168  004B44  E027               	bz	l13396
 13169                           
 13170                           ; BSR set to: 0
 13171                           ;LinkEstimator.c: 466: {
 13172                           ;LinkEstimator.c: 468: le_initNeighborIdx(nidx, ll_addr);
 13173  004B46  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 13174  004B4A  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 13175  004B4E  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13176  004B50  EC88  F031         	call	_le_initNeighborIdx
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;LinkEstimator.c: 469: neighbor_tbl[nidx].lastseq = hdr->lnkSeqNum;
 13180  004B54  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 13181  004B58  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 13182  004B5C  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13183  004B5E  0D0B               	mullw	11
 13184  004B60  0E02               	movlw	low (_neighbor_tbl+2)
 13185  004B62  24F3               	addwf	prodl,w,c
 13186  004B64  6EE1               	movwf	fsr1l,c
 13187  004B66  0E05               	movlw	high (_neighbor_tbl+2)
 13188  004B68  20F4               	addwfc	prodh,w,c
 13189  004B6A  6EE2               	movwf	fsr1h,c
 13190  004B6C  CFDF FFE7          	movff	indf2,indf1
 13191  004B70                     l13394:
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;LinkEstimator.c: 470: le_updateNeighborEntryIdx(nidx, hdr->lnkSeqNum, bhdr->options.dev
      +                          iceType);
 13195  004B70  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 13196  004B74  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 13197  004B78  50DF               	movf	indf2,w,c
 13198  004B7A  6F99               	movwf	le_updateNeighborEntryIdx@seq& (0+255),b
 13199  004B7C  EE20 F003          	lfsr	2,3
 13200  004B80  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13201  004B82  26D9               	addwf	fsr2l,f,c
 13202  004B84  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13203  004B86  22DA               	addwfc	fsr2h,f,c
 13204  004B88  50DF               	movf	223,w,c
 13205  004B8A  0B07               	andlw	7
 13206  004B8C  6F9A               	movwf	le_updateNeighborEntryIdx@dev& (0+255),b
 13207  004B8E  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13208  004B90  EFF9  F020         	goto	_le_updateNeighborEntryIdx
 13209  004B94                     l13396:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;LinkEstimator.c: 472: {
 13213                           ;LinkEstimator.c: 473: nidx = le_findWorstNeighborIdx(EvictETXThreshold);
 13214  004B94  0E41               	movlw	65
 13215  004B96  ECA0  F026         	call	_le_findWorstNeighborIdx
 13216  004B9A  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
 13217  004B9C  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;LinkEstimator.c: 474: if (nidx != 0xff)
 13221  004B9E  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13222  004BA0  E00F               	bz	l13404
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;LinkEstimator.c: 475: {
 13226                           ;LinkEstimator.c: 478: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 13227  004BA2  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13228  004BA4  0D0B               	mullw	11
 13229  004BA6  0E00               	movlw	low _neighbor_tbl
 13230  004BA8  24F3               	addwf	prodl,w,c
 13231  004BAA  6ED9               	movwf	fsr2l,c
 13232  004BAC  0E05               	movlw	high _neighbor_tbl
 13233  004BAE  20F4               	addwfc	prodh,w,c
 13234  004BB0  6EDA               	movwf	fsr2h,c
 13235  004BB2  CFDE F08F          	movff	postinc2,RouterEvicted@address
 13236  004BB6  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 13237  004BBA  ECB1  F02E         	call	_RouterEvicted	;wreg free
 13238  004BBE  D021               	goto	l13414
 13239  004BC0                     l13404:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;LinkEstimator.c: 481: {
 13243                           ;LinkEstimator.c: 488: if (rssi>=rssiThreshold)
 13244  004BC0  0E18               	movlw	24
 13245  004BC2  65A4               	cpfsgt	LE_processReceivedMessage@rssi& (0+255),b
 13246  004BC4  0C18               	retlw	24
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;LinkEstimator.c: 489: {
 13250                           ;LinkEstimator.c: 490: if(RouteManagerShouldInsert(bhdr)==1)
 13251  004BC6  C0A9  F088         	movff	LE_processReceivedMessage@bhdr,RouteManagerShouldInsert@hdr
 13252  004BCA  C0AA  F089         	movff	LE_processReceivedMessage@bhdr+1,RouteManagerShouldInsert@hdr+1
 13253  004BCE  ECAE  F02A         	call	_RouteManagerShouldInsert	;wreg free
 13254  004BD2  06E8               	decf	wreg,f,c
 13255  004BD4  A4D8               	btfss	status,2,c
 13256  004BD6  0012               	return	
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;LinkEstimator.c: 491: {
 13260                           ;LinkEstimator.c: 492: nidx = le_findRandomNeighborIdx();
 13261  004BD8  EC0E  F01A         	call	_le_findRandomNeighborIdx	;wreg free
 13262  004BDC  5184               	movf	?_le_findRandomNeighborIdx& (0+255),w,b
 13263  004BDE  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;LinkEstimator.c: 493: if (nidx != 0xff)
 13267  004BE0  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13268  004BE2  B4D8               	btfsc	status,2,c
 13269  004BE4  0012               	return	
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;LinkEstimator.c: 494: {
 13273                           ;LinkEstimator.c: 495: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 13274  004BE6  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13275  004BE8  0D0B               	mullw	11
 13276  004BEA  0E00               	movlw	low _neighbor_tbl
 13277  004BEC  24F3               	addwf	prodl,w,c
 13278  004BEE  6ED9               	movwf	fsr2l,c
 13279  004BF0  0E05               	movlw	high _neighbor_tbl
 13280  004BF2  20F4               	addwfc	prodh,w,c
 13281  004BF4  6EDA               	movwf	fsr2h,c
 13282  004BF6  CFDE F08F          	movff	postinc2,RouterEvicted@address
 13283  004BFA  CFDD F090          	movff	postdec2,RouterEvicted@address+1
 13284  004BFE  ECB1  F02E         	call	_RouterEvicted	;wreg free
 13285  004C02                     l13414:
 13286                           
 13287                           ;LinkEstimator.c: 496: le_initNeighborIdx(nidx, ll_addr);
 13288  004C02  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 13289  004C06  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 13290  004C0A  0100               	movlb	0	; () banked
 13291  004C0C  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13292  004C0E  EF88  F031         	goto	_le_initNeighborIdx
 13293  004C12                     __end_of_LE_processReceivedMessage:
 13294                           	opt stack 0
 13295                           tblptru	equ	0xFF8
 13296                           tblptrh	equ	0xFF7
 13297                           tblptrl	equ	0xFF6
 13298                           tablat	equ	0xFF5
 13299                           prodh	equ	0xFF4
 13300                           prodl	equ	0xFF3
 13301                           intcon3	equ	0xFF0
 13302                           postinc0	equ	0xFEE
 13303                           plusw0	equ	0xFEB
 13304                           fsr0h	equ	0xFEA
 13305                           fsr0l	equ	0xFE9
 13306                           wreg	equ	0xFE8
 13307                           indf1	equ	0xFE7
 13308                           postdec1	equ	0xFE5
 13309                           plusw1	equ	0xFE3
 13310                           fsr1h	equ	0xFE2
 13311                           fsr1l	equ	0xFE1
 13312                           indf2	equ	0xFDF
 13313                           postinc2	equ	0xFDE
 13314                           postdec2	equ	0xFDD
 13315                           plusw2	equ	0xFDB
 13316                           fsr2h	equ	0xFDA
 13317                           fsr2l	equ	0xFD9
 13318                           status	equ	0xFD8
 13319                           
 13320 ;; *************** function _le_updateNeighborEntryIdx *****************
 13321 ;; Defined at:
 13322 ;;		line 339 in file "../LinkEstimator.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;  idx             1    wreg     unsigned char 
 13325 ;;  seq             1   57[BANK0 ] unsigned char 
 13326 ;;  dev             1   58[BANK0 ] enum E144
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;  idx             1   62[BANK0 ] unsigned char 
 13329 ;;  packetGap       1   61[BANK0 ] unsigned char 
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  1    wreg      void 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13334 ;; Tracked objects:
 13335 ;;		On entry : F/0
 13336 ;;		On exit  : F/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13343 ;;Total ram usage:        6 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; Hardware stack levels required when called:    8
 13346 ;; This function calls:
 13347 ;;		_le_initNeighborIdx
 13348 ;;		_le_updateNeighborTableEst
 13349 ;; This function is called by:
 13350 ;;		_LE_processReceivedMessage
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           	psect	text44
 13355  0041F2                     __ptext44:
 13356                           	opt stack 0
 13357  0041F2                     _le_updateNeighborEntryIdx:
 13358                           	opt stack 18
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;incstack = 0
 13362                           ;le_updateNeighborEntryIdx@idx stored from wreg
 13363  0041F2  6F9E               	movwf	le_updateNeighborEntryIdx@idx& (0+255),b
 13364                           
 13365                           ;LinkEstimator.c: 341: uint8_t packetGap;
 13366                           ;LinkEstimator.c: 343: if (neighbor_tbl[idx].flags & 0x4)
 13367  0041F4  0100               	movlb	0	; () banked
 13368  0041F6  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13369  0041F8  0D0B               	mullw	11
 13370  0041FA  0E05               	movlw	low (_neighbor_tbl+5)
 13371  0041FC  24F3               	addwf	prodl,w,c
 13372  0041FE  6ED9               	movwf	fsr2l,c
 13373  004200  0E05               	movlw	high (_neighbor_tbl+5)
 13374  004202  20F4               	addwfc	prodh,w,c
 13375  004204  6EDA               	movwf	fsr2h,c
 13376  004206  A4DF               	btfss	indf2,2,c
 13377  004208  D00A               	goto	l1569
 13378                           
 13379                           ; BSR set to: 5
 13380                           ;LinkEstimator.c: 344: {
 13381                           ;LinkEstimator.c: 346: neighbor_tbl[idx].flags &= ~0x4;
 13382  00420A  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13383  00420C  0D0B               	mullw	11
 13384  00420E  0E05               	movlw	low (_neighbor_tbl+5)
 13385  004210  24F3               	addwf	prodl,w,c
 13386  004212  6ED9               	movwf	fsr2l,c
 13387  004214  0E05               	movlw	high (_neighbor_tbl+5)
 13388  004216  20F4               	addwfc	prodh,w,c
 13389  004218  6EDA               	movwf	fsr2h,c
 13390  00421A  0EFB               	movlw	251
 13391  00421C  16DF               	andwf	indf2,f,c
 13392  00421E                     l1569:
 13393                           
 13394                           ;LinkEstimator.c: 347: }
 13395                           ;LinkEstimator.c: 349: neighbor_tbl[idx].flags|=(dev<<4);
 13396  00421E  C09A  F09B         	movff	le_updateNeighborEntryIdx@dev,??_le_updateNeighborEntryIdx
 13397  004222  0100               	movlb	0	; () banked
 13398  004224  3B9B               	swapf	??_le_updateNeighborEntryIdx& (0+255),f,b
 13399  004226  0EF0               	movlw	240
 13400  004228  179B               	andwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 13401  00422A  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13402  00422C  0D0B               	mullw	11
 13403  00422E  0E05               	movlw	low (_neighbor_tbl+5)
 13404  004230  24F3               	addwf	prodl,w,c
 13405  004232  6ED9               	movwf	fsr2l,c
 13406  004234  0E05               	movlw	high (_neighbor_tbl+5)
 13407  004236  20F4               	addwfc	prodh,w,c
 13408  004238  6EDA               	movwf	fsr2h,c
 13409  00423A  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 13410  00423C  12DF               	iorwf	indf2,f,c
 13411                           
 13412                           ;LinkEstimator.c: 351: packetGap = seq - neighbor_tbl[idx].lastseq;
 13413  00423E  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13414  004240  0D0B               	mullw	11
 13415  004242  0E02               	movlw	low (_neighbor_tbl+2)
 13416  004244  24F3               	addwf	prodl,w,c
 13417  004246  6ED9               	movwf	fsr2l,c
 13418  004248  0E05               	movlw	high (_neighbor_tbl+2)
 13419  00424A  20F4               	addwfc	prodh,w,c
 13420  00424C  6EDA               	movwf	fsr2h,c
 13421  00424E  50DF               	movf	indf2,w,c
 13422  004250  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 13423  004252  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 13424  004254  5D99               	subwf	le_updateNeighborEntryIdx@seq& (0+255),w,b
 13425  004256  6F9D               	movwf	le_updateNeighborEntryIdx@packetGap& (0+255),b
 13426                           
 13427                           ;LinkEstimator.c: 354: neighbor_tbl[idx].lastseq = seq;
 13428  004258  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13429  00425A  0D0B               	mullw	11
 13430  00425C  0E02               	movlw	low (_neighbor_tbl+2)
 13431  00425E  24F3               	addwf	prodl,w,c
 13432  004260  6ED9               	movwf	fsr2l,c
 13433  004262  0E05               	movlw	high (_neighbor_tbl+2)
 13434  004264  20F4               	addwfc	prodh,w,c
 13435  004266  6EDA               	movwf	fsr2h,c
 13436  004268  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 13437                           
 13438                           ;LinkEstimator.c: 355: neighbor_tbl[idx].rcvcnt++;
 13439  00426C  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13440  00426E  0D0B               	mullw	11
 13441  004270  0E03               	movlw	low (_neighbor_tbl+3)
 13442  004272  24F3               	addwf	prodl,w,c
 13443  004274  6ED9               	movwf	fsr2l,c
 13444  004276  0E05               	movlw	high (_neighbor_tbl+3)
 13445  004278  20F4               	addwfc	prodh,w,c
 13446  00427A  6EDA               	movwf	fsr2h,c
 13447  00427C  2ADF               	incf	indf2,f,c
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;LinkEstimator.c: 356: if (packetGap > 0)
 13451  00427E  519D               	movf	le_updateNeighborEntryIdx@packetGap& (0+255),w,b
 13452  004280  E00D               	bz	l13110
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;LinkEstimator.c: 357: {
 13456                           ;LinkEstimator.c: 358: neighbor_tbl[idx].failcnt += packetGap - 1;
 13457  004282  C09D  F09B         	movff	le_updateNeighborEntryIdx@packetGap,??_le_updateNeighborEntryIdx
 13458  004286  079B               	decf	??_le_updateNeighborEntryIdx& (0+255),f,b
 13459  004288  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13460  00428A  0D0B               	mullw	11
 13461  00428C  0E04               	movlw	low (_neighbor_tbl+4)
 13462  00428E  24F3               	addwf	prodl,w,c
 13463  004290  6ED9               	movwf	fsr2l,c
 13464  004292  0E05               	movlw	high (_neighbor_tbl+4)
 13465  004294  20F4               	addwfc	prodh,w,c
 13466  004296  6EDA               	movwf	fsr2h,c
 13467  004298  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 13468  00429A  26DF               	addwf	indf2,f,c
 13469  00429C                     l13110:
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;LinkEstimator.c: 359: }
 13473                           ;LinkEstimator.c: 361: if (packetGap > 10)
 13474  00429C  0E0A               	movlw	10
 13475  00429E  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 13476  0042A0  D024               	goto	l13118
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;LinkEstimator.c: 362: {
 13480                           ;LinkEstimator.c: 363: le_initNeighborIdx(idx, neighbor_tbl[idx].ll_addr);
 13481  0042A2  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13482  0042A4  0D0B               	mullw	11
 13483  0042A6  0E00               	movlw	low _neighbor_tbl
 13484  0042A8  24F3               	addwf	prodl,w,c
 13485  0042AA  6ED9               	movwf	fsr2l,c
 13486  0042AC  0E05               	movlw	high _neighbor_tbl
 13487  0042AE  20F4               	addwfc	prodh,w,c
 13488  0042B0  6EDA               	movwf	fsr2h,c
 13489  0042B2  CFDE F073          	movff	postinc2,le_initNeighborIdx@ll_addr
 13490  0042B6  CFDD F074          	movff	postdec2,le_initNeighborIdx@ll_addr+1
 13491  0042BA  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13492  0042BC  EC88  F031         	call	_le_initNeighborIdx
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;LinkEstimator.c: 364: neighbor_tbl[idx].lastseq = seq;
 13496  0042C0  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13497  0042C2  0D0B               	mullw	11
 13498  0042C4  0E02               	movlw	low (_neighbor_tbl+2)
 13499  0042C6  24F3               	addwf	prodl,w,c
 13500  0042C8  6ED9               	movwf	fsr2l,c
 13501  0042CA  0E05               	movlw	high (_neighbor_tbl+2)
 13502  0042CC  20F4               	addwfc	prodh,w,c
 13503  0042CE  6EDA               	movwf	fsr2h,c
 13504  0042D0  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;LinkEstimator.c: 365: neighbor_tbl[idx].rcvcnt = 1;
 13508  0042D4  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13509  0042D6  0D0B               	mullw	11
 13510  0042D8  0E03               	movlw	low (_neighbor_tbl+3)
 13511  0042DA  24F3               	addwf	prodl,w,c
 13512  0042DC  6ED9               	movwf	fsr2l,c
 13513  0042DE  0E05               	movlw	high (_neighbor_tbl+3)
 13514  0042E0  20F4               	addwfc	prodh,w,c
 13515  0042E2  6EDA               	movwf	fsr2h,c
 13516  0042E4  0E01               	movlw	1
 13517  0042E6  6EDF               	movwf	indf2,c
 13518                           
 13519                           ;LinkEstimator.c: 366: } else if (((neighbor_tbl[idx].rcvcnt + neighbor_tbl[idx].failcnt
      +                          ) >= 3)
 13520  0042E8  0C01               	retlw	1
 13521  0042EA                     l13118:
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;LinkEstimator.c: 367: || (packetGap >= 3))
 13525  0042EA  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13526  0042EC  0D0B               	mullw	11
 13527  0042EE  0E03               	movlw	low (_neighbor_tbl+3)
 13528  0042F0  24F3               	addwf	prodl,w,c
 13529  0042F2  6ED9               	movwf	fsr2l,c
 13530  0042F4  0E05               	movlw	high (_neighbor_tbl+3)
 13531  0042F6  20F4               	addwfc	prodh,w,c
 13532  0042F8  6EDA               	movwf	fsr2h,c
 13533  0042FA  50DF               	movf	indf2,w,c
 13534  0042FC  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 13535  0042FE  6B9C               	clrf	(??_le_updateNeighborEntryIdx+1)& (0+255),b
 13536  004300  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13537  004302  0D0B               	mullw	11
 13538  004304  0E04               	movlw	low (_neighbor_tbl+4)
 13539  004306  24F3               	addwf	prodl,w,c
 13540  004308  6ED9               	movwf	fsr2l,c
 13541  00430A  0E05               	movlw	high (_neighbor_tbl+4)
 13542  00430C  20F4               	addwfc	prodh,w,c
 13543  00430E  6EDA               	movwf	fsr2h,c
 13544  004310  50DF               	movf	indf2,w,c
 13545  004312  279B               	addwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 13546  004314  0E00               	movlw	0
 13547  004316  239C               	addwfc	(??_le_updateNeighborEntryIdx+1)& (0+255),f,b
 13548  004318  BF9C               	btfsc	(??_le_updateNeighborEntryIdx+1)& (0+255),7,b
 13549  00431A  D005               	goto	l13120
 13550  00431C  519C               	movf	(??_le_updateNeighborEntryIdx+1)& (0+255),w,b
 13551  00431E  E106               	bnz	l13122
 13552  004320  0E03               	movlw	3
 13553  004322  5D9B               	subwf	??_le_updateNeighborEntryIdx& (0+255),w,b
 13554  004324  E203               	bc	l13122
 13555  004326                     l13120:
 13556                           
 13557                           ; BSR set to: 0
 13558  004326  0E02               	movlw	2
 13559  004328  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 13560  00432A  0C02               	retlw	2
 13561  00432C                     l13122:
 13562                           
 13563                           ; BSR set to: 0
 13564                           ;LinkEstimator.c: 368: {
 13565                           ;LinkEstimator.c: 369: le_updateNeighborTableEst(neighbor_tbl[idx].ll_addr);
 13566  00432C  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 13567  00432E  0D0B               	mullw	11
 13568  004330  0E00               	movlw	low _neighbor_tbl
 13569  004332  24F3               	addwf	prodl,w,c
 13570  004334  6ED9               	movwf	fsr2l,c
 13571  004336  0E05               	movlw	high _neighbor_tbl
 13572  004338  20F4               	addwfc	prodh,w,c
 13573  00433A  6EDA               	movwf	fsr2h,c
 13574  00433C  CFDE F088          	movff	postinc2,le_updateNeighborTableEst@n
 13575  004340  CFDD F089          	movff	postdec2,le_updateNeighborTableEst@n+1
 13576  004344  EFBE  F00F         	goto	_le_updateNeighborTableEst	;wreg free
 13577  004348                     __end_of_le_updateNeighborEntryIdx:
 13578                           	opt stack 0
 13579                           tblptru	equ	0xFF8
 13580                           tblptrh	equ	0xFF7
 13581                           tblptrl	equ	0xFF6
 13582                           tablat	equ	0xFF5
 13583                           prodh	equ	0xFF4
 13584                           prodl	equ	0xFF3
 13585                           intcon3	equ	0xFF0
 13586                           postinc0	equ	0xFEE
 13587                           plusw0	equ	0xFEB
 13588                           fsr0h	equ	0xFEA
 13589                           fsr0l	equ	0xFE9
 13590                           wreg	equ	0xFE8
 13591                           indf1	equ	0xFE7
 13592                           postdec1	equ	0xFE5
 13593                           plusw1	equ	0xFE3
 13594                           fsr1h	equ	0xFE2
 13595                           fsr1l	equ	0xFE1
 13596                           indf2	equ	0xFDF
 13597                           postinc2	equ	0xFDE
 13598                           postdec2	equ	0xFDD
 13599                           plusw2	equ	0xFDB
 13600                           fsr2h	equ	0xFDA
 13601                           fsr2l	equ	0xFD9
 13602                           status	equ	0xFD8
 13603                           
 13604 ;; *************** function _le_updateNeighborTableEst *****************
 13605 ;; Defined at:
 13606 ;;		line 297 in file "../LinkEstimator.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  n               2   40[BANK0 ] struct addr_t_def
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;  ne              2   55[BANK0 ] PTR struct neighbor_tabl
 13611 ;;		 -> neighbor_tbl(220), 
 13612 ;;  newEst          2   52[BANK0 ] unsigned int 
 13613 ;;  i               1   54[BANK0 ] unsigned char 
 13614 ;;  totalPkt        1   51[BANK0 ] unsigned char 
 13615 ;;  minPkt          1    0        unsigned char 
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13620 ;; Tracked objects:
 13621 ;;		On entry : F/0
 13622 ;;		On exit  : F/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13626 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13627 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13628 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13629 ;;Total ram usage:       17 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:    7
 13632 ;; This function calls:
 13633 ;;		___lldiv
 13634 ;;		___lwdiv
 13635 ;;		_isSameAddress
 13636 ;;		_le_computeETX
 13637 ;;		_le_updateETX
 13638 ;; This function is called by:
 13639 ;;		_le_updateNeighborEntryIdx
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text45
 13644  001F7C                     __ptext45:
 13645                           	opt stack 0
 13646  001F7C                     _le_updateNeighborTableEst:
 13647                           	opt stack 18
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;LinkEstimator.c: 306: for (i = 0; i < 20; i++)
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;incstack = 0
 13654  001F7C  6B96               	clrf	le_updateNeighborTableEst@i& (0+255),b
 13655  001F7E                     l12716:
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;LinkEstimator.c: 307: {
 13659                           ;LinkEstimator.c: 308: ne = &neighbor_tbl[i];
 13660  001F7E  5196               	movf	le_updateNeighborTableEst@i& (0+255),w,b
 13661  001F80  0D0B               	mullw	11
 13662  001F82  0E00               	movlw	low _neighbor_tbl
 13663  001F84  24F3               	addwf	prodl,w,c
 13664  001F86  6F97               	movwf	le_updateNeighborTableEst@ne& (0+255),b
 13665  001F88  0E05               	movlw	high _neighbor_tbl
 13666  001F8A  20F4               	addwfc	prodh,w,c
 13667  001F8C  6F98               	movwf	(le_updateNeighborTableEst@ne+1)& (0+255),b
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;LinkEstimator.c: 309: if (isSameAddress(ne->ll_addr, n))
 13671  001F8E  C097  FFD9         	movff	le_updateNeighborTableEst@ne,fsr2l
 13672  001F92  C098  FFDA         	movff	le_updateNeighborTableEst@ne+1,fsr2h
 13673  001F96  CFDE F07D          	movff	postinc2,isSameAddress@a1
 13674  001F9A  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 13675  001F9E  C088  F07F         	movff	le_updateNeighborTableEst@n,isSameAddress@a2
 13676  001FA2  C089  F080         	movff	le_updateNeighborTableEst@n+1,isSameAddress@a2+1
 13677  001FA6  ECB1  F03A         	call	_isSameAddress	;wreg free
 13678  001FAA  0900               	iorlw	0
 13679  001FAC  E101 D137          	bz	l12742
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;LinkEstimator.c: 310: {
 13683                           ;LinkEstimator.c: 311: if (ne->flags & 0x1)
 13684  001FB0  EE20 F005          	lfsr	2,5
 13685  001FB4  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13686  001FB6  26D9               	addwf	fsr2l,f,c
 13687  001FB8  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13688  001FBA  22DA               	addwfc	fsr2h,f,c
 13689  001FBC  A0DF               	btfss	indf2,0,c
 13690  001FBE  D12F               	goto	l12742
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;LinkEstimator.c: 312: {
 13694                           ;LinkEstimator.c: 314: totalPkt = ne->rcvcnt + ne->failcnt;
 13695  001FC0  EE20 F004          	lfsr	2,4
 13696  001FC4  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13697  001FC6  26D9               	addwf	fsr2l,f,c
 13698  001FC8  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13699  001FCA  22DA               	addwfc	fsr2h,f,c
 13700  001FCC  50DF               	movf	indf2,w,c
 13701  001FCE  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13702  001FD0  EE20 F003          	lfsr	2,3
 13703  001FD4  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13704  001FD6  26D9               	addwf	fsr2l,f,c
 13705  001FD8  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13706  001FDA  22DA               	addwfc	fsr2h,f,c
 13707  001FDC  50DF               	movf	indf2,w,c
 13708  001FDE  258A               	addwf	??_le_updateNeighborTableEst& (0+255),w,b
 13709  001FE0  6F93               	movwf	le_updateNeighborTableEst@totalPkt& (0+255),b
 13710                           
 13711                           ;LinkEstimator.c: 316: if ((ne->flags & 0x2)==0)
 13712  001FE2  EE20 F005          	lfsr	2,5
 13713  001FE6  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13714  001FE8  26D9               	addwf	fsr2l,f,c
 13715  001FEA  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13716  001FEC  22DA               	addwfc	fsr2h,f,c
 13717  001FEE  B2DF               	btfsc	indf2,1,c
 13718  001FF0  D073               	goto	l12730
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;LinkEstimator.c: 317: {
 13722                           ;LinkEstimator.c: 318: newEst = (250UL * ne->rcvcnt) / totalPkt;
 13723  001FF2  EE20 F003          	lfsr	2,3
 13724  001FF6  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13725  001FF8  26D9               	addwf	fsr2l,f,c
 13726  001FFA  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13727  001FFC  22DA               	addwfc	fsr2h,f,c
 13728  001FFE  50DF               	movf	indf2,w,c
 13729  002000  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13730  002002  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 13731  002006  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13732  002008  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13733  00200A  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13734  00200C  0EFA               	movlw	250
 13735  00200E  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13736  002010  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 13737  002014  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 13738  002018  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 13739  00201A  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 13740  00201C  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13741  00201E  50F3               	movf	prodl,w,c
 13742  002020  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13743  002022  50F4               	movf	prodh,w,c
 13744  002024  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13745  002026  0E00               	movlw	0
 13746  002028  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13747  00202A  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13748  00202C  50F3               	movf	prodl,w,c
 13749  00202E  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13750  002030  50F4               	movf	prodh,w,c
 13751  002032  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13752  002034  0E00               	movlw	0
 13753  002036  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13754  002038  0EFA               	movlw	250
 13755  00203A  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13756  00203C  50F3               	movf	prodl,w,c
 13757  00203E  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13758  002040  50F4               	movf	prodh,w,c
 13759  002042  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13760  002044  0E00               	movlw	0
 13761  002046  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13762  002048  50F3               	movf	prodl,w,c
 13763  00204A  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13764  00204C  50F4               	movf	prodh,w,c
 13765  00204E  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13766  002050  0E00               	movlw	0
 13767  002052  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13768  002054  50F3               	movf	prodl,w,c
 13769  002056  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13770  002058  50F4               	movf	prodh,w,c
 13771  00205A  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13772  00205C  0EFA               	movlw	250
 13773  00205E  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13774  002060  50F3               	movf	prodl,w,c
 13775  002062  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13776  002064  0E00               	movlw	0
 13777  002066  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13778  002068  50F3               	movf	prodl,w,c
 13779  00206A  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13780  00206C  0E00               	movlw	0
 13781  00206E  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13782  002070  50F3               	movf	prodl,w,c
 13783  002072  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13784  002074  0E00               	movlw	0
 13785  002076  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13786  002078  50F3               	movf	prodl,w,c
 13787  00207A  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13788  00207C  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 13789  002080  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 13790  002084  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 13791  002088  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 13792  00208C  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 13793  00208E  6F77               	movwf	___lldiv@divisor& (0+255),b
 13794  002090  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 13795  002092  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 13796  002094  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 13797  002096  EC7B  F032         	call	___lldiv	;wreg free
 13798  00209A  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 13799  00209E  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;LinkEstimator.c: 319: ne->inquality = newEst;
 13803  0020A2  EE20 F006          	lfsr	2,6
 13804  0020A6  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13805  0020A8  26D9               	addwf	fsr2l,f,c
 13806  0020AA  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13807  0020AC  22DA               	addwfc	fsr2h,f,c
 13808  0020AE  C094  FFDF         	movff	le_updateNeighborTableEst@newEst,indf2
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;LinkEstimator.c: 320: ne->etx = le_computeETX(ne->inquality);
 13812  0020B2  EE20 F006          	lfsr	2,6
 13813  0020B6  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13814  0020B8  26D9               	addwf	fsr2l,f,c
 13815  0020BA  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13816  0020BC  22DA               	addwfc	fsr2h,f,c
 13817  0020BE  50DF               	movf	indf2,w,c
 13818  0020C0  EC4E  F038         	call	_le_computeETX
 13819  0020C4  EE20 F007          	lfsr	2,7
 13820  0020C8  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13821  0020CA  26D9               	addwf	fsr2l,f,c
 13822  0020CC  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13823  0020CE  22DA               	addwfc	fsr2h,f,c
 13824  0020D0  C07B  FFDE         	movff	?_le_computeETX,postinc2
 13825  0020D4  C07C  FFDD         	movff	?_le_computeETX+1,postdec2
 13826  0020D8                     l12730:
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;LinkEstimator.c: 321: }
 13830                           ;LinkEstimator.c: 323: ne->flags |= 0x2;
 13831  0020D8  EE20 F005          	lfsr	2,5
 13832  0020DC  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13833  0020DE  26D9               	addwf	fsr2l,f,c
 13834  0020E0  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13835  0020E2  22DA               	addwfc	fsr2h,f,c
 13836  0020E4  0E00               	movlw	0
 13837  0020E6  82DB               	bsf	plusw2,1,c
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;LinkEstimator.c: 325: newEst = (250UL * ne->rcvcnt) / totalPkt;
 13841  0020E8  EE20 F003          	lfsr	2,3
 13842  0020EC  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13843  0020EE  26D9               	addwf	fsr2l,f,c
 13844  0020F0  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13845  0020F2  22DA               	addwfc	fsr2h,f,c
 13846  0020F4  50DF               	movf	indf2,w,c
 13847  0020F6  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 13848  0020F8  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 13849  0020FC  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13850  0020FE  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13851  002100  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13852  002102  0EFA               	movlw	250
 13853  002104  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13854  002106  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 13855  00210A  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 13856  00210E  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 13857  002110  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 13858  002112  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13859  002114  50F3               	movf	prodl,w,c
 13860  002116  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13861  002118  50F4               	movf	prodh,w,c
 13862  00211A  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13863  00211C  0E00               	movlw	0
 13864  00211E  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13865  002120  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13866  002122  50F3               	movf	prodl,w,c
 13867  002124  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 13868  002126  50F4               	movf	prodh,w,c
 13869  002128  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13870  00212A  0E00               	movlw	0
 13871  00212C  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13872  00212E  0EFA               	movlw	250
 13873  002130  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13874  002132  50F3               	movf	prodl,w,c
 13875  002134  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13876  002136  50F4               	movf	prodh,w,c
 13877  002138  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13878  00213A  0E00               	movlw	0
 13879  00213C  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13880  00213E  50F3               	movf	prodl,w,c
 13881  002140  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13882  002142  50F4               	movf	prodh,w,c
 13883  002144  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13884  002146  0E00               	movlw	0
 13885  002148  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13886  00214A  50F3               	movf	prodl,w,c
 13887  00214C  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 13888  00214E  50F4               	movf	prodh,w,c
 13889  002150  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13890  002152  0EFA               	movlw	250
 13891  002154  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 13892  002156  50F3               	movf	prodl,w,c
 13893  002158  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13894  00215A  0E00               	movlw	0
 13895  00215C  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 13896  00215E  50F3               	movf	prodl,w,c
 13897  002160  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13898  002162  0E00               	movlw	0
 13899  002164  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 13900  002166  50F3               	movf	prodl,w,c
 13901  002168  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13902  00216A  0E00               	movlw	0
 13903  00216C  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 13904  00216E  50F3               	movf	prodl,w,c
 13905  002170  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 13906  002172  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 13907  002176  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 13908  00217A  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 13909  00217E  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 13910  002182  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 13911  002184  6F77               	movwf	___lldiv@divisor& (0+255),b
 13912  002186  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 13913  002188  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 13914  00218A  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 13915  00218C  EC7B  F032         	call	___lldiv	;wreg free
 13916  002190  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 13917  002194  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;LinkEstimator.c: 327: ne->inquality = (8 * (uint16_t) ne->inquality + (10 - 8) * newEst
      +                          ) / 10;
 13921  002198  EE20 F006          	lfsr	2,6
 13922  00219C  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13923  00219E  26D9               	addwf	fsr2l,f,c
 13924  0021A0  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13925  0021A2  22DA               	addwfc	fsr2h,f,c
 13926  0021A4  C094  F08A         	movff	le_updateNeighborTableEst@newEst,??_le_updateNeighborTableEst
 13927  0021A8  C095  F08B         	movff	le_updateNeighborTableEst@newEst+1,??_le_updateNeighborTableEst+1
 13928  0021AC  90D8               	bcf	status,0,c
 13929  0021AE  378A               	rlcf	??_le_updateNeighborTableEst& (0+255),f,b
 13930  0021B0  378B               	rlcf	(??_le_updateNeighborTableEst+1)& (0+255),f,b
 13931  0021B2  EE10 F006          	lfsr	1,6
 13932  0021B6  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13933  0021B8  26E1               	addwf	fsr1l,f,c
 13934  0021BA  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13935  0021BC  22E2               	addwfc	fsr1h,f,c
 13936  0021BE  50E7               	movf	indf1,w,c
 13937  0021C0  0D08               	mullw	8
 13938  0021C2  518A               	movf	??_le_updateNeighborTableEst& (0+255),w,b
 13939  0021C4  24F3               	addwf	prodl,w,c
 13940  0021C6  6F73               	movwf	___lwdiv@dividend& (0+255),b
 13941  0021C8  518B               	movf	(??_le_updateNeighborTableEst+1)& (0+255),w,b
 13942  0021CA  20F4               	addwfc	prodh,w,c
 13943  0021CC  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 13944  0021CE  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 13945  0021D0  0E0A               	movlw	10
 13946  0021D2  6F75               	movwf	___lwdiv@divisor& (0+255),b
 13947  0021D4  ECA1  F037         	call	___lwdiv	;wreg free
 13948  0021D8  5173               	movf	?___lwdiv& (0+255),w,b
 13949  0021DA  6EDF               	movwf	indf2,c
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;LinkEstimator.c: 328: ne->rcvcnt = 0;
 13953  0021DC  EE20 F003          	lfsr	2,3
 13954  0021E0  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13955  0021E2  26D9               	addwf	fsr2l,f,c
 13956  0021E4  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13957  0021E6  22DA               	addwfc	fsr2h,f,c
 13958  0021E8  6ADF               	clrf	indf2,c
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;LinkEstimator.c: 329: ne->failcnt = 0;
 13962  0021EA  EE20 F004          	lfsr	2,4
 13963  0021EE  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13964  0021F0  26D9               	addwf	fsr2l,f,c
 13965  0021F2  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13966  0021F4  22DA               	addwfc	fsr2h,f,c
 13967  0021F6  6ADF               	clrf	indf2,c
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;LinkEstimator.c: 330: le_updateETX(ne, le_computeETX(ne->inquality));
 13971  0021F8  C097  F080         	movff	le_updateNeighborTableEst@ne,le_updateETX@ne
 13972  0021FC  C098  F081         	movff	le_updateNeighborTableEst@ne+1,le_updateETX@ne+1
 13973  002200  EE20 F006          	lfsr	2,6
 13974  002204  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 13975  002206  26D9               	addwf	fsr2l,f,c
 13976  002208  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 13977  00220A  22DA               	addwfc	fsr2h,f,c
 13978  00220C  50DF               	movf	indf2,w,c
 13979  00220E  EC4E  F038         	call	_le_computeETX
 13980  002212  C07B  F082         	movff	?_le_computeETX,le_updateETX@newEst
 13981  002216  C07C  F083         	movff	?_le_computeETX+1,le_updateETX@newEst+1
 13982  00221A  ECCC  F034         	call	_le_updateETX	;wreg free
 13983  00221E                     l12742:
 13984                           
 13985                           ; BSR set to: 0
 13986  00221E  2B96               	incf	le_updateNeighborTableEst@i& (0+255),f,b
 13987                           
 13988                           ; BSR set to: 0
 13989  002220  0E13               	movlw	19
 13990  002222  6596               	cpfsgt	le_updateNeighborTableEst@i& (0+255),b
 13991  002224  D6AC               	goto	l12716
 13992  002226  0C13               	retlw	19
 13993  002228                     __end_of_le_updateNeighborTableEst:
 13994                           	opt stack 0
 13995                           tblptru	equ	0xFF8
 13996                           tblptrh	equ	0xFF7
 13997                           tblptrl	equ	0xFF6
 13998                           tablat	equ	0xFF5
 13999                           prodh	equ	0xFF4
 14000                           prodl	equ	0xFF3
 14001                           intcon3	equ	0xFF0
 14002                           postinc0	equ	0xFEE
 14003                           plusw0	equ	0xFEB
 14004                           fsr0h	equ	0xFEA
 14005                           fsr0l	equ	0xFE9
 14006                           wreg	equ	0xFE8
 14007                           indf1	equ	0xFE7
 14008                           postdec1	equ	0xFE5
 14009                           plusw1	equ	0xFE3
 14010                           fsr1h	equ	0xFE2
 14011                           fsr1l	equ	0xFE1
 14012                           indf2	equ	0xFDF
 14013                           postinc2	equ	0xFDE
 14014                           postdec2	equ	0xFDD
 14015                           plusw2	equ	0xFDB
 14016                           fsr2h	equ	0xFDA
 14017                           fsr2l	equ	0xFD9
 14018                           status	equ	0xFD8
 14019                           
 14020 ;; *************** function _le_updateETX *****************
 14021 ;; Defined at:
 14022 ;;		line 292 in file "../LinkEstimator.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  ne              2   32[BANK0 ] PTR struct neighbor_tabl
 14025 ;;		 -> neighbor_tbl(220), 
 14026 ;;  newEst          2   34[BANK0 ] unsigned int 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;		None
 14029 ;; Return value:  Size  Location     Type
 14030 ;;                  1    wreg      void 
 14031 ;; Registers used:
 14032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14033 ;; Tracked objects:
 14034 ;;		On entry : F/0
 14035 ;;		On exit  : F/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14041 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;Total ram usage:        8 bytes
 14043 ;; Hardware stack levels used:    1
 14044 ;; Hardware stack levels required when called:    6
 14045 ;; This function calls:
 14046 ;;		___lwdiv
 14047 ;; This function is called by:
 14048 ;;		_le_updateNeighborTableEst
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052                           	psect	text46
 14053  006998                     __ptext46:
 14054                           	opt stack 0
 14055  006998                     _le_updateETX:
 14056                           	opt stack 18
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;LinkEstimator.c: 294: ne->etx = ((uint16_t) 8 * ne->etx + (uint16_t) (10 - 8) * newEst)
      +                           / 10;
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;incstack = 0
 14063  006998  C082  F084         	movff	le_updateETX@newEst,??_le_updateETX
 14064  00699C  C083  F085         	movff	le_updateETX@newEst+1,??_le_updateETX+1
 14065  0069A0  90D8               	bcf	status,0,c
 14066  0069A2  3784               	rlcf	??_le_updateETX& (0+255),f,b
 14067  0069A4  3785               	rlcf	(??_le_updateETX+1)& (0+255),f,b
 14068  0069A6  EE20 F007          	lfsr	2,7
 14069  0069AA  5180               	movf	le_updateETX@ne& (0+255),w,b
 14070  0069AC  26D9               	addwf	fsr2l,f,c
 14071  0069AE  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 14072  0069B0  22DA               	addwfc	fsr2h,f,c
 14073  0069B2  CFDE F086          	movff	postinc2,??_le_updateETX+2
 14074  0069B6  CFDD F087          	movff	postdec2,??_le_updateETX+3
 14075  0069BA  90D8               	bcf	status,0,c
 14076  0069BC  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14077  0069BE  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14078  0069C0  90D8               	bcf	status,0,c
 14079  0069C2  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14080  0069C4  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14081  0069C6  90D8               	bcf	status,0,c
 14082  0069C8  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14083  0069CA  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14084  0069CC  5184               	movf	??_le_updateETX& (0+255),w,b
 14085  0069CE  2586               	addwf	(??_le_updateETX+2)& (0+255),w,b
 14086  0069D0  6F73               	movwf	___lwdiv@dividend& (0+255),b
 14087  0069D2  5185               	movf	(??_le_updateETX+1)& (0+255),w,b
 14088  0069D4  2187               	addwfc	(??_le_updateETX+3)& (0+255),w,b
 14089  0069D6  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 14090  0069D8  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 14091  0069DA  0E0A               	movlw	10
 14092  0069DC  6F75               	movwf	___lwdiv@divisor& (0+255),b
 14093  0069DE  ECA1  F037         	call	___lwdiv	;wreg free
 14094  0069E2  EE20 F007          	lfsr	2,7
 14095  0069E6  5180               	movf	le_updateETX@ne& (0+255),w,b
 14096  0069E8  26D9               	addwf	fsr2l,f,c
 14097  0069EA  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 14098  0069EC  22DA               	addwfc	fsr2h,f,c
 14099  0069EE  C073  FFDE         	movff	?___lwdiv,postinc2
 14100  0069F2  C074  FFDD         	movff	?___lwdiv+1,postdec2
 14101                           
 14102                           ; BSR set to: 0
 14103  0069F6  0012               	return		;funcret
 14104  0069F8                     __end_of_le_updateETX:
 14105                           	opt stack 0
 14106                           tblptru	equ	0xFF8
 14107                           tblptrh	equ	0xFF7
 14108                           tblptrl	equ	0xFF6
 14109                           tablat	equ	0xFF5
 14110                           prodh	equ	0xFF4
 14111                           prodl	equ	0xFF3
 14112                           intcon3	equ	0xFF0
 14113                           postinc0	equ	0xFEE
 14114                           plusw0	equ	0xFEB
 14115                           fsr0h	equ	0xFEA
 14116                           fsr0l	equ	0xFE9
 14117                           wreg	equ	0xFE8
 14118                           indf1	equ	0xFE7
 14119                           postdec1	equ	0xFE5
 14120                           plusw1	equ	0xFE3
 14121                           fsr1h	equ	0xFE2
 14122                           fsr1l	equ	0xFE1
 14123                           indf2	equ	0xFDF
 14124                           postinc2	equ	0xFDE
 14125                           postdec2	equ	0xFDD
 14126                           plusw2	equ	0xFDB
 14127                           fsr2h	equ	0xFDA
 14128                           fsr2l	equ	0xFD9
 14129                           status	equ	0xFD8
 14130                           
 14131 ;; *************** function _le_computeETX *****************
 14132 ;; Defined at:
 14133 ;;		line 278 in file "../LinkEstimator.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;  q1              1    wreg     unsigned char 
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;  q1              1   29[BANK0 ] unsigned char 
 14138 ;;  q               2   30[BANK0 ] unsigned int 
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  2   27[BANK0 ] unsigned int 
 14141 ;; Registers used:
 14142 ;;		wreg, status,2, status,0, cstack
 14143 ;; Tracked objects:
 14144 ;;		On entry : F/0
 14145 ;;		On exit  : F/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;Total ram usage:        5 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    6
 14155 ;; This function calls:
 14156 ;;		___awdiv
 14157 ;; This function is called by:
 14158 ;;		_le_updateNeighborTableEst
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           	psect	text47
 14163  00709C                     __ptext47:
 14164                           	opt stack 0
 14165  00709C                     _le_computeETX:
 14166                           	opt stack 18
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;incstack = 0
 14170                           ;le_computeETX@q1 stored from wreg
 14171  00709C  6F7D               	movwf	le_computeETX@q1& (0+255),b
 14172                           
 14173                           ;LinkEstimator.c: 280: uint16_t q=0xffff;
 14174  00709E  0100               	movlb	0	; () banked
 14175  0070A0  697E               	setf	le_computeETX@q& (0+255),b
 14176  0070A2  697F               	setf	(le_computeETX@q+1)& (0+255),b
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;LinkEstimator.c: 281: if (q1 > 0)
 14180  0070A4  517D               	movf	le_computeETX@q1& (0+255),w,b
 14181  0070A6  E014               	bz	l1552
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;LinkEstimator.c: 282: {
 14185                           ;LinkEstimator.c: 283: q = 2500 / q1;
 14186  0070A8  0E09               	movlw	9
 14187  0070AA  6F74               	movwf	(___awdiv@dividend+1)& (0+255),b
 14188  0070AC  0EC4               	movlw	196
 14189  0070AE  6F73               	movwf	___awdiv@dividend& (0+255),b
 14190  0070B0  C07D  F075         	movff	le_computeETX@q1,___awdiv@divisor
 14191  0070B4  6B76               	clrf	(___awdiv@divisor+1)& (0+255),b
 14192  0070B6  EC03  F032         	call	___awdiv	;wreg free
 14193  0070BA  C073  F07E         	movff	?___awdiv,le_computeETX@q
 14194  0070BE  C074  F07F         	movff	?___awdiv+1,le_computeETX@q+1
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;LinkEstimator.c: 284: if (q > 250)
 14198  0070C2  517F               	movf	(le_computeETX@q+1)& (0+255),w,b
 14199  0070C4  E103               	bnz	u13480
 14200  0070C6  0EFB               	movlw	251
 14201  0070C8  5D7E               	subwf	le_computeETX@q& (0+255),w,b
 14202  0070CA  E302               	bnc	l1552
 14203  0070CC                     u13480:
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;LinkEstimator.c: 285: {
 14207                           ;LinkEstimator.c: 286: q = 0xffff;
 14208  0070CC  697E               	setf	le_computeETX@q& (0+255),b
 14209  0070CE  697F               	setf	(le_computeETX@q+1)& (0+255),b
 14210  0070D0                     l1552:
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;LinkEstimator.c: 287: }
 14214                           ;LinkEstimator.c: 288: }
 14215                           ;LinkEstimator.c: 289: return(q);
 14216  0070D0  C07E  F07B         	movff	le_computeETX@q,?_le_computeETX
 14217  0070D4  C07F  F07C         	movff	le_computeETX@q+1,?_le_computeETX+1
 14218                           
 14219                           ; BSR set to: 0
 14220  0070D8  0012               	return		;funcret
 14221  0070DA                     __end_of_le_computeETX:
 14222                           	opt stack 0
 14223                           tblptru	equ	0xFF8
 14224                           tblptrh	equ	0xFF7
 14225                           tblptrl	equ	0xFF6
 14226                           tablat	equ	0xFF5
 14227                           prodh	equ	0xFF4
 14228                           prodl	equ	0xFF3
 14229                           intcon3	equ	0xFF0
 14230                           postinc0	equ	0xFEE
 14231                           plusw0	equ	0xFEB
 14232                           fsr0h	equ	0xFEA
 14233                           fsr0l	equ	0xFE9
 14234                           wreg	equ	0xFE8
 14235                           indf1	equ	0xFE7
 14236                           postdec1	equ	0xFE5
 14237                           plusw1	equ	0xFE3
 14238                           fsr1h	equ	0xFE2
 14239                           fsr1l	equ	0xFE1
 14240                           indf2	equ	0xFDF
 14241                           postinc2	equ	0xFDE
 14242                           postdec2	equ	0xFDD
 14243                           plusw2	equ	0xFDB
 14244                           fsr2h	equ	0xFDA
 14245                           fsr2l	equ	0xFD9
 14246                           status	equ	0xFD8
 14247                           
 14248 ;; *************** function ___awdiv *****************
 14249 ;; Defined at:
 14250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  dividend        2   19[BANK0 ] int 
 14253 ;;  divisor         2   21[BANK0 ] int 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  quotient        2   25[BANK0 ] int 
 14256 ;;  sign            1   24[BANK0 ] unsigned char 
 14257 ;;  counter         1   23[BANK0 ] unsigned char 
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  2   19[BANK0 ] int 
 14260 ;; Registers used:
 14261 ;;		wreg, status,2, status,0
 14262 ;; Tracked objects:
 14263 ;;		On entry : F/0
 14264 ;;		On exit  : F/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14271 ;;Total ram usage:        8 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    5
 14274 ;; This function calls:
 14275 ;;		Nothing
 14276 ;; This function is called by:
 14277 ;;		_le_computeETX
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text48
 14282  006406                     __ptext48:
 14283                           	opt stack 0
 14284  006406                     ___awdiv:
 14285                           	opt stack 18
 14286                           
 14287                           ; BSR set to: 0
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;incstack = 0
 14291  006406  6B78               	clrf	___awdiv@sign& (0+255),b
 14292                           
 14293                           ; BSR set to: 0
 14294  006408  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14295  00640A  D006               	goto	l12188
 14296                           
 14297                           ; BSR set to: 0
 14298  00640C  6D75               	negf	___awdiv@divisor& (0+255),b
 14299  00640E  1F76               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14300  006410  B0D8               	btfsc	status,0,c
 14301  006412  2B76               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14302                           
 14303                           ; BSR set to: 0
 14304  006414  0E01               	movlw	1
 14305  006416  6F78               	movwf	___awdiv@sign& (0+255),b
 14306  006418                     l12188:
 14307                           
 14308                           ; BSR set to: 0
 14309  006418  AF74               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 14310  00641A  D006               	goto	l12194
 14311                           
 14312                           ; BSR set to: 0
 14313  00641C  6D73               	negf	___awdiv@dividend& (0+255),b
 14314  00641E  1F74               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14315  006420  B0D8               	btfsc	status,0,c
 14316  006422  2B74               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14317                           
 14318                           ; BSR set to: 0
 14319  006424  0E01               	movlw	1
 14320  006426  1B78               	xorwf	___awdiv@sign& (0+255),f,b
 14321  006428                     l12194:
 14322                           
 14323                           ; BSR set to: 0
 14324  006428  6B79               	clrf	___awdiv@quotient& (0+255),b
 14325  00642A  6B7A               	clrf	(___awdiv@quotient+1)& (0+255),b
 14326                           
 14327                           ; BSR set to: 0
 14328  00642C  5175               	movf	___awdiv@divisor& (0+255),w,b
 14329  00642E  1176               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14330  006430  E01B               	bz	l12216
 14331                           
 14332                           ; BSR set to: 0
 14333  006432  0E01               	movlw	1
 14334  006434  6F77               	movwf	___awdiv@counter& (0+255),b
 14335  006436  D004               	goto	l12202
 14336  006438                     l12200:
 14337                           
 14338                           ; BSR set to: 0
 14339  006438  90D8               	bcf	status,0,c
 14340  00643A  3775               	rlcf	___awdiv@divisor& (0+255),f,b
 14341  00643C  3776               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14342  00643E  2B77               	incf	___awdiv@counter& (0+255),f,b
 14343  006440                     l12202:
 14344                           
 14345                           ; BSR set to: 0
 14346  006440  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14347  006442  D7FA               	goto	l12200
 14348  006444                     l12204:
 14349                           
 14350                           ; BSR set to: 0
 14351  006444  90D8               	bcf	status,0,c
 14352  006446  3779               	rlcf	___awdiv@quotient& (0+255),f,b
 14353  006448  377A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14354                           
 14355                           ; BSR set to: 0
 14356  00644A  5175               	movf	___awdiv@divisor& (0+255),w,b
 14357  00644C  5D73               	subwf	___awdiv@dividend& (0+255),w,b
 14358  00644E  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14359  006450  5974               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14360  006452  E305               	bnc	l12212
 14361                           
 14362                           ; BSR set to: 0
 14363  006454  5175               	movf	___awdiv@divisor& (0+255),w,b
 14364  006456  5F73               	subwf	___awdiv@dividend& (0+255),f,b
 14365  006458  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14366  00645A  5B74               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14367                           
 14368                           ; BSR set to: 0
 14369  00645C  8179               	bsf	___awdiv@quotient& (0+255),0,b
 14370  00645E                     l12212:
 14371                           
 14372                           ; BSR set to: 0
 14373  00645E  90D8               	bcf	status,0,c
 14374  006460  3376               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14375  006462  3375               	rrcf	___awdiv@divisor& (0+255),f,b
 14376                           
 14377                           ; BSR set to: 0
 14378  006464  2F77               	decfsz	___awdiv@counter& (0+255),f,b
 14379  006466  D7EE               	goto	l12204
 14380  006468                     l12216:
 14381                           
 14382                           ; BSR set to: 0
 14383  006468  5178               	movf	___awdiv@sign& (0+255),w,b
 14384  00646A  E004               	bz	l12220
 14385                           
 14386                           ; BSR set to: 0
 14387  00646C  6D79               	negf	___awdiv@quotient& (0+255),b
 14388  00646E  1F7A               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14389  006470  B0D8               	btfsc	status,0,c
 14390  006472  2B7A               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14391  006474                     l12220:
 14392                           
 14393                           ; BSR set to: 0
 14394  006474  C079  F073         	movff	___awdiv@quotient,?___awdiv
 14395  006478  C07A  F074         	movff	___awdiv@quotient+1,?___awdiv+1
 14396                           
 14397                           ; BSR set to: 0
 14398  00647C  0012               	return		;funcret
 14399  00647E                     __end_of___awdiv:
 14400                           	opt stack 0
 14401                           tblptru	equ	0xFF8
 14402                           tblptrh	equ	0xFF7
 14403                           tblptrl	equ	0xFF6
 14404                           tablat	equ	0xFF5
 14405                           prodh	equ	0xFF4
 14406                           prodl	equ	0xFF3
 14407                           intcon3	equ	0xFF0
 14408                           postinc0	equ	0xFEE
 14409                           plusw0	equ	0xFEB
 14410                           fsr0h	equ	0xFEA
 14411                           fsr0l	equ	0xFE9
 14412                           wreg	equ	0xFE8
 14413                           indf1	equ	0xFE7
 14414                           postdec1	equ	0xFE5
 14415                           plusw1	equ	0xFE3
 14416                           fsr1h	equ	0xFE2
 14417                           fsr1l	equ	0xFE1
 14418                           indf2	equ	0xFDF
 14419                           postinc2	equ	0xFDE
 14420                           postdec2	equ	0xFDD
 14421                           plusw2	equ	0xFDB
 14422                           fsr2h	equ	0xFDA
 14423                           fsr2l	equ	0xFD9
 14424                           status	equ	0xFD8
 14425                           
 14426 ;; *************** function ___lldiv *****************
 14427 ;; Defined at:
 14428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;  dividend        4   19[BANK0 ] unsigned long 
 14431 ;;  divisor         4   23[BANK0 ] unsigned long 
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;  quotient        4   27[BANK0 ] unsigned long 
 14434 ;;  counter         1   31[BANK0 ] unsigned char 
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  4   19[BANK0 ] unsigned long 
 14437 ;; Registers used:
 14438 ;;		wreg, status,2, status,0
 14439 ;; Tracked objects:
 14440 ;;		On entry : F/0
 14441 ;;		On exit  : F/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14444 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14445 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14447 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14448 ;;Total ram usage:       13 bytes
 14449 ;; Hardware stack levels used:    1
 14450 ;; Hardware stack levels required when called:    5
 14451 ;; This function calls:
 14452 ;;		Nothing
 14453 ;; This function is called by:
 14454 ;;		_le_updateNeighborTableEst
 14455 ;; This function uses a non-reentrant model
 14456 ;;
 14457                           
 14458                           	psect	text49
 14459  0064F6                     __ptext49:
 14460                           	opt stack 0
 14461  0064F6                     ___lldiv:
 14462                           	opt stack 19
 14463                           
 14464                           ; BSR set to: 0
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;incstack = 0
 14468  0064F6  6B7B               	clrf	___lldiv@quotient& (0+255),b
 14469  0064F8  6B7C               	clrf	(___lldiv@quotient+1)& (0+255),b
 14470  0064FA  6B7D               	clrf	(___lldiv@quotient+2)& (0+255),b
 14471  0064FC  6B7E               	clrf	(___lldiv@quotient+3)& (0+255),b
 14472                           
 14473                           ; BSR set to: 0
 14474  0064FE  5177               	movf	___lldiv@divisor& (0+255),w,b
 14475  006500  1178               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14476  006502  1179               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14477  006504  117A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14478  006506  E029               	bz	l2585
 14479                           
 14480                           ; BSR set to: 0
 14481  006508  0E01               	movlw	1
 14482  00650A  6F7F               	movwf	___lldiv@counter& (0+255),b
 14483  00650C  D006               	goto	l12440
 14484  00650E                     l12438:
 14485                           
 14486                           ; BSR set to: 0
 14487  00650E  90D8               	bcf	status,0,c
 14488  006510  3777               	rlcf	___lldiv@divisor& (0+255),f,b
 14489  006512  3778               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14490  006514  3779               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14491  006516  377A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14492  006518  2B7F               	incf	___lldiv@counter& (0+255),f,b
 14493  00651A                     l12440:
 14494                           
 14495                           ; BSR set to: 0
 14496  00651A  AF7A               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14497  00651C  D7F8               	goto	l12438
 14498  00651E                     l12442:
 14499                           
 14500                           ; BSR set to: 0
 14501  00651E  90D8               	bcf	status,0,c
 14502  006520  377B               	rlcf	___lldiv@quotient& (0+255),f,b
 14503  006522  377C               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14504  006524  377D               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14505  006526  377E               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14506                           
 14507                           ; BSR set to: 0
 14508  006528  5177               	movf	___lldiv@divisor& (0+255),w,b
 14509  00652A  5D73               	subwf	___lldiv@dividend& (0+255),w,b
 14510  00652C  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14511  00652E  5974               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14512  006530  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14513  006532  5975               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14514  006534  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14515  006536  5976               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14516  006538  E309               	bnc	l12450
 14517                           
 14518                           ; BSR set to: 0
 14519  00653A  5177               	movf	___lldiv@divisor& (0+255),w,b
 14520  00653C  5F73               	subwf	___lldiv@dividend& (0+255),f,b
 14521  00653E  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14522  006540  5B74               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14523  006542  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14524  006544  5B75               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14525  006546  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14526  006548  5B76               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14527                           
 14528                           ; BSR set to: 0
 14529  00654A  817B               	bsf	___lldiv@quotient& (0+255),0,b
 14530  00654C                     l12450:
 14531                           
 14532                           ; BSR set to: 0
 14533  00654C  90D8               	bcf	status,0,c
 14534  00654E  337A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14535  006550  3379               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14536  006552  3378               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14537  006554  3377               	rrcf	___lldiv@divisor& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 0
 14540  006556  2F7F               	decfsz	___lldiv@counter& (0+255),f,b
 14541  006558  D7E2               	goto	l12442
 14542  00655A                     l2585:
 14543                           
 14544                           ; BSR set to: 0
 14545  00655A  C07B  F073         	movff	___lldiv@quotient,?___lldiv
 14546  00655E  C07C  F074         	movff	___lldiv@quotient+1,?___lldiv+1
 14547  006562  C07D  F075         	movff	___lldiv@quotient+2,?___lldiv+2
 14548  006566  C07E  F076         	movff	___lldiv@quotient+3,?___lldiv+3
 14549                           
 14550                           ; BSR set to: 0
 14551  00656A  0012               	return		;funcret
 14552  00656C                     __end_of___lldiv:
 14553                           	opt stack 0
 14554                           tblptru	equ	0xFF8
 14555                           tblptrh	equ	0xFF7
 14556                           tblptrl	equ	0xFF6
 14557                           tablat	equ	0xFF5
 14558                           prodh	equ	0xFF4
 14559                           prodl	equ	0xFF3
 14560                           intcon3	equ	0xFF0
 14561                           postinc0	equ	0xFEE
 14562                           plusw0	equ	0xFEB
 14563                           fsr0h	equ	0xFEA
 14564                           fsr0l	equ	0xFE9
 14565                           wreg	equ	0xFE8
 14566                           indf1	equ	0xFE7
 14567                           postdec1	equ	0xFE5
 14568                           plusw1	equ	0xFE3
 14569                           fsr1h	equ	0xFE2
 14570                           fsr1l	equ	0xFE1
 14571                           indf2	equ	0xFDF
 14572                           postinc2	equ	0xFDE
 14573                           postdec2	equ	0xFDD
 14574                           plusw2	equ	0xFDB
 14575                           fsr2h	equ	0xFDA
 14576                           fsr2l	equ	0xFD9
 14577                           status	equ	0xFD8
 14578                           
 14579 ;; *************** function _le_initNeighborIdx *****************
 14580 ;; Defined at:
 14581 ;;		line 160 in file "../LinkEstimator.c"
 14582 ;; Parameters:    Size  Location     Type
 14583 ;;  i               1    wreg     unsigned char 
 14584 ;;  ll_addr         2   19[BANK0 ] struct addr_t_def
 14585 ;; Auto vars:     Size  Location     Type
 14586 ;;  i               1   21[BANK0 ] unsigned char 
 14587 ;;  ne              2   22[BANK0 ] PTR struct neighbor_tabl
 14588 ;;		 -> neighbor_tbl(220), 
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14593 ;; Tracked objects:
 14594 ;;		On entry : F/0
 14595 ;;		On exit  : F/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14601 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14602 ;;Total ram usage:        5 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    5
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_LE_InsertNeighbor
 14609 ;;		_le_updateNeighborEntryIdx
 14610 ;;		_LE_processReceivedMessage
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           	psect	text50
 14615  006310                     __ptext50:
 14616                           	opt stack 0
 14617  006310                     _le_initNeighborIdx:
 14618                           	opt stack 20
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;incstack = 0
 14622                           ;le_initNeighborIdx@i stored from wreg
 14623  006310  6F75               	movwf	le_initNeighborIdx@i& (0+255),b
 14624                           
 14625                           ;LinkEstimator.c: 162: neighbor_table_entry_t *ne;
 14626                           ;LinkEstimator.c: 163: ne = &neighbor_tbl[i];
 14627  006312  0100               	movlb	0	; () banked
 14628  006314  5175               	movf	le_initNeighborIdx@i& (0+255),w,b
 14629  006316  0D0B               	mullw	11
 14630  006318  0E00               	movlw	low _neighbor_tbl
 14631  00631A  24F3               	addwf	prodl,w,c
 14632  00631C  6F76               	movwf	le_initNeighborIdx@ne& (0+255),b
 14633  00631E  0E05               	movlw	high _neighbor_tbl
 14634  006320  20F4               	addwfc	prodh,w,c
 14635  006322  6F77               	movwf	(le_initNeighborIdx@ne+1)& (0+255),b
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;LinkEstimator.c: 164: ne->ll_addr = ll_addr;
 14639  006324  C076  FFD9         	movff	le_initNeighborIdx@ne,fsr2l
 14640  006328  C077  FFDA         	movff	le_initNeighborIdx@ne+1,fsr2h
 14641  00632C  C073  FFDE         	movff	le_initNeighborIdx@ll_addr,postinc2
 14642  006330  C074  FFDD         	movff	le_initNeighborIdx@ll_addr+1,postdec2
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;LinkEstimator.c: 165: ne->lastseq = 0;
 14646  006334  EE20 F002          	lfsr	2,2
 14647  006338  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14648  00633A  26D9               	addwf	fsr2l,f,c
 14649  00633C  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14650  00633E  22DA               	addwfc	fsr2h,f,c
 14651  006340  6ADF               	clrf	indf2,c
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;LinkEstimator.c: 166: ne->rcvcnt = 0;
 14655  006342  EE20 F003          	lfsr	2,3
 14656  006346  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14657  006348  26D9               	addwf	fsr2l,f,c
 14658  00634A  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14659  00634C  22DA               	addwfc	fsr2h,f,c
 14660  00634E  6ADF               	clrf	indf2,c
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;LinkEstimator.c: 167: ne->failcnt = 0;
 14664  006350  EE20 F004          	lfsr	2,4
 14665  006354  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14666  006356  26D9               	addwf	fsr2l,f,c
 14667  006358  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14668  00635A  22DA               	addwfc	fsr2h,f,c
 14669  00635C  6ADF               	clrf	indf2,c
 14670                           
 14671                           ; BSR set to: 0
 14672                           ;LinkEstimator.c: 168: ne->flags = (0x4 | 0x1);
 14673  00635E  EE20 F005          	lfsr	2,5
 14674  006362  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14675  006364  26D9               	addwf	fsr2l,f,c
 14676  006366  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14677  006368  22DA               	addwfc	fsr2h,f,c
 14678  00636A  0E05               	movlw	5
 14679  00636C  6EDF               	movwf	indf2,c
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;LinkEstimator.c: 169: ne->inquality = 0;
 14683  00636E  EE20 F006          	lfsr	2,6
 14684  006372  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14685  006374  26D9               	addwf	fsr2l,f,c
 14686  006376  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14687  006378  22DA               	addwfc	fsr2h,f,c
 14688  00637A  6ADF               	clrf	indf2,c
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;LinkEstimator.c: 170: ne->etx = 0;
 14692  00637C  EE20 F007          	lfsr	2,7
 14693  006380  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 14694  006382  26D9               	addwf	fsr2l,f,c
 14695  006384  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 14696  006386  22DA               	addwfc	fsr2h,f,c
 14697  006388  6ADE               	clrf	postinc2,c
 14698  00638A  6ADD               	clrf	postdec2,c
 14699                           
 14700                           ; BSR set to: 0
 14701  00638C  0C00               	retlw	0	;funcret
 14702  00638E                     __end_of_le_initNeighborIdx:
 14703                           	opt stack 0
 14704                           tblptru	equ	0xFF8
 14705                           tblptrh	equ	0xFF7
 14706                           tblptrl	equ	0xFF6
 14707                           tablat	equ	0xFF5
 14708                           prodh	equ	0xFF4
 14709                           prodl	equ	0xFF3
 14710                           intcon3	equ	0xFF0
 14711                           postinc0	equ	0xFEE
 14712                           plusw0	equ	0xFEB
 14713                           fsr0h	equ	0xFEA
 14714                           fsr0l	equ	0xFE9
 14715                           wreg	equ	0xFE8
 14716                           indf1	equ	0xFE7
 14717                           postdec1	equ	0xFE5
 14718                           plusw1	equ	0xFE3
 14719                           fsr1h	equ	0xFE2
 14720                           fsr1l	equ	0xFE1
 14721                           indf2	equ	0xFDF
 14722                           postinc2	equ	0xFDE
 14723                           postdec2	equ	0xFDD
 14724                           plusw2	equ	0xFDB
 14725                           fsr2h	equ	0xFDA
 14726                           fsr2l	equ	0xFD9
 14727                           status	equ	0xFD8
 14728                           
 14729 ;; *************** function _le_findWorstNeighborIdx *****************
 14730 ;; Defined at:
 14731 ;;		line 173 in file "../LinkEstimator.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;  thresholdETX    1    wreg     unsigned char 
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;  thresholdETX    1   37[BANK0 ] unsigned char 
 14736 ;;  i               2   46[BANK0 ] unsigned int 
 14737 ;;  worstETX        2   44[BANK0 ] unsigned int 
 14738 ;;  thisETX         2   42[BANK0 ] unsigned int 
 14739 ;;  res             2   40[BANK0 ] unsigned int 
 14740 ;;  worstNeighbo    2   38[BANK0 ] unsigned int 
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  2   33[BANK0 ] unsigned int 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14745 ;; Tracked objects:
 14746 ;;		On entry : F/0
 14747 ;;		On exit  : F/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14754 ;;Total ram usage:       15 bytes
 14755 ;; Hardware stack levels used:    1
 14756 ;; Hardware stack levels required when called:    7
 14757 ;; This function calls:
 14758 ;;		_NetworkGetParentAddress
 14759 ;;		_isSameAddress
 14760 ;; This function is called by:
 14761 ;;		_LE_InsertNeighbor
 14762 ;;		_LE_processReceivedMessage
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text51
 14767  004D40                     __ptext51:
 14768                           	opt stack 0
 14769  004D40                     _le_findWorstNeighborIdx:
 14770                           	opt stack 18
 14771                           
 14772                           ; BSR set to: 0
 14773                           ;incstack = 0
 14774                           ;le_findWorstNeighborIdx@thresholdETX stored from wreg
 14775  004D40  6F85               	movwf	le_findWorstNeighborIdx@thresholdETX& (0+255),b
 14776                           
 14777                           ;LinkEstimator.c: 179: worstNeighborIdx = 0xff;
 14778  004D42  0100               	movlb	0	; () banked
 14779  004D44  6B87               	clrf	(le_findWorstNeighborIdx@worstNeighborIdx+1)& (0+255),b
 14780  004D46  6986               	setf	le_findWorstNeighborIdx@worstNeighborIdx& (0+255),b
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;LinkEstimator.c: 180: worstETX = 0;
 14784  004D48  6B8C               	clrf	le_findWorstNeighborIdx@worstETX& (0+255),b
 14785  004D4A  6B8D               	clrf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),b
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;LinkEstimator.c: 181: for (i = 0; i < 20; i++)
 14789  004D4C  6B8E               	clrf	le_findWorstNeighborIdx@i& (0+255),b
 14790  004D4E  6B8F               	clrf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14791  004D50                     l12658:
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;LinkEstimator.c: 182: {
 14795                           ;LinkEstimator.c: 183: if (!(neighbor_tbl[i].flags & 0x1))
 14796  004D50  0E0B               	movlw	11
 14797  004D52  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14798  004D54  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14799  004D58  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14800  004D5C  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14801  004D5E  50F3               	movf	prodl,w,c
 14802  004D60  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14803  004D62  0E05               	movlw	low (_neighbor_tbl+5)
 14804  004D64  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14805  004D66  6ED9               	movwf	fsr2l,c
 14806  004D68  0E05               	movlw	high (_neighbor_tbl+5)
 14807  004D6A  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14808  004D6C  6EDA               	movwf	fsr2h,c
 14809  004D6E  A0DF               	btfss	indf2,0,c
 14810  004D70  D060               	goto	l12680
 14811                           
 14812                           ; BSR set to: 5
 14813                           ;LinkEstimator.c: 187: }
 14814                           ;LinkEstimator.c: 188: if (!(neighbor_tbl[i].flags & 0x2))
 14815  004D72  0E0B               	movlw	11
 14816  004D74  0100               	movlb	0	; () banked
 14817  004D76  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14818  004D78  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14819  004D7C  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14820  004D80  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14821  004D82  50F3               	movf	prodl,w,c
 14822  004D84  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14823  004D86  0E05               	movlw	low (_neighbor_tbl+5)
 14824  004D88  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14825  004D8A  6ED9               	movwf	fsr2l,c
 14826  004D8C  0E05               	movlw	high (_neighbor_tbl+5)
 14827  004D8E  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14828  004D90  6EDA               	movwf	fsr2h,c
 14829  004D92  A2DF               	btfss	indf2,1,c
 14830  004D94  D04E               	goto	l12680
 14831                           
 14832                           ; BSR set to: 5
 14833                           ;LinkEstimator.c: 192: }
 14834                           ;LinkEstimator.c: 193: if (neighbor_tbl[i].flags & 0x8)
 14835  004D96  0E0B               	movlw	11
 14836  004D98  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14837  004D9A  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14838  004D9E  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14839  004DA2  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14840  004DA4  50F3               	movf	prodl,w,c
 14841  004DA6  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14842  004DA8  0E05               	movlw	low (_neighbor_tbl+5)
 14843  004DAA  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14844  004DAC  6ED9               	movwf	fsr2l,c
 14845  004DAE  0E05               	movlw	high (_neighbor_tbl+5)
 14846  004DB0  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14847  004DB2  6EDA               	movwf	fsr2h,c
 14848  004DB4  B6DF               	btfsc	indf2,3,c
 14849  004DB6  D03D               	goto	l12680
 14850                           
 14851                           ; BSR set to: 5
 14852                           ;LinkEstimator.c: 197: }
 14853                           ;LinkEstimator.c: 198: if(isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress(
      +                          )) )
 14854  004DB8  0E0B               	movlw	11
 14855  004DBA  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14856  004DBC  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14857  004DC0  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14858  004DC4  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14859  004DC6  50F3               	movf	prodl,w,c
 14860  004DC8  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14861  004DCA  0E00               	movlw	low _neighbor_tbl
 14862  004DCC  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14863  004DCE  6ED9               	movwf	fsr2l,c
 14864  004DD0  0E05               	movlw	high _neighbor_tbl
 14865  004DD2  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14866  004DD4  6EDA               	movwf	fsr2h,c
 14867  004DD6  CFDE F07D          	movff	postinc2,isSameAddress@a1
 14868  004DDA  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 14869  004DDE  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 14870  004DE2  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 14871  004DE6  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 14872  004DEA  ECB1  F03A         	call	_isSameAddress	;wreg free
 14873  004DEE  0900               	iorlw	0
 14874  004DF0  E120               	bnz	l12680
 14875                           
 14876                           ; BSR set to: 0
 14877                           ;LinkEstimator.c: 201: }
 14878                           ;LinkEstimator.c: 203: thisETX = neighbor_tbl[i].etx;
 14879  004DF2  0E0B               	movlw	11
 14880  004DF4  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 14881  004DF6  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 14882  004DFA  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 14883  004DFE  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 14884  004E00  50F3               	movf	prodl,w,c
 14885  004E02  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 14886  004E04  0E07               	movlw	low (_neighbor_tbl+7)
 14887  004E06  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 14888  004E08  6ED9               	movwf	fsr2l,c
 14889  004E0A  0E05               	movlw	high (_neighbor_tbl+7)
 14890  004E0C  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14891  004E0E  6EDA               	movwf	fsr2h,c
 14892  004E10  CFDE F08A          	movff	postinc2,le_findWorstNeighborIdx@thisETX
 14893  004E14  CFDD F08B          	movff	postdec2,le_findWorstNeighborIdx@thisETX+1
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;LinkEstimator.c: 204: if (thisETX >= worstETX)
 14897  004E18  518C               	movf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 14898  004E1A  5D8A               	subwf	le_findWorstNeighborIdx@thisETX& (0+255),w,b
 14899  004E1C  518D               	movf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 14900  004E1E  598B               	subwfb	(le_findWorstNeighborIdx@thisETX+1)& (0+255),w,b
 14901  004E20  E308               	bnc	l12680
 14902                           
 14903                           ; BSR set to: 0
 14904                           ;LinkEstimator.c: 205: {
 14905                           ;LinkEstimator.c: 206: worstNeighborIdx = i;
 14906  004E22  C08E  F086         	movff	le_findWorstNeighborIdx@i,le_findWorstNeighborIdx@worstNeighborIdx
 14907  004E26  C08F  F087         	movff	le_findWorstNeighborIdx@i+1,le_findWorstNeighborIdx@worstNeighborIdx+1
 14908                           
 14909                           ;LinkEstimator.c: 207: worstETX = thisETX;
 14910  004E2A  C08A  F08C         	movff	le_findWorstNeighborIdx@thisETX,le_findWorstNeighborIdx@worstETX
 14911  004E2E  C08B  F08D         	movff	le_findWorstNeighborIdx@thisETX+1,le_findWorstNeighborIdx@worstETX+1
 14912  004E32                     l12680:
 14913  004E32  0100               	movlb	0	; () banked
 14914  004E34  4B8E               	infsnz	le_findWorstNeighborIdx@i& (0+255),f,b
 14915  004E36  2B8F               	incf	(le_findWorstNeighborIdx@i+1)& (0+255),f,b
 14916                           
 14917                           ; BSR set to: 0
 14918  004E38  518F               	movf	(le_findWorstNeighborIdx@i+1)& (0+255),w,b
 14919  004E3A  E103               	bnz	u13760
 14920  004E3C  0E14               	movlw	20
 14921  004E3E  5D8E               	subwf	le_findWorstNeighborIdx@i& (0+255),w,b
 14922  004E40  E387               	bnc	l12658
 14923  004E42                     u13760:
 14924                           
 14925                           ; BSR set to: 0
 14926                           ;LinkEstimator.c: 208: }
 14927                           ;LinkEstimator.c: 209: }
 14928                           ;LinkEstimator.c: 211: if (worstETX >= thresholdETX)
 14929  004E42  5185               	movf	le_findWorstNeighborIdx@thresholdETX& (0+255),w,b
 14930  004E44  6F83               	movwf	??_le_findWorstNeighborIdx& (0+255),b
 14931  004E46  6B84               	clrf	(??_le_findWorstNeighborIdx+1)& (0+255),b
 14932  004E48  5183               	movf	??_le_findWorstNeighborIdx& (0+255),w,b
 14933  004E4A  5D8C               	subwf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 14934  004E4C  5184               	movf	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 14935  004E4E  598D               	subwfb	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 14936  004E50  E305               	bnc	l12688
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;LinkEstimator.c: 212: {
 14940                           ;LinkEstimator.c: 213: res=worstNeighborIdx;
 14941  004E52  C086  F088         	movff	le_findWorstNeighborIdx@worstNeighborIdx,le_findWorstNeighborIdx@res
 14942  004E56  C087  F089         	movff	le_findWorstNeighborIdx@worstNeighborIdx+1,le_findWorstNeighborIdx@res+1
 14943                           
 14944                           ;LinkEstimator.c: 214: } else
 14945  004E5A  D003               	goto	l12690
 14946  004E5C                     l12688:
 14947                           
 14948                           ; BSR set to: 0
 14949                           ;LinkEstimator.c: 215: {
 14950                           ;LinkEstimator.c: 216: res=0xff;
 14951  004E5C  0E00               	movlw	0
 14952  004E5E  6B89               	clrf	(le_findWorstNeighborIdx@res+1)& (0+255),b
 14953  004E60  6988               	setf	le_findWorstNeighborIdx@res& (0+255),b
 14954  004E62                     l12690:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;LinkEstimator.c: 217: }
 14958                           ;LinkEstimator.c: 219: return(res);
 14959  004E62  C088  F081         	movff	le_findWorstNeighborIdx@res,?_le_findWorstNeighborIdx
 14960  004E66  C089  F082         	movff	le_findWorstNeighborIdx@res+1,?_le_findWorstNeighborIdx+1
 14961                           
 14962                           ; BSR set to: 0
 14963  004E6A  0012               	return		;funcret
 14964  004E6C                     __end_of_le_findWorstNeighborIdx:
 14965                           	opt stack 0
 14966                           tblptru	equ	0xFF8
 14967                           tblptrh	equ	0xFF7
 14968                           tblptrl	equ	0xFF6
 14969                           tablat	equ	0xFF5
 14970                           prodh	equ	0xFF4
 14971                           prodl	equ	0xFF3
 14972                           intcon3	equ	0xFF0
 14973                           postinc0	equ	0xFEE
 14974                           plusw0	equ	0xFEB
 14975                           fsr0h	equ	0xFEA
 14976                           fsr0l	equ	0xFE9
 14977                           wreg	equ	0xFE8
 14978                           indf1	equ	0xFE7
 14979                           postdec1	equ	0xFE5
 14980                           plusw1	equ	0xFE3
 14981                           fsr1h	equ	0xFE2
 14982                           fsr1l	equ	0xFE1
 14983                           indf2	equ	0xFDF
 14984                           postinc2	equ	0xFDE
 14985                           postdec2	equ	0xFDD
 14986                           plusw2	equ	0xFDB
 14987                           fsr2h	equ	0xFDA
 14988                           fsr2l	equ	0xFD9
 14989                           status	equ	0xFD8
 14990                           
 14991 ;; *************** function _le_findRandomNeighborIdx *****************
 14992 ;; Defined at:
 14993 ;;		line 373 in file "../LinkEstimator.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;		None
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  i               2   44[BANK0 ] unsigned int 
 14998 ;;  res             2   41[BANK0 ] unsigned int 
 14999 ;;  num_eligible    1   43[BANK0 ] unsigned char 
 15000 ;;  cnt             1   40[BANK0 ] unsigned char 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  2   36[BANK0 ] unsigned int 
 15003 ;; Registers used:
 15004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15005 ;; Tracked objects:
 15006 ;;		On entry : F/0
 15007 ;;		On exit  : F/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15011 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15013 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15014 ;;Total ram usage:       10 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    7
 15017 ;; This function calls:
 15018 ;;		_NetworkGetParentAddress
 15019 ;;		___lwmod
 15020 ;;		_isSameAddress
 15021 ;;		_krnd
 15022 ;; This function is called by:
 15023 ;;		_LE_processReceivedMessage
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           	psect	text52
 15028  00341C                     __ptext52:
 15029                           	opt stack 0
 15030  00341C                     _le_findRandomNeighborIdx:
 15031                           	opt stack 19
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;LinkEstimator.c: 375: uint16_t i;
 15035                           ;LinkEstimator.c: 376: uint16_t res=0xff;
 15036                           
 15037                           ; BSR set to: 0
 15038                           ;incstack = 0
 15039  00341C  6B8A               	clrf	(le_findRandomNeighborIdx@res+1)& (0+255),b
 15040  00341E  6989               	setf	le_findRandomNeighborIdx@res& (0+255),b
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;LinkEstimator.c: 377: uint8_t cnt;
 15044                           ;LinkEstimator.c: 378: uint8_t num_eligible_eviction;
 15045                           ;LinkEstimator.c: 380: num_eligible_eviction = 0;
 15046  003420  6B8B               	clrf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),b
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;LinkEstimator.c: 381: for (i = 0; i < 20; i++)
 15050  003422  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 15051  003424  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15052  003426                     l13134:
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;LinkEstimator.c: 382: {
 15056                           ;LinkEstimator.c: 383: if (neighbor_tbl[i].flags & 0x1)
 15057  003426  0E0B               	movlw	11
 15058  003428  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15059  00342A  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15060  00342E  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15061  003432  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15062  003434  50F3               	movf	prodl,w,c
 15063  003436  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15064  003438  0E05               	movlw	low (_neighbor_tbl+5)
 15065  00343A  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15066  00343C  6ED9               	movwf	fsr2l,c
 15067  00343E  0E05               	movlw	high (_neighbor_tbl+5)
 15068  003440  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15069  003442  6EDA               	movwf	fsr2h,c
 15070  003444  A0DF               	btfss	indf2,0,c
 15071  003446  D041               	goto	l1581
 15072                           
 15073                           ; BSR set to: 5
 15074                           ;LinkEstimator.c: 384: {
 15075                           ;LinkEstimator.c: 385: if((isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress
      +                          ()) ) )
 15076  003448  0E0B               	movlw	11
 15077  00344A  0100               	movlb	0	; () banked
 15078  00344C  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15079  00344E  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15080  003452  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15081  003456  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15082  003458  50F3               	movf	prodl,w,c
 15083  00345A  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15084  00345C  0E00               	movlw	low _neighbor_tbl
 15085  00345E  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15086  003460  6ED9               	movwf	fsr2l,c
 15087  003462  0E05               	movlw	high _neighbor_tbl
 15088  003464  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15089  003466  6EDA               	movwf	fsr2h,c
 15090  003468  CFDE F07D          	movff	postinc2,isSameAddress@a1
 15091  00346C  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 15092  003470  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 15093  003474  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 15094  003478  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 15095  00347C  ECB1  F03A         	call	_isSameAddress	;wreg free
 15096  003480  0900               	iorlw	0
 15097  003482  E123               	bnz	l1581
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;LinkEstimator.c: 389: neighbor_tbl[i].flags & 0x2)
 15101  003484  0E0B               	movlw	11
 15102  003486  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15103  003488  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15104  00348C  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15105  003490  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15106  003492  50F3               	movf	prodl,w,c
 15107  003494  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15108  003496  0E05               	movlw	low (_neighbor_tbl+5)
 15109  003498  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15110  00349A  6ED9               	movwf	fsr2l,c
 15111  00349C  0E05               	movlw	high (_neighbor_tbl+5)
 15112  00349E  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15113  0034A0  6EDA               	movwf	fsr2h,c
 15114  0034A2  B6DF               	btfsc	indf2,3,c
 15115  0034A4  D012               	goto	l1581
 15116                           
 15117                           ; BSR set to: 5
 15118  0034A6  0E0B               	movlw	11
 15119  0034A8  0100               	movlb	0	; () banked
 15120  0034AA  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15121  0034AC  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15122  0034B0  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15123  0034B4  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15124  0034B6  50F3               	movf	prodl,w,c
 15125  0034B8  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15126  0034BA  0E05               	movlw	low (_neighbor_tbl+5)
 15127  0034BC  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15128  0034BE  6ED9               	movwf	fsr2l,c
 15129  0034C0  0E05               	movlw	high (_neighbor_tbl+5)
 15130  0034C2  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15131  0034C4  6EDA               	movwf	fsr2h,c
 15132  0034C6  A2DF               	btfss	indf2,1,c
 15133                           
 15134                           ; BSR set to: 5
 15135                           ;LinkEstimator.c: 392: {
 15136                           ;LinkEstimator.c: 393: num_eligible_eviction++;
 15137  0034C8  2B8B               	incf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),f,b
 15138  0034CA                     l1581:
 15139  0034CA  0100               	movlb	0	; () banked
 15140  0034CC  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 15141  0034CE  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 15142                           
 15143                           ; BSR set to: 0
 15144  0034D0  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 15145  0034D2  E103               	bnz	u14510
 15146  0034D4  0E14               	movlw	20
 15147  0034D6  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 15148  0034D8  E3A6               	bnc	l13134
 15149  0034DA                     u14510:
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;LinkEstimator.c: 394: }
 15153                           ;LinkEstimator.c: 395: }
 15154                           ;LinkEstimator.c: 396: }
 15155                           ;LinkEstimator.c: 398: if (num_eligible_eviction > 0)
 15156  0034DA  518B               	movf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),w,b
 15157  0034DC  E070               	bz	l1588
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;LinkEstimator.c: 399: {
 15161                           ;LinkEstimator.c: 400: cnt = ((uint16_t)krnd()) % num_eligible_eviction;
 15162  0034DE  EC94  F01F         	call	_krnd	;wreg free
 15163  0034E2  C073  F07F         	movff	?_krnd,___lwmod@dividend
 15164  0034E6  C074  F080         	movff	?_krnd+1,___lwmod@dividend+1
 15165  0034EA  C08B  F081         	movff	le_findRandomNeighborIdx@num_eligible_eviction,___lwmod@divisor
 15166  0034EE  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 15167  0034F0  EC6D  F038         	call	___lwmod	;wreg free
 15168  0034F4  517F               	movf	?___lwmod& (0+255),w,b
 15169  0034F6  6F88               	movwf	le_findRandomNeighborIdx@cnt& (0+255),b
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;LinkEstimator.c: 402: for (i = 0; i < 20; i++)
 15173  0034F8  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 15174  0034FA  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15175  0034FC                     l13158:
 15176                           
 15177                           ; BSR set to: 0
 15178                           ;LinkEstimator.c: 403: {
 15179                           ;LinkEstimator.c: 404: if ((neighbor_tbl[i].flags & 0x1)>0)
 15180  0034FC  0E0B               	movlw	11
 15181  0034FE  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15182  003500  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15183  003504  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15184  003508  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15185  00350A  50F3               	movf	prodl,w,c
 15186  00350C  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15187  00350E  0E05               	movlw	low (_neighbor_tbl+5)
 15188  003510  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15189  003512  6ED9               	movwf	fsr2l,c
 15190  003514  0E05               	movlw	high (_neighbor_tbl+5)
 15191  003516  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15192  003518  6EDA               	movwf	fsr2h,c
 15193  00351A  A0DF               	btfss	indf2,0,c
 15194  00351C  D048               	goto	l13170
 15195                           
 15196                           ; BSR set to: 5
 15197                           ;LinkEstimator.c: 405: {
 15198                           ;LinkEstimator.c: 406: if ( ((neighbor_tbl[i].flags & 0x8)>0) &&
 15199                           ;LinkEstimator.c: 407: ((neighbor_tbl[i].flags & 0x2)>0) )
 15200  00351E  0E0B               	movlw	11
 15201  003520  0100               	movlb	0	; () banked
 15202  003522  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15203  003524  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15204  003528  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15205  00352C  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15206  00352E  50F3               	movf	prodl,w,c
 15207  003530  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15208  003532  0E05               	movlw	low (_neighbor_tbl+5)
 15209  003534  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15210  003536  6ED9               	movwf	fsr2l,c
 15211  003538  0E05               	movlw	high (_neighbor_tbl+5)
 15212  00353A  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15213  00353C  6EDA               	movwf	fsr2h,c
 15214  00353E  A6DF               	btfss	indf2,3,c
 15215  003540  D036               	goto	l13170
 15216                           
 15217                           ; BSR set to: 5
 15218  003542  0E0B               	movlw	11
 15219  003544  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15220  003546  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15221  00354A  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15222  00354E  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15223  003550  50F3               	movf	prodl,w,c
 15224  003552  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15225  003554  0E05               	movlw	low (_neighbor_tbl+5)
 15226  003556  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15227  003558  6ED9               	movwf	fsr2l,c
 15228  00355A  0E05               	movlw	high (_neighbor_tbl+5)
 15229  00355C  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15230  00355E  6EDA               	movwf	fsr2h,c
 15231  003560  A2DF               	btfss	indf2,1,c
 15232  003562  D025               	goto	l13170
 15233                           
 15234                           ; BSR set to: 5
 15235                           ;LinkEstimator.c: 408: {
 15236                           ;LinkEstimator.c: 409: if( (isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddres
      +                          s()) )==0)
 15237  003564  0E0B               	movlw	11
 15238  003566  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15239  003568  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 15240  00356C  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 15241  003570  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15242  003572  50F3               	movf	prodl,w,c
 15243  003574  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15244  003576  0E00               	movlw	low _neighbor_tbl
 15245  003578  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15246  00357A  6ED9               	movwf	fsr2l,c
 15247  00357C  0E05               	movlw	high _neighbor_tbl
 15248  00357E  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15249  003580  6EDA               	movwf	fsr2h,c
 15250  003582  CFDE F07D          	movff	postinc2,isSameAddress@a1
 15251  003586  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 15252  00358A  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 15253  00358E  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 15254  003592  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 15255  003596  ECB1  F03A         	call	_isSameAddress	;wreg free
 15256  00359A  0900               	iorlw	0
 15257  00359C  E108               	bnz	l13170
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;LinkEstimator.c: 410: {
 15261                           ;LinkEstimator.c: 411: if (cnt-- == 0)
 15262  00359E  0788               	decf	le_findRandomNeighborIdx@cnt& (0+255),f,b
 15263  0035A0  2988               	incf	le_findRandomNeighborIdx@cnt& (0+255),w,b
 15264  0035A2  E105               	bnz	l13170
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;LinkEstimator.c: 412: {
 15268                           ;LinkEstimator.c: 413: res=i;
 15269  0035A4  C08C  F089         	movff	le_findRandomNeighborIdx@i,le_findRandomNeighborIdx@res
 15270  0035A8  C08D  F08A         	movff	le_findRandomNeighborIdx@i+1,le_findRandomNeighborIdx@res+1
 15271                           
 15272                           ;LinkEstimator.c: 414: break;
 15273  0035AC  D008               	goto	l1588
 15274  0035AE                     l13170:
 15275  0035AE  0100               	movlb	0	; () banked
 15276  0035B0  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 15277  0035B2  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 15278                           
 15279                           ; BSR set to: 0
 15280  0035B4  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 15281  0035B6  E103               	bnz	u14580
 15282  0035B8  0E14               	movlw	20
 15283  0035BA  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 15284  0035BC  E39F               	bnc	l13158
 15285  0035BE                     u14580:
 15286  0035BE                     l1588:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;LinkEstimator.c: 415: }
 15290                           ;LinkEstimator.c: 416: }
 15291                           ;LinkEstimator.c: 417: }
 15292                           ;LinkEstimator.c: 418: }
 15293                           ;LinkEstimator.c: 419: }
 15294                           ;LinkEstimator.c: 420: }
 15295                           ;LinkEstimator.c: 421: return res;
 15296  0035BE  C089  F084         	movff	le_findRandomNeighborIdx@res,?_le_findRandomNeighborIdx
 15297  0035C2  C08A  F085         	movff	le_findRandomNeighborIdx@res+1,?_le_findRandomNeighborIdx+1
 15298                           
 15299                           ; BSR set to: 0
 15300  0035C6  0012               	return		;funcret
 15301  0035C8                     __end_of_le_findRandomNeighborIdx:
 15302                           	opt stack 0
 15303                           tblptru	equ	0xFF8
 15304                           tblptrh	equ	0xFF7
 15305                           tblptrl	equ	0xFF6
 15306                           tablat	equ	0xFF5
 15307                           prodh	equ	0xFF4
 15308                           prodl	equ	0xFF3
 15309                           intcon3	equ	0xFF0
 15310                           postinc0	equ	0xFEE
 15311                           plusw0	equ	0xFEB
 15312                           fsr0h	equ	0xFEA
 15313                           fsr0l	equ	0xFE9
 15314                           wreg	equ	0xFE8
 15315                           indf1	equ	0xFE7
 15316                           postdec1	equ	0xFE5
 15317                           plusw1	equ	0xFE3
 15318                           fsr1h	equ	0xFE2
 15319                           fsr1l	equ	0xFE1
 15320                           indf2	equ	0xFDF
 15321                           postinc2	equ	0xFDE
 15322                           postdec2	equ	0xFDD
 15323                           plusw2	equ	0xFDB
 15324                           fsr2h	equ	0xFDA
 15325                           fsr2l	equ	0xFD9
 15326                           status	equ	0xFD8
 15327                           
 15328 ;; *************** function _le_findEmptyNeighborIdx *****************
 15329 ;; Defined at:
 15330 ;;		line 222 in file "../LinkEstimator.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;		None
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;  i               2   25[BANK0 ] unsigned int 
 15335 ;;  res             2   23[BANK0 ] unsigned int 
 15336 ;; Return value:  Size  Location     Type
 15337 ;;                  2   19[BANK0 ] unsigned int 
 15338 ;; Registers used:
 15339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15340 ;; Tracked objects:
 15341 ;;		On entry : F/0
 15342 ;;		On exit  : A/0
 15343 ;;		Unchanged: 0/0
 15344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15346 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15348 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15349 ;;Total ram usage:        8 bytes
 15350 ;; Hardware stack levels used:    1
 15351 ;; Hardware stack levels required when called:    5
 15352 ;; This function calls:
 15353 ;;		Nothing
 15354 ;; This function is called by:
 15355 ;;		_LE_InsertNeighbor
 15356 ;;		_LE_processReceivedMessage
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           	psect	text53
 15361  006E5A                     __ptext53:
 15362                           	opt stack 0
 15363  006E5A                     _le_findEmptyNeighborIdx:
 15364                           	opt stack 20
 15365                           
 15366                           ; BSR set to: 0
 15367                           ;LinkEstimator.c: 224: uint16_t i;
 15368                           ;LinkEstimator.c: 225: uint16_t res=0xff;
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;incstack = 0
 15372  006E5A  6B78               	clrf	(le_findEmptyNeighborIdx@res+1)& (0+255),b
 15373  006E5C  6977               	setf	le_findEmptyNeighborIdx@res& (0+255),b
 15374                           
 15375                           ; BSR set to: 0
 15376                           ;LinkEstimator.c: 226: for (i = 0; i < 20; i++)
 15377  006E5E  6B79               	clrf	le_findEmptyNeighborIdx@i& (0+255),b
 15378  006E60  6B7A               	clrf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 15379  006E62                     l12702:
 15380                           
 15381                           ; BSR set to: 0
 15382                           ;LinkEstimator.c: 227: {
 15383                           ;LinkEstimator.c: 228: if (neighbor_tbl[i].flags & 0x1)
 15384  006E62  0E0B               	movlw	11
 15385  006E64  0379               	mulwf	le_findEmptyNeighborIdx@i& (0+255),b
 15386  006E66  CFF3 F075          	movff	prodl,??_le_findEmptyNeighborIdx
 15387  006E6A  CFF4 F076          	movff	prodh,??_le_findEmptyNeighborIdx+1
 15388  006E6E  037A               	mulwf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 15389  006E70  50F3               	movf	prodl,w,c
 15390  006E72  2776               	addwf	(??_le_findEmptyNeighborIdx+1)& (0+255),f,b
 15391  006E74  0E05               	movlw	low (_neighbor_tbl+5)
 15392  006E76  2575               	addwf	??_le_findEmptyNeighborIdx& (0+255),w,b
 15393  006E78  6ED9               	movwf	fsr2l,c
 15394  006E7A  0E05               	movlw	high (_neighbor_tbl+5)
 15395  006E7C  2176               	addwfc	(??_le_findEmptyNeighborIdx+1)& (0+255),w,b
 15396  006E7E  6EDA               	movwf	fsr2h,c
 15397  006E80  0105               	movlb	5	; () banked
 15398  006E82  B0DF               	btfsc	indf2,0,c
 15399  006E84  D005               	goto	l12706
 15400                           
 15401                           ; BSR set to: 5
 15402                           ;LinkEstimator.c: 231: else
 15403                           ;LinkEstimator.c: 232: {
 15404                           ;LinkEstimator.c: 233: res=i;
 15405  006E86  C079  F077         	movff	le_findEmptyNeighborIdx@i,le_findEmptyNeighborIdx@res
 15406  006E8A  C07A  F078         	movff	le_findEmptyNeighborIdx@i+1,le_findEmptyNeighborIdx@res+1
 15407                           
 15408                           ;LinkEstimator.c: 234: break;
 15409  006E8E  D008               	goto	l1538
 15410  006E90                     l12706:
 15411                           
 15412                           ; BSR set to: 5
 15413  006E90  0100               	movlb	0	; () banked
 15414  006E92  4B79               	infsnz	le_findEmptyNeighborIdx@i& (0+255),f,b
 15415  006E94  2B7A               	incf	(le_findEmptyNeighborIdx@i+1)& (0+255),f,b
 15416                           
 15417                           ; BSR set to: 0
 15418  006E96  517A               	movf	(le_findEmptyNeighborIdx@i+1)& (0+255),w,b
 15419  006E98  E103               	bnz	u13790
 15420  006E9A  0E14               	movlw	20
 15421  006E9C  5D79               	subwf	le_findEmptyNeighborIdx@i& (0+255),w,b
 15422  006E9E  E3E1               	bnc	l12702
 15423  006EA0                     u13790:
 15424  006EA0                     l1538:
 15425                           
 15426                           ;LinkEstimator.c: 235: }
 15427                           ;LinkEstimator.c: 236: }
 15428                           ;LinkEstimator.c: 237: return res;
 15429  006EA0  C077  F073         	movff	le_findEmptyNeighborIdx@res,?_le_findEmptyNeighborIdx
 15430  006EA4  C078  F074         	movff	le_findEmptyNeighborIdx@res+1,?_le_findEmptyNeighborIdx+1
 15431  006EA8  0012               	return		;funcret
 15432  006EAA                     __end_of_le_findEmptyNeighborIdx:
 15433                           	opt stack 0
 15434                           tblptru	equ	0xFF8
 15435                           tblptrh	equ	0xFF7
 15436                           tblptrl	equ	0xFF6
 15437                           tablat	equ	0xFF5
 15438                           prodh	equ	0xFF4
 15439                           prodl	equ	0xFF3
 15440                           intcon3	equ	0xFF0
 15441                           postinc0	equ	0xFEE
 15442                           plusw0	equ	0xFEB
 15443                           fsr0h	equ	0xFEA
 15444                           fsr0l	equ	0xFE9
 15445                           wreg	equ	0xFE8
 15446                           indf1	equ	0xFE7
 15447                           postdec1	equ	0xFE5
 15448                           plusw1	equ	0xFE3
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           indf2	equ	0xFDF
 15452                           postinc2	equ	0xFDE
 15453                           postdec2	equ	0xFDD
 15454                           plusw2	equ	0xFDB
 15455                           fsr2h	equ	0xFDA
 15456                           fsr2l	equ	0xFD9
 15457                           status	equ	0xFD8
 15458                           
 15459 ;; *************** function _RouteManagerShouldInsert *****************
 15460 ;; Defined at:
 15461 ;;		line 371 in file "../RouteManager.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;  hdr             2   40[BANK0 ] PTR struct net_routing_h
 15464 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  rcvBeacon       2   53[BANK0 ] PTR struct net_routing_h
 15467 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 15468 ;;  i               2   50[BANK0 ] int 
 15469 ;;  entry           2   48[BANK0 ] PTR struct routing_table
 15470 ;;		 -> routingTable(90), 
 15471 ;;  neighEtx        2   46[BANK0 ] unsigned int 
 15472 ;;  pathEtx         2   44[BANK0 ] unsigned int 
 15473 ;;  found           1   52[BANK0 ] unsigned char 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  1    wreg      unsigned char 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15478 ;; Tracked objects:
 15479 ;;		On entry : F/0
 15480 ;;		On exit  : F/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15487 ;;Total ram usage:       15 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    8
 15490 ;; This function calls:
 15491 ;;		_NetworkGetParentAddress
 15492 ;;		_isInvalidAddress
 15493 ;;		_isSameAddress
 15494 ;; This function is called by:
 15495 ;;		_LE_processReceivedMessage
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           	psect	text54
 15500  00555C                     __ptext54:
 15501                           	opt stack 0
 15502  00555C                     _RouteManagerShouldInsert:
 15503                           	opt stack 18
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;RouteManager.c: 373: bool found = 0;
 15507                           
 15508                           ;incstack = 0
 15509  00555C  6B94               	clrf	RouteManagerShouldInsert@found& (0+255),b
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;RouteManager.c: 374: uint16_t pathEtx;
 15513                           ;RouteManager.c: 375: uint16_t neighEtx;
 15514                           ;RouteManager.c: 376: int i;
 15515                           ;RouteManager.c: 377: routing_table_entry_t* entry;
 15516                           ;RouteManager.c: 378: net_routing_header_t* rcvBeacon=hdr;
 15517  00555E  C088  F095         	movff	RouteManagerShouldInsert@hdr,RouteManagerShouldInsert@rcvBeacon
 15518  005562  C089  F096         	movff	RouteManagerShouldInsert@hdr+1,RouteManagerShouldInsert@rcvBeacon+1
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;RouteManager.c: 382: if (isInvalidAddress(rcvBeacon->parent)==0)
 15522  005566  EE20 F004          	lfsr	2,4
 15523  00556A  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15524  00556C  26D9               	addwf	fsr2l,f,c
 15525  00556E  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15526  005570  22DA               	addwfc	fsr2h,f,c
 15527  005572  CFDE F086          	movff	postinc2,isInvalidAddress@address
 15528  005576  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 15529  00557A  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 15530  00557E  0900               	iorlw	0
 15531  005580  E156               	bnz	l13052
 15532                           
 15533                           ; BSR set to: 0
 15534                           ;RouteManager.c: 383: {
 15535                           ;RouteManager.c: 385: if (rcvBeacon->etx == 0)
 15536  005582  EE20 F006          	lfsr	2,6
 15537  005586  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15538  005588  26D9               	addwf	fsr2l,f,c
 15539  00558A  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15540  00558C  22DA               	addwfc	fsr2h,f,c
 15541  00558E  50DE               	movf	postinc2,w,c
 15542  005590  10DE               	iorwf	postinc2,w,c
 15543  005592  E103               	bnz	l13034
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;RouteManager.c: 386: {
 15547                           ;RouteManager.c: 387: found=1;
 15548  005594  0E01               	movlw	1
 15549  005596  6F94               	movwf	RouteManagerShouldInsert@found& (0+255),b
 15550                           
 15551                           ;RouteManager.c: 388: }else
 15552  005598  D04A               	goto	l13052
 15553  00559A                     l13034:
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;RouteManager.c: 389: {
 15557                           ;RouteManager.c: 390: pathEtx = rcvBeacon->etx;
 15558  00559A  EE20 F006          	lfsr	2,6
 15559  00559E  5195               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 15560  0055A0  26D9               	addwf	fsr2l,f,c
 15561  0055A2  5196               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 15562  0055A4  22DA               	addwfc	fsr2h,f,c
 15563  0055A6  CFDE F08C          	movff	postinc2,RouteManagerShouldInsert@pathEtx
 15564  0055AA  CFDD F08D          	movff	postdec2,RouteManagerShouldInsert@pathEtx+1
 15565                           
 15566                           ; BSR set to: 0
 15567                           ;RouteManager.c: 393: for (i = 0; i < routingTableActive && !found; i++)
 15568  0055AE  6B92               	clrf	RouteManagerShouldInsert@i& (0+255),b
 15569  0055B0  6B93               	clrf	(RouteManagerShouldInsert@i+1)& (0+255),b
 15570  0055B2  D035               	goto	l13048
 15571  0055B4                     l13038:
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;RouteManager.c: 394: {
 15575                           ;RouteManager.c: 395: entry = &routingTable[i];
 15576  0055B4  0E09               	movlw	9
 15577  0055B6  0392               	mulwf	RouteManagerShouldInsert@i& (0+255),b
 15578  0055B8  CFF3 F08A          	movff	prodl,??_RouteManagerShouldInsert
 15579  0055BC  CFF4 F08B          	movff	prodh,??_RouteManagerShouldInsert+1
 15580  0055C0  0393               	mulwf	(RouteManagerShouldInsert@i+1)& (0+255),b
 15581  0055C2  50F3               	movf	prodl,w,c
 15582  0055C4  278B               	addwf	(??_RouteManagerShouldInsert+1)& (0+255),f,b
 15583  0055C6  0E98               	movlw	low _routingTable
 15584  0055C8  258A               	addwf	??_RouteManagerShouldInsert& (0+255),w,b
 15585  0055CA  6F90               	movwf	RouteManagerShouldInsert@entry& (0+255),b
 15586  0055CC  0E06               	movlw	high _routingTable
 15587  0055CE  218B               	addwfc	(??_RouteManagerShouldInsert+1)& (0+255),w,b
 15588  0055D0  6F91               	movwf	(RouteManagerShouldInsert@entry+1)& (0+255),b
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;RouteManager.c: 397: if (isSameAddress(entry->neighbor, NetworkGetParentAddress())==0)
 15592  0055D2  C090  FFD9         	movff	RouteManagerShouldInsert@entry,fsr2l
 15593  0055D6  C091  FFDA         	movff	RouteManagerShouldInsert@entry+1,fsr2h
 15594  0055DA  CFDE F07D          	movff	postinc2,isSameAddress@a1
 15595  0055DE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 15596  0055E2  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 15597  0055E6  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 15598  0055EA  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 15599  0055EE  ECB1  F03A         	call	_isSameAddress	;wreg free
 15600  0055F2  0900               	iorlw	0
 15601  0055F4  E112               	bnz	l13046
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;RouteManager.c: 398: {
 15605                           ;RouteManager.c: 399: neighEtx = entry->info.etx;
 15606  0055F6  EE20 F004          	lfsr	2,4
 15607  0055FA  5190               	movf	RouteManagerShouldInsert@entry& (0+255),w,b
 15608  0055FC  26D9               	addwf	fsr2l,f,c
 15609  0055FE  5191               	movf	(RouteManagerShouldInsert@entry+1)& (0+255),w,b
 15610  005600  22DA               	addwfc	fsr2h,f,c
 15611  005602  CFDE F08E          	movff	postinc2,RouteManagerShouldInsert@neighEtx
 15612  005606  CFDD F08F          	movff	postdec2,RouteManagerShouldInsert@neighEtx+1
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;RouteManager.c: 400: found |= (pathEtx < neighEtx);
 15616  00560A  518E               	movf	RouteManagerShouldInsert@neighEtx& (0+255),w,b
 15617  00560C  5D8C               	subwf	RouteManagerShouldInsert@pathEtx& (0+255),w,b
 15618  00560E  518F               	movf	(RouteManagerShouldInsert@neighEtx+1)& (0+255),w,b
 15619  005610  598D               	subwfb	(RouteManagerShouldInsert@pathEtx+1)& (0+255),w,b
 15620  005612  0E01               	movlw	1
 15621  005614  B0D8               	btfsc	status,0,c
 15622  005616  0E00               	movlw	0
 15623  005618  1394               	iorwf	RouteManagerShouldInsert@found& (0+255),f,b
 15624  00561A                     l13046:
 15625                           
 15626                           ; BSR set to: 0
 15627  00561A  4B92               	infsnz	RouteManagerShouldInsert@i& (0+255),f,b
 15628  00561C  2B93               	incf	(RouteManagerShouldInsert@i+1)& (0+255),f,b
 15629  00561E                     l13048:
 15630                           
 15631                           ; BSR set to: 0
 15632  00561E  51EB               	movf	_routingTableActive& (0+255),w,b
 15633  005620  5D92               	subwf	RouteManagerShouldInsert@i& (0+255),w,b
 15634  005622  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 15635  005624  5993               	subwfb	(RouteManagerShouldInsert@i+1)& (0+255),w,b
 15636  005626  E203               	bc	l13052
 15637                           
 15638                           ; BSR set to: 0
 15639  005628  5194               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 15640  00562A  E101               	bnz	l13052
 15641  00562C  D7C3               	goto	l13038
 15642  00562E                     l13052:
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;RouteManager.c: 401: }
 15646                           ;RouteManager.c: 402: }
 15647                           ;RouteManager.c: 403: }
 15648                           ;RouteManager.c: 404: }
 15649                           ;RouteManager.c: 405: return found;
 15650  00562E  5194               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 15651                           
 15652                           ; BSR set to: 0
 15653  005630  0012               	return		;funcret
 15654  005632                     __end_of_RouteManagerShouldInsert:
 15655                           	opt stack 0
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon3	equ	0xFF0
 15663                           postinc0	equ	0xFEE
 15664                           plusw0	equ	0xFEB
 15665                           fsr0h	equ	0xFEA
 15666                           fsr0l	equ	0xFE9
 15667                           wreg	equ	0xFE8
 15668                           indf1	equ	0xFE7
 15669                           postdec1	equ	0xFE5
 15670                           plusw1	equ	0xFE3
 15671                           fsr1h	equ	0xFE2
 15672                           fsr1l	equ	0xFE1
 15673                           indf2	equ	0xFDF
 15674                           postinc2	equ	0xFDE
 15675                           postdec2	equ	0xFDD
 15676                           plusw2	equ	0xFDB
 15677                           fsr2h	equ	0xFDA
 15678                           fsr2l	equ	0xFD9
 15679                           status	equ	0xFD8
 15680                           
 15681 ;; *************** function _DeviceManagerGetDeviceType *****************
 15682 ;; Defined at:
 15683 ;;		line 106 in file "../DeviceManager.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;  address         2   33[BANK0 ] struct addr_t_def
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;  i               2   38[BANK0 ] unsigned int 
 15688 ;;  dev             1   37[BANK0 ] enum E145
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      enum E144
 15691 ;; Registers used:
 15692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : E/0
 15695 ;;		On exit  : F/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15701 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15702 ;;Total ram usage:        7 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    7
 15705 ;; This function calls:
 15706 ;;		_isSameAddress
 15707 ;; This function is called by:
 15708 ;;		_radioReceivedPacket
 15709 ;;		_NetworkUnicastData
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text55
 15714  00656C                     __ptext55:
 15715                           	opt stack 0
 15716  00656C                     _DeviceManagerGetDeviceType:
 15717                           	opt stack 21
 15718                           
 15719                           ;DeviceManager.c: 108: uint16_t i;
 15720                           ;DeviceManager.c: 109: DeviceType_t dev=DeviceRFD;
 15721                           
 15722                           ; BSR set to: 0
 15723                           ;incstack = 0
 15724  00656C  0E01               	movlw	1
 15725  00656E  0100               	movlb	0	; () banked
 15726  006570  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 15727                           
 15728                           ; BSR set to: 0
 15729                           ;DeviceManager.c: 110: for(i=0;i<20;i++)
 15730  006572  6B86               	clrf	DeviceManagerGetDeviceType@i& (0+255),b
 15731  006574  6B87               	clrf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15732  006576                     l13580:
 15733                           
 15734                           ; BSR set to: 0
 15735                           ;DeviceManager.c: 111: {
 15736                           ;DeviceManager.c: 112: if(isSameAddress(address,list[i].address)==1)
 15737  006576  C081  F07D         	movff	DeviceManagerGetDeviceType@address,isSameAddress@a1
 15738  00657A  C082  F07E         	movff	DeviceManagerGetDeviceType@address+1,isSameAddress@a1+1
 15739  00657E  0E0B               	movlw	11
 15740  006580  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 15741  006582  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 15742  006586  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 15743  00658A  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15744  00658C  50F3               	movf	prodl,w,c
 15745  00658E  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 15746  006590  0E00               	movlw	low _list
 15747  006592  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 15748  006594  6ED9               	movwf	fsr2l,c
 15749  006596  0E08               	movlw	high _list
 15750  006598  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 15751  00659A  6EDA               	movwf	fsr2h,c
 15752  00659C  CFDE F07F          	movff	postinc2,isSameAddress@a2
 15753  0065A0  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 15754  0065A4  ECB1  F03A         	call	_isSameAddress	;wreg free
 15755  0065A8  06E8               	decf	wreg,f,c
 15756  0065AA  E111               	bnz	l13584
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;DeviceManager.c: 113: {
 15760                           ;DeviceManager.c: 114: dev=list[i].devType;
 15761  0065AC  0E0B               	movlw	11
 15762  0065AE  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 15763  0065B0  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 15764  0065B4  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 15765  0065B8  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 15766  0065BA  50F3               	movf	prodl,w,c
 15767  0065BC  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 15768  0065BE  0E0A               	movlw	low (_list+10)
 15769  0065C0  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 15770  0065C2  6ED9               	movwf	fsr2l,c
 15771  0065C4  0E08               	movlw	high (_list+10)
 15772  0065C6  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 15773  0065C8  6EDA               	movwf	fsr2h,c
 15774  0065CA  50DF               	movf	indf2,w,c
 15775  0065CC  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 15776  0065CE                     l13584:
 15777                           
 15778                           ; BSR set to: 0
 15779  0065CE  4B86               	infsnz	DeviceManagerGetDeviceType@i& (0+255),f,b
 15780  0065D0  2B87               	incf	(DeviceManagerGetDeviceType@i+1)& (0+255),f,b
 15781                           
 15782                           ; BSR set to: 0
 15783  0065D2  5187               	movf	(DeviceManagerGetDeviceType@i+1)& (0+255),w,b
 15784  0065D4  E103               	bnz	u15270
 15785  0065D6  0E14               	movlw	20
 15786  0065D8  5D86               	subwf	DeviceManagerGetDeviceType@i& (0+255),w,b
 15787  0065DA  E3CD               	bnc	l13580
 15788  0065DC                     u15270:
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;DeviceManager.c: 115: }
 15792                           ;DeviceManager.c: 116: }
 15793                           ;DeviceManager.c: 117: return(dev);
 15794  0065DC  5185               	movf	DeviceManagerGetDeviceType@dev& (0+255),w,b
 15795                           
 15796                           ; BSR set to: 0
 15797  0065DE  0012               	return		;funcret
 15798  0065E0                     __end_of_DeviceManagerGetDeviceType:
 15799                           	opt stack 0
 15800                           tblptru	equ	0xFF8
 15801                           tblptrh	equ	0xFF7
 15802                           tblptrl	equ	0xFF6
 15803                           tablat	equ	0xFF5
 15804                           prodh	equ	0xFF4
 15805                           prodl	equ	0xFF3
 15806                           intcon3	equ	0xFF0
 15807                           postinc0	equ	0xFEE
 15808                           plusw0	equ	0xFEB
 15809                           fsr0h	equ	0xFEA
 15810                           fsr0l	equ	0xFE9
 15811                           wreg	equ	0xFE8
 15812                           indf1	equ	0xFE7
 15813                           postdec1	equ	0xFE5
 15814                           plusw1	equ	0xFE3
 15815                           fsr1h	equ	0xFE2
 15816                           fsr1l	equ	0xFE1
 15817                           indf2	equ	0xFDF
 15818                           postinc2	equ	0xFDE
 15819                           postdec2	equ	0xFDD
 15820                           plusw2	equ	0xFDB
 15821                           fsr2h	equ	0xFDA
 15822                           fsr2l	equ	0xFD9
 15823                           status	equ	0xFD8
 15824                           
 15825 ;; *************** function _DeviceManagerBufferDeviceData *****************
 15826 ;; Defined at:
 15827 ;;		line 120 in file "../DeviceManager.c"
 15828 ;; Parameters:    Size  Location     Type
 15829 ;;  address         2   31[BANK0 ] struct addr_t_def
 15830 ;;  data            2   33[BANK0 ] PTR unsigned char 
 15831 ;;		 -> TxBuffer(64), RxPacket.Payload(64), RxPacket(142), 
 15832 ;;  size            2   35[BANK0 ] unsigned int 
 15833 ;;  isSecure        1   37[BANK0 ] unsigned char 
 15834 ;;  isFormed        1   38[BANK0 ] unsigned char 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;  devBuffer       2    0        PTR struct devDataBuffer
 15837 ;;		 -> NULL(0), 
 15838 ;;  i               2    0        unsigned int 
 15839 ;;  empty           2   44[BANK0 ] unsigned int 
 15840 ;;  recordLen       2    0        unsigned int 
 15841 ;;  index           2    0        unsigned int 
 15842 ;;  res             1    0        unsigned char 
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      unsigned char 
 15845 ;; Registers used:
 15846 ;;		wreg, status,2, status,0, cstack
 15847 ;; Tracked objects:
 15848 ;;		On entry : F/0
 15849 ;;		On exit  : F/1
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15852 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15855 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;Total ram usage:       19 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; Hardware stack levels required when called:    6
 15859 ;; This function calls:
 15860 ;;		_NetworkAddressSizeGet
 15861 ;;		_memcpy
 15862 ;; This function is called by:
 15863 ;;		_radioReceivedPacket
 15864 ;;		_NetworkUnicastData
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text56
 15869  00781A                     __ptext56:
 15870                           	opt stack 0
 15871  00781A                     _DeviceManagerBufferDeviceData:
 15872                           	opt stack 22
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;DeviceManager.c: 123: uint16_t i;
 15876                           ;DeviceManager.c: 124: uint16_t empty=0xffff;
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;incstack = 0
 15880  00781A  698C               	setf	DeviceManagerBufferDeviceData@empty& (0+255),b
 15881  00781C  698D               	setf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),b
 15882                           
 15883                           ; BSR set to: 0
 15884  00781E  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 15885                           
 15886                           ; BSR set to: 1
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;DeviceManager.c: 178: }
 15890                           ;DeviceManager.c: 179: }
 15891                           ;DeviceManager.c: 180: }
 15892                           ;DeviceManager.c: 181: }
 15893                           ;DeviceManager.c: 182: return(res);
 15894                           
 15895                           ; BSR set to: 1
 15896                           ;DeviceManager.c: 129: if(devBuffers!=(0))
 15897  007822  0C00               	retlw	0	;funcret
 15898  007824                     __end_of_DeviceManagerBufferDeviceData:
 15899                           	opt stack 0
 15900                           tblptru	equ	0xFF8
 15901                           tblptrh	equ	0xFF7
 15902                           tblptrl	equ	0xFF6
 15903                           tablat	equ	0xFF5
 15904                           prodh	equ	0xFF4
 15905                           prodl	equ	0xFF3
 15906                           intcon3	equ	0xFF0
 15907                           postinc0	equ	0xFEE
 15908                           plusw0	equ	0xFEB
 15909                           fsr0h	equ	0xFEA
 15910                           fsr0l	equ	0xFE9
 15911                           wreg	equ	0xFE8
 15912                           indf1	equ	0xFE7
 15913                           postdec1	equ	0xFE5
 15914                           plusw1	equ	0xFE3
 15915                           fsr1h	equ	0xFE2
 15916                           fsr1l	equ	0xFE1
 15917                           indf2	equ	0xFDF
 15918                           postinc2	equ	0xFDE
 15919                           postdec2	equ	0xFDD
 15920                           plusw2	equ	0xFDB
 15921                           fsr2h	equ	0xFDA
 15922                           fsr2l	equ	0xFD9
 15923                           status	equ	0xFD8
 15924                           
 15925 ;; *************** function _BlinkRedLED *****************
 15926 ;; Defined at:
 15927 ;;		line 584 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;		None
 15930 ;; Auto vars:     Size  Location     Type
 15931 ;;		None
 15932 ;; Return value:  Size  Location     Type
 15933 ;;                  1    wreg      void 
 15934 ;; Registers used:
 15935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15936 ;; Tracked objects:
 15937 ;;		On entry : F/1
 15938 ;;		On exit  : F/0
 15939 ;;		Unchanged: 0/0
 15940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15945 ;;Total ram usage:        0 bytes
 15946 ;; Hardware stack levels used:    1
 15947 ;; Hardware stack levels required when called:    6
 15948 ;; This function calls:
 15949 ;;		_LEDCommand
 15950 ;; This function is called by:
 15951 ;;		_radioReceivedPacket
 15952 ;; This function uses a non-reentrant model
 15953 ;;
 15954                           
 15955                           	psect	text57
 15956  0077B4                     __ptext57:
 15957                           	opt stack 0
 15958  0077B4                     _BlinkRedLED:
 15959                           	opt stack 21
 15960                           
 15961                           ; BSR set to: 1
 15962                           ;system.c: 586: LEDCommand(LEDRed,lCMD_Blink);
 15963                           
 15964                           ; BSR set to: 1
 15965                           ;incstack = 0
 15966  0077B4  0E03               	movlw	3
 15967  0077B6  0100               	movlb	0	; () banked
 15968  0077B8  6F73               	movwf	LEDCommand@cmd& (0+255),b
 15969  0077BA  0E02               	movlw	2
 15970  0077BC  EFAA  F038         	goto	_LEDCommand
 15971  0077C0                     __end_of_BlinkRedLED:
 15972                           	opt stack 0
 15973                           tblptru	equ	0xFF8
 15974                           tblptrh	equ	0xFF7
 15975                           tblptrl	equ	0xFF6
 15976                           tablat	equ	0xFF5
 15977                           prodh	equ	0xFF4
 15978                           prodl	equ	0xFF3
 15979                           intcon3	equ	0xFF0
 15980                           postinc0	equ	0xFEE
 15981                           plusw0	equ	0xFEB
 15982                           fsr0h	equ	0xFEA
 15983                           fsr0l	equ	0xFE9
 15984                           wreg	equ	0xFE8
 15985                           indf1	equ	0xFE7
 15986                           postdec1	equ	0xFE5
 15987                           plusw1	equ	0xFE3
 15988                           fsr1h	equ	0xFE2
 15989                           fsr1l	equ	0xFE1
 15990                           indf2	equ	0xFDF
 15991                           postinc2	equ	0xFDE
 15992                           postdec2	equ	0xFDD
 15993                           plusw2	equ	0xFDB
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function _LEDCommand *****************
 15999 ;; Defined at:
 16000 ;;		line 576 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  led             1    wreg     enum E7918
 16003 ;;  cmd             1   19[BANK0 ] enum E7924
 16004 ;; Auto vars:     Size  Location     Type
 16005 ;;  led             1   21[BANK0 ] enum E7918
 16006 ;; Return value:  Size  Location     Type
 16007 ;;                  1    wreg      void 
 16008 ;; Registers used:
 16009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16010 ;; Tracked objects:
 16011 ;;		On entry : F/0
 16012 ;;		On exit  : F/0
 16013 ;;		Unchanged: 0/0
 16014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16017 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16019 ;;Total ram usage:        3 bytes
 16020 ;; Hardware stack levels used:    1
 16021 ;; Hardware stack levels required when called:    5
 16022 ;; This function calls:
 16023 ;;		Nothing
 16024 ;; This function is called by:
 16025 ;;		_BlinkRedLED
 16026 ;;		_main
 16027 ;; This function uses a non-reentrant model
 16028 ;;
 16029                           
 16030                           	psect	text58
 16031  007154                     __ptext58:
 16032                           	opt stack 0
 16033  007154                     _LEDCommand:
 16034                           	opt stack 21
 16035                           
 16036                           ; BSR set to: 0
 16037                           ;incstack = 0
 16038                           ;LEDCommand@led stored from wreg
 16039  007154  6F75               	movwf	LEDCommand@led& (0+255),b
 16040                           
 16041                           ;system.c: 578: if( (LEDCmd[led]!=lCMD_On) && (LEDCmd[led]!=lCMD_Off) )
 16042  007156  0EC6               	movlw	low _LEDCmd
 16043  007158  0100               	movlb	0	; () banked
 16044  00715A  2575               	addwf	LEDCommand@led& (0+255),w,b
 16045  00715C  6ED9               	movwf	fsr2l,c
 16046  00715E  6ADA               	clrf	fsr2h,c
 16047  007160  0E01               	movlw	high _LEDCmd
 16048  007162  22DA               	addwfc	fsr2h,f,c
 16049  007164  0E02               	movlw	2
 16050  007166  18DE               	xorwf	postinc2,w,c
 16051  007168  B4D8               	btfsc	status,2,c
 16052  00716A  0012               	return	
 16053                           
 16054                           ; BSR set to: 0
 16055  00716C  0EC6               	movlw	low _LEDCmd
 16056  00716E  2575               	addwf	LEDCommand@led& (0+255),w,b
 16057  007170  6ED9               	movwf	fsr2l,c
 16058  007172  6ADA               	clrf	fsr2h,c
 16059  007174  0E01               	movlw	high _LEDCmd
 16060  007176  22DA               	addwfc	fsr2h,f,c
 16061  007178  04DE               	decf	postinc2,w,c
 16062  00717A  B4D8               	btfsc	status,2,c
 16063  00717C  0012               	return	
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;system.c: 579: {
 16067                           ;system.c: 580: LEDCmd[led]=cmd;
 16068  00717E  0EC6               	movlw	low _LEDCmd
 16069  007180  2575               	addwf	LEDCommand@led& (0+255),w,b
 16070  007182  6ED9               	movwf	fsr2l,c
 16071  007184  6ADA               	clrf	fsr2h,c
 16072  007186  0E01               	movlw	high _LEDCmd
 16073  007188  22DA               	addwfc	fsr2h,f,c
 16074  00718A  C073  FFDF         	movff	LEDCommand@cmd,indf2
 16075                           
 16076                           ; BSR set to: 0
 16077  00718E  0012               	return		;funcret
 16078  007190                     __end_of_LEDCommand:
 16079                           	opt stack 0
 16080                           tblptru	equ	0xFF8
 16081                           tblptrh	equ	0xFF7
 16082                           tblptrl	equ	0xFF6
 16083                           tablat	equ	0xFF5
 16084                           prodh	equ	0xFF4
 16085                           prodl	equ	0xFF3
 16086                           intcon3	equ	0xFF0
 16087                           postinc0	equ	0xFEE
 16088                           plusw0	equ	0xFEB
 16089                           fsr0h	equ	0xFEA
 16090                           fsr0l	equ	0xFE9
 16091                           wreg	equ	0xFE8
 16092                           indf1	equ	0xFE7
 16093                           postdec1	equ	0xFE5
 16094                           plusw1	equ	0xFE3
 16095                           fsr1h	equ	0xFE2
 16096                           fsr1l	equ	0xFE1
 16097                           indf2	equ	0xFDF
 16098                           postinc2	equ	0xFDE
 16099                           postdec2	equ	0xFDD
 16100                           plusw2	equ	0xFDB
 16101                           fsr2h	equ	0xFDA
 16102                           fsr2l	equ	0xFD9
 16103                           status	equ	0xFD8
 16104                           
 16105 ;; *************** function _TimeTickISR *****************
 16106 ;; Defined at:
 16107 ;;		line 10 in file "../TimeTick.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;		None
 16110 ;; Auto vars:     Size  Location     Type
 16111 ;;		None
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  1    wreg      void 
 16114 ;; Registers used:
 16115 ;;		wreg, status,2, status,0
 16116 ;; Tracked objects:
 16117 ;;		On entry : F/0
 16118 ;;		On exit  : F/2
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16125 ;;Total ram usage:        0 bytes
 16126 ;; Hardware stack levels used:    1
 16127 ;; Hardware stack levels required when called:    5
 16128 ;; This function calls:
 16129 ;;		Nothing
 16130 ;; This function is called by:
 16131 ;;		_MiApp_MessageAvailable
 16132 ;; This function uses a non-reentrant model
 16133 ;;
 16134                           
 16135                           	psect	text59
 16136  007352                     __ptext59:
 16137                           	opt stack 0
 16138  007352                     _TimeTickISR:
 16139                           	opt stack 23
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;TimeTick.c: 15: if(Tick_MS.lsb<0xffffffff)
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;incstack = 0
 16146  007352  0102               	movlb	2	; () banked
 16147  007354  2984               	incf	_Tick_MS& (0+255),w,b
 16148  007356  E106               	bnz	u15820
 16149  007358  2985               	incf	(_Tick_MS+1)& (0+255),w,b
 16150  00735A  E104               	bnz	u15820
 16151  00735C  2986               	incf	(_Tick_MS+2)& (0+255),w,b
 16152  00735E  E102               	bnz	u15820
 16153  007360  2987               	incf	(_Tick_MS+3)& (0+255),w,b
 16154  007362  E006               	bz	l2205
 16155  007364                     u15820:
 16156                           
 16157                           ; BSR set to: 2
 16158                           ;TimeTick.c: 16: {
 16159                           ;TimeTick.c: 17: Tick_MS.lsb++;
 16160  007364  2B84               	incf	_Tick_MS& (0+255),f,b
 16161  007366  0E00               	movlw	0
 16162  007368  2385               	addwfc	(_Tick_MS+1)& (0+255),f,b
 16163  00736A  2386               	addwfc	(_Tick_MS+2)& (0+255),f,b
 16164  00736C  2387               	addwfc	(_Tick_MS+3)& (0+255),f,b
 16165                           
 16166                           ;TimeTick.c: 18: }
 16167  00736E  0C00               	retlw	0
 16168  007370                     l2205:
 16169                           
 16170                           ; BSR set to: 2
 16171                           ;TimeTick.c: 19: else
 16172                           ;TimeTick.c: 20: {
 16173                           ;TimeTick.c: 21: Tick_MS.lsb=0;
 16174  007370  6B84               	clrf	_Tick_MS& (0+255),b
 16175  007372  6B85               	clrf	(_Tick_MS+1)& (0+255),b
 16176  007374  6B86               	clrf	(_Tick_MS+2)& (0+255),b
 16177  007376  6B87               	clrf	(_Tick_MS+3)& (0+255),b
 16178                           
 16179                           ; BSR set to: 2
 16180                           ;TimeTick.c: 22: Tick_MS.msb++;
 16181  007378  2B88               	incf	(_Tick_MS+4)& (0+255),f,b
 16182  00737A  0E00               	movlw	0
 16183  00737C  2389               	addwfc	(_Tick_MS+5)& (0+255),f,b
 16184  00737E  238A               	addwfc	(_Tick_MS+6)& (0+255),f,b
 16185  007380  238B               	addwfc	(_Tick_MS+7)& (0+255),f,b
 16186                           
 16187                           ; BSR set to: 2
 16188  007382  0C00               	retlw	0	;funcret
 16189  007384                     __end_of_TimeTickISR:
 16190                           	opt stack 0
 16191                           tblptru	equ	0xFF8
 16192                           tblptrh	equ	0xFF7
 16193                           tblptrl	equ	0xFF6
 16194                           tablat	equ	0xFF5
 16195                           prodh	equ	0xFF4
 16196                           prodl	equ	0xFF3
 16197                           intcon3	equ	0xFF0
 16198                           postinc0	equ	0xFEE
 16199                           plusw0	equ	0xFEB
 16200                           fsr0h	equ	0xFEA
 16201                           fsr0l	equ	0xFE9
 16202                           wreg	equ	0xFE8
 16203                           indf1	equ	0xFE7
 16204                           postdec1	equ	0xFE5
 16205                           plusw1	equ	0xFE3
 16206                           fsr1h	equ	0xFE2
 16207                           fsr1l	equ	0xFE1
 16208                           indf2	equ	0xFDF
 16209                           postinc2	equ	0xFDE
 16210                           postdec2	equ	0xFDD
 16211                           plusw2	equ	0xFDB
 16212                           fsr2h	equ	0xFDA
 16213                           fsr2l	equ	0xFD9
 16214                           status	equ	0xFD8
 16215                           
 16216 ;; *************** function _NetworkManagerTask *****************
 16217 ;; Defined at:
 16218 ;;		line 53 in file "../NetworkManager.c"
 16219 ;; Parameters:    Size  Location     Type
 16220 ;;		None
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  data           19   68[BANK1 ] unsigned char [19]
 16223 ;;  sz              2   87[BANK1 ] unsigned int 
 16224 ;; Return value:  Size  Location     Type
 16225 ;;                  1    wreg      void 
 16226 ;; Registers used:
 16227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16228 ;; Tracked objects:
 16229 ;;		On entry : C/1
 16230 ;;		On exit  : C/0
 16231 ;;		Unchanged: 0/0
 16232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16234 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;Total ram usage:       25 bytes
 16238 ;; Hardware stack levels used:    1
 16239 ;; Hardware stack levels required when called:   14
 16240 ;; This function calls:
 16241 ;;		_BeaconManagerTask
 16242 ;;		_BroadcastManagerTask
 16243 ;;		_CoordinatorGenericAddress
 16244 ;;		_MSTickGet
 16245 ;;		_MSTickGetDiffNow
 16246 ;;		_MiApp_IsNetworkBusy
 16247 ;;		_NetworkGetDeviceType
 16248 ;;		_NetworkGetPANID
 16249 ;;		_NetworkGetParentAddress
 16250 ;;		_NetworkPrepareSendPacket
 16251 ;;		_RMRoutingTableCount
 16252 ;;		_RouteManagerPerformUpdate
 16253 ;;		_RouteManagerTask
 16254 ;;		_RouterEvicted
 16255 ;;		_TransportManagerTask
 16256 ;;		_isInvalidAddress
 16257 ;;		_isNetworkSecurityEnabled
 16258 ;;		_krnd
 16259 ;;		_radioUnicast
 16260 ;; This function is called by:
 16261 ;;		_MiApp_MessageAvailable
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text60
 16266  001CB0                     __ptext60:
 16267                           	opt stack 0
 16268  001CB0                     _NetworkManagerTask:
 16269                           	opt stack 14
 16270                           
 16271                           ;NetworkManager.c: 55: static TickMS tStart;
 16272                           ;NetworkManager.c: 56: static SPAN delay;
 16273                           ;NetworkManager.c: 57: uint8_t data[sizeof(net_data_header_t)+8+1];
 16274                           ;NetworkManager.c: 58: uint16_t sz;
 16275                           ;NetworkManager.c: 60: BeaconManagerTask();
 16276                           
 16277                           ; BSR set to: 2
 16278                           ;incstack = 0
 16279  001CB0  ECCA  F029         	call	_BeaconManagerTask	;wreg free
 16280                           
 16281                           ;NetworkManager.c: 61: RouteManagerTask();
 16282  001CB4  ECC6  F037         	call	_RouteManagerTask	;wreg free
 16283                           
 16284                           ;NetworkManager.c: 62: BroadcastManagerTask();
 16285  001CB8  EC3A  F018         	call	_BroadcastManagerTask	;wreg free
 16286                           
 16287                           ;NetworkManager.c: 63: TransportManagerTask();
 16288  001CBC  EC92  F005         	call	_TransportManagerTask	;wreg free
 16289                           
 16290                           ;NetworkManager.c: 65: switch(nState)
 16291  001CC0  D147               	goto	l14064
 16292  001CC2                     l13982:
 16293                           
 16294                           ; BSR set to: 1
 16295                           ;NetworkManager.c: 68: if(NetworkGetDeviceType()==DeviceCoordinator)
 16296  001CC2  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 16297  001CC6  0900               	iorlw	0
 16298  001CC8  E103               	bnz	l13986
 16299                           
 16300                           ; BSR set to: 1
 16301                           ;NetworkManager.c: 69: {
 16302                           ;NetworkManager.c: 70: nState=netOperating;
 16303  001CCA  0E04               	movlw	4
 16304  001CCC  6FDD               	movwf	_nState& (0+255),b
 16305                           
 16306                           ;NetworkManager.c: 71: }else
 16307  001CCE  0C04               	retlw	4
 16308  001CD0                     l13986:
 16309                           
 16310                           ;NetworkManager.c: 72: {
 16311                           ;NetworkManager.c: 73: nState=netWaitRoutes;
 16312  001CD0  0E01               	movlw	1
 16313  001CD2  0101               	movlb	1	; () banked
 16314  001CD4  6FDD               	movwf	_nState& (0+255),b
 16315  001CD6  0C01               	retlw	1
 16316  001CD8                     l13988:
 16317                           
 16318                           ; BSR set to: 1
 16319                           ;NetworkManager.c: 78: if(NetworkGetDeviceType()!=DeviceCoordinator)
 16320  001CD8  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 16321  001CDC  0900               	iorlw	0
 16322  001CDE  B4D8               	btfsc	status,2,c
 16323  001CE0  0012               	return	
 16324                           
 16325                           ; BSR set to: 1
 16326                           ;NetworkManager.c: 79: {
 16327                           ;NetworkManager.c: 80: if( (NetworkGetDeviceType()!=DeviceCoordinator) && isInvalidAddre
      +                          ss(NetworkGetParentAddress()) )
 16328  001CE2  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 16329  001CE6  0900               	iorlw	0
 16330  001CE8  E00A               	bz	l13996
 16331                           
 16332                           ; BSR set to: 1
 16333  001CEA  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 16334  001CEE  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 16335  001CF2  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 16336  001CF6  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 16337  001CFA  0900               	iorlw	0
 16338  001CFC  E1E9               	bnz	l13986
 16339  001CFE                     l13996:
 16340  001CFE  0102               	movlb	2	; () banked
 16341  001D00  519A               	movf	(_routeInfo+6)& (0+255),w,b
 16342  001D02  A4D8               	btfss	status,2,c
 16343  001D04  0012               	return	
 16344  001D06                     l13998:
 16345                           
 16346                           ;NetworkManager.c: 84: {
 16347                           ;NetworkManager.c: 85: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 16348  001D06  EC94  F01F         	call	_krnd	;wreg free
 16349  001D0A  5173               	movf	?_krnd& (0+255),w,b
 16350  001D0C  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 16351  001D0E  0E03               	movlw	3
 16352  001D10  1574               	andwf	(?_krnd+1)& (0+255),w,b
 16353  001D12  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 16354  001D14  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 16355  001D16  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 16356  001D18  0EE8               	movlw	232
 16357  001D1A  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 16358  001D1C  0102               	movlb	2	; () banked
 16359  001D1E  6F46               	movwf	NetworkManagerTask@delay& (0+255),b
 16360  001D20  0E03               	movlw	3
 16361  001D22  0100               	movlb	0	; () banked
 16362  001D24  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 16363  001D26  0102               	movlb	2	; () banked
 16364  001D28  6F47               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 16365  001D2A  0E00               	movlw	0
 16366  001D2C  0100               	movlb	0	; () banked
 16367  001D2E  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 16368  001D30  0102               	movlb	2	; () banked
 16369  001D32  6F48               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 16370  001D34  0E00               	movlw	0
 16371  001D36  0100               	movlb	0	; () banked
 16372  001D38  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 16373  001D3A  0102               	movlb	2	; () banked
 16374  001D3C  6F49               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 16375                           
 16376                           ; BSR set to: 2
 16377                           ;NetworkManager.c: 86: tStart=MSTickGet();
 16378  001D3E  EC58  F039         	call	_MSTickGet	;wreg free
 16379  001D42  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16380  001D46  0E07               	movlw	7
 16381  001D48                     u15881:
 16382  001D48  CFEB FFDB          	movff	plusw0,plusw2
 16383  001D4C  06E8               	decf	wreg,f,c
 16384  001D4E  E2FC               	bc	u15881
 16385  001D50                     l14002:
 16386                           
 16387                           ;NetworkManager.c: 87: nState=netDelayBeforeCheckin;
 16388  001D50  0E05               	movlw	5
 16389  001D52  0101               	movlb	1	; () banked
 16390  001D54  6FDD               	movwf	_nState& (0+255),b
 16391  001D56  0C05               	retlw	5
 16392  001D58                     l14004:
 16393                           
 16394                           ; BSR set to: 1
 16395                           ;NetworkManager.c: 93: if(RMRoutingTableCount()>0)
 16396  001D58  EC12  F03C         	call	_RMRoutingTableCount	;wreg free
 16397  001D5C  0100               	movlb	0	; () banked
 16398  001D5E  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 16399  001D60  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 16400  001D62  B4D8               	btfsc	status,2,c
 16401  001D64  0012               	return	
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;NetworkManager.c: 94: {
 16405                           ;NetworkManager.c: 95: tStart=MSTickGet();
 16406  001D66  EC58  F039         	call	_MSTickGet	;wreg free
 16407  001D6A  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16408  001D6E  0E07               	movlw	7
 16409  001D70                     u15901:
 16410  001D70  CFEB FFDB          	movff	plusw0,plusw2
 16411  001D74  06E8               	decf	wreg,f,c
 16412  001D76  E2FC               	bc	u15901
 16413                           
 16414                           ; BSR set to: 0
 16415                           ;NetworkManager.c: 96: nState=netWaitBeforeRouteUpdates;
 16416  001D78  0E02               	movlw	2
 16417  001D7A  0101               	movlb	1	; () banked
 16418  001D7C  6FDD               	movwf	_nState& (0+255),b
 16419  001D7E  0C02               	retlw	2
 16420  001D80                     l14010:
 16421                           
 16422                           ; BSR set to: 1
 16423                           ;NetworkManager.c: 101: if(MSTickGetDiffNow(tStart)>((SPAN)2000))
 16424  001D80  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16425  001D84  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16426  001D88  0E07               	movlw	7
 16427  001D8A                     u15911:
 16428  001D8A  CFDB FFEB          	movff	plusw2,plusw0
 16429  001D8E  06E8               	decf	wreg,f,c
 16430  001D90  E2FC               	bc	u15911
 16431  001D92  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 16432  001D96  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16433  001D98  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16434  001D9A  E107               	bnz	u15920
 16435  001D9C  0ED1               	movlw	209
 16436  001D9E  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 16437  001DA0  0E07               	movlw	7
 16438  001DA2  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16439  001DA4  E202 EF12  F03C    	bnc	_RMRoutingTableCount
 16440  001DAA                     u15920:
 16441                           
 16442                           ; BSR set to: 0
 16443                           ;NetworkManager.c: 102: {
 16444                           ;NetworkManager.c: 103: RouteManagerPerformUpdate();
 16445  001DAA  ECE4  F00C         	call	_RouteManagerPerformUpdate	;wreg free
 16446  001DAE                     l14014:
 16447                           
 16448                           ;NetworkManager.c: 104: nState=netWaitParent;
 16449  001DAE  0E03               	movlw	3
 16450  001DB0  0101               	movlb	1	; () banked
 16451  001DB2  6FDD               	movwf	_nState& (0+255),b
 16452                           
 16453                           ;NetworkManager.c: 105: }else if(RMRoutingTableCount()>2)
 16454  001DB4  0C03               	retlw	3
 16455  001DB6                     l14018:
 16456                           
 16457                           ; BSR set to: 1
 16458                           ;NetworkManager.c: 113: if(isInvalidAddress(NetworkGetParentAddress())==0)
 16459  001DB6  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 16460  001DBA  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 16461  001DBE  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 16462  001DC2  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 16463  001DC6  0900               	iorlw	0
 16464  001DC8  E126               	bnz	l14026
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;NetworkManager.c: 114: {
 16468                           ;NetworkManager.c: 115: tStart=MSTickGet();
 16469  001DCA  EC58  F039         	call	_MSTickGet	;wreg free
 16470  001DCE  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16471  001DD2  0E07               	movlw	7
 16472  001DD4                     u15941:
 16473  001DD4  CFEB FFDB          	movff	plusw0,plusw2
 16474  001DD8  06E8               	decf	wreg,f,c
 16475  001DDA  E2FC               	bc	u15941
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;NetworkManager.c: 117: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 16479  001DDC  EC94  F01F         	call	_krnd	;wreg free
 16480  001DE0  5173               	movf	?_krnd& (0+255),w,b
 16481  001DE2  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 16482  001DE4  0E03               	movlw	3
 16483  001DE6  1574               	andwf	(?_krnd+1)& (0+255),w,b
 16484  001DE8  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 16485  001DEA  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 16486  001DEC  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 16487  001DEE  0EE8               	movlw	232
 16488  001DF0  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 16489  001DF2  0102               	movlb	2	; () banked
 16490  001DF4  6F46               	movwf	NetworkManagerTask@delay& (0+255),b
 16491  001DF6  0E03               	movlw	3
 16492  001DF8  0100               	movlb	0	; () banked
 16493  001DFA  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 16494  001DFC  0102               	movlb	2	; () banked
 16495  001DFE  6F47               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 16496  001E00  0E00               	movlw	0
 16497  001E02  0100               	movlb	0	; () banked
 16498  001E04  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 16499  001E06  0102               	movlb	2	; () banked
 16500  001E08  6F48               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 16501  001E0A  0E00               	movlw	0
 16502  001E0C  0100               	movlb	0	; () banked
 16503  001E0E  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 16504  001E10  0102               	movlb	2	; () banked
 16505  001E12  6F49               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 16506  001E14  D79D               	goto	l14002
 16507  001E16                     l14026:
 16508                           
 16509                           ; BSR set to: 0
 16510  001E16  EC12  F03C         	call	_RMRoutingTableCount	;wreg free
 16511  001E1A  0100               	movlb	0	; () banked
 16512  001E1C  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 16513  001E1E  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 16514  001E20  E101 D756          	bz	l13986
 16515  001E24  0012               	return	
 16516  001E26                     l14030:
 16517                           
 16518                           ; BSR set to: 1
 16519                           ;NetworkManager.c: 126: if(isInvalidAddress(NetworkGetParentAddress())==1)
 16520  001E26  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 16521  001E2A  C073  F086         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 16522  001E2E  C074  F087         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 16523  001E32  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 16524  001E36  06E8               	decf	wreg,f,c
 16525  001E38  E0BA               	bz	l14014
 16526                           
 16527                           ; BSR set to: 0
 16528  001E3A  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16529  001E3E  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16530  001E42  0E07               	movlw	7
 16531  001E44                     u15971:
 16532  001E44  CFDB FFEB          	movff	plusw2,plusw0
 16533  001E48  06E8               	decf	wreg,f,c
 16534  001E4A  E2FC               	bc	u15971
 16535  001E4C  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 16536  001E50  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 16537  001E52  0102               	movlb	2	; () banked
 16538  001E54  5D46               	subwf	NetworkManagerTask@delay& (0+255),w,b
 16539  001E56  0100               	movlb	0	; () banked
 16540  001E58  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16541  001E5A  0102               	movlb	2	; () banked
 16542  001E5C  5947               	subwfb	(NetworkManagerTask@delay+1)& (0+255),w,b
 16543  001E5E  0100               	movlb	0	; () banked
 16544  001E60  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16545  001E62  0102               	movlb	2	; () banked
 16546  001E64  5948               	subwfb	(NetworkManagerTask@delay+2)& (0+255),w,b
 16547  001E66  0100               	movlb	0	; () banked
 16548  001E68  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16549  001E6A  0102               	movlb	2	; () banked
 16550  001E6C  5949               	subwfb	(NetworkManagerTask@delay+3)& (0+255),w,b
 16551  001E6E  B0D8               	btfsc	status,0,c
 16552  001E70  0012               	return	
 16553                           
 16554                           ; BSR set to: 2
 16555  001E72  EC5C  F03C         	call	_MiApp_IsNetworkBusy	;wreg free
 16556  001E76  0900               	iorlw	0
 16557  001E78  A4D8               	btfss	status,2,c
 16558  001E7A  0012               	return	
 16559                           
 16560                           ; BSR set to: 2
 16561                           ;NetworkManager.c: 130: {
 16562                           ;NetworkManager.c: 131: nst--;
 16563  001E7C  0101               	movlb	1	; () banked
 16564  001E7E  07DF               	decf	_nst& (0+255),f,b	;volatile
 16565                           
 16566                           ; BSR set to: 1
 16567                           ;NetworkManager.c: 132: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketCheckin,(0),0);
 16568  001E80  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
 16569  001E84  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 16570  001E88  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 16571  001E8C  0E44               	movlw	low NetworkManagerTask@data
 16572  001E8E  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 16573  001E90  0E01               	movlw	high NetworkManagerTask@data
 16574  001E92  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 16575  001E94  0E24               	movlw	36
 16576  001E96  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 16577  001E98  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 16578  001E9A  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 16579  001E9C  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 16580  001E9E  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 16581  001EA0  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 16582  001EA4  C07F  F157         	movff	?_NetworkPrepareSendPacket,NetworkManagerTask@sz
 16583  001EA8  C080  F158         	movff	?_NetworkPrepareSendPacket+1,NetworkManagerTask@sz+1
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;NetworkManager.c: 133: data[sz++]=NetworkGetDeviceType();
 16587  001EAC  0E44               	movlw	low NetworkManagerTask@data
 16588  001EAE  0101               	movlb	1	; () banked
 16589  001EB0  2557               	addwf	NetworkManagerTask@sz& (0+255),w,b
 16590  001EB2  6ED9               	movwf	fsr2l,c
 16591  001EB4  0E01               	movlw	high NetworkManagerTask@data
 16592  001EB6  2158               	addwfc	(NetworkManagerTask@sz+1)& (0+255),w,b
 16593  001EB8  6EDA               	movwf	fsr2h,c
 16594  001EBA  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 16595  001EBE  6EDF               	movwf	indf2,c
 16596                           
 16597                           ; BSR set to: 1
 16598  001EC0  4B57               	infsnz	NetworkManagerTask@sz& (0+255),f,b
 16599  001EC2  2B58               	incf	(NetworkManagerTask@sz+1)& (0+255),f,b
 16600                           
 16601                           ; BSR set to: 1
 16602                           ;NetworkManager.c: 135: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 16603  001EC4  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 16604  001EC8  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 16605  001ECC  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 16606  001ED0  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 16607  001ED4  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 16608  001ED8  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 16609  001EDC  0E44               	movlw	low NetworkManagerTask@data
 16610  001EDE  0100               	movlb	0	; () banked
 16611  001EE0  6FC0               	movwf	radioUnicast@data& (0+255),b
 16612  001EE2  0E01               	movlw	high NetworkManagerTask@data
 16613  001EE4  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 16614  001EE6  C157  F0C2         	movff	NetworkManagerTask@sz,radioUnicast@datasize
 16615  001EEA  EC3C  F03C         	call	_isNetworkSecurityEnabled	;wreg free
 16616  001EEE  0100               	movlb	0	; () banked
 16617  001EF0  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 16618  001EF2  ECDC  F036         	call	_radioUnicast	;wreg free
 16619  001EF6  0900               	iorlw	0
 16620  001EF8  E108               	bnz	l14050
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;NetworkManager.c: 136: {
 16624                           ;NetworkManager.c: 137: RouterEvicted(NetworkGetParentAddress());
 16625  001EFA  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 16626  001EFE  C073  F08F         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 16627  001F02  C074  F090         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 16628  001F06  ECB1  F02E         	call	_RouterEvicted	;wreg free
 16629  001F0A                     l14050:
 16630                           
 16631                           ;NetworkManager.c: 138: }
 16632                           ;NetworkManager.c: 139: nState=netWaitReply;
 16633  001F0A  0E06               	movlw	6
 16634  001F0C  0101               	movlb	1	; () banked
 16635  001F0E  6FDD               	movwf	_nState& (0+255),b
 16636                           
 16637                           ; BSR set to: 1
 16638                           ;NetworkManager.c: 140: tStart=MSTickGet();
 16639  001F10  EC58  F039         	call	_MSTickGet	;wreg free
 16640  001F14  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16641  001F18  0E07               	movlw	7
 16642  001F1A                     u16011:
 16643  001F1A  CFEB FFDB          	movff	plusw0,plusw2
 16644  001F1E  06E8               	decf	wreg,f,c
 16645  001F20  E2FC               	bc	u16011
 16646  001F22  0012               	return	
 16647  001F24                     l14054:
 16648                           
 16649                           ; BSR set to: 1
 16650                           ;NetworkManager.c: 145: if(MSTickGetDiffNow(tStart)>((SPAN)1*1000ULL))
 16651  001F24  EE22  F02A         	lfsr	2,NetworkManagerTask@tStart
 16652  001F28  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 16653  001F2C  0E07               	movlw	7
 16654  001F2E                     u16021:
 16655  001F2E  CFDB FFEB          	movff	plusw2,plusw0
 16656  001F32  06E8               	decf	wreg,f,c
 16657  001F34  E2FC               	bc	u16021
 16658  001F36  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 16659  001F3A  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 16660  001F3C  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 16661  001F3E  E107               	bnz	u16030
 16662  001F40  0EE9               	movlw	233
 16663  001F42  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 16664  001F44  0E03               	movlw	3
 16665  001F46  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 16666  001F48  E301 D6DD          	bc	l13998
 16667  001F4C  0012               	return	
 16668  001F4E                     u16030:
 16669  001F4E  D6DB               	goto	l13998
 16670  001F50                     l14064:
 16671  001F50  0101               	movlb	1	; () banked
 16672  001F52  51DD               	movf	_nState& (0+255),w,b
 16673                           
 16674                           ; Switch size 1, requested type "speed"
 16675                           ; Number of cases is 7, Range of values is 0 to 6
 16676                           ; switch strategies available:
 16677                           ; Name         Instructions Cycles
 16678                           ; simple_byte           22    12 (average)
 16679                           ;	Chosen strategy is simple_byte
 16680  001F54  E101 D6B5          	bz	l13982
 16681  001F58  0A01               	xorlw	1	; case 1
 16682  001F5A  E101 D6FD          	bz	l14004
 16683  001F5E  0A03               	xorlw	3	; case 2
 16684  001F60  E101 D70E          	bz	l14010
 16685  001F64  0A01               	xorlw	1	; case 3
 16686  001F66  E101 D726          	bz	l14018
 16687  001F6A  0A07               	xorlw	7	; case 4
 16688  001F6C  E101 D6B4          	bz	l13988
 16689  001F70  0A01               	xorlw	1	; case 5
 16690  001F72  E101 D758          	bz	l14030
 16691  001F76  0A03               	xorlw	3	; case 6
 16692  001F78  E0D5               	bz	l14054
 16693  001F7A  0012               	return		;funcret
 16694  001F7C                     __end_of_NetworkManagerTask:
 16695                           	opt stack 0
 16696                           tblptru	equ	0xFF8
 16697                           tblptrh	equ	0xFF7
 16698                           tblptrl	equ	0xFF6
 16699                           tablat	equ	0xFF5
 16700                           prodh	equ	0xFF4
 16701                           prodl	equ	0xFF3
 16702                           intcon3	equ	0xFF0
 16703                           postinc0	equ	0xFEE
 16704                           plusw0	equ	0xFEB
 16705                           fsr0h	equ	0xFEA
 16706                           fsr0l	equ	0xFE9
 16707                           wreg	equ	0xFE8
 16708                           indf1	equ	0xFE7
 16709                           postdec1	equ	0xFE5
 16710                           plusw1	equ	0xFE3
 16711                           fsr1h	equ	0xFE2
 16712                           fsr1l	equ	0xFE1
 16713                           indf2	equ	0xFDF
 16714                           postinc2	equ	0xFDE
 16715                           postdec2	equ	0xFDD
 16716                           plusw2	equ	0xFDB
 16717                           fsr2h	equ	0xFDA
 16718                           fsr2l	equ	0xFD9
 16719                           status	equ	0xFD8
 16720                           
 16721 ;; *************** function _TransportManagerTask *****************
 16722 ;; Defined at:
 16723 ;;		line 59 in file "../TransportManager.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 16728 ;;  i               2   66[BANK1 ] unsigned int 
 16729 ;;  sz              2   64[BANK1 ] unsigned int 
 16730 ;; Return value:  Size  Location     Type
 16731 ;;                  1    wreg      void 
 16732 ;; Registers used:
 16733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16734 ;; Tracked objects:
 16735 ;;		On entry : F/0
 16736 ;;		On exit  : E/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16740 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16742 ;;      Totals:         0       4      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16743 ;;Total ram usage:       72 bytes
 16744 ;; Hardware stack levels used:    1
 16745 ;; Hardware stack levels required when called:   12
 16746 ;; This function calls:
 16747 ;;		_CoordinatorGenericAddress
 16748 ;;		_MSTickGet
 16749 ;;		_MSTickGetDiffNow
 16750 ;;		_NetworkGetPANID
 16751 ;;		_NetworkGetParentAddress
 16752 ;;		_NetworkHasRoute
 16753 ;;		_NetworkPrepareSendPacket
 16754 ;;		_RouterEvicted
 16755 ;;		_memcpy
 16756 ;;		_radioUnicast
 16757 ;; This function is called by:
 16758 ;;		_NetworkManagerTask
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           	psect	text61
 16763  000B24                     __ptext61:
 16764                           	opt stack 0
 16765  000B24                     _TransportManagerTask:
 16766                           	opt stack 15
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;TransportManager.c: 61: uint8_t databuff[64];
 16770                           ;TransportManager.c: 62: uint16_t i;
 16771                           ;TransportManager.c: 63: uint16_t sz;
 16772                           ;TransportManager.c: 64: switch(TMState)
 16773                           
 16774                           ;incstack = 0
 16775  000B24  D051               	goto	l13738
 16776  000B26                     l13712:
 16777                           
 16778                           ;TransportManager.c: 67: TMState=TMWaitRoute;
 16779  000B26  0E01               	movlw	1
 16780  000B28  D005               	goto	L6
 16781  000B2A                     l13714:
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;TransportManager.c: 71: if(NetworkHasRoute()==1)
 16785  000B2A  EC21  F039         	call	_NetworkHasRoute	;wreg free
 16786  000B2E  06E8               	decf	wreg,f,c
 16787  000B30  E151               	bnz	l13740
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;TransportManager.c: 72: {
 16791                           ;TransportManager.c: 73: TMState=TMOperating;
 16792  000B32  0E02               	movlw	2
 16793  000B34                     L6:
 16794  000B34  6E3F               	movwf	_TMState,c
 16795  000B36  D04E               	goto	l13740
 16796  000B38                     l13718:
 16797                           
 16798                           ; BSR set to: 0
 16799                           ;TransportManager.c: 78: if(NetworkHasRoute()==0)
 16800  000B38  EC21  F039         	call	_NetworkHasRoute	;wreg free
 16801  000B3C  0900               	iorlw	0
 16802  000B3E  E14A               	bnz	l13740
 16803                           
 16804                           ; BSR set to: 0
 16805                           ;TransportManager.c: 79: {
 16806                           ;TransportManager.c: 80: for(i=0;i<2;i++)
 16807  000B40  0101               	movlb	1	; () banked
 16808  000B42  6B42               	clrf	TransportManagerTask@i& (0+255),b
 16809  000B44  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 16810  000B46                     l13726:
 16811                           
 16812                           ; BSR set to: 1
 16813                           ;TransportManager.c: 81: {
 16814                           ;TransportManager.c: 82: if(TMQ[i].TMQState!=TMQIdle)
 16815  000B46  0E4C               	movlw	76
 16816  000B48  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16817  000B4A  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16818  000B4E  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16819  000B52  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16820  000B54  50F3               	movf	prodl,w,c
 16821  000B56  0100               	movlb	0	; () banked
 16822  000B58  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16823  000B5A  0E4B               	movlw	low (_TMQ+75)
 16824  000B5C  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16825  000B5E  6ED9               	movwf	fsr2l,c
 16826  000B60  0E06               	movlw	high (_TMQ+75)
 16827  000B62  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16828  000B64  6EDA               	movwf	fsr2h,c
 16829  000B66  50DF               	movf	indf2,w,c
 16830  000B68  E026               	bz	l13730
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;TransportManager.c: 83: {
 16834                           ;TransportManager.c: 84: TMQ[i].TMQState=TMQSend;
 16835  000B6A  0E4C               	movlw	76
 16836  000B6C  0101               	movlb	1	; () banked
 16837  000B6E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16838  000B70  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16839  000B74  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16840  000B78  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16841  000B7A  50F3               	movf	prodl,w,c
 16842  000B7C  0100               	movlb	0	; () banked
 16843  000B7E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16844  000B80  0E4B               	movlw	low (_TMQ+75)
 16845  000B82  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16846  000B84  6ED9               	movwf	fsr2l,c
 16847  000B86  0E06               	movlw	high (_TMQ+75)
 16848  000B88  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16849  000B8A  6EDA               	movwf	fsr2h,c
 16850  000B8C  0E01               	movlw	1
 16851  000B8E  6EDF               	movwf	indf2,c
 16852                           
 16853                           ;TransportManager.c: 85: TMQ[i].retryCount=0;
 16854  000B90  0E4C               	movlw	76
 16855  000B92  0101               	movlb	1	; () banked
 16856  000B94  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16857  000B96  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16858  000B9A  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16859  000B9E  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16860  000BA0  50F3               	movf	prodl,w,c
 16861  000BA2  0100               	movlb	0	; () banked
 16862  000BA4  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16863  000BA6  0E49               	movlw	low (_TMQ+73)
 16864  000BA8  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16865  000BAA  6ED9               	movwf	fsr2l,c
 16866  000BAC  0E06               	movlw	high (_TMQ+73)
 16867  000BAE  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16868  000BB0  6EDA               	movwf	fsr2h,c
 16869  000BB2  0E00               	movlw	0
 16870  000BB4  6EDF               	movwf	indf2,c
 16871  000BB6                     l13730:
 16872                           
 16873                           ; BSR set to: 0
 16874  000BB6  0101               	movlb	1	; () banked
 16875  000BB8  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 16876  000BBA  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 16877                           
 16878                           ; BSR set to: 1
 16879  000BBC  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 16880  000BBE  E1B3               	bnz	l13712
 16881  000BC0  0E02               	movlw	2
 16882  000BC2  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 16883  000BC4  E2B0               	bc	l13712
 16884  000BC6  D7BF               	goto	l13726
 16885  000BC8                     l13738:
 16886                           
 16887                           ; BSR set to: 0
 16888  000BC8  503F               	movf	_TMState,w,c
 16889                           
 16890                           ; Switch size 1, requested type "speed"
 16891                           ; Number of cases is 3, Range of values is 0 to 2
 16892                           ; switch strategies available:
 16893                           ; Name         Instructions Cycles
 16894                           ; simple_byte           10     6 (average)
 16895                           ;	Chosen strategy is simple_byte
 16896  000BCA  E0AD               	bz	l13712
 16897  000BCC  0A01               	xorlw	1	; case 1
 16898  000BCE  E0AD               	bz	l13714
 16899  000BD0  0A03               	xorlw	3	; case 2
 16900  000BD2  E0B2               	bz	l13718
 16901  000BD4                     l13740:
 16902                           
 16903                           ;TransportManager.c: 93: if(TMState==TMOperating)
 16904  000BD4  0E02               	movlw	2
 16905  000BD6  183F               	xorwf	_TMState,w,c
 16906  000BD8  A4D8               	btfss	status,2,c
 16907  000BDA  0012               	return	
 16908                           
 16909                           ;TransportManager.c: 94: {
 16910                           ;TransportManager.c: 95: for(i=0;i<2;i++)
 16911  000BDC  0101               	movlb	1	; () banked
 16912  000BDE  6B42               	clrf	TransportManagerTask@i& (0+255),b
 16913  000BE0  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 16914  000BE2  D195               	goto	l13782
 16915  000BE4                     l13748:
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;TransportManager.c: 103: if(TMQ[i].datasize>0)
 16919  000BE4  0E4C               	movlw	76
 16920  000BE6  0101               	movlb	1	; () banked
 16921  000BE8  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16922  000BEA  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16923  000BEE  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16924  000BF2  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16925  000BF4  50F3               	movf	prodl,w,c
 16926  000BF6  0100               	movlb	0	; () banked
 16927  000BF8  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16928  000BFA  0E40               	movlw	low (_TMQ+64)
 16929  000BFC  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16930  000BFE  6ED9               	movwf	fsr2l,c
 16931  000C00  0E06               	movlw	high (_TMQ+64)
 16932  000C02  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16933  000C04  6EDA               	movwf	fsr2h,c
 16934  000C06  50DF               	movf	indf2,w,c
 16935  000C08  E101 D199          	bz	l13784
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;TransportManager.c: 104: {
 16939                           ;TransportManager.c: 105: if(TMQ[i].flags.isFormedPacket==0)
 16940  000C0C  0E4C               	movlw	76
 16941  000C0E  0101               	movlb	1	; () banked
 16942  000C10  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16943  000C12  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16944  000C16  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16945  000C1A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16946  000C1C  50F3               	movf	prodl,w,c
 16947  000C1E  0100               	movlb	0	; () banked
 16948  000C20  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16949  000C22  0E4A               	movlw	low (_TMQ+74)
 16950  000C24  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16951  000C26  6ED9               	movwf	fsr2l,c
 16952  000C28  0E06               	movlw	high (_TMQ+74)
 16953  000C2A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16954  000C2C  6EDA               	movwf	fsr2h,c
 16955  000C2E  0106               	movlb	6	; () banked
 16956  000C30  B0DF               	btfsc	indf2,0,c
 16957  000C32  D038               	goto	l13754
 16958                           
 16959                           ; BSR set to: 6
 16960                           ;TransportManager.c: 106: {
 16961                           ;TransportManager.c: 107: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),databu
      +                          ff,PacketData,TMQ[i].data,TMQ[i].datasize);
 16962  000C34  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
 16963  000C38  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 16964  000C3C  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 16965  000C40  0E00               	movlw	low TransportManagerTask@databuff
 16966  000C42  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 16967  000C44  0E01               	movlw	high TransportManagerTask@databuff
 16968  000C46  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 16969  000C48  0E23               	movlw	35
 16970  000C4A  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 16971  000C4C  0E4C               	movlw	76
 16972  000C4E  0101               	movlb	1	; () banked
 16973  000C50  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16974  000C52  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 16975  000C56  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 16976  000C5A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16977  000C5C  50F3               	movf	prodl,w,c
 16978  000C5E  0100               	movlb	0	; () banked
 16979  000C60  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 16980  000C62  0E00               	movlw	low _TMQ
 16981  000C64  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 16982  000C66  6F84               	movwf	NetworkPrepareSendPacket@data& (0+255),b
 16983  000C68  0E06               	movlw	high _TMQ
 16984  000C6A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 16985  000C6C  6F85               	movwf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 16986  000C6E  0E4C               	movlw	76
 16987  000C70  0101               	movlb	1	; () banked
 16988  000C72  0342               	mulwf	TransportManagerTask@i& (0+255),b
 16989  000C74  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 16990  000C78  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 16991  000C7C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 16992  000C7E  50F3               	movf	prodl,w,c
 16993  000C80  0100               	movlb	0	; () banked
 16994  000C82  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 16995  000C84  0E40               	movlw	low (_TMQ+64)
 16996  000C86  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 16997  000C88  6ED9               	movwf	fsr2l,c
 16998  000C8A  0E06               	movlw	high (_TMQ+64)
 16999  000C8C  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 17000  000C8E  6EDA               	movwf	fsr2h,c
 17001  000C90  50DF               	movf	indf2,w,c
 17002  000C92  6F86               	movwf	NetworkPrepareSendPacket@size& (0+255),b
 17003  000C94  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 17004  000C96  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 17005  000C9A  C07F  F140         	movff	?_NetworkPrepareSendPacket,TransportManagerTask@sz
 17006  000C9E  C080  F141         	movff	?_NetworkPrepareSendPacket+1,TransportManagerTask@sz+1
 17007                           
 17008                           ;TransportManager.c: 108: }else
 17009  000CA2  D041               	goto	l13758
 17010  000CA4                     l13754:
 17011                           
 17012                           ; BSR set to: 6
 17013                           ;TransportManager.c: 109: {
 17014                           ;TransportManager.c: 110: memcpy(databuff,TMQ[i].data,TMQ[i].datasize);
 17015  000CA4  0E00               	movlw	low TransportManagerTask@databuff
 17016  000CA6  0100               	movlb	0	; () banked
 17017  000CA8  6F75               	movwf	memcpy@d1& (0+255),b
 17018  000CAA  0E01               	movlw	high TransportManagerTask@databuff
 17019  000CAC  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 17020  000CAE  0E4C               	movlw	76
 17021  000CB0  0101               	movlb	1	; () banked
 17022  000CB2  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17023  000CB4  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17024  000CB8  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17025  000CBC  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17026  000CBE  50F3               	movf	prodl,w,c
 17027  000CC0  0100               	movlb	0	; () banked
 17028  000CC2  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17029  000CC4  0E00               	movlw	low _TMQ
 17030  000CC6  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17031  000CC8  6F77               	movwf	memcpy@s1& (0+255),b
 17032  000CCA  0E06               	movlw	high _TMQ
 17033  000CCC  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17034  000CCE  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 17035  000CD0  0E4C               	movlw	76
 17036  000CD2  0101               	movlb	1	; () banked
 17037  000CD4  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17038  000CD6  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 17039  000CDA  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 17040  000CDE  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17041  000CE0  50F3               	movf	prodl,w,c
 17042  000CE2  0100               	movlb	0	; () banked
 17043  000CE4  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 17044  000CE6  0E40               	movlw	low (_TMQ+64)
 17045  000CE8  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 17046  000CEA  6ED9               	movwf	fsr2l,c
 17047  000CEC  0E06               	movlw	high (_TMQ+64)
 17048  000CEE  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 17049  000CF0  6EDA               	movwf	fsr2h,c
 17050  000CF2  50DF               	movf	indf2,w,c
 17051  000CF4  6F79               	movwf	memcpy@n& (0+255),b
 17052  000CF6  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 17053  000CF8  EC5D  F036         	call	_memcpy	;wreg free
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;TransportManager.c: 111: sz=TMQ[i].datasize;
 17057  000CFC  0E4C               	movlw	76
 17058  000CFE  0101               	movlb	1	; () banked
 17059  000D00  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17060  000D02  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17061  000D06  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17062  000D0A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17063  000D0C  50F3               	movf	prodl,w,c
 17064  000D0E  0100               	movlb	0	; () banked
 17065  000D10  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17066  000D12  0E40               	movlw	low (_TMQ+64)
 17067  000D14  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17068  000D16  6ED9               	movwf	fsr2l,c
 17069  000D18  0E06               	movlw	high (_TMQ+64)
 17070  000D1A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17071  000D1C  6EDA               	movwf	fsr2h,c
 17072  000D1E  50DF               	movf	indf2,w,c
 17073  000D20  0101               	movlb	1	; () banked
 17074  000D22  6F40               	movwf	TransportManagerTask@sz& (0+255),b
 17075  000D24  6B41               	clrf	(TransportManagerTask@sz+1)& (0+255),b
 17076  000D26                     l13758:
 17077                           
 17078                           ;TransportManager.c: 112: }
 17079                           ;TransportManager.c: 113: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),da
      +                          tabuff,sz, TMQ[i].flags.isSecure)==1)
 17080  000D26  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 17081  000D2A  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 17082  000D2E  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 17083  000D32  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 17084  000D36  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 17085  000D3A  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 17086  000D3E  0E00               	movlw	low TransportManagerTask@databuff
 17087  000D40  0100               	movlb	0	; () banked
 17088  000D42  6FC0               	movwf	radioUnicast@data& (0+255),b
 17089  000D44  0E01               	movlw	high TransportManagerTask@databuff
 17090  000D46  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 17091  000D48  C140  F0C2         	movff	TransportManagerTask@sz,radioUnicast@datasize
 17092  000D4C  0E4C               	movlw	76
 17093  000D4E  0101               	movlb	1	; () banked
 17094  000D50  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17095  000D52  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17096  000D56  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17097  000D5A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17098  000D5C  50F3               	movf	prodl,w,c
 17099  000D5E  0100               	movlb	0	; () banked
 17100  000D60  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17101  000D62  0E4A               	movlw	low (_TMQ+74)
 17102  000D64  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17103  000D66  6ED9               	movwf	fsr2l,c
 17104  000D68  0E06               	movlw	high (_TMQ+74)
 17105  000D6A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17106  000D6C  6EDA               	movwf	fsr2h,c
 17107  000D6E  0E00               	movlw	0
 17108  000D70  B2DF               	btfsc	indf2,1,c
 17109  000D72  0E01               	movlw	1
 17110  000D74  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 17111  000D76  ECDC  F036         	call	_radioUnicast	;wreg free
 17112  000D7A  06E8               	decf	wreg,f,c
 17113  000D7C  E113               	bnz	l13762
 17114  000D7E                     l13760:
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;TransportManager.c: 114: {
 17118                           ;TransportManager.c: 116: TMQ[i].TMQState=TMQIdle;
 17119  000D7E  0E4C               	movlw	76
 17120  000D80  0101               	movlb	1	; () banked
 17121  000D82  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17122  000D84  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17123  000D88  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17124  000D8C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17125  000D8E  50F3               	movf	prodl,w,c
 17126  000D90  0100               	movlb	0	; () banked
 17127  000D92  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17128  000D94  0E4B               	movlw	low (_TMQ+75)
 17129  000D96  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17130  000D98  6ED9               	movwf	fsr2l,c
 17131  000D9A  0E06               	movlw	high (_TMQ+75)
 17132  000D9C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17133  000D9E  6EDA               	movwf	fsr2h,c
 17134  000DA0  0E00               	movlw	0
 17135  000DA2  D0B3               	goto	L8
 17136  000DA4                     l13762:
 17137                           
 17138                           ; BSR set to: 0
 17139                           ;TransportManager.c: 118: {
 17140                           ;TransportManager.c: 120: TMQ[i].tick=MSTickGet();
 17141  000DA4  EC58  F039         	call	_MSTickGet	;wreg free
 17142  000DA8  0E4C               	movlw	76
 17143  000DAA  0101               	movlb	1	; () banked
 17144  000DAC  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17145  000DAE  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17146  000DB2  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17147  000DB6  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17148  000DB8  50F3               	movf	prodl,w,c
 17149  000DBA  0100               	movlb	0	; () banked
 17150  000DBC  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17151  000DBE  0E41               	movlw	low (_TMQ+65)
 17152  000DC0  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17153  000DC2  6ED9               	movwf	fsr2l,c
 17154  000DC4  0E06               	movlw	high (_TMQ+65)
 17155  000DC6  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17156  000DC8  6EDA               	movwf	fsr2h,c
 17157  000DCA  0E07               	movlw	7
 17158  000DCC                     u15551:
 17159  000DCC  CFEB FFDB          	movff	plusw0,plusw2
 17160  000DD0  06E8               	decf	wreg,f,c
 17161  000DD2  E2FC               	bc	u15551
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;TransportManager.c: 121: TMQ[i].retryCount++;
 17165  000DD4  0E4C               	movlw	76
 17166  000DD6  0101               	movlb	1	; () banked
 17167  000DD8  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17168  000DDA  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17169  000DDE  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17170  000DE2  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17171  000DE4  50F3               	movf	prodl,w,c
 17172  000DE6  0100               	movlb	0	; () banked
 17173  000DE8  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17174  000DEA  0E49               	movlw	low (_TMQ+73)
 17175  000DEC  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17176  000DEE  6ED9               	movwf	fsr2l,c
 17177  000DF0  0E06               	movlw	high (_TMQ+73)
 17178  000DF2  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17179  000DF4  6EDA               	movwf	fsr2h,c
 17180  000DF6  2ADF               	incf	indf2,f,c
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;TransportManager.c: 122: if(TMQ[i].retryCount<3)
 17184  000DF8  0E4C               	movlw	76
 17185  000DFA  0101               	movlb	1	; () banked
 17186  000DFC  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17187  000DFE  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17188  000E02  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17189  000E06  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17190  000E08  50F3               	movf	prodl,w,c
 17191  000E0A  0100               	movlb	0	; () banked
 17192  000E0C  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17193  000E0E  0E49               	movlw	low (_TMQ+73)
 17194  000E10  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17195  000E12  6ED9               	movwf	fsr2l,c
 17196  000E14  0E06               	movlw	high (_TMQ+73)
 17197  000E16  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17198  000E18  6EDA               	movwf	fsr2h,c
 17199  000E1A  0E03               	movlw	3
 17200  000E1C  60DF               	cpfslt	indf2,c
 17201  000E1E  D013               	goto	l13770
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;TransportManager.c: 123: {
 17205                           ;TransportManager.c: 124: TMQ[i].TMQState=TMQWaitRetry;
 17206  000E20  0E4C               	movlw	76
 17207  000E22  0101               	movlb	1	; () banked
 17208  000E24  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17209  000E26  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17210  000E2A  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17211  000E2E  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17212  000E30  50F3               	movf	prodl,w,c
 17213  000E32  0100               	movlb	0	; () banked
 17214  000E34  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17215  000E36  0E4B               	movlw	low (_TMQ+75)
 17216  000E38  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17217  000E3A  6ED9               	movwf	fsr2l,c
 17218  000E3C  0E06               	movlw	high (_TMQ+75)
 17219  000E3E  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17220  000E40  6EDA               	movwf	fsr2h,c
 17221  000E42  0E02               	movlw	2
 17222  000E44  D062               	goto	L8
 17223  000E46                     l13770:
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;TransportManager.c: 126: {
 17227                           ;TransportManager.c: 128: TMQ[i].TMQState=TMQWaitRetry;
 17228  000E46  0E4C               	movlw	76
 17229  000E48  0101               	movlb	1	; () banked
 17230  000E4A  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17231  000E4C  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17232  000E50  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17233  000E54  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17234  000E56  50F3               	movf	prodl,w,c
 17235  000E58  0100               	movlb	0	; () banked
 17236  000E5A  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17237  000E5C  0E4B               	movlw	low (_TMQ+75)
 17238  000E5E  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17239  000E60  6ED9               	movwf	fsr2l,c
 17240  000E62  0E06               	movlw	high (_TMQ+75)
 17241  000E64  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17242  000E66  6EDA               	movwf	fsr2h,c
 17243  000E68  0E02               	movlw	2
 17244  000E6A  6EDF               	movwf	indf2,c
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;TransportManager.c: 129: RouterEvicted(NetworkGetParentAddress());
 17248  000E6C  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 17249  000E70  C073  F08F         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 17250  000E74  C074  F090         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 17251  000E78  ECB1  F02E         	call	_RouterEvicted	;wreg free
 17252  000E7C  D060               	goto	l13784
 17253  000E7E                     l13774:
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;TransportManager.c: 136: if(MSTickGetDiffNow(TMQ[i].tick)>((SPAN)4000))
 17257  000E7E  0E4C               	movlw	76
 17258  000E80  0101               	movlb	1	; () banked
 17259  000E82  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17260  000E84  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17261  000E88  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17262  000E8C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17263  000E8E  50F3               	movf	prodl,w,c
 17264  000E90  0100               	movlb	0	; () banked
 17265  000E92  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17266  000E94  0E41               	movlw	low (_TMQ+65)
 17267  000E96  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17268  000E98  6ED9               	movwf	fsr2l,c
 17269  000E9A  0E06               	movlw	high (_TMQ+65)
 17270  000E9C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17271  000E9E  6EDA               	movwf	fsr2h,c
 17272  000EA0  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 17273  000EA4  0E07               	movlw	7
 17274  000EA6                     u15571:
 17275  000EA6  CFDB FFEB          	movff	plusw2,plusw0
 17276  000EAA  06E8               	decf	wreg,f,c
 17277  000EAC  E2FC               	bc	u15571
 17278  000EAE  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 17279  000EB2  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17280  000EB4  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17281  000EB6  E105               	bnz	u15580
 17282  000EB8  0EA1               	movlw	161
 17283  000EBA  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17284  000EBC  0E0F               	movlw	15
 17285  000EBE  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17286  000EC0  E33E               	bnc	l13784
 17287  000EC2                     u15580:
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;TransportManager.c: 137: {
 17291                           ;TransportManager.c: 138: TMQ[i].retryCount++;
 17292  000EC2  0E4C               	movlw	76
 17293  000EC4  0101               	movlb	1	; () banked
 17294  000EC6  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17295  000EC8  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17296  000ECC  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17297  000ED0  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17298  000ED2  50F3               	movf	prodl,w,c
 17299  000ED4  0100               	movlb	0	; () banked
 17300  000ED6  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17301  000ED8  0E49               	movlw	low (_TMQ+73)
 17302  000EDA  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17303  000EDC  6ED9               	movwf	fsr2l,c
 17304  000EDE  0E06               	movlw	high (_TMQ+73)
 17305  000EE0  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17306  000EE2  6EDA               	movwf	fsr2h,c
 17307  000EE4  2ADF               	incf	indf2,f,c
 17308                           
 17309                           ;TransportManager.c: 139: TMQ[i].TMQState=TMQSend;
 17310  000EE6  0E4C               	movlw	76
 17311  000EE8  0101               	movlb	1	; () banked
 17312  000EEA  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17313  000EEC  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17314  000EF0  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17315  000EF4  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17316  000EF6  50F3               	movf	prodl,w,c
 17317  000EF8  0100               	movlb	0	; () banked
 17318  000EFA  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17319  000EFC  0E4B               	movlw	low (_TMQ+75)
 17320  000EFE  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17321  000F00  6ED9               	movwf	fsr2l,c
 17322  000F02  0E06               	movlw	high (_TMQ+75)
 17323  000F04  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17324  000F06  6EDA               	movwf	fsr2h,c
 17325  000F08  0E01               	movlw	1
 17326  000F0A                     L8:
 17327  000F0A  6EDF               	movwf	indf2,c
 17328  000F0C  D018               	goto	l13784
 17329  000F0E                     l13782:
 17330                           
 17331                           ; BSR set to: 1
 17332  000F0E  0E4C               	movlw	76
 17333  000F10  0342               	mulwf	TransportManagerTask@i& (0+255),b
 17334  000F12  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 17335  000F16  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 17336  000F1A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17337  000F1C  50F3               	movf	prodl,w,c
 17338  000F1E  0100               	movlb	0	; () banked
 17339  000F20  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17340  000F22  0E4B               	movlw	low (_TMQ+75)
 17341  000F24  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 17342  000F26  6ED9               	movwf	fsr2l,c
 17343  000F28  0E06               	movlw	high (_TMQ+75)
 17344  000F2A  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17345  000F2C  6EDA               	movwf	fsr2h,c
 17346  000F2E  50DF               	movf	indf2,w,c
 17347                           
 17348                           ; Switch size 1, requested type "speed"
 17349                           ; Number of cases is 3, Range of values is 0 to 2
 17350                           ; switch strategies available:
 17351                           ; Name         Instructions Cycles
 17352                           ; simple_byte           10     6 (average)
 17353                           ;	Chosen strategy is simple_byte
 17354  000F30  E006               	bz	l13784
 17355  000F32  0A01               	xorlw	1	; case 1
 17356  000F34  E101 D656          	bz	l13748
 17357  000F38  0A03               	xorlw	3	; case 2
 17358  000F3A  E0A1               	bz	l13774
 17359  000F3C  D720               	goto	l13760
 17360  000F3E                     l13784:
 17361  000F3E  0101               	movlb	1	; () banked
 17362  000F40  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 17363  000F42  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 17364                           
 17365                           ; BSR set to: 1
 17366  000F44  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 17367  000F46  E103               	bnz	u15590
 17368  000F48  0E02               	movlw	2
 17369  000F4A  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 17370  000F4C  E3E0               	bnc	l13782
 17371  000F4E                     u15590:
 17372  000F4E  0012               	return		;funcret
 17373  000F50                     __end_of_TransportManagerTask:
 17374                           	opt stack 0
 17375                           tblptru	equ	0xFF8
 17376                           tblptrh	equ	0xFF7
 17377                           tblptrl	equ	0xFF6
 17378                           tablat	equ	0xFF5
 17379                           prodh	equ	0xFF4
 17380                           prodl	equ	0xFF3
 17381                           intcon3	equ	0xFF0
 17382                           postinc0	equ	0xFEE
 17383                           plusw0	equ	0xFEB
 17384                           fsr0h	equ	0xFEA
 17385                           fsr0l	equ	0xFE9
 17386                           wreg	equ	0xFE8
 17387                           indf1	equ	0xFE7
 17388                           postdec1	equ	0xFE5
 17389                           plusw1	equ	0xFE3
 17390                           fsr1h	equ	0xFE2
 17391                           fsr1l	equ	0xFE1
 17392                           indf2	equ	0xFDF
 17393                           postinc2	equ	0xFDE
 17394                           postdec2	equ	0xFDD
 17395                           plusw2	equ	0xFDB
 17396                           fsr2h	equ	0xFDA
 17397                           fsr2l	equ	0xFD9
 17398                           status	equ	0xFD8
 17399                           
 17400 ;; *************** function _RouteManagerTask *****************
 17401 ;; Defined at:
 17402 ;;		line 36 in file "../RouteManager.c"
 17403 ;; Parameters:    Size  Location     Type
 17404 ;;		None
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;		None
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  1    wreg      void 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17411 ;; Tracked objects:
 17412 ;;		On entry : F/1
 17413 ;;		On exit  : F/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17420 ;;Total ram usage:        0 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:   12
 17423 ;; This function calls:
 17424 ;;		_MSTickGet
 17425 ;;		_MSTickGetDiffNow
 17426 ;;		_RouteManagerPerformUpdate
 17427 ;; This function is called by:
 17428 ;;		_NetworkManagerTask
 17429 ;; This function uses a non-reentrant model
 17430 ;;
 17431                           
 17432                           	psect	text62
 17433  006F8C                     __ptext62:
 17434                           	opt stack 0
 17435  006F8C                     _RouteManagerTask:
 17436                           	opt stack 15
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;RouteManager.c: 38: if( (RouteMgrUpdateRequired==1) || (MSTickGetDiffNow(tRouteMgr)>((S
      +                          PAN)50*1000ULL)) )
 17440                           
 17441                           ;incstack = 0
 17442  006F8C  05D7               	decf	_RouteMgrUpdateRequired& (0+255),w,b
 17443  006F8E  E014               	bz	l13640
 17444                           
 17445                           ; BSR set to: 1
 17446  006F90  EE22  F03A         	lfsr	2,_tRouteMgr
 17447  006F94  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 17448  006F98  0E07               	movlw	7
 17449  006F9A                     u15291:
 17450  006F9A  CFDB FFEB          	movff	plusw2,plusw0
 17451  006F9E  06E8               	decf	wreg,f,c
 17452  006FA0  E2FC               	bc	u15291
 17453  006FA2  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 17454  006FA6  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17455  006FA8  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17456  006FAA  E106               	bnz	u15300
 17457  006FAC  0E51               	movlw	81
 17458  006FAE  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17459  006FB0  0EC3               	movlw	195
 17460  006FB2  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17461  006FB4  A0D8               	btfss	status,0,c
 17462  006FB6  0012               	return	
 17463  006FB8                     u15300:
 17464  006FB8                     l13640:
 17465                           
 17466                           ;RouteManager.c: 39: {
 17467                           ;RouteManager.c: 40: RouteManagerPerformUpdate();
 17468  006FB8  ECE4  F00C         	call	_RouteManagerPerformUpdate	;wreg free
 17469                           
 17470                           ;RouteManager.c: 41: RouteMgrUpdateRequired=0;
 17471  006FBC  0101               	movlb	1	; () banked
 17472  006FBE  6BD7               	clrf	_RouteMgrUpdateRequired& (0+255),b
 17473                           
 17474                           ; BSR set to: 1
 17475                           ;RouteManager.c: 42: tRouteMgr=MSTickGet();
 17476  006FC0  EC58  F039         	call	_MSTickGet	;wreg free
 17477  006FC4  EE22  F03A         	lfsr	2,_tRouteMgr
 17478  006FC8  0E07               	movlw	7
 17479  006FCA                     u15311:
 17480  006FCA  CFEB FFDB          	movff	plusw0,plusw2
 17481  006FCE  06E8               	decf	wreg,f,c
 17482  006FD0  E2FC               	bc	u15311
 17483                           
 17484                           ; BSR set to: 0
 17485  006FD2  0012               	return		;funcret
 17486  006FD4                     __end_of_RouteManagerTask:
 17487                           	opt stack 0
 17488                           tblptru	equ	0xFF8
 17489                           tblptrh	equ	0xFF7
 17490                           tblptrl	equ	0xFF6
 17491                           tablat	equ	0xFF5
 17492                           prodh	equ	0xFF4
 17493                           prodl	equ	0xFF3
 17494                           intcon3	equ	0xFF0
 17495                           postinc0	equ	0xFEE
 17496                           plusw0	equ	0xFEB
 17497                           fsr0h	equ	0xFEA
 17498                           fsr0l	equ	0xFE9
 17499                           wreg	equ	0xFE8
 17500                           indf1	equ	0xFE7
 17501                           postdec1	equ	0xFE5
 17502                           plusw1	equ	0xFE3
 17503                           fsr1h	equ	0xFE2
 17504                           fsr1l	equ	0xFE1
 17505                           indf2	equ	0xFDF
 17506                           postinc2	equ	0xFDE
 17507                           postdec2	equ	0xFDD
 17508                           plusw2	equ	0xFDB
 17509                           fsr2h	equ	0xFDA
 17510                           fsr2l	equ	0xFD9
 17511                           status	equ	0xFD8
 17512                           
 17513 ;; *************** function _RouteManagerPerformUpdate *****************
 17514 ;; Defined at:
 17515 ;;		line 46 in file "../RouteManager.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;		None
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;  r               2   67[BANK0 ] PTR struct route_info_t_
 17520 ;;		 -> routeInfo(7), 
 17521 ;;  entry           2   65[BANK0 ] PTR struct routing_table
 17522 ;;		 -> routingTable(90), 
 17523 ;;  minEtx          2   63[BANK0 ] unsigned int 
 17524 ;;  best            2   61[BANK0 ] PTR struct routing_table
 17525 ;;		 -> routingTable(90), NULL(0), 
 17526 ;;  currentEtx      2   59[BANK0 ] unsigned int 
 17527 ;;  pathEtx         2   57[BANK0 ] unsigned int 
 17528 ;;  i               2   55[BANK0 ] unsigned int 
 17529 ;;  linkEtx         2   53[BANK0 ] unsigned int 
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      void 
 17532 ;; Registers used:
 17533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17534 ;; Tracked objects:
 17535 ;;		On entry : E/0
 17536 ;;		On exit  : E/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17542 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17543 ;;Total ram usage:       18 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:   11
 17546 ;; This function calls:
 17547 ;;		_BeaconManagerTrigger
 17548 ;;		_LELinkQualityGet
 17549 ;;		_LE_ClearDLQ
 17550 ;;		_LE_PinNeighbor
 17551 ;;		_LE_UnpinNeighbor
 17552 ;;		_NetworkGetDeviceType
 17553 ;;		_NetworkGetMyRouteInfo
 17554 ;;		_NetworkManagerGetMyAddress
 17555 ;;		_TransportManagerNoRoute
 17556 ;;		_TransportManagerRouteFound
 17557 ;;		_isInvalidAddress
 17558 ;;		_isSameAddress
 17559 ;;		_passLinkEtxThreshold
 17560 ;; This function is called by:
 17561 ;;		_RouteManagerTask
 17562 ;;		_NetworkManagerTask
 17563 ;; This function uses a non-reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text63
 17567  0019C8                     __ptext63:
 17568                           	opt stack 0
 17569  0019C8                     _RouteManagerPerformUpdate:
 17570                           	opt stack 15
 17571                           
 17572                           ;RouteManager.c: 48: uint16_t i;
 17573                           ;RouteManager.c: 49: routing_table_entry_t* entry;
 17574                           ;RouteManager.c: 50: routing_table_entry_t* best;
 17575                           ;RouteManager.c: 51: uint16_t minEtx;
 17576                           ;RouteManager.c: 52: uint16_t currentEtx;
 17577                           ;RouteManager.c: 53: uint16_t linkEtx, pathEtx;
 17578                           ;RouteManager.c: 54: route_info_t *r=NetworkGetMyRouteInfo();
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;incstack = 0
 17582  0019C8  ECE0  F03B         	call	_NetworkGetMyRouteInfo	;wreg free
 17583  0019CC  C073  F0A3         	movff	?_NetworkGetMyRouteInfo,RouteManagerPerformUpdate@r
 17584  0019D0  C074  F0A4         	movff	?_NetworkGetMyRouteInfo+1,RouteManagerPerformUpdate@r+1
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;RouteManager.c: 56: if(NetworkGetDeviceType()!=DeviceCoordinator)
 17588  0019D4  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 17589  0019D8  0900               	iorlw	0
 17590  0019DA  B4D8               	btfsc	status,2,c
 17591  0019DC  0012               	return	
 17592                           
 17593                           ; BSR set to: 1
 17594                           ;RouteManager.c: 57: {
 17595                           ;RouteManager.c: 58: best = (0);
 17596  0019DE  0100               	movlb	0	; () banked
 17597  0019E0  6B9D               	clrf	RouteManagerPerformUpdate@best& (0+255),b
 17598  0019E2  6B9E               	clrf	(RouteManagerPerformUpdate@best+1)& (0+255),b
 17599                           
 17600                           ;RouteManager.c: 60: minEtx = 0xffff;
 17601  0019E4  699F               	setf	RouteManagerPerformUpdate@minEtx& (0+255),b
 17602  0019E6  69A0               	setf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),b
 17603                           
 17604                           ;RouteManager.c: 62: currentEtx = 0xffff;
 17605  0019E8  699B               	setf	RouteManagerPerformUpdate@currentEtx& (0+255),b
 17606  0019EA  699C               	setf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),b
 17607                           
 17608                           ;RouteManager.c: 65: for (i = 0; i < routingTableActive; i++)
 17609  0019EC  6B97               	clrf	RouteManagerPerformUpdate@i& (0+255),b
 17610  0019EE  6B98               	clrf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 17611  0019F0  D0B5               	goto	l12932
 17612  0019F2                     l12906:
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;RouteManager.c: 66: {
 17616                           ;RouteManager.c: 67: entry = &routingTable[i];
 17617  0019F2  0E09               	movlw	9
 17618  0019F4  0397               	mulwf	RouteManagerPerformUpdate@i& (0+255),b
 17619  0019F6  CFF3 F093          	movff	prodl,??_RouteManagerPerformUpdate
 17620  0019FA  CFF4 F094          	movff	prodh,??_RouteManagerPerformUpdate+1
 17621  0019FE  0398               	mulwf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 17622  001A00  50F3               	movf	prodl,w,c
 17623  001A02  2794               	addwf	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 17624  001A04  0E98               	movlw	low _routingTable
 17625  001A06  2593               	addwf	??_RouteManagerPerformUpdate& (0+255),w,b
 17626  001A08  6FA1               	movwf	RouteManagerPerformUpdate@entry& (0+255),b
 17627  001A0A  0E06               	movlw	high _routingTable
 17628  001A0C  2194               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 17629  001A0E  6FA2               	movwf	(RouteManagerPerformUpdate@entry+1)& (0+255),b
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;RouteManager.c: 70: if (isInvalidAddress(entry->info.parent) || (isSameAddress(entry->i
      +                          nfo.parent, *NetworkManagerGetMyAddress())))
 17633  001A10  EE20 F002          	lfsr	2,2
 17634  001A14  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17635  001A16  26D9               	addwf	fsr2l,f,c
 17636  001A18  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17637  001A1A  22DA               	addwfc	fsr2h,f,c
 17638  001A1C  CFDE F086          	movff	postinc2,isInvalidAddress@address
 17639  001A20  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 17640  001A24  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 17641  001A28  0900               	iorlw	0
 17642  001A2A  E001 D095          	bnz	l12930
 17643                           
 17644                           ; BSR set to: 0
 17645  001A2E  EE20 F002          	lfsr	2,2
 17646  001A32  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17647  001A34  26D9               	addwf	fsr2l,f,c
 17648  001A36  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17649  001A38  22DA               	addwfc	fsr2h,f,c
 17650  001A3A  CFDE F07D          	movff	postinc2,isSameAddress@a1
 17651  001A3E  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 17652  001A42  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
 17653  001A46  C073  FFD9         	movff	?_NetworkManagerGetMyAddress,fsr2l
 17654  001A4A  C074  FFDA         	movff	?_NetworkManagerGetMyAddress+1,fsr2h
 17655  001A4E  CFDE F07F          	movff	postinc2,isSameAddress@a2
 17656  001A52  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 17657  001A56  ECB1  F03A         	call	_isSameAddress	;wreg free
 17658  001A5A  0900               	iorlw	0
 17659  001A5C  E17D               	bnz	l12930
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;RouteManager.c: 74: {
 17663                           ;RouteManager.c: 75: linkEtx = LELinkQualityGet(entry->neighbor,0);
 17664  001A5E  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 17665  001A62  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 17666  001A66  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 17667  001A6A  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 17668  001A6E  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
 17669  001A70  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
 17670  001A72  EC29  F033         	call	_LELinkQualityGet	;wreg free
 17671  001A76  C085  F095         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@linkEtx
 17672  001A7A  C086  F096         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@linkEtx+1
 17673                           
 17674                           ;RouteManager.c: 76: pathEtx = LELinkQualityGet(entry->neighbor,entry->info.etx);
 17675  001A7E  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 17676  001A82  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 17677  001A86  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 17678  001A8A  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 17679  001A8E  0100               	movlb	0	; () banked
 17680  001A90  EE20 F004          	lfsr	2,4
 17681  001A94  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17682  001A96  26D9               	addwf	fsr2l,f,c
 17683  001A98  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17684  001A9A  22DA               	addwfc	fsr2h,f,c
 17685  001A9C  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 17686  001AA0  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 17687  001AA4  EC29  F033         	call	_LELinkQualityGet	;wreg free
 17688  001AA8  C085  F099         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@pathEtx
 17689  001AAC  C086  F09A         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@pathEtx+1
 17690                           
 17691                           ;RouteManager.c: 78: if (isSameAddress(entry->neighbor, r->parent))
 17692  001AB0  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 17693  001AB4  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 17694  001AB8  CFDE F07D          	movff	postinc2,isSameAddress@a1
 17695  001ABC  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 17696  001AC0  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 17697  001AC4  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 17698  001AC8  CFDE F07F          	movff	postinc2,isSameAddress@a2
 17699  001ACC  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 17700  001AD0  ECB1  F03A         	call	_isSameAddress	;wreg free
 17701  001AD4  0900               	iorlw	0
 17702  001AD6  E023               	bz	l12920
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;RouteManager.c: 79: {
 17706                           ;RouteManager.c: 80: currentEtx = pathEtx;
 17707  001AD8  C099  F09B         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@currentEtx
 17708  001ADC  C09A  F09C         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@currentEtx+1
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;RouteManager.c: 82: r->etx = entry->info.etx;
 17712  001AE0  EE20 F004          	lfsr	2,4
 17713  001AE4  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17714  001AE6  26D9               	addwf	fsr2l,f,c
 17715  001AE8  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17716  001AEA  22DA               	addwfc	fsr2h,f,c
 17717  001AEC  EE10 F002          	lfsr	1,2
 17718  001AF0  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17719  001AF2  26E1               	addwf	fsr1l,f,c
 17720  001AF4  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17721  001AF6  22E2               	addwfc	fsr1h,f,c
 17722  001AF8  CFDE FFE6          	movff	postinc2,postinc1
 17723  001AFC  CFDD FFE5          	movff	postdec2,postdec1
 17724                           
 17725                           ;RouteManager.c: 83: r->congested = entry->info.congested;
 17726  001B00  EE20 F007          	lfsr	2,7
 17727  001B04  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17728  001B06  26D9               	addwf	fsr2l,f,c
 17729  001B08  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17730  001B0A  22DA               	addwfc	fsr2h,f,c
 17731  001B0C  EE10 F005          	lfsr	1,5
 17732  001B10  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17733  001B12  26E1               	addwf	fsr1l,f,c
 17734  001B14  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17735  001B16  22E2               	addwfc	fsr1h,f,c
 17736  001B18  CFDF FFE7          	movff	indf2,indf1
 17737                           
 17738                           ;RouteManager.c: 84: }else if((entry->info.congested) || (passLinkEtxThreshold(linkEtx)=
      +                          =0) )
 17739  001B1C  D01D               	goto	l12930
 17740  001B1E                     l12920:
 17741                           
 17742                           ; BSR set to: 0
 17743  001B1E  EE20 F007          	lfsr	2,7
 17744  001B22  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 17745  001B24  26D9               	addwf	fsr2l,f,c
 17746  001B26  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 17747  001B28  22DA               	addwfc	fsr2h,f,c
 17748  001B2A  50DF               	movf	indf2,w,c
 17749  001B2C  E115               	bnz	l12930
 17750                           
 17751                           ; BSR set to: 0
 17752  001B2E  C095  F073         	movff	RouteManagerPerformUpdate@linkEtx,passLinkEtxThreshold@etx
 17753  001B32  C096  F074         	movff	RouteManagerPerformUpdate@linkEtx+1,passLinkEtxThreshold@etx+1
 17754  001B36  ECC6  F03B         	call	_passLinkEtxThreshold	;wreg free
 17755  001B3A  0900               	iorlw	0
 17756  001B3C  E00D               	bz	l12930
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;RouteManager.c: 88: {
 17760                           ;RouteManager.c: 113: if (pathEtx < minEtx)
 17761  001B3E  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17762  001B40  5D99               	subwf	RouteManagerPerformUpdate@pathEtx& (0+255),w,b
 17763  001B42  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17764  001B44  599A               	subwfb	(RouteManagerPerformUpdate@pathEtx+1)& (0+255),w,b
 17765  001B46  E208               	bc	l12930
 17766                           
 17767                           ; BSR set to: 0
 17768                           ;RouteManager.c: 115: {
 17769                           ;RouteManager.c: 116: minEtx = pathEtx;
 17770  001B48  C099  F09F         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@minEtx
 17771  001B4C  C09A  F0A0         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@minEtx+1
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;RouteManager.c: 117: best = entry;
 17775  001B50  C0A1  F09D         	movff	RouteManagerPerformUpdate@entry,RouteManagerPerformUpdate@best
 17776  001B54  C0A2  F09E         	movff	RouteManagerPerformUpdate@entry+1,RouteManagerPerformUpdate@best+1
 17777  001B58                     l12930:
 17778                           
 17779                           ; BSR set to: 0
 17780  001B58  4B97               	infsnz	RouteManagerPerformUpdate@i& (0+255),f,b
 17781  001B5A  2B98               	incf	(RouteManagerPerformUpdate@i+1)& (0+255),f,b
 17782  001B5C                     l12932:
 17783                           
 17784                           ; BSR set to: 0
 17785  001B5C  51EB               	movf	_routingTableActive& (0+255),w,b
 17786  001B5E  5D97               	subwf	RouteManagerPerformUpdate@i& (0+255),w,b
 17787  001B60  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 17788  001B62  5998               	subwfb	(RouteManagerPerformUpdate@i+1)& (0+255),w,b
 17789  001B64  E201 D745          	bnc	l12906
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;RouteManager.c: 118: }
 17793                           ;RouteManager.c: 119: }
 17794                           ;RouteManager.c: 120: }
 17795                           ;RouteManager.c: 121: }
 17796                           ;RouteManager.c: 136: if (minEtx != 0xffff)
 17797  001B68  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17798  001B6A  E103               	bnz	u14150
 17799  001B6C  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17800  001B6E  E101 D07F          	bz	l12956
 17801  001B72                     u14150:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;RouteManager.c: 137: {
 17805                           ;RouteManager.c: 138: if (currentEtx == 0xffff ||
 17806                           ;RouteManager.c: 139: ((1 == r->congested) && (minEtx < (r->etx + 10))) ||
 17807                           ;RouteManager.c: 140: ((minEtx + ParentSwitchThreshold) < currentEtx) )
 17808  001B72  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 17809  001B74  E102               	bnz	u14160
 17810  001B76  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 17811  001B78  E026               	bz	l12944
 17812  001B7A                     u14160:
 17813                           
 17814                           ; BSR set to: 0
 17815  001B7A  EE20 F005          	lfsr	2,5
 17816  001B7E  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17817  001B80  26D9               	addwf	fsr2l,f,c
 17818  001B82  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17819  001B84  22DA               	addwfc	fsr2h,f,c
 17820  001B86  04DE               	decf	postinc2,w,c
 17821  001B88  E113               	bnz	l12942
 17822                           
 17823                           ; BSR set to: 0
 17824  001B8A  EE20 F002          	lfsr	2,2
 17825  001B8E  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17826  001B90  26D9               	addwf	fsr2l,f,c
 17827  001B92  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17828  001B94  22DA               	addwfc	fsr2h,f,c
 17829  001B96  CFDE F093          	movff	postinc2,??_RouteManagerPerformUpdate
 17830  001B9A  CFDD F094          	movff	postdec2,??_RouteManagerPerformUpdate+1
 17831  001B9E  0E0A               	movlw	10
 17832  001BA0  2793               	addwf	??_RouteManagerPerformUpdate& (0+255),f,b
 17833  001BA2  0E00               	movlw	0
 17834  001BA4  2394               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 17835  001BA6  5193               	movf	??_RouteManagerPerformUpdate& (0+255),w,b
 17836  001BA8  5D9F               	subwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17837  001BAA  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 17838  001BAC  59A0               	subwfb	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17839  001BAE  E30B               	bnc	l12944
 17840  001BB0                     l12942:
 17841                           
 17842                           ; BSR set to: 0
 17843  001BB0  0E0F               	movlw	15
 17844  001BB2  259F               	addwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17845  001BB4  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 17846  001BB6  0E00               	movlw	0
 17847  001BB8  21A0               	addwfc	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17848  001BBA  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 17849  001BBC  519B               	movf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 17850  001BBE  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 17851  001BC0  519C               	movf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 17852  001BC2  5994               	subwfb	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 17853  001BC4  E255               	bc	l12956
 17854  001BC6                     l12944:
 17855                           
 17856                           ; BSR set to: 0
 17857                           ;RouteManager.c: 141: {
 17858                           ;RouteManager.c: 148: LE_UnpinNeighbor(r->parent);
 17859  001BC6  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 17860  001BCA  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 17861  001BCE  CFDE F085          	movff	postinc2,LE_UnpinNeighbor@neighbor
 17862  001BD2  CFDD F086          	movff	postdec2,LE_UnpinNeighbor@neighbor+1
 17863  001BD6  ECC8  F038         	call	_LE_UnpinNeighbor	;wreg free
 17864                           
 17865                           ;RouteManager.c: 149: LE_PinNeighbor(best->neighbor);
 17866  001BDA  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 17867  001BDE  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 17868  001BE2  CFDE F085          	movff	postinc2,LE_PinNeighbor@neighbor
 17869  001BE6  CFDD F086          	movff	postdec2,LE_PinNeighbor@neighbor+1
 17870  001BEA  ECE6  F038         	call	_LE_PinNeighbor	;wreg free
 17871                           
 17872                           ;RouteManager.c: 150: LE_ClearDLQ(best->neighbor);
 17873  001BEE  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 17874  001BF2  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 17875  001BF6  CFDE F085          	movff	postinc2,LE_ClearDLQ@neighbor
 17876  001BFA  CFDD F086          	movff	postdec2,LE_ClearDLQ@neighbor+1
 17877  001BFE  ECB2  F036         	call	_LE_ClearDLQ	;wreg free
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;RouteManager.c: 152: r->parent = best->neighbor;
 17881  001C02  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 17882  001C06  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 17883  001C0A  C0A3  FFE1         	movff	RouteManagerPerformUpdate@r,fsr1l
 17884  001C0E  C0A4  FFE2         	movff	RouteManagerPerformUpdate@r+1,fsr1h
 17885  001C12  CFDE FFE6          	movff	postinc2,postinc1
 17886  001C16  CFDD FFE5          	movff	postdec2,postdec1
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;RouteManager.c: 153: r->etx = best->info.etx;
 17890  001C1A  EE20 F004          	lfsr	2,4
 17891  001C1E  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 17892  001C20  26D9               	addwf	fsr2l,f,c
 17893  001C22  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 17894  001C24  22DA               	addwfc	fsr2h,f,c
 17895  001C26  EE10 F002          	lfsr	1,2
 17896  001C2A  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17897  001C2C  26E1               	addwf	fsr1l,f,c
 17898  001C2E  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17899  001C30  22E2               	addwfc	fsr1h,f,c
 17900  001C32  CFDE FFE6          	movff	postinc2,postinc1
 17901  001C36  CFDD FFE5          	movff	postdec2,postdec1
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;RouteManager.c: 154: r->congested = best->info.congested;
 17905  001C3A  EE20 F007          	lfsr	2,7
 17906  001C3E  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 17907  001C40  26D9               	addwf	fsr2l,f,c
 17908  001C42  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 17909  001C44  22DA               	addwfc	fsr2h,f,c
 17910  001C46  EE10 F005          	lfsr	1,5
 17911  001C4A  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 17912  001C4C  26E1               	addwf	fsr1l,f,c
 17913  001C4E  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 17914  001C50  22E2               	addwfc	fsr1h,f,c
 17915  001C52  CFDF FFE7          	movff	indf2,indf1
 17916                           
 17917                           ; BSR set to: 0
 17918                           ;RouteManager.c: 155: if (currentEtx - minEtx > 20)
 17919  001C56  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17920  001C58  5D9B               	subwf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 17921  001C5A  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 17922  001C5C  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17923  001C5E  599C               	subwfb	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 17924  001C60  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 17925  001C62  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 17926  001C64  E103               	bnz	u14200
 17927  001C66  0E15               	movlw	21
 17928  001C68  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 17929  001C6A  E302               	bnc	l12956
 17930  001C6C                     u14200:
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;RouteManager.c: 156: {
 17934                           ;RouteManager.c: 157: BeaconManagerTrigger();
 17935  001C6C  EC47  F03C         	call	_BeaconManagerTrigger	;wreg free
 17936  001C70                     l12956:
 17937                           
 17938                           ;RouteManager.c: 158: }
 17939                           ;RouteManager.c: 159: }
 17940                           ;RouteManager.c: 160: }
 17941                           ;RouteManager.c: 165: if (justEvictedParent && isInvalidAddress(r->parent))
 17942  001C70  5043               	movf	_justEvictedParent,w,c
 17943  001C72  E00F               	bz	l12962
 17944  001C74  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 17945  001C78  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 17946  001C7C  CFDE F086          	movff	postinc2,isInvalidAddress@address
 17947  001C80  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 17948  001C84  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 17949  001C88  0900               	iorlw	0
 17950  001C8A  E003               	bz	l12962
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;RouteManager.c: 166: {
 17954                           ;RouteManager.c: 171: TransportManagerNoRoute();
 17955  001C8C  EC5B  F03C         	call	_TransportManagerNoRoute	;wreg free
 17956                           
 17957                           ;RouteManager.c: 172: }else if (!justEvictedParent && currentEtx == 0xffff && minEtx != 
      +                          0xffff)
 17958  001C90  D00D               	goto	l12970
 17959  001C92                     l12962:
 17960  001C92  5043               	movf	_justEvictedParent,w,c
 17961  001C94  E10B               	bnz	l12970
 17962  001C96  0100               	movlb	0	; () banked
 17963  001C98  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 17964  001C9A  E108               	bnz	l12970
 17965  001C9C  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 17966  001C9E  E106               	bnz	l12970
 17967                           
 17968                           ; BSR set to: 0
 17969  001CA0  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 17970  001CA2  E102               	bnz	u14250
 17971  001CA4  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 17972  001CA6  E002               	bz	l12970
 17973  001CA8                     u14250:
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;RouteManager.c: 173: {
 17977                           ;RouteManager.c: 178: TransportManagerRouteFound();
 17978  001CA8  EC5A  F03C         	call	_TransportManagerRouteFound	;wreg free
 17979  001CAC                     l12970:
 17980                           
 17981                           ;RouteManager.c: 179: }
 17982                           ;RouteManager.c: 180: justEvictedParent = 0;
 17983  001CAC  6A43               	clrf	_justEvictedParent,c
 17984  001CAE  0012               	return		;funcret
 17985  001CB0                     __end_of_RouteManagerPerformUpdate:
 17986                           	opt stack 0
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodh	equ	0xFF4
 17992                           prodl	equ	0xFF3
 17993                           intcon3	equ	0xFF0
 17994                           postinc0	equ	0xFEE
 17995                           plusw0	equ	0xFEB
 17996                           fsr0h	equ	0xFEA
 17997                           fsr0l	equ	0xFE9
 17998                           wreg	equ	0xFE8
 17999                           indf1	equ	0xFE7
 18000                           postinc1	equ	0xFE6
 18001                           postdec1	equ	0xFE5
 18002                           plusw1	equ	0xFE3
 18003                           fsr1h	equ	0xFE2
 18004                           fsr1l	equ	0xFE1
 18005                           indf2	equ	0xFDF
 18006                           postinc2	equ	0xFDE
 18007                           postdec2	equ	0xFDD
 18008                           plusw2	equ	0xFDB
 18009                           fsr2h	equ	0xFDA
 18010                           fsr2l	equ	0xFD9
 18011                           status	equ	0xFD8
 18012                           
 18013 ;; *************** function _passLinkEtxThreshold *****************
 18014 ;; Defined at:
 18015 ;;		line 190 in file "../RouteManager.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;  etx             2   19[BANK0 ] unsigned int 
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;		None
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      unsigned char 
 18022 ;; Registers used:
 18023 ;;		wreg, status,2, status,0
 18024 ;; Tracked objects:
 18025 ;;		On entry : F/0
 18026 ;;		On exit  : F/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;Total ram usage:        2 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    5
 18036 ;; This function calls:
 18037 ;;		Nothing
 18038 ;; This function is called by:
 18039 ;;		_RouteManagerPerformUpdate
 18040 ;;		_routingTableUpdateEntry
 18041 ;; This function uses a non-reentrant model
 18042 ;;
 18043                           
 18044                           	psect	text64
 18045  00778C                     __ptext64:
 18046                           	opt stack 0
 18047  00778C                     _passLinkEtxThreshold:
 18048                           	opt stack 20
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;RouteManager.c: 192: return (etx < rmETXThreshold);
 18052                           
 18053                           ;incstack = 0
 18054  00778C  5174               	movf	(passLinkEtxThreshold@etx+1)& (0+255),w,b
 18055  00778E  E104               	bnz	u13610
 18056  007790  0E32               	movlw	50
 18057  007792  5D73               	subwf	passLinkEtxThreshold@etx& (0+255),w,b
 18058  007794  A0D8               	btfss	status,0,c
 18059  007796  0C01               	retlw	1
 18060  007798                     u13610:
 18061                           
 18062                           ; BSR set to: 0
 18063  007798  0C00               	retlw	0	;funcret
 18064  00779A                     __end_of_passLinkEtxThreshold:
 18065                           	opt stack 0
 18066                           tblptru	equ	0xFF8
 18067                           tblptrh	equ	0xFF7
 18068                           tblptrl	equ	0xFF6
 18069                           tablat	equ	0xFF5
 18070                           prodh	equ	0xFF4
 18071                           prodl	equ	0xFF3
 18072                           intcon3	equ	0xFF0
 18073                           postinc0	equ	0xFEE
 18074                           plusw0	equ	0xFEB
 18075                           fsr0h	equ	0xFEA
 18076                           fsr0l	equ	0xFE9
 18077                           wreg	equ	0xFE8
 18078                           indf1	equ	0xFE7
 18079                           postinc1	equ	0xFE6
 18080                           postdec1	equ	0xFE5
 18081                           plusw1	equ	0xFE3
 18082                           fsr1h	equ	0xFE2
 18083                           fsr1l	equ	0xFE1
 18084                           indf2	equ	0xFDF
 18085                           postinc2	equ	0xFDE
 18086                           postdec2	equ	0xFDD
 18087                           plusw2	equ	0xFDB
 18088                           fsr2h	equ	0xFDA
 18089                           fsr2l	equ	0xFD9
 18090                           status	equ	0xFD8
 18091                           
 18092 ;; *************** function _TransportManagerRouteFound *****************
 18093 ;; Defined at:
 18094 ;;		line 278 in file "../TransportManager.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;		None
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      void 
 18101 ;; Registers used:
 18102 ;;		None
 18103 ;; Tracked objects:
 18104 ;;		On entry : F/0
 18105 ;;		On exit  : F/0
 18106 ;;		Unchanged: F/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18112 ;;Total ram usage:        0 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    5
 18115 ;; This function calls:
 18116 ;;		Nothing
 18117 ;; This function is called by:
 18118 ;;		_RouteManagerPerformUpdate
 18119 ;; This function uses a non-reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text65
 18123  0078B4                     __ptext65:
 18124                           	opt stack 0
 18125  0078B4                     _TransportManagerRouteFound:
 18126                           	opt stack 20
 18127                           
 18128                           ; BSR set to: 0
 18129                           
 18130                           ; BSR set to: 0
 18131                           ;incstack = 0
 18132  0078B4  0012               	return		;funcret
 18133  0078B6                     __end_of_TransportManagerRouteFound:
 18134                           	opt stack 0
 18135                           tblptru	equ	0xFF8
 18136                           tblptrh	equ	0xFF7
 18137                           tblptrl	equ	0xFF6
 18138                           tablat	equ	0xFF5
 18139                           prodh	equ	0xFF4
 18140                           prodl	equ	0xFF3
 18141                           intcon3	equ	0xFF0
 18142                           postinc0	equ	0xFEE
 18143                           plusw0	equ	0xFEB
 18144                           fsr0h	equ	0xFEA
 18145                           fsr0l	equ	0xFE9
 18146                           wreg	equ	0xFE8
 18147                           indf1	equ	0xFE7
 18148                           postinc1	equ	0xFE6
 18149                           postdec1	equ	0xFE5
 18150                           plusw1	equ	0xFE3
 18151                           fsr1h	equ	0xFE2
 18152                           fsr1l	equ	0xFE1
 18153                           indf2	equ	0xFDF
 18154                           postinc2	equ	0xFDE
 18155                           postdec2	equ	0xFDD
 18156                           plusw2	equ	0xFDB
 18157                           fsr2h	equ	0xFDA
 18158                           fsr2l	equ	0xFD9
 18159                           status	equ	0xFD8
 18160                           
 18161 ;; *************** function _TransportManagerNoRoute *****************
 18162 ;; Defined at:
 18163 ;;		line 273 in file "../TransportManager.c"
 18164 ;; Parameters:    Size  Location     Type
 18165 ;;		None
 18166 ;; Auto vars:     Size  Location     Type
 18167 ;;		None
 18168 ;; Return value:  Size  Location     Type
 18169 ;;                  1    wreg      void 
 18170 ;; Registers used:
 18171 ;;		None
 18172 ;; Tracked objects:
 18173 ;;		On entry : F/0
 18174 ;;		On exit  : F/0
 18175 ;;		Unchanged: F/0
 18176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18181 ;;Total ram usage:        0 bytes
 18182 ;; Hardware stack levels used:    1
 18183 ;; Hardware stack levels required when called:    5
 18184 ;; This function calls:
 18185 ;;		Nothing
 18186 ;; This function is called by:
 18187 ;;		_RouteManagerPerformUpdate
 18188 ;; This function uses a non-reentrant model
 18189 ;;
 18190                           
 18191                           	psect	text66
 18192  0078B6                     __ptext66:
 18193                           	opt stack 0
 18194  0078B6                     _TransportManagerNoRoute:
 18195                           	opt stack 20
 18196                           
 18197                           ; BSR set to: 0
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;incstack = 0
 18201  0078B6  0012               	return		;funcret
 18202  0078B8                     __end_of_TransportManagerNoRoute:
 18203                           	opt stack 0
 18204                           tblptru	equ	0xFF8
 18205                           tblptrh	equ	0xFF7
 18206                           tblptrl	equ	0xFF6
 18207                           tablat	equ	0xFF5
 18208                           prodh	equ	0xFF4
 18209                           prodl	equ	0xFF3
 18210                           intcon3	equ	0xFF0
 18211                           postinc0	equ	0xFEE
 18212                           plusw0	equ	0xFEB
 18213                           fsr0h	equ	0xFEA
 18214                           fsr0l	equ	0xFE9
 18215                           wreg	equ	0xFE8
 18216                           indf1	equ	0xFE7
 18217                           postinc1	equ	0xFE6
 18218                           postdec1	equ	0xFE5
 18219                           plusw1	equ	0xFE3
 18220                           fsr1h	equ	0xFE2
 18221                           fsr1l	equ	0xFE1
 18222                           indf2	equ	0xFDF
 18223                           postinc2	equ	0xFDE
 18224                           postdec2	equ	0xFDD
 18225                           plusw2	equ	0xFDB
 18226                           fsr2h	equ	0xFDA
 18227                           fsr2l	equ	0xFD9
 18228                           status	equ	0xFD8
 18229                           
 18230 ;; *************** function _LE_UnpinNeighbor *****************
 18231 ;; Defined at:
 18232 ;;		line 133 in file "../LinkEstimator.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;  nidx            2   42[BANK0 ] unsigned int 
 18237 ;;  res             1    0        enum E179
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      enum E180
 18240 ;; Registers used:
 18241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : F/0
 18244 ;;		On exit  : F/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18248 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;Total ram usage:        7 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:    8
 18254 ;; This function calls:
 18255 ;;		_le_findIdx
 18256 ;; This function is called by:
 18257 ;;		_RouteManagerPerformUpdate
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text67
 18262  007190                     __ptext67:
 18263                           	opt stack 0
 18264  007190                     _LE_UnpinNeighbor:
 18265                           	opt stack 17
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;LinkEstimator.c: 135: uint16_t nidx = le_findIdx(neighbor);
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;incstack = 0
 18272  007190  C085  F081         	movff	LE_UnpinNeighbor@neighbor,le_findIdx@ll_addr
 18273  007194  C086  F082         	movff	LE_UnpinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 18274  007198  EC84  F035         	call	_le_findIdx	;wreg free
 18275  00719C  6F8A               	movwf	LE_UnpinNeighbor@nidx& (0+255),b
 18276  00719E  6B8B               	clrf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;LinkEstimator.c: 137: if (nidx != 0xff)
 18280                           
 18281                           ; BSR set to: 0
 18282  0071A0  298A               	incf	LE_UnpinNeighbor@nidx& (0+255),w,b
 18283  0071A2  118B               	iorwf	(LE_UnpinNeighbor@nidx+1)& (0+255),w,b
 18284  0071A4  B4D8               	btfsc	status,2,c
 18285  0071A6  0012               	return	
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;LinkEstimator.c: 138: {
 18289                           ;LinkEstimator.c: 139: neighbor_tbl[nidx].flags &= ~0x8;
 18290  0071A8  0E0B               	movlw	11
 18291  0071AA  038A               	mulwf	LE_UnpinNeighbor@nidx& (0+255),b
 18292  0071AC  CFF3 F087          	movff	prodl,??_LE_UnpinNeighbor
 18293  0071B0  CFF4 F088          	movff	prodh,??_LE_UnpinNeighbor+1
 18294  0071B4  038B               	mulwf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 18295  0071B6  50F3               	movf	prodl,w,c
 18296  0071B8  2788               	addwf	(??_LE_UnpinNeighbor+1)& (0+255),f,b
 18297  0071BA  0E05               	movlw	low (_neighbor_tbl+5)
 18298  0071BC  2587               	addwf	??_LE_UnpinNeighbor& (0+255),w,b
 18299  0071BE  6ED9               	movwf	fsr2l,c
 18300  0071C0  0E05               	movlw	high (_neighbor_tbl+5)
 18301  0071C2  2188               	addwfc	(??_LE_UnpinNeighbor+1)& (0+255),w,b
 18302  0071C4  6EDA               	movwf	fsr2h,c
 18303  0071C6  0EF7               	movlw	247
 18304  0071C8  16DF               	andwf	indf2,f,c
 18305                           
 18306                           ; BSR set to: 0
 18307                           
 18308                           ; BSR set to: 0
 18309  0071CA  0CF7               	retlw	247	;funcret
 18310  0071CC                     __end_of_LE_UnpinNeighbor:
 18311                           	opt stack 0
 18312                           tblptru	equ	0xFF8
 18313                           tblptrh	equ	0xFF7
 18314                           tblptrl	equ	0xFF6
 18315                           tablat	equ	0xFF5
 18316                           prodh	equ	0xFF4
 18317                           prodl	equ	0xFF3
 18318                           intcon3	equ	0xFF0
 18319                           postinc0	equ	0xFEE
 18320                           plusw0	equ	0xFEB
 18321                           fsr0h	equ	0xFEA
 18322                           fsr0l	equ	0xFE9
 18323                           wreg	equ	0xFE8
 18324                           indf1	equ	0xFE7
 18325                           postinc1	equ	0xFE6
 18326                           postdec1	equ	0xFE5
 18327                           plusw1	equ	0xFE3
 18328                           fsr1h	equ	0xFE2
 18329                           fsr1l	equ	0xFE1
 18330                           indf2	equ	0xFDF
 18331                           postinc2	equ	0xFDE
 18332                           postdec2	equ	0xFDD
 18333                           plusw2	equ	0xFDB
 18334                           fsr2h	equ	0xFDA
 18335                           fsr2l	equ	0xFD9
 18336                           status	equ	0xFD8
 18337                           
 18338 ;; *************** function _LE_PinNeighbor *****************
 18339 ;; Defined at:
 18340 ;;		line 120 in file "../LinkEstimator.c"
 18341 ;; Parameters:    Size  Location     Type
 18342 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 18343 ;; Auto vars:     Size  Location     Type
 18344 ;;  nidx            2   42[BANK0 ] unsigned int 
 18345 ;;  res             1    0        enum E179
 18346 ;; Return value:  Size  Location     Type
 18347 ;;                  1    wreg      enum E180
 18348 ;; Registers used:
 18349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18350 ;; Tracked objects:
 18351 ;;		On entry : F/0
 18352 ;;		On exit  : F/0
 18353 ;;		Unchanged: 0/0
 18354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18356 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18358 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18359 ;;Total ram usage:        7 bytes
 18360 ;; Hardware stack levels used:    1
 18361 ;; Hardware stack levels required when called:    8
 18362 ;; This function calls:
 18363 ;;		_le_findIdx
 18364 ;; This function is called by:
 18365 ;;		_RouteManagerPerformUpdate
 18366 ;;		_RouteManagerProcessReceive
 18367 ;; This function uses a non-reentrant model
 18368 ;;
 18369                           
 18370                           	psect	text68
 18371  0071CC                     __ptext68:
 18372                           	opt stack 0
 18373  0071CC                     _LE_PinNeighbor:
 18374                           	opt stack 18
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;LinkEstimator.c: 122: uint16_t nidx = le_findIdx(neighbor);
 18378                           
 18379                           ; BSR set to: 0
 18380                           ;incstack = 0
 18381  0071CC  C085  F081         	movff	LE_PinNeighbor@neighbor,le_findIdx@ll_addr
 18382  0071D0  C086  F082         	movff	LE_PinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 18383  0071D4  EC84  F035         	call	_le_findIdx	;wreg free
 18384  0071D8  6F8A               	movwf	LE_PinNeighbor@nidx& (0+255),b
 18385  0071DA  6B8B               	clrf	(LE_PinNeighbor@nidx+1)& (0+255),b
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;LinkEstimator.c: 124: if (nidx != 0xff)
 18389                           
 18390                           ; BSR set to: 0
 18391  0071DC  298A               	incf	LE_PinNeighbor@nidx& (0+255),w,b
 18392  0071DE  118B               	iorwf	(LE_PinNeighbor@nidx+1)& (0+255),w,b
 18393  0071E0  B4D8               	btfsc	status,2,c
 18394  0071E2  0012               	return	
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;LinkEstimator.c: 125: {
 18398                           ;LinkEstimator.c: 126: neighbor_tbl[nidx].flags |= 0x8;
 18399  0071E4  0E0B               	movlw	11
 18400  0071E6  038A               	mulwf	LE_PinNeighbor@nidx& (0+255),b
 18401  0071E8  CFF3 F087          	movff	prodl,??_LE_PinNeighbor
 18402  0071EC  CFF4 F088          	movff	prodh,??_LE_PinNeighbor+1
 18403  0071F0  038B               	mulwf	(LE_PinNeighbor@nidx+1)& (0+255),b
 18404  0071F2  50F3               	movf	prodl,w,c
 18405  0071F4  2788               	addwf	(??_LE_PinNeighbor+1)& (0+255),f,b
 18406  0071F6  0E05               	movlw	low (_neighbor_tbl+5)
 18407  0071F8  2587               	addwf	??_LE_PinNeighbor& (0+255),w,b
 18408  0071FA  6ED9               	movwf	fsr2l,c
 18409  0071FC  0E05               	movlw	high (_neighbor_tbl+5)
 18410  0071FE  2188               	addwfc	(??_LE_PinNeighbor+1)& (0+255),w,b
 18411  007200  6EDA               	movwf	fsr2h,c
 18412  007202  0E00               	movlw	0
 18413  007204  86DB               	bsf	plusw2,3,c
 18414                           
 18415                           ; BSR set to: 0
 18416  007206  0C00               	retlw	0	;funcret
 18417  007208                     __end_of_LE_PinNeighbor:
 18418                           	opt stack 0
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           intcon3	equ	0xFF0
 18426                           postinc0	equ	0xFEE
 18427                           plusw0	equ	0xFEB
 18428                           fsr0h	equ	0xFEA
 18429                           fsr0l	equ	0xFE9
 18430                           wreg	equ	0xFE8
 18431                           indf1	equ	0xFE7
 18432                           postinc1	equ	0xFE6
 18433                           postdec1	equ	0xFE5
 18434                           plusw1	equ	0xFE3
 18435                           fsr1h	equ	0xFE2
 18436                           fsr1l	equ	0xFE1
 18437                           indf2	equ	0xFDF
 18438                           postinc2	equ	0xFDE
 18439                           postdec2	equ	0xFDD
 18440                           plusw2	equ	0xFDB
 18441                           fsr2h	equ	0xFDA
 18442                           fsr2l	equ	0xFD9
 18443                           status	equ	0xFD8
 18444                           
 18445 ;; *************** function _LE_ClearDLQ *****************
 18446 ;; Defined at:
 18447 ;;		line 145 in file "../LinkEstimator.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 18450 ;; Auto vars:     Size  Location     Type
 18451 ;;  nidx            2   44[BANK0 ] unsigned int 
 18452 ;;  ne              2   42[BANK0 ] PTR struct neighbor_tabl
 18453 ;;		 -> neighbor_tbl(220), 
 18454 ;;  res             1    0        enum E179
 18455 ;; Return value:  Size  Location     Type
 18456 ;;                  1    wreg      enum E180
 18457 ;; Registers used:
 18458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18459 ;; Tracked objects:
 18460 ;;		On entry : F/0
 18461 ;;		On exit  : F/0
 18462 ;;		Unchanged: 0/0
 18463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18465 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18466 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18467 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;Total ram usage:        9 bytes
 18469 ;; Hardware stack levels used:    1
 18470 ;; Hardware stack levels required when called:    8
 18471 ;; This function calls:
 18472 ;;		_le_findIdx
 18473 ;; This function is called by:
 18474 ;;		_RouteManagerPerformUpdate
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           	psect	text69
 18479  006D64                     __ptext69:
 18480                           	opt stack 0
 18481  006D64                     _LE_ClearDLQ:
 18482                           	opt stack 17
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;LinkEstimator.c: 149: uint16_t nidx = le_findIdx(neighbor);
 18486                           
 18487                           ; BSR set to: 0
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;incstack = 0
 18491  006D64  C085  F081         	movff	LE_ClearDLQ@neighbor,le_findIdx@ll_addr
 18492  006D68  C086  F082         	movff	LE_ClearDLQ@neighbor+1,le_findIdx@ll_addr+1
 18493  006D6C  EC84  F035         	call	_le_findIdx	;wreg free
 18494  006D70  6F8C               	movwf	LE_ClearDLQ@nidx& (0+255),b
 18495  006D72  6B8D               	clrf	(LE_ClearDLQ@nidx+1)& (0+255),b
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;LinkEstimator.c: 150: if (nidx != 0xff)
 18499  006D74  298C               	incf	LE_ClearDLQ@nidx& (0+255),w,b
 18500  006D76  118D               	iorwf	(LE_ClearDLQ@nidx+1)& (0+255),w,b
 18501  006D78  B4D8               	btfsc	status,2,c
 18502  006D7A  0012               	return	
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;LinkEstimator.c: 151: {
 18506                           ;LinkEstimator.c: 152: ne = &neighbor_tbl[nidx];
 18507  006D7C  0E0B               	movlw	11
 18508  006D7E  038C               	mulwf	LE_ClearDLQ@nidx& (0+255),b
 18509  006D80  CFF3 F087          	movff	prodl,??_LE_ClearDLQ
 18510  006D84  CFF4 F088          	movff	prodh,??_LE_ClearDLQ+1
 18511  006D88  038D               	mulwf	(LE_ClearDLQ@nidx+1)& (0+255),b
 18512  006D8A  50F3               	movf	prodl,w,c
 18513  006D8C  2788               	addwf	(??_LE_ClearDLQ+1)& (0+255),f,b
 18514  006D8E  0E00               	movlw	low _neighbor_tbl
 18515  006D90  2587               	addwf	??_LE_ClearDLQ& (0+255),w,b
 18516  006D92  6F8A               	movwf	LE_ClearDLQ@ne& (0+255),b
 18517  006D94  0E05               	movlw	high _neighbor_tbl
 18518  006D96  2188               	addwfc	(??_LE_ClearDLQ+1)& (0+255),w,b
 18519  006D98  6F8B               	movwf	(LE_ClearDLQ@ne+1)& (0+255),b
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;LinkEstimator.c: 153: ne->data_total = 0;
 18523  006D9A  EE20 F00A          	lfsr	2,10
 18524  006D9E  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 18525  006DA0  26D9               	addwf	fsr2l,f,c
 18526  006DA2  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 18527  006DA4  22DA               	addwfc	fsr2h,f,c
 18528  006DA6  6ADF               	clrf	indf2,c
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;LinkEstimator.c: 154: ne->data_success = 0;
 18532  006DA8  EE20 F009          	lfsr	2,9
 18533  006DAC  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 18534  006DAE  26D9               	addwf	fsr2l,f,c
 18535  006DB0  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 18536  006DB2  22DA               	addwfc	fsr2h,f,c
 18537  006DB4  6ADF               	clrf	indf2,c
 18538                           
 18539                           ; BSR set to: 0
 18540                           
 18541                           ; BSR set to: 0
 18542  006DB6  0C00               	retlw	0	;funcret
 18543  006DB8                     __end_of_LE_ClearDLQ:
 18544                           	opt stack 0
 18545                           tblptru	equ	0xFF8
 18546                           tblptrh	equ	0xFF7
 18547                           tblptrl	equ	0xFF6
 18548                           tablat	equ	0xFF5
 18549                           prodh	equ	0xFF4
 18550                           prodl	equ	0xFF3
 18551                           intcon3	equ	0xFF0
 18552                           postinc0	equ	0xFEE
 18553                           plusw0	equ	0xFEB
 18554                           fsr0h	equ	0xFEA
 18555                           fsr0l	equ	0xFE9
 18556                           wreg	equ	0xFE8
 18557                           indf1	equ	0xFE7
 18558                           postinc1	equ	0xFE6
 18559                           postdec1	equ	0xFE5
 18560                           plusw1	equ	0xFE3
 18561                           fsr1h	equ	0xFE2
 18562                           fsr1l	equ	0xFE1
 18563                           indf2	equ	0xFDF
 18564                           postinc2	equ	0xFDE
 18565                           postdec2	equ	0xFDD
 18566                           plusw2	equ	0xFDB
 18567                           fsr2h	equ	0xFDA
 18568                           fsr2l	equ	0xFD9
 18569                           status	equ	0xFD8
 18570                           
 18571 ;; *************** function _BeaconManagerTrigger *****************
 18572 ;; Defined at:
 18573 ;;		line 152 in file "../BeaconManager.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;		None
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;		None
 18578 ;; Return value:  Size  Location     Type
 18579 ;;                  1    wreg      void 
 18580 ;; Registers used:
 18581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18582 ;; Tracked objects:
 18583 ;;		On entry : F/0
 18584 ;;		On exit  : F/1
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18591 ;;Total ram usage:        0 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:   10
 18594 ;; This function calls:
 18595 ;;		_netResetInterval
 18596 ;; This function is called by:
 18597 ;;		_RouteManagerPerformUpdate
 18598 ;;		_RouteManagerProcessReceive
 18599 ;;		_NetworkManagerProcessIncomingData
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text70
 18604  00788E                     __ptext70:
 18605                           	opt stack 0
 18606  00788E                     _BeaconManagerTrigger:
 18607                           	opt stack 16
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;BeaconManager.c: 154: netResetInterval();
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;incstack = 0
 18614  00788E  EF5A  F03B         	goto	_netResetInterval	;wreg free
 18615  007892                     __end_of_BeaconManagerTrigger:
 18616                           	opt stack 0
 18617                           tblptru	equ	0xFF8
 18618                           tblptrh	equ	0xFF7
 18619                           tblptrl	equ	0xFF6
 18620                           tablat	equ	0xFF5
 18621                           prodh	equ	0xFF4
 18622                           prodl	equ	0xFF3
 18623                           intcon3	equ	0xFF0
 18624                           postinc0	equ	0xFEE
 18625                           plusw0	equ	0xFEB
 18626                           fsr0h	equ	0xFEA
 18627                           fsr0l	equ	0xFE9
 18628                           wreg	equ	0xFE8
 18629                           indf1	equ	0xFE7
 18630                           postinc1	equ	0xFE6
 18631                           postdec1	equ	0xFE5
 18632                           plusw1	equ	0xFE3
 18633                           fsr1h	equ	0xFE2
 18634                           fsr1l	equ	0xFE1
 18635                           indf2	equ	0xFDF
 18636                           postinc2	equ	0xFDE
 18637                           postdec2	equ	0xFDD
 18638                           plusw2	equ	0xFDB
 18639                           fsr2h	equ	0xFDA
 18640                           fsr2l	equ	0xFD9
 18641                           status	equ	0xFD8
 18642                           
 18643 ;; *************** function _RMRoutingTableCount *****************
 18644 ;; Defined at:
 18645 ;;		line 408 in file "../RouteManager.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;		None
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;		None
 18650 ;; Return value:  Size  Location     Type
 18651 ;;                  2   19[BANK0 ] unsigned int 
 18652 ;; Registers used:
 18653 ;;		None
 18654 ;; Tracked objects:
 18655 ;;		On entry : C/1
 18656 ;;		On exit  : C/0
 18657 ;;		Unchanged: C/0
 18658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;Total ram usage:        2 bytes
 18664 ;; Hardware stack levels used:    1
 18665 ;; Hardware stack levels required when called:    5
 18666 ;; This function calls:
 18667 ;;		Nothing
 18668 ;; This function is called by:
 18669 ;;		_NetworkManagerTask
 18670 ;; This function uses a non-reentrant model
 18671 ;;
 18672                           
 18673                           	psect	text71
 18674  007824                     __ptext71:
 18675                           	opt stack 0
 18676  007824                     _RMRoutingTableCount:
 18677                           	opt stack 22
 18678                           
 18679                           ;RouteManager.c: 410: return(routingTableActive);
 18680                           
 18681                           ; BSR set to: 1
 18682                           ;incstack = 0
 18683  007824  C0EB  F073         	movff	_routingTableActive,?_RMRoutingTableCount
 18684  007828  C0EC  F074         	movff	_routingTableActive+1,?_RMRoutingTableCount+1
 18685  00782C  0012               	return		;funcret
 18686  00782E                     __end_of_RMRoutingTableCount:
 18687                           	opt stack 0
 18688                           tblptru	equ	0xFF8
 18689                           tblptrh	equ	0xFF7
 18690                           tblptrl	equ	0xFF6
 18691                           tablat	equ	0xFF5
 18692                           prodh	equ	0xFF4
 18693                           prodl	equ	0xFF3
 18694                           intcon3	equ	0xFF0
 18695                           postinc0	equ	0xFEE
 18696                           plusw0	equ	0xFEB
 18697                           fsr0h	equ	0xFEA
 18698                           fsr0l	equ	0xFE9
 18699                           wreg	equ	0xFE8
 18700                           indf1	equ	0xFE7
 18701                           postinc1	equ	0xFE6
 18702                           postdec1	equ	0xFE5
 18703                           plusw1	equ	0xFE3
 18704                           fsr1h	equ	0xFE2
 18705                           fsr1l	equ	0xFE1
 18706                           indf2	equ	0xFDF
 18707                           postinc2	equ	0xFDE
 18708                           postdec2	equ	0xFDD
 18709                           plusw2	equ	0xFDB
 18710                           fsr2h	equ	0xFDA
 18711                           fsr2l	equ	0xFD9
 18712                           status	equ	0xFD8
 18713                           
 18714 ;; *************** function _MiApp_IsNetworkBusy *****************
 18715 ;; Defined at:
 18716 ;;		line 157 in file "../BeaconManager.c"
 18717 ;; Parameters:    Size  Location     Type
 18718 ;;		None
 18719 ;; Auto vars:     Size  Location     Type
 18720 ;;		None
 18721 ;; Return value:  Size  Location     Type
 18722 ;;                  1    wreg      unsigned char 
 18723 ;; Registers used:
 18724 ;;		wreg
 18725 ;; Tracked objects:
 18726 ;;		On entry : F/2
 18727 ;;		On exit  : F/2
 18728 ;;		Unchanged: F/0
 18729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18734 ;;Total ram usage:        0 bytes
 18735 ;; Hardware stack levels used:    1
 18736 ;; Hardware stack levels required when called:    5
 18737 ;; This function calls:
 18738 ;;		Nothing
 18739 ;; This function is called by:
 18740 ;;		_NetworkManagerTask
 18741 ;; This function uses a non-reentrant model
 18742 ;;
 18743                           
 18744                           	psect	text72
 18745  0078B8                     __ptext72:
 18746                           	opt stack 0
 18747  0078B8                     _MiApp_IsNetworkBusy:
 18748                           	opt stack 22
 18749                           
 18750                           ; BSR set to: 2
 18751                           
 18752                           ; BSR set to: 2
 18753                           ;BeaconManager.c: 159: return(0);
 18754                           
 18755                           ;incstack = 0
 18756  0078B8  0C00               	retlw	0	;funcret
 18757  0078BA                     __end_of_MiApp_IsNetworkBusy:
 18758                           	opt stack 0
 18759                           tblptru	equ	0xFF8
 18760                           tblptrh	equ	0xFF7
 18761                           tblptrl	equ	0xFF6
 18762                           tablat	equ	0xFF5
 18763                           prodh	equ	0xFF4
 18764                           prodl	equ	0xFF3
 18765                           intcon3	equ	0xFF0
 18766                           postinc0	equ	0xFEE
 18767                           plusw0	equ	0xFEB
 18768                           fsr0h	equ	0xFEA
 18769                           fsr0l	equ	0xFE9
 18770                           wreg	equ	0xFE8
 18771                           indf1	equ	0xFE7
 18772                           postinc1	equ	0xFE6
 18773                           postdec1	equ	0xFE5
 18774                           plusw1	equ	0xFE3
 18775                           fsr1h	equ	0xFE2
 18776                           fsr1l	equ	0xFE1
 18777                           indf2	equ	0xFDF
 18778                           postinc2	equ	0xFDE
 18779                           postdec2	equ	0xFDD
 18780                           plusw2	equ	0xFDB
 18781                           fsr2h	equ	0xFDA
 18782                           fsr2l	equ	0xFD9
 18783                           status	equ	0xFD8
 18784                           
 18785 ;; *************** function _BroadcastManagerTask *****************
 18786 ;; Defined at:
 18787 ;;		line 29 in file "../BroadcastManager.c"
 18788 ;; Parameters:    Size  Location     Type
 18789 ;;		None
 18790 ;; Auto vars:     Size  Location     Type
 18791 ;;  i               2  111[BANK0 ] unsigned int 
 18792 ;;  PANID           2  109[BANK0 ] unsigned int 
 18793 ;; Return value:  Size  Location     Type
 18794 ;;                  1    wreg      void 
 18795 ;; Registers used:
 18796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18797 ;; Tracked objects:
 18798 ;;		On entry : F/0
 18799 ;;		On exit  : F/0
 18800 ;;		Unchanged: 0/0
 18801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18803 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18804 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18805 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18806 ;;Total ram usage:       14 bytes
 18807 ;; Hardware stack levels used:    1
 18808 ;; Hardware stack levels required when called:   12
 18809 ;; This function calls:
 18810 ;;		_MSTickGet
 18811 ;;		_NetworkGetPANID
 18812 ;;		_memset
 18813 ;;		_radioBroadcast
 18814 ;; This function is called by:
 18815 ;;		_NetworkManagerTask
 18816 ;; This function uses a non-reentrant model
 18817 ;;
 18818                           
 18819                           	psect	text73
 18820  003074                     __ptext73:
 18821                           	opt stack 0
 18822  003074                     _BroadcastManagerTask:
 18823                           	opt stack 15
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;BroadcastManager.c: 31: uint16_t i;
 18827                           ;BroadcastManager.c: 32: uint16_t PANID;
 18828                           ;BroadcastManager.c: 34: for(i=0;i<6;i++)
 18829                           
 18830                           ; BSR set to: 2
 18831                           ;incstack = 0
 18832  003074  6BCF               	clrf	BroadcastManagerTask@i& (0+255),b
 18833  003076  6BD0               	clrf	(BroadcastManagerTask@i+1)& (0+255),b
 18834  003078                     l13686:
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;BroadcastManager.c: 35: {
 18838                           ;BroadcastManager.c: 36: if( (((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==0) &
      +                          & ((MSTickGet().msb>RbcQ[i].TxTime.msb) || ((MSTickGet().msb==RbcQ[i].TxTime.msb) && (MS
      +                          TickGet().lsb>=RbcQ[i].TxTime.lsb) ) ) )
 18839  003078  0E4A               	movlw	74
 18840  00307A  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18841  00307C  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 18842  003080  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 18843  003084  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18844  003086  50F3               	movf	prodl,w,c
 18845  003088  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 18846  00308A  0EE0               	movlw	low (_RbcQ+4)
 18847  00308C  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 18848  00308E  6ED9               	movwf	fsr2l,c
 18849  003090  0E08               	movlw	high (_RbcQ+4)
 18850  003092  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 18851  003094  6EDA               	movwf	fsr2h,c
 18852  003096  50DE               	movf	postinc2,w,c
 18853  003098  10DE               	iorwf	postinc2,w,c
 18854  00309A  10DE               	iorwf	postinc2,w,c
 18855  00309C  10DE               	iorwf	postinc2,w,c
 18856  00309E  E115               	bnz	l13690
 18857                           
 18858                           ; BSR set to: 0
 18859  0030A0  0E4A               	movlw	74
 18860  0030A2  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18861  0030A4  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 18862  0030A8  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 18863  0030AC  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18864  0030AE  50F3               	movf	prodl,w,c
 18865  0030B0  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 18866  0030B2  0EDC               	movlw	low _RbcQ
 18867  0030B4  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 18868  0030B6  6ED9               	movwf	fsr2l,c
 18869  0030B8  0E08               	movlw	high _RbcQ
 18870  0030BA  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 18871  0030BC  6EDA               	movwf	fsr2h,c
 18872  0030BE  50DE               	movf	postinc2,w,c
 18873  0030C0  10DE               	iorwf	postinc2,w,c
 18874  0030C2  10DE               	iorwf	postinc2,w,c
 18875  0030C4  10DE               	iorwf	postinc2,w,c
 18876  0030C6  E101 D0C4          	bz	l13706
 18877  0030CA                     l13690:
 18878                           
 18879                           ; BSR set to: 0
 18880  0030CA  EC58  F039         	call	_MSTickGet	;wreg free
 18881  0030CE  0E04               	movlw	4
 18882  0030D0  26E9               	addwf	fsr0l,f,c
 18883  0030D2  0E00               	movlw	0
 18884  0030D4  22EA               	addwfc	fsr0h,f,c
 18885  0030D6  0E4A               	movlw	74
 18886  0030D8  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18887  0030DA  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 18888  0030DE  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 18889  0030E2  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18890  0030E4  50F3               	movf	prodl,w,c
 18891  0030E6  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 18892  0030E8  0EE0               	movlw	low (_RbcQ+4)
 18893  0030EA  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 18894  0030EC  6ED9               	movwf	fsr2l,c
 18895  0030EE  0E08               	movlw	high (_RbcQ+4)
 18896  0030F0  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 18897  0030F2  6EDA               	movwf	fsr2h,c
 18898  0030F4  50EE               	movf	postinc0,w,c
 18899  0030F6  5CDE               	subwf	postinc2,w,c
 18900  0030F8  50EE               	movf	postinc0,w,c
 18901  0030FA  58DE               	subwfb	postinc2,w,c
 18902  0030FC  50EE               	movf	postinc0,w,c
 18903  0030FE  58DE               	subwfb	postinc2,w,c
 18904  003100  50EE               	movf	postinc0,w,c
 18905  003102  58DE               	subwfb	postinc2,w,c
 18906  003104  E33C               	bnc	l13696
 18907                           
 18908                           ; BSR set to: 0
 18909  003106  EC58  F039         	call	_MSTickGet	;wreg free
 18910  00310A  0E04               	movlw	4
 18911  00310C  26E9               	addwf	fsr0l,f,c
 18912  00310E  0E00               	movlw	0
 18913  003110  22EA               	addwfc	fsr0h,f,c
 18914  003112  0E4A               	movlw	74
 18915  003114  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18916  003116  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 18917  00311A  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 18918  00311E  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18919  003120  50F3               	movf	prodl,w,c
 18920  003122  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 18921  003124  0EE0               	movlw	low (_RbcQ+4)
 18922  003126  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 18923  003128  6ED9               	movwf	fsr2l,c
 18924  00312A  0E08               	movlw	high (_RbcQ+4)
 18925  00312C  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 18926  00312E  6EDA               	movwf	fsr2h,c
 18927  003130  50DE               	movf	postinc2,w,c
 18928  003132  18EE               	xorwf	postinc0,w,c
 18929  003134  E109               	bnz	u15411
 18930  003136  50DE               	movf	postinc2,w,c
 18931  003138  18EE               	xorwf	postinc0,w,c
 18932  00313A  E106               	bnz	u15411
 18933  00313C  50DE               	movf	postinc2,w,c
 18934  00313E  18EE               	xorwf	postinc0,w,c
 18935  003140  E103               	bnz	u15411
 18936  003142  50DE               	movf	postinc2,w,c
 18937  003144  18EE               	xorwf	postinc0,w,c
 18938  003146  A4D8               	btfss	status,2,c
 18939  003148                     u15411:
 18940  003148  D084               	goto	l13706
 18941                           
 18942                           ; BSR set to: 0
 18943  00314A  EC58  F039         	call	_MSTickGet	;wreg free
 18944  00314E  0E4A               	movlw	74
 18945  003150  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18946  003152  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 18947  003156  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 18948  00315A  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18949  00315C  50F3               	movf	prodl,w,c
 18950  00315E  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 18951  003160  0EDC               	movlw	low _RbcQ
 18952  003162  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 18953  003164  6ED9               	movwf	fsr2l,c
 18954  003166  0E08               	movlw	high _RbcQ
 18955  003168  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 18956  00316A  6EDA               	movwf	fsr2h,c
 18957  00316C  50DE               	movf	postinc2,w,c
 18958  00316E  5CEE               	subwf	postinc0,w,c
 18959  003170  50DE               	movf	postinc2,w,c
 18960  003172  58EE               	subwfb	postinc0,w,c
 18961  003174  50DE               	movf	postinc2,w,c
 18962  003176  58EE               	subwfb	postinc0,w,c
 18963  003178  50DE               	movf	postinc2,w,c
 18964  00317A  58EE               	subwfb	postinc0,w,c
 18965  00317C  E36A               	bnc	l13706
 18966  00317E                     l13696:
 18967                           
 18968                           ; BSR set to: 0
 18969                           ;BroadcastManager.c: 37: {
 18970                           ;BroadcastManager.c: 39: if((RbcQ[i].Flags & (1<<1))>0)
 18971  00317E  0E4A               	movlw	74
 18972  003180  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 18973  003182  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 18974  003186  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 18975  00318A  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 18976  00318C  50F3               	movf	prodl,w,c
 18977  00318E  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 18978  003190  0E25               	movlw	low (_RbcQ+73)
 18979  003192  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 18980  003194  6ED9               	movwf	fsr2l,c
 18981  003196  0E09               	movlw	high (_RbcQ+73)
 18982  003198  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 18983  00319A  6EDA               	movwf	fsr2h,c
 18984  00319C  A2DF               	btfss	indf2,1,c
 18985  00319E  D003               	goto	l13700
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;BroadcastManager.c: 40: {
 18989                           ;BroadcastManager.c: 41: PANID=0xffff;
 18990  0031A0  69CD               	setf	BroadcastManagerTask@PANID& (0+255),b
 18991  0031A2  69CE               	setf	(BroadcastManagerTask@PANID+1)& (0+255),b
 18992                           
 18993                           ;BroadcastManager.c: 42: }else
 18994  0031A4  D006               	goto	l13702
 18995  0031A6                     l13700:
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;BroadcastManager.c: 43: {
 18999                           ;BroadcastManager.c: 44: PANID=NetworkGetPANID();
 19000  0031A6  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 19001  0031AA  C073  F0CD         	movff	?_NetworkGetPANID,BroadcastManagerTask@PANID
 19002  0031AE  C074  F0CE         	movff	?_NetworkGetPANID+1,BroadcastManagerTask@PANID+1
 19003  0031B2                     l13702:
 19004                           
 19005                           ;BroadcastManager.c: 45: }
 19006                           ;BroadcastManager.c: 46: radioBroadcast(RbcQ[i].pkt,RbcQ[i].pktSize,PANID,(RbcQ[i].Flags
      +                           & (1<<0))>0);
 19007  0031B2  0E4A               	movlw	74
 19008  0031B4  0100               	movlb	0	; () banked
 19009  0031B6  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19010  0031B8  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19011  0031BC  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19012  0031C0  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19013  0031C2  50F3               	movf	prodl,w,c
 19014  0031C4  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19015  0031C6  0EE4               	movlw	low (_RbcQ+8)
 19016  0031C8  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19017  0031CA  6FBC               	movwf	radioBroadcast@data& (0+255),b
 19018  0031CC  0E08               	movlw	high (_RbcQ+8)
 19019  0031CE  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19020  0031D0  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 19021  0031D2  0E4A               	movlw	74
 19022  0031D4  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19023  0031D6  CFF3 F0C5          	movff	prodl,??_BroadcastManagerTask+2
 19024  0031DA  CFF4 F0C6          	movff	prodh,??_BroadcastManagerTask+3
 19025  0031DE  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19026  0031E0  50F3               	movf	prodl,w,c
 19027  0031E2  27C6               	addwf	(??_BroadcastManagerTask+3)& (0+255),f,b
 19028  0031E4  0E24               	movlw	low (_RbcQ+72)
 19029  0031E6  25C5               	addwf	(??_BroadcastManagerTask+2)& (0+255),w,b
 19030  0031E8  6ED9               	movwf	fsr2l,c
 19031  0031EA  0E09               	movlw	high (_RbcQ+72)
 19032  0031EC  21C6               	addwfc	(??_BroadcastManagerTask+3)& (0+255),w,b
 19033  0031EE  6EDA               	movwf	fsr2h,c
 19034  0031F0  50DF               	movf	indf2,w,c
 19035  0031F2  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 19036  0031F4  C0CD  F0BF         	movff	BroadcastManagerTask@PANID,radioBroadcast@PANID
 19037  0031F8  C0CE  F0C0         	movff	BroadcastManagerTask@PANID+1,radioBroadcast@PANID+1
 19038  0031FC  0E4A               	movlw	74
 19039  0031FE  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19040  003200  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 19041  003204  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 19042  003208  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19043  00320A  50F3               	movf	prodl,w,c
 19044  00320C  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19045  00320E  0E25               	movlw	low (_RbcQ+73)
 19046  003210  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19047  003212  6ED9               	movwf	fsr2l,c
 19048  003214  0E09               	movlw	high (_RbcQ+73)
 19049  003216  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19050  003218  6EDA               	movwf	fsr2h,c
 19051  00321A  0E01               	movlw	1
 19052  00321C  A0DF               	btfss	indf2,0,c
 19053  00321E  0E00               	movlw	0
 19054  003220  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 19055  003222  ECFC  F034         	call	_radioBroadcast	;wreg free
 19056                           
 19057                           ; BSR set to: 0
 19058                           ;BroadcastManager.c: 47: memset(&RbcQ[i].TxTime,0x00,sizeof(TickMS));
 19059  003226  0E4A               	movlw	74
 19060  003228  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 19061  00322A  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 19062  00322E  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 19063  003232  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19064  003234  50F3               	movf	prodl,w,c
 19065  003236  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19066  003238  0EDC               	movlw	low _RbcQ
 19067  00323A  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19068  00323C  6F73               	movwf	memset@p1& (0+255),b
 19069  00323E  0E08               	movlw	high _RbcQ
 19070  003240  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19071  003242  6F74               	movwf	(memset@p1+1)& (0+255),b
 19072  003244  6B76               	clrf	(memset@c+1)& (0+255),b
 19073  003246  6B75               	clrf	memset@c& (0+255),b
 19074  003248  6B78               	clrf	(memset@n+1)& (0+255),b
 19075  00324A  0E08               	movlw	8
 19076  00324C  6F77               	movwf	memset@n& (0+255),b
 19077  00324E  EC4C  F03A         	call	_memset	;wreg free
 19078  003252                     l13706:
 19079                           
 19080                           ; BSR set to: 0
 19081  003252  4BCF               	infsnz	BroadcastManagerTask@i& (0+255),f,b
 19082  003254  2BD0               	incf	(BroadcastManagerTask@i+1)& (0+255),f,b
 19083                           
 19084                           ; BSR set to: 0
 19085  003256  51D0               	movf	(BroadcastManagerTask@i+1)& (0+255),w,b
 19086  003258  E104               	bnz	u15460
 19087  00325A  0E06               	movlw	6
 19088  00325C  5DCF               	subwf	BroadcastManagerTask@i& (0+255),w,b
 19089  00325E  E201 D70B          	bnc	l13686
 19090  003262                     u15460:
 19091                           
 19092                           ; BSR set to: 0
 19093  003262  0012               	return		;funcret
 19094  003264                     __end_of_BroadcastManagerTask:
 19095                           	opt stack 0
 19096                           tblptru	equ	0xFF8
 19097                           tblptrh	equ	0xFF7
 19098                           tblptrl	equ	0xFF6
 19099                           tablat	equ	0xFF5
 19100                           prodh	equ	0xFF4
 19101                           prodl	equ	0xFF3
 19102                           intcon3	equ	0xFF0
 19103                           postinc0	equ	0xFEE
 19104                           plusw0	equ	0xFEB
 19105                           fsr0h	equ	0xFEA
 19106                           fsr0l	equ	0xFE9
 19107                           wreg	equ	0xFE8
 19108                           indf1	equ	0xFE7
 19109                           postinc1	equ	0xFE6
 19110                           postdec1	equ	0xFE5
 19111                           plusw1	equ	0xFE3
 19112                           fsr1h	equ	0xFE2
 19113                           fsr1l	equ	0xFE1
 19114                           indf2	equ	0xFDF
 19115                           postinc2	equ	0xFDE
 19116                           postdec2	equ	0xFDD
 19117                           plusw2	equ	0xFDB
 19118                           fsr2h	equ	0xFDA
 19119                           fsr2l	equ	0xFD9
 19120                           status	equ	0xFD8
 19121                           
 19122 ;; *************** function _BeaconManagerTask *****************
 19123 ;; Defined at:
 19124 ;;		line 46 in file "../BeaconManager.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;		None
 19127 ;; Auto vars:     Size  Location     Type
 19128 ;;		None
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  1    wreg      void 
 19131 ;; Registers used:
 19132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19133 ;; Tracked objects:
 19134 ;;		On entry : C/1
 19135 ;;		On exit  : F/1
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;Total ram usage:        0 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:   13
 19145 ;; This function calls:
 19146 ;;		_MSTickGet
 19147 ;;		_MSTickGetDiffNow
 19148 ;;		_netDecayInterval
 19149 ;;		_networkSendBeacon
 19150 ;; This function is called by:
 19151 ;;		_NetworkManagerTask
 19152 ;; This function uses a non-reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text74
 19156  005394                     __ptext74:
 19157                           	opt stack 0
 19158  005394                     _BeaconManagerTask:
 19159                           	opt stack 14
 19160                           
 19161                           ;BeaconManager.c: 48: switch(BMState)
 19162                           
 19163                           ; BSR set to: 0
 19164                           ;incstack = 0
 19165  005394  D068               	goto	l13674
 19166  005396                     l13650:
 19167                           
 19168                           ; BSR set to: 1
 19169                           ;BeaconManager.c: 51: BMState=BM_Idle;
 19170  005396  0E01               	movlw	1
 19171  005398  6FD3               	movwf	_BMState& (0+255),b
 19172                           
 19173                           ;BeaconManager.c: 52: break;
 19174  00539A  0C01               	retlw	1
 19175  00539C                     l13652:
 19176                           
 19177                           ; BSR set to: 1
 19178                           ;BeaconManager.c: 58: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 19179  00539C  EE22  F032         	lfsr	2,_tInterval
 19180  0053A0  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 19181  0053A4  0E07               	movlw	7
 19182  0053A6                     u15321:
 19183  0053A6  CFDB FFEB          	movff	plusw2,plusw0
 19184  0053AA  06E8               	decf	wreg,f,c
 19185  0053AC  E2FC               	bc	u15321
 19186  0053AE  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 19187  0053B2  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 19188  0053B4  0101               	movlb	1	; () banked
 19189  0053B6  5DBE               	subwf	_intervalDelay& (0+255),w,b
 19190  0053B8  0100               	movlb	0	; () banked
 19191  0053BA  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19192  0053BC  0101               	movlb	1	; () banked
 19193  0053BE  59BF               	subwfb	(_intervalDelay+1)& (0+255),w,b
 19194  0053C0  0100               	movlb	0	; () banked
 19195  0053C2  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19196  0053C4  0101               	movlb	1	; () banked
 19197  0053C6  59C0               	subwfb	(_intervalDelay+2)& (0+255),w,b
 19198  0053C8  0100               	movlb	0	; () banked
 19199  0053CA  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19200  0053CC  0101               	movlb	1	; () banked
 19201  0053CE  59C1               	subwfb	(_intervalDelay+3)& (0+255),w,b
 19202  0053D0  B0D8               	btfsc	status,0,c
 19203  0053D2  0012               	return	
 19204                           
 19205                           ; BSR set to: 1
 19206                           ;BeaconManager.c: 59: {
 19207                           ;BeaconManager.c: 62: networkSendBeacon();
 19208  0053D4  EC1F  F017         	call	_networkSendBeacon	;wreg free
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;BeaconManager.c: 63: intervalDelay=(currentInterval-intervalDelay);
 19212  0053D8  0101               	movlb	1	; () banked
 19213  0053DA  51BE               	movf	_intervalDelay& (0+255),w,b
 19214  0053DC  5DB6               	subwf	_currentInterval& (0+255),w,b
 19215  0053DE  6FBE               	movwf	_intervalDelay& (0+255),b
 19216  0053E0  51BF               	movf	(_intervalDelay+1)& (0+255),w,b
 19217  0053E2  59B7               	subwfb	(_currentInterval+1)& (0+255),w,b
 19218  0053E4  6FBF               	movwf	(_intervalDelay+1)& (0+255),b
 19219  0053E6  51C0               	movf	(_intervalDelay+2)& (0+255),w,b
 19220  0053E8  59B8               	subwfb	(_currentInterval+2)& (0+255),w,b
 19221  0053EA  6FC0               	movwf	(_intervalDelay+2)& (0+255),b
 19222  0053EC  51C1               	movf	(_intervalDelay+3)& (0+255),w,b
 19223  0053EE  59B9               	subwfb	(_currentInterval+3)& (0+255),w,b
 19224  0053F0  6FC1               	movwf	(_intervalDelay+3)& (0+255),b
 19225                           
 19226                           ; BSR set to: 1
 19227                           ;BeaconManager.c: 64: tInterval=MSTickGet();
 19228  0053F2  EC58  F039         	call	_MSTickGet	;wreg free
 19229  0053F6  EE22  F032         	lfsr	2,_tInterval
 19230  0053FA  0E07               	movlw	7
 19231  0053FC                     u15341:
 19232  0053FC  CFEB FFDB          	movff	plusw0,plusw2
 19233  005400  06E8               	decf	wreg,f,c
 19234  005402  E2FC               	bc	u15341
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;BeaconManager.c: 65: BMState=BM_WaitRemaining;
 19238  005404  0E03               	movlw	3
 19239  005406  0101               	movlb	1	; () banked
 19240  005408  6FD3               	movwf	_BMState& (0+255),b
 19241  00540A  0C03               	retlw	3
 19242  00540C                     l13662:
 19243                           
 19244                           ; BSR set to: 1
 19245                           ;BeaconManager.c: 70: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 19246  00540C  EE22  F032         	lfsr	2,_tInterval
 19247  005410  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 19248  005414  0E07               	movlw	7
 19249  005416                     u15351:
 19250  005416  CFDB FFEB          	movff	plusw2,plusw0
 19251  00541A  06E8               	decf	wreg,f,c
 19252  00541C  E2FC               	bc	u15351
 19253  00541E  EC48  F031         	call	_MSTickGetDiffNow	;wreg free
 19254  005422  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 19255  005424  0101               	movlb	1	; () banked
 19256  005426  5DBE               	subwf	_intervalDelay& (0+255),w,b
 19257  005428  0100               	movlb	0	; () banked
 19258  00542A  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19259  00542C  0101               	movlb	1	; () banked
 19260  00542E  59BF               	subwfb	(_intervalDelay+1)& (0+255),w,b
 19261  005430  0100               	movlb	0	; () banked
 19262  005432  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19263  005434  0101               	movlb	1	; () banked
 19264  005436  59C0               	subwfb	(_intervalDelay+2)& (0+255),w,b
 19265  005438  0100               	movlb	0	; () banked
 19266  00543A  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19267  00543C  0101               	movlb	1	; () banked
 19268  00543E  59C1               	subwfb	(_intervalDelay+3)& (0+255),w,b
 19269  005440  B0D8               	btfsc	status,0,c
 19270  005442  0012               	return	
 19271                           
 19272                           ; BSR set to: 1
 19273                           ;BeaconManager.c: 71: {
 19274                           ;BeaconManager.c: 74: networkSendBeacon();
 19275  005444  EC1F  F017         	call	_networkSendBeacon	;wreg free
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;BeaconManager.c: 75: netDecayInterval();
 19279  005448  EC3D  F039         	call	_netDecayInterval	;wreg free
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;BeaconManager.c: 76: tInterval=MSTickGet();
 19283  00544C  EC58  F039         	call	_MSTickGet	;wreg free
 19284  005450  EE22  F032         	lfsr	2,_tInterval
 19285  005454  0E07               	movlw	7
 19286  005456                     u15371:
 19287  005456  CFEB FFDB          	movff	plusw0,plusw2
 19288  00545A  06E8               	decf	wreg,f,c
 19289  00545C  E2FC               	bc	u15371
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;BeaconManager.c: 77: BMState=BM_WaitInitial;
 19293  00545E  0E02               	movlw	2
 19294  005460  0101               	movlb	1	; () banked
 19295  005462  6FD3               	movwf	_BMState& (0+255),b
 19296  005464  0C02               	retlw	2
 19297  005466                     l13674:
 19298  005466  0101               	movlb	1	; () banked
 19299  005468  51D3               	movf	_BMState& (0+255),w,b
 19300                           
 19301                           ; Switch size 1, requested type "speed"
 19302                           ; Number of cases is 4, Range of values is 0 to 3
 19303                           ; switch strategies available:
 19304                           ; Name         Instructions Cycles
 19305                           ; simple_byte           13     7 (average)
 19306                           ;	Chosen strategy is simple_byte
 19307  00546A  E095               	bz	l13650
 19308  00546C  0A01               	xorlw	1	; case 1
 19309  00546E  B4D8               	btfsc	status,2,c
 19310  005470  0012               	return	
 19311  005472  0A03               	xorlw	3	; case 2
 19312  005474  E093               	bz	l13652
 19313  005476  0A01               	xorlw	1	; case 3
 19314  005478  E0C9               	bz	l13662
 19315                           
 19316                           ; BSR set to: 1
 19317  00547A  0012               	return		;funcret
 19318  00547C                     __end_of_BeaconManagerTask:
 19319                           	opt stack 0
 19320                           tblptru	equ	0xFF8
 19321                           tblptrh	equ	0xFF7
 19322                           tblptrl	equ	0xFF6
 19323                           tablat	equ	0xFF5
 19324                           prodh	equ	0xFF4
 19325                           prodl	equ	0xFF3
 19326                           intcon3	equ	0xFF0
 19327                           postinc0	equ	0xFEE
 19328                           plusw0	equ	0xFEB
 19329                           fsr0h	equ	0xFEA
 19330                           fsr0l	equ	0xFE9
 19331                           wreg	equ	0xFE8
 19332                           indf1	equ	0xFE7
 19333                           postinc1	equ	0xFE6
 19334                           postdec1	equ	0xFE5
 19335                           plusw1	equ	0xFE3
 19336                           fsr1h	equ	0xFE2
 19337                           fsr1l	equ	0xFE1
 19338                           indf2	equ	0xFDF
 19339                           postinc2	equ	0xFDE
 19340                           postdec2	equ	0xFDD
 19341                           plusw2	equ	0xFDB
 19342                           fsr2h	equ	0xFDA
 19343                           fsr2l	equ	0xFD9
 19344                           status	equ	0xFD8
 19345                           
 19346 ;; *************** function _networkSendBeacon *****************
 19347 ;; Defined at:
 19348 ;;		line 86 in file "../BeaconManager.c"
 19349 ;; Parameters:    Size  Location     Type
 19350 ;;		None
 19351 ;; Auto vars:     Size  Location     Type
 19352 ;;  hdr             2  113[BANK0 ] PTR struct net_routing_h
 19353 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 19354 ;;  r               2  111[BANK0 ] PTR struct route_info_t_
 19355 ;;		 -> routeInfo(7), 
 19356 ;;  bt              2  109[BANK0 ] unsigned int 
 19357 ;;  adr             2  107[BANK0 ] PTR struct addr_t_def
 19358 ;;		 -> MyAddress(2), 
 19359 ;;  last            2  105[BANK0 ] PTR unsigned char 
 19360 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 19361 ;;  parent          2    0        struct addr_t_def
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : F/1
 19368 ;;		On exit  : F/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19372 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19375 ;;Total ram usage:       16 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:   12
 19378 ;; This function calls:
 19379 ;;		_LEAppendNeighborInfo
 19380 ;;		_LELinkQualityGet
 19381 ;;		_NetworkAddressSizeGet
 19382 ;;		_NetworkGetDeviceType
 19383 ;;		_NetworkGetMyRouteInfo
 19384 ;;		_NetworkGetPANID
 19385 ;;		_NetworkHasRoute
 19386 ;;		_NetworkManagerGetMyAddress
 19387 ;;		_isInvalidAddress
 19388 ;;		_isNetworkSecurityEnabled
 19389 ;;		_memcpy
 19390 ;;		_memset
 19391 ;;		_radioBroadcast
 19392 ;; This function is called by:
 19393 ;;		_BeaconManagerTask
 19394 ;; This function uses a non-reentrant model
 19395 ;;
 19396                           
 19397                           	psect	text75
 19398  002E3E                     __ptext75:
 19399                           	opt stack 0
 19400  002E3E                     _networkSendBeacon:
 19401                           	opt stack 14
 19402                           
 19403                           ; BSR set to: 1
 19404                           ;BeaconManager.c: 88: net_routing_header_t *hdr;
 19405                           ;BeaconManager.c: 89: route_info_t *r=NetworkGetMyRouteInfo();
 19406                           
 19407                           ; BSR set to: 1
 19408                           ;incstack = 0
 19409  002E3E  ECE0  F03B         	call	_NetworkGetMyRouteInfo	;wreg free
 19410  002E42  C073  F0CF         	movff	?_NetworkGetMyRouteInfo,networkSendBeacon@r
 19411  002E46  C074  F0D0         	movff	?_NetworkGetMyRouteInfo+1,networkSendBeacon@r+1
 19412                           
 19413                           ; BSR set to: 0
 19414                           ;BeaconManager.c: 90: uint8_t* last;
 19415                           ;BeaconManager.c: 91: addr_t parent;
 19416                           ;BeaconManager.c: 93: memset(&beaconMessageBuffer,0x00,sizeof(beaconMessageBuffer));
 19417  002E4A  0E00               	movlw	low _beaconMessageBuffer
 19418  002E4C  6F73               	movwf	memset@p1& (0+255),b
 19419  002E4E  0E07               	movlw	high _beaconMessageBuffer
 19420  002E50  6F74               	movwf	(memset@p1+1)& (0+255),b
 19421  002E52  6B76               	clrf	(memset@c+1)& (0+255),b
 19422  002E54  6B75               	clrf	memset@c& (0+255),b
 19423  002E56  6B78               	clrf	(memset@n+1)& (0+255),b
 19424  002E58  0E48               	movlw	72
 19425  002E5A  6F77               	movwf	memset@n& (0+255),b
 19426  002E5C  EC4C  F03A         	call	_memset	;wreg free
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;BeaconManager.c: 95: hdr=(net_routing_header_t*)beaconMessageBuffer.data;
 19430  002E60  0E00               	movlw	low _beaconMessageBuffer
 19431  002E62  6FD1               	movwf	networkSendBeacon@hdr& (0+255),b
 19432  002E64  0E07               	movlw	high _beaconMessageBuffer
 19433  002E66  6FD2               	movwf	(networkSendBeacon@hdr+1)& (0+255),b
 19434                           
 19435                           ;BeaconManager.c: 96: hdr->packettype=PacketRouting;
 19436  002E68  EE20 F002          	lfsr	2,2
 19437  002E6C  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19438  002E6E  26D9               	addwf	fsr2l,f,c
 19439  002E70  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19440  002E72  22DA               	addwfc	fsr2h,f,c
 19441  002E74  0E22               	movlw	34
 19442  002E76  6EDF               	movwf	indf2,c
 19443                           
 19444                           ; BSR set to: 0
 19445                           ;BeaconManager.c: 97: hdr->options.deviceType=NetworkGetDeviceType();
 19446  002E78  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 19447  002E7C  0100               	movlb	0	; () banked
 19448  002E7E  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 19449  002E80  EE20 F003          	lfsr	2,3
 19450  002E84  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19451  002E86  26D9               	addwf	fsr2l,f,c
 19452  002E88  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19453  002E8A  22DA               	addwfc	fsr2h,f,c
 19454  002E8C  50DF               	movf	223,w,c
 19455  002E8E  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19456  002E90  0BF8               	andlw	-8
 19457  002E92  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19458  002E94  6EDF               	movwf	223,c
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;BeaconManager.c: 98: hdr->options.hasroute=NetworkHasRoute();
 19462  002E96  EC21  F039         	call	_NetworkHasRoute	;wreg free
 19463  002E9A  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 19464  002E9C  EE20 F003          	lfsr	2,3
 19465  002EA0  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19466  002EA2  26D9               	addwf	fsr2l,f,c
 19467  002EA4  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19468  002EA6  22DA               	addwfc	fsr2h,f,c
 19469  002EA8  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 19470  002EAA  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 19471  002EAC  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 19472  002EAE  50DF               	movf	223,w,c
 19473  002EB0  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19474  002EB2  0BF7               	andlw	-9
 19475  002EB4  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19476  002EB6  6EDF               	movwf	223,c
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;BeaconManager.c: 99: hdr->options.congested=r->congested;
 19480  002EB8  EE20 F005          	lfsr	2,5
 19481  002EBC  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 19482  002EBE  26D9               	addwf	fsr2l,f,c
 19483  002EC0  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 19484  002EC2  22DA               	addwfc	fsr2h,f,c
 19485  002EC4  50DF               	movf	indf2,w,c
 19486  002EC6  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 19487  002EC8  EE20 F003          	lfsr	2,3
 19488  002ECC  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19489  002ECE  26D9               	addwf	fsr2l,f,c
 19490  002ED0  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19491  002ED2  22DA               	addwfc	fsr2h,f,c
 19492  002ED4  3BC3               	swapf	??_networkSendBeacon& (0+255),f,b
 19493  002ED6  50DF               	movf	223,w,c
 19494  002ED8  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19495  002EDA  0BEF               	andlw	-17
 19496  002EDC  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 19497  002EDE  6EDF               	movwf	223,c
 19498                           
 19499                           ; BSR set to: 0
 19500                           ;BeaconManager.c: 100: hdr->sequenceNumber=netSequenceNumber++;
 19501  002EE0  EE20 F001          	lfsr	2,1
 19502  002EE4  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19503  002EE6  26D9               	addwf	fsr2l,f,c
 19504  002EE8  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19505  002EEA  22DA               	addwfc	fsr2h,f,c
 19506  002EEC  C1DE  FFDF         	movff	_netSequenceNumber,indf2
 19507                           
 19508                           ; BSR set to: 0
 19509  002EF0  0101               	movlb	1	; () banked
 19510  002EF2  2BDE               	incf	_netSequenceNumber& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 1
 19513                           ;BeaconManager.c: 101: memcpy(hdr->parent.bytes,r->parent.bytes,NetworkAddressSizeGet())
      +                          ;
 19514  002EF4  0E04               	movlw	4
 19515  002EF6  0100               	movlb	0	; () banked
 19516  002EF8  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 19517  002EFA  6F75               	movwf	memcpy@d1& (0+255),b
 19518  002EFC  0E00               	movlw	0
 19519  002EFE  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 19520  002F00  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 19521  002F02  C0CF  F077         	movff	networkSendBeacon@r,memcpy@s1
 19522  002F06  C0D0  F078         	movff	networkSendBeacon@r+1,memcpy@s1+1
 19523  002F0A  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 19524  002F0E  0100               	movlb	0	; () banked
 19525  002F10  6F79               	movwf	memcpy@n& (0+255),b
 19526  002F12  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 19527  002F14  EC5D  F036         	call	_memcpy	;wreg free
 19528                           
 19529                           ; BSR set to: 0
 19530                           ;BeaconManager.c: 103: if(NetworkGetDeviceType()==DeviceCoordinator)
 19531  002F18  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 19532  002F1C  0900               	iorlw	0
 19533  002F1E  E112               	bnz	l13078
 19534                           
 19535                           ; BSR set to: 1
 19536                           ;BeaconManager.c: 104: {
 19537                           ;BeaconManager.c: 105: hdr->etx=r->etx;
 19538  002F20  0100               	movlb	0	; () banked
 19539  002F22  EE20 F002          	lfsr	2,2
 19540  002F26  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 19541  002F28  26D9               	addwf	fsr2l,f,c
 19542  002F2A  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 19543  002F2C  22DA               	addwfc	fsr2h,f,c
 19544  002F2E  EE10 F006          	lfsr	1,6
 19545  002F32  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19546  002F34  26E1               	addwf	fsr1l,f,c
 19547  002F36  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19548  002F38  22E2               	addwfc	fsr1h,f,c
 19549  002F3A  CFDE FFE6          	movff	postinc2,postinc1
 19550  002F3E  CFDD FFE5          	movff	postdec2,postdec1
 19551                           
 19552                           ;BeaconManager.c: 106: }else if(isInvalidAddress(r->parent))
 19553  002F42  D03B               	goto	l13084
 19554  002F44                     l13078:
 19555                           
 19556                           ; BSR set to: 1
 19557  002F44  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 19558  002F48  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 19559  002F4C  CFDE F086          	movff	postinc2,isInvalidAddress@address
 19560  002F50  CFDD F087          	movff	postdec2,isInvalidAddress@address+1
 19561  002F54  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 19562  002F58  0900               	iorlw	0
 19563  002F5A  E010               	bz	l13082
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;BeaconManager.c: 107: {
 19567                           ;BeaconManager.c: 108: hdr->etx=0xffff;
 19568  002F5C  EE20 F006          	lfsr	2,6
 19569  002F60  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19570  002F62  26D9               	addwf	fsr2l,f,c
 19571  002F64  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19572  002F66  22DA               	addwfc	fsr2h,f,c
 19573  002F68  68DE               	setf	postinc2,c
 19574  002F6A  68DD               	setf	postdec2,c
 19575                           
 19576                           ;BeaconManager.c: 109: hdr->options.pull=1;
 19577  002F6C  EE20 F003          	lfsr	2,3
 19578  002F70  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19579  002F72  26D9               	addwf	fsr2l,f,c
 19580  002F74  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19581  002F76  22DA               	addwfc	fsr2h,f,c
 19582  002F78  8ADF               	bsf	indf2,5,c
 19583                           
 19584                           ;BeaconManager.c: 110: }else
 19585  002F7A  D01F               	goto	l13084
 19586  002F7C                     l13082:
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;BeaconManager.c: 111: {
 19590                           ;BeaconManager.c: 112: hdr->etx=LELinkQualityGet(r->parent,r->etx);
 19591  002F7C  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 19592  002F80  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 19593  002F84  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 19594  002F88  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 19595  002F8C  EE20 F002          	lfsr	2,2
 19596  002F90  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 19597  002F92  26D9               	addwf	fsr2l,f,c
 19598  002F94  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 19599  002F96  22DA               	addwfc	fsr2h,f,c
 19600  002F98  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 19601  002F9C  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 19602  002FA0  EC29  F033         	call	_LELinkQualityGet	;wreg free
 19603  002FA4  0100               	movlb	0	; () banked
 19604  002FA6  EE20 F006          	lfsr	2,6
 19605  002FAA  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19606  002FAC  26D9               	addwf	fsr2l,f,c
 19607  002FAE  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19608  002FB0  22DA               	addwfc	fsr2h,f,c
 19609  002FB2  C085  FFDE         	movff	?_LELinkQualityGet,postinc2
 19610  002FB6  C086  FFDD         	movff	?_LELinkQualityGet+1,postdec2
 19611  002FBA                     l13084:
 19612                           
 19613                           ; BSR set to: 0
 19614                           ;BeaconManager.c: 113: }
 19615                           ;BeaconManager.c: 115: uint16_t bt;
 19616                           ;BeaconManager.c: 116: addr_t *adr=NetworkManagerGetMyAddress();
 19617  002FBA  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
 19618  002FBE  C073  F0CB         	movff	?_NetworkManagerGetMyAddress,networkSendBeacon@adr
 19619  002FC2  C074  F0CC         	movff	?_NetworkManagerGetMyAddress+1,networkSendBeacon@adr+1
 19620                           
 19621                           ; BSR set to: 0
 19622                           ;BeaconManager.c: 117: memcpy(&bt,adr->bytes,2);
 19623  002FC6  0ECD               	movlw	low networkSendBeacon@bt
 19624  002FC8  6F75               	movwf	memcpy@d1& (0+255),b
 19625  002FCA  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 19626  002FCC  C0CB  F077         	movff	networkSendBeacon@adr,memcpy@s1
 19627  002FD0  C0CC  F078         	movff	networkSendBeacon@adr+1,memcpy@s1+1
 19628  002FD4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 19629  002FD6  0E02               	movlw	2
 19630  002FD8  6F79               	movwf	memcpy@n& (0+255),b
 19631  002FDA  EC5D  F036         	call	_memcpy	;wreg free
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;BeaconManager.c: 118: hdr->etx=hdr->etx ^ ( ((uint16_t)(~bt)) + (uint16_t)0x3497 );
 19635  002FDE  EE20 F006          	lfsr	2,6
 19636  002FE2  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19637  002FE4  26D9               	addwf	fsr2l,f,c
 19638  002FE6  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19639  002FE8  22DA               	addwfc	fsr2h,f,c
 19640  002FEA  CFDE F0C3          	movff	postinc2,??_networkSendBeacon
 19641  002FEE  CFDD F0C4          	movff	postdec2,??_networkSendBeacon+1
 19642  002FF2  0E97               	movlw	151
 19643  002FF4  6FC5               	movwf	(??_networkSendBeacon+2)& (0+255),b
 19644  002FF6  0E34               	movlw	52
 19645  002FF8  6FC6               	movwf	(??_networkSendBeacon+3)& (0+255),b
 19646  002FFA  1DCD               	comf	networkSendBeacon@bt& (0+255),w,b
 19647  002FFC  6FC7               	movwf	(??_networkSendBeacon+4)& (0+255),b
 19648  002FFE  1DCE               	comf	(networkSendBeacon@bt+1)& (0+255),w,b
 19649  003000  6FC8               	movwf	(??_networkSendBeacon+5)& (0+255),b
 19650  003002  51C5               	movf	(??_networkSendBeacon+2)& (0+255),w,b
 19651  003004  27C7               	addwf	(??_networkSendBeacon+4)& (0+255),f,b
 19652  003006  51C6               	movf	(??_networkSendBeacon+3)& (0+255),w,b
 19653  003008  23C8               	addwfc	(??_networkSendBeacon+5)& (0+255),f,b
 19654  00300A  51C3               	movf	??_networkSendBeacon& (0+255),w,b
 19655  00300C  1BC7               	xorwf	(??_networkSendBeacon+4)& (0+255),f,b
 19656  00300E  51C4               	movf	(??_networkSendBeacon+1)& (0+255),w,b
 19657  003010  1BC8               	xorwf	(??_networkSendBeacon+5)& (0+255),f,b
 19658  003012  EE20 F006          	lfsr	2,6
 19659  003016  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19660  003018  26D9               	addwf	fsr2l,f,c
 19661  00301A  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19662  00301C  22DA               	addwfc	fsr2h,f,c
 19663  00301E  C0C7  FFDE         	movff	??_networkSendBeacon+4,postinc2
 19664  003022  C0C8  FFDD         	movff	??_networkSendBeacon+5,postdec2
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;BeaconManager.c: 120: last=LEAppendNeighborInfo((uint8_t*)&hdr->lnk_header,64-(uint32_t
      +                          )((uint8_t*)hdr-(uint8_t*)beaconMessageBuffer.data)-sizeof(net_routing_header_t)-14);
 19668  003026  0E08               	movlw	8
 19669  003028  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 19670  00302A  6F84               	movwf	LEAppendNeighborInfo@data& (0+255),b
 19671  00302C  0E00               	movlw	0
 19672  00302E  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 19673  003030  6F85               	movwf	(LEAppendNeighborInfo@data+1)& (0+255),b
 19674  003032  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19675  003034  0828               	sublw	low (_beaconMessageBuffer+40)
 19676  003036  6F86               	movwf	LEAppendNeighborInfo@size& (0+255),b
 19677  003038  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 19678  00303A  A0D8               	btfss	status,0,c
 19679  00303C  2AE8               	incf	wreg,f,c
 19680  00303E  0807               	sublw	high (_beaconMessageBuffer+40)
 19681  003040  6F87               	movwf	(LEAppendNeighborInfo@size+1)& (0+255),b
 19682  003042  EC17  F01E         	call	_LEAppendNeighborInfo	;wreg free
 19683  003046  C084  F0C9         	movff	?_LEAppendNeighborInfo,networkSendBeacon@last
 19684  00304A  C085  F0CA         	movff	?_LEAppendNeighborInfo+1,networkSendBeacon@last+1
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;BeaconManager.c: 122: radioBroadcast(beaconMessageBuffer.data,(uint16_t)(last-(uint8_t*
      +                          )hdr),NetworkGetPANID(),isNetworkSecurityEnabled());
 19688  00304E  0E00               	movlw	low _beaconMessageBuffer
 19689  003050  6FBC               	movwf	radioBroadcast@data& (0+255),b
 19690  003052  0E07               	movlw	high _beaconMessageBuffer
 19691  003054  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 19692  003056  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 19693  003058  5DC9               	subwf	networkSendBeacon@last& (0+255),w,b
 19694  00305A  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 19695  00305C  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 19696  003060  C073  F0BF         	movff	?_NetworkGetPANID,radioBroadcast@PANID
 19697  003064  C074  F0C0         	movff	?_NetworkGetPANID+1,radioBroadcast@PANID+1
 19698  003068  EC3C  F03C         	call	_isNetworkSecurityEnabled	;wreg free
 19699  00306C  0100               	movlb	0	; () banked
 19700  00306E  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 19701  003070  EFFC  F034         	goto	_radioBroadcast	;wreg free
 19702  003074                     __end_of_networkSendBeacon:
 19703                           	opt stack 0
 19704                           tblptru	equ	0xFF8
 19705                           tblptrh	equ	0xFF7
 19706                           tblptrl	equ	0xFF6
 19707                           tablat	equ	0xFF5
 19708                           prodh	equ	0xFF4
 19709                           prodl	equ	0xFF3
 19710                           intcon3	equ	0xFF0
 19711                           postinc0	equ	0xFEE
 19712                           plusw0	equ	0xFEB
 19713                           fsr0h	equ	0xFEA
 19714                           fsr0l	equ	0xFE9
 19715                           wreg	equ	0xFE8
 19716                           indf1	equ	0xFE7
 19717                           postinc1	equ	0xFE6
 19718                           postdec1	equ	0xFE5
 19719                           plusw1	equ	0xFE3
 19720                           fsr1h	equ	0xFE2
 19721                           fsr1l	equ	0xFE1
 19722                           indf2	equ	0xFDF
 19723                           postinc2	equ	0xFDE
 19724                           postdec2	equ	0xFDD
 19725                           plusw2	equ	0xFDB
 19726                           fsr2h	equ	0xFDA
 19727                           fsr2l	equ	0xFD9
 19728                           status	equ	0xFD8
 19729                           
 19730 ;; *************** function _radioBroadcast *****************
 19731 ;; Defined at:
 19732 ;;		line 110 in file "../src/Bridge.c"
 19733 ;; Parameters:    Size  Location     Type
 19734 ;;  data            2   92[BANK0 ] PTR unsigned char 
 19735 ;;		 -> RbcQ(444), beaconMessageBuffer(72), 
 19736 ;;  datasize        1   94[BANK0 ] unsigned char 
 19737 ;;  PANID           2   95[BANK0 ] unsigned int 
 19738 ;;  isSecure        1   97[BANK0 ] unsigned char 
 19739 ;; Auto vars:     Size  Location     Type
 19740 ;;  i               1   98[BANK0 ] unsigned char 
 19741 ;; Return value:  Size  Location     Type
 19742 ;;                  1    wreg      unsigned char 
 19743 ;; Registers used:
 19744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19745 ;; Tracked objects:
 19746 ;;		On entry : F/0
 19747 ;;		On exit  : F/0
 19748 ;;		Unchanged: 0/0
 19749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19753 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19754 ;;Total ram usage:        7 bytes
 19755 ;; Hardware stack levels used:    1
 19756 ;; Hardware stack levels required when called:   11
 19757 ;; This function calls:
 19758 ;;		_SendPacket
 19759 ;;		_memset
 19760 ;; This function is called by:
 19761 ;;		_networkSendBeacon
 19762 ;;		_BroadcastManagerTask
 19763 ;; This function uses a non-reentrant model
 19764 ;;
 19765                           
 19766                           	psect	text76
 19767  0069F8                     __ptext76:
 19768                           	opt stack 0
 19769  0069F8                     _radioBroadcast:
 19770                           	opt stack 15
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;Bridge.c: 112: static addr_t addr;
 19774                           ;Bridge.c: 113: uint8_t i;
 19775                           ;Bridge.c: 120: memset(addr.bytes,0xff,sizeof(addr));
 19776                           
 19777                           ; BSR set to: 0
 19778                           ;incstack = 0
 19779  0069F8  0EEC               	movlw	low radioBroadcast@addr
 19780  0069FA  6F73               	movwf	memset@p1& (0+255),b
 19781  0069FC  0E01               	movlw	high radioBroadcast@addr
 19782  0069FE  6F74               	movwf	(memset@p1+1)& (0+255),b
 19783  006A00  6B76               	clrf	(memset@c+1)& (0+255),b
 19784  006A02  6975               	setf	memset@c& (0+255),b
 19785  006A04  6B78               	clrf	(memset@n+1)& (0+255),b
 19786  006A06  0E02               	movlw	2
 19787  006A08  6F77               	movwf	memset@n& (0+255),b
 19788  006A0A  EC4C  F03A         	call	_memset	;wreg free
 19789                           
 19790                           ; BSR set to: 0
 19791                           ;Bridge.c: 121: TxIndex=0;
 19792  006A0E  6A40               	clrf	_TxIndex,c
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;Bridge.c: 122: for(i=0;i<datasize;i++)
 19796  006A10  6BC2               	clrf	radioBroadcast@i& (0+255),b
 19797  006A12  D010               	goto	l12482
 19798  006A14                     l12476:
 19799                           
 19800                           ; BSR set to: 0
 19801                           ;Bridge.c: 123: {
 19802                           ;Bridge.c: 124: TxBuff[TxIndex++]=data[i];
 19803  006A14  51C2               	movf	radioBroadcast@i& (0+255),w,b
 19804  006A16  25BC               	addwf	radioBroadcast@data& (0+255),w,b
 19805  006A18  6ED9               	movwf	fsr2l,c
 19806  006A1A  0E00               	movlw	0
 19807  006A1C  21BD               	addwfc	(radioBroadcast@data+1)& (0+255),w,b
 19808  006A1E  6EDA               	movwf	fsr2h,c
 19809  006A20  0E48               	movlw	low _TxBuff
 19810  006A22  2440               	addwf	_TxIndex,w,c
 19811  006A24  6EE1               	movwf	fsr1l,c
 19812  006A26  6AE2               	clrf	fsr1h,c
 19813  006A28  0E07               	movlw	high _TxBuff
 19814  006A2A  22E2               	addwfc	fsr1h,f,c
 19815  006A2C  CFDF FFE7          	movff	indf2,indf1
 19816                           
 19817                           ; BSR set to: 0
 19818  006A30  2A40               	incf	_TxIndex,f,c
 19819                           
 19820                           ; BSR set to: 0
 19821  006A32  2BC2               	incf	radioBroadcast@i& (0+255),f,b
 19822  006A34                     l12482:
 19823                           
 19824                           ; BSR set to: 0
 19825  006A34  51BE               	movf	radioBroadcast@datasize& (0+255),w,b
 19826  006A36  5DC2               	subwf	radioBroadcast@i& (0+255),w,b
 19827  006A38  E3ED               	bnc	l12476
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;Bridge.c: 125: }
 19831                           ;Bridge.c: 126: return SendPacket(1,addr.bytes,PANID,0,isSecure);
 19832                           ;	Return value of _radioBroadcast is never used
 19833  006A3A  0EEC               	movlw	low radioBroadcast@addr
 19834  006A3C  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 19835  006A3E  0E01               	movlw	high radioBroadcast@addr
 19836  006A40  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 19837  006A42  C0BF  F0B0         	movff	radioBroadcast@PANID,SendPacket@destinationPANID
 19838  006A46  C0C0  F0B1         	movff	radioBroadcast@PANID+1,SendPacket@destinationPANID+1
 19839  006A4A  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 19840  006A4C  C0C1  F0B3         	movff	radioBroadcast@isSecure,SendPacket@SecurityEnabled
 19841  006A50  0E01               	movlw	1
 19842  006A52  EF2C  F030         	goto	_SendPacket
 19843  006A56                     __end_of_radioBroadcast:
 19844                           	opt stack 0
 19845                           tblptru	equ	0xFF8
 19846                           tblptrh	equ	0xFF7
 19847                           tblptrl	equ	0xFF6
 19848                           tablat	equ	0xFF5
 19849                           prodh	equ	0xFF4
 19850                           prodl	equ	0xFF3
 19851                           intcon3	equ	0xFF0
 19852                           postinc0	equ	0xFEE
 19853                           plusw0	equ	0xFEB
 19854                           fsr0h	equ	0xFEA
 19855                           fsr0l	equ	0xFE9
 19856                           wreg	equ	0xFE8
 19857                           indf1	equ	0xFE7
 19858                           postinc1	equ	0xFE6
 19859                           postdec1	equ	0xFE5
 19860                           plusw1	equ	0xFE3
 19861                           fsr1h	equ	0xFE2
 19862                           fsr1l	equ	0xFE1
 19863                           indf2	equ	0xFDF
 19864                           postinc2	equ	0xFDE
 19865                           postdec2	equ	0xFDD
 19866                           plusw2	equ	0xFDB
 19867                           fsr2h	equ	0xFDA
 19868                           fsr2l	equ	0xFD9
 19869                           status	equ	0xFD8
 19870                           
 19871 ;; *************** function _LELinkQualityGet *****************
 19872 ;; Defined at:
 19873 ;;		line 70 in file "../LinkEstimator.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;  address         2   37[BANK0 ] struct addr_t_def
 19876 ;;  offset          2   39[BANK0 ] unsigned int 
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;  res             2   43[BANK0 ] unsigned int 
 19879 ;;  idx             1   45[BANK0 ] unsigned char 
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  2   37[BANK0 ] unsigned int 
 19882 ;; Registers used:
 19883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19884 ;; Tracked objects:
 19885 ;;		On entry : F/0
 19886 ;;		On exit  : A/0
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19892 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19893 ;;Total ram usage:        9 bytes
 19894 ;; Hardware stack levels used:    1
 19895 ;; Hardware stack levels required when called:    8
 19896 ;; This function calls:
 19897 ;;		_le_findIdx
 19898 ;; This function is called by:
 19899 ;;		_RouteManagerPerformUpdate
 19900 ;;		_routingTableUpdateEntry
 19901 ;;		_networkSendBeacon
 19902 ;; This function uses a non-reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text77
 19906  006652                     __ptext77:
 19907                           	opt stack 0
 19908  006652                     _LELinkQualityGet:
 19909                           	opt stack 17
 19910                           
 19911                           ; BSR set to: 0
 19912                           ;LinkEstimator.c: 72: uint8_t idx;
 19913                           ;LinkEstimator.c: 73: uint16_t res=0xffff;
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;incstack = 0
 19917  006652  698B               	setf	LELinkQualityGet@res& (0+255),b
 19918  006654  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;LinkEstimator.c: 74: idx = le_findIdx(address);
 19922  006656  C085  F081         	movff	LELinkQualityGet@address,le_findIdx@ll_addr
 19923  00665A  C086  F082         	movff	LELinkQualityGet@address+1,le_findIdx@ll_addr+1
 19924  00665E  EC84  F035         	call	_le_findIdx	;wreg free
 19925  006662  6F8D               	movwf	LELinkQualityGet@idx& (0+255),b
 19926                           
 19927                           ; BSR set to: 0
 19928                           ;LinkEstimator.c: 75: if ( (idx != 0xff) && ((neighbor_tbl[idx].flags & 0x2)>0) )
 19929  006664  298D               	incf	LELinkQualityGet@idx& (0+255),w,b
 19930  006666  E028               	bz	l12530
 19931                           
 19932                           ; BSR set to: 0
 19933  006668  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 19934  00666A  0D0B               	mullw	11
 19935  00666C  0E05               	movlw	low (_neighbor_tbl+5)
 19936  00666E  24F3               	addwf	prodl,w,c
 19937  006670  6ED9               	movwf	fsr2l,c
 19938  006672  0E05               	movlw	high (_neighbor_tbl+5)
 19939  006674  20F4               	addwfc	prodh,w,c
 19940  006676  6EDA               	movwf	fsr2h,c
 19941  006678  0105               	movlb	5	; () banked
 19942  00667A  A2DF               	btfss	indf2,1,c
 19943  00667C  D01D               	goto	l12530
 19944                           
 19945                           ; BSR set to: 5
 19946                           ;LinkEstimator.c: 76: {
 19947                           ;LinkEstimator.c: 77: res=neighbor_tbl[idx].etx;
 19948  00667E  0100               	movlb	0	; () banked
 19949  006680  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 19950  006682  0D0B               	mullw	11
 19951  006684  0E07               	movlw	low (_neighbor_tbl+7)
 19952  006686  24F3               	addwf	prodl,w,c
 19953  006688  6ED9               	movwf	fsr2l,c
 19954  00668A  0E05               	movlw	high (_neighbor_tbl+7)
 19955  00668C  20F4               	addwfc	prodh,w,c
 19956  00668E  6EDA               	movwf	fsr2h,c
 19957  006690  CFDE F08B          	movff	postinc2,LELinkQualityGet@res
 19958  006694  CFDD F08C          	movff	postdec2,LELinkQualityGet@res+1
 19959                           
 19960                           ; BSR set to: 0
 19961                           ;LinkEstimator.c: 78: if((0xffff-res)<offset)
 19962  006698  1D8B               	comf	LELinkQualityGet@res& (0+255),w,b
 19963  00669A  6F89               	movwf	??_LELinkQualityGet& (0+255),b
 19964  00669C  1D8C               	comf	(LELinkQualityGet@res+1)& (0+255),w,b
 19965  00669E  6F8A               	movwf	(??_LELinkQualityGet+1)& (0+255),b
 19966  0066A0  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 19967  0066A2  5D89               	subwf	??_LELinkQualityGet& (0+255),w,b
 19968  0066A4  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 19969  0066A6  598A               	subwfb	(??_LELinkQualityGet+1)& (0+255),w,b
 19970  0066A8  E203               	bc	l12528
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;LinkEstimator.c: 79: {
 19974                           ;LinkEstimator.c: 80: res=0xffff;
 19975  0066AA  698B               	setf	LELinkQualityGet@res& (0+255),b
 19976  0066AC  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 19977                           
 19978                           ;LinkEstimator.c: 81: }else
 19979  0066AE  D004               	goto	l12530
 19980  0066B0                     l12528:
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;LinkEstimator.c: 82: {
 19984                           ;LinkEstimator.c: 83: res+=offset;
 19985  0066B0  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 19986  0066B2  278B               	addwf	LELinkQualityGet@res& (0+255),f,b
 19987  0066B4  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 19988  0066B6  238C               	addwfc	(LELinkQualityGet@res+1)& (0+255),f,b
 19989  0066B8                     l12530:
 19990                           
 19991                           ;LinkEstimator.c: 84: }
 19992                           ;LinkEstimator.c: 85: }
 19993                           ;LinkEstimator.c: 86: return(res);
 19994  0066B8  C08B  F085         	movff	LELinkQualityGet@res,?_LELinkQualityGet
 19995  0066BC  C08C  F086         	movff	LELinkQualityGet@res+1,?_LELinkQualityGet+1
 19996  0066C0  0012               	return		;funcret
 19997  0066C2                     __end_of_LELinkQualityGet:
 19998                           	opt stack 0
 19999                           tblptru	equ	0xFF8
 20000                           tblptrh	equ	0xFF7
 20001                           tblptrl	equ	0xFF6
 20002                           tablat	equ	0xFF5
 20003                           prodh	equ	0xFF4
 20004                           prodl	equ	0xFF3
 20005                           intcon3	equ	0xFF0
 20006                           postinc0	equ	0xFEE
 20007                           plusw0	equ	0xFEB
 20008                           fsr0h	equ	0xFEA
 20009                           fsr0l	equ	0xFE9
 20010                           wreg	equ	0xFE8
 20011                           indf1	equ	0xFE7
 20012                           postinc1	equ	0xFE6
 20013                           postdec1	equ	0xFE5
 20014                           plusw1	equ	0xFE3
 20015                           fsr1h	equ	0xFE2
 20016                           fsr1l	equ	0xFE1
 20017                           indf2	equ	0xFDF
 20018                           postinc2	equ	0xFDE
 20019                           postdec2	equ	0xFDD
 20020                           plusw2	equ	0xFDB
 20021                           fsr2h	equ	0xFDA
 20022                           fsr2l	equ	0xFD9
 20023                           status	equ	0xFD8
 20024                           
 20025 ;; *************** function _le_findIdx *****************
 20026 ;; Defined at:
 20027 ;;		line 52 in file "../LinkEstimator.c"
 20028 ;; Parameters:    Size  Location     Type
 20029 ;;  ll_addr         2   33[BANK0 ] struct addr_t_def
 20030 ;; Auto vars:     Size  Location     Type
 20031 ;;  i               1   36[BANK0 ] unsigned char 
 20032 ;;  res             1   35[BANK0 ] unsigned char 
 20033 ;; Return value:  Size  Location     Type
 20034 ;;                  1    wreg      unsigned char 
 20035 ;; Registers used:
 20036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20037 ;; Tracked objects:
 20038 ;;		On entry : E/0
 20039 ;;		On exit  : F/0
 20040 ;;		Unchanged: 0/0
 20041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20043 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20045 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20046 ;;Total ram usage:        4 bytes
 20047 ;; Hardware stack levels used:    1
 20048 ;; Hardware stack levels required when called:    7
 20049 ;; This function calls:
 20050 ;;		_isSameAddress
 20051 ;; This function is called by:
 20052 ;;		_GetRouteAddressOfChild
 20053 ;;		_LELinkQualityGet
 20054 ;;		_LE_PinNeighbor
 20055 ;;		_LE_UnpinNeighbor
 20056 ;;		_LE_ClearDLQ
 20057 ;;		_LE_InsertNeighbor
 20058 ;;		_LE_processReceivedMessage
 20059 ;;		_LE_RemoveNeighborDevice
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text78
 20064  006B08                     __ptext78:
 20065                           	opt stack 0
 20066  006B08                     _le_findIdx:
 20067                           	opt stack 18
 20068                           
 20069                           ;LinkEstimator.c: 54: uint8_t i;
 20070                           ;LinkEstimator.c: 55: uint8_t res=0xff;
 20071                           
 20072                           ;incstack = 0
 20073  006B08  0100               	movlb	0	; () banked
 20074  006B0A  6983               	setf	le_findIdx@res& (0+255),b
 20075                           
 20076                           ;LinkEstimator.c: 56: for (i = 0; i < 20; i++)
 20077  006B0C  6B84               	clrf	le_findIdx@i& (0+255),b
 20078  006B0E                     l12120:
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;LinkEstimator.c: 57: {
 20082                           ;LinkEstimator.c: 58: if (neighbor_tbl[i].flags & 0x1)
 20083  006B0E  5184               	movf	le_findIdx@i& (0+255),w,b
 20084  006B10  0D0B               	mullw	11
 20085  006B12  0E05               	movlw	low (_neighbor_tbl+5)
 20086  006B14  24F3               	addwf	prodl,w,c
 20087  006B16  6ED9               	movwf	fsr2l,c
 20088  006B18  0E05               	movlw	high (_neighbor_tbl+5)
 20089  006B1A  20F4               	addwfc	prodh,w,c
 20090  006B1C  6EDA               	movwf	fsr2h,c
 20091  006B1E  A0DF               	btfss	indf2,0,c
 20092  006B20  D018               	goto	l12126
 20093                           
 20094                           ; BSR set to: 5
 20095                           ;LinkEstimator.c: 59: {
 20096                           ;LinkEstimator.c: 60: if (isSameAddress(neighbor_tbl[i].ll_addr, ll_addr))
 20097  006B22  0100               	movlb	0	; () banked
 20098  006B24  5184               	movf	le_findIdx@i& (0+255),w,b
 20099  006B26  0D0B               	mullw	11
 20100  006B28  0E00               	movlw	low _neighbor_tbl
 20101  006B2A  24F3               	addwf	prodl,w,c
 20102  006B2C  6ED9               	movwf	fsr2l,c
 20103  006B2E  0E05               	movlw	high _neighbor_tbl
 20104  006B30  20F4               	addwfc	prodh,w,c
 20105  006B32  6EDA               	movwf	fsr2h,c
 20106  006B34  CFDE F07D          	movff	postinc2,isSameAddress@a1
 20107  006B38  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 20108  006B3C  C081  F07F         	movff	le_findIdx@ll_addr,isSameAddress@a2
 20109  006B40  C082  F080         	movff	le_findIdx@ll_addr+1,isSameAddress@a2+1
 20110  006B44  ECB1  F03A         	call	_isSameAddress	;wreg free
 20111  006B48  0900               	iorlw	0
 20112  006B4A  E003               	bz	l12126
 20113                           
 20114                           ; BSR set to: 0
 20115                           ;LinkEstimator.c: 61: {
 20116                           ;LinkEstimator.c: 62: res=i;
 20117  006B4C  C084  F083         	movff	le_findIdx@i,le_findIdx@res
 20118                           
 20119                           ;LinkEstimator.c: 63: break;
 20120  006B50  D005               	goto	l12130
 20121  006B52                     l12126:
 20122  006B52  0100               	movlb	0	; () banked
 20123  006B54  2B84               	incf	le_findIdx@i& (0+255),f,b
 20124                           
 20125                           ; BSR set to: 0
 20126  006B56  0E13               	movlw	19
 20127  006B58  6584               	cpfsgt	le_findIdx@i& (0+255),b
 20128  006B5A  D7D9               	goto	l12120
 20129  006B5C                     l12130:
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;LinkEstimator.c: 64: }
 20133                           ;LinkEstimator.c: 65: }
 20134                           ;LinkEstimator.c: 66: }
 20135                           ;LinkEstimator.c: 67: return res;
 20136  006B5C  5183               	movf	le_findIdx@res& (0+255),w,b
 20137                           
 20138                           ; BSR set to: 0
 20139  006B5E  0012               	return		;funcret
 20140  006B60                     __end_of_le_findIdx:
 20141                           	opt stack 0
 20142                           tblptru	equ	0xFF8
 20143                           tblptrh	equ	0xFF7
 20144                           tblptrl	equ	0xFF6
 20145                           tablat	equ	0xFF5
 20146                           prodh	equ	0xFF4
 20147                           prodl	equ	0xFF3
 20148                           intcon3	equ	0xFF0
 20149                           postinc0	equ	0xFEE
 20150                           plusw0	equ	0xFEB
 20151                           fsr0h	equ	0xFEA
 20152                           fsr0l	equ	0xFE9
 20153                           wreg	equ	0xFE8
 20154                           indf1	equ	0xFE7
 20155                           postinc1	equ	0xFE6
 20156                           postdec1	equ	0xFE5
 20157                           plusw1	equ	0xFE3
 20158                           fsr1h	equ	0xFE2
 20159                           fsr1l	equ	0xFE1
 20160                           indf2	equ	0xFDF
 20161                           postinc2	equ	0xFDE
 20162                           postdec2	equ	0xFDD
 20163                           plusw2	equ	0xFDB
 20164                           fsr2h	equ	0xFDA
 20165                           fsr2l	equ	0xFD9
 20166                           status	equ	0xFD8
 20167                           
 20168 ;; *************** function _LEAppendNeighborInfo *****************
 20169 ;; Defined at:
 20170 ;;		line 89 in file "../LinkEstimator.c"
 20171 ;; Parameters:    Size  Location     Type
 20172 ;;  data            2   36[BANK0 ] PTR unsigned char 
 20173 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 20174 ;;  size            2   38[BANK0 ] unsigned int 
 20175 ;; Auto vars:     Size  Location     Type
 20176 ;;  k               2   52[BANK0 ] unsigned int 
 20177 ;;  j               2   50[BANK0 ] unsigned int 
 20178 ;;  i               2   48[BANK0 ] unsigned int 
 20179 ;;  count           2   46[BANK0 ] unsigned int 
 20180 ;;  newPrevSentI    2   44[BANK0 ] unsigned int 
 20181 ;;  cnt             2   42[BANK0 ] unsigned int 
 20182 ;; Return value:  Size  Location     Type
 20183 ;;                  2   36[BANK0 ] PTR unsigned char 
 20184 ;; Registers used:
 20185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20186 ;; Tracked objects:
 20187 ;;		On entry : F/0
 20188 ;;		On exit  : F/0
 20189 ;;		Unchanged: 0/0
 20190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20192 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20194 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20195 ;;Total ram usage:       18 bytes
 20196 ;; Hardware stack levels used:    1
 20197 ;; Hardware stack levels required when called:    6
 20198 ;; This function calls:
 20199 ;;		_NetworkAddressSizeGet
 20200 ;;		___lwdiv
 20201 ;;		___lwmod
 20202 ;;		_memcpy
 20203 ;; This function is called by:
 20204 ;;		_networkSendBeacon
 20205 ;; This function uses a non-reentrant model
 20206 ;;
 20207                           
 20208                           	psect	text79
 20209  003C2E                     __ptext79:
 20210                           	opt stack 0
 20211  003C2E                     _LEAppendNeighborInfo:
 20212                           	opt stack 19
 20213                           
 20214                           ; BSR set to: 0
 20215                           ;LinkEstimator.c: 91: uint16_t i,j,k,cnt;
 20216                           ;LinkEstimator.c: 92: uint16_t count=size/sizeof(neighbor_stat_entry_t);
 20217                           
 20218                           ; BSR set to: 0
 20219                           ;incstack = 0
 20220  003C2E  C086  F073         	movff	LEAppendNeighborInfo@size,___lwdiv@dividend
 20221  003C32  C087  F074         	movff	LEAppendNeighborInfo@size+1,___lwdiv@dividend+1
 20222  003C36  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 20223  003C38  0E03               	movlw	3
 20224  003C3A  6F75               	movwf	___lwdiv@divisor& (0+255),b
 20225  003C3C  ECA1  F037         	call	___lwdiv	;wreg free
 20226  003C40  C073  F08E         	movff	?___lwdiv,LEAppendNeighborInfo@count
 20227  003C44  C074  F08F         	movff	?___lwdiv+1,LEAppendNeighborInfo@count+1
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;LinkEstimator.c: 93: uint16_t newPrevSentIdx=0;
 20231  003C48  6B8C               	clrf	LEAppendNeighborInfo@newPrevSentIdx& (0+255),b
 20232  003C4A  6B8D               	clrf	(LEAppendNeighborInfo@newPrevSentIdx+1)& (0+255),b
 20233                           
 20234                           ; BSR set to: 0
 20235                           ;LinkEstimator.c: 94: if(count>5)
 20236  003C4C  518F               	movf	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 20237  003C4E  E103               	bnz	u13660
 20238  003C50  0E06               	movlw	6
 20239  003C52  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 20240  003C54  E303               	bnc	l1502
 20241  003C56                     u13660:
 20242                           
 20243                           ; BSR set to: 0
 20244                           ;LinkEstimator.c: 95: {
 20245                           ;LinkEstimator.c: 96: count=5;
 20246  003C56  6B8F               	clrf	(LEAppendNeighborInfo@count+1)& (0+255),b
 20247  003C58  0E05               	movlw	5
 20248  003C5A  6F8E               	movwf	LEAppendNeighborInfo@count& (0+255),b
 20249  003C5C                     l1502:
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;LinkEstimator.c: 97: }
 20253                           ;LinkEstimator.c: 98: j=2;
 20254  003C5C  6B93               	clrf	(LEAppendNeighborInfo@j+1)& (0+255),b
 20255  003C5E  0E02               	movlw	2
 20256  003C60  6F92               	movwf	LEAppendNeighborInfo@j& (0+255),b
 20257                           
 20258                           ; BSR set to: 0
 20259                           ;LinkEstimator.c: 99: cnt=0;
 20260  003C62  6B8A               	clrf	LEAppendNeighborInfo@cnt& (0+255),b
 20261  003C64  6B8B               	clrf	(LEAppendNeighborInfo@cnt+1)& (0+255),b
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;LinkEstimator.c: 100: for(i=0;i<20;i++)
 20265  003C66  6B90               	clrf	LEAppendNeighborInfo@i& (0+255),b
 20266  003C68  6B91               	clrf	(LEAppendNeighborInfo@i+1)& (0+255),b
 20267  003C6A                     l12594:
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;LinkEstimator.c: 101: {
 20271                           ;LinkEstimator.c: 102: cnt++;
 20272  003C6A  4B8A               	infsnz	LEAppendNeighborInfo@cnt& (0+255),f,b
 20273  003C6C  2B8B               	incf	(LEAppendNeighborInfo@cnt+1)& (0+255),f,b
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;LinkEstimator.c: 103: k = (prevSentIdx + i + 1) % 20;
 20277  003C6E  5190               	movf	LEAppendNeighborInfo@i& (0+255),w,b
 20278  003C70  0101               	movlb	1	; () banked
 20279  003C72  25CE               	addwf	_prevSentIdx& (0+255),w,b
 20280  003C74  0100               	movlb	0	; () banked
 20281  003C76  6F88               	movwf	??_LEAppendNeighborInfo& (0+255),b
 20282  003C78  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 20283  003C7A  0101               	movlb	1	; () banked
 20284  003C7C  21CF               	addwfc	(_prevSentIdx+1)& (0+255),w,b
 20285  003C7E  0100               	movlb	0	; () banked
 20286  003C80  6F89               	movwf	(??_LEAppendNeighborInfo+1)& (0+255),b
 20287  003C82  2988               	incf	??_LEAppendNeighborInfo& (0+255),w,b
 20288  003C84  6F7F               	movwf	___lwmod@dividend& (0+255),b
 20289  003C86  0E00               	movlw	0
 20290  003C88  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 20291  003C8A  6F80               	movwf	(___lwmod@dividend+1)& (0+255),b
 20292  003C8C  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 20293  003C8E  0E14               	movlw	20
 20294  003C90  6F81               	movwf	___lwmod@divisor& (0+255),b
 20295  003C92  EC6D  F038         	call	___lwmod	;wreg free
 20296  003C96  C07F  F094         	movff	?___lwmod,LEAppendNeighborInfo@k
 20297  003C9A  C080  F095         	movff	?___lwmod+1,LEAppendNeighborInfo@k+1
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;LinkEstimator.c: 104: if ((neighbor_tbl[k].flags & 0x1) && (neighbor_tbl[k].flags & 0x2
      +                          ) && (cnt<=count))
 20301  003C9E  0E0B               	movlw	11
 20302  003CA0  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 20303  003CA2  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 20304  003CA6  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 20305  003CAA  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 20306  003CAC  50F3               	movf	prodl,w,c
 20307  003CAE  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 20308  003CB0  0E05               	movlw	low (_neighbor_tbl+5)
 20309  003CB2  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 20310  003CB4  6ED9               	movwf	fsr2l,c
 20311  003CB6  0E05               	movlw	high (_neighbor_tbl+5)
 20312  003CB8  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 20313  003CBA  6EDA               	movwf	fsr2h,c
 20314  003CBC  A0DF               	btfss	indf2,0,c
 20315  003CBE  D056               	goto	l12614
 20316                           
 20317                           ; BSR set to: 5
 20318  003CC0  0E0B               	movlw	11
 20319  003CC2  0100               	movlb	0	; () banked
 20320  003CC4  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 20321  003CC6  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 20322  003CCA  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 20323  003CCE  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 20324  003CD0  50F3               	movf	prodl,w,c
 20325  003CD2  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 20326  003CD4  0E05               	movlw	low (_neighbor_tbl+5)
 20327  003CD6  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 20328  003CD8  6ED9               	movwf	fsr2l,c
 20329  003CDA  0E05               	movlw	high (_neighbor_tbl+5)
 20330  003CDC  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 20331  003CDE  6EDA               	movwf	fsr2h,c
 20332  003CE0  A2DF               	btfss	indf2,1,c
 20333  003CE2  D044               	goto	l12614
 20334                           
 20335                           ; BSR set to: 5
 20336  003CE4  518A               	movf	LEAppendNeighborInfo@cnt& (0+255),w,b
 20337  003CE6  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 20338  003CE8  518B               	movf	(LEAppendNeighborInfo@cnt+1)& (0+255),w,b
 20339  003CEA  598F               	subwfb	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 20340  003CEC  E33F               	bnc	l12614
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;LinkEstimator.c: 105: {
 20344                           ;LinkEstimator.c: 106: memcpy(&data[j],neighbor_tbl[k].ll_addr.bytes, NetworkAddressSize
      +                          Get());
 20345  003CEE  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 20346  003CF0  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 20347  003CF2  6F75               	movwf	memcpy@d1& (0+255),b
 20348  003CF4  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 20349  003CF6  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 20350  003CF8  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 20351  003CFA  0E0B               	movlw	11
 20352  003CFC  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 20353  003CFE  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 20354  003D02  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 20355  003D06  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 20356  003D08  50F3               	movf	prodl,w,c
 20357  003D0A  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 20358  003D0C  0E00               	movlw	low _neighbor_tbl
 20359  003D0E  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 20360  003D10  6F77               	movwf	memcpy@s1& (0+255),b
 20361  003D12  0E05               	movlw	high _neighbor_tbl
 20362  003D14  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 20363  003D16  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 20364  003D18  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 20365  003D1C  0100               	movlb	0	; () banked
 20366  003D1E  6F79               	movwf	memcpy@n& (0+255),b
 20367  003D20  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 20368  003D22  EC5D  F036         	call	_memcpy	;wreg free
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;LinkEstimator.c: 107: j+=NetworkAddressSizeGet();
 20372  003D26  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 20373  003D2A  0100               	movlb	0	; () banked
 20374  003D2C  2792               	addwf	LEAppendNeighborInfo@j& (0+255),f,b
 20375  003D2E  0E00               	movlw	0
 20376  003D30  2393               	addwfc	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 20377                           
 20378                           ; BSR set to: 0
 20379                           ;LinkEstimator.c: 108: data[j]=neighbor_tbl[k].inquality;
 20380  003D32  0E0B               	movlw	11
 20381  003D34  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 20382  003D36  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 20383  003D3A  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 20384  003D3E  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 20385  003D40  50F3               	movf	prodl,w,c
 20386  003D42  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 20387  003D44  0E06               	movlw	low (_neighbor_tbl+6)
 20388  003D46  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 20389  003D48  6ED9               	movwf	fsr2l,c
 20390  003D4A  0E05               	movlw	high (_neighbor_tbl+6)
 20391  003D4C  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 20392  003D4E  6EDA               	movwf	fsr2h,c
 20393  003D50  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 20394  003D52  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 20395  003D54  6EE1               	movwf	fsr1l,c
 20396  003D56  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 20397  003D58  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 20398  003D5A  6EE2               	movwf	fsr1h,c
 20399  003D5C  CFDF FFE7          	movff	indf2,indf1
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;LinkEstimator.c: 109: j+=1;
 20403  003D60  4B92               	infsnz	LEAppendNeighborInfo@j& (0+255),f,b
 20404  003D62  2B93               	incf	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;LinkEstimator.c: 110: newPrevSentIdx = k;
 20408  003D64  C094  F08C         	movff	LEAppendNeighborInfo@k,LEAppendNeighborInfo@newPrevSentIdx
 20409  003D68  C095  F08D         	movff	LEAppendNeighborInfo@k+1,LEAppendNeighborInfo@newPrevSentIdx+1
 20410  003D6C                     l12614:
 20411  003D6C  0100               	movlb	0	; () banked
 20412  003D6E  4B90               	infsnz	LEAppendNeighborInfo@i& (0+255),f,b
 20413  003D70  2B91               	incf	(LEAppendNeighborInfo@i+1)& (0+255),f,b
 20414                           
 20415                           ; BSR set to: 0
 20416  003D72  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 20417  003D74  E104               	bnz	u13700
 20418  003D76  0E14               	movlw	20
 20419  003D78  5D90               	subwf	LEAppendNeighborInfo@i& (0+255),w,b
 20420  003D7A  E201 D776          	bnc	l12594
 20421  003D7E                     u13700:
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;LinkEstimator.c: 111: }
 20425                           ;LinkEstimator.c: 112: }
 20426                           ;LinkEstimator.c: 113: prevSentIdx = newPrevSentIdx;
 20427  003D7E  C08C  F1CE         	movff	LEAppendNeighborInfo@newPrevSentIdx,_prevSentIdx
 20428  003D82  C08D  F1CF         	movff	LEAppendNeighborInfo@newPrevSentIdx+1,_prevSentIdx+1
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;LinkEstimator.c: 115: data[0]=linkEstSeq++;
 20432  003D86  C084  FFD9         	movff	LEAppendNeighborInfo@data,fsr2l
 20433  003D8A  C085  FFDA         	movff	LEAppendNeighborInfo@data+1,fsr2h
 20434  003D8E  C1CC  FFDF         	movff	_linkEstSeq,indf2
 20435                           
 20436                           ; BSR set to: 0
 20437  003D92  0101               	movlb	1	; () banked
 20438  003D94  4BCC               	infsnz	_linkEstSeq& (0+255),f,b
 20439  003D96  2BCD               	incf	(_linkEstSeq+1)& (0+255),f,b
 20440                           
 20441                           ; BSR set to: 1
 20442                           ;LinkEstimator.c: 116: data[1]=k;
 20443  003D98  0100               	movlb	0	; () banked
 20444  003D9A  EE20 F001          	lfsr	2,1
 20445  003D9E  5184               	movf	LEAppendNeighborInfo@data& (0+255),w,b
 20446  003DA0  26D9               	addwf	fsr2l,f,c
 20447  003DA2  5185               	movf	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 20448  003DA4  22DA               	addwfc	fsr2h,f,c
 20449  003DA6  C094  FFDF         	movff	LEAppendNeighborInfo@k,indf2
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;LinkEstimator.c: 117: return(&data[j]);
 20453  003DAA  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 20454  003DAC  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 20455  003DAE  6F84               	movwf	?_LEAppendNeighborInfo& (0+255),b
 20456  003DB0  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 20457  003DB2  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 20458  003DB4  6F85               	movwf	(?_LEAppendNeighborInfo+1)& (0+255),b
 20459                           
 20460                           ; BSR set to: 0
 20461  003DB6  0012               	return		;funcret
 20462  003DB8                     __end_of_LEAppendNeighborInfo:
 20463                           	opt stack 0
 20464                           tblptru	equ	0xFF8
 20465                           tblptrh	equ	0xFF7
 20466                           tblptrl	equ	0xFF6
 20467                           tablat	equ	0xFF5
 20468                           prodh	equ	0xFF4
 20469                           prodl	equ	0xFF3
 20470                           intcon3	equ	0xFF0
 20471                           postinc0	equ	0xFEE
 20472                           plusw0	equ	0xFEB
 20473                           fsr0h	equ	0xFEA
 20474                           fsr0l	equ	0xFE9
 20475                           wreg	equ	0xFE8
 20476                           indf1	equ	0xFE7
 20477                           postinc1	equ	0xFE6
 20478                           postdec1	equ	0xFE5
 20479                           plusw1	equ	0xFE3
 20480                           fsr1h	equ	0xFE2
 20481                           fsr1l	equ	0xFE1
 20482                           indf2	equ	0xFDF
 20483                           postinc2	equ	0xFDE
 20484                           postdec2	equ	0xFDD
 20485                           plusw2	equ	0xFDB
 20486                           fsr2h	equ	0xFDA
 20487                           fsr2l	equ	0xFD9
 20488                           status	equ	0xFD8
 20489                           
 20490 ;; *************** function ___lwmod *****************
 20491 ;; Defined at:
 20492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 20493 ;; Parameters:    Size  Location     Type
 20494 ;;  dividend        2   31[BANK0 ] unsigned int 
 20495 ;;  divisor         2   33[BANK0 ] unsigned int 
 20496 ;; Auto vars:     Size  Location     Type
 20497 ;;  counter         1   35[BANK0 ] unsigned char 
 20498 ;; Return value:  Size  Location     Type
 20499 ;;                  2   31[BANK0 ] unsigned int 
 20500 ;; Registers used:
 20501 ;;		wreg, status,2, status,0
 20502 ;; Tracked objects:
 20503 ;;		On entry : F/0
 20504 ;;		On exit  : F/0
 20505 ;;		Unchanged: 0/0
 20506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20510 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20511 ;;Total ram usage:        5 bytes
 20512 ;; Hardware stack levels used:    1
 20513 ;; Hardware stack levels required when called:    5
 20514 ;; This function calls:
 20515 ;;		Nothing
 20516 ;; This function is called by:
 20517 ;;		_LEAppendNeighborInfo
 20518 ;;		_le_findRandomNeighborIdx
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           	psect	text80
 20523  0070DA                     __ptext80:
 20524                           	opt stack 0
 20525  0070DA                     ___lwmod:
 20526                           	opt stack 20
 20527                           
 20528                           ; BSR set to: 0
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;incstack = 0
 20532  0070DA  5181               	movf	___lwmod@divisor& (0+255),w,b
 20533  0070DC  1182               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20534  0070DE  E017               	bz	l2648
 20535                           
 20536                           ; BSR set to: 0
 20537  0070E0  0E01               	movlw	1
 20538  0070E2  6F83               	movwf	___lwmod@counter& (0+255),b
 20539  0070E4  D004               	goto	l12460
 20540  0070E6                     l12458:
 20541                           
 20542                           ; BSR set to: 0
 20543  0070E6  90D8               	bcf	status,0,c
 20544  0070E8  3781               	rlcf	___lwmod@divisor& (0+255),f,b
 20545  0070EA  3782               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20546  0070EC  2B83               	incf	___lwmod@counter& (0+255),f,b
 20547  0070EE                     l12460:
 20548                           
 20549                           ; BSR set to: 0
 20550  0070EE  AF82               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20551  0070F0  D7FA               	goto	l12458
 20552  0070F2                     l12462:
 20553                           
 20554                           ; BSR set to: 0
 20555  0070F2  5181               	movf	___lwmod@divisor& (0+255),w,b
 20556  0070F4  5D7F               	subwf	___lwmod@dividend& (0+255),w,b
 20557  0070F6  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20558  0070F8  5980               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20559  0070FA  E304               	bnc	l12466
 20560                           
 20561                           ; BSR set to: 0
 20562  0070FC  5181               	movf	___lwmod@divisor& (0+255),w,b
 20563  0070FE  5F7F               	subwf	___lwmod@dividend& (0+255),f,b
 20564  007100  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20565  007102  5B80               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20566  007104                     l12466:
 20567                           
 20568                           ; BSR set to: 0
 20569  007104  90D8               	bcf	status,0,c
 20570  007106  3382               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20571  007108  3381               	rrcf	___lwmod@divisor& (0+255),f,b
 20572                           
 20573                           ; BSR set to: 0
 20574  00710A  2F83               	decfsz	___lwmod@counter& (0+255),f,b
 20575  00710C  D7F2               	goto	l12462
 20576  00710E                     l2648:
 20577                           
 20578                           ; BSR set to: 0
 20579  00710E  C07F  F07F         	movff	___lwmod@dividend,?___lwmod
 20580  007112  C080  F080         	movff	___lwmod@dividend+1,?___lwmod+1
 20581                           
 20582                           ; BSR set to: 0
 20583  007116  0012               	return		;funcret
 20584  007118                     __end_of___lwmod:
 20585                           	opt stack 0
 20586                           tblptru	equ	0xFF8
 20587                           tblptrh	equ	0xFF7
 20588                           tblptrl	equ	0xFF6
 20589                           tablat	equ	0xFF5
 20590                           prodh	equ	0xFF4
 20591                           prodl	equ	0xFF3
 20592                           intcon3	equ	0xFF0
 20593                           postinc0	equ	0xFEE
 20594                           plusw0	equ	0xFEB
 20595                           fsr0h	equ	0xFEA
 20596                           fsr0l	equ	0xFE9
 20597                           wreg	equ	0xFE8
 20598                           indf1	equ	0xFE7
 20599                           postinc1	equ	0xFE6
 20600                           postdec1	equ	0xFE5
 20601                           plusw1	equ	0xFE3
 20602                           fsr1h	equ	0xFE2
 20603                           fsr1l	equ	0xFE1
 20604                           indf2	equ	0xFDF
 20605                           postinc2	equ	0xFDE
 20606                           postdec2	equ	0xFDD
 20607                           plusw2	equ	0xFDB
 20608                           fsr2h	equ	0xFDA
 20609                           fsr2l	equ	0xFD9
 20610                           status	equ	0xFD8
 20611                           
 20612 ;; *************** function ___lwdiv *****************
 20613 ;; Defined at:
 20614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 20615 ;; Parameters:    Size  Location     Type
 20616 ;;  dividend        2   19[BANK0 ] unsigned int 
 20617 ;;  divisor         2   21[BANK0 ] unsigned int 
 20618 ;; Auto vars:     Size  Location     Type
 20619 ;;  quotient        2   24[BANK0 ] unsigned int 
 20620 ;;  counter         1   23[BANK0 ] unsigned char 
 20621 ;; Return value:  Size  Location     Type
 20622 ;;                  2   19[BANK0 ] unsigned int 
 20623 ;; Registers used:
 20624 ;;		wreg, status,2, status,0
 20625 ;; Tracked objects:
 20626 ;;		On entry : F/0
 20627 ;;		On exit  : F/0
 20628 ;;		Unchanged: 0/0
 20629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20631 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20633 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20634 ;;Total ram usage:        7 bytes
 20635 ;; Hardware stack levels used:    1
 20636 ;; Hardware stack levels required when called:    5
 20637 ;; This function calls:
 20638 ;;		Nothing
 20639 ;; This function is called by:
 20640 ;;		_sprintf
 20641 ;;		_LEAppendNeighborInfo
 20642 ;;		_le_updateETX
 20643 ;;		_le_updateNeighborTableEst
 20644 ;; This function uses a non-reentrant model
 20645 ;;
 20646                           
 20647                           	psect	text81
 20648  006F42                     __ptext81:
 20649                           	opt stack 0
 20650  006F42                     ___lwdiv:
 20651                           	opt stack 24
 20652                           
 20653                           ; BSR set to: 0
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;incstack = 0
 20657  006F42  6B78               	clrf	___lwdiv@quotient& (0+255),b
 20658  006F44  6B79               	clrf	(___lwdiv@quotient+1)& (0+255),b
 20659                           
 20660                           ; BSR set to: 0
 20661  006F46  5175               	movf	___lwdiv@divisor& (0+255),w,b
 20662  006F48  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20663  006F4A  E01B               	bz	l2638
 20664                           
 20665                           ; BSR set to: 0
 20666  006F4C  0E01               	movlw	1
 20667  006F4E  6F77               	movwf	___lwdiv@counter& (0+255),b
 20668  006F50  D004               	goto	l12232
 20669  006F52                     l12230:
 20670                           
 20671                           ; BSR set to: 0
 20672  006F52  90D8               	bcf	status,0,c
 20673  006F54  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
 20674  006F56  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20675  006F58  2B77               	incf	___lwdiv@counter& (0+255),f,b
 20676  006F5A                     l12232:
 20677                           
 20678                           ; BSR set to: 0
 20679  006F5A  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20680  006F5C  D7FA               	goto	l12230
 20681  006F5E                     l12234:
 20682                           
 20683                           ; BSR set to: 0
 20684  006F5E  90D8               	bcf	status,0,c
 20685  006F60  3778               	rlcf	___lwdiv@quotient& (0+255),f,b
 20686  006F62  3779               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20687                           
 20688                           ; BSR set to: 0
 20689  006F64  5175               	movf	___lwdiv@divisor& (0+255),w,b
 20690  006F66  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
 20691  006F68  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20692  006F6A  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20693  006F6C  E305               	bnc	l12242
 20694                           
 20695                           ; BSR set to: 0
 20696  006F6E  5175               	movf	___lwdiv@divisor& (0+255),w,b
 20697  006F70  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
 20698  006F72  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20699  006F74  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20700                           
 20701                           ; BSR set to: 0
 20702  006F76  8178               	bsf	___lwdiv@quotient& (0+255),0,b
 20703  006F78                     l12242:
 20704                           
 20705                           ; BSR set to: 0
 20706  006F78  90D8               	bcf	status,0,c
 20707  006F7A  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20708  006F7C  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
 20709                           
 20710                           ; BSR set to: 0
 20711  006F7E  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 20712  006F80  D7EE               	goto	l12234
 20713  006F82                     l2638:
 20714                           
 20715                           ; BSR set to: 0
 20716  006F82  C078  F073         	movff	___lwdiv@quotient,?___lwdiv
 20717  006F86  C079  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20718                           
 20719                           ; BSR set to: 0
 20720  006F8A  0012               	return		;funcret
 20721  006F8C                     __end_of___lwdiv:
 20722                           	opt stack 0
 20723                           tblptru	equ	0xFF8
 20724                           tblptrh	equ	0xFF7
 20725                           tblptrl	equ	0xFF6
 20726                           tablat	equ	0xFF5
 20727                           prodh	equ	0xFF4
 20728                           prodl	equ	0xFF3
 20729                           intcon3	equ	0xFF0
 20730                           postinc0	equ	0xFEE
 20731                           plusw0	equ	0xFEB
 20732                           fsr0h	equ	0xFEA
 20733                           fsr0l	equ	0xFE9
 20734                           wreg	equ	0xFE8
 20735                           indf1	equ	0xFE7
 20736                           postinc1	equ	0xFE6
 20737                           postdec1	equ	0xFE5
 20738                           plusw1	equ	0xFE3
 20739                           fsr1h	equ	0xFE2
 20740                           fsr1l	equ	0xFE1
 20741                           indf2	equ	0xFDF
 20742                           postinc2	equ	0xFDE
 20743                           postdec2	equ	0xFDD
 20744                           plusw2	equ	0xFDB
 20745                           fsr2h	equ	0xFDA
 20746                           fsr2l	equ	0xFD9
 20747                           status	equ	0xFD8
 20748                           
 20749 ;; *************** function _netDecayInterval *****************
 20750 ;; Defined at:
 20751 ;;		line 142 in file "../BeaconManager.c"
 20752 ;; Parameters:    Size  Location     Type
 20753 ;;		None
 20754 ;; Auto vars:     Size  Location     Type
 20755 ;;		None
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1    wreg      void 
 20758 ;; Registers used:
 20759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20760 ;; Tracked objects:
 20761 ;;		On entry : F/0
 20762 ;;		On exit  : F/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20769 ;;Total ram usage:        0 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:    9
 20772 ;; This function calls:
 20773 ;;		_netChooseAdvertiseTime
 20774 ;; This function is called by:
 20775 ;;		_BeaconManagerTask
 20776 ;; This function uses a non-reentrant model
 20777 ;;
 20778                           
 20779                           	psect	text82
 20780  00727A                     __ptext82:
 20781                           	opt stack 0
 20782  00727A                     _netDecayInterval:
 20783                           	opt stack 17
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;BeaconManager.c: 144: currentInterval <<=1;
 20787                           
 20788                           ; BSR set to: 0
 20789                           ;incstack = 0
 20790  00727A  0101               	movlb	1	; () banked
 20791  00727C  90D8               	bcf	status,0,c
 20792  00727E  37B6               	rlcf	_currentInterval& (0+255),f,b
 20793  007280  37B7               	rlcf	(_currentInterval+1)& (0+255),f,b
 20794  007282  37B8               	rlcf	(_currentInterval+2)& (0+255),f,b
 20795  007284  37B9               	rlcf	(_currentInterval+3)& (0+255),f,b
 20796                           
 20797                           ; BSR set to: 1
 20798                           ;BeaconManager.c: 145: if (currentInterval > ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5))
 20799  007286  0E81               	movlw	129
 20800  007288  5DB6               	subwf	_currentInterval& (0+255),w,b
 20801  00728A  0EA8               	movlw	168
 20802  00728C  59B7               	subwfb	(_currentInterval+1)& (0+255),w,b
 20803  00728E  0E12               	movlw	18
 20804  007290  59B8               	subwfb	(_currentInterval+2)& (0+255),w,b
 20805  007292  0E01               	movlw	1
 20806  007294  59B9               	subwfb	(_currentInterval+3)& (0+255),w,b
 20807  007296  E202 EF3F  F032    	bnc	_netChooseAdvertiseTime
 20808                           
 20809                           ; BSR set to: 1
 20810                           ;BeaconManager.c: 146: {
 20811                           ;BeaconManager.c: 147: currentInterval = ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5);
 20812  00729C  0E80               	movlw	128
 20813  00729E  6FB6               	movwf	_currentInterval& (0+255),b
 20814  0072A0  0EA8               	movlw	168
 20815  0072A2  6FB7               	movwf	(_currentInterval+1)& (0+255),b
 20816  0072A4  0E12               	movlw	18
 20817  0072A6  6FB8               	movwf	(_currentInterval+2)& (0+255),b
 20818  0072A8  0E01               	movlw	1
 20819  0072AA  6FB9               	movwf	(_currentInterval+3)& (0+255),b
 20820                           
 20821                           ; BSR set to: 1
 20822                           ;BeaconManager.c: 148: }
 20823                           ;BeaconManager.c: 149: netChooseAdvertiseTime();
 20824  0072AC  EF3F  F032         	goto	_netChooseAdvertiseTime	;wreg free
 20825  0072B0                     __end_of_netDecayInterval:
 20826                           	opt stack 0
 20827                           tblptru	equ	0xFF8
 20828                           tblptrh	equ	0xFF7
 20829                           tblptrl	equ	0xFF6
 20830                           tablat	equ	0xFF5
 20831                           prodh	equ	0xFF4
 20832                           prodl	equ	0xFF3
 20833                           intcon3	equ	0xFF0
 20834                           postinc0	equ	0xFEE
 20835                           plusw0	equ	0xFEB
 20836                           fsr0h	equ	0xFEA
 20837                           fsr0l	equ	0xFE9
 20838                           wreg	equ	0xFE8
 20839                           indf1	equ	0xFE7
 20840                           postinc1	equ	0xFE6
 20841                           postdec1	equ	0xFE5
 20842                           plusw1	equ	0xFE3
 20843                           fsr1h	equ	0xFE2
 20844                           fsr1l	equ	0xFE1
 20845                           indf2	equ	0xFDF
 20846                           postinc2	equ	0xFDE
 20847                           postdec2	equ	0xFDD
 20848                           plusw2	equ	0xFDB
 20849                           fsr2h	equ	0xFDA
 20850                           fsr2l	equ	0xFD9
 20851                           status	equ	0xFD8
 20852                           
 20853 ;; *************** function _MSTickGetDiffNow *****************
 20854 ;; Defined at:
 20855 ;;		line 28 in file "../TimeTick.c"
 20856 ;; Parameters:    Size  Location     Type
 20857 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 20858 ;; Auto vars:     Size  Location     Type
 20859 ;;  tdiff           8   67[BANK0 ] struct TickMS_t_def
 20860 ;;  tNow            8   59[BANK0 ] struct TickMS_t_def
 20861 ;;  diff            4   55[BANK0 ] unsigned long 
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  4   47[BANK0 ] unsigned long 
 20864 ;; Registers used:
 20865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20866 ;; Tracked objects:
 20867 ;;		On entry : C/0
 20868 ;;		On exit  : F/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20871 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20872 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20874 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20875 ;;Total ram usage:       28 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:    8
 20878 ;; This function calls:
 20879 ;;		_MSTickGet
 20880 ;; This function is called by:
 20881 ;;		_RouteManagerTask
 20882 ;;		_BeaconManagerTask
 20883 ;;		_TunnelManagerGetTunnel
 20884 ;;		_isKnownPacket
 20885 ;;		_TransportManagerTask
 20886 ;;		_NetworkManagerTask
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           
 20890                           	psect	text83
 20891  006290                     __ptext83:
 20892                           	opt stack 0
 20893  006290                     _MSTickGetDiffNow:
 20894                           	opt stack 17
 20895                           
 20896                           ;TimeTick.c: 31: TickMS tdiff;
 20897                           ;TimeTick.c: 32: TickMS tNow=MSTickGet();
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;incstack = 0
 20901  006290  EC58  F039         	call	_MSTickGet	;wreg free
 20902  006294  EE20  F09B         	lfsr	2,MSTickGetDiffNow@tNow
 20903  006298  0E07               	movlw	7
 20904  00629A                     u12921:
 20905  00629A  CFEB FFDB          	movff	plusw0,plusw2
 20906  00629E  06E8               	decf	wreg,f,c
 20907  0062A0  E2FC               	bc	u12921
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;TimeTick.c: 33: tdiff.msb=tNow.msb-tick.msb;
 20911  0062A2  5193               	movf	(MSTickGetDiffNow@tick+4)& (0+255),w,b
 20912  0062A4  5D9F               	subwf	(MSTickGetDiffNow@tNow+4)& (0+255),w,b
 20913  0062A6  6FA7               	movwf	(MSTickGetDiffNow@tdiff+4)& (0+255),b
 20914  0062A8  5194               	movf	(MSTickGetDiffNow@tick+5)& (0+255),w,b
 20915  0062AA  59A0               	subwfb	(MSTickGetDiffNow@tNow+5)& (0+255),w,b
 20916  0062AC  6FA8               	movwf	(MSTickGetDiffNow@tdiff+5)& (0+255),b
 20917  0062AE  5195               	movf	(MSTickGetDiffNow@tick+6)& (0+255),w,b
 20918  0062B0  59A1               	subwfb	(MSTickGetDiffNow@tNow+6)& (0+255),w,b
 20919  0062B2  6FA9               	movwf	(MSTickGetDiffNow@tdiff+6)& (0+255),b
 20920  0062B4  5196               	movf	(MSTickGetDiffNow@tick+7)& (0+255),w,b
 20921  0062B6  59A2               	subwfb	(MSTickGetDiffNow@tNow+7)& (0+255),w,b
 20922  0062B8  6FAA               	movwf	(MSTickGetDiffNow@tdiff+7)& (0+255),b
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;TimeTick.c: 34: tdiff.lsb=tNow.lsb-tick.lsb;
 20926  0062BA  518F               	movf	MSTickGetDiffNow@tick& (0+255),w,b
 20927  0062BC  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 20928  0062BE  6FA3               	movwf	MSTickGetDiffNow@tdiff& (0+255),b
 20929  0062C0  5190               	movf	(MSTickGetDiffNow@tick+1)& (0+255),w,b
 20930  0062C2  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 20931  0062C4  6FA4               	movwf	(MSTickGetDiffNow@tdiff+1)& (0+255),b
 20932  0062C6  5191               	movf	(MSTickGetDiffNow@tick+2)& (0+255),w,b
 20933  0062C8  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 20934  0062CA  6FA5               	movwf	(MSTickGetDiffNow@tdiff+2)& (0+255),b
 20935  0062CC  5192               	movf	(MSTickGetDiffNow@tick+3)& (0+255),w,b
 20936  0062CE  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 20937  0062D0  6FA6               	movwf	(MSTickGetDiffNow@tdiff+3)& (0+255),b
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;TimeTick.c: 35: if(tdiff.lsb>tNow.lsb)
 20941  0062D2  51A3               	movf	MSTickGetDiffNow@tdiff& (0+255),w,b
 20942  0062D4  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 20943  0062D6  51A4               	movf	(MSTickGetDiffNow@tdiff+1)& (0+255),w,b
 20944  0062D8  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 20945  0062DA  51A5               	movf	(MSTickGetDiffNow@tdiff+2)& (0+255),w,b
 20946  0062DC  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 20947  0062DE  51A6               	movf	(MSTickGetDiffNow@tdiff+3)& (0+255),w,b
 20948  0062E0  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 20949  0062E2  E205               	bc	l12064
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;TimeTick.c: 36: {
 20953                           ;TimeTick.c: 37: tdiff.msb--;
 20954  0062E4  07A7               	decf	(MSTickGetDiffNow@tdiff+4)& (0+255),f,b
 20955  0062E6  0E00               	movlw	0
 20956  0062E8  5BA8               	subwfb	(MSTickGetDiffNow@tdiff+5)& (0+255),f,b
 20957  0062EA  5BA9               	subwfb	(MSTickGetDiffNow@tdiff+6)& (0+255),f,b
 20958  0062EC  5BAA               	subwfb	(MSTickGetDiffNow@tdiff+7)& (0+255),f,b
 20959  0062EE                     l12064:
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;TimeTick.c: 38: }
 20963                           ;TimeTick.c: 39: diff=tdiff.lsb;
 20964  0062EE  C0A3  F097         	movff	MSTickGetDiffNow@tdiff,MSTickGetDiffNow@diff
 20965  0062F2  C0A4  F098         	movff	MSTickGetDiffNow@tdiff+1,MSTickGetDiffNow@diff+1
 20966  0062F6  C0A5  F099         	movff	MSTickGetDiffNow@tdiff+2,MSTickGetDiffNow@diff+2
 20967  0062FA  C0A6  F09A         	movff	MSTickGetDiffNow@tdiff+3,MSTickGetDiffNow@diff+3
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;TimeTick.c: 41: return(diff);
 20971  0062FE  C097  F08F         	movff	MSTickGetDiffNow@diff,?_MSTickGetDiffNow
 20972  006302  C098  F090         	movff	MSTickGetDiffNow@diff+1,?_MSTickGetDiffNow+1
 20973  006306  C099  F091         	movff	MSTickGetDiffNow@diff+2,?_MSTickGetDiffNow+2
 20974  00630A  C09A  F092         	movff	MSTickGetDiffNow@diff+3,?_MSTickGetDiffNow+3
 20975                           
 20976                           ; BSR set to: 0
 20977  00630E  0012               	return		;funcret
 20978  006310                     __end_of_MSTickGetDiffNow:
 20979                           	opt stack 0
 20980                           tblptru	equ	0xFF8
 20981                           tblptrh	equ	0xFF7
 20982                           tblptrl	equ	0xFF6
 20983                           tablat	equ	0xFF5
 20984                           prodh	equ	0xFF4
 20985                           prodl	equ	0xFF3
 20986                           intcon3	equ	0xFF0
 20987                           postinc0	equ	0xFEE
 20988                           plusw0	equ	0xFEB
 20989                           fsr0h	equ	0xFEA
 20990                           fsr0l	equ	0xFE9
 20991                           wreg	equ	0xFE8
 20992                           indf1	equ	0xFE7
 20993                           postinc1	equ	0xFE6
 20994                           postdec1	equ	0xFE5
 20995                           plusw1	equ	0xFE3
 20996                           fsr1h	equ	0xFE2
 20997                           fsr1l	equ	0xFE1
 20998                           indf2	equ	0xFDF
 20999                           postinc2	equ	0xFDE
 21000                           postdec2	equ	0xFDD
 21001                           plusw2	equ	0xFDB
 21002                           fsr2h	equ	0xFDA
 21003                           fsr2l	equ	0xFD9
 21004                           status	equ	0xFD8
 21005                           
 21006 ;; *************** function _MiMAC_ReceivedPacket *****************
 21007 ;; Defined at:
 21008 ;;		line 927 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 21009 ;; Parameters:    Size  Location     Type
 21010 ;;		None
 21011 ;; Auto vars:     Size  Location     Type
 21012 ;;  addr            2   80[BANK0 ] struct addr_t_def
 21013 ;;  FrameCounter    4   82[BANK0 ] unsigned long 
 21014 ;;  PayloadIndex    1   87[BANK0 ] unsigned char 
 21015 ;;  j               1   86[BANK0 ] unsigned char 
 21016 ;;  currentTick     4   76[BANK0 ] struct MIWI_TICK_t
 21017 ;;  i               1   88[BANK0 ] unsigned char 
 21018 ;; Return value:  Size  Location     Type
 21019 ;;                  1    wreg      unsigned char 
 21020 ;; Registers used:
 21021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21022 ;; Tracked objects:
 21023 ;;		On entry : C/1
 21024 ;;		On exit  : D/0
 21025 ;;		Unchanged: 0/0
 21026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21028 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21029 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21030 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21031 ;;Total ram usage:       21 bytes
 21032 ;; Hardware stack levels used:    1
 21033 ;; Hardware stack levels required when called:    8
 21034 ;; This function calls:
 21035 ;;		_CCM_Dec
 21036 ;;		_MiWi_TickGetMs
 21037 ;;		_isSameAddress
 21038 ;;		_memcpy
 21039 ;; This function is called by:
 21040 ;;		_MiApp_MessageAvailable
 21041 ;; This function uses a non-reentrant model
 21042 ;;
 21043                           
 21044                           	psect	text84
 21045  000F50                     __ptext84:
 21046                           	opt stack 0
 21047  000F50                     _MiMAC_ReceivedPacket:
 21048                           	opt stack 20
 21049                           
 21050                           ;drv_mrf_miwi_mesh_89xa.c: 929: uint8_t i;
 21051                           ;drv_mrf_miwi_mesh_89xa.c: 930: MIWI_TICK currentTick;
 21052                           ;drv_mrf_miwi_mesh_89xa.c: 934: for(i = 0; i < 5; i++)
 21053                           
 21054                           ; BSR set to: 0
 21055                           ;incstack = 0
 21056  000F50  0100               	movlb	0	; () banked
 21057  000F52  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 21058  000F54                     l13830:
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;drv_mrf_miwi_mesh_89xa.c: 935: {
 21062                           ;drv_mrf_miwi_mesh_89xa.c: 936: currentTick = MiWi_TickGetMs();
 21063  000F54  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 21064  000F58  C07F  F0AC         	movff	?_MiWi_TickGetMs,MiMAC_ReceivedPacket@currentTick
 21065  000F5C  C080  F0AD         	movff	?_MiWi_TickGetMs+1,MiMAC_ReceivedPacket@currentTick+1
 21066  000F60  C081  F0AE         	movff	?_MiWi_TickGetMs+2,MiMAC_ReceivedPacket@currentTick+2
 21067  000F64  C082  F0AF         	movff	?_MiWi_TickGetMs+3,MiMAC_ReceivedPacket@currentTick+3
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;drv_mrf_miwi_mesh_89xa.c: 937: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].st
      +                          artTick.Val) &&
 21071                           ;drv_mrf_miwi_mesh_89xa.c: 938: ((currentTick.Val - AckInfo[i].startTick.Val) > 1000) )
 21072  000F68  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21073  000F6A  0D06               	mullw	6
 21074  000F6C  0E00               	movlw	low _AckInfo
 21075  000F6E  24F3               	addwf	prodl,w,c
 21076  000F70  6ED9               	movwf	fsr2l,c
 21077  000F72  0E02               	movlw	high _AckInfo
 21078  000F74  20F4               	addwfc	prodh,w,c
 21079  000F76  6EDA               	movwf	fsr2h,c
 21080  000F78  50DF               	movf	indf2,w,c
 21081  000F7A  E03E               	bz	l13840
 21082                           
 21083                           ; BSR set to: 0
 21084  000F7C  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21085  000F7E  0D06               	mullw	6
 21086  000F80  0E02               	movlw	low (_AckInfo+2)
 21087  000F82  24F3               	addwf	prodl,w,c
 21088  000F84  6ED9               	movwf	fsr2l,c
 21089  000F86  0E02               	movlw	high (_AckInfo+2)
 21090  000F88  20F4               	addwfc	prodh,w,c
 21091  000F8A  6EDA               	movwf	fsr2h,c
 21092  000F8C  51AC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21093  000F8E  5CDE               	subwf	postinc2,w,c
 21094  000F90  51AD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21095  000F92  58DE               	subwfb	postinc2,w,c
 21096  000F94  51AE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21097  000F96  58DE               	subwfb	postinc2,w,c
 21098  000F98  51AF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21099  000F9A  58DE               	subwfb	postinc2,w,c
 21100  000F9C  E22D               	bc	l13840
 21101                           
 21102                           ; BSR set to: 0
 21103  000F9E  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21104  000FA0  0D06               	mullw	6
 21105  000FA2  0E02               	movlw	low (_AckInfo+2)
 21106  000FA4  24F3               	addwf	prodl,w,c
 21107  000FA6  6ED9               	movwf	fsr2l,c
 21108  000FA8  0E02               	movlw	high (_AckInfo+2)
 21109  000FAA  20F4               	addwfc	prodh,w,c
 21110  000FAC  6EDA               	movwf	fsr2h,c
 21111  000FAE  CFDE F0A4          	movff	postinc2,??_MiMAC_ReceivedPacket
 21112  000FB2  CFDE F0A5          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 21113  000FB6  CFDE F0A6          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 21114  000FBA  CFDE F0A7          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 21115  000FBE  51A4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21116  000FC0  5DAC               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 21117  000FC2  6FA8               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 21118  000FC4  51A5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21119  000FC6  59AD               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 21120  000FC8  6FA9               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 21121  000FCA  51A6               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 21122  000FCC  59AE               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 21123  000FCE  6FAA               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 21124  000FD0  51A7               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 21125  000FD2  59AF               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 21126  000FD4  6FAB               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 21127  000FD6  51AB               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 21128  000FD8  11AA               	iorwf	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 21129  000FDA  E105               	bnz	u15650
 21130  000FDC  0EE9               	movlw	233
 21131  000FDE  5DA8               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 21132  000FE0  0E03               	movlw	3
 21133  000FE2  59A9               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 21134  000FE4  E309               	bnc	l13840
 21135  000FE6                     u15650:
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;drv_mrf_miwi_mesh_89xa.c: 939: {
 21139                           ;drv_mrf_miwi_mesh_89xa.c: 940: AckInfo[i].Valid = 0;
 21140  000FE6  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21141  000FE8  0D06               	mullw	6
 21142  000FEA  0E00               	movlw	low _AckInfo
 21143  000FEC  24F3               	addwf	prodl,w,c
 21144  000FEE  6ED9               	movwf	fsr2l,c
 21145  000FF0  0E02               	movlw	high _AckInfo
 21146  000FF2  20F4               	addwfc	prodh,w,c
 21147  000FF4  6EDA               	movwf	fsr2h,c
 21148  000FF6  6ADF               	clrf	indf2,c
 21149  000FF8                     l13840:
 21150                           
 21151                           ; BSR set to: 0
 21152  000FF8  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21153                           
 21154                           ; BSR set to: 0
 21155  000FFA  0E04               	movlw	4
 21156  000FFC  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21157  000FFE  D7AA               	goto	l13830
 21158                           
 21159                           ; BSR set to: 0
 21160                           ;drv_mrf_miwi_mesh_89xa.c: 941: }
 21161                           ;drv_mrf_miwi_mesh_89xa.c: 942: }
 21162                           ;drv_mrf_miwi_mesh_89xa.c: 945: if( ReceivedBankIndex != 0xFF )
 21163  001000  283E               	incf	_ReceivedBankIndex,w,c
 21164  001002  E001               	bz	l188
 21165                           
 21166                           ; BSR set to: 0
 21167                           ;drv_mrf_miwi_mesh_89xa.c: 946: {
 21168                           ;drv_mrf_miwi_mesh_89xa.c: 947: return 0;
 21169  001004  0C00               	retlw	0
 21170  001006                     l188:
 21171                           
 21172                           ; BSR set to: 0
 21173                           ;drv_mrf_miwi_mesh_89xa.c: 948: }
 21174                           ;drv_mrf_miwi_mesh_89xa.c: 950: for(i = 0; i < 2; i++)
 21175  001006  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 21176  001008                     l13854:
 21177                           
 21178                           ; BSR set to: 0
 21179                           ;drv_mrf_miwi_mesh_89xa.c: 951: {
 21180                           ;drv_mrf_miwi_mesh_89xa.c: 952: if( RxPacket[i].flags.bits.Valid )
 21181  001008  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21182  00100A  0D47               	mullw	71
 21183  00100C  0E00               	movlw	low _RxPacket
 21184  00100E  24F3               	addwf	prodl,w,c
 21185  001010  6ED9               	movwf	fsr2l,c
 21186  001012  0E03               	movlw	high _RxPacket
 21187  001014  20F4               	addwfc	prodh,w,c
 21188  001016  6EDA               	movwf	fsr2h,c
 21189  001018  A0DF               	btfss	indf2,0,c
 21190  00101A  D15D               	goto	l13942
 21191                           
 21192                           ; BSR set to: 3
 21193                           ;drv_mrf_miwi_mesh_89xa.c: 953: {
 21194                           ;drv_mrf_miwi_mesh_89xa.c: 954: uint8_t PayloadIndex;
 21195                           ;drv_mrf_miwi_mesh_89xa.c: 955: uint8_t j;
 21196                           ;drv_mrf_miwi_mesh_89xa.c: 957: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 21197  00101C  0100               	movlb	0	; () banked
 21198  00101E  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21199  001020  0D47               	mullw	71
 21200  001022  0E01               	movlw	low (_RxPacket+1)
 21201  001024  24F3               	addwf	prodl,w,c
 21202  001026  6ED9               	movwf	fsr2l,c
 21203  001028  0E03               	movlw	high (_RxPacket+1)
 21204  00102A  20F4               	addwfc	prodh,w,c
 21205  00102C  6EDA               	movwf	fsr2h,c
 21206  00102E  50DF               	movf	indf2,w,c
 21207  001030  0102               	movlb	2	; () banked
 21208  001032  6F6E               	movwf	_MACRxPacket& (0+255),b
 21209                           
 21210                           ;drv_mrf_miwi_mesh_89xa.c: 958: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 21211  001034  0100               	movlb	0	; () banked
 21212  001036  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21213  001038  0D47               	mullw	71
 21214  00103A  0E41               	movlw	low (_RxPacket+65)
 21215  00103C  24F3               	addwf	prodl,w,c
 21216  00103E  6ED9               	movwf	fsr2l,c
 21217  001040  0E03               	movlw	high (_RxPacket+65)
 21218  001042  20F4               	addwfc	prodh,w,c
 21219  001044  6EDA               	movwf	fsr2h,c
 21220  001046  50DF               	movf	indf2,w,c
 21221  001048  0102               	movlb	2	; () banked
 21222  00104A  6F73               	movwf	(_MACRxPacket+5)& (0+255),b
 21223                           
 21224                           ; BSR set to: 2
 21225                           ;drv_mrf_miwi_mesh_89xa.c: 959: PayloadIndex = 2;
 21226  00104C  0E02               	movlw	2
 21227  00104E  0100               	movlb	0	; () banked
 21228  001050  6FB7               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 21229                           
 21230                           ; BSR set to: 0
 21231                           ;drv_mrf_miwi_mesh_89xa.c: 961: if( MACRxPacket.flags.bits.destPrsnt )
 21232  001052  0102               	movlb	2	; () banked
 21233  001054  AD6E               	btfss	_MACRxPacket& (0+255),6,b
 21234  001056  D01A               	goto	l193
 21235                           
 21236                           ; BSR set to: 2
 21237                           ;drv_mrf_miwi_mesh_89xa.c: 962: {
 21238                           ;drv_mrf_miwi_mesh_89xa.c: 963: memcpy((uint8_t*)&MACRxPacket.DestPANID,(uint8_t*)&RxPac
      +                          ket[i].Payload[PayloadIndex],2);
 21239  001058  0E78               	movlw	low (_MACRxPacket+10)
 21240  00105A  0100               	movlb	0	; () banked
 21241  00105C  6F75               	movwf	memcpy@d1& (0+255),b
 21242  00105E  0E02               	movlw	high (_MACRxPacket+10)
 21243  001060  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 21244  001062  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21245  001064  0D47               	mullw	71
 21246  001066  0E03               	movlw	low (_RxPacket+3)
 21247  001068  24F3               	addwf	prodl,w,c
 21248  00106A  6F77               	movwf	memcpy@s1& (0+255),b
 21249  00106C  0E03               	movlw	high (_RxPacket+3)
 21250  00106E  20F4               	addwfc	prodh,w,c
 21251  001070  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 21252  001072  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 21253  001074  0E02               	movlw	2
 21254  001076  6F79               	movwf	memcpy@n& (0+255),b
 21255  001078  EC5D  F036         	call	_memcpy	;wreg free
 21256                           
 21257                           ; BSR set to: 0
 21258                           ;drv_mrf_miwi_mesh_89xa.c: 964: PayloadIndex+=2;
 21259  00107C  0E02               	movlw	2
 21260  00107E  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;drv_mrf_miwi_mesh_89xa.c: 966: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 21264  001080  3036               	rrcf	_MACInitParams,w,c
 21265  001082  32E8               	rrcf	wreg,f,c
 21266  001084  32E8               	rrcf	wreg,f,c
 21267  001086  0B0F               	andlw	15
 21268  001088  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21269                           
 21270                           ;drv_mrf_miwi_mesh_89xa.c: 967: }else
 21271  00108A  D002               	goto	l194
 21272  00108C                     l193:
 21273                           
 21274                           ; BSR set to: 2
 21275                           ;drv_mrf_miwi_mesh_89xa.c: 968: {
 21276                           ;drv_mrf_miwi_mesh_89xa.c: 969: MACRxPacket.DestPANID=0xffff;
 21277  00108C  6978               	setf	(_MACRxPacket+10)& (0+255),b
 21278  00108E  6979               	setf	(_MACRxPacket+11)& (0+255),b
 21279  001090                     l194:
 21280                           
 21281                           ;drv_mrf_miwi_mesh_89xa.c: 970: }
 21282                           ;drv_mrf_miwi_mesh_89xa.c: 972: if( MACRxPacket.flags.bits.sourcePrsnt )
 21283  001090  0102               	movlb	2	; () banked
 21284  001092  AF6E               	btfss	_MACRxPacket& (0+255),7,b
 21285  001094  D03C               	goto	l195
 21286                           
 21287                           ; BSR set to: 2
 21288                           ;drv_mrf_miwi_mesh_89xa.c: 973: {
 21289                           ;drv_mrf_miwi_mesh_89xa.c: 974: memcpy((uint8_t*)&MACRxPacket.SourcePANID,(uint8_t*)&RxP
      +                          acket[i].Payload[PayloadIndex],2);
 21290  001096  0E76               	movlw	low (_MACRxPacket+8)
 21291  001098  0100               	movlb	0	; () banked
 21292  00109A  6F75               	movwf	memcpy@d1& (0+255),b
 21293  00109C  0E02               	movlw	high (_MACRxPacket+8)
 21294  00109E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 21295  0010A0  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21296  0010A2  0D47               	mullw	71
 21297  0010A4  0E00               	movlw	low _RxPacket
 21298  0010A6  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21299  0010A8  0E03               	movlw	high _RxPacket
 21300  0010AA  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21301  0010AC  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21302  0010AE  0E00               	movlw	0
 21303  0010B0  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21304  0010B2  50F3               	movf	prodl,w,c
 21305  0010B4  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21306  0010B6  50F4               	movf	prodh,w,c
 21307  0010B8  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21308  0010BA  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21309  0010BC  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21310  0010BE  6F77               	movwf	memcpy@s1& (0+255),b
 21311  0010C0  0E00               	movlw	0
 21312  0010C2  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21313  0010C4  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 21314  0010C6  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 21315  0010C8  0E02               	movlw	2
 21316  0010CA  6F79               	movwf	memcpy@n& (0+255),b
 21317  0010CC  EC5D  F036         	call	_memcpy	;wreg free
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;drv_mrf_miwi_mesh_89xa.c: 975: PayloadIndex+=2;
 21321  0010D0  0E02               	movlw	2
 21322  0010D2  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21323                           
 21324                           ; BSR set to: 0
 21325                           ;drv_mrf_miwi_mesh_89xa.c: 977: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Pay
      +                          load[PayloadIndex]);
 21326  0010D4  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21327  0010D6  0D47               	mullw	71
 21328  0010D8  0E00               	movlw	low _RxPacket
 21329  0010DA  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21330  0010DC  0E03               	movlw	high _RxPacket
 21331  0010DE  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21332  0010E0  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21333  0010E2  0E00               	movlw	0
 21334  0010E4  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21335  0010E6  50F3               	movf	prodl,w,c
 21336  0010E8  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21337  0010EA  50F4               	movf	prodh,w,c
 21338  0010EC  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21339  0010EE  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21340  0010F0  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21341  0010F2  0102               	movlb	2	; () banked
 21342  0010F4  6F6F               	movwf	(_MACRxPacket+1)& (0+255),b
 21343  0010F6  0100               	movlb	0	; () banked
 21344  0010F8  0E00               	movlw	0
 21345  0010FA  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21346  0010FC  0102               	movlb	2	; () banked
 21347  0010FE  6F70               	movwf	(_MACRxPacket+2)& (0+255),b
 21348                           
 21349                           ; BSR set to: 2
 21350                           ;drv_mrf_miwi_mesh_89xa.c: 978: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 21351  001100  3036               	rrcf	_MACInitParams,w,c
 21352  001102  32E8               	rrcf	wreg,f,c
 21353  001104  32E8               	rrcf	wreg,f,c
 21354  001106  0B0F               	andlw	15
 21355  001108  0100               	movlb	0	; () banked
 21356  00110A  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21357                           
 21358                           ;drv_mrf_miwi_mesh_89xa.c: 979: }
 21359  00110C  D006               	goto	l196
 21360  00110E                     l195:
 21361                           
 21362                           ; BSR set to: 2
 21363                           ;drv_mrf_miwi_mesh_89xa.c: 980: else
 21364                           ;drv_mrf_miwi_mesh_89xa.c: 981: {
 21365                           ;drv_mrf_miwi_mesh_89xa.c: 982: MACRxPacket.SourceAddress = (0);
 21366  00110E  6B6F               	clrf	(_MACRxPacket+1)& (0+255),b
 21367  001110  6B70               	clrf	(_MACRxPacket+2)& (0+255),b
 21368                           
 21369                           ;drv_mrf_miwi_mesh_89xa.c: 983: MACRxPacket.SourcePANID=myPANID;
 21370  001112  C04D  F276         	movff	_myPANID,_MACRxPacket+8
 21371  001116  C04E  F277         	movff	_myPANID+1,_MACRxPacket+9
 21372  00111A                     l196:
 21373                           
 21374                           ;drv_mrf_miwi_mesh_89xa.c: 984: }
 21375                           ;drv_mrf_miwi_mesh_89xa.c: 987: if( MACRxPacket.flags.bits.secEn )
 21376  00111A  0102               	movlb	2	; () banked
 21377  00111C  A76E               	btfss	_MACRxPacket& (0+255),3,b
 21378  00111E  D0BB               	goto	l13930
 21379                           
 21380                           ; BSR set to: 2
 21381                           ;drv_mrf_miwi_mesh_89xa.c: 988: {
 21382                           ;drv_mrf_miwi_mesh_89xa.c: 990: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 21383  001120  0100               	movlb	0	; () banked
 21384  001122  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21385  001124  0D47               	mullw	71
 21386  001126  0E00               	movlw	low _RxPacket
 21387  001128  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21388  00112A  0E03               	movlw	high _RxPacket
 21389  00112C  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21390  00112E  0E05               	movlw	5
 21391  001130  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21392  001132  0E00               	movlw	0
 21393  001134  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21394  001136  50F3               	movf	prodl,w,c
 21395  001138  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21396  00113A  50F4               	movf	prodh,w,c
 21397  00113C  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21398  00113E  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21399  001140  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21400  001142  6ED9               	movwf	fsr2l,c
 21401  001144  0E00               	movlw	0
 21402  001146  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21403  001148  6EDA               	movwf	fsr2h,c
 21404  00114A  50DF               	movf	indf2,w,c
 21405  00114C  E00A               	bz	l198
 21406  00114E                     l13878:
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;drv_mrf_miwi_mesh_89xa.c: 991: {
 21410                           ;drv_mrf_miwi_mesh_89xa.c: 992: RxPacket[i].flags.Val = 0;
 21411  00114E  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21412  001150  0D47               	mullw	71
 21413  001152  0E00               	movlw	low _RxPacket
 21414  001154  24F3               	addwf	prodl,w,c
 21415  001156  6ED9               	movwf	fsr2l,c
 21416  001158  0E03               	movlw	high _RxPacket
 21417  00115A  20F4               	addwfc	prodh,w,c
 21418  00115C  6EDA               	movwf	fsr2h,c
 21419  00115E  6ADF               	clrf	indf2,c
 21420  001160  0C00               	retlw	0
 21421  001162                     l198:
 21422                           
 21423                           ; BSR set to: 0
 21424                           ;drv_mrf_miwi_mesh_89xa.c: 994: }
 21425                           ;drv_mrf_miwi_mesh_89xa.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 21426  001162  0102               	movlb	2	; () banked
 21427  001164  AF6E               	btfss	_MACRxPacket& (0+255),7,b
 21428  001166  D071               	goto	l13918
 21429                           
 21430                           ; BSR set to: 2
 21431                           ;drv_mrf_miwi_mesh_89xa.c: 998: {
 21432                           ;drv_mrf_miwi_mesh_89xa.c: 999: for(j = 0; j < 5; j++)
 21433  001168  0100               	movlb	0	; () banked
 21434  00116A  6BB6               	clrf	MiMAC_ReceivedPacket@j& (0+255),b
 21435  00116C                     l13890:
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;drv_mrf_miwi_mesh_89xa.c: 1000: {
 21439                           ;drv_mrf_miwi_mesh_89xa.c: 1001: addr_t addr;
 21440                           ;drv_mrf_miwi_mesh_89xa.c: 1002: memcpy(addr.bytes,MACRxPacket.SourceAddress,2);
 21441  00116C  0EB0               	movlw	low MiMAC_ReceivedPacket@addr
 21442  00116E  6F75               	movwf	memcpy@d1& (0+255),b
 21443  001170  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 21444  001172  C26F  F077         	movff	_MACRxPacket+1,memcpy@s1
 21445  001176  C270  F078         	movff	_MACRxPacket+2,memcpy@s1+1
 21446  00117A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 21447  00117C  0E02               	movlw	2
 21448  00117E  6F79               	movwf	memcpy@n& (0+255),b
 21449  001180  EC5D  F036         	call	_memcpy	;wreg free
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;drv_mrf_miwi_mesh_89xa.c: 1003: if( (ConnectionTable[j].status.bits.isValid) &&
 21453                           ;drv_mrf_miwi_mesh_89xa.c: 1004: isSameAddress(ConnectionTable[j].Address, addr) )
 21454  001184  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21455  001186  0D0B               	mullw	11
 21456  001188  0E82               	movlw	low (_ConnectionTable+10)
 21457  00118A  24F3               	addwf	prodl,w,c
 21458  00118C  6ED9               	movwf	fsr2l,c
 21459  00118E  0E04               	movlw	high (_ConnectionTable+10)
 21460  001190  20F4               	addwfc	prodh,w,c
 21461  001192  6EDA               	movwf	fsr2h,c
 21462  001194  AEDF               	btfss	indf2,7,c
 21463  001196  D015               	goto	l13898
 21464                           
 21465                           ; BSR set to: 4
 21466  001198  0100               	movlb	0	; () banked
 21467  00119A  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21468  00119C  0D0B               	mullw	11
 21469  00119E  0E80               	movlw	low (_ConnectionTable+8)
 21470  0011A0  24F3               	addwf	prodl,w,c
 21471  0011A2  6ED9               	movwf	fsr2l,c
 21472  0011A4  0E04               	movlw	high (_ConnectionTable+8)
 21473  0011A6  20F4               	addwfc	prodh,w,c
 21474  0011A8  6EDA               	movwf	fsr2h,c
 21475  0011AA  CFDE F07D          	movff	postinc2,isSameAddress@a1
 21476  0011AE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 21477  0011B2  C0B0  F07F         	movff	MiMAC_ReceivedPacket@addr,isSameAddress@a2
 21478  0011B6  C0B1  F080         	movff	MiMAC_ReceivedPacket@addr+1,isSameAddress@a2+1
 21479  0011BA  ECB1  F03A         	call	_isSameAddress	;wreg free
 21480  0011BE  0900               	iorlw	0
 21481  0011C0  E105               	bnz	l13902
 21482  0011C2                     l13898:
 21483  0011C2  0100               	movlb	0	; () banked
 21484  0011C4  2BB6               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 21485                           
 21486                           ; BSR set to: 0
 21487  0011C6  0E04               	movlw	4
 21488  0011C8  65B6               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 21489  0011CA  D7D0               	goto	l13890
 21490  0011CC                     l13902:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;drv_mrf_miwi_mesh_89xa.c: 1007: }
 21494                           ;drv_mrf_miwi_mesh_89xa.c: 1008: }
 21495                           ;drv_mrf_miwi_mesh_89xa.c: 1009: if( j < 5 )
 21496  0011CC  0E05               	movlw	5
 21497  0011CE  61B6               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 21498  0011D0  D03C               	goto	l13918
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;drv_mrf_miwi_mesh_89xa.c: 1010: {
 21502                           ;drv_mrf_miwi_mesh_89xa.c: 1011: uint32_t FrameCounter;
 21503                           ;drv_mrf_miwi_mesh_89xa.c: 1012: memcpy((uint8_t*)&FrameCounter,(uint8_t*)&RxPacket[i].P
      +                          ayload[PayloadIndex],4);
 21504  0011D2  0EB2               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 21505  0011D4  6F75               	movwf	memcpy@d1& (0+255),b
 21506  0011D6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 21507  0011D8  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21508  0011DA  0D47               	mullw	71
 21509  0011DC  0E00               	movlw	low _RxPacket
 21510  0011DE  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21511  0011E0  0E03               	movlw	high _RxPacket
 21512  0011E2  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21513  0011E4  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21514  0011E6  0E00               	movlw	0
 21515  0011E8  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21516  0011EA  50F3               	movf	prodl,w,c
 21517  0011EC  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21518  0011EE  50F4               	movf	prodh,w,c
 21519  0011F0  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21520  0011F2  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21521  0011F4  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21522  0011F6  6F77               	movwf	memcpy@s1& (0+255),b
 21523  0011F8  0E00               	movlw	0
 21524  0011FA  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21525  0011FC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 21526  0011FE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 21527  001200  0E04               	movlw	4
 21528  001202  6F79               	movwf	memcpy@n& (0+255),b
 21529  001204  EC5D  F036         	call	_memcpy	;wreg free
 21530                           
 21531                           ; BSR set to: 0
 21532                           ;drv_mrf_miwi_mesh_89xa.c: 1014: if( ConnectionTable[j].IncomingFrameCounter > FrameCoun
      +                          ter )
 21533  001208  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21534  00120A  0D0B               	mullw	11
 21535  00120C  0E78               	movlw	low _ConnectionTable
 21536  00120E  24F3               	addwf	prodl,w,c
 21537  001210  6ED9               	movwf	fsr2l,c
 21538  001212  0E04               	movlw	high _ConnectionTable
 21539  001214  20F4               	addwfc	prodh,w,c
 21540  001216  6EDA               	movwf	fsr2h,c
 21541  001218  50DE               	movf	postinc2,w,c
 21542  00121A  5DB2               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 21543  00121C  50DE               	movf	postinc2,w,c
 21544  00121E  59B3               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 21545  001220  50DE               	movf	postinc2,w,c
 21546  001222  59B4               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 21547  001224  50DE               	movf	postinc2,w,c
 21548  001226  59B5               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 21549  001228  E392               	bnc	l13878
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;drv_mrf_miwi_mesh_89xa.c: 1019: else
 21553                           ;drv_mrf_miwi_mesh_89xa.c: 1020: {
 21554                           ;drv_mrf_miwi_mesh_89xa.c: 1021: ConnectionTable[j].IncomingFrameCounter = FrameCounter;
 21555  00122A  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 21556  00122C  0D0B               	mullw	11
 21557  00122E  0E78               	movlw	low _ConnectionTable
 21558  001230  24F3               	addwf	prodl,w,c
 21559  001232  6ED9               	movwf	fsr2l,c
 21560  001234  0E04               	movlw	high _ConnectionTable
 21561  001236  20F4               	addwfc	prodh,w,c
 21562  001238  6EDA               	movwf	fsr2h,c
 21563  00123A  C0B2  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 21564  00123E  C0B3  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 21565  001242  C0B4  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 21566  001246  C0B5  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 21567  00124A                     l13918:
 21568                           
 21569                           ;drv_mrf_miwi_mesh_89xa.c: 1022: }
 21570                           ;drv_mrf_miwi_mesh_89xa.c: 1023: }
 21571                           ;drv_mrf_miwi_mesh_89xa.c: 1024: }
 21572                           ;drv_mrf_miwi_mesh_89xa.c: 1027: PayloadIndex += 5;
 21573  00124A  0E05               	movlw	5
 21574  00124C  0100               	movlb	0	; () banked
 21575  00124E  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;drv_mrf_miwi_mesh_89xa.c: 1049: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex
      +                          , RxPacket[i].PayloadLen-PayloadIndex, key) == 0)
 21579  001250  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21580  001252  0D47               	mullw	71
 21581  001254  0E01               	movlw	low (_RxPacket+1)
 21582  001256  24F3               	addwf	prodl,w,c
 21583  001258  6F97               	movwf	CCM_Dec@text& (0+255),b
 21584  00125A  0E03               	movlw	high (_RxPacket+1)
 21585  00125C  20F4               	addwfc	prodh,w,c
 21586  00125E  6F98               	movwf	(CCM_Dec@text+1)& (0+255),b
 21587  001260  C0B7  F099         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 21588  001264  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21589  001266  0D47               	mullw	71
 21590  001268  0E41               	movlw	low (_RxPacket+65)
 21591  00126A  24F3               	addwf	prodl,w,c
 21592  00126C  6ED9               	movwf	fsr2l,c
 21593  00126E  0E03               	movlw	high (_RxPacket+65)
 21594  001270  20F4               	addwfc	prodh,w,c
 21595  001272  6EDA               	movwf	fsr2h,c
 21596  001274  50DF               	movf	indf2,w,c
 21597  001276  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21598  001278  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21599  00127A  5DA4               	subwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21600  00127C  6F9A               	movwf	CCM_Dec@payloadLen& (0+255),b
 21601  00127E  0E8C               	movlw	low _key
 21602  001280  6F9B               	movwf	CCM_Dec@key& (0+255),b
 21603  001282  0E02               	movlw	high _key
 21604  001284  6F9C               	movwf	(CCM_Dec@key+1)& (0+255),b
 21605  001286  EC83  F02B         	call	_CCM_Dec	;wreg free
 21606  00128A  0900               	iorlw	0
 21607  00128C  E101 D75F          	bz	l13878
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;drv_mrf_miwi_mesh_89xa.c: 1053: }
 21611                           ;drv_mrf_miwi_mesh_89xa.c: 1070: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 21612  001290  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21613  001292  0F02               	addlw	2
 21614  001294  D002               	goto	L9
 21615  001296                     l13930:
 21616                           
 21617                           ; BSR set to: 2
 21618                           ;drv_mrf_miwi_mesh_89xa.c: 1072: else
 21619                           ;drv_mrf_miwi_mesh_89xa.c: 1073: {
 21620                           ;drv_mrf_miwi_mesh_89xa.c: 1074: MACRxPacket.PayloadLen -= PayloadIndex;
 21621  001296  0100               	movlb	0	; () banked
 21622  001298  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21623  00129A                     L9:
 21624  00129A  0102               	movlb	2	; () banked
 21625  00129C  5F73               	subwf	(_MACRxPacket+5)& (0+255),f,b
 21626                           
 21627                           ; BSR set to: 2
 21628                           ;drv_mrf_miwi_mesh_89xa.c: 1075: }
 21629                           ;drv_mrf_miwi_mesh_89xa.c: 1083: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 21630  00129E  0100               	movlb	0	; () banked
 21631  0012A0  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21632  0012A2  0D47               	mullw	71
 21633  0012A4  0E00               	movlw	low _RxPacket
 21634  0012A6  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 21635  0012A8  0E03               	movlw	high _RxPacket
 21636  0012AA  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 21637  0012AC  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21638  0012AE  0E00               	movlw	0
 21639  0012B0  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21640  0012B2  50F3               	movf	prodl,w,c
 21641  0012B4  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 21642  0012B6  50F4               	movf	prodh,w,c
 21643  0012B8  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 21644  0012BA  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 21645  0012BC  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 21646  0012BE  0102               	movlb	2	; () banked
 21647  0012C0  6F71               	movwf	(_MACRxPacket+3)& (0+255),b
 21648  0012C2  0100               	movlb	0	; () banked
 21649  0012C4  0E00               	movlw	0
 21650  0012C6  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 21651  0012C8  0102               	movlb	2	; () banked
 21652  0012CA  6F72               	movwf	(_MACRxPacket+4)& (0+255),b
 21653                           
 21654                           ; BSR set to: 2
 21655                           ;drv_mrf_miwi_mesh_89xa.c: 1085: MACRxPacket.RSSIValue = RSSILock;
 21656  0012CC  C1D5  F274         	movff	_RSSILock,_MACRxPacket+6
 21657                           
 21658                           ; BSR set to: 2
 21659                           ;drv_mrf_miwi_mesh_89xa.c: 1088: ReceivedBankIndex = i;
 21660  0012D0  C0B8  F03E         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 21661                           
 21662                           ; BSR set to: 2
 21663                           ;drv_mrf_miwi_mesh_89xa.c: 1089: return 1;
 21664  0012D4  0C01               	retlw	1
 21665  0012D6                     l13942:
 21666                           
 21667                           ; BSR set to: 3
 21668  0012D6  0100               	movlb	0	; () banked
 21669  0012D8  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21670                           
 21671                           ; BSR set to: 0
 21672  0012DA  0E01               	movlw	1
 21673  0012DC  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21674  0012DE  D694               	goto	l13854
 21675  0012E0  0C00               	retlw	0
 21676  0012E2                     __end_of_MiMAC_ReceivedPacket:
 21677                           	opt stack 0
 21678                           tblptru	equ	0xFF8
 21679                           tblptrh	equ	0xFF7
 21680                           tblptrl	equ	0xFF6
 21681                           tablat	equ	0xFF5
 21682                           prodh	equ	0xFF4
 21683                           prodl	equ	0xFF3
 21684                           intcon3	equ	0xFF0
 21685                           postinc0	equ	0xFEE
 21686                           plusw0	equ	0xFEB
 21687                           fsr0h	equ	0xFEA
 21688                           fsr0l	equ	0xFE9
 21689                           wreg	equ	0xFE8
 21690                           indf1	equ	0xFE7
 21691                           postinc1	equ	0xFE6
 21692                           postdec1	equ	0xFE5
 21693                           plusw1	equ	0xFE3
 21694                           fsr1h	equ	0xFE2
 21695                           fsr1l	equ	0xFE1
 21696                           indf2	equ	0xFDF
 21697                           postinc2	equ	0xFDE
 21698                           postdec2	equ	0xFDD
 21699                           plusw2	equ	0xFDB
 21700                           fsr2h	equ	0xFDA
 21701                           fsr2l	equ	0xFD9
 21702                           status	equ	0xFD8
 21703                           
 21704 ;; *************** function _CCM_Dec *****************
 21705 ;; Defined at:
 21706 ;;		line 331 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 21707 ;; Parameters:    Size  Location     Type
 21708 ;;  text            2   55[BANK0 ] PTR unsigned char 
 21709 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 21710 ;;  headerLen       1   57[BANK0 ] unsigned char 
 21711 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 21712 ;;  key             2   59[BANK0 ] PTR unsigned char 
 21713 ;;		 -> key(8), 
 21714 ;; Auto vars:     Size  Location     Type
 21715 ;;  i               1   67[BANK0 ] unsigned char 
 21716 ;; Return value:  Size  Location     Type
 21717 ;;                  1    wreg      unsigned char 
 21718 ;; Registers used:
 21719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21720 ;; Tracked objects:
 21721 ;;		On entry : F/0
 21722 ;;		On exit  : F/0
 21723 ;;		Unchanged: 0/0
 21724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21725 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21726 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21728 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21729 ;;Total ram usage:       13 bytes
 21730 ;; Hardware stack levels used:    1
 21731 ;; Hardware stack levels required when called:    7
 21732 ;; This function calls:
 21733 ;;		_CBC_MAC
 21734 ;;		_CTR
 21735 ;; This function is called by:
 21736 ;;		_MiMAC_ReceivedPacket
 21737 ;; This function uses a non-reentrant model
 21738 ;;
 21739                           
 21740                           	psect	text85
 21741  005706                     __ptext85:
 21742                           	opt stack 0
 21743  005706                     _CCM_Dec:
 21744                           	opt stack 20
 21745                           
 21746                           ; BSR set to: 0
 21747                           ;drv_mrf_miwi_mesh_security.c: 333: uint8_t i;
 21748                           ;drv_mrf_miwi_mesh_security.c: 340: for(i = 0; i < 4-1; i++)
 21749                           
 21750                           ;incstack = 0
 21751  005706  6BA3               	clrf	CCM_Dec@i& (0+255),b
 21752  005708                     l13218:
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;drv_mrf_miwi_mesh_security.c: 341: {
 21756                           ;drv_mrf_miwi_mesh_security.c: 342: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 21757  005708  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 21758  00570A  5DA3               	subwf	CCM_Dec@i& (0+255),w,b
 21759  00570C  E302               	bnc	l13222
 21760                           
 21761                           ; BSR set to: 0
 21762  00570E  6BA1               	clrf	_CCM_Dec$784& (0+255),b
 21763  005710  D008               	goto	L10
 21764  005712                     l13222:
 21765                           
 21766                           ; BSR set to: 0
 21767  005712  51A3               	movf	CCM_Dec@i& (0+255),w,b
 21768  005714  2597               	addwf	CCM_Dec@text& (0+255),w,b
 21769  005716  6ED9               	movwf	fsr2l,c
 21770  005718  0E00               	movlw	0
 21771  00571A  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21772  00571C  6EDA               	movwf	fsr2h,c
 21773  00571E  50DF               	movf	indf2,w,c
 21774  005720  6FA1               	movwf	_CCM_Dec$784& (0+255),b
 21775  005722                     L10:
 21776  005722  6BA2               	clrf	(_CCM_Dec$784+1)& (0+255),b
 21777                           
 21778                           ; BSR set to: 0
 21779  005724  0EE2               	movlw	low _tmpBlock
 21780  005726  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 21781  005728  6ED9               	movwf	fsr2l,c
 21782  00572A  6ADA               	clrf	fsr2h,c
 21783  00572C  0E01               	movlw	high _tmpBlock
 21784  00572E  22DA               	addwfc	fsr2h,f,c
 21785  005730  C0A1  FFDF         	movff	_CCM_Dec$784,indf2
 21786                           
 21787                           ; BSR set to: 0
 21788  005734  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 21789                           
 21790                           ; BSR set to: 0
 21791  005736  0E02               	movlw	2
 21792  005738  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 21793  00573A  D7E6               	goto	l13218
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;drv_mrf_miwi_mesh_security.c: 343: }
 21797                           ;drv_mrf_miwi_mesh_security.c: 344: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 21798  00573C  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 21799  00573E  2597               	addwf	CCM_Dec@text& (0+255),w,b
 21800  005740  6F8A               	movwf	CTR@text& (0+255),b
 21801  005742  0E00               	movlw	0
 21802  005744  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21803  005746  6F8B               	movwf	(CTR@text+1)& (0+255),b
 21804  005748  C09A  F08C         	movff	CCM_Dec@payloadLen,CTR@len
 21805  00574C  C09B  F08D         	movff	CCM_Dec@key,CTR@key
 21806  005750  C09C  F08E         	movff	CCM_Dec@key+1,CTR@key+1
 21807  005754  0EE2               	movlw	low _tmpBlock
 21808  005756  6F8F               	movwf	CTR@nounce& (0+255),b
 21809  005758  0E01               	movlw	high _tmpBlock
 21810  00575A  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 21811  00575C  ECE6  F02B         	call	_CTR	;wreg free
 21812                           
 21813                           ; BSR set to: 0
 21814                           ;drv_mrf_miwi_mesh_security.c: 346: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmp
      +                          Block);
 21815  005760  C097  F08A         	movff	CCM_Dec@text,CBC_MAC@text
 21816  005764  C098  F08B         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 21817  005768  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 21818  00576A  259A               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 21819  00576C  0FFE               	addlw	254
 21820  00576E  6F8C               	movwf	CBC_MAC@len& (0+255),b
 21821  005770  C09B  F08D         	movff	CCM_Dec@key,CBC_MAC@key
 21822  005774  C09C  F08E         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 21823  005778  0EE2               	movlw	low _tmpBlock
 21824  00577A  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 21825  00577C  0E01               	movlw	high _tmpBlock
 21826  00577E  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 21827  005780  EC08  F02E         	call	_CBC_MAC	;wreg free
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;drv_mrf_miwi_mesh_security.c: 347: for(i = 0; i < 2; i++)
 21831  005784  6BA3               	clrf	CCM_Dec@i& (0+255),b
 21832  005786                     l13238:
 21833                           
 21834                           ; BSR set to: 0
 21835                           ;drv_mrf_miwi_mesh_security.c: 348: {
 21836                           ;drv_mrf_miwi_mesh_security.c: 349: if( tmpBlock[i] != text[headerLen + payloadLen - 2 +
      +                           i] )
 21837  005786  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 21838  005788  2597               	addwf	CCM_Dec@text& (0+255),w,b
 21839  00578A  6F9D               	movwf	??_CCM_Dec& (0+255),b
 21840  00578C  0E00               	movlw	0
 21841  00578E  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 21842  005790  6F9E               	movwf	(??_CCM_Dec+1)& (0+255),b
 21843  005792  519A               	movf	CCM_Dec@payloadLen& (0+255),w,b
 21844  005794  279D               	addwf	??_CCM_Dec& (0+255),f,b
 21845  005796  0E00               	movlw	0
 21846  005798  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 21847  00579A  51A3               	movf	CCM_Dec@i& (0+255),w,b
 21848  00579C  279D               	addwf	??_CCM_Dec& (0+255),f,b
 21849  00579E  0E00               	movlw	0
 21850  0057A0  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 21851  0057A2  0EFE               	movlw	254
 21852  0057A4  259D               	addwf	??_CCM_Dec& (0+255),w,b
 21853  0057A6  6ED9               	movwf	fsr2l,c
 21854  0057A8  0EFF               	movlw	255
 21855  0057AA  219E               	addwfc	(??_CCM_Dec+1)& (0+255),w,b
 21856  0057AC  6EDA               	movwf	fsr2h,c
 21857  0057AE  0EE2               	movlw	low _tmpBlock
 21858  0057B0  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 21859  0057B2  6EE1               	movwf	fsr1l,c
 21860  0057B4  6AE2               	clrf	fsr1h,c
 21861  0057B6  0E01               	movlw	high _tmpBlock
 21862  0057B8  22E2               	addwfc	fsr1h,f,c
 21863  0057BA  50DE               	movf	postinc2,w,c
 21864  0057BC  18E6               	xorwf	postinc1,w,c
 21865  0057BE  E001               	bz	l13244
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;drv_mrf_miwi_mesh_security.c: 350: {
 21869                           ;drv_mrf_miwi_mesh_security.c: 354: return 0;
 21870  0057C0  0C00               	retlw	0
 21871  0057C2                     l13244:
 21872                           
 21873                           ; BSR set to: 0
 21874  0057C2  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 21875                           
 21876                           ; BSR set to: 0
 21877  0057C4  0E01               	movlw	1
 21878  0057C6  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 21879  0057C8  D7DE               	goto	l13238
 21880  0057CA  0C01               	retlw	1
 21881  0057CC                     __end_of_CCM_Dec:
 21882                           	opt stack 0
 21883                           tblptru	equ	0xFF8
 21884                           tblptrh	equ	0xFF7
 21885                           tblptrl	equ	0xFF6
 21886                           tablat	equ	0xFF5
 21887                           prodh	equ	0xFF4
 21888                           prodl	equ	0xFF3
 21889                           intcon3	equ	0xFF0
 21890                           postinc0	equ	0xFEE
 21891                           plusw0	equ	0xFEB
 21892                           fsr0h	equ	0xFEA
 21893                           fsr0l	equ	0xFE9
 21894                           wreg	equ	0xFE8
 21895                           indf1	equ	0xFE7
 21896                           postinc1	equ	0xFE6
 21897                           postdec1	equ	0xFE5
 21898                           plusw1	equ	0xFE3
 21899                           fsr1h	equ	0xFE2
 21900                           fsr1l	equ	0xFE1
 21901                           indf2	equ	0xFDF
 21902                           postinc2	equ	0xFDE
 21903                           postdec2	equ	0xFDD
 21904                           plusw2	equ	0xFDB
 21905                           fsr2h	equ	0xFDA
 21906                           fsr2l	equ	0xFD9
 21907                           status	equ	0xFD8
 21908                           
 21909 ;; *************** function _AddNodeToNetworkTable *****************
 21910 ;; Defined at:
 21911 ;;		line 291 in file "../src/Bridge.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  address         2   33[BANK0 ] struct addr_t_def
 21914 ;;  PANID           2   35[BANK0 ] unsigned int 
 21915 ;; Auto vars:     Size  Location     Type
 21916 ;;  i               2   43[BANK0 ] unsigned int 
 21917 ;;  ind             2   41[BANK0 ] unsigned int 
 21918 ;; Return value:  Size  Location     Type
 21919 ;;                  2   33[BANK0 ] unsigned int 
 21920 ;; Registers used:
 21921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21922 ;; Tracked objects:
 21923 ;;		On entry : F/0
 21924 ;;		On exit  : F/0
 21925 ;;		Unchanged: 0/0
 21926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21930 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21931 ;;Total ram usage:       12 bytes
 21932 ;; Hardware stack levels used:    1
 21933 ;; Hardware stack levels required when called:    7
 21934 ;; This function calls:
 21935 ;;		_isSameAddress
 21936 ;;		_memcpy
 21937 ;;		_memset
 21938 ;; This function is called by:
 21939 ;;		_MiApp_MessageAvailable
 21940 ;; This function uses a non-reentrant model
 21941 ;;
 21942                           
 21943                           	psect	text86
 21944  003264                     __ptext86:
 21945                           	opt stack 0
 21946  003264                     _AddNodeToNetworkTable:
 21947                           	opt stack 21
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;Bridge.c: 293: uint16_t i;
 21951                           ;Bridge.c: 294: uint16_t ind=0xffff;
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;incstack = 0
 21955  003264  6989               	setf	AddNodeToNetworkTable@ind& (0+255),b
 21956  003266  698A               	setf	(AddNodeToNetworkTable@ind+1)& (0+255),b
 21957                           
 21958                           ;Bridge.c: 295: for(i=0;i<5;i++)
 21959  003268  6B8B               	clrf	AddNodeToNetworkTable@i& (0+255),b
 21960  00326A  6B8C               	clrf	(AddNodeToNetworkTable@i+1)& (0+255),b
 21961  00326C                     l14254:
 21962                           
 21963                           ; BSR set to: 0
 21964                           ;Bridge.c: 296: {
 21965                           ;Bridge.c: 297: if( (isSameAddress(ConnectionTable[i].Address,address)==1)
 21966                           ;Bridge.c: 298: && (ConnectionTable[i].PANID.Val == PANID)
 21967                           ;Bridge.c: 299: && (ConnectionTable[i].status.bits.isValid==1) )
 21968  00326C  0E0B               	movlw	11
 21969  00326E  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 21970  003270  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 21971  003274  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 21972  003278  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 21973  00327A  50F3               	movf	prodl,w,c
 21974  00327C  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 21975  00327E  0E80               	movlw	low (_ConnectionTable+8)
 21976  003280  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 21977  003282  6ED9               	movwf	fsr2l,c
 21978  003284  0E04               	movlw	high (_ConnectionTable+8)
 21979  003286  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 21980  003288  6EDA               	movwf	fsr2h,c
 21981  00328A  CFDE F07D          	movff	postinc2,isSameAddress@a1
 21982  00328E  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 21983  003292  C081  F07F         	movff	AddNodeToNetworkTable@address,isSameAddress@a2
 21984  003296  C082  F080         	movff	AddNodeToNetworkTable@address+1,isSameAddress@a2+1
 21985  00329A  ECB1  F03A         	call	_isSameAddress	;wreg free
 21986  00329E  06E8               	decf	wreg,f,c
 21987  0032A0  E126               	bnz	l14264
 21988                           
 21989                           ; BSR set to: 0
 21990  0032A2  0E0B               	movlw	11
 21991  0032A4  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 21992  0032A6  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 21993  0032AA  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 21994  0032AE  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 21995  0032B0  50F3               	movf	prodl,w,c
 21996  0032B2  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 21997  0032B4  0E7C               	movlw	low (_ConnectionTable+4)
 21998  0032B6  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 21999  0032B8  6ED9               	movwf	fsr2l,c
 22000  0032BA  0E04               	movlw	high (_ConnectionTable+4)
 22001  0032BC  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22002  0032BE  6EDA               	movwf	fsr2h,c
 22003  0032C0  5183               	movf	AddNodeToNetworkTable@PANID& (0+255),w,b
 22004  0032C2  18DE               	xorwf	postinc2,w,c
 22005  0032C4  E114               	bnz	l14264
 22006  0032C6  5184               	movf	(AddNodeToNetworkTable@PANID+1)& (0+255),w,b
 22007  0032C8  18DE               	xorwf	postinc2,w,c
 22008  0032CA  E111               	bnz	l14264
 22009                           
 22010                           ; BSR set to: 0
 22011  0032CC  0E0B               	movlw	11
 22012  0032CE  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22013  0032D0  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22014  0032D4  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22015  0032D8  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22016  0032DA  50F3               	movf	prodl,w,c
 22017  0032DC  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22018  0032DE  0E82               	movlw	low (_ConnectionTable+10)
 22019  0032E0  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22020  0032E2  6ED9               	movwf	fsr2l,c
 22021  0032E4  0E04               	movlw	high (_ConnectionTable+10)
 22022  0032E6  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22023  0032E8  6EDA               	movwf	fsr2h,c
 22024  0032EA  BEDF               	btfsc	indf2,7,c
 22025  0032EC  D022               	goto	l14274
 22026  0032EE                     l14264:
 22027  0032EE  0E0B               	movlw	11
 22028  0032F0  0100               	movlb	0	; () banked
 22029  0032F2  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22030  0032F4  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22031  0032F8  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22032  0032FC  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22033  0032FE  50F3               	movf	prodl,w,c
 22034  003300  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22035  003302  0E82               	movlw	low (_ConnectionTable+10)
 22036  003304  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22037  003306  6ED9               	movwf	fsr2l,c
 22038  003308  0E04               	movlw	high (_ConnectionTable+10)
 22039  00330A  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22040  00330C  6EDA               	movwf	fsr2h,c
 22041  00330E  BEDF               	btfsc	indf2,7,c
 22042  003310  D008               	goto	l14270
 22043                           
 22044                           ; BSR set to: 4
 22045  003312  2989               	incf	AddNodeToNetworkTable@ind& (0+255),w,b
 22046  003314  E106               	bnz	l14270
 22047  003316  298A               	incf	(AddNodeToNetworkTable@ind+1)& (0+255),w,b
 22048  003318  E104               	bnz	l14270
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;Bridge.c: 303: {
 22052                           ;Bridge.c: 304: ind=i;
 22053  00331A  C08B  F089         	movff	AddNodeToNetworkTable@i,AddNodeToNetworkTable@ind
 22054  00331E  C08C  F08A         	movff	AddNodeToNetworkTable@i+1,AddNodeToNetworkTable@ind+1
 22055  003322                     l14270:
 22056  003322  0100               	movlb	0	; () banked
 22057  003324  4B8B               	infsnz	AddNodeToNetworkTable@i& (0+255),f,b
 22058  003326  2B8C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),f,b
 22059                           
 22060                           ; BSR set to: 0
 22061  003328  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 22062  00332A  E103               	bnz	u16520
 22063  00332C  0E05               	movlw	5
 22064  00332E  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 22065  003330  E39D               	bnc	l14254
 22066  003332                     u16520:
 22067  003332                     l14274:
 22068                           
 22069                           ;Bridge.c: 305: }
 22070                           ;Bridge.c: 306: }
 22071                           ;Bridge.c: 307: if(i>=5)
 22072  003332  0100               	movlb	0	; () banked
 22073  003334  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 22074  003336  E104               	bnz	u16530
 22075  003338  0E05               	movlw	5
 22076  00333A  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 22077  00333C  A0D8               	btfss	status,0,c
 22078  00333E  0012               	return	
 22079  003340                     u16530:
 22080                           
 22081                           ; BSR set to: 0
 22082                           ;Bridge.c: 308: {
 22083                           ;Bridge.c: 309: i=ind;
 22084  003340  C089  F08B         	movff	AddNodeToNetworkTable@ind,AddNodeToNetworkTable@i
 22085  003344  C08A  F08C         	movff	AddNodeToNetworkTable@ind+1,AddNodeToNetworkTable@i+1
 22086                           
 22087                           ; BSR set to: 0
 22088                           ;Bridge.c: 310: if(i!=0xffff)
 22089  003348  298B               	incf	AddNodeToNetworkTable@i& (0+255),w,b
 22090  00334A  E103               	bnz	u16540
 22091  00334C  298C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 22092  00334E  B4D8               	btfsc	status,2,c
 22093  003350  0012               	return	
 22094  003352                     u16540:
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;Bridge.c: 311: {
 22098                           ;Bridge.c: 312: memset(&ConnectionTable[i],0x00,sizeof(CONNECTION_ENTRY));
 22099  003352  0E0B               	movlw	11
 22100  003354  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22101  003356  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22102  00335A  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22103  00335E  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22104  003360  50F3               	movf	prodl,w,c
 22105  003362  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22106  003364  0E78               	movlw	low _ConnectionTable
 22107  003366  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22108  003368  6F73               	movwf	memset@p1& (0+255),b
 22109  00336A  0E04               	movlw	high _ConnectionTable
 22110  00336C  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22111  00336E  6F74               	movwf	(memset@p1+1)& (0+255),b
 22112  003370  6B76               	clrf	(memset@c+1)& (0+255),b
 22113  003372  6B75               	clrf	memset@c& (0+255),b
 22114  003374  6B78               	clrf	(memset@n+1)& (0+255),b
 22115  003376  0E0B               	movlw	11
 22116  003378  6F77               	movwf	memset@n& (0+255),b
 22117  00337A  EC4C  F03A         	call	_memset	;wreg free
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;Bridge.c: 313: memcpy(ConnectionTable[i].Address.bytes,address.bytes,sizeof(address));
 22121  00337E  0E0B               	movlw	11
 22122  003380  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22123  003382  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22124  003386  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22125  00338A  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22126  00338C  50F3               	movf	prodl,w,c
 22127  00338E  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22128  003390  0E80               	movlw	low (_ConnectionTable+8)
 22129  003392  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22130  003394  6F75               	movwf	memcpy@d1& (0+255),b
 22131  003396  0E04               	movlw	high (_ConnectionTable+8)
 22132  003398  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22133  00339A  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 22134  00339C  0E81               	movlw	low AddNodeToNetworkTable@address
 22135  00339E  6F77               	movwf	memcpy@s1& (0+255),b
 22136  0033A0  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 22137  0033A2  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22138  0033A4  0E02               	movlw	2
 22139  0033A6  6F79               	movwf	memcpy@n& (0+255),b
 22140  0033A8  EC5D  F036         	call	_memcpy	;wreg free
 22141                           
 22142                           ; BSR set to: 0
 22143                           ;Bridge.c: 314: ConnectionTable[i].PANID.Val=PANID;
 22144  0033AC  0E0B               	movlw	11
 22145  0033AE  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22146  0033B0  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22147  0033B4  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22148  0033B8  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22149  0033BA  50F3               	movf	prodl,w,c
 22150  0033BC  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22151  0033BE  0E7C               	movlw	low (_ConnectionTable+4)
 22152  0033C0  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22153  0033C2  6ED9               	movwf	fsr2l,c
 22154  0033C4  0E04               	movlw	high (_ConnectionTable+4)
 22155  0033C6  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22156  0033C8  6EDA               	movwf	fsr2h,c
 22157  0033CA  C083  FFDE         	movff	AddNodeToNetworkTable@PANID,postinc2
 22158  0033CE  C084  FFDD         	movff	AddNodeToNetworkTable@PANID+1,postdec2
 22159                           
 22160                           ; BSR set to: 0
 22161                           ;Bridge.c: 315: ConnectionTable[i].status.bits.isValid=1;
 22162  0033D2  0E0B               	movlw	11
 22163  0033D4  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22164  0033D6  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22165  0033DA  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22166  0033DE  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22167  0033E0  50F3               	movf	prodl,w,c
 22168  0033E2  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22169  0033E4  0E82               	movlw	low (_ConnectionTable+10)
 22170  0033E6  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22171  0033E8  6ED9               	movwf	fsr2l,c
 22172  0033EA  0E04               	movlw	high (_ConnectionTable+10)
 22173  0033EC  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22174  0033EE  6EDA               	movwf	fsr2h,c
 22175  0033F0  8EDF               	bsf	indf2,7,c
 22176                           
 22177                           ; BSR set to: 4
 22178                           ;Bridge.c: 317: ConnectionTable[i].IncomingFrameCounter=0;
 22179  0033F2  0E0B               	movlw	11
 22180  0033F4  0100               	movlb	0	; () banked
 22181  0033F6  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 22182  0033F8  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 22183  0033FC  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 22184  003400  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22185  003402  50F3               	movf	prodl,w,c
 22186  003404  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 22187  003406  0E78               	movlw	low _ConnectionTable
 22188  003408  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 22189  00340A  6ED9               	movwf	fsr2l,c
 22190  00340C  0E04               	movlw	high _ConnectionTable
 22191  00340E  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 22192  003410  6EDA               	movwf	fsr2h,c
 22193  003412  6ADE               	clrf	postinc2,c
 22194  003414  6ADE               	clrf	postinc2,c
 22195  003416  6ADE               	clrf	postinc2,c
 22196  003418  6ADD               	clrf	postdec2,c
 22197                           
 22198                           ; BSR set to: 0
 22199  00341A  0012               	return		;funcret
 22200  00341C                     __end_of_AddNodeToNetworkTable:
 22201                           	opt stack 0
 22202                           tblptru	equ	0xFF8
 22203                           tblptrh	equ	0xFF7
 22204                           tblptrl	equ	0xFF6
 22205                           tablat	equ	0xFF5
 22206                           prodh	equ	0xFF4
 22207                           prodl	equ	0xFF3
 22208                           intcon3	equ	0xFF0
 22209                           postinc0	equ	0xFEE
 22210                           plusw0	equ	0xFEB
 22211                           fsr0h	equ	0xFEA
 22212                           fsr0l	equ	0xFE9
 22213                           wreg	equ	0xFE8
 22214                           indf1	equ	0xFE7
 22215                           postinc1	equ	0xFE6
 22216                           postdec1	equ	0xFE5
 22217                           plusw1	equ	0xFE3
 22218                           fsr1h	equ	0xFE2
 22219                           fsr1l	equ	0xFE1
 22220                           indf2	equ	0xFDF
 22221                           postinc2	equ	0xFDE
 22222                           postdec2	equ	0xFDD
 22223                           plusw2	equ	0xFDB
 22224                           fsr2h	equ	0xFDA
 22225                           fsr2l	equ	0xFD9
 22226                           status	equ	0xFD8
 22227                           
 22228 ;; *************** function _MiApp_DiscardMessage *****************
 22229 ;; Defined at:
 22230 ;;		line 262 in file "../src/Bridge.c"
 22231 ;; Parameters:    Size  Location     Type
 22232 ;;		None
 22233 ;; Auto vars:     Size  Location     Type
 22234 ;;		None
 22235 ;; Return value:  Size  Location     Type
 22236 ;;                  1    wreg      void 
 22237 ;; Registers used:
 22238 ;;		cstack
 22239 ;; Tracked objects:
 22240 ;;		On entry : E/1
 22241 ;;		On exit  : F/1
 22242 ;;		Unchanged: 0/0
 22243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22248 ;;Total ram usage:        0 bytes
 22249 ;; Hardware stack levels used:    1
 22250 ;; Hardware stack levels required when called:    6
 22251 ;; This function calls:
 22252 ;;		_NetworkReleaseUserData
 22253 ;; This function is called by:
 22254 ;;		_main
 22255 ;;		_MiApp_SearchConnection
 22256 ;; This function uses a non-reentrant model
 22257 ;;
 22258                           
 22259                           	psect	text87
 22260  007860                     __ptext87:
 22261                           	opt stack 0
 22262  007860                     _MiApp_DiscardMessage:
 22263                           	opt stack 23
 22264                           
 22265                           ;Bridge.c: 264: UserMessageAvailable=0;
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;incstack = 0
 22269  007860  0101               	movlb	1	; () banked
 22270  007862  6BD9               	clrf	_UserMessageAvailable& (0+255),b
 22271                           
 22272                           ; BSR set to: 1
 22273                           ;Bridge.c: 265: NetworkReleaseUserData();
 22274  007864  EF49  F03C         	goto	_NetworkReleaseUserData	;wreg free
 22275  007868                     __end_of_MiApp_DiscardMessage:
 22276                           	opt stack 0
 22277                           tblptru	equ	0xFF8
 22278                           tblptrh	equ	0xFF7
 22279                           tblptrl	equ	0xFF6
 22280                           tablat	equ	0xFF5
 22281                           prodh	equ	0xFF4
 22282                           prodl	equ	0xFF3
 22283                           intcon3	equ	0xFF0
 22284                           postinc0	equ	0xFEE
 22285                           plusw0	equ	0xFEB
 22286                           fsr0h	equ	0xFEA
 22287                           fsr0l	equ	0xFE9
 22288                           wreg	equ	0xFE8
 22289                           indf1	equ	0xFE7
 22290                           postinc1	equ	0xFE6
 22291                           postdec1	equ	0xFE5
 22292                           plusw1	equ	0xFE3
 22293                           fsr1h	equ	0xFE2
 22294                           fsr1l	equ	0xFE1
 22295                           indf2	equ	0xFDF
 22296                           postinc2	equ	0xFDE
 22297                           postdec2	equ	0xFDD
 22298                           plusw2	equ	0xFDB
 22299                           fsr2h	equ	0xFDA
 22300                           fsr2l	equ	0xFD9
 22301                           status	equ	0xFD8
 22302                           
 22303 ;; *************** function _NetworkReleaseUserData *****************
 22304 ;; Defined at:
 22305 ;;		line 353 in file "../NetworkManager.c"
 22306 ;; Parameters:    Size  Location     Type
 22307 ;;		None
 22308 ;; Auto vars:     Size  Location     Type
 22309 ;;		None
 22310 ;; Return value:  Size  Location     Type
 22311 ;;                  1    wreg      void 
 22312 ;; Registers used:
 22313 ;;		None
 22314 ;; Tracked objects:
 22315 ;;		On entry : F/1
 22316 ;;		On exit  : F/1
 22317 ;;		Unchanged: 0/0
 22318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22323 ;;Total ram usage:        0 bytes
 22324 ;; Hardware stack levels used:    1
 22325 ;; Hardware stack levels required when called:    5
 22326 ;; This function calls:
 22327 ;;		Nothing
 22328 ;; This function is called by:
 22329 ;;		_MiApp_DiscardMessage
 22330 ;; This function uses a non-reentrant model
 22331 ;;
 22332                           
 22333                           	psect	text88
 22334  007892                     __ptext88:
 22335                           	opt stack 0
 22336  007892                     _NetworkReleaseUserData:
 22337                           	opt stack 23
 22338                           
 22339                           ; BSR set to: 1
 22340                           ;NetworkManager.c: 355: userDataAvailable=0;
 22341                           
 22342                           ; BSR set to: 1
 22343                           ;incstack = 0
 22344  007892  6BE1               	clrf	_userDataAvailable& (0+255),b
 22345                           
 22346                           ; BSR set to: 1
 22347  007894  0012               	return		;funcret
 22348  007896                     __end_of_NetworkReleaseUserData:
 22349                           	opt stack 0
 22350                           tblptru	equ	0xFF8
 22351                           tblptrh	equ	0xFF7
 22352                           tblptrl	equ	0xFF6
 22353                           tablat	equ	0xFF5
 22354                           prodh	equ	0xFF4
 22355                           prodl	equ	0xFF3
 22356                           intcon3	equ	0xFF0
 22357                           postinc0	equ	0xFEE
 22358                           plusw0	equ	0xFEB
 22359                           fsr0h	equ	0xFEA
 22360                           fsr0l	equ	0xFE9
 22361                           wreg	equ	0xFE8
 22362                           indf1	equ	0xFE7
 22363                           postinc1	equ	0xFE6
 22364                           postdec1	equ	0xFE5
 22365                           plusw1	equ	0xFE3
 22366                           fsr1h	equ	0xFE2
 22367                           fsr1l	equ	0xFE1
 22368                           indf2	equ	0xFDF
 22369                           postinc2	equ	0xFDE
 22370                           postdec2	equ	0xFDD
 22371                           plusw2	equ	0xFDB
 22372                           fsr2h	equ	0xFDA
 22373                           fsr2l	equ	0xFD9
 22374                           status	equ	0xFD8
 22375                           
 22376 ;; *************** function _MiApp_RequestData *****************
 22377 ;; Defined at:
 22378 ;;		line 432 in file "../src/Bridge.c"
 22379 ;; Parameters:    Size  Location     Type
 22380 ;;		None
 22381 ;; Auto vars:     Size  Location     Type
 22382 ;;		None
 22383 ;; Return value:  Size  Location     Type
 22384 ;;                  1    wreg      void 
 22385 ;; Registers used:
 22386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22387 ;; Tracked objects:
 22388 ;;		On entry : 0/0
 22389 ;;		On exit  : E/0
 22390 ;;		Unchanged: 0/0
 22391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22396 ;;Total ram usage:        0 bytes
 22397 ;; Hardware stack levels used:    1
 22398 ;; Hardware stack levels required when called:   13
 22399 ;; This function calls:
 22400 ;;		_NetworkIssueDataRequest
 22401 ;; This function is called by:
 22402 ;;		_main
 22403 ;; This function uses a non-reentrant model
 22404 ;;
 22405                           
 22406                           	psect	text89
 22407  007896                     __ptext89:
 22408                           	opt stack 0
 22409  007896                     _MiApp_RequestData:
 22410                           	opt stack 17
 22411                           
 22412                           ;Bridge.c: 434: NetworkIssueDataRequest();
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;incstack = 0
 22416  007896  EF61  F033         	goto	_NetworkIssueDataRequest	;wreg free
 22417  00789A                     __end_of_MiApp_RequestData:
 22418                           	opt stack 0
 22419                           tblptru	equ	0xFF8
 22420                           tblptrh	equ	0xFF7
 22421                           tblptrl	equ	0xFF6
 22422                           tablat	equ	0xFF5
 22423                           prodh	equ	0xFF4
 22424                           prodl	equ	0xFF3
 22425                           intcon3	equ	0xFF0
 22426                           postinc0	equ	0xFEE
 22427                           plusw0	equ	0xFEB
 22428                           fsr0h	equ	0xFEA
 22429                           fsr0l	equ	0xFE9
 22430                           wreg	equ	0xFE8
 22431                           indf1	equ	0xFE7
 22432                           postinc1	equ	0xFE6
 22433                           postdec1	equ	0xFE5
 22434                           plusw1	equ	0xFE3
 22435                           fsr1h	equ	0xFE2
 22436                           fsr1l	equ	0xFE1
 22437                           indf2	equ	0xFDF
 22438                           postinc2	equ	0xFDE
 22439                           postdec2	equ	0xFDD
 22440                           plusw2	equ	0xFDB
 22441                           fsr2h	equ	0xFDA
 22442                           fsr2l	equ	0xFD9
 22443                           status	equ	0xFD8
 22444                           
 22445 ;; *************** function _NetworkIssueDataRequest *****************
 22446 ;; Defined at:
 22447 ;;		line 419 in file "../NetworkManager.c"
 22448 ;; Parameters:    Size  Location     Type
 22449 ;;		None
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;  data           10  101[BANK0 ] unsigned char [10]
 22452 ;;  sz              2  111[BANK0 ] unsigned int 
 22453 ;; Return value:  Size  Location     Type
 22454 ;;                  1    wreg      void 
 22455 ;; Registers used:
 22456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22457 ;; Tracked objects:
 22458 ;;		On entry : 0/0
 22459 ;;		On exit  : E/0
 22460 ;;		Unchanged: 0/0
 22461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22465 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22466 ;;Total ram usage:       12 bytes
 22467 ;; Hardware stack levels used:    1
 22468 ;; Hardware stack levels required when called:   12
 22469 ;; This function calls:
 22470 ;;		_CoordinatorGenericAddress
 22471 ;;		_NetworkGetPANID
 22472 ;;		_NetworkGetParentAddress
 22473 ;;		_NetworkPrepareSendPacket
 22474 ;;		_RouterEvicted
 22475 ;;		_isNetworkSecurityEnabled
 22476 ;;		_radioUnicast
 22477 ;; This function is called by:
 22478 ;;		_MiApp_RequestData
 22479 ;; This function uses a non-reentrant model
 22480 ;;
 22481                           
 22482                           	psect	text90
 22483  0066C2                     __ptext90:
 22484                           	opt stack 0
 22485  0066C2                     _NetworkIssueDataRequest:
 22486                           	opt stack 17
 22487                           
 22488                           ;NetworkManager.c: 421: uint16_t sz;
 22489                           ;NetworkManager.c: 422: uint8_t data[sizeof(net_data_header_t)];
 22490                           ;NetworkManager.c: 423: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketRFDRequestData,(0),0);
 22491                           
 22492                           ;incstack = 0
 22493  0066C2  ECC4  F03A         	call	_CoordinatorGenericAddress	;wreg free
 22494  0066C6  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 22495  0066CA  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 22496  0066CE  0EC5               	movlw	low NetworkIssueDataRequest@data
 22497  0066D0  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 22498  0066D2  6B82               	clrf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 22499  0066D4  0E29               	movlw	41
 22500  0066D6  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 22501  0066D8  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 22502  0066DA  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 22503  0066DC  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 22504  0066DE  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 22505  0066E0  EC3E  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 22506  0066E4  C07F  F0CF         	movff	?_NetworkPrepareSendPacket,NetworkIssueDataRequest@sz
 22507  0066E8  C080  F0D0         	movff	?_NetworkPrepareSendPacket+1,NetworkIssueDataRequest@sz+1
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;NetworkManager.c: 424: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 22511  0066EC  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 22512  0066F0  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 22513  0066F4  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 22514  0066F8  EC17  F03C         	call	_NetworkGetPANID	;wreg free
 22515  0066FC  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 22516  006700  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 22517  006704  0EC5               	movlw	low NetworkIssueDataRequest@data
 22518  006706  0100               	movlb	0	; () banked
 22519  006708  6FC0               	movwf	radioUnicast@data& (0+255),b
 22520  00670A  6BC1               	clrf	(radioUnicast@data+1)& (0+255),b
 22521  00670C  C0CF  F0C2         	movff	NetworkIssueDataRequest@sz,radioUnicast@datasize
 22522  006710  EC3C  F03C         	call	_isNetworkSecurityEnabled	;wreg free
 22523  006714  0100               	movlb	0	; () banked
 22524  006716  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 22525  006718  ECDC  F036         	call	_radioUnicast	;wreg free
 22526  00671C  0900               	iorlw	0
 22527  00671E  A4D8               	btfss	status,2,c
 22528  006720  0012               	return	
 22529                           
 22530                           ; BSR set to: 0
 22531                           ;NetworkManager.c: 425: {
 22532                           ;NetworkManager.c: 426: RouterEvicted(NetworkGetParentAddress());
 22533  006722  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 22534  006726  C073  F08F         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 22535  00672A  C074  F090         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 22536  00672E  EFB1  F02E         	goto	_RouterEvicted	;wreg free
 22537  006732                     __end_of_NetworkIssueDataRequest:
 22538                           	opt stack 0
 22539                           tblptru	equ	0xFF8
 22540                           tblptrh	equ	0xFF7
 22541                           tblptrl	equ	0xFF6
 22542                           tablat	equ	0xFF5
 22543                           prodh	equ	0xFF4
 22544                           prodl	equ	0xFF3
 22545                           intcon3	equ	0xFF0
 22546                           postinc0	equ	0xFEE
 22547                           plusw0	equ	0xFEB
 22548                           fsr0h	equ	0xFEA
 22549                           fsr0l	equ	0xFE9
 22550                           wreg	equ	0xFE8
 22551                           indf1	equ	0xFE7
 22552                           postinc1	equ	0xFE6
 22553                           postdec1	equ	0xFE5
 22554                           plusw1	equ	0xFE3
 22555                           fsr1h	equ	0xFE2
 22556                           fsr1l	equ	0xFE1
 22557                           indf2	equ	0xFDF
 22558                           postinc2	equ	0xFDE
 22559                           postdec2	equ	0xFDD
 22560                           plusw2	equ	0xFDB
 22561                           fsr2h	equ	0xFDA
 22562                           fsr2l	equ	0xFD9
 22563                           status	equ	0xFD8
 22564                           
 22565 ;; *************** function _radioUnicast *****************
 22566 ;; Defined at:
 22567 ;;		line 129 in file "../src/Bridge.c"
 22568 ;; Parameters:    Size  Location     Type
 22569 ;;  dest            2   92[BANK0 ] struct addr_t_def
 22570 ;;  PANID           2   94[BANK0 ] unsigned int 
 22571 ;;  data            2   96[BANK0 ] PTR unsigned char 
 22572 ;;		 -> NetworkIssueDataRequest@data(10), NetworkManagerProcessIncomingData@buffer(64), NetworkManagerTask@data(19), TMS
      +endDataToRFD@databuff(64), 
 22573 ;;		 -> TransportManagerTask@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 22574 ;;  datasize        1   98[BANK0 ] unsigned char 
 22575 ;;  isSecure        1   99[BANK0 ] unsigned char 
 22576 ;; Auto vars:     Size  Location     Type
 22577 ;;  i               1  100[BANK0 ] unsigned char 
 22578 ;; Return value:  Size  Location     Type
 22579 ;;                  1    wreg      unsigned char 
 22580 ;; Registers used:
 22581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22582 ;; Tracked objects:
 22583 ;;		On entry : C/1
 22584 ;;		On exit  : F/0
 22585 ;;		Unchanged: 0/0
 22586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22590 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22591 ;;Total ram usage:        9 bytes
 22592 ;; Hardware stack levels used:    1
 22593 ;; Hardware stack levels required when called:   11
 22594 ;; This function calls:
 22595 ;;		_SendPacket
 22596 ;; This function is called by:
 22597 ;;		_radioReceivedPacket
 22598 ;;		_TransportManagerTask
 22599 ;;		_TMSendFormedPacketToRFD
 22600 ;;		_NetworkManagerTask
 22601 ;;		_NetworkIssueDataRequest
 22602 ;; This function uses a non-reentrant model
 22603 ;;
 22604                           
 22605                           	psect	text91
 22606  006DB8                     __ptext91:
 22607                           	opt stack 0
 22608  006DB8                     _radioUnicast:
 22609                           	opt stack 15
 22610                           
 22611                           ;Bridge.c: 131: static addr_t addr;
 22612                           ;Bridge.c: 132: uint8_t i;
 22613                           ;Bridge.c: 133: addr=dest;
 22614                           
 22615                           ;incstack = 0
 22616  006DB8  C0BC  F2A3         	movff	radioUnicast@dest,radioUnicast@addr
 22617  006DBC  C0BD  F2A4         	movff	radioUnicast@dest+1,radioUnicast@addr+1
 22618                           
 22619                           ;Bridge.c: 134: TxIndex=0;
 22620  006DC0  6A40               	clrf	_TxIndex,c
 22621                           
 22622                           ;Bridge.c: 135: for(i=0;i<datasize;i++)
 22623  006DC2  0100               	movlb	0	; () banked
 22624  006DC4  6BC4               	clrf	radioUnicast@i& (0+255),b
 22625  006DC6  D010               	goto	l12254
 22626  006DC8                     l12248:
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;Bridge.c: 136: {
 22630                           ;Bridge.c: 137: TxBuff[TxIndex++]=data[i];
 22631  006DC8  51C4               	movf	radioUnicast@i& (0+255),w,b
 22632  006DCA  25C0               	addwf	radioUnicast@data& (0+255),w,b
 22633  006DCC  6ED9               	movwf	fsr2l,c
 22634  006DCE  0E00               	movlw	0
 22635  006DD0  21C1               	addwfc	(radioUnicast@data+1)& (0+255),w,b
 22636  006DD2  6EDA               	movwf	fsr2h,c
 22637  006DD4  0E48               	movlw	low _TxBuff
 22638  006DD6  2440               	addwf	_TxIndex,w,c
 22639  006DD8  6EE1               	movwf	fsr1l,c
 22640  006DDA  6AE2               	clrf	fsr1h,c
 22641  006DDC  0E07               	movlw	high _TxBuff
 22642  006DDE  22E2               	addwfc	fsr1h,f,c
 22643  006DE0  CFDF FFE7          	movff	indf2,indf1
 22644                           
 22645                           ; BSR set to: 0
 22646  006DE4  2A40               	incf	_TxIndex,f,c
 22647                           
 22648                           ; BSR set to: 0
 22649  006DE6  2BC4               	incf	radioUnicast@i& (0+255),f,b
 22650  006DE8                     l12254:
 22651                           
 22652                           ; BSR set to: 0
 22653  006DE8  51C2               	movf	radioUnicast@datasize& (0+255),w,b
 22654  006DEA  5DC4               	subwf	radioUnicast@i& (0+255),w,b
 22655  006DEC  E3ED               	bnc	l12248
 22656                           
 22657                           ; BSR set to: 0
 22658                           ;Bridge.c: 138: }
 22659                           ;Bridge.c: 139: return SendPacket(0,addr.bytes,PANID,0,isSecure);
 22660  006DEE  0EA3               	movlw	low radioUnicast@addr
 22661  006DF0  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 22662  006DF2  0E02               	movlw	high radioUnicast@addr
 22663  006DF4  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 22664  006DF6  C0BE  F0B0         	movff	radioUnicast@PANID,SendPacket@destinationPANID
 22665  006DFA  C0BF  F0B1         	movff	radioUnicast@PANID+1,SendPacket@destinationPANID+1
 22666  006DFE  0E00               	movlw	0
 22667  006E00  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 22668  006E02  C0C3  F0B3         	movff	radioUnicast@isSecure,SendPacket@SecurityEnabled
 22669  006E06  EF2C  F030         	goto	_SendPacket
 22670  006E0A                     __end_of_radioUnicast:
 22671                           	opt stack 0
 22672                           tblptru	equ	0xFF8
 22673                           tblptrh	equ	0xFF7
 22674                           tblptrl	equ	0xFF6
 22675                           tablat	equ	0xFF5
 22676                           prodh	equ	0xFF4
 22677                           prodl	equ	0xFF3
 22678                           intcon3	equ	0xFF0
 22679                           postinc0	equ	0xFEE
 22680                           plusw0	equ	0xFEB
 22681                           fsr0h	equ	0xFEA
 22682                           fsr0l	equ	0xFE9
 22683                           wreg	equ	0xFE8
 22684                           indf1	equ	0xFE7
 22685                           postinc1	equ	0xFE6
 22686                           postdec1	equ	0xFE5
 22687                           plusw1	equ	0xFE3
 22688                           fsr1h	equ	0xFE2
 22689                           fsr1l	equ	0xFE1
 22690                           indf2	equ	0xFDF
 22691                           postinc2	equ	0xFDE
 22692                           postdec2	equ	0xFDD
 22693                           plusw2	equ	0xFDB
 22694                           fsr2h	equ	0xFDA
 22695                           fsr2l	equ	0xFD9
 22696                           status	equ	0xFD8
 22697                           
 22698 ;; *************** function _SendPacket *****************
 22699 ;; Defined at:
 22700 ;;		line 67 in file "../src/Bridge.c"
 22701 ;; Parameters:    Size  Location     Type
 22702 ;;  Broadcast       1    wreg     unsigned char 
 22703 ;;  DestinationA    2   78[BANK0 ] PTR unsigned char 
 22704 ;;		 -> radioUnicast@addr(2), radioBroadcast@addr(2), 
 22705 ;;  destinationP    2   80[BANK0 ] unsigned int 
 22706 ;;  isCommand       1   82[BANK0 ] unsigned char 
 22707 ;;  SecurityEnab    1   83[BANK0 ] unsigned char 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  Broadcast       1   86[BANK0 ] unsigned char 
 22710 ;;  tParam          5   87[BANK0 ] struct .
 22711 ;;  status          1   85[BANK0 ] unsigned char 
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1    wreg      unsigned char 
 22714 ;; Registers used:
 22715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22716 ;; Tracked objects:
 22717 ;;		On entry : F/0
 22718 ;;		On exit  : F/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22721 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22722 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22724 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22725 ;;Total ram usage:       14 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; Hardware stack levels required when called:   10
 22728 ;; This function calls:
 22729 ;;		_MiMAC_SendPacket
 22730 ;; This function is called by:
 22731 ;;		_radioBroadcast
 22732 ;;		_radioUnicast
 22733 ;; This function uses a non-reentrant model
 22734 ;;
 22735                           
 22736                           	psect	text92
 22737  006058                     __ptext92:
 22738                           	opt stack 0
 22739  006058                     _SendPacket:
 22740                           	opt stack 15
 22741                           
 22742                           ; BSR set to: 0
 22743                           ;incstack = 0
 22744                           ;SendPacket@Broadcast stored from wreg
 22745  006058  6FB6               	movwf	SendPacket@Broadcast& (0+255),b
 22746                           
 22747                           ;Bridge.c: 69: MAC_TRANS_PARAM tParam;
 22748                           ;Bridge.c: 70: bool status;
 22749                           ;Bridge.c: 72: tParam.flags.Val = 0;
 22750  00605A  0100               	movlb	0	; () banked
 22751  00605C  6BB7               	clrf	SendPacket@tParam& (0+255),b
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;Bridge.c: 73: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 22755  00605E  51B2               	movf	SendPacket@isCommand& (0+255),w,b
 22756  006060  E003               	bz	u12850
 22757  006062  6BB4               	clrf	??_SendPacket& (0+255),b
 22758  006064  2BB4               	incf	??_SendPacket& (0+255),f,b
 22759  006066  D002               	goto	u12868
 22760  006068                     u12850:
 22761  006068  0100               	movlb	0	; () banked
 22762  00606A  6BB4               	clrf	??_SendPacket& (0+255),b
 22763  00606C                     u12868:
 22764  00606C  51B7               	movf	SendPacket@tParam& (0+255),w,b
 22765  00606E  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22766  006070  0BFC               	andlw	-4
 22767  006072  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22768  006074  6FB7               	movwf	SendPacket@tParam& (0+255),b
 22769                           
 22770                           ;Bridge.c: 74: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 22771  006076  51B6               	movf	SendPacket@Broadcast& (0+255),w,b
 22772  006078  E103               	bnz	u12870
 22773  00607A  6BB4               	clrf	??_SendPacket& (0+255),b
 22774  00607C  2BB4               	incf	??_SendPacket& (0+255),f,b
 22775  00607E  D002               	goto	u12888
 22776  006080                     u12870:
 22777  006080  0100               	movlb	0	; () banked
 22778  006082  6BB4               	clrf	??_SendPacket& (0+255),b
 22779  006084                     u12888:
 22780  006084  3BB4               	swapf	??_SendPacket& (0+255),f,b
 22781  006086  47B4               	rlncf	??_SendPacket& (0+255),f,b
 22782  006088  51B7               	movf	SendPacket@tParam& (0+255),w,b
 22783  00608A  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22784  00608C  0BDF               	andlw	-33
 22785  00608E  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22786  006090  6FB7               	movwf	SendPacket@tParam& (0+255),b
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;Bridge.c: 75: tParam.flags.bits.broadcast = Broadcast;
 22790  006092  B1B6               	btfsc	SendPacket@Broadcast& (0+255),0,b
 22791  006094  D002               	bra	u12895
 22792  006096  95B7               	bcf	SendPacket@tParam& (0+255),2,b
 22793  006098  D002               	bra	u12896
 22794  00609A                     u12895:
 22795  00609A  0100               	movlb	0	; () banked
 22796  00609C  85B7               	bsf	SendPacket@tParam& (0+255),2,b
 22797  00609E                     u12896:
 22798                           
 22799                           ; BSR set to: 0
 22800                           ;Bridge.c: 76: tParam.flags.bits.secEn = SecurityEnabled;
 22801  00609E  B1B3               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 22802  0060A0  D002               	bra	u12905
 22803  0060A2  97B7               	bcf	SendPacket@tParam& (0+255),3,b
 22804  0060A4  D002               	bra	u12906
 22805  0060A6                     u12905:
 22806  0060A6  0100               	movlb	0	; () banked
 22807  0060A8  87B7               	bsf	SendPacket@tParam& (0+255),3,b
 22808  0060AA                     u12906:
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;Bridge.c: 85: tParam.flags.bits.destPrsnt = 1;
 22812  0060AA  8DB7               	bsf	SendPacket@tParam& (0+255),6,b
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;Bridge.c: 98: tParam.flags.bits.sourcePrsnt = 1;
 22816  0060AC  8FB7               	bsf	SendPacket@tParam& (0+255),7,b
 22817                           
 22818                           ;Bridge.c: 101: tParam.DestAddress = DestinationAddress;
 22819  0060AE  C0AE  F0B8         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 22820  0060B2  C0AF  F0B9         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;Bridge.c: 102: tParam.DestPANID.Val = destinationPANID;
 22824  0060B6  C0B0  F0BA         	movff	SendPacket@destinationPANID,SendPacket@tParam+3
 22825  0060BA  C0B1  F0BB         	movff	SendPacket@destinationPANID+1,SendPacket@tParam+4
 22826                           
 22827                           ; BSR set to: 0
 22828                           ;Bridge.c: 104: status = MiMAC_SendPacket(tParam, TxBuff, TxIndex);
 22829  0060BE  EE20  F0B7         	lfsr	2,SendPacket@tParam
 22830  0060C2  EE00  F0A2         	lfsr	0,MiMAC_SendPacket@transParam
 22831  0060C6  0E04               	movlw	4
 22832  0060C8                     u12911:
 22833  0060C8  CFDB FFEB          	movff	plusw2,plusw0
 22834  0060CC  06E8               	decf	wreg,f,c
 22835  0060CE  E2FC               	bc	u12911
 22836  0060D0  0E48               	movlw	low _TxBuff
 22837  0060D2  6FA7               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 22838  0060D4  0E07               	movlw	high _TxBuff
 22839  0060D6  6FA8               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 22840  0060D8  C040  F0A9         	movff	_TxIndex,MiMAC_SendPacket@MACPayloadLen
 22841  0060DC  ECE4  F01A         	call	_MiMAC_SendPacket	;wreg free
 22842  0060E0  6FB5               	movwf	SendPacket@status& (0+255),b
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;Bridge.c: 105: TxIndex = 0;
 22846  0060E2  6A40               	clrf	_TxIndex,c
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;Bridge.c: 107: return status;
 22850  0060E4  51B5               	movf	SendPacket@status& (0+255),w,b
 22851                           
 22852                           ; BSR set to: 0
 22853  0060E6  0012               	return		;funcret
 22854  0060E8                     __end_of_SendPacket:
 22855                           	opt stack 0
 22856                           tblptru	equ	0xFF8
 22857                           tblptrh	equ	0xFF7
 22858                           tblptrl	equ	0xFF6
 22859                           tablat	equ	0xFF5
 22860                           prodh	equ	0xFF4
 22861                           prodl	equ	0xFF3
 22862                           intcon3	equ	0xFF0
 22863                           postinc0	equ	0xFEE
 22864                           plusw0	equ	0xFEB
 22865                           fsr0h	equ	0xFEA
 22866                           fsr0l	equ	0xFE9
 22867                           wreg	equ	0xFE8
 22868                           indf1	equ	0xFE7
 22869                           postinc1	equ	0xFE6
 22870                           postdec1	equ	0xFE5
 22871                           plusw1	equ	0xFE3
 22872                           fsr1h	equ	0xFE2
 22873                           fsr1l	equ	0xFE1
 22874                           indf2	equ	0xFDF
 22875                           postinc2	equ	0xFDE
 22876                           postdec2	equ	0xFDD
 22877                           plusw2	equ	0xFDB
 22878                           fsr2h	equ	0xFDA
 22879                           fsr2l	equ	0xFD9
 22880                           status	equ	0xFD8
 22881                           
 22882 ;; *************** function _MiMAC_SendPacket *****************
 22883 ;; Defined at:
 22884 ;;		line 803 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 22885 ;; Parameters:    Size  Location     Type
 22886 ;;  transParam      5   66[BANK0 ] struct .
 22887 ;;  MACPayload      2   71[BANK0 ] PTR unsigned char 
 22888 ;;		 -> TxBuff(64), 
 22889 ;;  MACPayloadLe    1   73[BANK0 ] unsigned char 
 22890 ;; Auto vars:     Size  Location     Type
 22891 ;;  headerLen       1   75[BANK0 ] unsigned char 
 22892 ;;  TxIndex         1   77[BANK0 ] unsigned char 
 22893 ;;  i               1   76[BANK0 ] unsigned char 
 22894 ;; Return value:  Size  Location     Type
 22895 ;;                  1    wreg      unsigned char 
 22896 ;; Registers used:
 22897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22898 ;; Tracked objects:
 22899 ;;		On entry : F/0
 22900 ;;		On exit  : F/0
 22901 ;;		Unchanged: 0/0
 22902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22904 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22907 ;;Total ram usage:       12 bytes
 22908 ;; Hardware stack levels used:    1
 22909 ;; Hardware stack levels required when called:    9
 22910 ;; This function calls:
 22911 ;;		_CCM_Enc
 22912 ;;		_TxPacket
 22913 ;;		_memcpy
 22914 ;; This function is called by:
 22915 ;;		_SendPacket
 22916 ;; This function uses a non-reentrant model
 22917 ;;
 22918                           
 22919                           	psect	text93
 22920  0035C8                     __ptext93:
 22921                           	opt stack 0
 22922  0035C8                     _MiMAC_SendPacket:
 22923                           	opt stack 15
 22924                           
 22925                           ; BSR set to: 0
 22926                           ;drv_mrf_miwi_mesh_89xa.c: 807: uint8_t i;
 22927                           ;drv_mrf_miwi_mesh_89xa.c: 808: uint8_t TxIndex;
 22928                           ;drv_mrf_miwi_mesh_89xa.c: 810: if( MACPayloadLen > 54 )
 22929                           
 22930                           ; BSR set to: 0
 22931                           ;incstack = 0
 22932  0035C8  0E36               	movlw	54
 22933  0035CA  65A9               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 22934  0035CC  D001               	goto	l11886
 22935  0035CE  0C00               	retlw	0
 22936  0035D0                     l11886:
 22937                           
 22938                           ; BSR set to: 0
 22939                           ;drv_mrf_miwi_mesh_89xa.c: 813: }
 22940                           ;drv_mrf_miwi_mesh_89xa.c: 825: if( transParam.flags.bits.packetType == 0x01 )
 22941  0035D0  51A2               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 22942  0035D2  0B03               	andlw	3
 22943  0035D4  06E8               	decf	wreg,f,c
 22944  0035D6  E101               	bnz	l165
 22945                           
 22946                           ; BSR set to: 0
 22947                           ;drv_mrf_miwi_mesh_89xa.c: 826: {
 22948                           ;drv_mrf_miwi_mesh_89xa.c: 827: transParam.flags.bits.sourcePrsnt = 1;
 22949  0035D8  8FA2               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 22950  0035DA                     l165:
 22951                           
 22952                           ; BSR set to: 0
 22953                           ;drv_mrf_miwi_mesh_89xa.c: 828: }
 22954                           ;drv_mrf_miwi_mesh_89xa.c: 831: TxIndex = 0;
 22955  0035DA  6BAD               	clrf	MiMAC_SendPacket@TxIndex& (0+255),b
 22956                           
 22957                           ; BSR set to: 0
 22958                           ;drv_mrf_miwi_mesh_89xa.c: 833: MACTxBuffer[TxIndex++] = transParam.flags.Val;
 22959  0035DC  C0A2  F38E         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 22960                           
 22961                           ; BSR set to: 0
 22962  0035E0  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22963                           
 22964                           ; BSR set to: 0
 22965                           ;drv_mrf_miwi_mesh_89xa.c: 834: MACTxBuffer[TxIndex++] = MACSeq++;
 22966  0035E2  0E8E               	movlw	low _MACTxBuffer
 22967  0035E4  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22968  0035E6  6ED9               	movwf	fsr2l,c
 22969  0035E8  6ADA               	clrf	fsr2h,c
 22970  0035EA  0E03               	movlw	high _MACTxBuffer
 22971  0035EC  22DA               	addwfc	fsr2h,f,c
 22972  0035EE  C03C  FFDF         	movff	_MACSeq,indf2
 22973  0035F2  2A3C               	incf	_MACSeq,f,c
 22974  0035F4  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22975                           
 22976                           ; BSR set to: 0
 22977                           ;drv_mrf_miwi_mesh_89xa.c: 839: }
 22978                           ;drv_mrf_miwi_mesh_89xa.c: 841: if( transParam.flags.bits.destPrsnt )
 22979                           
 22980                           ;drv_mrf_miwi_mesh_89xa.c: 837: {
 22981  0035F6  ADA2               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 22982  0035F8  D02A               	goto	l167
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;drv_mrf_miwi_mesh_89xa.c: 842: {
 22986                           ;drv_mrf_miwi_mesh_89xa.c: 843: memcpy((uint8_t*)&MACTxBuffer[TxIndex],transParam.DestPA
      +                          NID.v,2);
 22987  0035FA  0E8E               	movlw	low _MACTxBuffer
 22988  0035FC  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22989  0035FE  6F75               	movwf	memcpy@d1& (0+255),b
 22990  003600  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 22991  003602  0E03               	movlw	high _MACTxBuffer
 22992  003604  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 22993  003606  0EA5               	movlw	low (MiMAC_SendPacket@transParam+3)
 22994  003608  6F77               	movwf	memcpy@s1& (0+255),b
 22995  00360A  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 22996  00360C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22997  00360E  0E02               	movlw	2
 22998  003610  6F79               	movwf	memcpy@n& (0+255),b
 22999  003612  EC5D  F036         	call	_memcpy	;wreg free
 23000                           
 23001                           ; BSR set to: 0
 23002                           ;drv_mrf_miwi_mesh_89xa.c: 844: TxIndex+=2;
 23003  003616  0E02               	movlw	2
 23004  003618  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23005                           
 23006                           ; BSR set to: 0
 23007                           ;drv_mrf_miwi_mesh_89xa.c: 845: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 23008  00361A  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 23009  00361C  D010               	goto	l11910
 23010  00361E                     l11904:
 23011                           
 23012                           ; BSR set to: 0
 23013                           ;drv_mrf_miwi_mesh_89xa.c: 846: {
 23014                           ;drv_mrf_miwi_mesh_89xa.c: 847: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 23015  00361E  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 23016  003620  25A3               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 23017  003622  6ED9               	movwf	fsr2l,c
 23018  003624  0E00               	movlw	0
 23019  003626  21A4               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 23020  003628  6EDA               	movwf	fsr2h,c
 23021  00362A  0E8E               	movlw	low _MACTxBuffer
 23022  00362C  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23023  00362E  6EE1               	movwf	fsr1l,c
 23024  003630  6AE2               	clrf	fsr1h,c
 23025  003632  0E03               	movlw	high _MACTxBuffer
 23026  003634  22E2               	addwfc	fsr1h,f,c
 23027  003636  CFDF FFE7          	movff	indf2,indf1
 23028                           
 23029                           ; BSR set to: 0
 23030  00363A  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23031                           
 23032                           ; BSR set to: 0
 23033  00363C  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 23034  00363E                     l11910:
 23035                           
 23036                           ; BSR set to: 0
 23037  00363E  3036               	rrcf	_MACInitParams,w,c
 23038  003640  32E8               	rrcf	wreg,f,c
 23039  003642  32E8               	rrcf	wreg,f,c
 23040  003644  0B0F               	andlw	15
 23041  003646  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 23042  003648  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 23043  00364A  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 23044  00364C  E3E8               	bnc	l11904
 23045  00364E                     l167:
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;drv_mrf_miwi_mesh_89xa.c: 848: }
 23049                           ;drv_mrf_miwi_mesh_89xa.c: 849: }
 23050                           ;drv_mrf_miwi_mesh_89xa.c: 851: if( transParam.flags.bits.sourcePrsnt )
 23051  00364E  AFA2               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 23052  003650  D02A               	goto	l171
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;drv_mrf_miwi_mesh_89xa.c: 852: {
 23056                           ;drv_mrf_miwi_mesh_89xa.c: 853: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&myPANID,2);
 23057  003652  0E8E               	movlw	low _MACTxBuffer
 23058  003654  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23059  003656  6F75               	movwf	memcpy@d1& (0+255),b
 23060  003658  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 23061  00365A  0E03               	movlw	high _MACTxBuffer
 23062  00365C  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 23063  00365E  0E4D               	movlw	low _myPANID
 23064  003660  6F77               	movwf	memcpy@s1& (0+255),b
 23065  003662  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 23066  003664  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23067  003666  0E02               	movlw	2
 23068  003668  6F79               	movwf	memcpy@n& (0+255),b
 23069  00366A  EC5D  F036         	call	_memcpy	;wreg free
 23070                           
 23071                           ; BSR set to: 0
 23072                           ;drv_mrf_miwi_mesh_89xa.c: 854: TxIndex+=2;
 23073  00366E  0E02               	movlw	2
 23074  003670  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23075                           
 23076                           ; BSR set to: 0
 23077                           ;drv_mrf_miwi_mesh_89xa.c: 855: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 23078  003672  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 23079  003674  D010               	goto	l11924
 23080  003676                     l11918:
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;drv_mrf_miwi_mesh_89xa.c: 856: {
 23084                           ;drv_mrf_miwi_mesh_89xa.c: 857: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 23085  003676  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 23086  003678  2437               	addwf	_MACInitParams+1,w,c
 23087  00367A  6ED9               	movwf	fsr2l,c
 23088  00367C  0E00               	movlw	0
 23089  00367E  2038               	addwfc	_MACInitParams+2,w,c
 23090  003680  6EDA               	movwf	fsr2h,c
 23091  003682  0E8E               	movlw	low _MACTxBuffer
 23092  003684  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23093  003686  6EE1               	movwf	fsr1l,c
 23094  003688  6AE2               	clrf	fsr1h,c
 23095  00368A  0E03               	movlw	high _MACTxBuffer
 23096  00368C  22E2               	addwfc	fsr1h,f,c
 23097  00368E  CFDF FFE7          	movff	indf2,indf1
 23098                           
 23099                           ; BSR set to: 0
 23100  003692  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23101                           
 23102                           ; BSR set to: 0
 23103  003694  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 23104  003696                     l11924:
 23105                           
 23106                           ; BSR set to: 0
 23107  003696  3036               	rrcf	_MACInitParams,w,c
 23108  003698  32E8               	rrcf	wreg,f,c
 23109  00369A  32E8               	rrcf	wreg,f,c
 23110  00369C  0B0F               	andlw	15
 23111  00369E  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 23112  0036A0  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 23113  0036A2  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 23114  0036A4  E3E8               	bnc	l11918
 23115  0036A6                     l171:
 23116                           
 23117                           ; BSR set to: 0
 23118                           ;drv_mrf_miwi_mesh_89xa.c: 858: }
 23119                           ;drv_mrf_miwi_mesh_89xa.c: 859: }
 23120                           ;drv_mrf_miwi_mesh_89xa.c: 862: if( transParam.flags.bits.secEn )
 23121  0036A6  A7A2               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 23122  0036A8  D048               	goto	l175
 23123                           
 23124                           ; BSR set to: 0
 23125                           ;drv_mrf_miwi_mesh_89xa.c: 863: {
 23126                           ;drv_mrf_miwi_mesh_89xa.c: 864: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&OutgoingFrameCou
      +                          nter,4);
 23127  0036AA  0E8E               	movlw	low _MACTxBuffer
 23128  0036AC  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23129  0036AE  6F75               	movwf	memcpy@d1& (0+255),b
 23130  0036B0  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 23131  0036B2  0E03               	movlw	high _MACTxBuffer
 23132  0036B4  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 23133  0036B6  0E9B               	movlw	low _OutgoingFrameCounter
 23134  0036B8  6F77               	movwf	memcpy@s1& (0+255),b
 23135  0036BA  0E02               	movlw	high _OutgoingFrameCounter
 23136  0036BC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 23137  0036BE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 23138  0036C0  0E04               	movlw	4
 23139  0036C2  6F79               	movwf	memcpy@n& (0+255),b
 23140  0036C4  EC5D  F036         	call	_memcpy	;wreg free
 23141                           
 23142                           ; BSR set to: 0
 23143                           ;drv_mrf_miwi_mesh_89xa.c: 865: TxIndex+=4;
 23144  0036C8  0E04               	movlw	4
 23145  0036CA  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23146                           
 23147                           ; BSR set to: 0
 23148                           ;drv_mrf_miwi_mesh_89xa.c: 866: OutgoingFrameCounter++;
 23149  0036CC  0102               	movlb	2	; () banked
 23150  0036CE  2B9B               	incf	_OutgoingFrameCounter& (0+255),f,b
 23151  0036D0  0E00               	movlw	0
 23152  0036D2  239C               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 23153  0036D4  239D               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 23154  0036D6  239E               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 23155                           
 23156                           ; BSR set to: 2
 23157                           ;drv_mrf_miwi_mesh_89xa.c: 873: MACTxBuffer[TxIndex++] = 0x00;
 23158  0036D8  0E8E               	movlw	low _MACTxBuffer
 23159  0036DA  0100               	movlb	0	; () banked
 23160  0036DC  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23161  0036DE  6ED9               	movwf	fsr2l,c
 23162  0036E0  6ADA               	clrf	fsr2h,c
 23163  0036E2  0E03               	movlw	high _MACTxBuffer
 23164  0036E4  22DA               	addwfc	fsr2h,f,c
 23165  0036E6  6ADF               	clrf	indf2,c
 23166                           
 23167                           ; BSR set to: 0
 23168  0036E8  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;drv_mrf_miwi_mesh_89xa.c: 875: {
 23172                           ;drv_mrf_miwi_mesh_89xa.c: 876: uint8_t headerLen;
 23173                           ;drv_mrf_miwi_mesh_89xa.c: 878: headerLen = TxIndex;
 23174  0036EA  C0AD  F0AB         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;drv_mrf_miwi_mesh_89xa.c: 880: for(i = 0; i < MACPayloadLen; i++)
 23178  0036EE  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 23179  0036F0  D010               	goto	l11946
 23180  0036F2                     l11940:
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;drv_mrf_miwi_mesh_89xa.c: 881: {
 23184                           ;drv_mrf_miwi_mesh_89xa.c: 882: MACTxBuffer[TxIndex++] = MACPayload[i];
 23185  0036F2  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 23186  0036F4  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 23187  0036F6  6ED9               	movwf	fsr2l,c
 23188  0036F8  0E00               	movlw	0
 23189  0036FA  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 23190  0036FC  6EDA               	movwf	fsr2h,c
 23191  0036FE  0E8E               	movlw	low _MACTxBuffer
 23192  003700  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23193  003702  6EE1               	movwf	fsr1l,c
 23194  003704  6AE2               	clrf	fsr1h,c
 23195  003706  0E03               	movlw	high _MACTxBuffer
 23196  003708  22E2               	addwfc	fsr1h,f,c
 23197  00370A  CFDF FFE7          	movff	indf2,indf1
 23198                           
 23199                           ; BSR set to: 0
 23200  00370E  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23201                           
 23202                           ; BSR set to: 0
 23203  003710  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 23204  003712                     l11946:
 23205                           
 23206                           ; BSR set to: 0
 23207  003712  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 23208  003714  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 23209  003716  E3ED               	bnc	l11940
 23210                           
 23211                           ; BSR set to: 0
 23212                           ;drv_mrf_miwi_mesh_89xa.c: 883: }
 23213                           ;drv_mrf_miwi_mesh_89xa.c: 903: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen
      +                          , key);
 23214  003718  0E8E               	movlw	low _MACTxBuffer
 23215  00371A  6F97               	movwf	CCM_Enc@text& (0+255),b
 23216  00371C  0E03               	movlw	high _MACTxBuffer
 23217  00371E  6F98               	movwf	(CCM_Enc@text+1)& (0+255),b
 23218  003720  C0AB  F099         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 23219  003724  C0A9  F09A         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 23220  003728  0E8C               	movlw	low _key
 23221  00372A  6F9B               	movwf	CCM_Enc@key& (0+255),b
 23222  00372C  0E02               	movlw	high _key
 23223  00372E  6F9C               	movwf	(CCM_Enc@key+1)& (0+255),b
 23224  003730  EC45  F02C         	call	_CCM_Enc	;wreg free
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;drv_mrf_miwi_mesh_89xa.c: 904: TxIndex += 2;
 23228  003734  0E02               	movlw	2
 23229  003736  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23230                           
 23231                           ;drv_mrf_miwi_mesh_89xa.c: 911: }
 23232                           ;drv_mrf_miwi_mesh_89xa.c: 912: }
 23233  003738  D015               	goto	l11960
 23234  00373A                     l175:
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;drv_mrf_miwi_mesh_89xa.c: 913: else
 23238                           ;drv_mrf_miwi_mesh_89xa.c: 917: for(i = 0; i < MACPayloadLen; i++)
 23239  00373A  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 23240  00373C  D010               	goto	l11958
 23241  00373E                     l11952:
 23242                           
 23243                           ; BSR set to: 0
 23244                           ;drv_mrf_miwi_mesh_89xa.c: 918: {
 23245                           ;drv_mrf_miwi_mesh_89xa.c: 919: MACTxBuffer[TxIndex++] = MACPayload[i];
 23246  00373E  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 23247  003740  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 23248  003742  6ED9               	movwf	fsr2l,c
 23249  003744  0E00               	movlw	0
 23250  003746  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 23251  003748  6EDA               	movwf	fsr2h,c
 23252  00374A  0E8E               	movlw	low _MACTxBuffer
 23253  00374C  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23254  00374E  6EE1               	movwf	fsr1l,c
 23255  003750  6AE2               	clrf	fsr1h,c
 23256  003752  0E03               	movlw	high _MACTxBuffer
 23257  003754  22E2               	addwfc	fsr1h,f,c
 23258  003756  CFDF FFE7          	movff	indf2,indf1
 23259                           
 23260                           ; BSR set to: 0
 23261  00375A  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 23262                           
 23263                           ; BSR set to: 0
 23264  00375C  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 23265  00375E                     l11958:
 23266                           
 23267                           ; BSR set to: 0
 23268  00375E  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 23269  003760  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 23270  003762  E3ED               	bnc	l11952
 23271  003764                     l11960:
 23272                           
 23273                           ; BSR set to: 0
 23274                           ;drv_mrf_miwi_mesh_89xa.c: 920: }
 23275                           ;drv_mrf_miwi_mesh_89xa.c: 922: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.
      +                          CCAEnable);
 23276  003764  0E00               	movlw	0
 23277  003766  B236               	btfsc	_MACInitParams,1,c
 23278  003768  0E01               	movlw	1
 23279  00376A  6F87               	movwf	TxPacket@CCA& (0+255),b
 23280  00376C  51AD               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 23281  00376E  EF49  F022         	goto	_TxPacket
 23282  003772                     __end_of_MiMAC_SendPacket:
 23283                           	opt stack 0
 23284                           tblptru	equ	0xFF8
 23285                           tblptrh	equ	0xFF7
 23286                           tblptrl	equ	0xFF6
 23287                           tablat	equ	0xFF5
 23288                           prodh	equ	0xFF4
 23289                           prodl	equ	0xFF3
 23290                           intcon3	equ	0xFF0
 23291                           postinc0	equ	0xFEE
 23292                           plusw0	equ	0xFEB
 23293                           fsr0h	equ	0xFEA
 23294                           fsr0l	equ	0xFE9
 23295                           wreg	equ	0xFE8
 23296                           indf1	equ	0xFE7
 23297                           postinc1	equ	0xFE6
 23298                           postdec1	equ	0xFE5
 23299                           plusw1	equ	0xFE3
 23300                           fsr1h	equ	0xFE2
 23301                           fsr1l	equ	0xFE1
 23302                           indf2	equ	0xFDF
 23303                           postinc2	equ	0xFDE
 23304                           postdec2	equ	0xFDD
 23305                           plusw2	equ	0xFDB
 23306                           fsr2h	equ	0xFDA
 23307                           fsr2l	equ	0xFD9
 23308                           status	equ	0xFD8
 23309                           
 23310 ;; *************** function _TxPacket *****************
 23311 ;; Defined at:
 23312 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23313 ;; Parameters:    Size  Location     Type
 23314 ;;  TxPacketLen     1    wreg     unsigned char 
 23315 ;;  CCA             1   39[BANK0 ] unsigned char 
 23316 ;; Auto vars:     Size  Location     Type
 23317 ;;  TxPacketLen     1   60[BANK0 ] unsigned char 
 23318 ;;  j               2   56[BANK0 ] unsigned int 
 23319 ;;  delay           2   52[BANK0 ] unsigned int 
 23320 ;;  allowedTxFai    1   55[BANK0 ] unsigned char 
 23321 ;;  t2              4   48[BANK0 ] struct MIWI_TICK_t
 23322 ;;  t1              4   44[BANK0 ] struct MIWI_TICK_t
 23323 ;;  i               1   61[BANK0 ] unsigned char 
 23324 ;;  status          1   59[BANK0 ] unsigned char 
 23325 ;;  rssival         1   58[BANK0 ] unsigned char 
 23326 ;;  reTry           1   54[BANK0 ] unsigned char 
 23327 ;;  CCARetries      1    0        unsigned char 
 23328 ;; Return value:  Size  Location     Type
 23329 ;;                  1    wreg      unsigned char 
 23330 ;; Registers used:
 23331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23332 ;; Tracked objects:
 23333 ;;		On entry : F/0
 23334 ;;		On exit  : F/0
 23335 ;;		Unchanged: 0/0
 23336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23337 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23340 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23341 ;;Total ram usage:       23 bytes
 23342 ;; Hardware stack levels used:    1
 23343 ;; Hardware stack levels required when called:    8
 23344 ;; This function calls:
 23345 ;;		_DelayMs
 23346 ;;		_MiWi_TickGetMs
 23347 ;;		_RegisterRead
 23348 ;;		_RegisterSet
 23349 ;;		_SetRFMode
 23350 ;;		_WriteFIFO
 23351 ;;		_krnd
 23352 ;; This function is called by:
 23353 ;;		_MiMAC_SendPacket
 23354 ;; This function uses a non-reentrant model
 23355 ;;
 23356                           
 23357                           	psect	text94
 23358  004492                     __ptext94:
 23359                           	opt stack 0
 23360  004492                     _TxPacket:
 23361                           	opt stack 15
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;incstack = 0
 23365                           ;TxPacket@TxPacketLen stored from wreg
 23366  004492  6F9C               	movwf	TxPacket@TxPacketLen& (0+255),b
 23367                           
 23368                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 23369                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 23370                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 23371                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 23372                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 23373                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 23374  004494  0E03               	movlw	3
 23375  004496  0100               	movlb	0	; () banked
 23376  004498  6F96               	movwf	TxPacket@reTry& (0+255),b
 23377                           
 23378                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 23379  00449A  D098               	goto	l11814
 23380  00449C                     l102:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 23384                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 23385                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 23386  00449C  6B97               	clrf	TxPacket@allowedTxFailure& (0+255),b
 23387  00449E                     l103:
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 23391  00449E  6A42               	clrf	_hasAck,c	;volatile
 23392                           
 23393                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 23394  0044A0  96F0               	bcf	intcon3,3,c	;volatile
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 23398  0044A2  0E20               	movlw	32
 23399  0044A4  EC99  F033         	call	_SetRFMode
 23400                           
 23401                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 23402  0044A8  0E1A               	movlw	26
 23403  0044AA  0100               	movlb	0	; () banked
 23404  0044AC  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 23405  0044AE  0EC9               	movlw	201
 23406  0044B0  6F75               	movwf	RegisterSet@setting& (0+255),b
 23407  0044B2  EC61  F03A         	call	_RegisterSet	;wreg free
 23408                           
 23409                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 23410  0044B6  0100               	movlb	0	; () banked
 23411  0044B8  519C               	movf	TxPacket@TxPacketLen& (0+255),w,b
 23412  0044BA  EC9E  F03A         	call	_WriteFIFO
 23413                           
 23414                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 23415  0044BE  0100               	movlb	0	; () banked
 23416  0044C0  6B9D               	clrf	TxPacket@i& (0+255),b
 23417  0044C2  D00B               	goto	l11752
 23418  0044C4                     l11748:
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 23422                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 23423  0044C4  0E8E               	movlw	low _MACTxBuffer
 23424  0044C6  259D               	addwf	TxPacket@i& (0+255),w,b
 23425  0044C8  6ED9               	movwf	fsr2l,c
 23426  0044CA  6ADA               	clrf	fsr2h,c
 23427  0044CC  0E03               	movlw	high _MACTxBuffer
 23428  0044CE  22DA               	addwfc	fsr2h,f,c
 23429  0044D0  50DF               	movf	indf2,w,c
 23430  0044D2  EC9E  F03A         	call	_WriteFIFO
 23431  0044D6  0100               	movlb	0	; () banked
 23432  0044D8  2B9D               	incf	TxPacket@i& (0+255),f,b
 23433  0044DA                     l11752:
 23434                           
 23435                           ; BSR set to: 0
 23436  0044DA  519C               	movf	TxPacket@TxPacketLen& (0+255),w,b
 23437  0044DC  5D9D               	subwf	TxPacket@i& (0+255),w,b
 23438  0044DE  E3F2               	bnc	l11748
 23439                           
 23440                           ; BSR set to: 0
 23441                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 23442  0044E0  5187               	movf	TxPacket@CCA& (0+255),w,b
 23443  0044E2  E02C               	bz	l11782
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 23447                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 23448  0044E4  6B9D               	clrf	TxPacket@i& (0+255),b
 23449  0044E6                     l11762:
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 23453                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 23454  0044E6  0E28               	movlw	40
 23455  0044E8  ECC2  F039         	call	_RegisterRead
 23456  0044EC  6F9A               	movwf	TxPacket@rssival& (0+255),b
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 23460  0044EE  90D8               	bcf	status,0,c
 23461  0044F0  339A               	rrcf	TxPacket@rssival& (0+255),f,b
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 23465  0044F2  0E41               	movlw	65
 23466  0044F4  659A               	cpfsgt	TxPacket@rssival& (0+255),b
 23467  0044F6  D022               	goto	l11782
 23468                           
 23469                           ; BSR set to: 0
 23470                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 23471                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 23472                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 23473                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 23474  0044F8  EC94  F01F         	call	_krnd	;wreg free
 23475  0044FC  0E1F               	movlw	31
 23476  0044FE  1773               	andwf	?_krnd& (0+255),f,b
 23477  004500  6B74               	clrf	(?_krnd+1)& (0+255),b
 23478  004502  0E08               	movlw	8
 23479  004504  2573               	addwf	?_krnd& (0+255),w,b
 23480  004506  6F94               	movwf	TxPacket@delay& (0+255),b
 23481  004508  0E00               	movlw	0
 23482  00450A  2174               	addwfc	(?_krnd+1)& (0+255),w,b
 23483  00450C  6F95               	movwf	(TxPacket@delay+1)& (0+255),b
 23484                           
 23485                           ; BSR set to: 0
 23486                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 23487  00450E  6B98               	clrf	TxPacket@j& (0+255),b
 23488  004510  6B99               	clrf	(TxPacket@j+1)& (0+255),b
 23489  004512  D00B               	goto	l11776
 23490  004514                     l112:
 23491                           
 23492                           ; BSR set to: 0
 23493  004514  0004               	clrwdt		;# 
 23494                           
 23495                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 23496  004516  0E01               	movlw	1
 23497  004518  0100               	movlb	0	; () banked
 23498  00451A  6F7B               	movwf	DelayMs@ms& (0+255),b
 23499  00451C  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 23500  00451E  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 23501  004520  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 23502  004522  EC4E  F02F         	call	_DelayMs	;wreg free
 23503                           
 23504                           ; BSR set to: 0
 23505  004526  4B98               	infsnz	TxPacket@j& (0+255),f,b
 23506  004528  2B99               	incf	(TxPacket@j+1)& (0+255),f,b
 23507  00452A                     l11776:
 23508                           
 23509                           ; BSR set to: 0
 23510  00452A  5194               	movf	TxPacket@delay& (0+255),w,b
 23511  00452C  5D98               	subwf	TxPacket@j& (0+255),w,b
 23512  00452E  5195               	movf	(TxPacket@delay+1)& (0+255),w,b
 23513  004530  5999               	subwfb	(TxPacket@j+1)& (0+255),w,b
 23514  004532  E3F0               	bnc	l112
 23515                           
 23516                           ; BSR set to: 0
 23517  004534  2B9D               	incf	TxPacket@i& (0+255),f,b
 23518                           
 23519                           ; BSR set to: 0
 23520  004536  0E03               	movlw	3
 23521  004538  659D               	cpfsgt	TxPacket@i& (0+255),b
 23522  00453A  D7D5               	goto	l11762
 23523  00453C                     l11782:
 23524                           
 23525                           ; BSR set to: 0
 23526                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 23527                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 23528                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 23529                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 23530  00453C  0E80               	movlw	128
 23531  00453E  EC99  F033         	call	_SetRFMode
 23532                           
 23533                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 23534  004542  86F0               	bsf	intcon3,3,c	;volatile
 23535  004544                     l11786:
 23536  004544  503B               	movf	_IRQ1_Received,w,c	;volatile
 23537  004546  E102               	bnz	l119
 23538  004548  A0F0               	btfss	intcon3,0,c	;volatile
 23539  00454A  D7FC               	goto	l11786
 23540  00454C                     l119:
 23541                           
 23542                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 23543                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 23544  00454C  6A3B               	clrf	_IRQ1_Received,c	;volatile
 23545                           
 23546                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 23547  00454E  0E20               	movlw	32
 23548  004550  EC99  F033         	call	_SetRFMode
 23549                           
 23550                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 23551  004554  0E60               	movlw	96
 23552  004556  EC99  F033         	call	_SetRFMode
 23553                           
 23554                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 23555  00455A  0103               	movlb	3	; () banked
 23556  00455C  AB8E               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 23557  00455E  D00E               	goto	l11800
 23558                           
 23559                           ; BSR set to: 3
 23560                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 23561                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 23562  004560  C38F  F041         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 23563                           
 23564                           ; BSR set to: 3
 23565                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 23566  004564  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 23567  004568  C07F  F08C         	movff	?_MiWi_TickGetMs,TxPacket@t1
 23568  00456C  C080  F08D         	movff	?_MiWi_TickGetMs+1,TxPacket@t1+1
 23569  004570  C081  F08E         	movff	?_MiWi_TickGetMs+2,TxPacket@t1+2
 23570  004574  C082  F08F         	movff	?_MiWi_TickGetMs+3,TxPacket@t1+3
 23571  004578                     l11798:
 23572                           
 23573                           ; BSR set to: 0
 23574                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 23575                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 23576  004578  5042               	movf	_hasAck,w,c	;volatile
 23577  00457A  E004               	bz	l11802
 23578  00457C                     l11800:
 23579                           
 23580                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 23581                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 23582  00457C  0E01               	movlw	1
 23583  00457E  0100               	movlb	0	; () banked
 23584  004580  6F9B               	movwf	TxPacket@status& (0+255),b
 23585                           
 23586                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 23587  004582  D029               	goto	l11816
 23588  004584                     l11802:
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 23592                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 23593  004584  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 23594  004588  C07F  F090         	movff	?_MiWi_TickGetMs,TxPacket@t2
 23595  00458C  C080  F091         	movff	?_MiWi_TickGetMs+1,TxPacket@t2+1
 23596  004590  C081  F092         	movff	?_MiWi_TickGetMs+2,TxPacket@t2+2
 23597  004594  C082  F093         	movff	?_MiWi_TickGetMs+3,TxPacket@t2+3
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 23601  004598  518C               	movf	TxPacket@t1& (0+255),w,b
 23602  00459A  5D90               	subwf	TxPacket@t2& (0+255),w,b
 23603  00459C  6F88               	movwf	??_TxPacket& (0+255),b
 23604  00459E  518D               	movf	(TxPacket@t1+1)& (0+255),w,b
 23605  0045A0  5991               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 23606  0045A2  6F89               	movwf	(??_TxPacket+1)& (0+255),b
 23607  0045A4  518E               	movf	(TxPacket@t1+2)& (0+255),w,b
 23608  0045A6  5992               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 23609  0045A8  6F8A               	movwf	(??_TxPacket+2)& (0+255),b
 23610  0045AA  518F               	movf	(TxPacket@t1+3)& (0+255),w,b
 23611  0045AC  5993               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 23612  0045AE  6F8B               	movwf	(??_TxPacket+3)& (0+255),b
 23613  0045B0  518B               	movf	(??_TxPacket+3)& (0+255),w,b
 23614  0045B2  118A               	iorwf	(??_TxPacket+2)& (0+255),w,b
 23615  0045B4  1189               	iorwf	(??_TxPacket+1)& (0+255),w,b
 23616  0045B6  E103               	bnz	u12580
 23617  0045B8  0E33               	movlw	51
 23618  0045BA  5D88               	subwf	??_TxPacket& (0+255),w,b
 23619  0045BC  E3DD               	bnc	l11798
 23620  0045BE                     u12580:
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 23624                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 23625                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 23626  0045BE  2B97               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 23627  0045C0  0597               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 23628  0045C2  6F88               	movwf	??_TxPacket& (0+255),b
 23629  0045C4  0E04               	movlw	4
 23630  0045C6  6188               	cpfslt	??_TxPacket& (0+255),b
 23631  0045C8  D001               	goto	l11814
 23632  0045CA  D769               	goto	l103
 23633  0045CC                     l11814:
 23634                           
 23635                           ; BSR set to: 0
 23636  0045CC  0796               	decf	TxPacket@reTry& (0+255),f,b
 23637  0045CE  2996               	incf	TxPacket@reTry& (0+255),w,b
 23638  0045D0  E001 D764          	bnz	l102
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 23642                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 23643                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 23644  0045D4  6B9B               	clrf	TxPacket@status& (0+255),b
 23645  0045D6                     l11816:
 23646                           
 23647                           ; BSR set to: 0
 23648                           ;drv_mrf_miwi_mesh_89xa.c: 468: return status;
 23649  0045D6  519B               	movf	TxPacket@status& (0+255),w,b
 23650                           
 23651                           ; BSR set to: 0
 23652  0045D8  0012               	return		;funcret
 23653  0045DA                     __end_of_TxPacket:
 23654                           	opt stack 0
 23655                           tblptru	equ	0xFF8
 23656                           tblptrh	equ	0xFF7
 23657                           tblptrl	equ	0xFF6
 23658                           tablat	equ	0xFF5
 23659                           prodh	equ	0xFF4
 23660                           prodl	equ	0xFF3
 23661                           intcon3	equ	0xFF0
 23662                           postinc0	equ	0xFEE
 23663                           plusw0	equ	0xFEB
 23664                           fsr0h	equ	0xFEA
 23665                           fsr0l	equ	0xFE9
 23666                           wreg	equ	0xFE8
 23667                           indf1	equ	0xFE7
 23668                           postinc1	equ	0xFE6
 23669                           postdec1	equ	0xFE5
 23670                           plusw1	equ	0xFE3
 23671                           fsr1h	equ	0xFE2
 23672                           fsr1l	equ	0xFE1
 23673                           indf2	equ	0xFDF
 23674                           postinc2	equ	0xFDE
 23675                           postdec2	equ	0xFDD
 23676                           plusw2	equ	0xFDB
 23677                           fsr2h	equ	0xFDA
 23678                           fsr2l	equ	0xFD9
 23679                           status	equ	0xFD8
 23680                           
 23681 ;; *************** function _WriteFIFO *****************
 23682 ;; Defined at:
 23683 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23684 ;; Parameters:    Size  Location     Type
 23685 ;;  Data            1    wreg     unsigned char 
 23686 ;; Auto vars:     Size  Location     Type
 23687 ;;  Data            1   21[BANK0 ] unsigned char 
 23688 ;;  IRQ1select      1   22[BANK0 ] unsigned char 
 23689 ;; Return value:  Size  Location     Type
 23690 ;;                  1    wreg      void 
 23691 ;; Registers used:
 23692 ;;		wreg, status,2, cstack
 23693 ;; Tracked objects:
 23694 ;;		On entry : F/0
 23695 ;;		On exit  : 0/0
 23696 ;;		Unchanged: 0/0
 23697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23702 ;;Total ram usage:        2 bytes
 23703 ;; Hardware stack levels used:    1
 23704 ;; Hardware stack levels required when called:    6
 23705 ;; This function calls:
 23706 ;;		_SPIPut
 23707 ;; This function is called by:
 23708 ;;		_TxPacket
 23709 ;; This function uses a non-reentrant model
 23710 ;;
 23711                           
 23712                           	psect	text95
 23713  00753C                     __ptext95:
 23714                           	opt stack 0
 23715  00753C                     _WriteFIFO:
 23716                           	opt stack 16
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;incstack = 0
 23720                           ;WriteFIFO@Data stored from wreg
 23721  00753C  6F75               	movwf	WriteFIFO@Data& (0+255),b
 23722                           
 23723                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 23724  00753E  0E00               	movlw	0
 23725  007540  B6F0               	btfsc	intcon3,3,c	;volatile
 23726  007542  0E01               	movlw	1
 23727  007544  0100               	movlb	0	; () banked
 23728  007546  6F76               	movwf	WriteFIFO@IRQ1select& (0+255),b
 23729                           
 23730                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 23731  007548  96F0               	bcf	intcon3,3,c	;volatile
 23732                           
 23733                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 23734  00754A  9A89               	bcf	3977,5,c	;volatile
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 23738  00754C  5175               	movf	WriteFIFO@Data& (0+255),w,b
 23739  00754E  EC29  F03B         	call	_SPIPut
 23740                           
 23741                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 23742  007552  8A89               	bsf	3977,5,c	;volatile
 23743                           
 23744                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 23745  007554  0100               	movlb	0	; () banked
 23746  007556  B176               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 23747  007558  D002               	bra	u12325
 23748  00755A  96F0               	bcf	intcon3,3,c	;volatile
 23749  00755C  D001               	bra	u12326
 23750  00755E                     u12325:
 23751  00755E  86F0               	bsf	intcon3,3,c	;volatile
 23752  007560                     u12326:
 23753  007560  0012               	return		;funcret
 23754  007562                     __end_of_WriteFIFO:
 23755                           	opt stack 0
 23756                           tblptru	equ	0xFF8
 23757                           tblptrh	equ	0xFF7
 23758                           tblptrl	equ	0xFF6
 23759                           tablat	equ	0xFF5
 23760                           prodh	equ	0xFF4
 23761                           prodl	equ	0xFF3
 23762                           intcon3	equ	0xFF0
 23763                           postinc0	equ	0xFEE
 23764                           plusw0	equ	0xFEB
 23765                           fsr0h	equ	0xFEA
 23766                           fsr0l	equ	0xFE9
 23767                           wreg	equ	0xFE8
 23768                           indf1	equ	0xFE7
 23769                           postinc1	equ	0xFE6
 23770                           postdec1	equ	0xFE5
 23771                           plusw1	equ	0xFE3
 23772                           fsr1h	equ	0xFE2
 23773                           fsr1l	equ	0xFE1
 23774                           indf2	equ	0xFDF
 23775                           postinc2	equ	0xFDE
 23776                           postdec2	equ	0xFDD
 23777                           plusw2	equ	0xFDB
 23778                           fsr2h	equ	0xFDA
 23779                           fsr2l	equ	0xFD9
 23780                           status	equ	0xFD8
 23781                           
 23782 ;; *************** function _CCM_Enc *****************
 23783 ;; Defined at:
 23784 ;;		line 272 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 23785 ;; Parameters:    Size  Location     Type
 23786 ;;  text            2   55[BANK0 ] PTR unsigned char 
 23787 ;;		 -> MACTxBuffer(64), 
 23788 ;;  headerLen       1   57[BANK0 ] unsigned char 
 23789 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 23790 ;;  key             2   59[BANK0 ] PTR unsigned char 
 23791 ;;		 -> key(8), 
 23792 ;; Auto vars:     Size  Location     Type
 23793 ;;  i               1   65[BANK0 ] unsigned char 
 23794 ;; Return value:  Size  Location     Type
 23795 ;;                  1    wreg      void 
 23796 ;; Registers used:
 23797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23798 ;; Tracked objects:
 23799 ;;		On entry : F/0
 23800 ;;		On exit  : F/0
 23801 ;;		Unchanged: 0/0
 23802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23803 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23805 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23806 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23807 ;;Total ram usage:       11 bytes
 23808 ;; Hardware stack levels used:    1
 23809 ;; Hardware stack levels required when called:    7
 23810 ;; This function calls:
 23811 ;;		_CBC_MAC
 23812 ;;		_CTR
 23813 ;; This function is called by:
 23814 ;;		_MiMAC_SendPacket
 23815 ;; This function uses a non-reentrant model
 23816 ;;
 23817                           
 23818                           	psect	text96
 23819  00588A                     __ptext96:
 23820                           	opt stack 0
 23821  00588A                     _CCM_Enc:
 23822                           	opt stack 16
 23823                           
 23824                           ; BSR set to: 0
 23825                           ;drv_mrf_miwi_mesh_security.c: 277: uint8_t i;
 23826                           ;drv_mrf_miwi_mesh_security.c: 284: CBC_MAC(text, (headerLen + payloadLen), key, tmpBloc
      +                          k);
 23827                           
 23828                           ;incstack = 0
 23829  00588A  C097  F08A         	movff	CCM_Enc@text,CBC_MAC@text
 23830  00588E  C098  F08B         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 23831  005892  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 23832  005894  259A               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 23833  005896  6F8C               	movwf	CBC_MAC@len& (0+255),b
 23834  005898  C09B  F08D         	movff	CCM_Enc@key,CBC_MAC@key
 23835  00589C  C09C  F08E         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 23836  0058A0  0EE2               	movlw	low _tmpBlock
 23837  0058A2  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 23838  0058A4  0E01               	movlw	high _tmpBlock
 23839  0058A6  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 23840  0058A8  EC08  F02E         	call	_CBC_MAC	;wreg free
 23841                           
 23842                           ; BSR set to: 0
 23843                           ;drv_mrf_miwi_mesh_security.c: 286: for(i = 0; i < 4; i++)
 23844  0058AC  6BA1               	clrf	CCM_Enc@i& (0+255),b
 23845  0058AE                     l11838:
 23846                           
 23847                           ; BSR set to: 0
 23848                           ;drv_mrf_miwi_mesh_security.c: 287: {
 23849                           ;drv_mrf_miwi_mesh_security.c: 288: text[headerLen + payloadLen + i] = tmpBlock[i];
 23850  0058AE  0EE2               	movlw	low _tmpBlock
 23851  0058B0  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 23852  0058B2  6ED9               	movwf	fsr2l,c
 23853  0058B4  6ADA               	clrf	fsr2h,c
 23854  0058B6  0E01               	movlw	high _tmpBlock
 23855  0058B8  22DA               	addwfc	fsr2h,f,c
 23856  0058BA  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 23857  0058BC  2597               	addwf	CCM_Enc@text& (0+255),w,b
 23858  0058BE  6F9D               	movwf	??_CCM_Enc& (0+255),b
 23859  0058C0  0E00               	movlw	0
 23860  0058C2  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 23861  0058C4  6F9E               	movwf	(??_CCM_Enc+1)& (0+255),b
 23862  0058C6  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 23863  0058C8  279D               	addwf	??_CCM_Enc& (0+255),f,b
 23864  0058CA  0E00               	movlw	0
 23865  0058CC  239E               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 23866  0058CE  51A1               	movf	CCM_Enc@i& (0+255),w,b
 23867  0058D0  259D               	addwf	??_CCM_Enc& (0+255),w,b
 23868  0058D2  6EE1               	movwf	fsr1l,c
 23869  0058D4  0E00               	movlw	0
 23870  0058D6  219E               	addwfc	(??_CCM_Enc+1)& (0+255),w,b
 23871  0058D8  6EE2               	movwf	fsr1h,c
 23872  0058DA  CFDF FFE7          	movff	indf2,indf1
 23873                           
 23874                           ; BSR set to: 0
 23875  0058DE  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 23876                           
 23877                           ; BSR set to: 0
 23878  0058E0  0E03               	movlw	3
 23879  0058E2  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 23880  0058E4  D7E4               	goto	l11838
 23881                           
 23882                           ; BSR set to: 0
 23883                           ;drv_mrf_miwi_mesh_security.c: 289: }
 23884                           ;drv_mrf_miwi_mesh_security.c: 291: for(i = 0; i < 4-1; i++)
 23885  0058E6  6BA1               	clrf	CCM_Enc@i& (0+255),b
 23886  0058E8                     l11848:
 23887                           
 23888                           ; BSR set to: 0
 23889                           ;drv_mrf_miwi_mesh_security.c: 292: {
 23890                           ;drv_mrf_miwi_mesh_security.c: 293: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 23891  0058E8  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 23892  0058EA  5DA1               	subwf	CCM_Enc@i& (0+255),w,b
 23893  0058EC  E302               	bnc	l11852
 23894                           
 23895                           ; BSR set to: 0
 23896  0058EE  6B9F               	clrf	_CCM_Enc$776& (0+255),b
 23897  0058F0  D008               	goto	L11
 23898  0058F2                     l11852:
 23899                           
 23900                           ; BSR set to: 0
 23901  0058F2  51A1               	movf	CCM_Enc@i& (0+255),w,b
 23902  0058F4  2597               	addwf	CCM_Enc@text& (0+255),w,b
 23903  0058F6  6ED9               	movwf	fsr2l,c
 23904  0058F8  0E00               	movlw	0
 23905  0058FA  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 23906  0058FC  6EDA               	movwf	fsr2h,c
 23907  0058FE  50DF               	movf	indf2,w,c
 23908  005900  6F9F               	movwf	_CCM_Enc$776& (0+255),b
 23909  005902                     L11:
 23910  005902  6BA0               	clrf	(_CCM_Enc$776+1)& (0+255),b
 23911                           
 23912                           ; BSR set to: 0
 23913  005904  0EE2               	movlw	low _tmpBlock
 23914  005906  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 23915  005908  6ED9               	movwf	fsr2l,c
 23916  00590A  6ADA               	clrf	fsr2h,c
 23917  00590C  0E01               	movlw	high _tmpBlock
 23918  00590E  22DA               	addwfc	fsr2h,f,c
 23919  005910  C09F  FFDF         	movff	_CCM_Enc$776,indf2
 23920                           
 23921                           ; BSR set to: 0
 23922  005914  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 23923                           
 23924                           ; BSR set to: 0
 23925  005916  0E02               	movlw	2
 23926  005918  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 23927  00591A  D7E6               	goto	l11848
 23928                           
 23929                           ; BSR set to: 0
 23930                           ;drv_mrf_miwi_mesh_security.c: 294: }
 23931                           ;drv_mrf_miwi_mesh_security.c: 296: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBl
      +                          ock);
 23932  00591C  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 23933  00591E  2597               	addwf	CCM_Enc@text& (0+255),w,b
 23934  005920  6F8A               	movwf	CTR@text& (0+255),b
 23935  005922  0E00               	movlw	0
 23936  005924  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 23937  005926  6F8B               	movwf	(CTR@text+1)& (0+255),b
 23938  005928  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 23939  00592A  0F04               	addlw	4
 23940  00592C  6F8C               	movwf	CTR@len& (0+255),b
 23941  00592E  C09B  F08D         	movff	CCM_Enc@key,CTR@key
 23942  005932  C09C  F08E         	movff	CCM_Enc@key+1,CTR@key+1
 23943  005936  0EE2               	movlw	low _tmpBlock
 23944  005938  6F8F               	movwf	CTR@nounce& (0+255),b
 23945  00593A  0E01               	movlw	high _tmpBlock
 23946  00593C  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 23947  00593E  EFE6  F02B         	goto	_CTR	;wreg free
 23948  005942                     __end_of_CCM_Enc:
 23949                           	opt stack 0
 23950                           tblptru	equ	0xFF8
 23951                           tblptrh	equ	0xFF7
 23952                           tblptrl	equ	0xFF6
 23953                           tablat	equ	0xFF5
 23954                           prodh	equ	0xFF4
 23955                           prodl	equ	0xFF3
 23956                           intcon3	equ	0xFF0
 23957                           postinc0	equ	0xFEE
 23958                           plusw0	equ	0xFEB
 23959                           fsr0h	equ	0xFEA
 23960                           fsr0l	equ	0xFE9
 23961                           wreg	equ	0xFE8
 23962                           indf1	equ	0xFE7
 23963                           postinc1	equ	0xFE6
 23964                           postdec1	equ	0xFE5
 23965                           plusw1	equ	0xFE3
 23966                           fsr1h	equ	0xFE2
 23967                           fsr1l	equ	0xFE1
 23968                           indf2	equ	0xFDF
 23969                           postinc2	equ	0xFDE
 23970                           postdec2	equ	0xFDD
 23971                           plusw2	equ	0xFDB
 23972                           fsr2h	equ	0xFDA
 23973                           fsr2l	equ	0xFD9
 23974                           status	equ	0xFD8
 23975                           
 23976 ;; *************** function _CTR *****************
 23977 ;; Defined at:
 23978 ;;		line 150 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 23979 ;; Parameters:    Size  Location     Type
 23980 ;;  text            2   42[BANK0 ] PTR unsigned char 
 23981 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 23982 ;;  len             1   44[BANK0 ] unsigned char 
 23983 ;;  key             2   45[BANK0 ] PTR unsigned char 
 23984 ;;		 -> key(8), 
 23985 ;;  nounce          2   47[BANK0 ] PTR unsigned char 
 23986 ;;		 -> tmpBlock(4), 
 23987 ;; Auto vars:     Size  Location     Type
 23988 ;;  j               1   54[BANK0 ] unsigned char 
 23989 ;;  i               1   53[BANK0 ] unsigned char 
 23990 ;;  block           1   52[BANK0 ] unsigned char 
 23991 ;; Return value:  Size  Location     Type
 23992 ;;                  1    wreg      void 
 23993 ;; Registers used:
 23994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23995 ;; Tracked objects:
 23996 ;;		On entry : F/0
 23997 ;;		On exit  : F/0
 23998 ;;		Unchanged: 0/0
 23999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24000 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24002 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24003 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24004 ;;Total ram usage:       13 bytes
 24005 ;; Hardware stack levels used:    1
 24006 ;; Hardware stack levels required when called:    6
 24007 ;; This function calls:
 24008 ;;		_encode
 24009 ;; This function is called by:
 24010 ;;		_CCM_Enc
 24011 ;;		_CCM_Dec
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text97
 24016  0057CC                     __ptext97:
 24017                           	opt stack 0
 24018  0057CC                     _CTR:
 24019                           	opt stack 16
 24020                           
 24021                           ; BSR set to: 0
 24022                           ;drv_mrf_miwi_mesh_security.c: 152: uint8_t block = len/4+1;
 24023                           
 24024                           ; BSR set to: 0
 24025                           ;incstack = 0
 24026  0057CC  C08C  F091         	movff	CTR@len,??_CTR
 24027  0057D0  90D8               	bcf	status,0,c
 24028  0057D2  3391               	rrcf	??_CTR& (0+255),f,b
 24029  0057D4  90D8               	bcf	status,0,c
 24030  0057D6  3391               	rrcf	??_CTR& (0+255),f,b
 24031  0057D8  2991               	incf	??_CTR& (0+255),w,b
 24032  0057DA  6F94               	movwf	CTR@block& (0+255),b
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;drv_mrf_miwi_mesh_security.c: 153: uint8_t i, j;
 24036                           ;drv_mrf_miwi_mesh_security.c: 160: for(i = 0; i < block; i++)
 24037  0057DC  6B95               	clrf	CTR@i& (0+255),b
 24038  0057DE  D051               	goto	l11690
 24039  0057E0                     l308:
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;drv_mrf_miwi_mesh_security.c: 161: {
 24043                           ;drv_mrf_miwi_mesh_security.c: 162: for(j = 0; j < 4-1; j++)
 24044  0057E0  6B96               	clrf	CTR@j& (0+255),b
 24045  0057E2                     l11664:
 24046                           
 24047                           ; BSR set to: 0
 24048                           ;drv_mrf_miwi_mesh_security.c: 163: {
 24049                           ;drv_mrf_miwi_mesh_security.c: 164: tmpBlock[j] = nounce[j];
 24050  0057E2  5196               	movf	CTR@j& (0+255),w,b
 24051  0057E4  258F               	addwf	CTR@nounce& (0+255),w,b
 24052  0057E6  6ED9               	movwf	fsr2l,c
 24053  0057E8  0E00               	movlw	0
 24054  0057EA  2190               	addwfc	(CTR@nounce+1)& (0+255),w,b
 24055  0057EC  6EDA               	movwf	fsr2h,c
 24056  0057EE  0EE2               	movlw	low _tmpBlock
 24057  0057F0  2596               	addwf	CTR@j& (0+255),w,b
 24058  0057F2  6EE1               	movwf	fsr1l,c
 24059  0057F4  6AE2               	clrf	fsr1h,c
 24060  0057F6  0E01               	movlw	high _tmpBlock
 24061  0057F8  22E2               	addwfc	fsr1h,f,c
 24062  0057FA  CFDF FFE7          	movff	indf2,indf1
 24063                           
 24064                           ; BSR set to: 0
 24065  0057FE  2B96               	incf	CTR@j& (0+255),f,b
 24066                           
 24067                           ; BSR set to: 0
 24068  005800  0E02               	movlw	2
 24069  005802  6596               	cpfsgt	CTR@j& (0+255),b
 24070  005804  D7EE               	goto	l11664
 24071                           
 24072                           ; BSR set to: 0
 24073                           ;drv_mrf_miwi_mesh_security.c: 165: }
 24074                           ;drv_mrf_miwi_mesh_security.c: 166: tmpBlock[4-1] = i;
 24075  005806  C095  F1E5         	movff	CTR@i,_tmpBlock+3
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;drv_mrf_miwi_mesh_security.c: 167: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 24079  00580A  0EE2               	movlw	low _tmpBlock
 24080  00580C  6F73               	movwf	encode@text& (0+255),b
 24081  00580E  0E01               	movlw	high _tmpBlock
 24082  005810  6F74               	movwf	(encode@text+1)& (0+255),b
 24083  005812  C08D  F075         	movff	CTR@key,encode@key
 24084  005816  C08E  F076         	movff	CTR@key+1,encode@key+1
 24085  00581A  ECDC  F01E         	call	_encode	;wreg free
 24086                           
 24087                           ; BSR set to: 0
 24088                           ;drv_mrf_miwi_mesh_security.c: 168: for(j = 0; j < 4; j++)
 24089  00581E  6B96               	clrf	CTR@j& (0+255),b
 24090  005820                     l11678:
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;drv_mrf_miwi_mesh_security.c: 169: {
 24094                           ;drv_mrf_miwi_mesh_security.c: 170: if( (i * 4 + j) >= len )
 24095  005820  518C               	movf	CTR@len& (0+255),w,b
 24096  005822  6F91               	movwf	??_CTR& (0+255),b
 24097  005824  6B92               	clrf	(??_CTR+1)& (0+255),b
 24098  005826  5195               	movf	CTR@i& (0+255),w,b
 24099  005828  0D04               	mullw	4
 24100  00582A  5196               	movf	CTR@j& (0+255),w,b
 24101  00582C  26F3               	addwf	prodl,f,c
 24102  00582E  0E00               	movlw	0
 24103  005830  22F4               	addwfc	prodh,f,c
 24104  005832  5191               	movf	??_CTR& (0+255),w,b
 24105  005834  5CF3               	subwf	prodl,w,c
 24106  005836  50F4               	movf	prodh,w,c
 24107  005838  0A80               	xorlw	128
 24108  00583A  6F93               	movwf	(??_CTR+2)& (0+255),b
 24109  00583C  5192               	movf	(??_CTR+1)& (0+255),w,b
 24110  00583E  0A80               	xorlw	128
 24111  005840  5993               	subwfb	(??_CTR+2)& (0+255),w,b
 24112  005842  E21E               	bc	l11688
 24113                           
 24114                           ; BSR set to: 0
 24115                           ;drv_mrf_miwi_mesh_security.c: 173: }
 24116                           ;drv_mrf_miwi_mesh_security.c: 174: text[i * 4 + j] ^= tmpBlock[j];
 24117  005844  0EE2               	movlw	low _tmpBlock
 24118  005846  2596               	addwf	CTR@j& (0+255),w,b
 24119  005848  6ED9               	movwf	fsr2l,c
 24120  00584A  6ADA               	clrf	fsr2h,c
 24121  00584C  0E01               	movlw	high _tmpBlock
 24122  00584E  22DA               	addwfc	fsr2h,f,c
 24123  005850  50DF               	movf	indf2,w,c
 24124  005852  6F91               	movwf	??_CTR& (0+255),b
 24125  005854  5195               	movf	CTR@i& (0+255),w,b
 24126  005856  0D04               	mullw	4
 24127  005858  C08A  F092         	movff	CTR@text,??_CTR+1
 24128  00585C  C08B  F093         	movff	CTR@text+1,??_CTR+2
 24129  005860  50F3               	movf	prodl,w,c
 24130  005862  2792               	addwf	(??_CTR+1)& (0+255),f,b
 24131  005864  50F4               	movf	prodh,w,c
 24132  005866  2393               	addwfc	(??_CTR+2)& (0+255),f,b
 24133  005868  5196               	movf	CTR@j& (0+255),w,b
 24134  00586A  2592               	addwf	(??_CTR+1)& (0+255),w,b
 24135  00586C  6ED9               	movwf	fsr2l,c
 24136  00586E  0E00               	movlw	0
 24137  005870  2193               	addwfc	(??_CTR+2)& (0+255),w,b
 24138  005872  6EDA               	movwf	fsr2h,c
 24139  005874  5191               	movf	??_CTR& (0+255),w,b
 24140  005876  1ADF               	xorwf	indf2,f,c
 24141                           
 24142                           ; BSR set to: 0
 24143  005878  2B96               	incf	CTR@j& (0+255),f,b
 24144                           
 24145                           ; BSR set to: 0
 24146  00587A  0E03               	movlw	3
 24147  00587C  6596               	cpfsgt	CTR@j& (0+255),b
 24148  00587E  D7D0               	goto	l11678
 24149  005880                     l11688:
 24150                           
 24151                           ; BSR set to: 0
 24152  005880  2B95               	incf	CTR@i& (0+255),f,b
 24153  005882                     l11690:
 24154                           
 24155                           ; BSR set to: 0
 24156  005882  5194               	movf	CTR@block& (0+255),w,b
 24157  005884  5D95               	subwf	CTR@i& (0+255),w,b
 24158  005886  E3AC               	bnc	l308
 24159                           
 24160                           ; BSR set to: 0
 24161  005888  0012               	return		;funcret
 24162  00588A                     __end_of_CTR:
 24163                           	opt stack 0
 24164                           tblptru	equ	0xFF8
 24165                           tblptrh	equ	0xFF7
 24166                           tblptrl	equ	0xFF6
 24167                           tablat	equ	0xFF5
 24168                           prodh	equ	0xFF4
 24169                           prodl	equ	0xFF3
 24170                           intcon3	equ	0xFF0
 24171                           postinc0	equ	0xFEE
 24172                           plusw0	equ	0xFEB
 24173                           fsr0h	equ	0xFEA
 24174                           fsr0l	equ	0xFE9
 24175                           wreg	equ	0xFE8
 24176                           indf1	equ	0xFE7
 24177                           postinc1	equ	0xFE6
 24178                           postdec1	equ	0xFE5
 24179                           plusw1	equ	0xFE3
 24180                           fsr1h	equ	0xFE2
 24181                           fsr1l	equ	0xFE1
 24182                           indf2	equ	0xFDF
 24183                           postinc2	equ	0xFDE
 24184                           postdec2	equ	0xFDD
 24185                           plusw2	equ	0xFDB
 24186                           fsr2h	equ	0xFDA
 24187                           fsr2l	equ	0xFD9
 24188                           status	equ	0xFD8
 24189                           
 24190 ;; *************** function _CBC_MAC *****************
 24191 ;; Defined at:
 24192 ;;		line 207 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24193 ;; Parameters:    Size  Location     Type
 24194 ;;  text            2   42[BANK0 ] PTR unsigned char 
 24195 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 24196 ;;  len             1   44[BANK0 ] unsigned char 
 24197 ;;  key             2   45[BANK0 ] PTR unsigned char 
 24198 ;;		 -> key(8), 
 24199 ;;  MIC             2   47[BANK0 ] PTR unsigned char 
 24200 ;;		 -> tmpBlock(4), 
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;  i               1   54[BANK0 ] unsigned char 
 24203 ;;  j               1   53[BANK0 ] unsigned char 
 24204 ;;  block           1   52[BANK0 ] unsigned char 
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  1    wreg      void 
 24207 ;; Registers used:
 24208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24209 ;; Tracked objects:
 24210 ;;		On entry : F/0
 24211 ;;		On exit  : F/0
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24214 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24215 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24217 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;Total ram usage:       13 bytes
 24219 ;; Hardware stack levels used:    1
 24220 ;; Hardware stack levels required when called:    6
 24221 ;; This function calls:
 24222 ;;		_encode
 24223 ;; This function is called by:
 24224 ;;		_CCM_Enc
 24225 ;;		_CCM_Dec
 24226 ;; This function uses a non-reentrant model
 24227 ;;
 24228                           
 24229                           	psect	text98
 24230  005C10                     __ptext98:
 24231                           	opt stack 0
 24232  005C10                     _CBC_MAC:
 24233                           	opt stack 16
 24234                           
 24235                           ; BSR set to: 0
 24236                           ;drv_mrf_miwi_mesh_security.c: 212: uint8_t block = len / 4 + 1;
 24237                           
 24238                           ; BSR set to: 0
 24239                           ;incstack = 0
 24240  005C10  C08C  F091         	movff	CBC_MAC@len,??_CBC_MAC
 24241  005C14  90D8               	bcf	status,0,c
 24242  005C16  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 24243  005C18  90D8               	bcf	status,0,c
 24244  005C1A  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 24245  005C1C  2991               	incf	??_CBC_MAC& (0+255),w,b
 24246  005C1E  6F94               	movwf	CBC_MAC@block& (0+255),b
 24247                           
 24248                           ; BSR set to: 0
 24249                           ;drv_mrf_miwi_mesh_security.c: 213: uint8_t i, j;
 24250                           ;drv_mrf_miwi_mesh_security.c: 220: for(i = 0; i < 4; i++)
 24251  005C20  6B96               	clrf	CBC_MAC@i& (0+255),b
 24252  005C22                     l11698:
 24253                           
 24254                           ; BSR set to: 0
 24255                           ;drv_mrf_miwi_mesh_security.c: 221: {
 24256                           ;drv_mrf_miwi_mesh_security.c: 222: MIC[i] = 0;
 24257  005C22  5196               	movf	CBC_MAC@i& (0+255),w,b
 24258  005C24  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 24259  005C26  6ED9               	movwf	fsr2l,c
 24260  005C28  0E00               	movlw	0
 24261  005C2A  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24262  005C2C  6EDA               	movwf	fsr2h,c
 24263  005C2E  6ADF               	clrf	indf2,c
 24264                           
 24265                           ; BSR set to: 0
 24266  005C30  2B96               	incf	CBC_MAC@i& (0+255),f,b
 24267                           
 24268                           ; BSR set to: 0
 24269  005C32  0E03               	movlw	3
 24270  005C34  6596               	cpfsgt	CBC_MAC@i& (0+255),b
 24271  005C36  D7F5               	goto	l11698
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;drv_mrf_miwi_mesh_security.c: 223: }
 24275                           ;drv_mrf_miwi_mesh_security.c: 225: for(i = 0; i < block; i++)
 24276  005C38  6B96               	clrf	CBC_MAC@i& (0+255),b
 24277  005C3A  D03C               	goto	l11722
 24278  005C3C                     l321:
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;drv_mrf_miwi_mesh_security.c: 226: {
 24282                           ;drv_mrf_miwi_mesh_security.c: 227: for(j = 0; j < 4; j++)
 24283  005C3C  6B95               	clrf	CBC_MAC@j& (0+255),b
 24284  005C3E                     l11708:
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;drv_mrf_miwi_mesh_security.c: 228: {
 24288                           ;drv_mrf_miwi_mesh_security.c: 229: if( (i * 4 + j) >= len )
 24289  005C3E  518C               	movf	CBC_MAC@len& (0+255),w,b
 24290  005C40  6F91               	movwf	??_CBC_MAC& (0+255),b
 24291  005C42  6B92               	clrf	(??_CBC_MAC+1)& (0+255),b
 24292  005C44  5196               	movf	CBC_MAC@i& (0+255),w,b
 24293  005C46  0D04               	mullw	4
 24294  005C48  5195               	movf	CBC_MAC@j& (0+255),w,b
 24295  005C4A  26F3               	addwf	prodl,f,c
 24296  005C4C  0E00               	movlw	0
 24297  005C4E  22F4               	addwfc	prodh,f,c
 24298  005C50  5191               	movf	??_CBC_MAC& (0+255),w,b
 24299  005C52  5CF3               	subwf	prodl,w,c
 24300  005C54  50F4               	movf	prodh,w,c
 24301  005C56  0A80               	xorlw	128
 24302  005C58  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 24303  005C5A  5192               	movf	(??_CBC_MAC+1)& (0+255),w,b
 24304  005C5C  0A80               	xorlw	128
 24305  005C5E  5993               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 24306  005C60  E21E               	bc	l11718
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;drv_mrf_miwi_mesh_security.c: 232: }
 24310                           ;drv_mrf_miwi_mesh_security.c: 233: MIC[j] ^= text[i * 4 + j];
 24311  005C62  5196               	movf	CBC_MAC@i& (0+255),w,b
 24312  005C64  0D04               	mullw	4
 24313  005C66  C08A  F091         	movff	CBC_MAC@text,??_CBC_MAC
 24314  005C6A  C08B  F092         	movff	CBC_MAC@text+1,??_CBC_MAC+1
 24315  005C6E  50F3               	movf	prodl,w,c
 24316  005C70  2791               	addwf	??_CBC_MAC& (0+255),f,b
 24317  005C72  50F4               	movf	prodh,w,c
 24318  005C74  2392               	addwfc	(??_CBC_MAC+1)& (0+255),f,b
 24319  005C76  5195               	movf	CBC_MAC@j& (0+255),w,b
 24320  005C78  2591               	addwf	??_CBC_MAC& (0+255),w,b
 24321  005C7A  6ED9               	movwf	fsr2l,c
 24322  005C7C  0E00               	movlw	0
 24323  005C7E  2192               	addwfc	(??_CBC_MAC+1)& (0+255),w,b
 24324  005C80  6EDA               	movwf	fsr2h,c
 24325  005C82  50DF               	movf	indf2,w,c
 24326  005C84  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 24327  005C86  5195               	movf	CBC_MAC@j& (0+255),w,b
 24328  005C88  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 24329  005C8A  6ED9               	movwf	fsr2l,c
 24330  005C8C  0E00               	movlw	0
 24331  005C8E  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 24332  005C90  6EDA               	movwf	fsr2h,c
 24333  005C92  5193               	movf	(??_CBC_MAC+2)& (0+255),w,b
 24334  005C94  1ADF               	xorwf	indf2,f,c
 24335                           
 24336                           ; BSR set to: 0
 24337  005C96  2B95               	incf	CBC_MAC@j& (0+255),f,b
 24338                           
 24339                           ; BSR set to: 0
 24340  005C98  0E03               	movlw	3
 24341  005C9A  6595               	cpfsgt	CBC_MAC@j& (0+255),b
 24342  005C9C  D7D0               	goto	l11708
 24343  005C9E                     l11718:
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;drv_mrf_miwi_mesh_security.c: 234: }
 24347                           ;drv_mrf_miwi_mesh_security.c: 235: encode((uint16_t *)MIC, (uint16_t *)key);
 24348  005C9E  C08F  F073         	movff	CBC_MAC@MIC,encode@text
 24349  005CA2  C090  F074         	movff	CBC_MAC@MIC+1,encode@text+1
 24350  005CA6  C08D  F075         	movff	CBC_MAC@key,encode@key
 24351  005CAA  C08E  F076         	movff	CBC_MAC@key+1,encode@key+1
 24352  005CAE  ECDC  F01E         	call	_encode	;wreg free
 24353                           
 24354                           ; BSR set to: 0
 24355  005CB2  2B96               	incf	CBC_MAC@i& (0+255),f,b
 24356  005CB4                     l11722:
 24357                           
 24358                           ; BSR set to: 0
 24359  005CB4  5194               	movf	CBC_MAC@block& (0+255),w,b
 24360  005CB6  5D96               	subwf	CBC_MAC@i& (0+255),w,b
 24361  005CB8  E3C1               	bnc	l321
 24362                           
 24363                           ; BSR set to: 0
 24364  005CBA  0012               	return		;funcret
 24365  005CBC                     __end_of_CBC_MAC:
 24366                           	opt stack 0
 24367                           tblptru	equ	0xFF8
 24368                           tblptrh	equ	0xFF7
 24369                           tblptrl	equ	0xFF6
 24370                           tablat	equ	0xFF5
 24371                           prodh	equ	0xFF4
 24372                           prodl	equ	0xFF3
 24373                           intcon3	equ	0xFF0
 24374                           postinc0	equ	0xFEE
 24375                           plusw0	equ	0xFEB
 24376                           fsr0h	equ	0xFEA
 24377                           fsr0l	equ	0xFE9
 24378                           wreg	equ	0xFE8
 24379                           indf1	equ	0xFE7
 24380                           postinc1	equ	0xFE6
 24381                           postdec1	equ	0xFE5
 24382                           plusw1	equ	0xFE3
 24383                           fsr1h	equ	0xFE2
 24384                           fsr1l	equ	0xFE1
 24385                           indf2	equ	0xFDF
 24386                           postinc2	equ	0xFDE
 24387                           postdec2	equ	0xFDD
 24388                           plusw2	equ	0xFDB
 24389                           fsr2h	equ	0xFDA
 24390                           fsr2l	equ	0xFD9
 24391                           status	equ	0xFD8
 24392                           
 24393 ;; *************** function _encode *****************
 24394 ;; Defined at:
 24395 ;;		line 109 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;  text            2   19[BANK0 ] PTR unsigned int 
 24398 ;;		 -> tmpBlock(4), 
 24399 ;;  key             2   21[BANK0 ] PTR unsigned int 
 24400 ;;		 -> key(8), 
 24401 ;; Auto vars:     Size  Location     Type
 24402 ;;  sum             2   40[BANK0 ] unsigned int 
 24403 ;;  part2           2   38[BANK0 ] unsigned int 
 24404 ;;  part1           2   36[BANK0 ] unsigned int 
 24405 ;;  delta           2   33[BANK0 ] unsigned int 
 24406 ;;  i               1   35[BANK0 ] unsigned char 
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  1    wreg      void 
 24409 ;; Registers used:
 24410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24411 ;; Tracked objects:
 24412 ;;		On entry : F/0
 24413 ;;		On exit  : F/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24417 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24418 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24419 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24420 ;;Total ram usage:       23 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; Hardware stack levels required when called:    5
 24423 ;; This function calls:
 24424 ;;		Nothing
 24425 ;; This function is called by:
 24426 ;;		_CTR
 24427 ;;		_CBC_MAC
 24428 ;; This function uses a non-reentrant model
 24429 ;;
 24430                           
 24431                           	psect	text99
 24432  003DB8                     __ptext99:
 24433                           	opt stack 0
 24434  003DB8                     _encode:
 24435                           	opt stack 16
 24436                           
 24437                           ; BSR set to: 0
 24438                           ;drv_mrf_miwi_mesh_security.c: 111: uint16_t part1=text[0], part2=text[1];
 24439                           
 24440                           ; BSR set to: 0
 24441                           ;incstack = 0
 24442  003DB8  C073  FFD9         	movff	encode@text,fsr2l
 24443  003DBC  C074  FFDA         	movff	encode@text+1,fsr2h
 24444  003DC0  CFDE F084          	movff	postinc2,encode@part1
 24445  003DC4  CFDD F085          	movff	postdec2,encode@part1+1
 24446                           
 24447                           ; BSR set to: 0
 24448  003DC8  EE20 F002          	lfsr	2,2
 24449  003DCC  5173               	movf	encode@text& (0+255),w,b
 24450  003DCE  26D9               	addwf	fsr2l,f,c
 24451  003DD0  5174               	movf	(encode@text+1)& (0+255),w,b
 24452  003DD2  22DA               	addwfc	fsr2h,f,c
 24453  003DD4  CFDE F086          	movff	postinc2,encode@part2
 24454  003DD8  CFDD F087          	movff	postdec2,encode@part2+1
 24455                           
 24456                           ; BSR set to: 0
 24457                           ;drv_mrf_miwi_mesh_security.c: 112: uint16_t sum=0, delta=0x9E37;
 24458  003DDC  6B88               	clrf	encode@sum& (0+255),b
 24459  003DDE  6B89               	clrf	(encode@sum+1)& (0+255),b
 24460                           
 24461                           ; BSR set to: 0
 24462  003DE0  0E9E               	movlw	158
 24463  003DE2  6F82               	movwf	(encode@delta+1)& (0+255),b
 24464  003DE4  0E37               	movlw	55
 24465  003DE6  6F81               	movwf	encode@delta& (0+255),b
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;drv_mrf_miwi_mesh_security.c: 113: uint8_t i;
 24469                           ;drv_mrf_miwi_mesh_security.c: 115: for(i=0; i<32; i++)
 24470  003DE8  6B83               	clrf	encode@i& (0+255),b
 24471  003DEA                     l11546:
 24472                           
 24473                           ; BSR set to: 0
 24474                           ;drv_mrf_miwi_mesh_security.c: 116: {
 24475                           ;drv_mrf_miwi_mesh_security.c: 117: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (
      +                          sum + key[sum & 3]);
 24476  003DEA  0E03               	movlw	3
 24477  003DEC  1588               	andwf	encode@sum& (0+255),w,b
 24478  003DEE  6F77               	movwf	??_encode& (0+255),b
 24479  003DF0  6B78               	clrf	(??_encode+1)& (0+255),b
 24480  003DF2  90D8               	bcf	status,0,c
 24481  003DF4  3777               	rlcf	??_encode& (0+255),f,b
 24482  003DF6  3778               	rlcf	(??_encode+1)& (0+255),f,b
 24483  003DF8  5177               	movf	??_encode& (0+255),w,b
 24484  003DFA  2575               	addwf	encode@key& (0+255),w,b
 24485  003DFC  6ED9               	movwf	fsr2l,c
 24486  003DFE  5178               	movf	(??_encode+1)& (0+255),w,b
 24487  003E00  2176               	addwfc	(encode@key+1)& (0+255),w,b
 24488  003E02  6EDA               	movwf	fsr2h,c
 24489  003E04  CFDE F079          	movff	postinc2,??_encode+2
 24490  003E08  CFDD F07A          	movff	postdec2,??_encode+3
 24491  003E0C  5188               	movf	encode@sum& (0+255),w,b
 24492  003E0E  2779               	addwf	(??_encode+2)& (0+255),f,b
 24493  003E10  5189               	movf	(encode@sum+1)& (0+255),w,b
 24494  003E12  237A               	addwfc	(??_encode+3)& (0+255),f,b
 24495  003E14  C086  F07B         	movff	encode@part2,??_encode+4
 24496  003E18  C087  F07C         	movff	encode@part2+1,??_encode+5
 24497  003E1C  0E05               	movlw	5
 24498  003E1E  6F7D               	movwf	(??_encode+6)& (0+255),b
 24499  003E20                     u12235:
 24500  003E20  90D8               	bcf	status,0,c
 24501  003E22  337C               	rrcf	(??_encode+5)& (0+255),f,b
 24502  003E24  337B               	rrcf	(??_encode+4)& (0+255),f,b
 24503  003E26  2F7D               	decfsz	(??_encode+6)& (0+255),f,b
 24504  003E28  D7FB               	goto	u12235
 24505  003E2A  C086  F07E         	movff	encode@part2,??_encode+7
 24506  003E2E  C087  F07F         	movff	encode@part2+1,??_encode+8
 24507  003E32  3B7E               	swapf	(??_encode+7)& (0+255),f,b
 24508  003E34  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 24509  003E36  0EF0               	movlw	240
 24510  003E38  177F               	andwf	(??_encode+8)& (0+255),f,b
 24511  003E3A  517E               	movf	(??_encode+7)& (0+255),w,b
 24512  003E3C  0B0F               	andlw	15
 24513  003E3E  137F               	iorwf	(??_encode+8)& (0+255),f,b
 24514  003E40  0EF0               	movlw	240
 24515  003E42  177E               	andwf	(??_encode+7)& (0+255),f,b
 24516  003E44  517B               	movf	(??_encode+4)& (0+255),w,b
 24517  003E46  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 24518  003E48  517C               	movf	(??_encode+5)& (0+255),w,b
 24519  003E4A  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24520  003E4C  5186               	movf	encode@part2& (0+255),w,b
 24521  003E4E  277E               	addwf	(??_encode+7)& (0+255),f,b
 24522  003E50  5187               	movf	(encode@part2+1)& (0+255),w,b
 24523  003E52  237F               	addwfc	(??_encode+8)& (0+255),f,b
 24524  003E54  5179               	movf	(??_encode+2)& (0+255),w,b
 24525  003E56  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 24526  003E58  517A               	movf	(??_encode+3)& (0+255),w,b
 24527  003E5A  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24528  003E5C  517E               	movf	(??_encode+7)& (0+255),w,b
 24529  003E5E  2784               	addwf	encode@part1& (0+255),f,b
 24530  003E60  517F               	movf	(??_encode+8)& (0+255),w,b
 24531  003E62  2385               	addwfc	(encode@part1+1)& (0+255),f,b
 24532                           
 24533                           ; BSR set to: 0
 24534                           ;drv_mrf_miwi_mesh_security.c: 118: sum += delta;
 24535  003E64  5181               	movf	encode@delta& (0+255),w,b
 24536  003E66  2788               	addwf	encode@sum& (0+255),f,b
 24537  003E68  5182               	movf	(encode@delta+1)& (0+255),w,b
 24538  003E6A  2389               	addwfc	(encode@sum+1)& (0+255),f,b
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;drv_mrf_miwi_mesh_security.c: 119: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (
      +                          sum + key[(sum>>11) & 3]);
 24542  003E6C  C088  F077         	movff	encode@sum,??_encode
 24543  003E70  C089  F078         	movff	encode@sum+1,??_encode+1
 24544  003E74  0E0B               	movlw	11
 24545  003E76  6F79               	movwf	(??_encode+2)& (0+255),b
 24546  003E78                     u12245:
 24547  003E78  90D8               	bcf	status,0,c
 24548  003E7A  3378               	rrcf	(??_encode+1)& (0+255),f,b
 24549  003E7C  3377               	rrcf	??_encode& (0+255),f,b
 24550  003E7E  2F79               	decfsz	(??_encode+2)& (0+255),f,b
 24551  003E80  D7FB               	goto	u12245
 24552  003E82  0E03               	movlw	3
 24553  003E84  1777               	andwf	??_encode& (0+255),f,b
 24554  003E86  6B78               	clrf	(??_encode+1)& (0+255),b
 24555  003E88  90D8               	bcf	status,0,c
 24556  003E8A  3777               	rlcf	??_encode& (0+255),f,b
 24557  003E8C  3778               	rlcf	(??_encode+1)& (0+255),f,b
 24558  003E8E  5177               	movf	??_encode& (0+255),w,b
 24559  003E90  2575               	addwf	encode@key& (0+255),w,b
 24560  003E92  6ED9               	movwf	fsr2l,c
 24561  003E94  5178               	movf	(??_encode+1)& (0+255),w,b
 24562  003E96  2176               	addwfc	(encode@key+1)& (0+255),w,b
 24563  003E98  6EDA               	movwf	fsr2h,c
 24564  003E9A  CFDE F07A          	movff	postinc2,??_encode+3
 24565  003E9E  CFDD F07B          	movff	postdec2,??_encode+4
 24566  003EA2  5188               	movf	encode@sum& (0+255),w,b
 24567  003EA4  277A               	addwf	(??_encode+3)& (0+255),f,b
 24568  003EA6  5189               	movf	(encode@sum+1)& (0+255),w,b
 24569  003EA8  237B               	addwfc	(??_encode+4)& (0+255),f,b
 24570  003EAA  C084  F07C         	movff	encode@part1,??_encode+5
 24571  003EAE  C085  F07D         	movff	encode@part1+1,??_encode+6
 24572  003EB2  0E05               	movlw	5
 24573  003EB4  6F7E               	movwf	(??_encode+7)& (0+255),b
 24574  003EB6                     u12255:
 24575  003EB6  90D8               	bcf	status,0,c
 24576  003EB8  337D               	rrcf	(??_encode+6)& (0+255),f,b
 24577  003EBA  337C               	rrcf	(??_encode+5)& (0+255),f,b
 24578  003EBC  2F7E               	decfsz	(??_encode+7)& (0+255),f,b
 24579  003EBE  D7FB               	goto	u12255
 24580  003EC0  C084  F07F         	movff	encode@part1,??_encode+8
 24581  003EC4  C085  F080         	movff	encode@part1+1,??_encode+9
 24582  003EC8  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 24583  003ECA  3B80               	swapf	(??_encode+9)& (0+255),f,b
 24584  003ECC  0EF0               	movlw	240
 24585  003ECE  1780               	andwf	(??_encode+9)& (0+255),f,b
 24586  003ED0  517F               	movf	(??_encode+8)& (0+255),w,b
 24587  003ED2  0B0F               	andlw	15
 24588  003ED4  1380               	iorwf	(??_encode+9)& (0+255),f,b
 24589  003ED6  0EF0               	movlw	240
 24590  003ED8  177F               	andwf	(??_encode+8)& (0+255),f,b
 24591  003EDA  517C               	movf	(??_encode+5)& (0+255),w,b
 24592  003EDC  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24593  003EDE  517D               	movf	(??_encode+6)& (0+255),w,b
 24594  003EE0  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 24595  003EE2  5184               	movf	encode@part1& (0+255),w,b
 24596  003EE4  277F               	addwf	(??_encode+8)& (0+255),f,b
 24597  003EE6  5185               	movf	(encode@part1+1)& (0+255),w,b
 24598  003EE8  2380               	addwfc	(??_encode+9)& (0+255),f,b
 24599  003EEA  517A               	movf	(??_encode+3)& (0+255),w,b
 24600  003EEC  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 24601  003EEE  517B               	movf	(??_encode+4)& (0+255),w,b
 24602  003EF0  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 24603  003EF2  517F               	movf	(??_encode+8)& (0+255),w,b
 24604  003EF4  2786               	addwf	encode@part2& (0+255),f,b
 24605  003EF6  5180               	movf	(??_encode+9)& (0+255),w,b
 24606  003EF8  2387               	addwfc	(encode@part2+1)& (0+255),f,b
 24607                           
 24608                           ; BSR set to: 0
 24609  003EFA  2B83               	incf	encode@i& (0+255),f,b
 24610                           
 24611                           ; BSR set to: 0
 24612  003EFC  0E1F               	movlw	31
 24613  003EFE  6583               	cpfsgt	encode@i& (0+255),b
 24614  003F00  D774               	goto	l11546
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;drv_mrf_miwi_mesh_security.c: 120: }
 24618                           ;drv_mrf_miwi_mesh_security.c: 121: text[0]=part1; text[1]=part2;
 24619  003F02  C073  FFD9         	movff	encode@text,fsr2l
 24620  003F06  C074  FFDA         	movff	encode@text+1,fsr2h
 24621  003F0A  C084  FFDE         	movff	encode@part1,postinc2
 24622  003F0E  C085  FFDD         	movff	encode@part1+1,postdec2
 24623                           
 24624                           ; BSR set to: 0
 24625  003F12  EE20 F002          	lfsr	2,2
 24626  003F16  5173               	movf	encode@text& (0+255),w,b
 24627  003F18  26D9               	addwf	fsr2l,f,c
 24628  003F1A  5174               	movf	(encode@text+1)& (0+255),w,b
 24629  003F1C  22DA               	addwfc	fsr2h,f,c
 24630  003F1E  C086  FFDE         	movff	encode@part2,postinc2
 24631  003F22  C087  FFDD         	movff	encode@part2+1,postdec2
 24632                           
 24633                           ; BSR set to: 0
 24634  003F26  0012               	return		;funcret
 24635  003F28                     __end_of_encode:
 24636                           	opt stack 0
 24637                           tblptru	equ	0xFF8
 24638                           tblptrh	equ	0xFF7
 24639                           tblptrl	equ	0xFF6
 24640                           tablat	equ	0xFF5
 24641                           prodh	equ	0xFF4
 24642                           prodl	equ	0xFF3
 24643                           intcon3	equ	0xFF0
 24644                           postinc0	equ	0xFEE
 24645                           plusw0	equ	0xFEB
 24646                           fsr0h	equ	0xFEA
 24647                           fsr0l	equ	0xFE9
 24648                           wreg	equ	0xFE8
 24649                           indf1	equ	0xFE7
 24650                           postinc1	equ	0xFE6
 24651                           postdec1	equ	0xFE5
 24652                           plusw1	equ	0xFE3
 24653                           fsr1h	equ	0xFE2
 24654                           fsr1l	equ	0xFE1
 24655                           indf2	equ	0xFDF
 24656                           postinc2	equ	0xFDE
 24657                           postdec2	equ	0xFDD
 24658                           plusw2	equ	0xFDB
 24659                           fsr2h	equ	0xFDA
 24660                           fsr2l	equ	0xFD9
 24661                           status	equ	0xFD8
 24662                           
 24663 ;; *************** function _isNetworkSecurityEnabled *****************
 24664 ;; Defined at:
 24665 ;;		line 385 in file "../NetworkManager.c"
 24666 ;; Parameters:    Size  Location     Type
 24667 ;;		None
 24668 ;; Auto vars:     Size  Location     Type
 24669 ;;		None
 24670 ;; Return value:  Size  Location     Type
 24671 ;;                  1    wreg      unsigned char 
 24672 ;; Registers used:
 24673 ;;		wreg, status,2
 24674 ;; Tracked objects:
 24675 ;;		On entry : C/0
 24676 ;;		On exit  : F/1
 24677 ;;		Unchanged: 0/0
 24678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24683 ;;Total ram usage:        0 bytes
 24684 ;; Hardware stack levels used:    1
 24685 ;; Hardware stack levels required when called:    5
 24686 ;; This function calls:
 24687 ;;		Nothing
 24688 ;; This function is called by:
 24689 ;;		_networkSendBeacon
 24690 ;;		_NetworkManagerTask
 24691 ;;		_NetworkSendDiscoverResponse
 24692 ;;		_NetworkIssueDataRequest
 24693 ;; This function uses a non-reentrant model
 24694 ;;
 24695                           
 24696                           	psect	text100
 24697  007878                     __ptext100:
 24698                           	opt stack 0
 24699  007878                     _isNetworkSecurityEnabled:
 24700                           	opt stack 21
 24701                           
 24702                           ;NetworkManager.c: 387: return(isNetworkTrafficSecure);
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;incstack = 0
 24706  007878  0101               	movlb	1	; () banked
 24707  00787A  51DB               	movf	_isNetworkTrafficSecure& (0+255),w,b
 24708                           
 24709                           ; BSR set to: 1
 24710  00787C  0012               	return		;funcret
 24711  00787E                     __end_of_isNetworkSecurityEnabled:
 24712                           	opt stack 0
 24713                           tblptru	equ	0xFF8
 24714                           tblptrh	equ	0xFF7
 24715                           tblptrl	equ	0xFF6
 24716                           tablat	equ	0xFF5
 24717                           prodh	equ	0xFF4
 24718                           prodl	equ	0xFF3
 24719                           intcon3	equ	0xFF0
 24720                           postinc0	equ	0xFEE
 24721                           plusw0	equ	0xFEB
 24722                           fsr0h	equ	0xFEA
 24723                           fsr0l	equ	0xFE9
 24724                           wreg	equ	0xFE8
 24725                           indf1	equ	0xFE7
 24726                           postinc1	equ	0xFE6
 24727                           postdec1	equ	0xFE5
 24728                           plusw1	equ	0xFE3
 24729                           fsr1h	equ	0xFE2
 24730                           fsr1l	equ	0xFE1
 24731                           indf2	equ	0xFDF
 24732                           postinc2	equ	0xFDE
 24733                           postdec2	equ	0xFDD
 24734                           plusw2	equ	0xFDB
 24735                           fsr2h	equ	0xFDA
 24736                           fsr2l	equ	0xFD9
 24737                           status	equ	0xFD8
 24738                           
 24739 ;; *************** function _RouterEvicted *****************
 24740 ;; Defined at:
 24741 ;;		line 223 in file "../RouteManager.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;  address         2   47[BANK0 ] struct addr_t_def
 24744 ;; Auto vars:     Size  Location     Type
 24745 ;;  r               2   51[BANK0 ] PTR struct route_info_t_
 24746 ;;		 -> routeInfo(7), 
 24747 ;;  i               1   54[BANK0 ] unsigned char 
 24748 ;;  idx             1   53[BANK0 ] unsigned char 
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1    wreg      void 
 24751 ;; Registers used:
 24752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24753 ;; Tracked objects:
 24754 ;;		On entry : C/0
 24755 ;;		On exit  : E/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;Total ram usage:        8 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:    9
 24765 ;; This function calls:
 24766 ;;		_NetworkGetMyRouteInfo
 24767 ;;		_RouteManagerRequestUpdate
 24768 ;;		_isSameAddress
 24769 ;;		_routeInfoInit
 24770 ;;		_routingTableFind
 24771 ;; This function is called by:
 24772 ;;		_RouteManagerProcessReceive
 24773 ;;		_LE_InsertNeighbor
 24774 ;;		_LE_processReceivedMessage
 24775 ;;		_LE_RemoveNeighborDevice
 24776 ;;		_TransportManagerTask
 24777 ;;		_NetworkManagerTask
 24778 ;;		_NetworkIssueDataRequest
 24779 ;; This function uses a non-reentrant model
 24780 ;;
 24781                           
 24782                           	psect	text101
 24783  005D62                     __ptext101:
 24784                           	opt stack 0
 24785  005D62                     _RouterEvicted:
 24786                           	opt stack 16
 24787                           
 24788                           ;RouteManager.c: 225: uint8_t idx, i;
 24789                           ;RouteManager.c: 226: route_info_t *r=NetworkGetMyRouteInfo();
 24790                           
 24791                           ; BSR set to: 1
 24792                           ;incstack = 0
 24793  005D62  ECE0  F03B         	call	_NetworkGetMyRouteInfo	;wreg free
 24794  005D66  C073  F093         	movff	?_NetworkGetMyRouteInfo,RouterEvicted@r
 24795  005D6A  C074  F094         	movff	?_NetworkGetMyRouteInfo+1,RouterEvicted@r+1
 24796                           
 24797                           ; BSR set to: 0
 24798                           ;RouteManager.c: 227: idx = routingTableFind(address);
 24799  005D6E  C08F  F088         	movff	RouterEvicted@address,routingTableFind@neighbor
 24800  005D72  C090  F089         	movff	RouterEvicted@address+1,routingTableFind@neighbor+1
 24801  005D76  EC6A  F034         	call	_routingTableFind	;wreg free
 24802  005D7A  6F95               	movwf	RouterEvicted@idx& (0+255),b
 24803                           
 24804                           ; BSR set to: 0
 24805                           ;RouteManager.c: 229: if (idx != routingTableActive)
 24806  005D7C  5195               	movf	RouterEvicted@idx& (0+255),w,b
 24807  005D7E  19EB               	xorwf	_routingTableActive& (0+255),w,b
 24808  005D80  11EC               	iorwf	(_routingTableActive+1)& (0+255),w,b
 24809  005D82  E024               	bz	l12086
 24810                           
 24811                           ; BSR set to: 0
 24812                           ;RouteManager.c: 230: {
 24813                           ;RouteManager.c: 231: routingTableActive--;
 24814  005D84  07EB               	decf	_routingTableActive& (0+255),f,b
 24815  005D86  A0D8               	btfss	status,0,c
 24816  005D88  07EC               	decf	(_routingTableActive+1)& (0+255),f,b
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;RouteManager.c: 232: for (i = idx; i < routingTableActive; i++)
 24820  005D8A  C095  F096         	movff	RouterEvicted@idx,RouterEvicted@i
 24821  005D8E  D016               	goto	l12084
 24822  005D90                     l12080:
 24823                           
 24824                           ; BSR set to: 0
 24825                           ;RouteManager.c: 233: {
 24826                           ;RouteManager.c: 234: routingTable[i] = routingTable[i + 1];
 24827  005D90  5196               	movf	RouterEvicted@i& (0+255),w,b
 24828  005D92  0D09               	mullw	9
 24829  005D94  0EA1               	movlw	low (_routingTable+9)
 24830  005D96  24F3               	addwf	prodl,w,c
 24831  005D98  6ED9               	movwf	fsr2l,c
 24832  005D9A  0E06               	movlw	high (_routingTable+9)
 24833  005D9C  20F4               	addwfc	prodh,w,c
 24834  005D9E  6EDA               	movwf	fsr2h,c
 24835  005DA0  5196               	movf	RouterEvicted@i& (0+255),w,b
 24836  005DA2  0D09               	mullw	9
 24837  005DA4  0E98               	movlw	low _routingTable
 24838  005DA6  24F3               	addwf	prodl,w,c
 24839  005DA8  6EE1               	movwf	fsr1l,c
 24840  005DAA  0E06               	movlw	high _routingTable
 24841  005DAC  20F4               	addwfc	prodh,w,c
 24842  005DAE  6EE2               	movwf	fsr1h,c
 24843  005DB0  0E08               	movlw	8
 24844  005DB2                     u12951:
 24845  005DB2  CFDB FFE3          	movff	plusw2,plusw1
 24846  005DB6  06E8               	decf	wreg,f,c
 24847  005DB8  E2FC               	bc	u12951
 24848                           
 24849                           ; BSR set to: 0
 24850  005DBA  2B96               	incf	RouterEvicted@i& (0+255),f,b
 24851  005DBC                     l12084:
 24852                           
 24853                           ; BSR set to: 0
 24854  005DBC  5196               	movf	RouterEvicted@i& (0+255),w,b
 24855  005DBE  6F91               	movwf	??_RouterEvicted& (0+255),b
 24856  005DC0  6B92               	clrf	(??_RouterEvicted+1)& (0+255),b
 24857  005DC2  51EB               	movf	_routingTableActive& (0+255),w,b
 24858  005DC4  5D91               	subwf	??_RouterEvicted& (0+255),w,b
 24859  005DC6  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 24860  005DC8  5992               	subwfb	(??_RouterEvicted+1)& (0+255),w,b
 24861  005DCA  E3E2               	bnc	l12080
 24862  005DCC                     l12086:
 24863                           
 24864                           ; BSR set to: 0
 24865                           ;RouteManager.c: 235: }
 24866                           ;RouteManager.c: 236: }
 24867                           ;RouteManager.c: 238: if (isSameAddress(r->parent, address))
 24868  005DCC  C093  FFD9         	movff	RouterEvicted@r,fsr2l
 24869  005DD0  C094  FFDA         	movff	RouterEvicted@r+1,fsr2h
 24870  005DD4  CFDE F07D          	movff	postinc2,isSameAddress@a1
 24871  005DD8  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 24872  005DDC  C08F  F07F         	movff	RouterEvicted@address,isSameAddress@a2
 24873  005DE0  C090  F080         	movff	RouterEvicted@address+1,isSameAddress@a2+1
 24874  005DE4  ECB1  F03A         	call	_isSameAddress	;wreg free
 24875  005DE8  0900               	iorlw	0
 24876  005DEA  B4D8               	btfsc	status,2,c
 24877  005DEC  0012               	return	
 24878                           
 24879                           ; BSR set to: 0
 24880                           ;RouteManager.c: 239: {
 24881                           ;RouteManager.c: 240: routeInfoInit(r);
 24882  005DEE  C093  F07B         	movff	RouterEvicted@r,routeInfoInit@ri
 24883  005DF2  C094  F07C         	movff	RouterEvicted@r+1,routeInfoInit@ri+1
 24884  005DF6  ECDC  F035         	call	_routeInfoInit	;wreg free
 24885                           
 24886                           ; BSR set to: 0
 24887                           ;RouteManager.c: 241: justEvictedParent = 1;
 24888  005DFA  0E01               	movlw	1
 24889  005DFC  6E43               	movwf	_justEvictedParent,c
 24890                           
 24891                           ; BSR set to: 0
 24892                           ;RouteManager.c: 242: RouteManagerRequestUpdate();
 24893  005DFE  EF34  F03C         	goto	_RouteManagerRequestUpdate	;wreg free
 24894  005E02                     __end_of_RouterEvicted:
 24895                           	opt stack 0
 24896                           tblptru	equ	0xFF8
 24897                           tblptrh	equ	0xFF7
 24898                           tblptrl	equ	0xFF6
 24899                           tablat	equ	0xFF5
 24900                           prodh	equ	0xFF4
 24901                           prodl	equ	0xFF3
 24902                           intcon3	equ	0xFF0
 24903                           postinc0	equ	0xFEE
 24904                           plusw0	equ	0xFEB
 24905                           fsr0h	equ	0xFEA
 24906                           fsr0l	equ	0xFE9
 24907                           wreg	equ	0xFE8
 24908                           indf1	equ	0xFE7
 24909                           postinc1	equ	0xFE6
 24910                           postdec1	equ	0xFE5
 24911                           plusw1	equ	0xFE3
 24912                           fsr1h	equ	0xFE2
 24913                           fsr1l	equ	0xFE1
 24914                           indf2	equ	0xFDF
 24915                           postinc2	equ	0xFDE
 24916                           postdec2	equ	0xFDD
 24917                           plusw2	equ	0xFDB
 24918                           fsr2h	equ	0xFDA
 24919                           fsr2l	equ	0xFD9
 24920                           status	equ	0xFD8
 24921                           
 24922 ;; *************** function _routingTableFind *****************
 24923 ;; Defined at:
 24924 ;;		line 204 in file "../RouteManager.c"
 24925 ;; Parameters:    Size  Location     Type
 24926 ;;  neighbor        2   40[BANK0 ] struct addr_t_def
 24927 ;; Auto vars:     Size  Location     Type
 24928 ;;  res             2   44[BANK0 ] unsigned int 
 24929 ;;  i               1   46[BANK0 ] unsigned char 
 24930 ;; Return value:  Size  Location     Type
 24931 ;;                  1    wreg      unsigned char 
 24932 ;; Registers used:
 24933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24934 ;; Tracked objects:
 24935 ;;		On entry : A/0
 24936 ;;		On exit  : F/0
 24937 ;;		Unchanged: 0/0
 24938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24940 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24942 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24943 ;;Total ram usage:        7 bytes
 24944 ;; Hardware stack levels used:    1
 24945 ;; Hardware stack levels required when called:    8
 24946 ;; This function calls:
 24947 ;;		_isInvalidAddress
 24948 ;;		_isSameAddress
 24949 ;; This function is called by:
 24950 ;;		_RouterEvicted
 24951 ;;		_routingTableUpdateEntry
 24952 ;; This function uses a non-reentrant model
 24953 ;;
 24954                           
 24955                           	psect	text102
 24956  0068D4                     __ptext102:
 24957                           	opt stack 0
 24958  0068D4                     _routingTableFind:
 24959                           	opt stack 16
 24960                           
 24961                           ;RouteManager.c: 208: if (isInvalidAddress(neighbor))
 24962                           
 24963                           ;incstack = 0
 24964  0068D4  C088  F086         	movff	routingTableFind@neighbor,isInvalidAddress@address
 24965  0068D8  C089  F087         	movff	routingTableFind@neighbor+1,isInvalidAddress@address+1
 24966  0068DC  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 24967  0068E0  0900               	iorlw	0
 24968  0068E2  E005               	bz	l1305
 24969                           
 24970                           ; BSR set to: 0
 24971                           ;RouteManager.c: 209: {
 24972                           ;RouteManager.c: 210: res=routingTableActive;
 24973  0068E4  C0EB  F08C         	movff	_routingTableActive,routingTableFind@res
 24974  0068E8  C0EC  F08D         	movff	_routingTableActive+1,routingTableFind@res+1
 24975                           
 24976                           ;RouteManager.c: 211: }else
 24977  0068EC  D022               	goto	l12008
 24978  0068EE                     l1305:
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;RouteManager.c: 212: {
 24982                           ;RouteManager.c: 213: for (i = 0; i < routingTableActive; i++)
 24983  0068EE  6B8E               	clrf	routingTableFind@i& (0+255),b
 24984  0068F0  D015               	goto	l12006
 24985  0068F2                     l12000:
 24986                           
 24987                           ; BSR set to: 0
 24988                           ;RouteManager.c: 214: {
 24989                           ;RouteManager.c: 215: if (isSameAddress(routingTable[i].neighbor, neighbor))
 24990  0068F2  518E               	movf	routingTableFind@i& (0+255),w,b
 24991  0068F4  0D09               	mullw	9
 24992  0068F6  0E98               	movlw	low _routingTable
 24993  0068F8  24F3               	addwf	prodl,w,c
 24994  0068FA  6ED9               	movwf	fsr2l,c
 24995  0068FC  0E06               	movlw	high _routingTable
 24996  0068FE  20F4               	addwfc	prodh,w,c
 24997  006900  6EDA               	movwf	fsr2h,c
 24998  006902  CFDE F07D          	movff	postinc2,isSameAddress@a1
 24999  006906  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 25000  00690A  C088  F07F         	movff	routingTableFind@neighbor,isSameAddress@a2
 25001  00690E  C089  F080         	movff	routingTableFind@neighbor+1,isSameAddress@a2+1
 25002  006912  ECB1  F03A         	call	_isSameAddress	;wreg free
 25003  006916  0900               	iorlw	0
 25004  006918  E109               	bnz	l1310
 25005                           
 25006                           ; BSR set to: 0
 25007  00691A  2B8E               	incf	routingTableFind@i& (0+255),f,b
 25008  00691C                     l12006:
 25009                           
 25010                           ; BSR set to: 0
 25011  00691C  518E               	movf	routingTableFind@i& (0+255),w,b
 25012  00691E  6F8A               	movwf	??_routingTableFind& (0+255),b
 25013  006920  6B8B               	clrf	(??_routingTableFind+1)& (0+255),b
 25014  006922  51EB               	movf	_routingTableActive& (0+255),w,b
 25015  006924  5D8A               	subwf	??_routingTableFind& (0+255),w,b
 25016  006926  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 25017  006928  598B               	subwfb	(??_routingTableFind+1)& (0+255),w,b
 25018  00692A  E3E3               	bnc	l12000
 25019  00692C                     l1310:
 25020                           
 25021                           ; BSR set to: 0
 25022                           ;RouteManager.c: 217: }
 25023                           ;RouteManager.c: 218: res=i;
 25024  00692C  C08E  F08C         	movff	routingTableFind@i,routingTableFind@res
 25025  006930  6B8D               	clrf	(routingTableFind@res+1)& (0+255),b
 25026  006932                     l12008:
 25027                           
 25028                           ; BSR set to: 0
 25029                           ;RouteManager.c: 219: }
 25030                           ;RouteManager.c: 220: return res;
 25031  006932  518C               	movf	routingTableFind@res& (0+255),w,b
 25032                           
 25033                           ; BSR set to: 0
 25034  006934  0012               	return		;funcret
 25035  006936                     __end_of_routingTableFind:
 25036                           	opt stack 0
 25037                           tblptru	equ	0xFF8
 25038                           tblptrh	equ	0xFF7
 25039                           tblptrl	equ	0xFF6
 25040                           tablat	equ	0xFF5
 25041                           prodh	equ	0xFF4
 25042                           prodl	equ	0xFF3
 25043                           intcon3	equ	0xFF0
 25044                           postinc0	equ	0xFEE
 25045                           plusw0	equ	0xFEB
 25046                           fsr0h	equ	0xFEA
 25047                           fsr0l	equ	0xFE9
 25048                           wreg	equ	0xFE8
 25049                           indf1	equ	0xFE7
 25050                           postinc1	equ	0xFE6
 25051                           postdec1	equ	0xFE5
 25052                           plusw1	equ	0xFE3
 25053                           fsr1h	equ	0xFE2
 25054                           fsr1l	equ	0xFE1
 25055                           indf2	equ	0xFDF
 25056                           postinc2	equ	0xFDE
 25057                           postdec2	equ	0xFDD
 25058                           plusw2	equ	0xFDB
 25059                           fsr2h	equ	0xFDA
 25060                           fsr2l	equ	0xFD9
 25061                           status	equ	0xFD8
 25062                           
 25063 ;; *************** function _isSameAddress *****************
 25064 ;; Defined at:
 25065 ;;		line 245 in file "../NetworkManager.c"
 25066 ;; Parameters:    Size  Location     Type
 25067 ;;  a1              2   29[BANK0 ] struct addr_t_def
 25068 ;;  a2              2   31[BANK0 ] struct addr_t_def
 25069 ;; Auto vars:     Size  Location     Type
 25070 ;;		None
 25071 ;; Return value:  Size  Location     Type
 25072 ;;                  1    wreg      unsigned char 
 25073 ;; Registers used:
 25074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25075 ;; Tracked objects:
 25076 ;;		On entry : 8/1
 25077 ;;		On exit  : F/0
 25078 ;;		Unchanged: 0/0
 25079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25084 ;;Total ram usage:        4 bytes
 25085 ;; Hardware stack levels used:    1
 25086 ;; Hardware stack levels required when called:    6
 25087 ;; This function calls:
 25088 ;;		_NetworkAddressSizeGet
 25089 ;;		_memcmp
 25090 ;; This function is called by:
 25091 ;;		_MiMAC_ReceivedPacket
 25092 ;;		_AddNodeToNetworkTable
 25093 ;;		_radioReceivedPacket
 25094 ;;		_NetworkUnicastData
 25095 ;;		_RouteManagerPerformUpdate
 25096 ;;		_routingTableFind
 25097 ;;		_RouterEvicted
 25098 ;;		_RouteManagerShouldInsert
 25099 ;;		_RoutingTableFindDeviceOrParent
 25100 ;;		_le_findIdx
 25101 ;;		_le_findWorstNeighborIdx
 25102 ;;		_le_updateNeighborTableEst
 25103 ;;		_le_findRandomNeighborIdx
 25104 ;;		_TunnelManagerSetTunnel
 25105 ;;		_TunnelManagerGetTunnel
 25106 ;;		_TunnelManagerInvalidateTunnel
 25107 ;;		_TMSendFormedPacketToRFD
 25108 ;;		_IsNetworkDevice
 25109 ;;		_DeviceManagerGetDeviceType
 25110 ;;		_DeviceManagerGetDeviceData
 25111 ;; This function uses a non-reentrant model
 25112 ;;
 25113                           
 25114                           	psect	text103
 25115  007562                     __ptext103:
 25116                           	opt stack 0
 25117  007562                     _isSameAddress:
 25118                           	opt stack 22
 25119                           
 25120                           ;NetworkManager.c: 247: return !memcmp(a1.bytes, a2.bytes, NetworkAddressSizeGet());
 25121                           
 25122                           ; BSR set to: 0
 25123                           ;incstack = 0
 25124  007562  0E7D               	movlw	low isSameAddress@a1
 25125  007564  0100               	movlb	0	; () banked
 25126  007566  6F73               	movwf	memcmp@s1& (0+255),b
 25127  007568  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 25128  00756A  0E7F               	movlw	low isSameAddress@a2
 25129  00756C  6F75               	movwf	memcmp@s2& (0+255),b
 25130  00756E  6B76               	clrf	(memcmp@s2+1)& (0+255),b
 25131  007570  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 25132  007574  0100               	movlb	0	; () banked
 25133  007576  6F77               	movwf	memcmp@n& (0+255),b
 25134  007578  6B78               	clrf	(memcmp@n+1)& (0+255),b
 25135  00757A  EC07  F036         	call	_memcmp	;wreg free
 25136  00757E  5173               	movf	?_memcmp& (0+255),w,b
 25137  007580  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 25138  007582  B4D8               	btfsc	status,2,c
 25139  007584  0C01               	retlw	1
 25140                           
 25141                           ; BSR set to: 0
 25142  007586  0C00               	retlw	0	;funcret
 25143  007588                     __end_of_isSameAddress:
 25144                           	opt stack 0
 25145                           tblptru	equ	0xFF8
 25146                           tblptrh	equ	0xFF7
 25147                           tblptrl	equ	0xFF6
 25148                           tablat	equ	0xFF5
 25149                           prodh	equ	0xFF4
 25150                           prodl	equ	0xFF3
 25151                           intcon3	equ	0xFF0
 25152                           postinc0	equ	0xFEE
 25153                           plusw0	equ	0xFEB
 25154                           fsr0h	equ	0xFEA
 25155                           fsr0l	equ	0xFE9
 25156                           wreg	equ	0xFE8
 25157                           indf1	equ	0xFE7
 25158                           postinc1	equ	0xFE6
 25159                           postdec1	equ	0xFE5
 25160                           plusw1	equ	0xFE3
 25161                           fsr1h	equ	0xFE2
 25162                           fsr1l	equ	0xFE1
 25163                           indf2	equ	0xFDF
 25164                           postinc2	equ	0xFDE
 25165                           postdec2	equ	0xFDD
 25166                           plusw2	equ	0xFDB
 25167                           fsr2h	equ	0xFDA
 25168                           fsr2l	equ	0xFD9
 25169                           status	equ	0xFD8
 25170                           
 25171 ;; *************** function _routeInfoInit *****************
 25172 ;; Defined at:
 25173 ;;		line 195 in file "../RouteManager.c"
 25174 ;; Parameters:    Size  Location     Type
 25175 ;;  ri              2   27[BANK0 ] PTR struct route_info_t_
 25176 ;;		 -> routeInfo(7), 
 25177 ;; Auto vars:     Size  Location     Type
 25178 ;;		None
 25179 ;; Return value:  Size  Location     Type
 25180 ;;                  1    wreg      void 
 25181 ;; Registers used:
 25182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25183 ;; Tracked objects:
 25184 ;;		On entry : F/0
 25185 ;;		On exit  : F/0
 25186 ;;		Unchanged: 0/0
 25187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25192 ;;Total ram usage:        2 bytes
 25193 ;; Hardware stack levels used:    1
 25194 ;; Hardware stack levels required when called:    6
 25195 ;; This function calls:
 25196 ;;		_NetworkAddressSizeGet
 25197 ;;		_memset
 25198 ;; This function is called by:
 25199 ;;		_RouterEvicted
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text104
 25204  006BB8                     __ptext104:
 25205                           	opt stack 0
 25206  006BB8                     _routeInfoInit:
 25207                           	opt stack 18
 25208                           
 25209                           ; BSR set to: 0
 25210                           ;RouteManager.c: 197: memset(&ri->parent, 0xFF, NetworkAddressSizeGet());
 25211                           
 25212                           ; BSR set to: 0
 25213                           ;incstack = 0
 25214  006BB8  C07B  F073         	movff	routeInfoInit@ri,memset@p1
 25215  006BBC  C07C  F074         	movff	routeInfoInit@ri+1,memset@p1+1
 25216  006BC0  6B76               	clrf	(memset@c+1)& (0+255),b
 25217  006BC2  6975               	setf	memset@c& (0+255),b
 25218  006BC4  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 25219  006BC8  0100               	movlb	0	; () banked
 25220  006BCA  6F77               	movwf	memset@n& (0+255),b
 25221  006BCC  6B78               	clrf	(memset@n+1)& (0+255),b
 25222  006BCE  EC4C  F03A         	call	_memset	;wreg free
 25223                           
 25224                           ; BSR set to: 0
 25225                           ;RouteManager.c: 198: ri->etx = 0;
 25226  006BD2  EE20 F002          	lfsr	2,2
 25227  006BD6  517B               	movf	routeInfoInit@ri& (0+255),w,b
 25228  006BD8  26D9               	addwf	fsr2l,f,c
 25229  006BDA  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25230  006BDC  22DA               	addwfc	fsr2h,f,c
 25231  006BDE  6ADE               	clrf	postinc2,c
 25232  006BE0  6ADD               	clrf	postdec2,c
 25233                           
 25234                           ; BSR set to: 0
 25235                           ;RouteManager.c: 199: ri->haveHeard = 0;
 25236  006BE2  EE20 F004          	lfsr	2,4
 25237  006BE6  517B               	movf	routeInfoInit@ri& (0+255),w,b
 25238  006BE8  26D9               	addwf	fsr2l,f,c
 25239  006BEA  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25240  006BEC  22DA               	addwfc	fsr2h,f,c
 25241  006BEE  6ADF               	clrf	indf2,c
 25242                           
 25243                           ; BSR set to: 0
 25244                           ;RouteManager.c: 200: ri->congested = 0;
 25245  006BF0  EE20 F005          	lfsr	2,5
 25246  006BF4  517B               	movf	routeInfoInit@ri& (0+255),w,b
 25247  006BF6  26D9               	addwf	fsr2l,f,c
 25248  006BF8  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25249  006BFA  22DA               	addwfc	fsr2h,f,c
 25250  006BFC  6ADF               	clrf	indf2,c
 25251                           
 25252                           ; BSR set to: 0
 25253                           ;RouteManager.c: 201: ri->hasCheckedIn=0;
 25254  006BFE  EE20 F006          	lfsr	2,6
 25255  006C02  517B               	movf	routeInfoInit@ri& (0+255),w,b
 25256  006C04  26D9               	addwf	fsr2l,f,c
 25257  006C06  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25258  006C08  22DA               	addwfc	fsr2h,f,c
 25259  006C0A  6ADF               	clrf	indf2,c
 25260                           
 25261                           ; BSR set to: 0
 25262  006C0C  0C00               	retlw	0	;funcret
 25263  006C0E                     __end_of_routeInfoInit:
 25264                           	opt stack 0
 25265                           tblptru	equ	0xFF8
 25266                           tblptrh	equ	0xFF7
 25267                           tblptrl	equ	0xFF6
 25268                           tablat	equ	0xFF5
 25269                           prodh	equ	0xFF4
 25270                           prodl	equ	0xFF3
 25271                           intcon3	equ	0xFF0
 25272                           postinc0	equ	0xFEE
 25273                           plusw0	equ	0xFEB
 25274                           fsr0h	equ	0xFEA
 25275                           fsr0l	equ	0xFE9
 25276                           wreg	equ	0xFE8
 25277                           indf1	equ	0xFE7
 25278                           postinc1	equ	0xFE6
 25279                           postdec1	equ	0xFE5
 25280                           plusw1	equ	0xFE3
 25281                           fsr1h	equ	0xFE2
 25282                           fsr1l	equ	0xFE1
 25283                           indf2	equ	0xFDF
 25284                           postinc2	equ	0xFDE
 25285                           postdec2	equ	0xFDD
 25286                           plusw2	equ	0xFDB
 25287                           fsr2h	equ	0xFDA
 25288                           fsr2l	equ	0xFD9
 25289                           status	equ	0xFD8
 25290                           
 25291 ;; *************** function _RouteManagerRequestUpdate *****************
 25292 ;; Defined at:
 25293 ;;		line 185 in file "../RouteManager.c"
 25294 ;; Parameters:    Size  Location     Type
 25295 ;;		None
 25296 ;; Auto vars:     Size  Location     Type
 25297 ;;		None
 25298 ;; Return value:  Size  Location     Type
 25299 ;;                  1    wreg      void 
 25300 ;; Registers used:
 25301 ;;		wreg, status,2
 25302 ;; Tracked objects:
 25303 ;;		On entry : F/0
 25304 ;;		On exit  : F/1
 25305 ;;		Unchanged: 0/0
 25306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25311 ;;Total ram usage:        0 bytes
 25312 ;; Hardware stack levels used:    1
 25313 ;; Hardware stack levels required when called:    5
 25314 ;; This function calls:
 25315 ;;		Nothing
 25316 ;; This function is called by:
 25317 ;;		_RouterEvicted
 25318 ;; This function uses a non-reentrant model
 25319 ;;
 25320                           
 25321                           	psect	text105
 25322  007868                     __ptext105:
 25323                           	opt stack 0
 25324  007868                     _RouteManagerRequestUpdate:
 25325                           	opt stack 19
 25326                           
 25327                           ; BSR set to: 0
 25328                           ;RouteManager.c: 187: RouteMgrUpdateRequired=1;
 25329                           
 25330                           ; BSR set to: 0
 25331                           ;incstack = 0
 25332  007868  0E01               	movlw	1
 25333  00786A  0101               	movlb	1	; () banked
 25334  00786C  6FD7               	movwf	_RouteMgrUpdateRequired& (0+255),b
 25335                           
 25336                           ; BSR set to: 1
 25337  00786E  0C01               	retlw	1	;funcret
 25338  007870                     __end_of_RouteManagerRequestUpdate:
 25339                           	opt stack 0
 25340                           tblptru	equ	0xFF8
 25341                           tblptrh	equ	0xFF7
 25342                           tblptrl	equ	0xFF6
 25343                           tablat	equ	0xFF5
 25344                           prodh	equ	0xFF4
 25345                           prodl	equ	0xFF3
 25346                           intcon3	equ	0xFF0
 25347                           postinc0	equ	0xFEE
 25348                           plusw0	equ	0xFEB
 25349                           fsr0h	equ	0xFEA
 25350                           fsr0l	equ	0xFE9
 25351                           wreg	equ	0xFE8
 25352                           indf1	equ	0xFE7
 25353                           postinc1	equ	0xFE6
 25354                           postdec1	equ	0xFE5
 25355                           plusw1	equ	0xFE3
 25356                           fsr1h	equ	0xFE2
 25357                           fsr1l	equ	0xFE1
 25358                           indf2	equ	0xFDF
 25359                           postinc2	equ	0xFDE
 25360                           postdec2	equ	0xFDD
 25361                           plusw2	equ	0xFDB
 25362                           fsr2h	equ	0xFDA
 25363                           fsr2l	equ	0xFD9
 25364                           status	equ	0xFD8
 25365                           
 25366 ;; *************** function _NetworkGetMyRouteInfo *****************
 25367 ;; Defined at:
 25368 ;;		line 240 in file "../NetworkManager.c"
 25369 ;; Parameters:    Size  Location     Type
 25370 ;;		None
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;		None
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  2   19[BANK0 ] PTR struct route_info_t_
 25375 ;; Registers used:
 25376 ;;		wreg, status,2, status,0
 25377 ;; Tracked objects:
 25378 ;;		On entry : C/0
 25379 ;;		On exit  : F/0
 25380 ;;		Unchanged: 0/0
 25381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25386 ;;Total ram usage:        2 bytes
 25387 ;; Hardware stack levels used:    1
 25388 ;; Hardware stack levels required when called:    5
 25389 ;; This function calls:
 25390 ;;		Nothing
 25391 ;; This function is called by:
 25392 ;;		_RouteManagerPerformUpdate
 25393 ;;		_RouterEvicted
 25394 ;;		_networkSendBeacon
 25395 ;; This function uses a non-reentrant model
 25396 ;;
 25397                           
 25398                           	psect	text106
 25399  0077C0                     __ptext106:
 25400                           	opt stack 0
 25401  0077C0                     _NetworkGetMyRouteInfo:
 25402                           	opt stack 19
 25403                           
 25404                           ;NetworkManager.c: 242: return(&routeInfo);
 25405                           
 25406                           ; BSR set to: 1
 25407                           ;incstack = 0
 25408  0077C0  0E94               	movlw	low _routeInfo
 25409  0077C2  0100               	movlb	0	; () banked
 25410  0077C4  6F73               	movwf	?_NetworkGetMyRouteInfo& (0+255),b
 25411  0077C6  0E02               	movlw	high _routeInfo
 25412  0077C8  6F74               	movwf	(?_NetworkGetMyRouteInfo+1)& (0+255),b
 25413                           
 25414                           ; BSR set to: 0
 25415  0077CA  0012               	return		;funcret
 25416  0077CC                     __end_of_NetworkGetMyRouteInfo:
 25417                           	opt stack 0
 25418                           tblptru	equ	0xFF8
 25419                           tblptrh	equ	0xFF7
 25420                           tblptrl	equ	0xFF6
 25421                           tablat	equ	0xFF5
 25422                           prodh	equ	0xFF4
 25423                           prodl	equ	0xFF3
 25424                           intcon3	equ	0xFF0
 25425                           postinc0	equ	0xFEE
 25426                           plusw0	equ	0xFEB
 25427                           fsr0h	equ	0xFEA
 25428                           fsr0l	equ	0xFE9
 25429                           wreg	equ	0xFE8
 25430                           indf1	equ	0xFE7
 25431                           postinc1	equ	0xFE6
 25432                           postdec1	equ	0xFE5
 25433                           plusw1	equ	0xFE3
 25434                           fsr1h	equ	0xFE2
 25435                           fsr1l	equ	0xFE1
 25436                           indf2	equ	0xFDF
 25437                           postinc2	equ	0xFDE
 25438                           postdec2	equ	0xFDD
 25439                           plusw2	equ	0xFDB
 25440                           fsr2h	equ	0xFDA
 25441                           fsr2l	equ	0xFD9
 25442                           status	equ	0xFD8
 25443                           
 25444 ;; *************** function _NetworkPrepareSendPacket *****************
 25445 ;; Defined at:
 25446 ;;		line 358 in file "../NetworkManager.c"
 25447 ;; Parameters:    Size  Location     Type
 25448 ;;  address         2   31[BANK0 ] struct addr_t_def
 25449 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 25450 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 25451 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 25452 ;;  pType           1   35[BANK0 ] enum E200
 25453 ;;  data            2   36[BANK0 ] PTR unsigned char 
 25454 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMQ(152), TxBuffer(64), NULL(0), 
 25455 ;;  size            2   38[BANK0 ] unsigned int 
 25456 ;; Auto vars:     Size  Location     Type
 25457 ;;  nHdr            2   40[BANK0 ] PTR struct net_data_head
 25458 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 25459 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 25460 ;; Return value:  Size  Location     Type
 25461 ;;                  2   31[BANK0 ] unsigned int 
 25462 ;; Registers used:
 25463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25464 ;; Tracked objects:
 25465 ;;		On entry : F/0
 25466 ;;		On exit  : F/0
 25467 ;;		Unchanged: 0/0
 25468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25469 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25472 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25473 ;;Total ram usage:       11 bytes
 25474 ;; Hardware stack levels used:    1
 25475 ;; Hardware stack levels required when called:    6
 25476 ;; This function calls:
 25477 ;;		_NetworkAddressSizeGet
 25478 ;;		_NetworkGetDeviceType
 25479 ;;		_NetworkGetParentAddress
 25480 ;;		_NetworkManagerGetMyAddress
 25481 ;;		_NetworkSequence
 25482 ;;		_memcpy
 25483 ;; This function is called by:
 25484 ;;		_TransportManagerTask
 25485 ;;		_TMSendDataToRFD
 25486 ;;		_NetworkManagerTask
 25487 ;;		_NetworkSendDiscoverRequest
 25488 ;;		_NetworkSendDiscoverResponse
 25489 ;;		_NetworkIssueDataRequest
 25490 ;;		_NetworkBroadcastData
 25491 ;; This function uses a non-reentrant model
 25492 ;;
 25493                           
 25494                           	psect	text107
 25495  00547C                     __ptext107:
 25496                           	opt stack 0
 25497  00547C                     _NetworkPrepareSendPacket:
 25498                           	opt stack 21
 25499                           
 25500                           ; BSR set to: 0
 25501                           ;NetworkManager.c: 360: net_data_header_t *nHdr;
 25502                           ;NetworkManager.c: 361: nHdr=(net_data_header_t*)buffer;
 25503                           
 25504                           ; BSR set to: 0
 25505                           ;incstack = 0
 25506  00547C  C081  F088         	movff	NetworkPrepareSendPacket@buffer,NetworkPrepareSendPacket@nHdr
 25507  005480  C082  F089         	movff	NetworkPrepareSendPacket@buffer+1,NetworkPrepareSendPacket@nHdr+1
 25508                           
 25509                           ; BSR set to: 0
 25510                           ;NetworkManager.c: 363: nHdr->Hops=0;
 25511  005484  C088  FFD9         	movff	NetworkPrepareSendPacket@nHdr,fsr2l
 25512  005488  C089  FFDA         	movff	NetworkPrepareSendPacket@nHdr+1,fsr2h
 25513  00548C  6ADF               	clrf	indf2,c
 25514                           
 25515                           ; BSR set to: 0
 25516                           ;NetworkManager.c: 364: nHdr->flags=(NetworkGetDeviceType() & 0x07);
 25517  00548E  EE20 F003          	lfsr	2,3
 25518  005492  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25519  005494  26D9               	addwf	fsr2l,f,c
 25520  005496  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25521  005498  22DA               	addwfc	fsr2h,f,c
 25522  00549A  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 25523  00549E  0B07               	andlw	7
 25524  0054A0  6EDF               	movwf	indf2,c
 25525                           
 25526                           ; BSR set to: 1
 25527                           ;NetworkManager.c: 365: memcpy(&nHdr->origin,NetworkManagerGetMyAddress(),NetworkAddress
      +                          SizeGet());
 25528  0054A2  0E06               	movlw	6
 25529  0054A4  0100               	movlb	0	; () banked
 25530  0054A6  2588               	addwf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25531  0054A8  6F75               	movwf	memcpy@d1& (0+255),b
 25532  0054AA  0E00               	movlw	0
 25533  0054AC  2189               	addwfc	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25534  0054AE  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 25535  0054B0  ECE6  F03B         	call	_NetworkManagerGetMyAddress	;wreg free
 25536  0054B4  C073  F077         	movff	?_NetworkManagerGetMyAddress,memcpy@s1
 25537  0054B8  C074  F078         	movff	?_NetworkManagerGetMyAddress+1,memcpy@s1+1
 25538  0054BC  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 25539  0054C0  0100               	movlb	0	; () banked
 25540  0054C2  6F79               	movwf	memcpy@n& (0+255),b
 25541  0054C4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 25542  0054C6  EC5D  F036         	call	_memcpy	;wreg free
 25543                           
 25544                           ; BSR set to: 0
 25545                           ;NetworkManager.c: 366: nHdr->target=address;
 25546  0054CA  EE20 F004          	lfsr	2,4
 25547  0054CE  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25548  0054D0  26D9               	addwf	fsr2l,f,c
 25549  0054D2  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25550  0054D4  22DA               	addwfc	fsr2h,f,c
 25551  0054D6  C07F  FFDE         	movff	NetworkPrepareSendPacket@address,postinc2
 25552  0054DA  C080  FFDD         	movff	NetworkPrepareSendPacket@address+1,postdec2
 25553                           
 25554                           ; BSR set to: 0
 25555                           ;NetworkManager.c: 367: nHdr->sequenceNumber=NetworkSequence();
 25556  0054DE  EE20 F001          	lfsr	2,1
 25557  0054E2  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25558  0054E4  26D9               	addwf	fsr2l,f,c
 25559  0054E6  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25560  0054E8  22DA               	addwfc	fsr2h,f,c
 25561  0054EA  EC38  F03C         	call	_NetworkSequence	;wreg free
 25562  0054EE  6EDF               	movwf	indf2,c
 25563                           
 25564                           ; BSR set to: 1
 25565                           ;NetworkManager.c: 368: nHdr->packettype=pType;
 25566  0054F0  0100               	movlb	0	; () banked
 25567  0054F2  EE20 F002          	lfsr	2,2
 25568  0054F6  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25569  0054F8  26D9               	addwf	fsr2l,f,c
 25570  0054FA  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25571  0054FC  22DA               	addwfc	fsr2h,f,c
 25572  0054FE  C083  FFDF         	movff	NetworkPrepareSendPacket@pType,indf2
 25573                           
 25574                           ; BSR set to: 0
 25575                           ;NetworkManager.c: 369: nHdr->parent=NetworkGetParentAddress();
 25576  005502  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 25577  005506  0100               	movlb	0	; () banked
 25578  005508  EE20 F008          	lfsr	2,8
 25579  00550C  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25580  00550E  26D9               	addwf	fsr2l,f,c
 25581  005510  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25582  005512  22DA               	addwfc	fsr2h,f,c
 25583  005514  C073  FFDE         	movff	?_NetworkGetParentAddress,postinc2
 25584  005518  C074  FFDD         	movff	?_NetworkGetParentAddress+1,postdec2
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;NetworkManager.c: 370: if((data!=(0)) && (size>0))
 25588  00551C  5184               	movf	NetworkPrepareSendPacket@data& (0+255),w,b
 25589  00551E  1185               	iorwf	(NetworkPrepareSendPacket@data+1)& (0+255),w,b
 25590  005520  E014               	bz	l2071
 25591                           
 25592                           ; BSR set to: 0
 25593  005522  5186               	movf	NetworkPrepareSendPacket@size& (0+255),w,b
 25594  005524  1187               	iorwf	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 25595  005526  E011               	bz	l2071
 25596                           
 25597                           ; BSR set to: 0
 25598                           ;NetworkManager.c: 371: {
 25599                           ;NetworkManager.c: 372: memcpy(&buffer[sizeof(net_data_header_t)],data,size);
 25600  005528  0E0A               	movlw	10
 25601  00552A  2581               	addwf	NetworkPrepareSendPacket@buffer& (0+255),w,b
 25602  00552C  6F75               	movwf	memcpy@d1& (0+255),b
 25603  00552E  0E00               	movlw	0
 25604  005530  2182               	addwfc	(NetworkPrepareSendPacket@buffer+1)& (0+255),w,b
 25605  005532  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 25606  005534  C084  F077         	movff	NetworkPrepareSendPacket@data,memcpy@s1
 25607  005538  C085  F078         	movff	NetworkPrepareSendPacket@data+1,memcpy@s1+1
 25608  00553C  C086  F079         	movff	NetworkPrepareSendPacket@size,memcpy@n
 25609  005540  C087  F07A         	movff	NetworkPrepareSendPacket@size+1,memcpy@n+1
 25610  005544  EC5D  F036         	call	_memcpy	;wreg free
 25611                           
 25612                           ;NetworkManager.c: 373: }else
 25613  005548  D002               	goto	l12510
 25614  00554A                     l2071:
 25615                           
 25616                           ; BSR set to: 0
 25617                           ;NetworkManager.c: 374: {
 25618                           ;NetworkManager.c: 375: size=0;
 25619  00554A  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 25620  00554C  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 25621  00554E                     l12510:
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;NetworkManager.c: 376: }
 25625                           ;NetworkManager.c: 377: return(size+sizeof(net_data_header_t));
 25626  00554E  0E0A               	movlw	10
 25627  005550  2586               	addwf	NetworkPrepareSendPacket@size& (0+255),w,b
 25628  005552  6F7F               	movwf	?_NetworkPrepareSendPacket& (0+255),b
 25629  005554  0E00               	movlw	0
 25630  005556  2187               	addwfc	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 25631  005558  6F80               	movwf	(?_NetworkPrepareSendPacket+1)& (0+255),b
 25632                           
 25633                           ; BSR set to: 0
 25634  00555A  0012               	return		;funcret
 25635  00555C                     __end_of_NetworkPrepareSendPacket:
 25636                           	opt stack 0
 25637                           tblptru	equ	0xFF8
 25638                           tblptrh	equ	0xFF7
 25639                           tblptrl	equ	0xFF6
 25640                           tablat	equ	0xFF5
 25641                           prodh	equ	0xFF4
 25642                           prodl	equ	0xFF3
 25643                           intcon3	equ	0xFF0
 25644                           postinc0	equ	0xFEE
 25645                           plusw0	equ	0xFEB
 25646                           fsr0h	equ	0xFEA
 25647                           fsr0l	equ	0xFE9
 25648                           wreg	equ	0xFE8
 25649                           indf1	equ	0xFE7
 25650                           postinc1	equ	0xFE6
 25651                           postdec1	equ	0xFE5
 25652                           plusw1	equ	0xFE3
 25653                           fsr1h	equ	0xFE2
 25654                           fsr1l	equ	0xFE1
 25655                           indf2	equ	0xFDF
 25656                           postinc2	equ	0xFDE
 25657                           postdec2	equ	0xFDD
 25658                           plusw2	equ	0xFDB
 25659                           fsr2h	equ	0xFDA
 25660                           fsr2l	equ	0xFD9
 25661                           status	equ	0xFD8
 25662                           
 25663 ;; *************** function _NetworkSequence *****************
 25664 ;; Defined at:
 25665 ;;		line 270 in file "../NetworkManager.c"
 25666 ;; Parameters:    Size  Location     Type
 25667 ;;		None
 25668 ;; Auto vars:     Size  Location     Type
 25669 ;;		None
 25670 ;; Return value:  Size  Location     Type
 25671 ;;                  1    wreg      unsigned char 
 25672 ;; Registers used:
 25673 ;;		wreg, status,2, status,0
 25674 ;; Tracked objects:
 25675 ;;		On entry : F/0
 25676 ;;		On exit  : F/1
 25677 ;;		Unchanged: 0/0
 25678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25683 ;;Total ram usage:        0 bytes
 25684 ;; Hardware stack levels used:    1
 25685 ;; Hardware stack levels required when called:    5
 25686 ;; This function calls:
 25687 ;;		Nothing
 25688 ;; This function is called by:
 25689 ;;		_NetworkPrepareSendPacket
 25690 ;; This function uses a non-reentrant model
 25691 ;;
 25692                           
 25693                           	psect	text108
 25694  007870                     __ptext108:
 25695                           	opt stack 0
 25696  007870                     _NetworkSequence:
 25697                           	opt stack 21
 25698                           
 25699                           ; BSR set to: 0
 25700                           ;NetworkManager.c: 272: return(NetSeq++);
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;incstack = 0
 25704  007870  0101               	movlb	1	; () banked
 25705  007872  2BD4               	incf	_NetSeq& (0+255),f,b
 25706  007874  05D4               	decf	_NetSeq& (0+255),w,b
 25707                           
 25708                           ; BSR set to: 1
 25709  007876  0012               	return		;funcret
 25710  007878                     __end_of_NetworkSequence:
 25711                           	opt stack 0
 25712                           tblptru	equ	0xFF8
 25713                           tblptrh	equ	0xFF7
 25714                           tblptrl	equ	0xFF6
 25715                           tablat	equ	0xFF5
 25716                           prodh	equ	0xFF4
 25717                           prodl	equ	0xFF3
 25718                           intcon3	equ	0xFF0
 25719                           postinc0	equ	0xFEE
 25720                           plusw0	equ	0xFEB
 25721                           fsr0h	equ	0xFEA
 25722                           fsr0l	equ	0xFE9
 25723                           wreg	equ	0xFE8
 25724                           indf1	equ	0xFE7
 25725                           postinc1	equ	0xFE6
 25726                           postdec1	equ	0xFE5
 25727                           plusw1	equ	0xFE3
 25728                           fsr1h	equ	0xFE2
 25729                           fsr1l	equ	0xFE1
 25730                           indf2	equ	0xFDF
 25731                           postinc2	equ	0xFDE
 25732                           postdec2	equ	0xFDD
 25733                           plusw2	equ	0xFDB
 25734                           fsr2h	equ	0xFDA
 25735                           fsr2l	equ	0xFD9
 25736                           status	equ	0xFD8
 25737                           
 25738 ;; *************** function _NetworkManagerGetMyAddress *****************
 25739 ;; Defined at:
 25740 ;;		line 235 in file "../NetworkManager.c"
 25741 ;; Parameters:    Size  Location     Type
 25742 ;;		None
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;		None
 25745 ;; Return value:  Size  Location     Type
 25746 ;;                  2   19[BANK0 ] PTR struct addr_t_def
 25747 ;; Registers used:
 25748 ;;		wreg, status,2, status,0
 25749 ;; Tracked objects:
 25750 ;;		On entry : E/0
 25751 ;;		On exit  : F/0
 25752 ;;		Unchanged: 0/0
 25753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25758 ;;Total ram usage:        2 bytes
 25759 ;; Hardware stack levels used:    1
 25760 ;; Hardware stack levels required when called:    5
 25761 ;; This function calls:
 25762 ;;		Nothing
 25763 ;; This function is called by:
 25764 ;;		_radioReceivedPacket
 25765 ;;		_NetworkUnicastData
 25766 ;;		_RouteManagerPerformUpdate
 25767 ;;		_networkSendBeacon
 25768 ;;		_TMSendFormedPacketToRFD
 25769 ;;		_NetworkPrepareSendPacket
 25770 ;; This function uses a non-reentrant model
 25771 ;;
 25772                           
 25773                           	psect	text109
 25774  0077CC                     __ptext109:
 25775                           	opt stack 0
 25776  0077CC                     _NetworkManagerGetMyAddress:
 25777                           	opt stack 21
 25778                           
 25779                           ;NetworkManager.c: 237: return (&MyAddress);
 25780                           
 25781                           ; BSR set to: 1
 25782                           ;incstack = 0
 25783  0077CC  0EFA               	movlw	low _MyAddress
 25784  0077CE  0100               	movlb	0	; () banked
 25785  0077D0  6F73               	movwf	?_NetworkManagerGetMyAddress& (0+255),b
 25786  0077D2  0E01               	movlw	high _MyAddress
 25787  0077D4  6F74               	movwf	(?_NetworkManagerGetMyAddress+1)& (0+255),b
 25788                           
 25789                           ; BSR set to: 0
 25790  0077D6  0012               	return		;funcret
 25791  0077D8                     __end_of_NetworkManagerGetMyAddress:
 25792                           	opt stack 0
 25793                           tblptru	equ	0xFF8
 25794                           tblptrh	equ	0xFF7
 25795                           tblptrl	equ	0xFF6
 25796                           tablat	equ	0xFF5
 25797                           prodh	equ	0xFF4
 25798                           prodl	equ	0xFF3
 25799                           intcon3	equ	0xFF0
 25800                           postinc0	equ	0xFEE
 25801                           plusw0	equ	0xFEB
 25802                           fsr0h	equ	0xFEA
 25803                           fsr0l	equ	0xFE9
 25804                           wreg	equ	0xFE8
 25805                           indf1	equ	0xFE7
 25806                           postinc1	equ	0xFE6
 25807                           postdec1	equ	0xFE5
 25808                           plusw1	equ	0xFE3
 25809                           fsr1h	equ	0xFE2
 25810                           fsr1l	equ	0xFE1
 25811                           indf2	equ	0xFDF
 25812                           postinc2	equ	0xFDE
 25813                           postdec2	equ	0xFDD
 25814                           plusw2	equ	0xFDB
 25815                           fsr2h	equ	0xFDA
 25816                           fsr2l	equ	0xFD9
 25817                           status	equ	0xFD8
 25818                           
 25819 ;; *************** function _NetworkGetPANID *****************
 25820 ;; Defined at:
 25821 ;;		line 390 in file "../NetworkManager.c"
 25822 ;; Parameters:    Size  Location     Type
 25823 ;;		None
 25824 ;; Auto vars:     Size  Location     Type
 25825 ;;		None
 25826 ;; Return value:  Size  Location     Type
 25827 ;;                  2   19[BANK0 ] unsigned int 
 25828 ;; Registers used:
 25829 ;;		None
 25830 ;; Tracked objects:
 25831 ;;		On entry : C/1
 25832 ;;		On exit  : C/0
 25833 ;;		Unchanged: C/0
 25834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;Total ram usage:        2 bytes
 25840 ;; Hardware stack levels used:    1
 25841 ;; Hardware stack levels required when called:    5
 25842 ;; This function calls:
 25843 ;;		Nothing
 25844 ;; This function is called by:
 25845 ;;		_radioReceivedPacket
 25846 ;;		_networkSendBeacon
 25847 ;;		_BroadcastManagerTask
 25848 ;;		_TransportManagerTask
 25849 ;;		_TMSendFormedPacketToRFD
 25850 ;;		_NetworkManagerTask
 25851 ;;		_NetworkIssueDataRequest
 25852 ;; This function uses a non-reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text110
 25856  00782E                     __ptext110:
 25857                           	opt stack 0
 25858  00782E                     _NetworkGetPANID:
 25859                           	opt stack 21
 25860                           
 25861                           ;NetworkManager.c: 392: return(DEVPanID);
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;incstack = 0
 25865  00782E  C1F6  F073         	movff	_DEVPanID,?_NetworkGetPANID
 25866  007832  C1F7  F074         	movff	_DEVPanID+1,?_NetworkGetPANID+1
 25867  007836  0012               	return		;funcret
 25868  007838                     __end_of_NetworkGetPANID:
 25869                           	opt stack 0
 25870                           tblptru	equ	0xFF8
 25871                           tblptrh	equ	0xFF7
 25872                           tblptrl	equ	0xFF6
 25873                           tablat	equ	0xFF5
 25874                           prodh	equ	0xFF4
 25875                           prodl	equ	0xFF3
 25876                           intcon3	equ	0xFF0
 25877                           postinc0	equ	0xFEE
 25878                           plusw0	equ	0xFEB
 25879                           fsr0h	equ	0xFEA
 25880                           fsr0l	equ	0xFE9
 25881                           wreg	equ	0xFE8
 25882                           indf1	equ	0xFE7
 25883                           postinc1	equ	0xFE6
 25884                           postdec1	equ	0xFE5
 25885                           plusw1	equ	0xFE3
 25886                           fsr1h	equ	0xFE2
 25887                           fsr1l	equ	0xFE1
 25888                           indf2	equ	0xFDF
 25889                           postinc2	equ	0xFDE
 25890                           postdec2	equ	0xFDD
 25891                           plusw2	equ	0xFDB
 25892                           fsr2h	equ	0xFDA
 25893                           fsr2l	equ	0xFD9
 25894                           status	equ	0xFD8
 25895                           
 25896 ;; *************** function _CoordinatorGenericAddress *****************
 25897 ;; Defined at:
 25898 ;;		line 255 in file "../NetworkManager.c"
 25899 ;; Parameters:    Size  Location     Type
 25900 ;;		None
 25901 ;; Auto vars:     Size  Location     Type
 25902 ;;		None
 25903 ;; Return value:  Size  Location     Type
 25904 ;;                  2   27[BANK0 ] struct addr_t_def
 25905 ;; Registers used:
 25906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25907 ;; Tracked objects:
 25908 ;;		On entry : 0/0
 25909 ;;		On exit  : F/0
 25910 ;;		Unchanged: 0/0
 25911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25916 ;;Total ram usage:        2 bytes
 25917 ;; Hardware stack levels used:    1
 25918 ;; Hardware stack levels required when called:    6
 25919 ;; This function calls:
 25920 ;;		_NetworkAddressSizeGet
 25921 ;;		_memset
 25922 ;; This function is called by:
 25923 ;;		_radioReceivedPacket
 25924 ;;		_NetworkUnicastData
 25925 ;;		_TransportManagerTask
 25926 ;;		_NetworkManagerTask
 25927 ;;		_NetworkIssueDataRequest
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text111
 25932  007588                     __ptext111:
 25933                           	opt stack 0
 25934  007588                     _CoordinatorGenericAddress:
 25935                           	opt stack 22
 25936                           
 25937                           ;NetworkManager.c: 257: static addr_t address;
 25938                           ;NetworkManager.c: 261: memset(address.bytes,0x00,NetworkAddressSizeGet());
 25939                           
 25940                           ;incstack = 0
 25941  007588  0EE6               	movlw	low CoordinatorGenericAddress@address
 25942  00758A  0100               	movlb	0	; () banked
 25943  00758C  6F73               	movwf	memset@p1& (0+255),b
 25944  00758E  0E01               	movlw	high CoordinatorGenericAddress@address
 25945  007590  6F74               	movwf	(memset@p1+1)& (0+255),b
 25946  007592  6B76               	clrf	(memset@c+1)& (0+255),b
 25947  007594  6B75               	clrf	memset@c& (0+255),b
 25948  007596  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 25949  00759A  0100               	movlb	0	; () banked
 25950  00759C  6F77               	movwf	memset@n& (0+255),b
 25951  00759E  6B78               	clrf	(memset@n+1)& (0+255),b
 25952  0075A0  EC4C  F03A         	call	_memset	;wreg free
 25953                           
 25954                           ; BSR set to: 0
 25955                           ;NetworkManager.c: 262: return(address);
 25956  0075A4  C1E6  F07B         	movff	CoordinatorGenericAddress@address,?_CoordinatorGenericAddress
 25957  0075A8  C1E7  F07C         	movff	CoordinatorGenericAddress@address+1,?_CoordinatorGenericAddress+1
 25958                           
 25959                           ; BSR set to: 0
 25960  0075AC  0012               	return		;funcret
 25961  0075AE                     __end_of_CoordinatorGenericAddress:
 25962                           	opt stack 0
 25963                           tblptru	equ	0xFF8
 25964                           tblptrh	equ	0xFF7
 25965                           tblptrl	equ	0xFF6
 25966                           tablat	equ	0xFF5
 25967                           prodh	equ	0xFF4
 25968                           prodl	equ	0xFF3
 25969                           intcon3	equ	0xFF0
 25970                           postinc0	equ	0xFEE
 25971                           plusw0	equ	0xFEB
 25972                           fsr0h	equ	0xFEA
 25973                           fsr0l	equ	0xFE9
 25974                           wreg	equ	0xFE8
 25975                           indf1	equ	0xFE7
 25976                           postinc1	equ	0xFE6
 25977                           postdec1	equ	0xFE5
 25978                           plusw1	equ	0xFE3
 25979                           fsr1h	equ	0xFE2
 25980                           fsr1l	equ	0xFE1
 25981                           indf2	equ	0xFDF
 25982                           postinc2	equ	0xFDE
 25983                           postdec2	equ	0xFDD
 25984                           plusw2	equ	0xFDB
 25985                           fsr2h	equ	0xFDA
 25986                           fsr2l	equ	0xFD9
 25987                           status	equ	0xFD8
 25988                           
 25989 ;; *************** function _MiApp_ProtocolInit *****************
 25990 ;; Defined at:
 25991 ;;		line 148 in file "../src/Bridge.c"
 25992 ;; Parameters:    Size  Location     Type
 25993 ;;  bNetworkFree    1    wreg     unsigned char 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  bNetworkFree    1    0[COMRAM] unsigned char 
 25996 ;;  initValue       3   47[BANK0 ] struct .
 25997 ;;  res             1    0        unsigned char 
 25998 ;; Return value:  Size  Location     Type
 25999 ;;                  1    wreg      unsigned char 
 26000 ;; Registers used:
 26001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26002 ;; Tracked objects:
 26003 ;;		On entry : E/0
 26004 ;;		On exit  : 0/0
 26005 ;;		Unchanged: 0/0
 26006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26011 ;;Total ram usage:        4 bytes
 26012 ;; Hardware stack levels used:    1
 26013 ;; Hardware stack levels required when called:    9
 26014 ;; This function calls:
 26015 ;;		_MiApp_SetAddressPan
 26016 ;;		_MiMAC_Init
 26017 ;;		_NetworkSetDeviceType
 26018 ;;		_memset
 26019 ;; This function is called by:
 26020 ;;		_main
 26021 ;; This function uses a non-reentrant model
 26022 ;;
 26023                           
 26024                           	psect	text112
 26025  006B60                     __ptext112:
 26026                           	opt stack 0
 26027  006B60                     _MiApp_ProtocolInit:
 26028                           	opt stack 21
 26029                           
 26030                           ;Bridge.c: 150: bool res;
 26031                           ;Bridge.c: 151: MACINIT_PARAM initValue;
 26032                           ;Bridge.c: 152: initValue.PAddress = (uint8_t *) myLongAddress;
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;incstack = 0
 26036  006B60  0EFC               	movlw	low _myLongAddress
 26037  006B62  0100               	movlb	0	; () banked
 26038  006B64  6F90               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
 26039  006B66  0E01               	movlw	high _myLongAddress
 26040  006B68  6F91               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
 26041                           
 26042                           ; BSR set to: 0
 26043                           ;Bridge.c: 153: initValue.actionFlags.bits.CCAEnable = 1;
 26044  006B6A  838F               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;Bridge.c: 154: initValue.actionFlags.bits.PAddrLength = 2;
 26048  006B6C  518F               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
 26049  006B6E  0B87               	andlw	-121
 26050  006B70  0910               	iorlw	16
 26051  006B72  6F8F               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;Bridge.c: 155: initValue.actionFlags.bits.RepeaterMode = 0;
 26055  006B74  918F               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
 26056                           
 26057                           ; BSR set to: 0
 26058                           ;Bridge.c: 157: memset(ConnectionTable,0x00,sizeof(ConnectionTable));
 26059  006B76  0E78               	movlw	low _ConnectionTable
 26060  006B78  6F73               	movwf	memset@p1& (0+255),b
 26061  006B7A  0E04               	movlw	high _ConnectionTable
 26062  006B7C  6F74               	movwf	(memset@p1+1)& (0+255),b
 26063  006B7E  6B76               	clrf	(memset@c+1)& (0+255),b
 26064  006B80  6B75               	clrf	memset@c& (0+255),b
 26065  006B82  6B78               	clrf	(memset@n+1)& (0+255),b
 26066  006B84  0E37               	movlw	55
 26067  006B86  6F77               	movwf	memset@n& (0+255),b
 26068  006B88  EC4C  F03A         	call	_memset	;wreg free
 26069                           
 26070                           ; BSR set to: 0
 26071  006B8C  C08F  F087         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
 26072  006B90  C090  F088         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
 26073  006B94  C091  F089         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
 26074  006B98  EC55  F028         	call	_MiMAC_Init	;wreg free
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;Bridge.c: 163: MiApp_SetAddressPan(myLongAddress, myPANID);
 26078  006B9C  0EFC               	movlw	low _myLongAddress
 26079  006B9E  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
 26080  006BA0  0E01               	movlw	high _myLongAddress
 26081  006BA2  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
 26082  006BA4  C04D  F085         	movff	_myPANID,MiApp_SetAddressPan@panid
 26083  006BA8  C04E  F086         	movff	_myPANID+1,MiApp_SetAddressPan@panid+1
 26084  006BAC  EC55  F037         	call	_MiApp_SetAddressPan	;wreg free
 26085                           
 26086                           ;Bridge.c: 164: NetworkSetDeviceType(myDeviceType);
 26087  006BB0  0102               	movlb	2	; () banked
 26088  006BB2  51C2               	movf	_myDeviceType& (0+255),w,b
 26089  006BB4  EF1C  F03C         	goto	_NetworkSetDeviceType
 26090  006BB8                     __end_of_MiApp_ProtocolInit:
 26091                           	opt stack 0
 26092                           tblptru	equ	0xFF8
 26093                           tblptrh	equ	0xFF7
 26094                           tblptrl	equ	0xFF6
 26095                           tablat	equ	0xFF5
 26096                           prodh	equ	0xFF4
 26097                           prodl	equ	0xFF3
 26098                           intcon3	equ	0xFF0
 26099                           postinc0	equ	0xFEE
 26100                           plusw0	equ	0xFEB
 26101                           fsr0h	equ	0xFEA
 26102                           fsr0l	equ	0xFE9
 26103                           wreg	equ	0xFE8
 26104                           indf1	equ	0xFE7
 26105                           postinc1	equ	0xFE6
 26106                           postdec1	equ	0xFE5
 26107                           plusw1	equ	0xFE3
 26108                           fsr1h	equ	0xFE2
 26109                           fsr1l	equ	0xFE1
 26110                           indf2	equ	0xFDF
 26111                           postinc2	equ	0xFDE
 26112                           postdec2	equ	0xFDD
 26113                           plusw2	equ	0xFDB
 26114                           fsr2h	equ	0xFDA
 26115                           fsr2l	equ	0xFD9
 26116                           status	equ	0xFD8
 26117                           
 26118 ;; *************** function _NetworkSetDeviceType *****************
 26119 ;; Defined at:
 26120 ;;		line 441 in file "../NetworkManager.c"
 26121 ;; Parameters:    Size  Location     Type
 26122 ;;  dev             1    wreg     enum E145
 26123 ;; Auto vars:     Size  Location     Type
 26124 ;;  dev             1   19[BANK0 ] enum E145
 26125 ;; Return value:  Size  Location     Type
 26126 ;;                  1    wreg      void 
 26127 ;; Registers used:
 26128 ;;		wreg
 26129 ;; Tracked objects:
 26130 ;;		On entry : F/2
 26131 ;;		On exit  : 0/0
 26132 ;;		Unchanged: 0/0
 26133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26138 ;;Total ram usage:        1 bytes
 26139 ;; Hardware stack levels used:    1
 26140 ;; Hardware stack levels required when called:    5
 26141 ;; This function calls:
 26142 ;;		Nothing
 26143 ;; This function is called by:
 26144 ;;		_MiApp_ProtocolInit
 26145 ;; This function uses a non-reentrant model
 26146 ;;
 26147                           
 26148                           	psect	text113
 26149  007838                     __ptext113:
 26150                           	opt stack 0
 26151  007838                     _NetworkSetDeviceType:
 26152                           	opt stack 24
 26153                           
 26154                           ;incstack = 0
 26155                           ;NetworkSetDeviceType@dev stored from wreg
 26156  007838  0100               	movlb	0	; () banked
 26157  00783A  6F73               	movwf	NetworkSetDeviceType@dev& (0+255),b
 26158                           
 26159                           ;NetworkManager.c: 443: DeviceType=dev;
 26160  00783C  C073  F1F8         	movff	NetworkSetDeviceType@dev,_DeviceType
 26161  007840  0012               	return		;funcret
 26162  007842                     __end_of_NetworkSetDeviceType:
 26163                           	opt stack 0
 26164                           tblptru	equ	0xFF8
 26165                           tblptrh	equ	0xFF7
 26166                           tblptrl	equ	0xFF6
 26167                           tablat	equ	0xFF5
 26168                           prodh	equ	0xFF4
 26169                           prodl	equ	0xFF3
 26170                           intcon3	equ	0xFF0
 26171                           postinc0	equ	0xFEE
 26172                           plusw0	equ	0xFEB
 26173                           fsr0h	equ	0xFEA
 26174                           fsr0l	equ	0xFE9
 26175                           wreg	equ	0xFE8
 26176                           indf1	equ	0xFE7
 26177                           postinc1	equ	0xFE6
 26178                           postdec1	equ	0xFE5
 26179                           plusw1	equ	0xFE3
 26180                           fsr1h	equ	0xFE2
 26181                           fsr1l	equ	0xFE1
 26182                           indf2	equ	0xFDF
 26183                           postinc2	equ	0xFDE
 26184                           postdec2	equ	0xFDD
 26185                           plusw2	equ	0xFDB
 26186                           fsr2h	equ	0xFDA
 26187                           fsr2l	equ	0xFD9
 26188                           status	equ	0xFD8
 26189                           
 26190 ;; *************** function _MiMAC_Init *****************
 26191 ;; Defined at:
 26192 ;;		line 648 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 26193 ;; Parameters:    Size  Location     Type
 26194 ;;  initValue       3   39[BANK0 ] struct .
 26195 ;; Auto vars:     Size  Location     Type
 26196 ;;  seed            2   43[BANK0 ] unsigned int 
 26197 ;;  i               1   45[BANK0 ] unsigned char 
 26198 ;; Return value:  Size  Location     Type
 26199 ;;                  1    wreg      unsigned char 
 26200 ;; Registers used:
 26201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26202 ;; Tracked objects:
 26203 ;;		On entry : F/0
 26204 ;;		On exit  : F/0
 26205 ;;		Unchanged: 0/0
 26206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26207 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26208 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26210 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26211 ;;Total ram usage:        7 bytes
 26212 ;; Hardware stack levels used:    1
 26213 ;; Hardware stack levels required when called:    8
 26214 ;; This function calls:
 26215 ;;		_DelayMs
 26216 ;;		_RegisterRead
 26217 ;;		_RegisterSet
 26218 ;;		_SetRFMode
 26219 ;;		_krnd
 26220 ;;		_krndInit
 26221 ;;		_memcpy
 26222 ;; This function is called by:
 26223 ;;		_MiApp_ProtocolInit
 26224 ;; This function uses a non-reentrant model
 26225 ;;
 26226                           
 26227                           	psect	text114
 26228  0050AA                     __ptext114:
 26229                           	opt stack 0
 26230  0050AA                     _MiMAC_Init:
 26231                           	opt stack 21
 26232                           
 26233                           ; BSR set to: 0
 26234                           ;drv_mrf_miwi_mesh_89xa.c: 650: uint8_t i;
 26235                           ;drv_mrf_miwi_mesh_89xa.c: 652: MACInitParams = initValue;
 26236                           
 26237                           ;incstack = 0
 26238  0050AA  C087  F036         	movff	MiMAC_Init@initValue,_MACInitParams
 26239  0050AE  C088  F037         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 26240  0050B2  C089  F038         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 26241                           
 26242                           ; BSR set to: 0
 26243                           ;drv_mrf_miwi_mesh_89xa.c: 654: DelayMs(20);
 26244  0050B6  0E14               	movlw	20
 26245  0050B8  6F7B               	movwf	DelayMs@ms& (0+255),b
 26246  0050BA  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 26247  0050BC  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 26248  0050BE  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 26249  0050C0  EC4E  F02F         	call	_DelayMs	;wreg free
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;drv_mrf_miwi_mesh_89xa.c: 655: LATDbits.LATD1 = 1;
 26253  0050C4  828C               	bsf	3980,1,c	;volatile
 26254                           
 26255                           ; BSR set to: 0
 26256                           ;drv_mrf_miwi_mesh_89xa.c: 656: LATAbits.LATA5 = 1;
 26257  0050C6  8A89               	bsf	3977,5,c	;volatile
 26258                           
 26259                           ; BSR set to: 0
 26260                           ;drv_mrf_miwi_mesh_89xa.c: 659: ReceivedBankIndex = 0xFF;
 26261  0050C8  683E               	setf	_ReceivedBankIndex,c
 26262                           
 26263                           ; BSR set to: 0
 26264                           ;drv_mrf_miwi_mesh_89xa.c: 661: for(i = 0; i < 2; i++)
 26265  0050CA  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 26266  0050CC                     l14368:
 26267                           
 26268                           ; BSR set to: 0
 26269                           ;drv_mrf_miwi_mesh_89xa.c: 662: {
 26270                           ;drv_mrf_miwi_mesh_89xa.c: 663: RxPacket[i].flags.Val = 0;
 26271  0050CC  518D               	movf	MiMAC_Init@i& (0+255),w,b
 26272  0050CE  0D47               	mullw	71
 26273  0050D0  0E00               	movlw	low _RxPacket
 26274  0050D2  24F3               	addwf	prodl,w,c
 26275  0050D4  6ED9               	movwf	fsr2l,c
 26276  0050D6  0E03               	movlw	high _RxPacket
 26277  0050D8  20F4               	addwfc	prodh,w,c
 26278  0050DA  6EDA               	movwf	fsr2h,c
 26279  0050DC  6ADF               	clrf	indf2,c
 26280                           
 26281                           ; BSR set to: 0
 26282  0050DE  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 26283                           
 26284                           ; BSR set to: 0
 26285  0050E0  0E01               	movlw	1
 26286  0050E2  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 26287  0050E4  D7F3               	goto	l14368
 26288                           
 26289                           ; BSR set to: 0
 26290                           ;drv_mrf_miwi_mesh_89xa.c: 664: }
 26291                           ;drv_mrf_miwi_mesh_89xa.c: 688: OutgoingFrameCounter = 1;
 26292  0050E6  0102               	movlb	2	; () banked
 26293  0050E8  6F9B               	movwf	_OutgoingFrameCounter& (0+255),b
 26294  0050EA  6B9C               	clrf	(_OutgoingFrameCounter+1)& (0+255),b
 26295  0050EC  6B9D               	clrf	(_OutgoingFrameCounter+2)& (0+255),b
 26296  0050EE  6B9E               	clrf	(_OutgoingFrameCounter+3)& (0+255),b
 26297                           
 26298                           ; BSR set to: 2
 26299                           ;drv_mrf_miwi_mesh_89xa.c: 690: memcpy(key,mySecurityKey,8);
 26300  0050F0  0E8C               	movlw	low _key
 26301  0050F2  0100               	movlb	0	; () banked
 26302  0050F4  6F75               	movwf	memcpy@d1& (0+255),b
 26303  0050F6  0E02               	movlw	high _key
 26304  0050F8  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 26305  0050FA  0E99               	movlw	low _mySecurityKey
 26306  0050FC  6F77               	movwf	memcpy@s1& (0+255),b
 26307  0050FE  0EFF               	movlw	high _mySecurityKey
 26308  005100  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 26309  005102  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 26310  005104  0E08               	movlw	8
 26311  005106  6F79               	movwf	memcpy@n& (0+255),b
 26312  005108  EC5D  F036         	call	_memcpy	;wreg free
 26313                           
 26314                           ; BSR set to: 0
 26315                           ;drv_mrf_miwi_mesh_89xa.c: 695: for (i = 0 ; i <= 31; i++)
 26316  00510C  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 26317  00510E                     l14384:
 26318                           
 26319                           ; BSR set to: 0
 26320                           ;drv_mrf_miwi_mesh_89xa.c: 696: {
 26321                           ;drv_mrf_miwi_mesh_89xa.c: 697: RegisterSet(InitConfigRegs[i]);
 26322  00510E  518D               	movf	MiMAC_Init@i& (0+255),w,b
 26323  005110  0D02               	mullw	2
 26324  005112  0E09               	movlw	low _InitConfigRegs
 26325  005114  24F3               	addwf	prodl,w,c
 26326  005116  6EF6               	movwf	tblptrl,c
 26327  005118  0EFF               	movlw	high _InitConfigRegs
 26328  00511A  20F4               	addwfc	prodh,w,c
 26329  00511C  6EF7               	movwf	tblptrh,c
 26330  00511E                     	if	0	;There are less than 3 active tblptr bytes
 26331  00511E                     	endif
 26332  00511E  0009               	tblrd		*+
 26333  005120  CFF5 F075          	movff	tablat,RegisterSet@setting
 26334  005124  000A               	tblrd		*-
 26335  005126  CFF5 F076          	movff	tablat,RegisterSet@setting+1
 26336  00512A  EC61  F03A         	call	_RegisterSet	;wreg free
 26337  00512E  0100               	movlb	0	; () banked
 26338  005130  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 26339                           
 26340                           ; BSR set to: 0
 26341  005132  0E1F               	movlw	31
 26342  005134  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 26343  005136  D7EB               	goto	l14384
 26344                           
 26345                           ; BSR set to: 0
 26346                           ;drv_mrf_miwi_mesh_89xa.c: 698: }
 26347                           ;drv_mrf_miwi_mesh_89xa.c: 699: SetRFMode(0x20);
 26348  005138  0E20               	movlw	32
 26349  00513A  EC99  F033         	call	_SetRFMode
 26350                           
 26351                           ;drv_mrf_miwi_mesh_89xa.c: 700: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 26352  00513E  0100               	movlb	0	; () banked
 26353  005140  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 26354  005142  0E4E               	movlw	78
 26355  005144  6F75               	movwf	RegisterSet@setting& (0+255),b
 26356  005146  EC61  F03A         	call	_RegisterSet	;wreg free
 26357                           
 26358                           ;drv_mrf_miwi_mesh_89xa.c: 701: SetRFMode(0x40);
 26359  00514A  0E40               	movlw	64
 26360  00514C  EC99  F033         	call	_SetRFMode
 26361                           
 26362                           ;drv_mrf_miwi_mesh_89xa.c: 704: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 26363  005150  0E1C               	movlw	28
 26364  005152  0100               	movlb	0	; () banked
 26365  005154  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 26366  005156  0E0F               	movlw	15
 26367  005158  6F75               	movwf	RegisterSet@setting& (0+255),b
 26368  00515A  EC61  F03A         	call	_RegisterSet	;wreg free
 26369                           
 26370                           ;drv_mrf_miwi_mesh_89xa.c: 706: SetRFMode(0x60);
 26371  00515E  0E60               	movlw	96
 26372  005160  EC99  F033         	call	_SetRFMode
 26373                           
 26374                           ;drv_mrf_miwi_mesh_89xa.c: 711: INTCON3bits.INT1IF = 0;
 26375  005164  90F0               	bcf	intcon3,0,c	;volatile
 26376                           
 26377                           ;drv_mrf_miwi_mesh_89xa.c: 712: INTCON3bits.INT1IE = 1;
 26378  005166  86F0               	bsf	intcon3,3,c	;volatile
 26379                           
 26380                           ;drv_mrf_miwi_mesh_89xa.c: 714: uint16_t seed=0;
 26381  005168  0100               	movlb	0	; () banked
 26382  00516A  6B8B               	clrf	MiMAC_Init@seed& (0+255),b
 26383  00516C  6B8C               	clrf	(MiMAC_Init@seed+1)& (0+255),b
 26384                           
 26385                           ; BSR set to: 0
 26386                           ;drv_mrf_miwi_mesh_89xa.c: 715: for(i=0;i<16;i++)
 26387  00516E  6B8D               	clrf	MiMAC_Init@i& (0+255),b
 26388  005170                     l14410:
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;drv_mrf_miwi_mesh_89xa.c: 716: {
 26392                           ;drv_mrf_miwi_mesh_89xa.c: 717: seed<<=1;
 26393  005170  90D8               	bcf	status,0,c
 26394  005172  378B               	rlcf	MiMAC_Init@seed& (0+255),f,b
 26395  005174  378C               	rlcf	(MiMAC_Init@seed+1)& (0+255),f,b
 26396                           
 26397                           ; BSR set to: 0
 26398                           ;drv_mrf_miwi_mesh_89xa.c: 718: seed|=(((RegisterRead(0x2800>>8))>>1) & 0x01);
 26399  005176  0E28               	movlw	40
 26400  005178  ECC2  F039         	call	_RegisterRead
 26401  00517C  6F8A               	movwf	??_MiMAC_Init& (0+255),b
 26402  00517E  90D8               	bcf	status,0,c
 26403  005180  318A               	rrcf	??_MiMAC_Init& (0+255),w,b
 26404  005182  0B01               	andlw	1
 26405  005184  138B               	iorwf	MiMAC_Init@seed& (0+255),f,b
 26406                           
 26407                           ; BSR set to: 0
 26408  005186  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
 26409                           
 26410                           ; BSR set to: 0
 26411  005188  0E0F               	movlw	15
 26412  00518A  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
 26413  00518C  D7F1               	goto	l14410
 26414                           
 26415                           ; BSR set to: 0
 26416                           ;drv_mrf_miwi_mesh_89xa.c: 719: }
 26417                           ;drv_mrf_miwi_mesh_89xa.c: 721: krndInit(seed);
 26418  00518E  C08B  F073         	movff	MiMAC_Init@seed,krndInit@value
 26419  005192  C08C  F074         	movff	MiMAC_Init@seed+1,krndInit@value+1
 26420  005196  ECFD  F02C         	call	_krndInit	;wreg free
 26421                           
 26422                           ;drv_mrf_miwi_mesh_89xa.c: 722: MACSeq = krnd();
 26423  00519A  EC94  F01F         	call	_krnd	;wreg free
 26424  00519E  5173               	movf	?_krnd& (0+255),w,b
 26425  0051A0  6E3C               	movwf	_MACSeq,c
 26426                           
 26427                           ; BSR set to: 0
 26428                           
 26429                           ; BSR set to: 0
 26430                           ;drv_mrf_miwi_mesh_89xa.c: 724: return 1;
 26431  0051A2  0C01               	retlw	1	;funcret
 26432  0051A4                     __end_of_MiMAC_Init:
 26433                           	opt stack 0
 26434                           tblptru	equ	0xFF8
 26435                           tblptrh	equ	0xFF7
 26436                           tblptrl	equ	0xFF6
 26437                           tablat	equ	0xFF5
 26438                           prodh	equ	0xFF4
 26439                           prodl	equ	0xFF3
 26440                           intcon3	equ	0xFF0
 26441                           postinc0	equ	0xFEE
 26442                           plusw0	equ	0xFEB
 26443                           fsr0h	equ	0xFEA
 26444                           fsr0l	equ	0xFE9
 26445                           wreg	equ	0xFE8
 26446                           indf1	equ	0xFE7
 26447                           postinc1	equ	0xFE6
 26448                           postdec1	equ	0xFE5
 26449                           plusw1	equ	0xFE3
 26450                           fsr1h	equ	0xFE2
 26451                           fsr1l	equ	0xFE1
 26452                           indf2	equ	0xFDF
 26453                           postinc2	equ	0xFDE
 26454                           postdec2	equ	0xFDD
 26455                           plusw2	equ	0xFDB
 26456                           fsr2h	equ	0xFDA
 26457                           fsr2l	equ	0xFD9
 26458                           status	equ	0xFD8
 26459                           
 26460 ;; *************** function _krndInit *****************
 26461 ;; Defined at:
 26462 ;;		line 7 in file "../krnd.c"
 26463 ;; Parameters:    Size  Location     Type
 26464 ;;  value           2   19[BANK0 ] unsigned int 
 26465 ;; Auto vars:     Size  Location     Type
 26466 ;;		None
 26467 ;; Return value:  Size  Location     Type
 26468 ;;                  1    wreg      void 
 26469 ;; Registers used:
 26470 ;;		wreg, status,2, status,0
 26471 ;; Tracked objects:
 26472 ;;		On entry : F/0
 26473 ;;		On exit  : F/2
 26474 ;;		Unchanged: 0/0
 26475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26479 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26480 ;;Total ram usage:        6 bytes
 26481 ;; Hardware stack levels used:    1
 26482 ;; Hardware stack levels required when called:    5
 26483 ;; This function calls:
 26484 ;;		Nothing
 26485 ;; This function is called by:
 26486 ;;		_MiMAC_Init
 26487 ;; This function uses a non-reentrant model
 26488 ;;
 26489                           
 26490                           	psect	text115
 26491  0059FA                     __ptext115:
 26492                           	opt stack 0
 26493  0059FA                     _krndInit:
 26494                           	opt stack 23
 26495                           
 26496                           ; BSR set to: 0
 26497                           ;krnd.c: 9: x|=(value<<0);
 26498                           
 26499                           ; BSR set to: 0
 26500                           ;incstack = 0
 26501  0059FA  5173               	movf	krndInit@value& (0+255),w,b
 26502  0059FC  6F75               	movwf	??_krndInit& (0+255),b
 26503  0059FE  5174               	movf	(krndInit@value+1)& (0+255),w,b
 26504  005A00  6F76               	movwf	(??_krndInit+1)& (0+255),b
 26505  005A02  6B77               	clrf	(??_krndInit+2)& (0+255),b
 26506  005A04  6B78               	clrf	(??_krndInit+3)& (0+255),b
 26507  005A06  5175               	movf	??_krndInit& (0+255),w,b
 26508  005A08  0101               	movlb	1	; () banked
 26509  005A0A  13EE               	iorwf	_x& (0+255),f,b
 26510  005A0C  0100               	movlb	0	; () banked
 26511  005A0E  5176               	movf	(??_krndInit+1)& (0+255),w,b
 26512  005A10  0101               	movlb	1	; () banked
 26513  005A12  13EF               	iorwf	(_x+1)& (0+255),f,b
 26514  005A14  0100               	movlb	0	; () banked
 26515  005A16  5177               	movf	(??_krndInit+2)& (0+255),w,b
 26516  005A18  0101               	movlb	1	; () banked
 26517  005A1A  13F0               	iorwf	(_x+2)& (0+255),f,b
 26518  005A1C  0100               	movlb	0	; () banked
 26519  005A1E  5178               	movf	(??_krndInit+3)& (0+255),w,b
 26520  005A20  0101               	movlb	1	; () banked
 26521  005A22  13F1               	iorwf	(_x+3)& (0+255),f,b
 26522                           
 26523                           ;krnd.c: 10: y|=(((uint32_t)value)<<16);
 26524  005A24  0100               	movlb	0	; () banked
 26525  005A26  5173               	movf	krndInit@value& (0+255),w,b
 26526  005A28  6F75               	movwf	??_krndInit& (0+255),b
 26527  005A2A  5174               	movf	(krndInit@value+1)& (0+255),w,b
 26528  005A2C  6F76               	movwf	(??_krndInit+1)& (0+255),b
 26529  005A2E  6B77               	clrf	(??_krndInit+2)& (0+255),b
 26530  005A30  6B78               	clrf	(??_krndInit+3)& (0+255),b
 26531  005A32  C076  F078         	movff	??_krndInit+1,??_krndInit+3
 26532  005A36  C075  F077         	movff	??_krndInit,??_krndInit+2
 26533  005A3A  6B76               	clrf	(??_krndInit+1)& (0+255),b
 26534  005A3C  6B75               	clrf	??_krndInit& (0+255),b
 26535  005A3E  5175               	movf	??_krndInit& (0+255),w,b
 26536  005A40  1249               	iorwf	_y,f,c
 26537  005A42  5176               	movf	(??_krndInit+1)& (0+255),w,b
 26538  005A44  124A               	iorwf	_y+1,f,c
 26539  005A46  5177               	movf	(??_krndInit+2)& (0+255),w,b
 26540  005A48  124B               	iorwf	_y+2,f,c
 26541  005A4A  5178               	movf	(??_krndInit+3)& (0+255),w,b
 26542  005A4C  124C               	iorwf	_y+3,f,c
 26543                           
 26544                           ;krnd.c: 11: z|=(((uint32_t)value)<<24);
 26545  005A4E  5173               	movf	krndInit@value& (0+255),w,b
 26546  005A50  6F75               	movwf	??_krndInit& (0+255),b
 26547  005A52  5174               	movf	(krndInit@value+1)& (0+255),w,b
 26548  005A54  6F76               	movwf	(??_krndInit+1)& (0+255),b
 26549  005A56  6B77               	clrf	(??_krndInit+2)& (0+255),b
 26550  005A58  6B78               	clrf	(??_krndInit+3)& (0+255),b
 26551  005A5A  C075  F078         	movff	??_krndInit,??_krndInit+3
 26552  005A5E  6B77               	clrf	(??_krndInit+2)& (0+255),b
 26553  005A60  6B76               	clrf	(??_krndInit+1)& (0+255),b
 26554  005A62  6B75               	clrf	??_krndInit& (0+255),b
 26555  005A64  5175               	movf	??_krndInit& (0+255),w,b
 26556  005A66  0101               	movlb	1	; () banked
 26557  005A68  13F2               	iorwf	_z& (0+255),f,b
 26558  005A6A  0100               	movlb	0	; () banked
 26559  005A6C  5176               	movf	(??_krndInit+1)& (0+255),w,b
 26560  005A6E  0101               	movlb	1	; () banked
 26561  005A70  13F3               	iorwf	(_z+1)& (0+255),f,b
 26562  005A72  0100               	movlb	0	; () banked
 26563  005A74  5177               	movf	(??_krndInit+2)& (0+255),w,b
 26564  005A76  0101               	movlb	1	; () banked
 26565  005A78  13F4               	iorwf	(_z+2)& (0+255),f,b
 26566  005A7A  0100               	movlb	0	; () banked
 26567  005A7C  5178               	movf	(??_krndInit+3)& (0+255),w,b
 26568  005A7E  0101               	movlb	1	; () banked
 26569  005A80  13F5               	iorwf	(_z+3)& (0+255),f,b
 26570                           
 26571                           ;krnd.c: 12: w&=(value);
 26572  005A82  0100               	movlb	0	; () banked
 26573  005A84  5173               	movf	krndInit@value& (0+255),w,b
 26574  005A86  6F75               	movwf	??_krndInit& (0+255),b
 26575  005A88  5174               	movf	(krndInit@value+1)& (0+255),w,b
 26576  005A8A  6F76               	movwf	(??_krndInit+1)& (0+255),b
 26577  005A8C  6B77               	clrf	(??_krndInit+2)& (0+255),b
 26578  005A8E  6B78               	clrf	(??_krndInit+3)& (0+255),b
 26579  005A90  5175               	movf	??_krndInit& (0+255),w,b
 26580  005A92  1645               	andwf	_w,f,c
 26581  005A94  5176               	movf	(??_krndInit+1)& (0+255),w,b
 26582  005A96  1646               	andwf	_w+1,f,c
 26583  005A98  5177               	movf	(??_krndInit+2)& (0+255),w,b
 26584  005A9A  1647               	andwf	_w+2,f,c
 26585  005A9C  5178               	movf	(??_krndInit+3)& (0+255),w,b
 26586  005A9E  1648               	andwf	_w+3,f,c
 26587                           
 26588                           ; BSR set to: 0
 26589                           ;krnd.c: 13: c=value;
 26590  005AA0  C073  F24A         	movff	krndInit@value,_c
 26591  005AA4  C074  F24B         	movff	krndInit@value+1,_c+1
 26592  005AA8  0102               	movlb	2	; () banked
 26593  005AAA  6B4C               	clrf	(_c+2)& (0+255),b
 26594  005AAC  6B4D               	clrf	(_c+3)& (0+255),b
 26595                           
 26596                           ; BSR set to: 2
 26597  005AAE  0012               	return		;funcret
 26598  005AB0                     __end_of_krndInit:
 26599                           	opt stack 0
 26600                           tblptru	equ	0xFF8
 26601                           tblptrh	equ	0xFF7
 26602                           tblptrl	equ	0xFF6
 26603                           tablat	equ	0xFF5
 26604                           prodh	equ	0xFF4
 26605                           prodl	equ	0xFF3
 26606                           intcon3	equ	0xFF0
 26607                           postinc0	equ	0xFEE
 26608                           plusw0	equ	0xFEB
 26609                           fsr0h	equ	0xFEA
 26610                           fsr0l	equ	0xFE9
 26611                           wreg	equ	0xFE8
 26612                           indf1	equ	0xFE7
 26613                           postinc1	equ	0xFE6
 26614                           postdec1	equ	0xFE5
 26615                           plusw1	equ	0xFE3
 26616                           fsr1h	equ	0xFE2
 26617                           fsr1l	equ	0xFE1
 26618                           indf2	equ	0xFDF
 26619                           postinc2	equ	0xFDE
 26620                           postdec2	equ	0xFDD
 26621                           plusw2	equ	0xFDB
 26622                           fsr2h	equ	0xFDA
 26623                           fsr2l	equ	0xFD9
 26624                           status	equ	0xFD8
 26625                           
 26626 ;; *************** function _RegisterRead *****************
 26627 ;; Defined at:
 26628 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 26629 ;; Parameters:    Size  Location     Type
 26630 ;;  address         1    wreg     unsigned char 
 26631 ;; Auto vars:     Size  Location     Type
 26632 ;;  address         1   21[BANK0 ] unsigned char 
 26633 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 26634 ;;  value           1   22[BANK0 ] unsigned char 
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      unsigned char 
 26637 ;; Registers used:
 26638 ;;		wreg, status,2, status,0, cstack
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : F/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;Total ram usage:        3 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:    7
 26651 ;; This function calls:
 26652 ;;		_SPIGet
 26653 ;;		_SPIPut
 26654 ;; This function is called by:
 26655 ;;		_TxPacket
 26656 ;;		_MiMAC_Init
 26657 ;; This function uses a non-reentrant model
 26658 ;;
 26659                           
 26660                           	psect	text116
 26661  007384                     __ptext116:
 26662                           	opt stack 0
 26663  007384                     _RegisterRead:
 26664                           	opt stack 15
 26665                           
 26666                           ; BSR set to: 2
 26667                           ;incstack = 0
 26668                           ;RegisterRead@address stored from wreg
 26669  007384  0100               	movlb	0	; () banked
 26670  007386  6F75               	movwf	RegisterRead@address& (0+255),b
 26671                           
 26672                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 26673                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 26674  007388  0E00               	movlw	0
 26675  00738A  B6F0               	btfsc	intcon3,3,c	;volatile
 26676  00738C  0E01               	movlw	1
 26677  00738E  6F77               	movwf	RegisterRead@IRQ1select& (0+255),b
 26678                           
 26679                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 26680  007390  96F0               	bcf	intcon3,3,c	;volatile
 26681                           
 26682                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 26683  007392  928C               	bcf	3980,1,c	;volatile
 26684                           
 26685                           ; BSR set to: 0
 26686                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 26687  007394  8D75               	bsf	RegisterRead@address& (0+255),6,b
 26688                           
 26689                           ; BSR set to: 0
 26690                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 26691  007396  5175               	movf	RegisterRead@address& (0+255),w,b
 26692  007398  EC29  F03B         	call	_SPIPut
 26693                           
 26694                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 26695  00739C  EC21  F03C         	call	_SPIGet	;wreg free
 26696  0073A0  0100               	movlb	0	; () banked
 26697  0073A2  6F76               	movwf	RegisterRead@value& (0+255),b
 26698                           
 26699                           ; BSR set to: 0
 26700                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 26701  0073A4  828C               	bsf	3980,1,c	;volatile
 26702                           
 26703                           ; BSR set to: 0
 26704                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 26705  0073A6  B177               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 26706  0073A8  D002               	bra	u12315
 26707  0073AA  96F0               	bcf	intcon3,3,c	;volatile
 26708  0073AC  D001               	bra	u12316
 26709  0073AE                     u12315:
 26710  0073AE  86F0               	bsf	intcon3,3,c	;volatile
 26711  0073B0                     u12316:
 26712                           
 26713                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 26714  0073B0  0100               	movlb	0	; () banked
 26715  0073B2  5176               	movf	RegisterRead@value& (0+255),w,b
 26716                           
 26717                           ; BSR set to: 0
 26718  0073B4  0012               	return		;funcret
 26719  0073B6                     __end_of_RegisterRead:
 26720                           	opt stack 0
 26721                           tblptru	equ	0xFF8
 26722                           tblptrh	equ	0xFF7
 26723                           tblptrl	equ	0xFF6
 26724                           tablat	equ	0xFF5
 26725                           prodh	equ	0xFF4
 26726                           prodl	equ	0xFF3
 26727                           intcon3	equ	0xFF0
 26728                           postinc0	equ	0xFEE
 26729                           plusw0	equ	0xFEB
 26730                           fsr0h	equ	0xFEA
 26731                           fsr0l	equ	0xFE9
 26732                           wreg	equ	0xFE8
 26733                           indf1	equ	0xFE7
 26734                           postinc1	equ	0xFE6
 26735                           postdec1	equ	0xFE5
 26736                           plusw1	equ	0xFE3
 26737                           fsr1h	equ	0xFE2
 26738                           fsr1l	equ	0xFE1
 26739                           indf2	equ	0xFDF
 26740                           postinc2	equ	0xFDE
 26741                           postdec2	equ	0xFDD
 26742                           plusw2	equ	0xFDB
 26743                           fsr2h	equ	0xFDA
 26744                           fsr2l	equ	0xFD9
 26745                           status	equ	0xFD8
 26746                           
 26747 ;; *************** function _SPIGet *****************
 26748 ;; Defined at:
 26749 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 26750 ;; Parameters:    Size  Location     Type
 26751 ;;		None
 26752 ;; Auto vars:     Size  Location     Type
 26753 ;;		None
 26754 ;; Return value:  Size  Location     Type
 26755 ;;                  1    wreg      unsigned char 
 26756 ;; Registers used:
 26757 ;;		wreg, status,2, cstack
 26758 ;; Tracked objects:
 26759 ;;		On entry : 0/0
 26760 ;;		On exit  : 0/0
 26761 ;;		Unchanged: 0/0
 26762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26767 ;;Total ram usage:        0 bytes
 26768 ;; Hardware stack levels used:    1
 26769 ;; Hardware stack levels required when called:    6
 26770 ;; This function calls:
 26771 ;;		_SPIPut
 26772 ;; This function is called by:
 26773 ;;		_RegisterRead
 26774 ;; This function uses a non-reentrant model
 26775 ;;
 26776                           
 26777                           	psect	text117
 26778  007842                     __ptext117:
 26779                           	opt stack 0
 26780  007842                     _SPIGet:
 26781                           	opt stack 15
 26782                           
 26783                           ;spi.c: 310: SPIPut(0x00);
 26784                           
 26785                           ; BSR set to: 0
 26786                           ;incstack = 0
 26787  007842  0E00               	movlw	0
 26788  007844  EC29  F03B         	call	_SPIPut
 26789                           
 26790                           ;spi.c: 311: return SSPBUF;
 26791  007848  50C9               	movf	4041,w,c	;volatile
 26792  00784A  0012               	return		;funcret
 26793  00784C                     __end_of_SPIGet:
 26794                           	opt stack 0
 26795                           tblptru	equ	0xFF8
 26796                           tblptrh	equ	0xFF7
 26797                           tblptrl	equ	0xFF6
 26798                           tablat	equ	0xFF5
 26799                           prodh	equ	0xFF4
 26800                           prodl	equ	0xFF3
 26801                           intcon3	equ	0xFF0
 26802                           postinc0	equ	0xFEE
 26803                           plusw0	equ	0xFEB
 26804                           fsr0h	equ	0xFEA
 26805                           fsr0l	equ	0xFE9
 26806                           wreg	equ	0xFE8
 26807                           indf1	equ	0xFE7
 26808                           postinc1	equ	0xFE6
 26809                           postdec1	equ	0xFE5
 26810                           plusw1	equ	0xFE3
 26811                           fsr1h	equ	0xFE2
 26812                           fsr1l	equ	0xFE1
 26813                           indf2	equ	0xFDF
 26814                           postinc2	equ	0xFDE
 26815                           postdec2	equ	0xFDD
 26816                           plusw2	equ	0xFDB
 26817                           fsr2h	equ	0xFDA
 26818                           fsr2l	equ	0xFD9
 26819                           status	equ	0xFD8
 26820                           
 26821 ;; *************** function _MiApp_IsMemberOfNetwork *****************
 26822 ;; Defined at:
 26823 ;;		line 281 in file "../src/Bridge.c"
 26824 ;; Parameters:    Size  Location     Type
 26825 ;;		None
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;		None
 26828 ;; Return value:  Size  Location     Type
 26829 ;;                  1    wreg      unsigned char 
 26830 ;; Registers used:
 26831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26832 ;; Tracked objects:
 26833 ;;		On entry : 0/1
 26834 ;;		On exit  : F/0
 26835 ;;		Unchanged: 0/0
 26836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26841 ;;Total ram usage:        0 bytes
 26842 ;; Hardware stack levels used:    1
 26843 ;; Hardware stack levels required when called:   10
 26844 ;; This function calls:
 26845 ;;		_IsMemberOfNetwork
 26846 ;; This function is called by:
 26847 ;;		_main
 26848 ;; This function uses a non-reentrant model
 26849 ;;
 26850                           
 26851                           	psect	text118
 26852  00789A                     __ptext118:
 26853                           	opt stack 0
 26854  00789A                     _MiApp_IsMemberOfNetwork:
 26855                           	opt stack 20
 26856                           
 26857                           ;Bridge.c: 283: return(IsMemberOfNetwork());
 26858                           
 26859                           ;incstack = 0
 26860  00789A  EF4F  F03C         	goto	_IsMemberOfNetwork	;wreg free
 26861  00789E                     __end_of_MiApp_IsMemberOfNetwork:
 26862                           	opt stack 0
 26863                           tblptru	equ	0xFF8
 26864                           tblptrh	equ	0xFF7
 26865                           tblptrl	equ	0xFF6
 26866                           tablat	equ	0xFF5
 26867                           prodh	equ	0xFF4
 26868                           prodl	equ	0xFF3
 26869                           intcon3	equ	0xFF0
 26870                           postinc0	equ	0xFEE
 26871                           plusw0	equ	0xFEB
 26872                           fsr0h	equ	0xFEA
 26873                           fsr0l	equ	0xFE9
 26874                           wreg	equ	0xFE8
 26875                           indf1	equ	0xFE7
 26876                           postinc1	equ	0xFE6
 26877                           postdec1	equ	0xFE5
 26878                           plusw1	equ	0xFE3
 26879                           fsr1h	equ	0xFE2
 26880                           fsr1l	equ	0xFE1
 26881                           indf2	equ	0xFDF
 26882                           postinc2	equ	0xFDE
 26883                           postdec2	equ	0xFDD
 26884                           plusw2	equ	0xFDB
 26885                           fsr2h	equ	0xFDA
 26886                           fsr2l	equ	0xFD9
 26887                           status	equ	0xFD8
 26888                           
 26889 ;; *************** function _IsMemberOfNetwork *****************
 26890 ;; Defined at:
 26891 ;;		line 380 in file "../NetworkManager.c"
 26892 ;; Parameters:    Size  Location     Type
 26893 ;;		None
 26894 ;; Auto vars:     Size  Location     Type
 26895 ;;		None
 26896 ;; Return value:  Size  Location     Type
 26897 ;;                  1    wreg      unsigned char 
 26898 ;; Registers used:
 26899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26900 ;; Tracked objects:
 26901 ;;		On entry : 0/1
 26902 ;;		On exit  : F/0
 26903 ;;		Unchanged: 0/0
 26904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26909 ;;Total ram usage:        0 bytes
 26910 ;; Hardware stack levels used:    1
 26911 ;; Hardware stack levels required when called:    9
 26912 ;; This function calls:
 26913 ;;		_NetworkHasRoute
 26914 ;; This function is called by:
 26915 ;;		_MiApp_IsMemberOfNetwork
 26916 ;;		_radioReceivedPacket
 26917 ;; This function uses a non-reentrant model
 26918 ;;
 26919                           
 26920                           	psect	text119
 26921  00789E                     __ptext119:
 26922                           	opt stack 0
 26923  00789E                     _IsMemberOfNetwork:
 26924                           	opt stack 18
 26925                           
 26926                           ;NetworkManager.c: 382: return(NetworkHasRoute());
 26927                           
 26928                           ; BSR set to: 0
 26929                           ;incstack = 0
 26930  00789E  EF21  F039         	goto	_NetworkHasRoute	;wreg free
 26931  0078A2                     __end_of_IsMemberOfNetwork:
 26932                           	opt stack 0
 26933                           tblptru	equ	0xFF8
 26934                           tblptrh	equ	0xFF7
 26935                           tblptrl	equ	0xFF6
 26936                           tablat	equ	0xFF5
 26937                           prodh	equ	0xFF4
 26938                           prodl	equ	0xFF3
 26939                           intcon3	equ	0xFF0
 26940                           postinc0	equ	0xFEE
 26941                           plusw0	equ	0xFEB
 26942                           fsr0h	equ	0xFEA
 26943                           fsr0l	equ	0xFE9
 26944                           wreg	equ	0xFE8
 26945                           indf1	equ	0xFE7
 26946                           postinc1	equ	0xFE6
 26947                           postdec1	equ	0xFE5
 26948                           plusw1	equ	0xFE3
 26949                           fsr1h	equ	0xFE2
 26950                           fsr1l	equ	0xFE1
 26951                           indf2	equ	0xFDF
 26952                           postinc2	equ	0xFDE
 26953                           postdec2	equ	0xFDD
 26954                           plusw2	equ	0xFDB
 26955                           fsr2h	equ	0xFDA
 26956                           fsr2l	equ	0xFD9
 26957                           status	equ	0xFD8
 26958                           
 26959 ;; *************** function _NetworkHasRoute *****************
 26960 ;; Defined at:
 26961 ;;		line 209 in file "../NetworkManager.c"
 26962 ;; Parameters:    Size  Location     Type
 26963 ;;		None
 26964 ;; Auto vars:     Size  Location     Type
 26965 ;;  res             1   41[BANK0 ] unsigned char 
 26966 ;; Return value:  Size  Location     Type
 26967 ;;                  1    wreg      unsigned char 
 26968 ;; Registers used:
 26969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26970 ;; Tracked objects:
 26971 ;;		On entry : 0/0
 26972 ;;		On exit  : F/0
 26973 ;;		Unchanged: 0/0
 26974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26979 ;;Total ram usage:        2 bytes
 26980 ;; Hardware stack levels used:    1
 26981 ;; Hardware stack levels required when called:    8
 26982 ;; This function calls:
 26983 ;;		_NetworkGetDeviceType
 26984 ;;		_isInvalidAddress
 26985 ;; This function is called by:
 26986 ;;		_networkSendBeacon
 26987 ;;		_TransportManagerTask
 26988 ;;		_TMSendFormedPacketTowardsCoordinator
 26989 ;;		_IsMemberOfNetwork
 26990 ;; This function uses a non-reentrant model
 26991 ;;
 26992                           
 26993                           	psect	text120
 26994  007242                     __ptext120:
 26995                           	opt stack 0
 26996  007242                     _NetworkHasRoute:
 26997                           	opt stack 19
 26998                           
 26999                           ;NetworkManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 27000                           
 27001                           ; BSR set to: 0
 27002                           ;incstack = 0
 27003  007242  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 27004  007246  0900               	iorlw	0
 27005  007248  E104               	bnz	l2009
 27006                           
 27007                           ; BSR set to: 1
 27008                           ;NetworkManager.c: 213: {
 27009                           ;NetworkManager.c: 214: res=1;
 27010  00724A  0E01               	movlw	1
 27011  00724C  0100               	movlb	0	; () banked
 27012  00724E  6F89               	movwf	NetworkHasRoute@res& (0+255),b
 27013                           
 27014                           ;NetworkManager.c: 215: }else
 27015  007250  D011               	goto	l2010
 27016  007252                     l2009:
 27017                           
 27018                           ; BSR set to: 1
 27019                           ;NetworkManager.c: 216: {
 27020                           ;NetworkManager.c: 217: res=(routeInfo.hasCheckedIn && !isInvalidAddress(routeInfo.paren
      +                          t));
 27021  007252  0100               	movlb	0	; () banked
 27022  007254  6B88               	clrf	_NetworkHasRoute$4294& (0+255),b
 27023                           
 27024                           ; BSR set to: 0
 27025  007256  0102               	movlb	2	; () banked
 27026  007258  519A               	movf	(_routeInfo+6)& (0+255),w,b
 27027  00725A  E00A               	bz	l12156
 27028                           
 27029                           ; BSR set to: 2
 27030  00725C  C294  F086         	movff	_routeInfo,isInvalidAddress@address
 27031  007260  C295  F087         	movff	_routeInfo+1,isInvalidAddress@address+1
 27032  007264  ECEC  F03B         	call	_isInvalidAddress	;wreg free
 27033  007268  0900               	iorlw	0
 27034  00726A  E102               	bnz	l12156
 27035                           
 27036                           ; BSR set to: 0
 27037  00726C  0E01               	movlw	1
 27038  00726E  6F88               	movwf	_NetworkHasRoute$4294& (0+255),b
 27039  007270                     l12156:
 27040  007270  C088  F089         	movff	_NetworkHasRoute$4294,NetworkHasRoute@res
 27041  007274                     l2010:
 27042                           
 27043                           ;NetworkManager.c: 218: }
 27044                           ;NetworkManager.c: 219: return(res);
 27045  007274  0100               	movlb	0	; () banked
 27046  007276  5189               	movf	NetworkHasRoute@res& (0+255),w,b
 27047                           
 27048                           ; BSR set to: 0
 27049  007278  0012               	return		;funcret
 27050  00727A                     __end_of_NetworkHasRoute:
 27051                           	opt stack 0
 27052                           tblptru	equ	0xFF8
 27053                           tblptrh	equ	0xFF7
 27054                           tblptrl	equ	0xFF6
 27055                           tablat	equ	0xFF5
 27056                           prodh	equ	0xFF4
 27057                           prodl	equ	0xFF3
 27058                           intcon3	equ	0xFF0
 27059                           postinc0	equ	0xFEE
 27060                           plusw0	equ	0xFEB
 27061                           fsr0h	equ	0xFEA
 27062                           fsr0l	equ	0xFE9
 27063                           wreg	equ	0xFE8
 27064                           indf1	equ	0xFE7
 27065                           postinc1	equ	0xFE6
 27066                           postdec1	equ	0xFE5
 27067                           plusw1	equ	0xFE3
 27068                           fsr1h	equ	0xFE2
 27069                           fsr1l	equ	0xFE1
 27070                           indf2	equ	0xFDF
 27071                           postinc2	equ	0xFDE
 27072                           postdec2	equ	0xFDD
 27073                           plusw2	equ	0xFDB
 27074                           fsr2h	equ	0xFDA
 27075                           fsr2l	equ	0xFD9
 27076                           status	equ	0xFD8
 27077                           
 27078 ;; *************** function _isInvalidAddress *****************
 27079 ;; Defined at:
 27080 ;;		line 230 in file "../NetworkManager.c"
 27081 ;; Parameters:    Size  Location     Type
 27082 ;;  address         2   38[BANK0 ] struct addr_t_def
 27083 ;; Auto vars:     Size  Location     Type
 27084 ;;		None
 27085 ;; Return value:  Size  Location     Type
 27086 ;;                  1    wreg      unsigned char 
 27087 ;; Registers used:
 27088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27089 ;; Tracked objects:
 27090 ;;		On entry : 8/0
 27091 ;;		On exit  : F/0
 27092 ;;		Unchanged: 0/0
 27093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27098 ;;Total ram usage:        2 bytes
 27099 ;; Hardware stack levels used:    1
 27100 ;; Hardware stack levels required when called:    7
 27101 ;; This function calls:
 27102 ;;		_isBroadcastAddress
 27103 ;; This function is called by:
 27104 ;;		_RouteManagerPerformUpdate
 27105 ;;		_routingTableFind
 27106 ;;		_RouteManagerProcessReceive
 27107 ;;		_RouteManagerShouldInsert
 27108 ;;		_networkSendBeacon
 27109 ;;		_NetworkManagerTask
 27110 ;;		_NetworkHasRoute
 27111 ;;		_NetworkManagerProcessIncomingData
 27112 ;;		_IsNetworkDevice
 27113 ;; This function uses a non-reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text121
 27117  0077D8                     __ptext121:
 27118                           	opt stack 0
 27119  0077D8                     _isInvalidAddress:
 27120                           	opt stack 19
 27121                           
 27122                           ;NetworkManager.c: 232: return(isBroadcastAddress(address));
 27123                           
 27124                           ; BSR set to: 0
 27125                           ;incstack = 0
 27126  0077D8  C086  F07B         	movff	isInvalidAddress@address,isBroadcastAddress@address
 27127  0077DC  C087  F07C         	movff	isInvalidAddress@address+1,isBroadcastAddress@address+1
 27128  0077E0  EFEA  F037         	goto	_isBroadcastAddress	;wreg free
 27129  0077E4                     __end_of_isInvalidAddress:
 27130                           	opt stack 0
 27131                           tblptru	equ	0xFF8
 27132                           tblptrh	equ	0xFF7
 27133                           tblptrl	equ	0xFF6
 27134                           tablat	equ	0xFF5
 27135                           prodh	equ	0xFF4
 27136                           prodl	equ	0xFF3
 27137                           intcon3	equ	0xFF0
 27138                           postinc0	equ	0xFEE
 27139                           plusw0	equ	0xFEB
 27140                           fsr0h	equ	0xFEA
 27141                           fsr0l	equ	0xFE9
 27142                           wreg	equ	0xFE8
 27143                           indf1	equ	0xFE7
 27144                           postinc1	equ	0xFE6
 27145                           postdec1	equ	0xFE5
 27146                           plusw1	equ	0xFE3
 27147                           fsr1h	equ	0xFE2
 27148                           fsr1l	equ	0xFE1
 27149                           indf2	equ	0xFDF
 27150                           postinc2	equ	0xFDE
 27151                           postdec2	equ	0xFDD
 27152                           plusw2	equ	0xFDB
 27153                           fsr2h	equ	0xFDA
 27154                           fsr2l	equ	0xFD9
 27155                           status	equ	0xFD8
 27156                           
 27157 ;; *************** function _isBroadcastAddress *****************
 27158 ;; Defined at:
 27159 ;;		line 222 in file "../NetworkManager.c"
 27160 ;; Parameters:    Size  Location     Type
 27161 ;;  address         2   27[BANK0 ] struct addr_t_def
 27162 ;; Auto vars:     Size  Location     Type
 27163 ;;  addr            8   29[BANK0 ] const unsigned char [8]
 27164 ;;  res             1   37[BANK0 ] unsigned char 
 27165 ;; Return value:  Size  Location     Type
 27166 ;;                  1    wreg      unsigned char 
 27167 ;; Registers used:
 27168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27169 ;; Tracked objects:
 27170 ;;		On entry : 8/1
 27171 ;;		On exit  : F/0
 27172 ;;		Unchanged: 0/0
 27173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27175 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27177 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27178 ;;Total ram usage:       11 bytes
 27179 ;; Hardware stack levels used:    1
 27180 ;; Hardware stack levels required when called:    6
 27181 ;; This function calls:
 27182 ;;		_NetworkAddressSizeGet
 27183 ;;		_memcmp
 27184 ;; This function is called by:
 27185 ;;		_radioReceivedPacket
 27186 ;;		_TMSendFormedPacketToRFD
 27187 ;;		_isInvalidAddress
 27188 ;; This function uses a non-reentrant model
 27189 ;;
 27190                           
 27191                           	psect	text122
 27192  006FD4                     __ptext122:
 27193                           	opt stack 0
 27194  006FD4                     _isBroadcastAddress:
 27195                           	opt stack 19
 27196                           
 27197                           ;NetworkManager.c: 225: const uint8_t addr[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
 27198                           
 27199                           ; BSR set to: 0
 27200                           ;incstack = 0
 27201  006FD4  0E91               	movlw	low isBroadcastAddress@F537
 27202  006FD6  6EF6               	movwf	tblptrl,c
 27203  006FD8                     	if	1	;There is more than 1 active tblptr byte
 27204  006FD8  0EFF               	movlw	high isBroadcastAddress@F537
 27205  006FDA  6EF7               	movwf	tblptrh,c
 27206  006FDC                     	endif
 27207  006FDC                     	if	0	;There are less than 3 active tblptr bytes
 27208  006FDC                     	endif
 27209  006FDC  EE20  F07D         	lfsr	2,isBroadcastAddress@addr
 27210  006FE0  0E07               	movlw	7
 27211  006FE2                     u12460:
 27212  006FE2  0009               	tblrd		*+
 27213  006FE4  CFF5 FFDE          	movff	tablat,postinc2
 27214  006FE8  06E8               	decf	wreg,f,c
 27215  006FEA  E2FB               	bc	u12460
 27216                           
 27217                           ;NetworkManager.c: 226: res=(memcmp(address.bytes,addr,NetworkAddressSizeGet())==0);
 27218  006FEC  0E7B               	movlw	low isBroadcastAddress@address
 27219  006FEE  0100               	movlb	0	; () banked
 27220  006FF0  6F73               	movwf	memcmp@s1& (0+255),b
 27221  006FF2  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 27222  006FF4  0E7D               	movlw	low isBroadcastAddress@addr
 27223  006FF6  6F75               	movwf	memcmp@s2& (0+255),b
 27224  006FF8  6B76               	clrf	(memcmp@s2+1)& (0+255),b
 27225  006FFA  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 27226  006FFE  0100               	movlb	0	; () banked
 27227  007000  6F77               	movwf	memcmp@n& (0+255),b
 27228  007002  6B78               	clrf	(memcmp@n+1)& (0+255),b
 27229  007004  EC07  F036         	call	_memcmp	;wreg free
 27230  007008  5173               	movf	?_memcmp& (0+255),w,b
 27231  00700A  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 27232  00700C  0E01               	movlw	1
 27233  00700E  A4D8               	btfss	status,2,c
 27234  007010  0E00               	movlw	0
 27235  007012  6F85               	movwf	isBroadcastAddress@res& (0+255),b
 27236                           
 27237                           ; BSR set to: 0
 27238                           ;NetworkManager.c: 227: return(res);
 27239  007014  5185               	movf	isBroadcastAddress@res& (0+255),w,b
 27240                           
 27241                           ; BSR set to: 0
 27242  007016  0012               	return		;funcret
 27243  007018                     __end_of_isBroadcastAddress:
 27244                           	opt stack 0
 27245                           tblptru	equ	0xFF8
 27246                           tblptrh	equ	0xFF7
 27247                           tblptrl	equ	0xFF6
 27248                           tablat	equ	0xFF5
 27249                           prodh	equ	0xFF4
 27250                           prodl	equ	0xFF3
 27251                           intcon3	equ	0xFF0
 27252                           postinc0	equ	0xFEE
 27253                           plusw0	equ	0xFEB
 27254                           fsr0h	equ	0xFEA
 27255                           fsr0l	equ	0xFE9
 27256                           wreg	equ	0xFE8
 27257                           indf1	equ	0xFE7
 27258                           postinc1	equ	0xFE6
 27259                           postdec1	equ	0xFE5
 27260                           plusw1	equ	0xFE3
 27261                           fsr1h	equ	0xFE2
 27262                           fsr1l	equ	0xFE1
 27263                           indf2	equ	0xFDF
 27264                           postinc2	equ	0xFDE
 27265                           postdec2	equ	0xFDD
 27266                           plusw2	equ	0xFDB
 27267                           fsr2h	equ	0xFDA
 27268                           fsr2l	equ	0xFD9
 27269                           status	equ	0xFD8
 27270                           
 27271 ;; *************** function _memcmp *****************
 27272 ;; Defined at:
 27273 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
 27274 ;; Parameters:    Size  Location     Type
 27275 ;;  s1              2   19[BANK0 ] PTR const void 
 27276 ;;		 -> a1.bytes(2), isSameAddress@a1(2), address.bytes(2), isBroadcastAddress@address(2), 
 27277 ;;		 -> hc_table(360), src.bytes(2), main@src(2), 
 27278 ;;  s2              2   21[BANK0 ] PTR const void 
 27279 ;;		 -> a2.bytes(2), isSameAddress@a2(2), isBroadcastAddress@addr(8), isKnownPacket@zeros(12), 
 27280 ;;		 -> src1.bytes(2), main@src1(2), 
 27281 ;;  n               2   23[BANK0 ] unsigned int 
 27282 ;; Auto vars:     Size  Location     Type
 27283 ;;		None
 27284 ;; Return value:  Size  Location     Type
 27285 ;;                  2   19[BANK0 ] int 
 27286 ;; Registers used:
 27287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27288 ;; Tracked objects:
 27289 ;;		On entry : F/0
 27290 ;;		On exit  : F/0
 27291 ;;		Unchanged: 0/0
 27292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27296 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27297 ;;Total ram usage:        8 bytes
 27298 ;; Hardware stack levels used:    1
 27299 ;; Hardware stack levels required when called:    5
 27300 ;; This function calls:
 27301 ;;		Nothing
 27302 ;; This function is called by:
 27303 ;;		_main
 27304 ;;		_isKnownPacket
 27305 ;;		_isBroadcastAddress
 27306 ;;		_isSameAddress
 27307 ;; This function uses a non-reentrant model
 27308 ;;
 27309                           
 27310                           	psect	text123
 27311  006C0E                     __ptext123:
 27312                           	opt stack 0
 27313  006C0E                     _memcmp:
 27314                           	opt stack 25
 27315                           
 27316                           ; BSR set to: 0
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;incstack = 0
 27320  006C0E  D020               	goto	l11584
 27321  006C10                     l11576:
 27322                           
 27323                           ; BSR set to: 0
 27324  006C10  C075  FFD9         	movff	memcmp@s2,fsr2l
 27325  006C14  C076  FFDA         	movff	memcmp@s2+1,fsr2h
 27326  006C18  C073  FFE1         	movff	memcmp@s1,fsr1l
 27327  006C1C  C074  FFE2         	movff	memcmp@s1+1,fsr1h
 27328  006C20  50DE               	movf	postinc2,w,c
 27329  006C22  18E6               	xorwf	postinc1,w,c
 27330  006C24  E011               	bz	l11582
 27331                           
 27332                           ; BSR set to: 0
 27333  006C26  C073  FFD9         	movff	memcmp@s1,fsr2l
 27334  006C2A  C074  FFDA         	movff	memcmp@s1+1,fsr2h
 27335  006C2E  50DF               	movf	indf2,w,c
 27336  006C30  6F79               	movwf	??_memcmp& (0+255),b
 27337  006C32  C075  FFD9         	movff	memcmp@s2,fsr2l
 27338  006C36  C076  FFDA         	movff	memcmp@s2+1,fsr2h
 27339  006C3A  50DF               	movf	indf2,w,c
 27340  006C3C  5D79               	subwf	??_memcmp& (0+255),w,b
 27341  006C3E  6F73               	movwf	?_memcmp& (0+255),b
 27342  006C40  6B74               	clrf	(?_memcmp+1)& (0+255),b
 27343  006C42  A0D8               	btfss	status,0,c
 27344  006C44  0774               	decf	(?_memcmp+1)& (0+255),f,b
 27345  006C46  0012               	return	
 27346  006C48                     l11582:
 27347                           
 27348                           ; BSR set to: 0
 27349  006C48  4B73               	infsnz	memcmp@s1& (0+255),f,b
 27350  006C4A  2B74               	incf	(memcmp@s1+1)& (0+255),f,b
 27351  006C4C  4B75               	infsnz	memcmp@s2& (0+255),f,b
 27352  006C4E  2B76               	incf	(memcmp@s2+1)& (0+255),f,b
 27353  006C50                     l11584:
 27354                           
 27355                           ; BSR set to: 0
 27356  006C50  0777               	decf	memcmp@n& (0+255),f,b
 27357  006C52  A0D8               	btfss	status,0,c
 27358  006C54  0778               	decf	(memcmp@n+1)& (0+255),f,b
 27359  006C56  2977               	incf	memcmp@n& (0+255),w,b
 27360  006C58  E1DB               	bnz	l11576
 27361  006C5A  2978               	incf	(memcmp@n+1)& (0+255),w,b
 27362  006C5C  E1D9               	bnz	l11576
 27363                           
 27364                           ; BSR set to: 0
 27365  006C5E  6B73               	clrf	?_memcmp& (0+255),b
 27366  006C60  6B74               	clrf	(?_memcmp+1)& (0+255),b
 27367                           
 27368                           ; BSR set to: 0
 27369  006C62  0012               	return		;funcret
 27370  006C64                     __end_of_memcmp:
 27371                           	opt stack 0
 27372                           tblptru	equ	0xFF8
 27373                           tblptrh	equ	0xFF7
 27374                           tblptrl	equ	0xFF6
 27375                           tablat	equ	0xFF5
 27376                           prodh	equ	0xFF4
 27377                           prodl	equ	0xFF3
 27378                           intcon3	equ	0xFF0
 27379                           postinc0	equ	0xFEE
 27380                           plusw0	equ	0xFEB
 27381                           fsr0h	equ	0xFEA
 27382                           fsr0l	equ	0xFE9
 27383                           wreg	equ	0xFE8
 27384                           indf1	equ	0xFE7
 27385                           postinc1	equ	0xFE6
 27386                           postdec1	equ	0xFE5
 27387                           plusw1	equ	0xFE3
 27388                           fsr1h	equ	0xFE2
 27389                           fsr1l	equ	0xFE1
 27390                           indf2	equ	0xFDF
 27391                           postinc2	equ	0xFDE
 27392                           postdec2	equ	0xFDD
 27393                           plusw2	equ	0xFDB
 27394                           fsr2h	equ	0xFDA
 27395                           fsr2l	equ	0xFD9
 27396                           status	equ	0xFD8
 27397                           
 27398 ;; *************** function _MiApp_GetParentAddress *****************
 27399 ;; Defined at:
 27400 ;;		line 286 in file "../src/Bridge.c"
 27401 ;; Parameters:    Size  Location     Type
 27402 ;;		None
 27403 ;; Auto vars:     Size  Location     Type
 27404 ;;		None
 27405 ;; Return value:  Size  Location     Type
 27406 ;;                  2   21[BANK0 ] struct addr_t_def
 27407 ;; Registers used:
 27408 ;;		cstack
 27409 ;; Tracked objects:
 27410 ;;		On entry : D/0
 27411 ;;		On exit  : C/0
 27412 ;;		Unchanged: C/0
 27413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27418 ;;Total ram usage:        2 bytes
 27419 ;; Hardware stack levels used:    1
 27420 ;; Hardware stack levels required when called:    6
 27421 ;; This function calls:
 27422 ;;		_NetworkGetParentAddress
 27423 ;; This function is called by:
 27424 ;;		_main
 27425 ;; This function uses a non-reentrant model
 27426 ;;
 27427                           
 27428                           	psect	text124
 27429  00779A                     __ptext124:
 27430                           	opt stack 0
 27431  00779A                     _MiApp_GetParentAddress:
 27432                           	opt stack 24
 27433                           
 27434                           ;Bridge.c: 288: return(NetworkGetParentAddress());
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;incstack = 0
 27438  00779A  EC26  F03C         	call	_NetworkGetParentAddress	;wreg free
 27439  00779E  C073  F075         	movff	?_NetworkGetParentAddress,?_MiApp_GetParentAddress
 27440  0077A2  C074  F076         	movff	?_NetworkGetParentAddress+1,?_MiApp_GetParentAddress+1
 27441  0077A6  0012               	return		;funcret
 27442  0077A8                     __end_of_MiApp_GetParentAddress:
 27443                           	opt stack 0
 27444                           tblptru	equ	0xFF8
 27445                           tblptrh	equ	0xFF7
 27446                           tblptrl	equ	0xFF6
 27447                           tablat	equ	0xFF5
 27448                           prodh	equ	0xFF4
 27449                           prodl	equ	0xFF3
 27450                           intcon3	equ	0xFF0
 27451                           postinc0	equ	0xFEE
 27452                           plusw0	equ	0xFEB
 27453                           fsr0h	equ	0xFEA
 27454                           fsr0l	equ	0xFE9
 27455                           wreg	equ	0xFE8
 27456                           indf1	equ	0xFE7
 27457                           postinc1	equ	0xFE6
 27458                           postdec1	equ	0xFE5
 27459                           plusw1	equ	0xFE3
 27460                           fsr1h	equ	0xFE2
 27461                           fsr1l	equ	0xFE1
 27462                           indf2	equ	0xFDF
 27463                           postinc2	equ	0xFDE
 27464                           postdec2	equ	0xFDD
 27465                           plusw2	equ	0xFDB
 27466                           fsr2h	equ	0xFDA
 27467                           fsr2l	equ	0xFD9
 27468                           status	equ	0xFD8
 27469                           
 27470 ;; *************** function _NetworkGetParentAddress *****************
 27471 ;; Defined at:
 27472 ;;		line 250 in file "../NetworkManager.c"
 27473 ;; Parameters:    Size  Location     Type
 27474 ;;		None
 27475 ;; Auto vars:     Size  Location     Type
 27476 ;;		None
 27477 ;; Return value:  Size  Location     Type
 27478 ;;                  2   19[BANK0 ] struct addr_t_def
 27479 ;; Registers used:
 27480 ;;		None
 27481 ;; Tracked objects:
 27482 ;;		On entry : C/1
 27483 ;;		On exit  : C/0
 27484 ;;		Unchanged: C/0
 27485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27490 ;;Total ram usage:        2 bytes
 27491 ;; Hardware stack levels used:    1
 27492 ;; Hardware stack levels required when called:    5
 27493 ;; This function calls:
 27494 ;;		Nothing
 27495 ;; This function is called by:
 27496 ;;		_MiApp_GetParentAddress
 27497 ;;		_radioReceivedPacket
 27498 ;;		_RouteManagerShouldInsert
 27499 ;;		_le_findWorstNeighborIdx
 27500 ;;		_le_findRandomNeighborIdx
 27501 ;;		_TransportManagerTask
 27502 ;;		_TMSendFormedPacketToRFD
 27503 ;;		_NetworkManagerTask
 27504 ;;		_NetworkPrepareSendPacket
 27505 ;;		_NetworkIssueDataRequest
 27506 ;; This function uses a non-reentrant model
 27507 ;;
 27508                           
 27509                           	psect	text125
 27510  00784C                     __ptext125:
 27511                           	opt stack 0
 27512  00784C                     _NetworkGetParentAddress:
 27513                           	opt stack 21
 27514                           
 27515                           ;NetworkManager.c: 252: return(routeInfo.parent);
 27516                           
 27517                           ;incstack = 0
 27518  00784C  C294  F073         	movff	_routeInfo,?_NetworkGetParentAddress
 27519  007850  C295  F074         	movff	_routeInfo+1,?_NetworkGetParentAddress+1
 27520  007854  0012               	return		;funcret
 27521  007856                     __end_of_NetworkGetParentAddress:
 27522                           	opt stack 0
 27523                           tblptru	equ	0xFF8
 27524                           tblptrh	equ	0xFF7
 27525                           tblptrl	equ	0xFF6
 27526                           tablat	equ	0xFF5
 27527                           prodh	equ	0xFF4
 27528                           prodl	equ	0xFF3
 27529                           intcon3	equ	0xFF0
 27530                           postinc0	equ	0xFEE
 27531                           plusw0	equ	0xFEB
 27532                           fsr0h	equ	0xFEA
 27533                           fsr0l	equ	0xFE9
 27534                           wreg	equ	0xFE8
 27535                           indf1	equ	0xFE7
 27536                           postinc1	equ	0xFE6
 27537                           postdec1	equ	0xFE5
 27538                           plusw1	equ	0xFE3
 27539                           fsr1h	equ	0xFE2
 27540                           fsr1l	equ	0xFE1
 27541                           indf2	equ	0xFDF
 27542                           postinc2	equ	0xFDE
 27543                           postdec2	equ	0xFDD
 27544                           plusw2	equ	0xFDB
 27545                           fsr2h	equ	0xFDA
 27546                           fsr2l	equ	0xFD9
 27547                           status	equ	0xFD8
 27548                           
 27549 ;; *************** function _MiApp_EstablishConnection *****************
 27550 ;; Defined at:
 27551 ;;		line 186 in file "../src/Bridge.c"
 27552 ;; Parameters:    Size  Location     Type
 27553 ;;  ActiveScanIn    1    wreg     unsigned char 
 27554 ;;  Mode            1   58[BANK0 ] unsigned char 
 27555 ;; Auto vars:     Size  Location     Type
 27556 ;;  ActiveScanIn    1   62[BANK0 ] unsigned char 
 27557 ;;  src             2   60[BANK0 ] struct addr_t_def
 27558 ;;  dev             1   59[BANK0 ] enum E8070
 27559 ;; Return value:  Size  Location     Type
 27560 ;;                  1    wreg      unsigned char 
 27561 ;; Registers used:
 27562 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27563 ;; Tracked objects:
 27564 ;;		On entry : F/0
 27565 ;;		On exit  : F/1
 27566 ;;		Unchanged: 0/0
 27567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27568 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27569 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27571 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27572 ;;Total ram usage:        5 bytes
 27573 ;; Hardware stack levels used:    1
 27574 ;; Hardware stack levels required when called:   12
 27575 ;; This function calls:
 27576 ;;		_MiApp_SetAddressPan
 27577 ;;		_MiApp_SetChannel
 27578 ;;		_NetworkInit
 27579 ;;		_memcpy
 27580 ;; This function is called by:
 27581 ;;		_main
 27582 ;; This function uses a non-reentrant model
 27583 ;;
 27584                           
 27585                           	psect	text126
 27586  005E02                     __ptext126:
 27587                           	opt stack 0
 27588  005E02                     _MiApp_EstablishConnection:
 27589                           	opt stack 18
 27590                           
 27591                           ;incstack = 0
 27592                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 27593  005E02  6F9E               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 27594                           
 27595                           ;Bridge.c: 188: addr_t src;
 27596                           ;Bridge.c: 189: DeviceType_t dev=DeviceRFD;
 27597  005E04  0E01               	movlw	1
 27598  005E06  0100               	movlb	0	; () banked
 27599  005E08  6F9B               	movwf	MiApp_EstablishConnection@dev& (0+255),b
 27600                           
 27601                           ; BSR set to: 0
 27602                           ;Bridge.c: 191: memcpy(src.bytes,myLongAddress,2);
 27603  005E0A  0E9C               	movlw	low MiApp_EstablishConnection@src
 27604  005E0C  6F75               	movwf	memcpy@d1& (0+255),b
 27605  005E0E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 27606  005E10  0EFC               	movlw	low _myLongAddress
 27607  005E12  6F77               	movwf	memcpy@s1& (0+255),b
 27608  005E14  0E01               	movlw	high _myLongAddress
 27609  005E16  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 27610  005E18  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27611  005E1A  0E02               	movlw	2
 27612  005E1C  6F79               	movwf	memcpy@n& (0+255),b
 27613  005E1E  EC5D  F036         	call	_memcpy	;wreg free
 27614                           
 27615                           ; BSR set to: 0
 27616                           ;Bridge.c: 192: if(ActiveScanIndex<5)
 27617  005E22  0E05               	movlw	5
 27618  005E24  619E               	cpfslt	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 27619  005E26  D027               	goto	l15300
 27620                           
 27621                           ; BSR set to: 0
 27622                           ;Bridge.c: 193: {
 27623                           ;Bridge.c: 194: if(ActiveScanResults[ActiveScanIndex].Flags!=0)
 27624  005E28  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 27625  005E2A  0D05               	mullw	5
 27626  005E2C  0E59               	movlw	low (_ActiveScanResults+4)
 27627  005E2E  24F3               	addwf	prodl,w,c
 27628  005E30  6ED9               	movwf	fsr2l,c
 27629  005E32  0E02               	movlw	high (_ActiveScanResults+4)
 27630  005E34  20F4               	addwfc	prodh,w,c
 27631  005E36  6EDA               	movwf	fsr2h,c
 27632  005E38  50DF               	movf	indf2,w,c
 27633  005E3A  E01D               	bz	l15300
 27634                           
 27635                           ; BSR set to: 0
 27636                           ;Bridge.c: 195: {
 27637                           ;Bridge.c: 196: MiApp_SetAddressPan(src.bytes, ActiveScanResults[ActiveScanIndex].PANID.
      +                          Val);
 27638  005E3C  0E9C               	movlw	low MiApp_EstablishConnection@src
 27639  005E3E  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
 27640  005E40  6B84               	clrf	(MiApp_SetAddressPan@address+1)& (0+255),b
 27641  005E42  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 27642  005E44  0D05               	mullw	5
 27643  005E46  0E56               	movlw	low (_ActiveScanResults+1)
 27644  005E48  24F3               	addwf	prodl,w,c
 27645  005E4A  6ED9               	movwf	fsr2l,c
 27646  005E4C  0E02               	movlw	high (_ActiveScanResults+1)
 27647  005E4E  20F4               	addwfc	prodh,w,c
 27648  005E50  6EDA               	movwf	fsr2h,c
 27649  005E52  CFDE F085          	movff	postinc2,MiApp_SetAddressPan@panid
 27650  005E56  CFDD F086          	movff	postdec2,MiApp_SetAddressPan@panid+1
 27651  005E5A  EC55  F037         	call	_MiApp_SetAddressPan	;wreg free
 27652                           
 27653                           ;Bridge.c: 197: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 27654  005E5E  0100               	movlb	0	; () banked
 27655  005E60  519E               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 27656  005E62  0D05               	mullw	5
 27657  005E64  0E55               	movlw	low _ActiveScanResults
 27658  005E66  24F3               	addwf	prodl,w,c
 27659  005E68  6ED9               	movwf	fsr2l,c
 27660  005E6A  0E02               	movlw	high _ActiveScanResults
 27661  005E6C  20F4               	addwfc	prodh,w,c
 27662  005E6E  6EDA               	movwf	fsr2h,c
 27663  005E70  50DF               	movf	indf2,w,c
 27664  005E72  ECF8  F03B         	call	_MiApp_SetChannel
 27665  005E76                     l15300:
 27666                           
 27667                           ;Bridge.c: 198: }
 27668                           ;Bridge.c: 199: }
 27669                           ;Bridge.c: 200: if(myDeviceType!=DeviceCoordinator)
 27670  005E76  0102               	movlb	2	; () banked
 27671  005E78  51C2               	movf	_myDeviceType& (0+255),w,b
 27672  005E7A  E002               	bz	l914
 27673                           
 27674                           ; BSR set to: 2
 27675                           ;Bridge.c: 201: {
 27676                           ;Bridge.c: 203: dev=myDeviceType;
 27677  005E7C  C2C2  F09B         	movff	_myDeviceType,MiApp_EstablishConnection@dev
 27678  005E80                     l914:
 27679                           
 27680                           ; BSR set to: 2
 27681                           ;Bridge.c: 204: }
 27682                           ;Bridge.c: 206: myDeviceType=dev;
 27683  005E80  C09B  F2C2         	movff	MiApp_EstablishConnection@dev,_myDeviceType
 27684                           
 27685                           ; BSR set to: 2
 27686                           ;Bridge.c: 207: NetworkInit(src, myPANID, dev);
 27687  005E84  C09C  F093         	movff	MiApp_EstablishConnection@src,NetworkInit@address
 27688  005E88  C09D  F094         	movff	MiApp_EstablishConnection@src+1,NetworkInit@address+1
 27689  005E8C  C04D  F095         	movff	_myPANID,NetworkInit@PANID
 27690  005E90  C04E  F096         	movff	_myPANID+1,NetworkInit@PANID+1
 27691  005E94  C09B  F097         	movff	MiApp_EstablishConnection@dev,NetworkInit@dev
 27692  005E98  EFD2  F028         	goto	_NetworkInit	;wreg free
 27693  005E9C                     __end_of_MiApp_EstablishConnection:
 27694                           	opt stack 0
 27695                           tblptru	equ	0xFF8
 27696                           tblptrh	equ	0xFF7
 27697                           tblptrl	equ	0xFF6
 27698                           tablat	equ	0xFF5
 27699                           prodh	equ	0xFF4
 27700                           prodl	equ	0xFF3
 27701                           intcon3	equ	0xFF0
 27702                           postinc0	equ	0xFEE
 27703                           plusw0	equ	0xFEB
 27704                           fsr0h	equ	0xFEA
 27705                           fsr0l	equ	0xFE9
 27706                           wreg	equ	0xFE8
 27707                           indf1	equ	0xFE7
 27708                           postinc1	equ	0xFE6
 27709                           postdec1	equ	0xFE5
 27710                           plusw1	equ	0xFE3
 27711                           fsr1h	equ	0xFE2
 27712                           fsr1l	equ	0xFE1
 27713                           indf2	equ	0xFDF
 27714                           postinc2	equ	0xFDE
 27715                           postdec2	equ	0xFDD
 27716                           plusw2	equ	0xFDB
 27717                           fsr2h	equ	0xFDA
 27718                           fsr2l	equ	0xFD9
 27719                           status	equ	0xFD8
 27720                           
 27721 ;; *************** function _NetworkInit *****************
 27722 ;; Defined at:
 27723 ;;		line 166 in file "../NetworkManager.c"
 27724 ;; Parameters:    Size  Location     Type
 27725 ;;  address         2   51[BANK0 ] struct addr_t_def
 27726 ;;  PANID           2   53[BANK0 ] unsigned int 
 27727 ;;  dev             1   55[BANK0 ] enum E145
 27728 ;; Auto vars:     Size  Location     Type
 27729 ;;  devPanID        2   56[BANK0 ] unsigned int 
 27730 ;; Return value:  Size  Location     Type
 27731 ;;                  1    wreg      void 
 27732 ;; Registers used:
 27733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27734 ;; Tracked objects:
 27735 ;;		On entry : F/2
 27736 ;;		On exit  : F/1
 27737 ;;		Unchanged: 0/0
 27738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27739 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27742 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27743 ;;Total ram usage:        7 bytes
 27744 ;; Hardware stack levels used:    1
 27745 ;; Hardware stack levels required when called:   11
 27746 ;; This function calls:
 27747 ;;		_BeaconManagerInit
 27748 ;;		_BroadcastManagerInit
 27749 ;;		_CacheInit
 27750 ;;		_DeviceManagerInit
 27751 ;;		_LinkEstimatorInit
 27752 ;;		_NetworkAddressSizeGet
 27753 ;;		_NetworkSetAddressPAN
 27754 ;;		_RouteManagerInit
 27755 ;;		_TransportManagerInit
 27756 ;;		_TunnelManagerInit
 27757 ;;		_krnd
 27758 ;;		_memcpy
 27759 ;;		_memset
 27760 ;; This function is called by:
 27761 ;;		_MiApp_EstablishConnection
 27762 ;; This function uses a non-reentrant model
 27763 ;;
 27764                           
 27765                           	psect	text127
 27766  0051A4                     __ptext127:
 27767                           	opt stack 0
 27768  0051A4                     _NetworkInit:
 27769                           	opt stack 18
 27770                           
 27771                           ; BSR set to: 2
 27772                           ;NetworkManager.c: 168: uint16_t devPanID;
 27773                           ;NetworkManager.c: 170: DeviceType=dev;
 27774                           
 27775                           ; BSR set to: 1
 27776                           ;incstack = 0
 27777  0051A4  C097  F1F8         	movff	NetworkInit@dev,_DeviceType
 27778                           
 27779                           ; BSR set to: 2
 27780                           ;NetworkManager.c: 171: memset(&routeInfo,0x00,sizeof(route_info_t));
 27781  0051A8  0E94               	movlw	low _routeInfo
 27782  0051AA  0100               	movlb	0	; () banked
 27783  0051AC  6F73               	movwf	memset@p1& (0+255),b
 27784  0051AE  0E02               	movlw	high _routeInfo
 27785  0051B0  6F74               	movwf	(memset@p1+1)& (0+255),b
 27786  0051B2  6B76               	clrf	(memset@c+1)& (0+255),b
 27787  0051B4  6B75               	clrf	memset@c& (0+255),b
 27788  0051B6  6B78               	clrf	(memset@n+1)& (0+255),b
 27789  0051B8  0E07               	movlw	7
 27790  0051BA  6F77               	movwf	memset@n& (0+255),b
 27791  0051BC  EC4C  F03A         	call	_memset	;wreg free
 27792                           
 27793                           ; BSR set to: 0
 27794                           ;NetworkManager.c: 173: routeInfo.congested=0;
 27795  0051C0  0102               	movlb	2	; () banked
 27796  0051C2  6B99               	clrf	(_routeInfo+5)& (0+255),b
 27797                           
 27798                           ; BSR set to: 2
 27799                           ;NetworkManager.c: 174: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 27800  0051C4  0EFA               	movlw	low _MyAddress
 27801  0051C6  0100               	movlb	0	; () banked
 27802  0051C8  6F75               	movwf	memcpy@d1& (0+255),b
 27803  0051CA  0E01               	movlw	high _MyAddress
 27804  0051CC  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27805  0051CE  0E93               	movlw	low NetworkInit@address
 27806  0051D0  6F77               	movwf	memcpy@s1& (0+255),b
 27807  0051D2  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 27808  0051D4  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 27809  0051D8  0100               	movlb	0	; () banked
 27810  0051DA  6F79               	movwf	memcpy@n& (0+255),b
 27811  0051DC  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27812  0051DE  EC5D  F036         	call	_memcpy	;wreg free
 27813                           
 27814                           ; BSR set to: 0
 27815                           ;NetworkManager.c: 175: if(dev==DeviceCoordinator)
 27816  0051E2  5197               	movf	NetworkInit@dev& (0+255),w,b
 27817  0051E4  E11C               	bnz	l14574
 27818                           
 27819                           ; BSR set to: 0
 27820                           ;NetworkManager.c: 176: {
 27821                           ;NetworkManager.c: 177: CoordinatorAddr=MyAddress;
 27822  0051E6  C1FA  F1E8         	movff	_MyAddress,_CoordinatorAddr
 27823  0051EA  C1FB  F1E9         	movff	_MyAddress+1,_CoordinatorAddr+1
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;NetworkManager.c: 178: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 27827  0051EE  0E94               	movlw	low _routeInfo
 27828  0051F0  6F75               	movwf	memcpy@d1& (0+255),b
 27829  0051F2  0E02               	movlw	high _routeInfo
 27830  0051F4  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27831  0051F6  0E93               	movlw	low NetworkInit@address
 27832  0051F8  6F77               	movwf	memcpy@s1& (0+255),b
 27833  0051FA  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 27834  0051FC  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 27835  005200  0100               	movlb	0	; () banked
 27836  005202  6F79               	movwf	memcpy@n& (0+255),b
 27837  005204  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27838  005206  EC5D  F036         	call	_memcpy	;wreg free
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;NetworkManager.c: 179: routeInfo.etx=0;
 27842  00520A  0102               	movlb	2	; () banked
 27843  00520C  6B96               	clrf	(_routeInfo+2)& (0+255),b
 27844  00520E  6B97               	clrf	(_routeInfo+3)& (0+255),b
 27845                           
 27846                           ; BSR set to: 2
 27847                           ;NetworkManager.c: 180: routeInfo.hasCheckedIn=1;
 27848  005210  0E01               	movlw	1
 27849  005212  6F9A               	movwf	(_routeInfo+6)& (0+255),b
 27850  005214                     l14572:
 27851                           
 27852                           ; BSR set to: 2
 27853                           ;NetworkManager.c: 181: devPanID=PANID;
 27854  005214  C095  F098         	movff	NetworkInit@PANID,NetworkInit@devPanID
 27855  005218  C096  F099         	movff	NetworkInit@PANID+1,NetworkInit@devPanID+1
 27856                           
 27857                           ;NetworkManager.c: 182: }else
 27858  00521C  D01F               	goto	l14582
 27859  00521E                     l14574:
 27860                           
 27861                           ; BSR set to: 0
 27862                           ;NetworkManager.c: 183: {
 27863                           ;NetworkManager.c: 184: memset(CoordinatorAddr.bytes,0xff,NetworkAddressSizeGet());
 27864  00521E  0EE8               	movlw	low _CoordinatorAddr
 27865  005220  6F73               	movwf	memset@p1& (0+255),b
 27866  005222  0E01               	movlw	high _CoordinatorAddr
 27867  005224  6F74               	movwf	(memset@p1+1)& (0+255),b
 27868  005226  6B76               	clrf	(memset@c+1)& (0+255),b
 27869  005228  6975               	setf	memset@c& (0+255),b
 27870  00522A  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 27871  00522E  0100               	movlb	0	; () banked
 27872  005230  6F77               	movwf	memset@n& (0+255),b
 27873  005232  6B78               	clrf	(memset@n+1)& (0+255),b
 27874  005234  EC4C  F03A         	call	_memset	;wreg free
 27875                           
 27876                           ;NetworkManager.c: 185: memset(routeInfo.parent.bytes,0xff,NetworkAddressSizeGet());
 27877  005238  0E94               	movlw	low _routeInfo
 27878  00523A  6F73               	movwf	memset@p1& (0+255),b
 27879  00523C  0E02               	movlw	high _routeInfo
 27880  00523E  6F74               	movwf	(memset@p1+1)& (0+255),b
 27881  005240  6B76               	clrf	(memset@c+1)& (0+255),b
 27882  005242  6975               	setf	memset@c& (0+255),b
 27883  005244  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 27884  005248  0100               	movlb	0	; () banked
 27885  00524A  6F77               	movwf	memset@n& (0+255),b
 27886  00524C  6B78               	clrf	(memset@n+1)& (0+255),b
 27887  00524E  EC4C  F03A         	call	_memset	;wreg free
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;NetworkManager.c: 186: routeInfo.etx=0xffff;
 27891  005252  0102               	movlb	2	; () banked
 27892  005254  6996               	setf	(_routeInfo+2)& (0+255),b
 27893  005256  6997               	setf	(_routeInfo+3)& (0+255),b
 27894                           
 27895                           ; BSR set to: 2
 27896                           ;NetworkManager.c: 187: routeInfo.hasCheckedIn=0;
 27897  005258  6B9A               	clrf	(_routeInfo+6)& (0+255),b
 27898  00525A  D7DC               	goto	l14572
 27899  00525C                     l14582:
 27900                           
 27901                           ; BSR set to: 2
 27902                           ;NetworkManager.c: 189: }
 27903                           ;NetworkManager.c: 190: NetworkSetAddressPAN(address, devPanID);
 27904  00525C  C093  F07F         	movff	NetworkInit@address,NetworkSetAddressPAN@address
 27905  005260  C094  F080         	movff	NetworkInit@address+1,NetworkSetAddressPAN@address+1
 27906  005264  C098  F081         	movff	NetworkInit@devPanID,NetworkSetAddressPAN@PANID
 27907  005268  C099  F082         	movff	NetworkInit@devPanID+1,NetworkSetAddressPAN@PANID+1
 27908  00526C  EC32  F036         	call	_NetworkSetAddressPAN	;wreg free
 27909                           
 27910                           ;NetworkManager.c: 191: DeviceManagerInit();
 27911  005270  EC36  F03B         	call	_DeviceManagerInit	;wreg free
 27912                           
 27913                           ; BSR set to: 0
 27914                           ;NetworkManager.c: 192: LinkEstimatorInit();
 27915  005274  ECF2  F03B         	call	_LinkEstimatorInit	;wreg free
 27916                           
 27917                           ; BSR set to: 1
 27918                           ;NetworkManager.c: 193: BeaconManagerInit();
 27919  005278  ECFB  F03A         	call	_BeaconManagerInit	;wreg free
 27920                           
 27921                           ; BSR set to: 1
 27922                           ;NetworkManager.c: 194: RouteManagerInit();
 27923  00527C  ECDB  F039         	call	_RouteManagerInit	;wreg free
 27924                           
 27925                           ; BSR set to: 0
 27926                           ;NetworkManager.c: 195: BroadcastManagerInit();
 27927  005280  EC4E  F03B         	call	_BroadcastManagerInit	;wreg free
 27928                           
 27929                           ; BSR set to: 0
 27930                           ;NetworkManager.c: 196: TransportManagerInit();
 27931  005284  EC7D  F03B         	call	_TransportManagerInit	;wreg free
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;NetworkManager.c: 197: CacheInit();
 27935  005288  EC42  F03B         	call	_CacheInit	;wreg free
 27936                           
 27937                           ; BSR set to: 0
 27938                           ;NetworkManager.c: 198: TunnelManagerInit();
 27939  00528C  EC72  F03B         	call	_TunnelManagerInit	;wreg free
 27940                           
 27941                           ; BSR set to: 0
 27942                           ;NetworkManager.c: 199: NetSeq=krnd();
 27943  005290  EC94  F01F         	call	_krnd	;wreg free
 27944  005294  5173               	movf	?_krnd& (0+255),w,b
 27945  005296  0101               	movlb	1	; () banked
 27946  005298  6FD4               	movwf	_NetSeq& (0+255),b
 27947                           
 27948                           ; BSR set to: 1
 27949                           ;NetworkManager.c: 200: nState=netPOR;
 27950  00529A  6BDD               	clrf	_nState& (0+255),b
 27951                           
 27952                           ; BSR set to: 1
 27953  00529C  0012               	return		;funcret
 27954  00529E                     __end_of_NetworkInit:
 27955                           	opt stack 0
 27956                           tblptru	equ	0xFF8
 27957                           tblptrh	equ	0xFF7
 27958                           tblptrl	equ	0xFF6
 27959                           tablat	equ	0xFF5
 27960                           prodh	equ	0xFF4
 27961                           prodl	equ	0xFF3
 27962                           intcon3	equ	0xFF0
 27963                           postinc0	equ	0xFEE
 27964                           plusw0	equ	0xFEB
 27965                           fsr0h	equ	0xFEA
 27966                           fsr0l	equ	0xFE9
 27967                           wreg	equ	0xFE8
 27968                           indf1	equ	0xFE7
 27969                           postinc1	equ	0xFE6
 27970                           postdec1	equ	0xFE5
 27971                           plusw1	equ	0xFE3
 27972                           fsr1h	equ	0xFE2
 27973                           fsr1l	equ	0xFE1
 27974                           indf2	equ	0xFDF
 27975                           postinc2	equ	0xFDE
 27976                           postdec2	equ	0xFDD
 27977                           plusw2	equ	0xFDB
 27978                           fsr2h	equ	0xFDA
 27979                           fsr2l	equ	0xFD9
 27980                           status	equ	0xFD8
 27981                           
 27982 ;; *************** function _TunnelManagerInit *****************
 27983 ;; Defined at:
 27984 ;;		line 112 in file "../TunnelManager.c"
 27985 ;; Parameters:    Size  Location     Type
 27986 ;;		None
 27987 ;; Auto vars:     Size  Location     Type
 27988 ;;		None
 27989 ;; Return value:  Size  Location     Type
 27990 ;;                  1    wreg      void 
 27991 ;; Registers used:
 27992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27993 ;; Tracked objects:
 27994 ;;		On entry : F/0
 27995 ;;		On exit  : F/0
 27996 ;;		Unchanged: 0/0
 27997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28002 ;;Total ram usage:        0 bytes
 28003 ;; Hardware stack levels used:    1
 28004 ;; Hardware stack levels required when called:    6
 28005 ;; This function calls:
 28006 ;;		_memset
 28007 ;; This function is called by:
 28008 ;;		_NetworkInit
 28009 ;; This function uses a non-reentrant model
 28010 ;;
 28011                           
 28012                           	psect	text128
 28013  0076E4                     __ptext128:
 28014                           	opt stack 0
 28015  0076E4                     _TunnelManagerInit:
 28016                           	opt stack 22
 28017                           
 28018                           ; BSR set to: 0
 28019                           ;TunnelManager.c: 114: memset(tunnels,0x00,sizeof(tunnels));
 28020                           
 28021                           ; BSR set to: 1
 28022                           ;incstack = 0
 28023  0076E4  0E00               	movlw	low _tunnels
 28024  0076E6  6F73               	movwf	memset@p1& (0+255),b
 28025  0076E8  0E04               	movlw	high _tunnels
 28026  0076EA  6F74               	movwf	(memset@p1+1)& (0+255),b
 28027  0076EC  6B76               	clrf	(memset@c+1)& (0+255),b
 28028  0076EE  6B75               	clrf	memset@c& (0+255),b
 28029  0076F0  6B78               	clrf	(memset@n+1)& (0+255),b
 28030  0076F2  0E78               	movlw	120
 28031  0076F4  6F77               	movwf	memset@n& (0+255),b
 28032  0076F6  EF4C  F03A         	goto	_memset	;wreg free
 28033  0076FA                     __end_of_TunnelManagerInit:
 28034                           	opt stack 0
 28035                           tblptru	equ	0xFF8
 28036                           tblptrh	equ	0xFF7
 28037                           tblptrl	equ	0xFF6
 28038                           tablat	equ	0xFF5
 28039                           prodh	equ	0xFF4
 28040                           prodl	equ	0xFF3
 28041                           intcon3	equ	0xFF0
 28042                           postinc0	equ	0xFEE
 28043                           plusw0	equ	0xFEB
 28044                           fsr0h	equ	0xFEA
 28045                           fsr0l	equ	0xFE9
 28046                           wreg	equ	0xFE8
 28047                           indf1	equ	0xFE7
 28048                           postinc1	equ	0xFE6
 28049                           postdec1	equ	0xFE5
 28050                           plusw1	equ	0xFE3
 28051                           fsr1h	equ	0xFE2
 28052                           fsr1l	equ	0xFE1
 28053                           indf2	equ	0xFDF
 28054                           postinc2	equ	0xFDE
 28055                           postdec2	equ	0xFDD
 28056                           plusw2	equ	0xFDB
 28057                           fsr2h	equ	0xFDA
 28058                           fsr2l	equ	0xFD9
 28059                           status	equ	0xFD8
 28060                           
 28061 ;; *************** function _TransportManagerInit *****************
 28062 ;; Defined at:
 28063 ;;		line 54 in file "../TransportManager.c"
 28064 ;; Parameters:    Size  Location     Type
 28065 ;;		None
 28066 ;; Auto vars:     Size  Location     Type
 28067 ;;		None
 28068 ;; Return value:  Size  Location     Type
 28069 ;;                  1    wreg      void 
 28070 ;; Registers used:
 28071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28072 ;; Tracked objects:
 28073 ;;		On entry : F/0
 28074 ;;		On exit  : F/0
 28075 ;;		Unchanged: 0/0
 28076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28081 ;;Total ram usage:        0 bytes
 28082 ;; Hardware stack levels used:    1
 28083 ;; Hardware stack levels required when called:    6
 28084 ;; This function calls:
 28085 ;;		_memset
 28086 ;; This function is called by:
 28087 ;;		_NetworkInit
 28088 ;; This function uses a non-reentrant model
 28089 ;;
 28090                           
 28091                           	psect	text129
 28092  0076FA                     __ptext129:
 28093                           	opt stack 0
 28094  0076FA                     _TransportManagerInit:
 28095                           	opt stack 22
 28096                           
 28097                           ; BSR set to: 0
 28098                           ;TransportManager.c: 56: memset(TMQ,0x00,sizeof(TMQ));
 28099                           
 28100                           ; BSR set to: 0
 28101                           ;incstack = 0
 28102  0076FA  0E00               	movlw	low _TMQ
 28103  0076FC  6F73               	movwf	memset@p1& (0+255),b
 28104  0076FE  0E06               	movlw	high _TMQ
 28105  007700  6F74               	movwf	(memset@p1+1)& (0+255),b
 28106  007702  6B76               	clrf	(memset@c+1)& (0+255),b
 28107  007704  6B75               	clrf	memset@c& (0+255),b
 28108  007706  6B78               	clrf	(memset@n+1)& (0+255),b
 28109  007708  0E98               	movlw	152
 28110  00770A  6F77               	movwf	memset@n& (0+255),b
 28111  00770C  EF4C  F03A         	goto	_memset	;wreg free
 28112  007710                     __end_of_TransportManagerInit:
 28113                           	opt stack 0
 28114                           tblptru	equ	0xFF8
 28115                           tblptrh	equ	0xFF7
 28116                           tblptrl	equ	0xFF6
 28117                           tablat	equ	0xFF5
 28118                           prodh	equ	0xFF4
 28119                           prodl	equ	0xFF3
 28120                           intcon3	equ	0xFF0
 28121                           postinc0	equ	0xFEE
 28122                           plusw0	equ	0xFEB
 28123                           fsr0h	equ	0xFEA
 28124                           fsr0l	equ	0xFE9
 28125                           wreg	equ	0xFE8
 28126                           indf1	equ	0xFE7
 28127                           postinc1	equ	0xFE6
 28128                           postdec1	equ	0xFE5
 28129                           plusw1	equ	0xFE3
 28130                           fsr1h	equ	0xFE2
 28131                           fsr1l	equ	0xFE1
 28132                           indf2	equ	0xFDF
 28133                           postinc2	equ	0xFDE
 28134                           postdec2	equ	0xFDD
 28135                           plusw2	equ	0xFDB
 28136                           fsr2h	equ	0xFDA
 28137                           fsr2l	equ	0xFD9
 28138                           status	equ	0xFD8
 28139                           
 28140 ;; *************** function _RouteManagerInit *****************
 28141 ;; Defined at:
 28142 ;;		line 29 in file "../RouteManager.c"
 28143 ;; Parameters:    Size  Location     Type
 28144 ;;		None
 28145 ;; Auto vars:     Size  Location     Type
 28146 ;;		None
 28147 ;; Return value:  Size  Location     Type
 28148 ;;                  1    wreg      void 
 28149 ;; Registers used:
 28150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28151 ;; Tracked objects:
 28152 ;;		On entry : F/1
 28153 ;;		On exit  : F/0
 28154 ;;		Unchanged: 0/0
 28155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28160 ;;Total ram usage:        0 bytes
 28161 ;; Hardware stack levels used:    1
 28162 ;; Hardware stack levels required when called:    8
 28163 ;; This function calls:
 28164 ;;		_MSTickGet
 28165 ;;		_memset
 28166 ;; This function is called by:
 28167 ;;		_NetworkInit
 28168 ;; This function uses a non-reentrant model
 28169 ;;
 28170                           
 28171                           	psect	text130
 28172  0073B6                     __ptext130:
 28173                           	opt stack 0
 28174  0073B6                     _RouteManagerInit:
 28175                           	opt stack 20
 28176                           
 28177                           ; BSR set to: 1
 28178                           ;RouteManager.c: 31: routingTableActive=0;
 28179                           
 28180                           ; BSR set to: 0
 28181                           ;incstack = 0
 28182  0073B6  0100               	movlb	0	; () banked
 28183  0073B8  6BEB               	clrf	_routingTableActive& (0+255),b
 28184  0073BA  6BEC               	clrf	(_routingTableActive+1)& (0+255),b
 28185                           
 28186                           ; BSR set to: 0
 28187                           ;RouteManager.c: 32: memset(&NewBestParent,0xff,sizeof(NewBestParent));
 28188  0073BC  0E9F               	movlw	low _NewBestParent
 28189  0073BE  6F73               	movwf	memset@p1& (0+255),b
 28190  0073C0  0E02               	movlw	high _NewBestParent
 28191  0073C2  6F74               	movwf	(memset@p1+1)& (0+255),b
 28192  0073C4  6B76               	clrf	(memset@c+1)& (0+255),b
 28193  0073C6  6975               	setf	memset@c& (0+255),b
 28194  0073C8  6B78               	clrf	(memset@n+1)& (0+255),b
 28195  0073CA  0E02               	movlw	2
 28196  0073CC  6F77               	movwf	memset@n& (0+255),b
 28197  0073CE  EC4C  F03A         	call	_memset	;wreg free
 28198                           
 28199                           ; BSR set to: 0
 28200                           ;RouteManager.c: 33: tRouteMgr=MSTickGet();
 28201  0073D2  EC58  F039         	call	_MSTickGet	;wreg free
 28202  0073D6  EE22  F03A         	lfsr	2,_tRouteMgr
 28203  0073DA  0E07               	movlw	7
 28204  0073DC                     u16551:
 28205  0073DC  CFEB FFDB          	movff	plusw0,plusw2
 28206  0073E0  06E8               	decf	wreg,f,c
 28207  0073E2  E2FC               	bc	u16551
 28208                           
 28209                           ; BSR set to: 0
 28210  0073E4  0012               	return		;funcret
 28211  0073E6                     __end_of_RouteManagerInit:
 28212                           	opt stack 0
 28213                           tblptru	equ	0xFF8
 28214                           tblptrh	equ	0xFF7
 28215                           tblptrl	equ	0xFF6
 28216                           tablat	equ	0xFF5
 28217                           prodh	equ	0xFF4
 28218                           prodl	equ	0xFF3
 28219                           intcon3	equ	0xFF0
 28220                           postinc0	equ	0xFEE
 28221                           plusw0	equ	0xFEB
 28222                           fsr0h	equ	0xFEA
 28223                           fsr0l	equ	0xFE9
 28224                           wreg	equ	0xFE8
 28225                           indf1	equ	0xFE7
 28226                           postinc1	equ	0xFE6
 28227                           postdec1	equ	0xFE5
 28228                           plusw1	equ	0xFE3
 28229                           fsr1h	equ	0xFE2
 28230                           fsr1l	equ	0xFE1
 28231                           indf2	equ	0xFDF
 28232                           postinc2	equ	0xFDE
 28233                           postdec2	equ	0xFDD
 28234                           plusw2	equ	0xFDB
 28235                           fsr2h	equ	0xFDA
 28236                           fsr2l	equ	0xFD9
 28237                           status	equ	0xFD8
 28238                           
 28239 ;; *************** function _LinkEstimatorInit *****************
 28240 ;; Defined at:
 28241 ;;		line 46 in file "../LinkEstimator.c"
 28242 ;; Parameters:    Size  Location     Type
 28243 ;;		None
 28244 ;; Auto vars:     Size  Location     Type
 28245 ;;		None
 28246 ;; Return value:  Size  Location     Type
 28247 ;;                  1    wreg      void 
 28248 ;; Registers used:
 28249 ;;		None
 28250 ;; Tracked objects:
 28251 ;;		On entry : F/0
 28252 ;;		On exit  : F/1
 28253 ;;		Unchanged: 0/0
 28254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28259 ;;Total ram usage:        0 bytes
 28260 ;; Hardware stack levels used:    1
 28261 ;; Hardware stack levels required when called:    5
 28262 ;; This function calls:
 28263 ;;		Nothing
 28264 ;; This function is called by:
 28265 ;;		_NetworkInit
 28266 ;; This function uses a non-reentrant model
 28267 ;;
 28268                           
 28269                           	psect	text131
 28270  0077E4                     __ptext131:
 28271                           	opt stack 0
 28272  0077E4                     _LinkEstimatorInit:
 28273                           	opt stack 23
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;LinkEstimator.c: 48: prevSentIdx=0;
 28277                           
 28278                           ; BSR set to: 0
 28279                           ;incstack = 0
 28280  0077E4  0101               	movlb	1	; () banked
 28281  0077E6  6BCE               	clrf	_prevSentIdx& (0+255),b
 28282  0077E8  6BCF               	clrf	(_prevSentIdx+1)& (0+255),b
 28283                           
 28284                           ;LinkEstimator.c: 49: linkEstSeq=0;
 28285  0077EA  6BCC               	clrf	_linkEstSeq& (0+255),b
 28286  0077EC  6BCD               	clrf	(_linkEstSeq+1)& (0+255),b
 28287                           
 28288                           ; BSR set to: 1
 28289  0077EE  0012               	return		;funcret
 28290  0077F0                     __end_of_LinkEstimatorInit:
 28291                           	opt stack 0
 28292                           tblptru	equ	0xFF8
 28293                           tblptrh	equ	0xFF7
 28294                           tblptrl	equ	0xFF6
 28295                           tablat	equ	0xFF5
 28296                           prodh	equ	0xFF4
 28297                           prodl	equ	0xFF3
 28298                           intcon3	equ	0xFF0
 28299                           postinc0	equ	0xFEE
 28300                           plusw0	equ	0xFEB
 28301                           fsr0h	equ	0xFEA
 28302                           fsr0l	equ	0xFE9
 28303                           wreg	equ	0xFE8
 28304                           indf1	equ	0xFE7
 28305                           postinc1	equ	0xFE6
 28306                           postdec1	equ	0xFE5
 28307                           plusw1	equ	0xFE3
 28308                           fsr1h	equ	0xFE2
 28309                           fsr1l	equ	0xFE1
 28310                           indf2	equ	0xFDF
 28311                           postinc2	equ	0xFDE
 28312                           postdec2	equ	0xFDD
 28313                           plusw2	equ	0xFDB
 28314                           fsr2h	equ	0xFDA
 28315                           fsr2l	equ	0xFD9
 28316                           status	equ	0xFD8
 28317                           
 28318 ;; *************** function _DeviceManagerInit *****************
 28319 ;; Defined at:
 28320 ;;		line 86 in file "../DeviceManager.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;		None
 28323 ;; Auto vars:     Size  Location     Type
 28324 ;;		None
 28325 ;; Return value:  Size  Location     Type
 28326 ;;                  1    wreg      void 
 28327 ;; Registers used:
 28328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28329 ;; Tracked objects:
 28330 ;;		On entry : E/0
 28331 ;;		On exit  : F/0
 28332 ;;		Unchanged: 0/0
 28333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28338 ;;Total ram usage:        0 bytes
 28339 ;; Hardware stack levels used:    1
 28340 ;; Hardware stack levels required when called:    6
 28341 ;; This function calls:
 28342 ;;		_memset
 28343 ;; This function is called by:
 28344 ;;		_NetworkInit
 28345 ;; This function uses a non-reentrant model
 28346 ;;
 28347                           
 28348                           	psect	text132
 28349  00766C                     __ptext132:
 28350                           	opt stack 0
 28351  00766C                     _DeviceManagerInit:
 28352                           	opt stack 22
 28353                           
 28354                           ;DeviceManager.c: 88: memset(list,0xff,sizeof(list));
 28355                           
 28356                           ; BSR set to: 1
 28357                           ;incstack = 0
 28358  00766C  0E00               	movlw	low _list
 28359  00766E  0100               	movlb	0	; () banked
 28360  007670  6F73               	movwf	memset@p1& (0+255),b
 28361  007672  0E08               	movlw	high _list
 28362  007674  6F74               	movwf	(memset@p1+1)& (0+255),b
 28363  007676  6B76               	clrf	(memset@c+1)& (0+255),b
 28364  007678  6975               	setf	memset@c& (0+255),b
 28365  00767A  6B78               	clrf	(memset@n+1)& (0+255),b
 28366  00767C  0EDC               	movlw	220
 28367  00767E  6F77               	movwf	memset@n& (0+255),b
 28368  007680  EF4C  F03A         	goto	_memset	;wreg free
 28369  007684                     __end_of_DeviceManagerInit:
 28370                           	opt stack 0
 28371                           tblptru	equ	0xFF8
 28372                           tblptrh	equ	0xFF7
 28373                           tblptrl	equ	0xFF6
 28374                           tablat	equ	0xFF5
 28375                           prodh	equ	0xFF4
 28376                           prodl	equ	0xFF3
 28377                           intcon3	equ	0xFF0
 28378                           postinc0	equ	0xFEE
 28379                           plusw0	equ	0xFEB
 28380                           fsr0h	equ	0xFEA
 28381                           fsr0l	equ	0xFE9
 28382                           wreg	equ	0xFE8
 28383                           indf1	equ	0xFE7
 28384                           postinc1	equ	0xFE6
 28385                           postdec1	equ	0xFE5
 28386                           plusw1	equ	0xFE3
 28387                           fsr1h	equ	0xFE2
 28388                           fsr1l	equ	0xFE1
 28389                           indf2	equ	0xFDF
 28390                           postinc2	equ	0xFDE
 28391                           postdec2	equ	0xFDD
 28392                           plusw2	equ	0xFDB
 28393                           fsr2h	equ	0xFDA
 28394                           fsr2l	equ	0xFD9
 28395                           status	equ	0xFD8
 28396                           
 28397 ;; *************** function _CacheInit *****************
 28398 ;; Defined at:
 28399 ;;		line 72 in file "../Cache.c"
 28400 ;; Parameters:    Size  Location     Type
 28401 ;;		None
 28402 ;; Auto vars:     Size  Location     Type
 28403 ;;		None
 28404 ;; Return value:  Size  Location     Type
 28405 ;;                  1    wreg      void 
 28406 ;; Registers used:
 28407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28408 ;; Tracked objects:
 28409 ;;		On entry : F/0
 28410 ;;		On exit  : F/0
 28411 ;;		Unchanged: 0/0
 28412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28417 ;;Total ram usage:        0 bytes
 28418 ;; Hardware stack levels used:    1
 28419 ;; Hardware stack levels required when called:    6
 28420 ;; This function calls:
 28421 ;;		_memset
 28422 ;; This function is called by:
 28423 ;;		_NetworkInit
 28424 ;; This function uses a non-reentrant model
 28425 ;;
 28426                           
 28427                           	psect	text133
 28428  007684                     __ptext133:
 28429                           	opt stack 0
 28430  007684                     _CacheInit:
 28431                           	opt stack 22
 28432                           
 28433                           ; BSR set to: 0
 28434                           ;Cache.c: 74: memset(hc_table,0x00,sizeof(hc_table));
 28435                           
 28436                           ; BSR set to: 0
 28437                           ;incstack = 0
 28438  007684  0E98               	movlw	low _hc_table
 28439  007686  6F73               	movwf	memset@p1& (0+255),b
 28440  007688  0E0A               	movlw	high _hc_table
 28441  00768A  6F74               	movwf	(memset@p1+1)& (0+255),b
 28442  00768C  6B76               	clrf	(memset@c+1)& (0+255),b
 28443  00768E  6B75               	clrf	memset@c& (0+255),b
 28444  007690  0E01               	movlw	1
 28445  007692  6F78               	movwf	(memset@n+1)& (0+255),b
 28446  007694  0E68               	movlw	104
 28447  007696  6F77               	movwf	memset@n& (0+255),b
 28448  007698  EF4C  F03A         	goto	_memset	;wreg free
 28449  00769C                     __end_of_CacheInit:
 28450                           	opt stack 0
 28451                           tblptru	equ	0xFF8
 28452                           tblptrh	equ	0xFF7
 28453                           tblptrl	equ	0xFF6
 28454                           tablat	equ	0xFF5
 28455                           prodh	equ	0xFF4
 28456                           prodl	equ	0xFF3
 28457                           intcon3	equ	0xFF0
 28458                           postinc0	equ	0xFEE
 28459                           plusw0	equ	0xFEB
 28460                           fsr0h	equ	0xFEA
 28461                           fsr0l	equ	0xFE9
 28462                           wreg	equ	0xFE8
 28463                           indf1	equ	0xFE7
 28464                           postinc1	equ	0xFE6
 28465                           postdec1	equ	0xFE5
 28466                           plusw1	equ	0xFE3
 28467                           fsr1h	equ	0xFE2
 28468                           fsr1l	equ	0xFE1
 28469                           indf2	equ	0xFDF
 28470                           postinc2	equ	0xFDE
 28471                           postdec2	equ	0xFDD
 28472                           plusw2	equ	0xFDB
 28473                           fsr2h	equ	0xFDA
 28474                           fsr2l	equ	0xFD9
 28475                           status	equ	0xFD8
 28476                           
 28477 ;; *************** function _BroadcastManagerInit *****************
 28478 ;; Defined at:
 28479 ;;		line 24 in file "../BroadcastManager.c"
 28480 ;; Parameters:    Size  Location     Type
 28481 ;;		None
 28482 ;; Auto vars:     Size  Location     Type
 28483 ;;		None
 28484 ;; Return value:  Size  Location     Type
 28485 ;;                  1    wreg      void 
 28486 ;; Registers used:
 28487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28488 ;; Tracked objects:
 28489 ;;		On entry : F/0
 28490 ;;		On exit  : F/0
 28491 ;;		Unchanged: 0/0
 28492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28497 ;;Total ram usage:        0 bytes
 28498 ;; Hardware stack levels used:    1
 28499 ;; Hardware stack levels required when called:    6
 28500 ;; This function calls:
 28501 ;;		_memset
 28502 ;; This function is called by:
 28503 ;;		_NetworkInit
 28504 ;; This function uses a non-reentrant model
 28505 ;;
 28506                           
 28507                           	psect	text134
 28508  00769C                     __ptext134:
 28509                           	opt stack 0
 28510  00769C                     _BroadcastManagerInit:
 28511                           	opt stack 22
 28512                           
 28513                           ; BSR set to: 0
 28514                           ;BroadcastManager.c: 26: memset((uint8_t*)RbcQ,0x00,sizeof(RbcQ));
 28515                           
 28516                           ; BSR set to: 0
 28517                           ;incstack = 0
 28518  00769C  0EDC               	movlw	low _RbcQ
 28519  00769E  6F73               	movwf	memset@p1& (0+255),b
 28520  0076A0  0E08               	movlw	high _RbcQ
 28521  0076A2  6F74               	movwf	(memset@p1+1)& (0+255),b
 28522  0076A4  6B76               	clrf	(memset@c+1)& (0+255),b
 28523  0076A6  6B75               	clrf	memset@c& (0+255),b
 28524  0076A8  0E01               	movlw	1
 28525  0076AA  6F78               	movwf	(memset@n+1)& (0+255),b
 28526  0076AC  0EBC               	movlw	188
 28527  0076AE  6F77               	movwf	memset@n& (0+255),b
 28528  0076B0  EF4C  F03A         	goto	_memset	;wreg free
 28529  0076B4                     __end_of_BroadcastManagerInit:
 28530                           	opt stack 0
 28531                           tblptru	equ	0xFF8
 28532                           tblptrh	equ	0xFF7
 28533                           tblptrl	equ	0xFF6
 28534                           tablat	equ	0xFF5
 28535                           prodh	equ	0xFF4
 28536                           prodl	equ	0xFF3
 28537                           intcon3	equ	0xFF0
 28538                           postinc0	equ	0xFEE
 28539                           plusw0	equ	0xFEB
 28540                           fsr0h	equ	0xFEA
 28541                           fsr0l	equ	0xFE9
 28542                           wreg	equ	0xFE8
 28543                           indf1	equ	0xFE7
 28544                           postinc1	equ	0xFE6
 28545                           postdec1	equ	0xFE5
 28546                           plusw1	equ	0xFE3
 28547                           fsr1h	equ	0xFE2
 28548                           fsr1l	equ	0xFE1
 28549                           indf2	equ	0xFDF
 28550                           postinc2	equ	0xFDE
 28551                           postdec2	equ	0xFDD
 28552                           plusw2	equ	0xFDB
 28553                           fsr2h	equ	0xFDA
 28554                           fsr2l	equ	0xFD9
 28555                           status	equ	0xFD8
 28556                           
 28557 ;; *************** function _memset *****************
 28558 ;; Defined at:
 28559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 28560 ;; Parameters:    Size  Location     Type
 28561 ;;  p1              2   19[BANK0 ] PTR void 
 28562 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 28563 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 28564 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 28565 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 28566 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 28567 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), radioBroadcast@addr(2), main@coord(2), 
 28568 ;;		 -> rxMessage(10), LCDText(33), ConnectionTable(55), NULL(0), 
 28569 ;;  c               2   21[BANK0 ] int 
 28570 ;;  n               2   23[BANK0 ] unsigned int 
 28571 ;; Auto vars:     Size  Location     Type
 28572 ;;  p               2   25[BANK0 ] PTR unsigned char 
 28573 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 28574 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 28575 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 28576 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 28577 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 28578 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), radioBroadcast@addr(2), main@coord(2), 
 28579 ;;		 -> rxMessage(10), LCDText(33), ConnectionTable(55), NULL(0), 
 28580 ;; Return value:  Size  Location     Type
 28581 ;;                  2   19[BANK0 ] PTR void 
 28582 ;; Registers used:
 28583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28584 ;; Tracked objects:
 28585 ;;		On entry : F/0
 28586 ;;		On exit  : F/0
 28587 ;;		Unchanged: 0/0
 28588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28589 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28592 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28593 ;;Total ram usage:        8 bytes
 28594 ;; Hardware stack levels used:    1
 28595 ;; Hardware stack levels required when called:    5
 28596 ;; This function calls:
 28597 ;;		Nothing
 28598 ;; This function is called by:
 28599 ;;		_main
 28600 ;;		_radioBroadcast
 28601 ;;		_MiApp_ProtocolInit
 28602 ;;		_NetworkDataArrivedEvent
 28603 ;;		_AddNodeToNetworkTable
 28604 ;;		_MiApp_SearchConnection
 28605 ;;		_RouteManagerInit
 28606 ;;		_routeInfoInit
 28607 ;;		_RoutingTableFindDeviceOrParent
 28608 ;;		_networkSendBeacon
 28609 ;;		_BroadcastManagerInit
 28610 ;;		_BroadcastManagerTask
 28611 ;;		_TunnelManagerSetTunnel
 28612 ;;		_TunnelManagerGetTunnel
 28613 ;;		_TunnelManagerInvalidateTunnel
 28614 ;;		_TunnelManagerInit
 28615 ;;		_isKnownPacket
 28616 ;;		_CacheInit
 28617 ;;		_TransportManagerInit
 28618 ;;		_NetworkInit
 28619 ;;		_CoordinatorGenericAddress
 28620 ;;		_NetworkSendDiscoverRequest
 28621 ;;		_NetworkSendDiscoverResponse
 28622 ;;		_IsNetworkDevice
 28623 ;;		_DeviceManagerInit
 28624 ;;		_NetworkBroadcastData
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text135
 28629  007498                     __ptext135:
 28630                           	opt stack 0
 28631  007498                     _memset:
 28632                           	opt stack 25
 28633                           
 28634                           ; BSR set to: 0
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;incstack = 0
 28638  007498  C073  F079         	movff	memset@p1,memset@p
 28639  00749C  C074  F07A         	movff	memset@p1+1,memset@p+1
 28640  0074A0  D008               	goto	l11870
 28641  0074A2                     l11866:
 28642                           
 28643                           ; BSR set to: 0
 28644  0074A2  C079  FFD9         	movff	memset@p,fsr2l
 28645  0074A6  C07A  FFDA         	movff	memset@p+1,fsr2h
 28646  0074AA  C075  FFDF         	movff	memset@c,indf2
 28647                           
 28648                           ; BSR set to: 0
 28649  0074AE  4B79               	infsnz	memset@p& (0+255),f,b
 28650  0074B0  2B7A               	incf	(memset@p+1)& (0+255),f,b
 28651  0074B2                     l11870:
 28652                           
 28653                           ; BSR set to: 0
 28654  0074B2  0777               	decf	memset@n& (0+255),f,b
 28655  0074B4  A0D8               	btfss	status,0,c
 28656  0074B6  0778               	decf	(memset@n+1)& (0+255),f,b
 28657  0074B8  2977               	incf	memset@n& (0+255),w,b
 28658  0074BA  E1F3               	bnz	l11866
 28659  0074BC  2978               	incf	(memset@n+1)& (0+255),w,b
 28660  0074BE  E1F1               	bnz	l11866
 28661                           
 28662                           ; BSR set to: 0
 28663  0074C0  0012               	return		;funcret
 28664  0074C2                     __end_of_memset:
 28665                           	opt stack 0
 28666                           tblptru	equ	0xFF8
 28667                           tblptrh	equ	0xFF7
 28668                           tblptrl	equ	0xFF6
 28669                           tablat	equ	0xFF5
 28670                           prodh	equ	0xFF4
 28671                           prodl	equ	0xFF3
 28672                           intcon3	equ	0xFF0
 28673                           postinc0	equ	0xFEE
 28674                           plusw0	equ	0xFEB
 28675                           fsr0h	equ	0xFEA
 28676                           fsr0l	equ	0xFE9
 28677                           wreg	equ	0xFE8
 28678                           indf1	equ	0xFE7
 28679                           postinc1	equ	0xFE6
 28680                           postdec1	equ	0xFE5
 28681                           plusw1	equ	0xFE3
 28682                           fsr1h	equ	0xFE2
 28683                           fsr1l	equ	0xFE1
 28684                           indf2	equ	0xFDF
 28685                           postinc2	equ	0xFDE
 28686                           postdec2	equ	0xFDD
 28687                           plusw2	equ	0xFDB
 28688                           fsr2h	equ	0xFDA
 28689                           fsr2l	equ	0xFD9
 28690                           status	equ	0xFD8
 28691                           
 28692 ;; *************** function _BeaconManagerInit *****************
 28693 ;; Defined at:
 28694 ;;		line 37 in file "../BeaconManager.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;		None
 28697 ;; Auto vars:     Size  Location     Type
 28698 ;;		None
 28699 ;; Return value:  Size  Location     Type
 28700 ;;                  1    wreg      void 
 28701 ;; Registers used:
 28702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28703 ;; Tracked objects:
 28704 ;;		On entry : F/1
 28705 ;;		On exit  : F/1
 28706 ;;		Unchanged: 0/0
 28707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28712 ;;Total ram usage:        0 bytes
 28713 ;; Hardware stack levels used:    1
 28714 ;; Hardware stack levels required when called:   10
 28715 ;; This function calls:
 28716 ;;		_krnd
 28717 ;;		_netResetInterval
 28718 ;; This function is called by:
 28719 ;;		_NetworkInit
 28720 ;; This function uses a non-reentrant model
 28721 ;;
 28722                           
 28723                           	psect	text136
 28724  0075F6                     __ptext136:
 28725                           	opt stack 0
 28726  0075F6                     _BeaconManagerInit:
 28727                           	opt stack 18
 28728                           
 28729                           ; BSR set to: 1
 28730                           ;BeaconManager.c: 39: intervalDelay=0;
 28731                           
 28732                           ; BSR set to: 0
 28733                           ;incstack = 0
 28734  0075F6  6BBE               	clrf	_intervalDelay& (0+255),b
 28735  0075F8  6BBF               	clrf	(_intervalDelay+1)& (0+255),b
 28736  0075FA  6BC0               	clrf	(_intervalDelay+2)& (0+255),b
 28737  0075FC  6BC1               	clrf	(_intervalDelay+3)& (0+255),b
 28738                           
 28739                           ;BeaconManager.c: 40: currentInterval=0;
 28740  0075FE  6BB6               	clrf	_currentInterval& (0+255),b
 28741  007600  6BB7               	clrf	(_currentInterval+1)& (0+255),b
 28742  007602  6BB8               	clrf	(_currentInterval+2)& (0+255),b
 28743  007604  6BB9               	clrf	(_currentInterval+3)& (0+255),b
 28744                           
 28745                           ;BeaconManager.c: 41: BMState=BMPOR;
 28746  007606  6BD3               	clrf	_BMState& (0+255),b
 28747                           
 28748                           ; BSR set to: 1
 28749                           ;BeaconManager.c: 42: netSequenceNumber=krnd();
 28750  007608  EC94  F01F         	call	_krnd	;wreg free
 28751  00760C  5173               	movf	?_krnd& (0+255),w,b
 28752  00760E  0101               	movlb	1	; () banked
 28753  007610  6FDE               	movwf	_netSequenceNumber& (0+255),b
 28754                           
 28755                           ; BSR set to: 1
 28756                           ;BeaconManager.c: 43: netResetInterval();
 28757  007612  EF5A  F03B         	goto	_netResetInterval	;wreg free
 28758  007616                     __end_of_BeaconManagerInit:
 28759                           	opt stack 0
 28760                           tblptru	equ	0xFF8
 28761                           tblptrh	equ	0xFF7
 28762                           tblptrl	equ	0xFF6
 28763                           tablat	equ	0xFF5
 28764                           prodh	equ	0xFF4
 28765                           prodl	equ	0xFF3
 28766                           intcon3	equ	0xFF0
 28767                           postinc0	equ	0xFEE
 28768                           plusw0	equ	0xFEB
 28769                           fsr0h	equ	0xFEA
 28770                           fsr0l	equ	0xFE9
 28771                           wreg	equ	0xFE8
 28772                           indf1	equ	0xFE7
 28773                           postinc1	equ	0xFE6
 28774                           postdec1	equ	0xFE5
 28775                           plusw1	equ	0xFE3
 28776                           fsr1h	equ	0xFE2
 28777                           fsr1l	equ	0xFE1
 28778                           indf2	equ	0xFDF
 28779                           postinc2	equ	0xFDE
 28780                           postdec2	equ	0xFDD
 28781                           plusw2	equ	0xFDB
 28782                           fsr2h	equ	0xFDA
 28783                           fsr2l	equ	0xFD9
 28784                           status	equ	0xFD8
 28785                           
 28786 ;; *************** function _netResetInterval *****************
 28787 ;; Defined at:
 28788 ;;		line 135 in file "../BeaconManager.c"
 28789 ;; Parameters:    Size  Location     Type
 28790 ;;		None
 28791 ;; Auto vars:     Size  Location     Type
 28792 ;;		None
 28793 ;; Return value:  Size  Location     Type
 28794 ;;                  1    wreg      void 
 28795 ;; Registers used:
 28796 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28797 ;; Tracked objects:
 28798 ;;		On entry : E/0
 28799 ;;		On exit  : F/1
 28800 ;;		Unchanged: 0/0
 28801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28806 ;;Total ram usage:        0 bytes
 28807 ;; Hardware stack levels used:    1
 28808 ;; Hardware stack levels required when called:    9
 28809 ;; This function calls:
 28810 ;;		_netChooseAdvertiseTime
 28811 ;; This function is called by:
 28812 ;;		_BeaconManagerInit
 28813 ;;		_BeaconManagerTrigger
 28814 ;; This function uses a non-reentrant model
 28815 ;;
 28816                           
 28817                           	psect	text137
 28818  0076B4                     __ptext137:
 28819                           	opt stack 0
 28820  0076B4                     _netResetInterval:
 28821                           	opt stack 16
 28822                           
 28823                           ;BeaconManager.c: 137: currentInterval = ((SPAN)100);
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;incstack = 0
 28827  0076B4  0E64               	movlw	100
 28828  0076B6  0101               	movlb	1	; () banked
 28829  0076B8  6FB6               	movwf	_currentInterval& (0+255),b
 28830  0076BA  6BB7               	clrf	(_currentInterval+1)& (0+255),b
 28831  0076BC  6BB8               	clrf	(_currentInterval+2)& (0+255),b
 28832  0076BE  6BB9               	clrf	(_currentInterval+3)& (0+255),b
 28833                           
 28834                           ; BSR set to: 1
 28835                           ;BeaconManager.c: 138: netChooseAdvertiseTime();
 28836  0076C0  EC3F  F032         	call	_netChooseAdvertiseTime	;wreg free
 28837                           
 28838                           ; BSR set to: 0
 28839                           ;BeaconManager.c: 139: BMState=BM_WaitInitial;
 28840  0076C4  0E02               	movlw	2
 28841  0076C6  0101               	movlb	1	; () banked
 28842  0076C8  6FD3               	movwf	_BMState& (0+255),b
 28843                           
 28844                           ; BSR set to: 1
 28845  0076CA  0C02               	retlw	2	;funcret
 28846  0076CC                     __end_of_netResetInterval:
 28847                           	opt stack 0
 28848                           tblptru	equ	0xFF8
 28849                           tblptrh	equ	0xFF7
 28850                           tblptrl	equ	0xFF6
 28851                           tablat	equ	0xFF5
 28852                           prodh	equ	0xFF4
 28853                           prodl	equ	0xFF3
 28854                           intcon3	equ	0xFF0
 28855                           postinc0	equ	0xFEE
 28856                           plusw0	equ	0xFEB
 28857                           fsr0h	equ	0xFEA
 28858                           fsr0l	equ	0xFE9
 28859                           wreg	equ	0xFE8
 28860                           indf1	equ	0xFE7
 28861                           postinc1	equ	0xFE6
 28862                           postdec1	equ	0xFE5
 28863                           plusw1	equ	0xFE3
 28864                           fsr1h	equ	0xFE2
 28865                           fsr1l	equ	0xFE1
 28866                           indf2	equ	0xFDF
 28867                           postinc2	equ	0xFDE
 28868                           postdec2	equ	0xFDD
 28869                           plusw2	equ	0xFDB
 28870                           fsr2h	equ	0xFDA
 28871                           fsr2l	equ	0xFD9
 28872                           status	equ	0xFD8
 28873                           
 28874 ;; *************** function _netChooseAdvertiseTime *****************
 28875 ;; Defined at:
 28876 ;;		line 125 in file "../BeaconManager.c"
 28877 ;; Parameters:    Size  Location     Type
 28878 ;;		None
 28879 ;; Auto vars:     Size  Location     Type
 28880 ;;  t               4   47[BANK0 ] unsigned long 
 28881 ;; Return value:  Size  Location     Type
 28882 ;;                  1    wreg      void 
 28883 ;; Registers used:
 28884 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28885 ;; Tracked objects:
 28886 ;;		On entry : F/1
 28887 ;;		On exit  : F/0
 28888 ;;		Unchanged: 0/0
 28889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28891 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28893 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28894 ;;Total ram usage:        4 bytes
 28895 ;; Hardware stack levels used:    1
 28896 ;; Hardware stack levels required when called:    8
 28897 ;; This function calls:
 28898 ;;		_MSTickGet
 28899 ;;		___llmod
 28900 ;;		_krnd
 28901 ;; This function is called by:
 28902 ;;		_netResetInterval
 28903 ;;		_netDecayInterval
 28904 ;; This function uses a non-reentrant model
 28905 ;;
 28906                           
 28907                           	psect	text138
 28908  00647E                     __ptext138:
 28909                           	opt stack 0
 28910  00647E                     _netChooseAdvertiseTime:
 28911                           	opt stack 16
 28912                           
 28913                           ; BSR set to: 1
 28914                           ;BeaconManager.c: 127: SPAN t;
 28915                           ;BeaconManager.c: 128: t = currentInterval;
 28916                           
 28917                           ; BSR set to: 1
 28918                           ;incstack = 0
 28919  00647E  C1B6  F08F         	movff	_currentInterval,netChooseAdvertiseTime@t
 28920  006482  C1B7  F090         	movff	_currentInterval+1,netChooseAdvertiseTime@t+1
 28921  006486  C1B8  F091         	movff	_currentInterval+2,netChooseAdvertiseTime@t+2
 28922  00648A  C1B9  F092         	movff	_currentInterval+3,netChooseAdvertiseTime@t+3
 28923                           
 28924                           ; BSR set to: 1
 28925                           ;BeaconManager.c: 129: t /= 2;
 28926  00648E  0100               	movlb	0	; () banked
 28927  006490  90D8               	bcf	status,0,c
 28928  006492  3392               	rrcf	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 28929  006494  3391               	rrcf	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 28930  006496  3390               	rrcf	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 28931  006498  338F               	rrcf	netChooseAdvertiseTime@t& (0+255),f,b
 28932                           
 28933                           ; BSR set to: 0
 28934                           ;BeaconManager.c: 130: t += krnd() % t;
 28935  00649A  EC94  F01F         	call	_krnd	;wreg free
 28936  00649E  C073  F07F         	movff	?_krnd,___llmod@dividend
 28937  0064A2  C074  F080         	movff	?_krnd+1,___llmod@dividend+1
 28938  0064A6  C075  F081         	movff	?_krnd+2,___llmod@dividend+2
 28939  0064AA  C076  F082         	movff	?_krnd+3,___llmod@dividend+3
 28940  0064AE  C08F  F083         	movff	netChooseAdvertiseTime@t,___llmod@divisor
 28941  0064B2  C090  F084         	movff	netChooseAdvertiseTime@t+1,___llmod@divisor+1
 28942  0064B6  C091  F085         	movff	netChooseAdvertiseTime@t+2,___llmod@divisor+2
 28943  0064BA  C092  F086         	movff	netChooseAdvertiseTime@t+3,___llmod@divisor+3
 28944  0064BE  EC9B  F034         	call	___llmod	;wreg free
 28945  0064C2  517F               	movf	?___llmod& (0+255),w,b
 28946  0064C4  278F               	addwf	netChooseAdvertiseTime@t& (0+255),f,b
 28947  0064C6  5180               	movf	(?___llmod+1)& (0+255),w,b
 28948  0064C8  2390               	addwfc	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 28949  0064CA  5181               	movf	(?___llmod+2)& (0+255),w,b
 28950  0064CC  2391               	addwfc	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 28951  0064CE  5182               	movf	(?___llmod+3)& (0+255),w,b
 28952  0064D0  2392               	addwfc	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 28953                           
 28954                           ; BSR set to: 0
 28955                           ;BeaconManager.c: 131: tInterval=MSTickGet();
 28956  0064D2  EC58  F039         	call	_MSTickGet	;wreg free
 28957  0064D6  EE22  F032         	lfsr	2,_tInterval
 28958  0064DA  0E07               	movlw	7
 28959  0064DC                     u13081:
 28960  0064DC  CFEB FFDB          	movff	plusw0,plusw2
 28961  0064E0  06E8               	decf	wreg,f,c
 28962  0064E2  E2FC               	bc	u13081
 28963                           
 28964                           ; BSR set to: 0
 28965                           ;BeaconManager.c: 132: intervalDelay=t;
 28966  0064E4  C08F  F1BE         	movff	netChooseAdvertiseTime@t,_intervalDelay
 28967  0064E8  C090  F1BF         	movff	netChooseAdvertiseTime@t+1,_intervalDelay+1
 28968  0064EC  C091  F1C0         	movff	netChooseAdvertiseTime@t+2,_intervalDelay+2
 28969  0064F0  C092  F1C1         	movff	netChooseAdvertiseTime@t+3,_intervalDelay+3
 28970                           
 28971                           ; BSR set to: 0
 28972  0064F4  0012               	return		;funcret
 28973  0064F6                     __end_of_netChooseAdvertiseTime:
 28974                           	opt stack 0
 28975                           tblptru	equ	0xFF8
 28976                           tblptrh	equ	0xFF7
 28977                           tblptrl	equ	0xFF6
 28978                           tablat	equ	0xFF5
 28979                           prodh	equ	0xFF4
 28980                           prodl	equ	0xFF3
 28981                           intcon3	equ	0xFF0
 28982                           postinc0	equ	0xFEE
 28983                           plusw0	equ	0xFEB
 28984                           fsr0h	equ	0xFEA
 28985                           fsr0l	equ	0xFE9
 28986                           wreg	equ	0xFE8
 28987                           indf1	equ	0xFE7
 28988                           postinc1	equ	0xFE6
 28989                           postdec1	equ	0xFE5
 28990                           plusw1	equ	0xFE3
 28991                           fsr1h	equ	0xFE2
 28992                           fsr1l	equ	0xFE1
 28993                           indf2	equ	0xFDF
 28994                           postinc2	equ	0xFDE
 28995                           postdec2	equ	0xFDD
 28996                           plusw2	equ	0xFDB
 28997                           fsr2h	equ	0xFDA
 28998                           fsr2l	equ	0xFD9
 28999                           status	equ	0xFD8
 29000                           
 29001 ;; *************** function _krnd *****************
 29002 ;; Defined at:
 29003 ;;		line 16 in file "../krnd.c"
 29004 ;; Parameters:    Size  Location     Type
 29005 ;;		None
 29006 ;; Auto vars:     Size  Location     Type
 29007 ;;  t               4   27[BANK0 ] long 
 29008 ;; Return value:  Size  Location     Type
 29009 ;;                  4   19[BANK0 ] unsigned long 
 29010 ;; Registers used:
 29011 ;;		wreg, status,2, status,0
 29012 ;; Tracked objects:
 29013 ;;		On entry : C/0
 29014 ;;		On exit  : F/0
 29015 ;;		Unchanged: 0/0
 29016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29018 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29020 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29021 ;;Total ram usage:       12 bytes
 29022 ;; Hardware stack levels used:    1
 29023 ;; Hardware stack levels required when called:    5
 29024 ;; This function calls:
 29025 ;;		Nothing
 29026 ;; This function is called by:
 29027 ;;		_TxPacket
 29028 ;;		_MiMAC_Init
 29029 ;;		_BeaconManagerInit
 29030 ;;		_netChooseAdvertiseTime
 29031 ;;		_le_findRandomNeighborIdx
 29032 ;;		_BroadcastManagerDelaySend
 29033 ;;		_NetworkManagerTask
 29034 ;;		_NetworkInit
 29035 ;; This function uses a non-reentrant model
 29036 ;;
 29037                           
 29038                           	psect	text139
 29039  003F28                     __ptext139:
 29040                           	opt stack 0
 29041  003F28                     _krnd:
 29042                           	opt stack 17
 29043                           
 29044                           ;krnd.c: 18: int32_t t;
 29045                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;incstack = 0
 29049  003F28  C049  F077         	movff	_y,??_krnd
 29050  003F2C  C04A  F078         	movff	_y+1,??_krnd+1
 29051  003F30  C04B  F079         	movff	_y+2,??_krnd+2
 29052  003F34  C04C  F07A         	movff	_y+3,??_krnd+3
 29053  003F38  0E05               	movlw	5
 29054  003F3A                     u12335:
 29055  003F3A  90D8               	bcf	status,0,c
 29056  003F3C  0100               	movlb	0	; () banked
 29057  003F3E  3777               	rlcf	??_krnd& (0+255),f,b
 29058  003F40  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 29059  003F42  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 29060  003F44  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 29061  003F46  2EE8               	decfsz	wreg,f,c
 29062  003F48  D7F8               	goto	u12335
 29063  003F4A  5177               	movf	??_krnd& (0+255),w,b
 29064  003F4C  1A49               	xorwf	_y,f,c
 29065  003F4E  5178               	movf	(??_krnd+1)& (0+255),w,b
 29066  003F50  1A4A               	xorwf	_y+1,f,c
 29067  003F52  5179               	movf	(??_krnd+2)& (0+255),w,b
 29068  003F54  1A4B               	xorwf	_y+2,f,c
 29069  003F56  517A               	movf	(??_krnd+3)& (0+255),w,b
 29070  003F58  1A4C               	xorwf	_y+3,f,c
 29071  003F5A  C049  F077         	movff	_y,??_krnd
 29072  003F5E  C04A  F078         	movff	_y+1,??_krnd+1
 29073  003F62  C04B  F079         	movff	_y+2,??_krnd+2
 29074  003F66  C04C  F07A         	movff	_y+3,??_krnd+3
 29075  003F6A  0E08               	movlw	8
 29076  003F6C  D005               	goto	u12340
 29077  003F6E                     u12345:
 29078  003F6E  90D8               	bcf	status,0,c
 29079  003F70  337A               	rrcf	(??_krnd+3)& (0+255),f,b
 29080  003F72  3379               	rrcf	(??_krnd+2)& (0+255),f,b
 29081  003F74  3378               	rrcf	(??_krnd+1)& (0+255),f,b
 29082  003F76  3377               	rrcf	??_krnd& (0+255),f,b
 29083  003F78                     u12340:
 29084  003F78  2EE8               	decfsz	wreg,f,c
 29085  003F7A  D7F9               	goto	u12345
 29086  003F7C  5177               	movf	??_krnd& (0+255),w,b
 29087  003F7E  1A49               	xorwf	_y,f,c
 29088  003F80  5178               	movf	(??_krnd+1)& (0+255),w,b
 29089  003F82  1A4A               	xorwf	_y+1,f,c
 29090  003F84  5179               	movf	(??_krnd+2)& (0+255),w,b
 29091  003F86  1A4B               	xorwf	_y+2,f,c
 29092  003F88  517A               	movf	(??_krnd+3)& (0+255),w,b
 29093  003F8A  1A4C               	xorwf	_y+3,f,c
 29094  003F8C  C049  F077         	movff	_y,??_krnd
 29095  003F90  C04A  F078         	movff	_y+1,??_krnd+1
 29096  003F94  C04B  F079         	movff	_y+2,??_krnd+2
 29097  003F98  C04C  F07A         	movff	_y+3,??_krnd+3
 29098  003F9C  0E16               	movlw	22
 29099  003F9E                     u12355:
 29100  003F9E  90D8               	bcf	status,0,c
 29101  003FA0  3777               	rlcf	??_krnd& (0+255),f,b
 29102  003FA2  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 29103  003FA4  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 29104  003FA6  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 29105  003FA8  2EE8               	decfsz	wreg,f,c
 29106  003FAA  D7F9               	goto	u12355
 29107  003FAC  5177               	movf	??_krnd& (0+255),w,b
 29108  003FAE  1A49               	xorwf	_y,f,c
 29109  003FB0  5178               	movf	(??_krnd+1)& (0+255),w,b
 29110  003FB2  1A4A               	xorwf	_y+1,f,c
 29111  003FB4  5179               	movf	(??_krnd+2)& (0+255),w,b
 29112  003FB6  1A4B               	xorwf	_y+2,f,c
 29113  003FB8  517A               	movf	(??_krnd+3)& (0+255),w,b
 29114  003FBA  1A4C               	xorwf	_y+3,f,c
 29115                           
 29116                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 29117  003FBC  5045               	movf	_w,w,c
 29118  003FBE  0101               	movlb	1	; () banked
 29119  003FC0  25F2               	addwf	_z& (0+255),w,b
 29120  003FC2  0100               	movlb	0	; () banked
 29121  003FC4  6F77               	movwf	??_krnd& (0+255),b
 29122  003FC6  5046               	movf	_w+1,w,c
 29123  003FC8  0101               	movlb	1	; () banked
 29124  003FCA  21F3               	addwfc	(_z+1)& (0+255),w,b
 29125  003FCC  0100               	movlb	0	; () banked
 29126  003FCE  6F78               	movwf	(??_krnd+1)& (0+255),b
 29127  003FD0  5047               	movf	_w+2,w,c
 29128  003FD2  0101               	movlb	1	; () banked
 29129  003FD4  21F4               	addwfc	(_z+2)& (0+255),w,b
 29130  003FD6  0100               	movlb	0	; () banked
 29131  003FD8  6F79               	movwf	(??_krnd+2)& (0+255),b
 29132  003FDA  5048               	movf	_w+3,w,c
 29133  003FDC  0101               	movlb	1	; () banked
 29134  003FDE  21F5               	addwfc	(_z+3)& (0+255),w,b
 29135  003FE0  0100               	movlb	0	; () banked
 29136  003FE2  6F7A               	movwf	(??_krnd+3)& (0+255),b
 29137  003FE4  0102               	movlb	2	; () banked
 29138  003FE6  514A               	movf	_c& (0+255),w,b
 29139  003FE8  0100               	movlb	0	; () banked
 29140  003FEA  2577               	addwf	??_krnd& (0+255),w,b
 29141  003FEC  6F7B               	movwf	krnd@t& (0+255),b
 29142  003FEE  0102               	movlb	2	; () banked
 29143  003FF0  514B               	movf	(_c+1)& (0+255),w,b
 29144  003FF2  0100               	movlb	0	; () banked
 29145  003FF4  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 29146  003FF6  6F7C               	movwf	(krnd@t+1)& (0+255),b
 29147  003FF8  0102               	movlb	2	; () banked
 29148  003FFA  514C               	movf	(_c+2)& (0+255),w,b
 29149  003FFC  0100               	movlb	0	; () banked
 29150  003FFE  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 29151  004000  6F7D               	movwf	(krnd@t+2)& (0+255),b
 29152  004002  0102               	movlb	2	; () banked
 29153  004004  514D               	movf	(_c+3)& (0+255),w,b
 29154  004006  0100               	movlb	0	; () banked
 29155  004008  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 29156  00400A  6F7E               	movwf	(krnd@t+3)& (0+255),b
 29157                           
 29158                           ; BSR set to: 0
 29159  00400C  C045  F1F2         	movff	_w,_z
 29160  004010  C046  F1F3         	movff	_w+1,_z+1
 29161  004014  C047  F1F4         	movff	_w+2,_z+2
 29162  004018  C048  F1F5         	movff	_w+3,_z+3
 29163  00401C  0E01               	movlw	1
 29164  00401E  AF7E               	btfss	(krnd@t+3)& (0+255),7,b
 29165  004020  0E00               	movlw	0
 29166  004022  0102               	movlb	2	; () banked
 29167  004024  6F4A               	movwf	_c& (0+255),b
 29168  004026  6B4B               	clrf	(_c+1)& (0+255),b
 29169  004028  6B4C               	clrf	(_c+2)& (0+255),b
 29170  00402A  6B4D               	clrf	(_c+3)& (0+255),b
 29171  00402C  0E3A               	movlw	58
 29172  00402E  0100               	movlb	0	; () banked
 29173  004030  157B               	andwf	krnd@t& (0+255),w,b
 29174  004032  6E45               	movwf	_w,c
 29175  004034  0E37               	movlw	55
 29176  004036  157C               	andwf	(krnd@t+1)& (0+255),w,b
 29177  004038  6E46               	movwf	_w+1,c
 29178  00403A  0EDE               	movlw	222
 29179  00403C  157D               	andwf	(krnd@t+2)& (0+255),w,b
 29180  00403E  6E47               	movwf	_w+2,c
 29181  004040  0E54               	movlw	84
 29182  004042  157E               	andwf	(krnd@t+3)& (0+255),w,b
 29183  004044  6E48               	movwf	_w+3,c
 29184                           
 29185                           ;krnd.c: 24: x += 1832334820;
 29186  004046  0EE4               	movlw	228
 29187  004048  0101               	movlb	1	; () banked
 29188  00404A  27EE               	addwf	_x& (0+255),f,b
 29189  00404C  0E35               	movlw	53
 29190  00404E  23EF               	addwfc	(_x+1)& (0+255),f,b
 29191  004050  0E37               	movlw	55
 29192  004052  23F0               	addwfc	(_x+2)& (0+255),f,b
 29193  004054  0E6D               	movlw	109
 29194  004056  23F1               	addwfc	(_x+3)& (0+255),f,b
 29195                           
 29196                           ;krnd.c: 26: return x + y + w;
 29197  004058  5049               	movf	_y,w,c
 29198  00405A  25EE               	addwf	_x& (0+255),w,b
 29199  00405C  0100               	movlb	0	; () banked
 29200  00405E  6F77               	movwf	??_krnd& (0+255),b
 29201  004060  504A               	movf	_y+1,w,c
 29202  004062  0101               	movlb	1	; () banked
 29203  004064  21EF               	addwfc	(_x+1)& (0+255),w,b
 29204  004066  0100               	movlb	0	; () banked
 29205  004068  6F78               	movwf	(??_krnd+1)& (0+255),b
 29206  00406A  504B               	movf	_y+2,w,c
 29207  00406C  0101               	movlb	1	; () banked
 29208  00406E  21F0               	addwfc	(_x+2)& (0+255),w,b
 29209  004070  0100               	movlb	0	; () banked
 29210  004072  6F79               	movwf	(??_krnd+2)& (0+255),b
 29211  004074  504C               	movf	_y+3,w,c
 29212  004076  0101               	movlb	1	; () banked
 29213  004078  21F1               	addwfc	(_x+3)& (0+255),w,b
 29214  00407A  0100               	movlb	0	; () banked
 29215  00407C  6F7A               	movwf	(??_krnd+3)& (0+255),b
 29216  00407E  5045               	movf	_w,w,c
 29217  004080  2577               	addwf	??_krnd& (0+255),w,b
 29218  004082  6F73               	movwf	?_krnd& (0+255),b
 29219  004084  5046               	movf	_w+1,w,c
 29220  004086  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 29221  004088  6F74               	movwf	(?_krnd+1)& (0+255),b
 29222  00408A  5047               	movf	_w+2,w,c
 29223  00408C  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 29224  00408E  6F75               	movwf	(?_krnd+2)& (0+255),b
 29225  004090  5048               	movf	_w+3,w,c
 29226  004092  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 29227  004094  6F76               	movwf	(?_krnd+3)& (0+255),b
 29228                           
 29229                           ; BSR set to: 0
 29230  004096  0012               	return		;funcret
 29231  004098                     __end_of_krnd:
 29232                           	opt stack 0
 29233                           tblptru	equ	0xFF8
 29234                           tblptrh	equ	0xFF7
 29235                           tblptrl	equ	0xFF6
 29236                           tablat	equ	0xFF5
 29237                           prodh	equ	0xFF4
 29238                           prodl	equ	0xFF3
 29239                           intcon3	equ	0xFF0
 29240                           postinc0	equ	0xFEE
 29241                           plusw0	equ	0xFEB
 29242                           fsr0h	equ	0xFEA
 29243                           fsr0l	equ	0xFE9
 29244                           wreg	equ	0xFE8
 29245                           indf1	equ	0xFE7
 29246                           postinc1	equ	0xFE6
 29247                           postdec1	equ	0xFE5
 29248                           plusw1	equ	0xFE3
 29249                           fsr1h	equ	0xFE2
 29250                           fsr1l	equ	0xFE1
 29251                           indf2	equ	0xFDF
 29252                           postinc2	equ	0xFDE
 29253                           postdec2	equ	0xFDD
 29254                           plusw2	equ	0xFDB
 29255                           fsr2h	equ	0xFDA
 29256                           fsr2l	equ	0xFD9
 29257                           status	equ	0xFD8
 29258                           
 29259 ;; *************** function ___llmod *****************
 29260 ;; Defined at:
 29261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 29262 ;; Parameters:    Size  Location     Type
 29263 ;;  dividend        4   31[BANK0 ] unsigned long 
 29264 ;;  divisor         4   35[BANK0 ] unsigned long 
 29265 ;; Auto vars:     Size  Location     Type
 29266 ;;  counter         1   39[BANK0 ] unsigned char 
 29267 ;; Return value:  Size  Location     Type
 29268 ;;                  4   31[BANK0 ] unsigned long 
 29269 ;; Registers used:
 29270 ;;		wreg, status,2, status,0
 29271 ;; Tracked objects:
 29272 ;;		On entry : F/0
 29273 ;;		On exit  : F/0
 29274 ;;		Unchanged: 0/0
 29275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29276 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29279 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29280 ;;Total ram usage:        9 bytes
 29281 ;; Hardware stack levels used:    1
 29282 ;; Hardware stack levels required when called:    5
 29283 ;; This function calls:
 29284 ;;		Nothing
 29285 ;; This function is called by:
 29286 ;;		_netChooseAdvertiseTime
 29287 ;; This function uses a non-reentrant model
 29288 ;;
 29289                           
 29290                           	psect	text140
 29291  006936                     __ptext140:
 29292                           	opt stack 0
 29293  006936                     ___llmod:
 29294                           	opt stack 18
 29295                           
 29296                           ; BSR set to: 0
 29297                           
 29298                           ; BSR set to: 0
 29299                           ;incstack = 0
 29300  006936  5183               	movf	___llmod@divisor& (0+255),w,b
 29301  006938  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29302  00693A  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29303  00693C  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29304  00693E  E023               	bz	l2595
 29305                           
 29306                           ; BSR set to: 0
 29307  006940  0E01               	movlw	1
 29308  006942  6F87               	movwf	___llmod@counter& (0+255),b
 29309  006944  D006               	goto	l12018
 29310  006946                     l12016:
 29311                           
 29312                           ; BSR set to: 0
 29313  006946  90D8               	bcf	status,0,c
 29314  006948  3783               	rlcf	___llmod@divisor& (0+255),f,b
 29315  00694A  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 29316  00694C  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 29317  00694E  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 29318  006950  2B87               	incf	___llmod@counter& (0+255),f,b
 29319  006952                     l12018:
 29320                           
 29321                           ; BSR set to: 0
 29322  006952  AF86               	btfss	(___llmod@divisor+3)& (0+255),7,b
 29323  006954  D7F8               	goto	l12016
 29324  006956                     l12020:
 29325                           
 29326                           ; BSR set to: 0
 29327  006956  5183               	movf	___llmod@divisor& (0+255),w,b
 29328  006958  5D7F               	subwf	___llmod@dividend& (0+255),w,b
 29329  00695A  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 29330  00695C  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 29331  00695E  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 29332  006960  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 29333  006962  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 29334  006964  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 29335  006966  E308               	bnc	l12024
 29336                           
 29337                           ; BSR set to: 0
 29338  006968  5183               	movf	___llmod@divisor& (0+255),w,b
 29339  00696A  5F7F               	subwf	___llmod@dividend& (0+255),f,b
 29340  00696C  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 29341  00696E  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 29342  006970  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 29343  006972  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 29344  006974  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 29345  006976  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 29346  006978                     l12024:
 29347                           
 29348                           ; BSR set to: 0
 29349  006978  90D8               	bcf	status,0,c
 29350  00697A  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 29351  00697C  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 29352  00697E  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 29353  006980  3383               	rrcf	___llmod@divisor& (0+255),f,b
 29354                           
 29355                           ; BSR set to: 0
 29356  006982  2F87               	decfsz	___llmod@counter& (0+255),f,b
 29357  006984  D7E8               	goto	l12020
 29358  006986                     l2595:
 29359                           
 29360                           ; BSR set to: 0
 29361  006986  C07F  F07F         	movff	___llmod@dividend,?___llmod
 29362  00698A  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
 29363  00698E  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
 29364  006992  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
 29365                           
 29366                           ; BSR set to: 0
 29367  006996  0012               	return		;funcret
 29368  006998                     __end_of___llmod:
 29369                           	opt stack 0
 29370                           tblptru	equ	0xFF8
 29371                           tblptrh	equ	0xFF7
 29372                           tblptrl	equ	0xFF6
 29373                           tablat	equ	0xFF5
 29374                           prodh	equ	0xFF4
 29375                           prodl	equ	0xFF3
 29376                           intcon3	equ	0xFF0
 29377                           postinc0	equ	0xFEE
 29378                           plusw0	equ	0xFEB
 29379                           fsr0h	equ	0xFEA
 29380                           fsr0l	equ	0xFE9
 29381                           wreg	equ	0xFE8
 29382                           indf1	equ	0xFE7
 29383                           postinc1	equ	0xFE6
 29384                           postdec1	equ	0xFE5
 29385                           plusw1	equ	0xFE3
 29386                           fsr1h	equ	0xFE2
 29387                           fsr1l	equ	0xFE1
 29388                           indf2	equ	0xFDF
 29389                           postinc2	equ	0xFDE
 29390                           postdec2	equ	0xFDD
 29391                           plusw2	equ	0xFDB
 29392                           fsr2h	equ	0xFDA
 29393                           fsr2l	equ	0xFD9
 29394                           status	equ	0xFD8
 29395                           
 29396 ;; *************** function _MSTickGet *****************
 29397 ;; Defined at:
 29398 ;;		line 71 in file "../TimeTick.c"
 29399 ;; Parameters:    Size  Location     Type
 29400 ;;		None
 29401 ;; Auto vars:     Size  Location     Type
 29402 ;;  tNow            8   39[BANK0 ] struct TickMS_t_def
 29403 ;; Return value:  Size  Location     Type
 29404 ;;                  8   31[BANK0 ] struct TickMS_t_def
 29405 ;; Registers used:
 29406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29407 ;; Tracked objects:
 29408 ;;		On entry : C/0
 29409 ;;		On exit  : F/0
 29410 ;;		Unchanged: 0/0
 29411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29412 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29413 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29415 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29416 ;;Total ram usage:       16 bytes
 29417 ;; Hardware stack levels used:    1
 29418 ;; Hardware stack levels required when called:    7
 29419 ;; This function calls:
 29420 ;;		_TimerEnterCritical
 29421 ;;		_TimerExitCritical
 29422 ;;		_memcpy
 29423 ;; This function is called by:
 29424 ;;		_RouteManagerInit
 29425 ;;		_RouteManagerTask
 29426 ;;		_BeaconManagerTask
 29427 ;;		_netChooseAdvertiseTime
 29428 ;;		_BroadcastManagerTask
 29429 ;;		_BroadcastManagerDelaySend
 29430 ;;		_TunnelManagerSetTunnel
 29431 ;;		_isKnownPacket
 29432 ;;		_TransportManagerTask
 29433 ;;		_NetworkManagerTask
 29434 ;;		_IsNetworkDevice
 29435 ;;		_MSTickGetDiffNow
 29436 ;; This function uses a non-reentrant model
 29437 ;;
 29438                           
 29439                           	psect	text141
 29440  0072B0                     __ptext141:
 29441                           	opt stack 0
 29442  0072B0                     _MSTickGet:
 29443                           	opt stack 17
 29444                           
 29445                           ;TimeTick.c: 73: TickMS tNow;
 29446                           ;TimeTick.c: 74: TimerEnterCritical();
 29447                           
 29448                           ; BSR set to: 0
 29449                           ;incstack = 0
 29450  0072B0  EC55  F03C         	call	_TimerEnterCritical	;wreg free
 29451                           
 29452                           ;TimeTick.c: 75: memcpy(&tNow,&Tick_MS,sizeof(Tick_MS));
 29453  0072B4  0E87               	movlw	low MSTickGet@tNow
 29454  0072B6  0100               	movlb	0	; () banked
 29455  0072B8  6F75               	movwf	memcpy@d1& (0+255),b
 29456  0072BA  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 29457  0072BC  0E84               	movlw	low _Tick_MS
 29458  0072BE  6F77               	movwf	memcpy@s1& (0+255),b
 29459  0072C0  0E02               	movlw	high _Tick_MS
 29460  0072C2  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 29461  0072C4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 29462  0072C6  0E08               	movlw	8
 29463  0072C8  6F79               	movwf	memcpy@n& (0+255),b
 29464  0072CA  EC5D  F036         	call	_memcpy	;wreg free
 29465                           
 29466                           ; BSR set to: 0
 29467                           ;TimeTick.c: 76: TimerExitCritical();
 29468  0072CE  EC51  F03C         	call	_TimerExitCritical	;wreg free
 29469                           
 29470                           ; BSR set to: 0
 29471                           ;TimeTick.c: 77: return(tNow);
 29472  0072D2  EE20  F087         	lfsr	2,MSTickGet@tNow
 29473  0072D6  EE00  F07F         	lfsr	0,?_MSTickGet
 29474  0072DA  0E07               	movlw	7
 29475  0072DC                     u12781:
 29476  0072DC  CFDB FFEB          	movff	plusw2,plusw0
 29477  0072E0  06E8               	decf	wreg,f,c
 29478  0072E2  E2FC               	bc	u12781
 29479                           
 29480                           ; BSR set to: 0
 29481  0072E4  0012               	return		;funcret
 29482  0072E6                     __end_of_MSTickGet:
 29483                           	opt stack 0
 29484                           tblptru	equ	0xFF8
 29485                           tblptrh	equ	0xFF7
 29486                           tblptrl	equ	0xFF6
 29487                           tablat	equ	0xFF5
 29488                           prodh	equ	0xFF4
 29489                           prodl	equ	0xFF3
 29490                           intcon3	equ	0xFF0
 29491                           postinc0	equ	0xFEE
 29492                           plusw0	equ	0xFEB
 29493                           fsr0h	equ	0xFEA
 29494                           fsr0l	equ	0xFE9
 29495                           wreg	equ	0xFE8
 29496                           indf1	equ	0xFE7
 29497                           postinc1	equ	0xFE6
 29498                           postdec1	equ	0xFE5
 29499                           plusw1	equ	0xFE3
 29500                           fsr1h	equ	0xFE2
 29501                           fsr1l	equ	0xFE1
 29502                           indf2	equ	0xFDF
 29503                           postinc2	equ	0xFDE
 29504                           postdec2	equ	0xFDD
 29505                           plusw2	equ	0xFDB
 29506                           fsr2h	equ	0xFDA
 29507                           fsr2l	equ	0xFD9
 29508                           status	equ	0xFD8
 29509                           
 29510 ;; *************** function _TimerExitCritical *****************
 29511 ;; Defined at:
 29512 ;;		line 157 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29513 ;; Parameters:    Size  Location     Type
 29514 ;;		None
 29515 ;; Auto vars:     Size  Location     Type
 29516 ;;		None
 29517 ;; Return value:  Size  Location     Type
 29518 ;;                  1    wreg      void 
 29519 ;; Registers used:
 29520 ;;		cstack
 29521 ;; Tracked objects:
 29522 ;;		On entry : F/0
 29523 ;;		On exit  : F/0
 29524 ;;		Unchanged: F/0
 29525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29530 ;;Total ram usage:        0 bytes
 29531 ;; Hardware stack levels used:    1
 29532 ;; Hardware stack levels required when called:    6
 29533 ;; This function calls:
 29534 ;;		_TimerEnable
 29535 ;; This function is called by:
 29536 ;;		_MSTickGet
 29537 ;; This function uses a non-reentrant model
 29538 ;;
 29539                           
 29540                           	psect	text142
 29541  0078A2                     __ptext142:
 29542                           	opt stack 0
 29543  0078A2                     _TimerExitCritical:
 29544                           	opt stack 17
 29545                           
 29546                           ; BSR set to: 0
 29547                           ;symbol.c: 159: TimerEnable();
 29548                           
 29549                           ; BSR set to: 0
 29550                           ;incstack = 0
 29551  0078A2  EF53  F03C         	goto	_TimerEnable	;wreg free
 29552  0078A6                     __end_of_TimerExitCritical:
 29553                           	opt stack 0
 29554                           tblptru	equ	0xFF8
 29555                           tblptrh	equ	0xFF7
 29556                           tblptrl	equ	0xFF6
 29557                           tablat	equ	0xFF5
 29558                           prodh	equ	0xFF4
 29559                           prodl	equ	0xFF3
 29560                           intcon3	equ	0xFF0
 29561                           postinc0	equ	0xFEE
 29562                           plusw0	equ	0xFEB
 29563                           fsr0h	equ	0xFEA
 29564                           fsr0l	equ	0xFE9
 29565                           wreg	equ	0xFE8
 29566                           indf1	equ	0xFE7
 29567                           postinc1	equ	0xFE6
 29568                           postdec1	equ	0xFE5
 29569                           plusw1	equ	0xFE3
 29570                           fsr1h	equ	0xFE2
 29571                           fsr1l	equ	0xFE1
 29572                           indf2	equ	0xFDF
 29573                           postinc2	equ	0xFDE
 29574                           postdec2	equ	0xFDD
 29575                           plusw2	equ	0xFDB
 29576                           fsr2h	equ	0xFDA
 29577                           fsr2l	equ	0xFD9
 29578                           status	equ	0xFD8
 29579                           
 29580 ;; *************** function _TimerEnable *****************
 29581 ;; Defined at:
 29582 ;;		line 147 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29583 ;; Parameters:    Size  Location     Type
 29584 ;;		None
 29585 ;; Auto vars:     Size  Location     Type
 29586 ;;		None
 29587 ;; Return value:  Size  Location     Type
 29588 ;;                  1    wreg      void 
 29589 ;; Registers used:
 29590 ;;		None
 29591 ;; Tracked objects:
 29592 ;;		On entry : F/0
 29593 ;;		On exit  : F/0
 29594 ;;		Unchanged: F/0
 29595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29600 ;;Total ram usage:        0 bytes
 29601 ;; Hardware stack levels used:    1
 29602 ;; Hardware stack levels required when called:    5
 29603 ;; This function calls:
 29604 ;;		Nothing
 29605 ;; This function is called by:
 29606 ;;		_TimerExitCritical
 29607 ;; This function uses a non-reentrant model
 29608 ;;
 29609                           
 29610                           	psect	text143
 29611  0078A6                     __ptext143:
 29612                           	opt stack 0
 29613  0078A6                     _TimerEnable:
 29614                           	opt stack 17
 29615                           
 29616                           ; BSR set to: 0
 29617                           ;symbol.c: 149: INTCONbits.TMR0IE=1;
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;incstack = 0
 29621  0078A6  8AF2               	bsf	intcon,5,c	;volatile
 29622                           
 29623                           ; BSR set to: 0
 29624  0078A8  0012               	return		;funcret
 29625  0078AA                     __end_of_TimerEnable:
 29626                           	opt stack 0
 29627                           tblptru	equ	0xFF8
 29628                           tblptrh	equ	0xFF7
 29629                           tblptrl	equ	0xFF6
 29630                           tablat	equ	0xFF5
 29631                           prodh	equ	0xFF4
 29632                           prodl	equ	0xFF3
 29633                           intcon	equ	0xFF2
 29634                           intcon3	equ	0xFF0
 29635                           postinc0	equ	0xFEE
 29636                           plusw0	equ	0xFEB
 29637                           fsr0h	equ	0xFEA
 29638                           fsr0l	equ	0xFE9
 29639                           wreg	equ	0xFE8
 29640                           indf1	equ	0xFE7
 29641                           postinc1	equ	0xFE6
 29642                           postdec1	equ	0xFE5
 29643                           plusw1	equ	0xFE3
 29644                           fsr1h	equ	0xFE2
 29645                           fsr1l	equ	0xFE1
 29646                           indf2	equ	0xFDF
 29647                           postinc2	equ	0xFDE
 29648                           postdec2	equ	0xFDD
 29649                           plusw2	equ	0xFDB
 29650                           fsr2h	equ	0xFDA
 29651                           fsr2l	equ	0xFD9
 29652                           status	equ	0xFD8
 29653                           
 29654 ;; *************** function _TimerEnterCritical *****************
 29655 ;; Defined at:
 29656 ;;		line 152 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29657 ;; Parameters:    Size  Location     Type
 29658 ;;		None
 29659 ;; Auto vars:     Size  Location     Type
 29660 ;;		None
 29661 ;; Return value:  Size  Location     Type
 29662 ;;                  1    wreg      void 
 29663 ;; Registers used:
 29664 ;;		cstack
 29665 ;; Tracked objects:
 29666 ;;		On entry : C/0
 29667 ;;		On exit  : C/0
 29668 ;;		Unchanged: C/0
 29669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29674 ;;Total ram usage:        0 bytes
 29675 ;; Hardware stack levels used:    1
 29676 ;; Hardware stack levels required when called:    6
 29677 ;; This function calls:
 29678 ;;		_TimerDisable
 29679 ;; This function is called by:
 29680 ;;		_MSTickGet
 29681 ;; This function uses a non-reentrant model
 29682 ;;
 29683                           
 29684                           	psect	text144
 29685  0078AA                     __ptext144:
 29686                           	opt stack 0
 29687  0078AA                     _TimerEnterCritical:
 29688                           	opt stack 17
 29689                           
 29690                           ;symbol.c: 154: TimerDisable();
 29691                           
 29692                           ; BSR set to: 0
 29693                           ;incstack = 0
 29694  0078AA  EF57  F03C         	goto	_TimerDisable	;wreg free
 29695  0078AE                     __end_of_TimerEnterCritical:
 29696                           	opt stack 0
 29697                           tblptru	equ	0xFF8
 29698                           tblptrh	equ	0xFF7
 29699                           tblptrl	equ	0xFF6
 29700                           tablat	equ	0xFF5
 29701                           prodh	equ	0xFF4
 29702                           prodl	equ	0xFF3
 29703                           intcon	equ	0xFF2
 29704                           intcon3	equ	0xFF0
 29705                           postinc0	equ	0xFEE
 29706                           plusw0	equ	0xFEB
 29707                           fsr0h	equ	0xFEA
 29708                           fsr0l	equ	0xFE9
 29709                           wreg	equ	0xFE8
 29710                           indf1	equ	0xFE7
 29711                           postinc1	equ	0xFE6
 29712                           postdec1	equ	0xFE5
 29713                           plusw1	equ	0xFE3
 29714                           fsr1h	equ	0xFE2
 29715                           fsr1l	equ	0xFE1
 29716                           indf2	equ	0xFDF
 29717                           postinc2	equ	0xFDE
 29718                           postdec2	equ	0xFDD
 29719                           plusw2	equ	0xFDB
 29720                           fsr2h	equ	0xFDA
 29721                           fsr2l	equ	0xFD9
 29722                           status	equ	0xFD8
 29723                           
 29724 ;; *************** function _TimerDisable *****************
 29725 ;; Defined at:
 29726 ;;		line 143 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 29727 ;; Parameters:    Size  Location     Type
 29728 ;;		None
 29729 ;; Auto vars:     Size  Location     Type
 29730 ;;		None
 29731 ;; Return value:  Size  Location     Type
 29732 ;;                  1    wreg      void 
 29733 ;; Registers used:
 29734 ;;		None
 29735 ;; Tracked objects:
 29736 ;;		On entry : C/0
 29737 ;;		On exit  : C/0
 29738 ;;		Unchanged: C/0
 29739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29744 ;;Total ram usage:        0 bytes
 29745 ;; Hardware stack levels used:    1
 29746 ;; Hardware stack levels required when called:    5
 29747 ;; This function calls:
 29748 ;;		Nothing
 29749 ;; This function is called by:
 29750 ;;		_TimerEnterCritical
 29751 ;; This function uses a non-reentrant model
 29752 ;;
 29753                           
 29754                           	psect	text145
 29755  0078AE                     __ptext145:
 29756                           	opt stack 0
 29757  0078AE                     _TimerDisable:
 29758                           	opt stack 17
 29759                           
 29760                           ;symbol.c: 145: INTCONbits.TMR0IE=0;
 29761                           
 29762                           ;incstack = 0
 29763  0078AE  9AF2               	bcf	intcon,5,c	;volatile
 29764  0078B0  0012               	return		;funcret
 29765  0078B2                     __end_of_TimerDisable:
 29766                           	opt stack 0
 29767                           tblptru	equ	0xFF8
 29768                           tblptrh	equ	0xFF7
 29769                           tblptrl	equ	0xFF6
 29770                           tablat	equ	0xFF5
 29771                           prodh	equ	0xFF4
 29772                           prodl	equ	0xFF3
 29773                           intcon	equ	0xFF2
 29774                           intcon3	equ	0xFF0
 29775                           postinc0	equ	0xFEE
 29776                           plusw0	equ	0xFEB
 29777                           fsr0h	equ	0xFEA
 29778                           fsr0l	equ	0xFE9
 29779                           wreg	equ	0xFE8
 29780                           indf1	equ	0xFE7
 29781                           postinc1	equ	0xFE6
 29782                           postdec1	equ	0xFE5
 29783                           plusw1	equ	0xFE3
 29784                           fsr1h	equ	0xFE2
 29785                           fsr1l	equ	0xFE1
 29786                           indf2	equ	0xFDF
 29787                           postinc2	equ	0xFDE
 29788                           postdec2	equ	0xFDD
 29789                           plusw2	equ	0xFDB
 29790                           fsr2h	equ	0xFDA
 29791                           fsr2l	equ	0xFD9
 29792                           status	equ	0xFD8
 29793                           
 29794 ;; *************** function _MiApp_SetChannel *****************
 29795 ;; Defined at:
 29796 ;;		line 168 in file "../src/Bridge.c"
 29797 ;; Parameters:    Size  Location     Type
 29798 ;;  Channel         1    wreg     unsigned char 
 29799 ;; Auto vars:     Size  Location     Type
 29800 ;;  Channel         1   28[BANK0 ] unsigned char 
 29801 ;;  res             1    0        unsigned char 
 29802 ;; Return value:  Size  Location     Type
 29803 ;;                  1    wreg      unsigned char 
 29804 ;; Registers used:
 29805 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29806 ;; Tracked objects:
 29807 ;;		On entry : E/1
 29808 ;;		On exit  : 0/0
 29809 ;;		Unchanged: 0/0
 29810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29812 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;Total ram usage:        2 bytes
 29816 ;; Hardware stack levels used:    1
 29817 ;; Hardware stack levels required when called:    9
 29818 ;; This function calls:
 29819 ;;		_MiMAC_SetChannel
 29820 ;; This function is called by:
 29821 ;;		_MiApp_EstablishConnection
 29822 ;;		_MiApp_SearchConnection
 29823 ;; This function uses a non-reentrant model
 29824 ;;
 29825                           
 29826                           	psect	text146
 29827  0077F0                     __ptext146:
 29828                           	opt stack 0
 29829  0077F0                     _MiApp_SetChannel:
 29830                           	opt stack 20
 29831                           
 29832                           ;incstack = 0
 29833                           ;MiApp_SetChannel@Channel stored from wreg
 29834  0077F0  0100               	movlb	0	; () banked
 29835  0077F2  6F7C               	movwf	MiApp_SetChannel@Channel& (0+255),b
 29836  0077F4  6B79               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
 29837  0077F6  517C               	movf	MiApp_SetChannel@Channel& (0+255),w,b
 29838  0077F8  EF74  F030         	goto	_MiMAC_SetChannel
 29839  0077FC                     __end_of_MiApp_SetChannel:
 29840                           	opt stack 0
 29841                           tblptru	equ	0xFF8
 29842                           tblptrh	equ	0xFF7
 29843                           tblptrl	equ	0xFF6
 29844                           tablat	equ	0xFF5
 29845                           prodh	equ	0xFF4
 29846                           prodl	equ	0xFF3
 29847                           intcon	equ	0xFF2
 29848                           intcon3	equ	0xFF0
 29849                           postinc0	equ	0xFEE
 29850                           plusw0	equ	0xFEB
 29851                           fsr0h	equ	0xFEA
 29852                           fsr0l	equ	0xFE9
 29853                           wreg	equ	0xFE8
 29854                           indf1	equ	0xFE7
 29855                           postinc1	equ	0xFE6
 29856                           postdec1	equ	0xFE5
 29857                           plusw1	equ	0xFE3
 29858                           fsr1h	equ	0xFE2
 29859                           fsr1l	equ	0xFE1
 29860                           indf2	equ	0xFDF
 29861                           postinc2	equ	0xFDE
 29862                           postdec2	equ	0xFDD
 29863                           plusw2	equ	0xFDB
 29864                           fsr2h	equ	0xFDA
 29865                           fsr2l	equ	0xFD9
 29866                           status	equ	0xFD8
 29867                           
 29868 ;; *************** function _MiMAC_SetChannel *****************
 29869 ;; Defined at:
 29870 ;;		line 553 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 29871 ;; Parameters:    Size  Location     Type
 29872 ;;  channel         1    wreg     unsigned char 
 29873 ;;  offsetFreq      1   25[BANK0 ] unsigned char 
 29874 ;; Auto vars:     Size  Location     Type
 29875 ;;  channel         1   27[BANK0 ] unsigned char 
 29876 ;; Return value:  Size  Location     Type
 29877 ;;                  1    wreg      unsigned char 
 29878 ;; Registers used:
 29879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29880 ;; Tracked objects:
 29881 ;;		On entry : F/0
 29882 ;;		On exit  : 0/0
 29883 ;;		Unchanged: 0/0
 29884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29885 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29887 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29888 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29889 ;;Total ram usage:        3 bytes
 29890 ;; Hardware stack levels used:    1
 29891 ;; Hardware stack levels required when called:    8
 29892 ;; This function calls:
 29893 ;;		_RegisterSet
 29894 ;;		_SetRFMode
 29895 ;; This function is called by:
 29896 ;;		_MiApp_SetChannel
 29897 ;; This function uses a non-reentrant model
 29898 ;;
 29899                           
 29900                           	psect	text147
 29901  0060E8                     __ptext147:
 29902                           	opt stack 0
 29903  0060E8                     _MiMAC_SetChannel:
 29904                           	opt stack 20
 29905                           
 29906                           ;incstack = 0
 29907                           ;MiMAC_SetChannel@channel stored from wreg
 29908  0060E8  6F7B               	movwf	MiMAC_SetChannel@channel& (0+255),b
 29909                           
 29910                           ;drv_mrf_miwi_mesh_89xa.c: 555: if( channel >= 32 )
 29911  0060EA  0E1F               	movlw	31
 29912  0060EC  0100               	movlb	0	; () banked
 29913  0060EE  657B               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 29914  0060F0  D001               	goto	l13800
 29915  0060F2  0C00               	retlw	0
 29916  0060F4                     l13800:
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;drv_mrf_miwi_mesh_89xa.c: 558: }
 29920                           ;drv_mrf_miwi_mesh_89xa.c: 561: RegisterSet(0x0C00 | 100);
 29921  0060F4  0E0C               	movlw	12
 29922  0060F6  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29923  0060F8  0E64               	movlw	100
 29924  0060FA  6F75               	movwf	RegisterSet@setting& (0+255),b
 29925  0060FC  EC61  F03A         	call	_RegisterSet	;wreg free
 29926                           
 29927                           ;drv_mrf_miwi_mesh_89xa.c: 562: RegisterSet(0x0E00 | PVALUE[channel]);
 29928  006100  0E49               	movlw	low _PVALUE
 29929  006102  0100               	movlb	0	; () banked
 29930  006104  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
 29931  006106  6EF6               	movwf	tblptrl,c
 29932  006108  6AF7               	clrf	tblptrh,c
 29933  00610A  0EFF               	movlw	high _PVALUE
 29934  00610C  22F7               	addwfc	tblptrh,f,c
 29935  00610E                     	if	0	;There are less than 3 active tblptr bytes
 29936  00610E                     	endif
 29937  00610E  0008               	tblrd		*
 29938  006110  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
 29939  006114  0E00               	movlw	0
 29940  006116  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29941  006118  6F75               	movwf	RegisterSet@setting& (0+255),b
 29942  00611A  0E0E               	movlw	14
 29943  00611C  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29944  00611E  EC61  F03A         	call	_RegisterSet	;wreg free
 29945                           
 29946                           ;drv_mrf_miwi_mesh_89xa.c: 563: RegisterSet(0x1000 | SVALUE[channel]);
 29947  006122  0E69               	movlw	low _SVALUE
 29948  006124  0100               	movlb	0	; () banked
 29949  006126  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
 29950  006128  6EF6               	movwf	tblptrl,c
 29951  00612A  6AF7               	clrf	tblptrh,c
 29952  00612C  0EFF               	movlw	high _SVALUE
 29953  00612E  22F7               	addwfc	tblptrh,f,c
 29954  006130                     	if	0	;There are less than 3 active tblptr bytes
 29955  006130                     	endif
 29956  006130  0008               	tblrd		*
 29957  006132  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
 29958  006136  0E00               	movlw	0
 29959  006138  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
 29960  00613A  6F75               	movwf	RegisterSet@setting& (0+255),b
 29961  00613C  0E10               	movlw	16
 29962  00613E  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29963  006140  EC61  F03A         	call	_RegisterSet	;wreg free
 29964                           
 29965                           ;drv_mrf_miwi_mesh_89xa.c: 564: SetRFMode(0x20);
 29966  006144  0E20               	movlw	32
 29967  006146  EC99  F033         	call	_SetRFMode
 29968                           
 29969                           ;drv_mrf_miwi_mesh_89xa.c: 565: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 29970  00614A  0100               	movlb	0	; () banked
 29971  00614C  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 29972  00614E  0E4E               	movlw	78
 29973  006150  6F75               	movwf	RegisterSet@setting& (0+255),b
 29974  006152  EC61  F03A         	call	_RegisterSet	;wreg free
 29975                           
 29976                           ;drv_mrf_miwi_mesh_89xa.c: 566: SetRFMode(0x40);
 29977  006156  0E40               	movlw	64
 29978  006158  EC99  F033         	call	_SetRFMode
 29979                           
 29980                           ;drv_mrf_miwi_mesh_89xa.c: 567: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
 29981  00615C  0E1C               	movlw	28
 29982  00615E  0100               	movlb	0	; () banked
 29983  006160  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 29984  006162  0E0F               	movlw	15
 29985  006164  6F75               	movwf	RegisterSet@setting& (0+255),b
 29986  006166  EC61  F03A         	call	_RegisterSet	;wreg free
 29987                           
 29988                           ;drv_mrf_miwi_mesh_89xa.c: 568: SetRFMode(0x20);
 29989  00616A  0E20               	movlw	32
 29990  00616C  EC99  F033         	call	_SetRFMode
 29991                           
 29992                           ;drv_mrf_miwi_mesh_89xa.c: 569: SetRFMode(0x60);
 29993  006170  0E60               	movlw	96
 29994  006172  EC99  F033         	call	_SetRFMode
 29995                           
 29996                           ;drv_mrf_miwi_mesh_89xa.c: 571: return 1;
 29997  006176  0C01               	retlw	1	;funcret
 29998  006178                     __end_of_MiMAC_SetChannel:
 29999                           	opt stack 0
 30000                           tblptru	equ	0xFF8
 30001                           tblptrh	equ	0xFF7
 30002                           tblptrl	equ	0xFF6
 30003                           tablat	equ	0xFF5
 30004                           prodh	equ	0xFF4
 30005                           prodl	equ	0xFF3
 30006                           intcon	equ	0xFF2
 30007                           intcon3	equ	0xFF0
 30008                           postinc0	equ	0xFEE
 30009                           plusw0	equ	0xFEB
 30010                           fsr0h	equ	0xFEA
 30011                           fsr0l	equ	0xFE9
 30012                           wreg	equ	0xFE8
 30013                           indf1	equ	0xFE7
 30014                           postinc1	equ	0xFE6
 30015                           postdec1	equ	0xFE5
 30016                           plusw1	equ	0xFE3
 30017                           fsr1h	equ	0xFE2
 30018                           fsr1l	equ	0xFE1
 30019                           indf2	equ	0xFDF
 30020                           postinc2	equ	0xFDE
 30021                           postdec2	equ	0xFDD
 30022                           plusw2	equ	0xFDB
 30023                           fsr2h	equ	0xFDA
 30024                           fsr2l	equ	0xFD9
 30025                           status	equ	0xFD8
 30026                           
 30027 ;; *************** function _SetRFMode *****************
 30028 ;; Defined at:
 30029 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 30030 ;; Parameters:    Size  Location     Type
 30031 ;;  mode            1    wreg     unsigned char 
 30032 ;; Auto vars:     Size  Location     Type
 30033 ;;  mode            1   24[BANK0 ] unsigned char 
 30034 ;; Return value:  Size  Location     Type
 30035 ;;                  1    wreg      void 
 30036 ;; Registers used:
 30037 ;;		wreg, status,2, status,0, cstack
 30038 ;; Tracked objects:
 30039 ;;		On entry : 0/0
 30040 ;;		On exit  : 0/0
 30041 ;;		Unchanged: 0/0
 30042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30047 ;;Total ram usage:        1 bytes
 30048 ;; Hardware stack levels used:    1
 30049 ;; Hardware stack levels required when called:    7
 30050 ;; This function calls:
 30051 ;;		_RegisterSet
 30052 ;; This function is called by:
 30053 ;;		_TxPacket
 30054 ;;		_MiMAC_SetChannel
 30055 ;;		_MiMAC_Init
 30056 ;;		_MiMAC_PowerState
 30057 ;; This function uses a non-reentrant model
 30058 ;;
 30059                           
 30060                           	psect	text148
 30061  006732                     __ptext148:
 30062                           	opt stack 0
 30063  006732                     _SetRFMode:
 30064                           	opt stack 15
 30065                           
 30066                           ;incstack = 0
 30067                           ;SetRFMode@mode stored from wreg
 30068  006732  0100               	movlb	0	; () banked
 30069  006734  6F78               	movwf	SetRFMode@mode& (0+255),b
 30070                           
 30071                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 30072  006736  D027               	goto	l11638
 30073  006738                     l11616:
 30074                           
 30075                           ; BSR set to: 0
 30076                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 30077  006738  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 30078  00673A  0E8E               	movlw	142
 30079  00673C  6F75               	movwf	RegisterSet@setting& (0+255),b
 30080  00673E  EC61  F03A         	call	_RegisterSet	;wreg free
 30081                           
 30082                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 30083  006742  0E80               	movlw	128
 30084  006744  6E3D               	movwf	_RF_Mode,c
 30085                           
 30086                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 30087  006746  0C80               	retlw	128
 30088  006748                     l11620:
 30089                           
 30090                           ; BSR set to: 0
 30091                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 30092  006748  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 30093  00674A  0E6E               	movlw	110
 30094  00674C  6F75               	movwf	RegisterSet@setting& (0+255),b
 30095  00674E  EC61  F03A         	call	_RegisterSet	;wreg free
 30096                           
 30097                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 30098  006752  0E60               	movlw	96
 30099  006754  6E3D               	movwf	_RF_Mode,c
 30100                           
 30101                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 30102  006756  0C60               	retlw	96
 30103  006758                     l11624:
 30104                           
 30105                           ; BSR set to: 0
 30106                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 30107  006758  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 30108  00675A  0E4E               	movlw	78
 30109  00675C  6F75               	movwf	RegisterSet@setting& (0+255),b
 30110  00675E  EC61  F03A         	call	_RegisterSet	;wreg free
 30111                           
 30112                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 30113  006762  0E40               	movlw	64
 30114  006764  6E3D               	movwf	_RF_Mode,c
 30115                           
 30116                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 30117  006766  0C40               	retlw	64
 30118  006768                     l11628:
 30119                           
 30120                           ; BSR set to: 0
 30121                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 30122  006768  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 30123  00676A  0E2E               	movlw	46
 30124  00676C  6F75               	movwf	RegisterSet@setting& (0+255),b
 30125  00676E  EC61  F03A         	call	_RegisterSet	;wreg free
 30126                           
 30127                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 30128  006772  0E20               	movlw	32
 30129  006774  6E3D               	movwf	_RF_Mode,c
 30130                           
 30131                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 30132  006776  0C20               	retlw	32
 30133  006778                     l11632:
 30134                           
 30135                           ; BSR set to: 0
 30136                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 30137  006778  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 30138  00677A  0E0E               	movlw	14
 30139  00677C  6F75               	movwf	RegisterSet@setting& (0+255),b
 30140  00677E  EC61  F03A         	call	_RegisterSet	;wreg free
 30141                           
 30142                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 30143  006782  6A3D               	clrf	_RF_Mode,c
 30144                           
 30145                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 30146  006784  0012               	return	
 30147  006786                     l11638:
 30148  006786  0100               	movlb	0	; () banked
 30149  006788  5178               	movf	SetRFMode@mode& (0+255),w,b
 30150                           
 30151                           ; Switch size 1, requested type "speed"
 30152                           ; Number of cases is 5, Range of values is 0 to 128
 30153                           ; switch strategies available:
 30154                           ; Name         Instructions Cycles
 30155                           ; simple_byte           16     9 (average)
 30156                           ;	Chosen strategy is simple_byte
 30157  00678A  E0F6               	bz	l11632
 30158  00678C  0A20               	xorlw	32	; case 32
 30159  00678E  E0EC               	bz	l11628
 30160  006790  0A60               	xorlw	96	; case 64
 30161  006792  E0E2               	bz	l11624
 30162  006794  0A20               	xorlw	32	; case 96
 30163  006796  E0D8               	bz	l11620
 30164  006798  0AE0               	xorlw	224	; case 128
 30165  00679A  E0CE               	bz	l11616
 30166  00679C  0012               	return		;funcret
 30167  00679E                     __end_of_SetRFMode:
 30168                           	opt stack 0
 30169                           tblptru	equ	0xFF8
 30170                           tblptrh	equ	0xFF7
 30171                           tblptrl	equ	0xFF6
 30172                           tablat	equ	0xFF5
 30173                           prodh	equ	0xFF4
 30174                           prodl	equ	0xFF3
 30175                           intcon	equ	0xFF2
 30176                           intcon3	equ	0xFF0
 30177                           postinc0	equ	0xFEE
 30178                           plusw0	equ	0xFEB
 30179                           fsr0h	equ	0xFEA
 30180                           fsr0l	equ	0xFE9
 30181                           wreg	equ	0xFE8
 30182                           indf1	equ	0xFE7
 30183                           postinc1	equ	0xFE6
 30184                           postdec1	equ	0xFE5
 30185                           plusw1	equ	0xFE3
 30186                           fsr1h	equ	0xFE2
 30187                           fsr1l	equ	0xFE1
 30188                           indf2	equ	0xFDF
 30189                           postinc2	equ	0xFDE
 30190                           postdec2	equ	0xFDD
 30191                           plusw2	equ	0xFDB
 30192                           fsr2h	equ	0xFDA
 30193                           fsr2l	equ	0xFD9
 30194                           status	equ	0xFD8
 30195                           
 30196 ;; *************** function _RegisterSet *****************
 30197 ;; Defined at:
 30198 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 30199 ;; Parameters:    Size  Location     Type
 30200 ;;  setting         2   21[BANK0 ] unsigned int 
 30201 ;; Auto vars:     Size  Location     Type
 30202 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 30203 ;; Return value:  Size  Location     Type
 30204 ;;                  1    wreg      void 
 30205 ;; Registers used:
 30206 ;;		wreg, status,2, cstack
 30207 ;; Tracked objects:
 30208 ;;		On entry : F/0
 30209 ;;		On exit  : 0/0
 30210 ;;		Unchanged: 0/0
 30211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30215 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30216 ;;Total ram usage:        3 bytes
 30217 ;; Hardware stack levels used:    1
 30218 ;; Hardware stack levels required when called:    6
 30219 ;; This function calls:
 30220 ;;		_SPIPut
 30221 ;; This function is called by:
 30222 ;;		_TxPacket
 30223 ;;		_MiMAC_SetChannel
 30224 ;;		_MiMAC_Init
 30225 ;;		_SetRFMode
 30226 ;; This function uses a non-reentrant model
 30227 ;;
 30228                           
 30229                           	psect	text149
 30230  0074C2                     __ptext149:
 30231                           	opt stack 0
 30232  0074C2                     _RegisterSet:
 30233                           	opt stack 15
 30234                           
 30235                           ; BSR set to: 0
 30236                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 30237                           
 30238                           ;incstack = 0
 30239  0074C2  0E00               	movlw	0
 30240  0074C4  B6F0               	btfsc	intcon3,3,c	;volatile
 30241  0074C6  0E01               	movlw	1
 30242  0074C8  6F77               	movwf	RegisterSet@IRQ1select& (0+255),b
 30243                           
 30244                           ; BSR set to: 0
 30245                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 30246  0074CA  96F0               	bcf	intcon3,3,c	;volatile
 30247                           
 30248                           ; BSR set to: 0
 30249                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 30250  0074CC  928C               	bcf	3980,1,c	;volatile
 30251                           
 30252                           ; BSR set to: 0
 30253                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 30254                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 30255  0074CE  5176               	movf	(RegisterSet@setting+1)& (0+255),w,b
 30256  0074D0  EC29  F03B         	call	_SPIPut
 30257                           
 30258                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 30259  0074D4  0100               	movlb	0	; () banked
 30260  0074D6  5175               	movf	RegisterSet@setting& (0+255),w,b
 30261  0074D8  EC29  F03B         	call	_SPIPut
 30262                           
 30263                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 30264  0074DC  828C               	bsf	3980,1,c	;volatile
 30265                           
 30266                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 30267  0074DE  0100               	movlb	0	; () banked
 30268  0074E0  B177               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 30269  0074E2  D002               	bra	u12225
 30270  0074E4  96F0               	bcf	intcon3,3,c	;volatile
 30271  0074E6  D001               	bra	u12226
 30272  0074E8                     u12225:
 30273  0074E8  86F0               	bsf	intcon3,3,c	;volatile
 30274  0074EA                     u12226:
 30275  0074EA  0012               	return		;funcret
 30276  0074EC                     __end_of_RegisterSet:
 30277                           	opt stack 0
 30278                           tblptru	equ	0xFF8
 30279                           tblptrh	equ	0xFF7
 30280                           tblptrl	equ	0xFF6
 30281                           tablat	equ	0xFF5
 30282                           prodh	equ	0xFF4
 30283                           prodl	equ	0xFF3
 30284                           intcon	equ	0xFF2
 30285                           intcon3	equ	0xFF0
 30286                           postinc0	equ	0xFEE
 30287                           plusw0	equ	0xFEB
 30288                           fsr0h	equ	0xFEA
 30289                           fsr0l	equ	0xFE9
 30290                           wreg	equ	0xFE8
 30291                           indf1	equ	0xFE7
 30292                           postinc1	equ	0xFE6
 30293                           postdec1	equ	0xFE5
 30294                           plusw1	equ	0xFE3
 30295                           fsr1h	equ	0xFE2
 30296                           fsr1l	equ	0xFE1
 30297                           indf2	equ	0xFDF
 30298                           postinc2	equ	0xFDE
 30299                           postdec2	equ	0xFDD
 30300                           plusw2	equ	0xFDB
 30301                           fsr2h	equ	0xFDA
 30302                           fsr2l	equ	0xFD9
 30303                           status	equ	0xFD8
 30304                           
 30305 ;; *************** function _SPIPut *****************
 30306 ;; Defined at:
 30307 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 30308 ;; Parameters:    Size  Location     Type
 30309 ;;  v               1    wreg     unsigned char 
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;  v               1   19[BANK0 ] unsigned char 
 30312 ;;  i               1   20[BANK0 ] volatile unsigned char 
 30313 ;; Return value:  Size  Location     Type
 30314 ;;                  1    wreg      void 
 30315 ;; Registers used:
 30316 ;;		wreg
 30317 ;; Tracked objects:
 30318 ;;		On entry : 0/0
 30319 ;;		On exit  : 0/0
 30320 ;;		Unchanged: 0/0
 30321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30326 ;;Total ram usage:        2 bytes
 30327 ;; Hardware stack levels used:    1
 30328 ;; Hardware stack levels required when called:    5
 30329 ;; This function calls:
 30330 ;;		Nothing
 30331 ;; This function is called by:
 30332 ;;		_RegisterSet
 30333 ;;		_RegisterRead
 30334 ;;		_WriteFIFO
 30335 ;;		_SPIGet
 30336 ;; This function uses a non-reentrant model
 30337 ;;
 30338                           
 30339                           	psect	text150
 30340  007652                     __ptext150:
 30341                           	opt stack 0
 30342  007652                     _SPIPut:
 30343                           	opt stack 16
 30344                           
 30345                           ;incstack = 0
 30346                           ;SPIPut@v stored from wreg
 30347  007652  0100               	movlb	0	; () banked
 30348  007654  6F73               	movwf	SPIPut@v& (0+255),b
 30349                           
 30350                           ;spi.c: 228: volatile uint8_t i;
 30351                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 30352  007656  969E               	bcf	3998,3,c	;volatile
 30353                           
 30354                           ;spi.c: 254: i = SSPBUF;
 30355  007658  CFC9 F074          	movff	4041,SPIPut@i	;volatile
 30356  00765C                     l427:
 30357                           
 30358                           ;spi.c: 256: {
 30359                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 30360  00765C  9EC6               	bcf	4038,7,c	;volatile
 30361                           
 30362                           ;spi.c: 258: SSPBUF = v;
 30363  00765E  C073  FFC9         	movff	SPIPut@v,4041	;volatile
 30364                           
 30365                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 30366  007662  BEC6               	btfsc	4038,7,c	;volatile
 30367  007664  D7FB               	goto	l427
 30368  007666                     l429:
 30369  007666  B69E               	btfsc	3998,3,c	;volatile
 30370  007668  0012               	return		;funcret
 30371  00766A  D7FD               	goto	l429
 30372  00766C                     __end_of_SPIPut:
 30373                           	opt stack 0
 30374                           tblptru	equ	0xFF8
 30375                           tblptrh	equ	0xFF7
 30376                           tblptrl	equ	0xFF6
 30377                           tablat	equ	0xFF5
 30378                           prodh	equ	0xFF4
 30379                           prodl	equ	0xFF3
 30380                           intcon	equ	0xFF2
 30381                           intcon3	equ	0xFF0
 30382                           postinc0	equ	0xFEE
 30383                           plusw0	equ	0xFEB
 30384                           fsr0h	equ	0xFEA
 30385                           fsr0l	equ	0xFE9
 30386                           wreg	equ	0xFE8
 30387                           indf1	equ	0xFE7
 30388                           postinc1	equ	0xFE6
 30389                           postdec1	equ	0xFE5
 30390                           plusw1	equ	0xFE3
 30391                           fsr1h	equ	0xFE2
 30392                           fsr1l	equ	0xFE1
 30393                           indf2	equ	0xFDF
 30394                           postinc2	equ	0xFDE
 30395                           postdec2	equ	0xFDD
 30396                           plusw2	equ	0xFDB
 30397                           fsr2h	equ	0xFDA
 30398                           fsr2l	equ	0xFD9
 30399                           status	equ	0xFD8
 30400                           
 30401 ;; *************** function _MiApp_SetAddressPan *****************
 30402 ;; Defined at:
 30403 ;;		line 211 in file "../src/Bridge.c"
 30404 ;; Parameters:    Size  Location     Type
 30405 ;;  address         2   35[BANK0 ] PTR unsigned char 
 30406 ;;		 -> MiApp_EstablishConnection@src(2), myLongAddress(2), myAddr(2), 
 30407 ;;  panid           2   37[BANK0 ] unsigned int 
 30408 ;; Auto vars:     Size  Location     Type
 30409 ;;  addr            2   39[BANK0 ] struct addr_t_def
 30410 ;; Return value:  Size  Location     Type
 30411 ;;                  1    wreg      void 
 30412 ;; Registers used:
 30413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30414 ;; Tracked objects:
 30415 ;;		On entry : F/0
 30416 ;;		On exit  : E/0
 30417 ;;		Unchanged: 0/0
 30418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30422 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30423 ;;Total ram usage:        6 bytes
 30424 ;; Hardware stack levels used:    1
 30425 ;; Hardware stack levels required when called:    7
 30426 ;; This function calls:
 30427 ;;		_NetworkSetAddressPAN
 30428 ;;		_memcpy
 30429 ;; This function is called by:
 30430 ;;		_main
 30431 ;;		_MiApp_ProtocolInit
 30432 ;;		_MiApp_EstablishConnection
 30433 ;; This function uses a non-reentrant model
 30434 ;;
 30435                           
 30436                           	psect	text151
 30437  006EAA                     __ptext151:
 30438                           	opt stack 0
 30439  006EAA                     _MiApp_SetAddressPan:
 30440                           	opt stack 23
 30441                           
 30442                           ; BSR set to: 0
 30443                           ;Bridge.c: 213: addr_t addr;
 30444                           ;Bridge.c: 214: memcpy(myLongAddress,address,2);
 30445                           
 30446                           ;incstack = 0
 30447  006EAA  0EFC               	movlw	low _myLongAddress
 30448  006EAC  6F75               	movwf	memcpy@d1& (0+255),b
 30449  006EAE  0E01               	movlw	high _myLongAddress
 30450  006EB0  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 30451  006EB2  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
 30452  006EB6  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 30453  006EBA  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 30454  006EBC  0E02               	movlw	2
 30455  006EBE  6F79               	movwf	memcpy@n& (0+255),b
 30456  006EC0  EC5D  F036         	call	_memcpy	;wreg free
 30457                           
 30458                           ;Bridge.c: 215: memcpy(addr.bytes,address,2);
 30459  006EC4  0E87               	movlw	low MiApp_SetAddressPan@addr
 30460  006EC6  6F75               	movwf	memcpy@d1& (0+255),b
 30461  006EC8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 30462  006ECA  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
 30463  006ECE  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 30464  006ED2  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 30465  006ED4  0E02               	movlw	2
 30466  006ED6  6F79               	movwf	memcpy@n& (0+255),b
 30467  006ED8  EC5D  F036         	call	_memcpy	;wreg free
 30468                           
 30469                           ; BSR set to: 0
 30470                           ;Bridge.c: 216: myPANID=panid;
 30471  006EDC  C085  F04D         	movff	MiApp_SetAddressPan@panid,_myPANID
 30472  006EE0  C086  F04E         	movff	MiApp_SetAddressPan@panid+1,_myPANID+1
 30473                           
 30474                           ;Bridge.c: 220: NetworkSetAddressPAN(addr,panid);
 30475  006EE4  C087  F07F         	movff	MiApp_SetAddressPan@addr,NetworkSetAddressPAN@address
 30476  006EE8  C088  F080         	movff	MiApp_SetAddressPan@addr+1,NetworkSetAddressPAN@address+1
 30477  006EEC  C085  F081         	movff	MiApp_SetAddressPan@panid,NetworkSetAddressPAN@PANID
 30478  006EF0  C086  F082         	movff	MiApp_SetAddressPan@panid+1,NetworkSetAddressPAN@PANID+1
 30479  006EF4  EF32  F036         	goto	_NetworkSetAddressPAN	;wreg free
 30480  006EF8                     __end_of_MiApp_SetAddressPan:
 30481                           	opt stack 0
 30482                           tblptru	equ	0xFF8
 30483                           tblptrh	equ	0xFF7
 30484                           tblptrl	equ	0xFF6
 30485                           tablat	equ	0xFF5
 30486                           prodh	equ	0xFF4
 30487                           prodl	equ	0xFF3
 30488                           intcon	equ	0xFF2
 30489                           intcon3	equ	0xFF0
 30490                           postinc0	equ	0xFEE
 30491                           plusw0	equ	0xFEB
 30492                           fsr0h	equ	0xFEA
 30493                           fsr0l	equ	0xFE9
 30494                           wreg	equ	0xFE8
 30495                           indf1	equ	0xFE7
 30496                           postinc1	equ	0xFE6
 30497                           postdec1	equ	0xFE5
 30498                           plusw1	equ	0xFE3
 30499                           fsr1h	equ	0xFE2
 30500                           fsr1l	equ	0xFE1
 30501                           indf2	equ	0xFDF
 30502                           postinc2	equ	0xFDE
 30503                           postdec2	equ	0xFDD
 30504                           plusw2	equ	0xFDB
 30505                           fsr2h	equ	0xFDA
 30506                           fsr2l	equ	0xFD9
 30507                           status	equ	0xFD8
 30508                           
 30509 ;; *************** function _NetworkSetAddressPAN *****************
 30510 ;; Defined at:
 30511 ;;		line 430 in file "../NetworkManager.c"
 30512 ;; Parameters:    Size  Location     Type
 30513 ;;  address         2   31[BANK0 ] struct addr_t_def
 30514 ;;  PANID           2   33[BANK0 ] unsigned int 
 30515 ;; Auto vars:     Size  Location     Type
 30516 ;;		None
 30517 ;; Return value:  Size  Location     Type
 30518 ;;                  1    wreg      void 
 30519 ;; Registers used:
 30520 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30521 ;; Tracked objects:
 30522 ;;		On entry : D/2
 30523 ;;		On exit  : E/0
 30524 ;;		Unchanged: 0/0
 30525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30530 ;;Total ram usage:        4 bytes
 30531 ;; Hardware stack levels used:    1
 30532 ;; Hardware stack levels required when called:    6
 30533 ;; This function calls:
 30534 ;;		_NetworkAddressSizeGet
 30535 ;;		_NetworkGetDeviceType
 30536 ;;		_memcpy
 30537 ;; This function is called by:
 30538 ;;		_MiApp_SetAddressPan
 30539 ;;		_NetworkInit
 30540 ;; This function uses a non-reentrant model
 30541 ;;
 30542                           
 30543                           	psect	text152
 30544  006C64                     __ptext152:
 30545                           	opt stack 0
 30546  006C64                     _NetworkSetAddressPAN:
 30547                           	opt stack 23
 30548                           
 30549                           ;NetworkManager.c: 432: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 30550                           
 30551                           ;incstack = 0
 30552  006C64  0EFA               	movlw	low _MyAddress
 30553  006C66  0100               	movlb	0	; () banked
 30554  006C68  6F75               	movwf	memcpy@d1& (0+255),b
 30555  006C6A  0E01               	movlw	high _MyAddress
 30556  006C6C  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 30557  006C6E  0E7F               	movlw	low NetworkSetAddressPAN@address
 30558  006C70  6F77               	movwf	memcpy@s1& (0+255),b
 30559  006C72  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 30560  006C74  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 30561  006C78  0100               	movlb	0	; () banked
 30562  006C7A  6F79               	movwf	memcpy@n& (0+255),b
 30563  006C7C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 30564  006C7E  EC5D  F036         	call	_memcpy	;wreg free
 30565                           
 30566                           ; BSR set to: 0
 30567                           ;NetworkManager.c: 433: DEVPanID=PANID;
 30568  006C82  C081  F1F6         	movff	NetworkSetAddressPAN@PANID,_DEVPanID
 30569  006C86  C082  F1F7         	movff	NetworkSetAddressPAN@PANID+1,_DEVPanID+1
 30570                           
 30571                           ; BSR set to: 0
 30572                           ;NetworkManager.c: 434: if(NetworkGetDeviceType()==DeviceCoordinator)
 30573  006C8A  EC3F  F03C         	call	_NetworkGetDeviceType	;wreg free
 30574  006C8E  0900               	iorlw	0
 30575  006C90  A4D8               	btfss	status,2,c
 30576  006C92  0012               	return	
 30577                           
 30578                           ; BSR set to: 1
 30579                           ;NetworkManager.c: 435: {
 30580                           ;NetworkManager.c: 436: CoordinatorAddr=MyAddress;
 30581  006C94  C1FA  F1E8         	movff	_MyAddress,_CoordinatorAddr
 30582  006C98  C1FB  F1E9         	movff	_MyAddress+1,_CoordinatorAddr+1
 30583                           
 30584                           ; BSR set to: 1
 30585                           ;NetworkManager.c: 437: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 30586  006C9C  0E94               	movlw	low _routeInfo
 30587  006C9E  0100               	movlb	0	; () banked
 30588  006CA0  6F75               	movwf	memcpy@d1& (0+255),b
 30589  006CA2  0E02               	movlw	high _routeInfo
 30590  006CA4  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 30591  006CA6  0E7F               	movlw	low NetworkSetAddressPAN@address
 30592  006CA8  6F77               	movwf	memcpy@s1& (0+255),b
 30593  006CAA  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 30594  006CAC  EC42  F03C         	call	_NetworkAddressSizeGet	;wreg free
 30595  006CB0  0100               	movlb	0	; () banked
 30596  006CB2  6F79               	movwf	memcpy@n& (0+255),b
 30597  006CB4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 30598  006CB6  EF5D  F036         	goto	_memcpy	;wreg free
 30599  006CBA                     __end_of_NetworkSetAddressPAN:
 30600                           	opt stack 0
 30601                           tblptru	equ	0xFF8
 30602                           tblptrh	equ	0xFF7
 30603                           tblptrl	equ	0xFF6
 30604                           tablat	equ	0xFF5
 30605                           prodh	equ	0xFF4
 30606                           prodl	equ	0xFF3
 30607                           intcon	equ	0xFF2
 30608                           intcon3	equ	0xFF0
 30609                           postinc0	equ	0xFEE
 30610                           plusw0	equ	0xFEB
 30611                           fsr0h	equ	0xFEA
 30612                           fsr0l	equ	0xFE9
 30613                           wreg	equ	0xFE8
 30614                           indf1	equ	0xFE7
 30615                           postinc1	equ	0xFE6
 30616                           postdec1	equ	0xFE5
 30617                           plusw1	equ	0xFE3
 30618                           fsr1h	equ	0xFE2
 30619                           fsr1l	equ	0xFE1
 30620                           indf2	equ	0xFDF
 30621                           postinc2	equ	0xFDE
 30622                           postdec2	equ	0xFDD
 30623                           plusw2	equ	0xFDB
 30624                           fsr2h	equ	0xFDA
 30625                           fsr2l	equ	0xFD9
 30626                           status	equ	0xFD8
 30627                           
 30628 ;; *************** function _memcpy *****************
 30629 ;; Defined at:
 30630 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 30631 ;; Parameters:    Size  Location     Type
 30632 ;;  d1              2   21[BANK0 ] PTR void 
 30633 ;;		 -> beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), list.address(2), 
 30634 ;;		 -> list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 30635 ;;		 -> userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(2), NetworkManagerTask@data(19), 
 30636 ;;		 -> routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 30637 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(2), TunnelManagerGetTunnel@retAddr(
      +2), 
 30638 ;;		 -> tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(2), 
 30639 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(72), RouteManagerProcessReceive@from(
      +2), 
 30640 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiApp_MessageAvailable@src(2), MiApp_UnicastAddres
      +s@src(2), 
 30641 ;;		 -> MiApp_SetAddressPan@addr(2), MiApp_EstablishConnection@src(2), MiApp_StartConnection@src(2), myLongAddress(2), 
 30642 ;;		 -> Read_MAC_Address@address(2), MiMAC_ReceivedPacket@FrameCounter(4), ConnectionTable.Address(2), ConnectionTable(5
      +5), 
 30643 ;;		 -> MiMAC_ReceivedPacket@addr(2), NULL(0), MACRxPacket(12), key(8), 
 30644 ;;		 -> MACTxBuffer(64), 
 30645 ;;  s1              2   23[BANK0 ] PTR const void 
 30646 ;;		 -> Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), address.bytes(2), 
 30647 ;;		 -> IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), NetworkSendDiscoverResponse@datab
      +uff(64), 
 30648 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(2)
      +, address.bytes(2), 
 30649 ;;		 -> NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), TMSendDataToRFD@databuff(64), 
 30650 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), TunnelManagerGetTunnel@device(2), 
 30651 ;;		 -> tunnels.parent(2), tunnels.TxTime(8), tunnels(120), neighbor_tbl.ll_addr.bytes(2), 
 30652 ;;		 -> neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(2), radioReceivedPacket@c
      +hild(2), 
 30653 ;;		 -> source.bytes(2), radioReceivedPacket@source(2), address.bytes(2), AddNodeToNetworkTable@address(2), 
 30654 ;;		 -> srcAddress.bytes(2), srcAddress(2), MiApp_EstablishConnection@src(2), myLongAddress(2), 
 30655 ;;		 -> Read_MAC_Address@addr8(6), TxBuffer(64), main@coord(2), myAddr(2), 
 30656 ;;		 -> NULL(0), RxPacket.Payload(64), myPANID(2), transParam.DestPANID(2), 
 30657 ;;		 -> MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), RxPacket(142), 
 30658 ;;  n               2   25[BANK0 ] unsigned int 
 30659 ;; Auto vars:     Size  Location     Type
 30660 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 30661 ;;		 -> Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), address.bytes(2), 
 30662 ;;		 -> IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), NetworkSendDiscoverResponse@datab
      +uff(64), 
 30663 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(2)
      +, address.bytes(2), 
 30664 ;;		 -> NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), TMSendDataToRFD@databuff(64), 
 30665 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), TunnelManagerGetTunnel@device(2), 
 30666 ;;		 -> tunnels.parent(2), tunnels.TxTime(8), tunnels(120), neighbor_tbl.ll_addr.bytes(2), 
 30667 ;;		 -> neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(2), radioReceivedPacket@c
      +hild(2), 
 30668 ;;		 -> source.bytes(2), radioReceivedPacket@source(2), address.bytes(2), AddNodeToNetworkTable@address(2), 
 30669 ;;		 -> srcAddress.bytes(2), srcAddress(2), MiApp_EstablishConnection@src(2), myLongAddress(2), 
 30670 ;;		 -> Read_MAC_Address@addr8(6), TxBuffer(64), main@coord(2), myAddr(2), 
 30671 ;;		 -> NULL(0), RxPacket.Payload(64), myPANID(2), transParam.DestPANID(2), 
 30672 ;;		 -> MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), RxPacket(142), 
 30673 ;;  d               2   27[BANK0 ] PTR unsigned char 
 30674 ;;		 -> beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), list.address(2), 
 30675 ;;		 -> list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 30676 ;;		 -> userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(2), NetworkManagerTask@data(19), 
 30677 ;;		 -> routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 30678 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(2), TunnelManagerGetTunnel@retAddr(
      +2), 
 30679 ;;		 -> tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(2), 
 30680 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(72), RouteManagerProcessReceive@from(
      +2), 
 30681 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiApp_MessageAvailable@src(2), MiApp_UnicastAddres
      +s@src(2), 
 30682 ;;		 -> MiApp_SetAddressPan@addr(2), MiApp_EstablishConnection@src(2), MiApp_StartConnection@src(2), myLongAddress(2), 
 30683 ;;		 -> Read_MAC_Address@address(2), MiMAC_ReceivedPacket@FrameCounter(4), ConnectionTable.Address(2), ConnectionTable(5
      +5), 
 30684 ;;		 -> MiMAC_ReceivedPacket@addr(2), NULL(0), MACRxPacket(12), key(8), 
 30685 ;;		 -> MACTxBuffer(64), 
 30686 ;; Return value:  Size  Location     Type
 30687 ;;                  2   21[BANK0 ] PTR void 
 30688 ;; Registers used:
 30689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30690 ;; Tracked objects:
 30691 ;;		On entry : F/0
 30692 ;;		On exit  : F/0
 30693 ;;		Unchanged: 0/0
 30694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30695 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30696 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30698 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30699 ;;Total ram usage:       10 bytes
 30700 ;; Hardware stack levels used:    1
 30701 ;; Hardware stack levels required when called:    5
 30702 ;; This function calls:
 30703 ;;		Nothing
 30704 ;; This function is called by:
 30705 ;;		_MiMAC_Init
 30706 ;;		_MiMAC_SendPacket
 30707 ;;		_MiMAC_ReceivedPacket
 30708 ;;		_Read_MAC_Address
 30709 ;;		_MiApp_EstablishConnection
 30710 ;;		_MiApp_SetAddressPan
 30711 ;;		_MiApp_UnicastAddress
 30712 ;;		_MiApp_MessageAvailable
 30713 ;;		_AddNodeToNetworkTable
 30714 ;;		_radioReceivedPacket
 30715 ;;		_RouteManagerProcessReceive
 30716 ;;		_networkSendBeacon
 30717 ;;		_LEAppendNeighborInfo
 30718 ;;		_LE_processReceivedMessage
 30719 ;;		_BroadcastManagerDelaySend
 30720 ;;		_TunnelManagerSetTunnel
 30721 ;;		_TunnelManagerGetTunnel
 30722 ;;		_TunnelManagerInvalidateTunnel
 30723 ;;		_TransportManagerTask
 30724 ;;		_TMSendFormedPacketTowardsCoordinator
 30725 ;;		_NetworkInit
 30726 ;;		_NetworkManagerProcessIncomingData
 30727 ;;		_NetworkPrepareSendPacket
 30728 ;;		_NetworkSetAddressPAN
 30729 ;;		_IsNetworkDevice
 30730 ;;		_DeviceManagerBufferDeviceData
 30731 ;;		_DeviceManagerGetDeviceData
 30732 ;;		_MSTickGet
 30733 ;; This function uses a non-reentrant model
 30734 ;;
 30735                           
 30736                           	psect	text153
 30737  006CBA                     __ptext153:
 30738                           	opt stack 0
 30739  006CBA                     _memcpy:
 30740                           	opt stack 24
 30741                           
 30742                           ; BSR set to: 0
 30743                           
 30744                           ;incstack = 0
 30745  006CBA  C077  F07D         	movff	memcpy@s1,memcpy@s
 30746  006CBE  C078  F07E         	movff	memcpy@s1+1,memcpy@s+1
 30747  006CC2  C075  F07B         	movff	memcpy@d1,memcpy@d
 30748  006CC6  C076  F07C         	movff	memcpy@d1+1,memcpy@d+1
 30749  006CCA  D01A               	goto	l11828
 30750  006CCC                     l11822:
 30751                           
 30752                           ; BSR set to: 0
 30753  006CCC  C07D  FFF6         	movff	memcpy@s,tblptrl
 30754  006CD0  C07E  FFF7         	movff	memcpy@s+1,tblptrh
 30755  006CD4  6AF8               	clrf	tblptru,c
 30756  006CD6  C07B  FFD9         	movff	memcpy@d,fsr2l
 30757  006CDA  C07C  FFDA         	movff	memcpy@d+1,fsr2h
 30758  006CDE  0E0E               	movlw	(high __ramtop+-1)
 30759  006CE0  64F7               	cpfsgt	tblptrh,c
 30760  006CE2  D003               	bra	u12617
 30761  006CE4  0008               	tblrd		*
 30762  006CE6  50F5               	movf	tablat,w,c
 30763  006CE8  D005               	bra	u12610
 30764  006CEA                     u12617:
 30765  006CEA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30766  006CEE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30767  006CF2  50EF               	movf	indf0,w,c
 30768  006CF4                     u12610:
 30769  006CF4  6EDF               	movwf	indf2,c
 30770  006CF6  0100               	movlb	0	; () banked
 30771  006CF8  4B7D               	infsnz	memcpy@s& (0+255),f,b
 30772  006CFA  2B7E               	incf	(memcpy@s+1)& (0+255),f,b
 30773                           
 30774                           ; BSR set to: 0
 30775  006CFC  4B7B               	infsnz	memcpy@d& (0+255),f,b
 30776  006CFE  2B7C               	incf	(memcpy@d+1)& (0+255),f,b
 30777  006D00                     l11828:
 30778                           
 30779                           ; BSR set to: 0
 30780  006D00  0779               	decf	memcpy@n& (0+255),f,b
 30781  006D02  A0D8               	btfss	status,0,c
 30782  006D04  077A               	decf	(memcpy@n+1)& (0+255),f,b
 30783  006D06  2979               	incf	memcpy@n& (0+255),w,b
 30784  006D08  E1E1               	bnz	l11822
 30785  006D0A  297A               	incf	(memcpy@n+1)& (0+255),w,b
 30786  006D0C  E1DF               	bnz	l11822
 30787                           
 30788                           ; BSR set to: 0
 30789  006D0E  0012               	return		;funcret
 30790  006D10                     __end_of_memcpy:
 30791                           	opt stack 0
 30792                           tblptru	equ	0xFF8
 30793                           tblptrh	equ	0xFF7
 30794                           tblptrl	equ	0xFF6
 30795                           tablat	equ	0xFF5
 30796                           prodh	equ	0xFF4
 30797                           prodl	equ	0xFF3
 30798                           intcon	equ	0xFF2
 30799                           intcon3	equ	0xFF0
 30800                           indf0	equ	0xFEF
 30801                           postinc0	equ	0xFEE
 30802                           plusw0	equ	0xFEB
 30803                           fsr0h	equ	0xFEA
 30804                           fsr0l	equ	0xFE9
 30805                           wreg	equ	0xFE8
 30806                           indf1	equ	0xFE7
 30807                           postinc1	equ	0xFE6
 30808                           postdec1	equ	0xFE5
 30809                           plusw1	equ	0xFE3
 30810                           fsr1h	equ	0xFE2
 30811                           fsr1l	equ	0xFE1
 30812                           indf2	equ	0xFDF
 30813                           postinc2	equ	0xFDE
 30814                           postdec2	equ	0xFDD
 30815                           plusw2	equ	0xFDB
 30816                           fsr2h	equ	0xFDA
 30817                           fsr2l	equ	0xFD9
 30818                           status	equ	0xFD8
 30819                           
 30820 ;; *************** function _NetworkGetDeviceType *****************
 30821 ;; Defined at:
 30822 ;;		line 204 in file "../NetworkManager.c"
 30823 ;; Parameters:    Size  Location     Type
 30824 ;;		None
 30825 ;; Auto vars:     Size  Location     Type
 30826 ;;		None
 30827 ;; Return value:  Size  Location     Type
 30828 ;;                  1    wreg      enum E8070
 30829 ;; Registers used:
 30830 ;;		wreg, status,2
 30831 ;; Tracked objects:
 30832 ;;		On entry : 0/0
 30833 ;;		On exit  : F/1
 30834 ;;		Unchanged: 0/0
 30835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30840 ;;Total ram usage:        0 bytes
 30841 ;; Hardware stack levels used:    1
 30842 ;; Hardware stack levels required when called:    5
 30843 ;; This function calls:
 30844 ;;		Nothing
 30845 ;; This function is called by:
 30846 ;;		_radioReceivedPacket
 30847 ;;		_NetworkUnicastData
 30848 ;;		_RouteManagerPerformUpdate
 30849 ;;		_networkSendBeacon
 30850 ;;		_TMSendFormedPacketToRFD
 30851 ;;		_NetworkManagerTask
 30852 ;;		_NetworkHasRoute
 30853 ;;		_NetworkManagerProcessIncomingData
 30854 ;;		_NetworkPrepareSendPacket
 30855 ;;		_NetworkSetAddressPAN
 30856 ;; This function uses a non-reentrant model
 30857 ;;
 30858                           
 30859                           	psect	text154
 30860  00787E                     __ptext154:
 30861                           	opt stack 0
 30862  00787E                     _NetworkGetDeviceType:
 30863                           	opt stack 21
 30864                           
 30865                           ;NetworkManager.c: 206: return(DeviceType);
 30866                           
 30867                           ; BSR set to: 0
 30868                           ;incstack = 0
 30869  00787E  0101               	movlb	1	; () banked
 30870  007880  51F8               	movf	_DeviceType& (0+255),w,b
 30871                           
 30872                           ; BSR set to: 1
 30873  007882  0012               	return		;funcret
 30874  007884                     __end_of_NetworkGetDeviceType:
 30875                           	opt stack 0
 30876                           tblptru	equ	0xFF8
 30877                           tblptrh	equ	0xFF7
 30878                           tblptrl	equ	0xFF6
 30879                           tablat	equ	0xFF5
 30880                           prodh	equ	0xFF4
 30881                           prodl	equ	0xFF3
 30882                           intcon	equ	0xFF2
 30883                           intcon3	equ	0xFF0
 30884                           indf0	equ	0xFEF
 30885                           postinc0	equ	0xFEE
 30886                           plusw0	equ	0xFEB
 30887                           fsr0h	equ	0xFEA
 30888                           fsr0l	equ	0xFE9
 30889                           wreg	equ	0xFE8
 30890                           indf1	equ	0xFE7
 30891                           postinc1	equ	0xFE6
 30892                           postdec1	equ	0xFE5
 30893                           plusw1	equ	0xFE3
 30894                           fsr1h	equ	0xFE2
 30895                           fsr1l	equ	0xFE1
 30896                           indf2	equ	0xFDF
 30897                           postinc2	equ	0xFDE
 30898                           postdec2	equ	0xFDD
 30899                           plusw2	equ	0xFDB
 30900                           fsr2h	equ	0xFDA
 30901                           fsr2l	equ	0xFD9
 30902                           status	equ	0xFD8
 30903                           
 30904 ;; *************** function _NetworkAddressSizeGet *****************
 30905 ;; Defined at:
 30906 ;;		line 161 in file "../NetworkManager.c"
 30907 ;; Parameters:    Size  Location     Type
 30908 ;;		None
 30909 ;; Auto vars:     Size  Location     Type
 30910 ;;		None
 30911 ;; Return value:  Size  Location     Type
 30912 ;;                  1    wreg      unsigned char 
 30913 ;; Registers used:
 30914 ;;		wreg, status,2
 30915 ;; Tracked objects:
 30916 ;;		On entry : F/0
 30917 ;;		On exit  : F/1
 30918 ;;		Unchanged: 0/0
 30919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30924 ;;Total ram usage:        0 bytes
 30925 ;; Hardware stack levels used:    1
 30926 ;; Hardware stack levels required when called:    5
 30927 ;; This function calls:
 30928 ;;		Nothing
 30929 ;; This function is called by:
 30930 ;;		_routeInfoInit
 30931 ;;		_RouteManagerProcessReceive
 30932 ;;		_RoutingTableFindDeviceOrParent
 30933 ;;		_networkSendBeacon
 30934 ;;		_LEAppendNeighborInfo
 30935 ;;		_LE_processReceivedMessage
 30936 ;;		_TunnelManagerSetTunnel
 30937 ;;		_TunnelManagerGetTunnel
 30938 ;;		_TunnelManagerInvalidateTunnel
 30939 ;;		_NetworkInit
 30940 ;;		_isBroadcastAddress
 30941 ;;		_isSameAddress
 30942 ;;		_CoordinatorGenericAddress
 30943 ;;		_NetworkPrepareSendPacket
 30944 ;;		_NetworkSendDiscoverRequest
 30945 ;;		_NetworkSendDiscoverResponse
 30946 ;;		_NetworkSetAddressPAN
 30947 ;;		_IsNetworkDevice
 30948 ;;		_DeviceManagerBufferDeviceData
 30949 ;;		_DeviceManagerGetDeviceData
 30950 ;;		_NetworkBroadcastData
 30951 ;; This function uses a non-reentrant model
 30952 ;;
 30953                           
 30954                           	psect	text155
 30955  007884                     __ptext155:
 30956                           	opt stack 0
 30957  007884                     _NetworkAddressSizeGet:
 30958                           	opt stack 22
 30959                           
 30960                           ; BSR set to: 0
 30961                           ;NetworkManager.c: 163: return(addressLen);
 30962                           
 30963                           ; BSR set to: 1
 30964                           ;incstack = 0
 30965  007884  0101               	movlb	1	; () banked
 30966  007886  51F9               	movf	_addressLen& (0+255),w,b
 30967                           
 30968                           ; BSR set to: 1
 30969  007888  0012               	return		;funcret
 30970  00788A                     __end_of_NetworkAddressSizeGet:
 30971                           	opt stack 0
 30972                           tblptru	equ	0xFF8
 30973                           tblptrh	equ	0xFF7
 30974                           tblptrl	equ	0xFF6
 30975                           tablat	equ	0xFF5
 30976                           prodh	equ	0xFF4
 30977                           prodl	equ	0xFF3
 30978                           intcon	equ	0xFF2
 30979                           intcon3	equ	0xFF0
 30980                           indf0	equ	0xFEF
 30981                           postinc0	equ	0xFEE
 30982                           plusw0	equ	0xFEB
 30983                           fsr0h	equ	0xFEA
 30984                           fsr0l	equ	0xFE9
 30985                           wreg	equ	0xFE8
 30986                           indf1	equ	0xFE7
 30987                           postinc1	equ	0xFE6
 30988                           postdec1	equ	0xFE5
 30989                           plusw1	equ	0xFE3
 30990                           fsr1h	equ	0xFE2
 30991                           fsr1l	equ	0xFE1
 30992                           indf2	equ	0xFDF
 30993                           postinc2	equ	0xFDE
 30994                           postdec2	equ	0xFDD
 30995                           plusw2	equ	0xFDB
 30996                           fsr2h	equ	0xFDA
 30997                           fsr2l	equ	0xFD9
 30998                           status	equ	0xFD8
 30999                           
 31000 ;; *************** function _LEDManagerTask *****************
 31001 ;; Defined at:
 31002 ;;		line 498 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 31003 ;; Parameters:    Size  Location     Type
 31004 ;;		None
 31005 ;; Auto vars:     Size  Location     Type
 31006 ;;  i               2   49[BANK0 ] unsigned int 
 31007 ;; Return value:  Size  Location     Type
 31008 ;;                  1    wreg      void 
 31009 ;; Registers used:
 31010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31011 ;; Tracked objects:
 31012 ;;		On entry : E/1
 31013 ;;		On exit  : F/0
 31014 ;;		Unchanged: 0/0
 31015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31018 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31019 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31020 ;;Total ram usage:       12 bytes
 31021 ;; Hardware stack levels used:    1
 31022 ;; Hardware stack levels required when called:    7
 31023 ;; This function calls:
 31024 ;;		_MiWi_TickGetMs
 31025 ;; This function is called by:
 31026 ;;		_main
 31027 ;; This function uses a non-reentrant model
 31028 ;;
 31029                           
 31030                           	psect	text156
 31031  001660                     __ptext156:
 31032                           	opt stack 0
 31033  001660                     _LEDManagerTask:
 31034                           	opt stack 23
 31035                           
 31036                           ;system.c: 500: uint16_t i;
 31037                           ;system.c: 501: static LEDState_t lNextState[LEDCount];
 31038                           ;system.c: 502: static MIWI_TICK tStart[LEDCount];
 31039                           ;system.c: 504: for(i=0;i<LEDCount;i++)
 31040                           
 31041                           ; BSR set to: 1
 31042                           ;incstack = 0
 31043  001660  0100               	movlb	0	; () banked
 31044  001662  6B91               	clrf	LEDManagerTask@i& (0+255),b
 31045  001664  6B92               	clrf	(LEDManagerTask@i+1)& (0+255),b
 31046  001666  D194               	goto	l15040
 31047  001668                     l14920:
 31048                           
 31049                           ; BSR set to: 0
 31050                           ;system.c: 509: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 31051  001668  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31052  00166A  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31053  00166C  E102               	bnz	l14924
 31054                           
 31055                           ; BSR set to: 0
 31056  00166E  948B               	bcf	3979,2,c	;volatile
 31057  001670  D006               	goto	l14928
 31058  001672                     l14924:
 31059                           
 31060                           ; BSR set to: 0
 31061  001672  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31062  001674  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31063  001676  E102               	bnz	l603
 31064                           
 31065                           ; BSR set to: 0
 31066  001678  9C89               	bcf	3977,6,c	;volatile
 31067  00167A  D001               	goto	l14928
 31068  00167C                     l603:
 31069                           
 31070                           ; BSR set to: 0
 31071  00167C  9E89               	bcf	3977,7,c	;volatile
 31072  00167E                     l14928:
 31073                           
 31074                           ; BSR set to: 0
 31075                           ;system.c: 510: LEDState[i]=LED_Off;
 31076  00167E  0EC9               	movlw	low _LEDState
 31077  001680  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31078  001682  6ED9               	movwf	fsr2l,c
 31079  001684  0E01               	movlw	high _LEDState
 31080  001686  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31081  001688  6EDA               	movwf	fsr2h,c
 31082  00168A  0E01               	movlw	1
 31083  00168C  D06C               	goto	L12
 31084  00168E                     l14930:
 31085                           
 31086                           ; BSR set to: 0
 31087                           ;system.c: 514: if(LEDCmd[i]==lCMD_On)
 31088  00168E  0EC6               	movlw	low _LEDCmd
 31089  001690  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31090  001692  6ED9               	movwf	fsr2l,c
 31091  001694  0E01               	movlw	high _LEDCmd
 31092  001696  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31093  001698  6EDA               	movwf	fsr2h,c
 31094  00169A  0E02               	movlw	2
 31095  00169C  18DE               	xorwf	postinc2,w,c
 31096  00169E  E10A               	bnz	l14942
 31097  0016A0  D051               	goto	L18
 31098  0016A2                     l610:
 31099                           
 31100                           ; BSR set to: 0
 31101  0016A2  8E89               	bsf	3977,7,c	;volatile
 31102  0016A4                     l14940:
 31103                           
 31104                           ; BSR set to: 0
 31105                           ;system.c: 517: LEDState[i]=LED_On;
 31106  0016A4  0EC9               	movlw	low _LEDState
 31107  0016A6  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31108  0016A8  6ED9               	movwf	fsr2l,c
 31109  0016AA  0E01               	movlw	high _LEDState
 31110  0016AC  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31111  0016AE  6EDA               	movwf	fsr2h,c
 31112  0016B0  0E05               	movlw	5
 31113  0016B2  D119               	goto	L13
 31114  0016B4                     l14942:
 31115                           
 31116                           ; BSR set to: 0
 31117  0016B4  0EC6               	movlw	low _LEDCmd
 31118  0016B6  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31119  0016B8  6ED9               	movwf	fsr2l,c
 31120  0016BA  0E01               	movlw	high _LEDCmd
 31121  0016BC  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31122  0016BE  6EDA               	movwf	fsr2h,c
 31123  0016C0  0E03               	movlw	3
 31124  0016C2  18DE               	xorwf	postinc2,w,c
 31125  0016C4  E136               	bnz	l14958
 31126                           
 31127                           ; BSR set to: 0
 31128                           ;system.c: 519: {
 31129                           ;system.c: 520: tStart[i]=MiWi_TickGetMs();
 31130  0016C6  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 31131  0016CA  0E1E               	movlw	low LEDManagerTask@tStart
 31132  0016CC  6F87               	movwf	??_LEDManagerTask& (0+255),b
 31133  0016CE  0E02               	movlw	high LEDManagerTask@tStart
 31134  0016D0  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 31135  0016D2  90D8               	bcf	status,0,c
 31136  0016D4  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 31137  0016D6  6ED9               	movwf	fsr2l,c
 31138  0016D8  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 31139  0016DA  6EDA               	movwf	fsr2h,c
 31140  0016DC  90D8               	bcf	status,0,c
 31141  0016DE  36D9               	rlcf	fsr2l,f,c
 31142  0016E0  36DA               	rlcf	fsr2h,f,c
 31143  0016E2  5187               	movf	??_LEDManagerTask& (0+255),w,b
 31144  0016E4  26D9               	addwf	fsr2l,f,c
 31145  0016E6  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 31146  0016E8  22DA               	addwfc	fsr2h,f,c
 31147  0016EA  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 31148  0016EE  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 31149  0016F2  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 31150  0016F6  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 31151                           
 31152                           ; BSR set to: 0
 31153                           ;system.c: 521: LEDState[i]=LED_DelayActive;
 31154  0016FA  0EC9               	movlw	low _LEDState
 31155  0016FC  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31156  0016FE  6ED9               	movwf	fsr2l,c
 31157  001700  0E01               	movlw	high _LEDState
 31158  001702  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31159  001704  6EDA               	movwf	fsr2h,c
 31160  001706  0E03               	movlw	3
 31161  001708  6EDF               	movwf	indf2,c
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;system.c: 522: lNextState[i]=LED_Off;
 31165  00170A  0E4E               	movlw	low LEDManagerTask@lNextState
 31166  00170C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31167  00170E  6ED9               	movwf	fsr2l,c
 31168  001710  0E02               	movlw	high LEDManagerTask@lNextState
 31169  001712  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31170  001714  6EDA               	movwf	fsr2h,c
 31171  001716  0E01               	movlw	1
 31172  001718  6EDF               	movwf	indf2,c
 31173                           
 31174                           ; BSR set to: 0
 31175                           ;system.c: 523: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 31176  00171A  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31177  00171C  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31178  00171E  E102               	bnz	l14954
 31179                           
 31180                           ; BSR set to: 0
 31181  001720  848B               	bsf	3979,2,c	;volatile
 31182  001722  D01A               	goto	l612
 31183  001724                     l14954:
 31184                           
 31185                           ; BSR set to: 0
 31186  001724  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31187  001726  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31188  001728  E102               	bnz	l616
 31189                           
 31190                           ; BSR set to: 0
 31191  00172A  8C89               	bsf	3977,6,c	;volatile
 31192  00172C  D015               	goto	l612
 31193  00172E                     l616:
 31194                           
 31195                           ; BSR set to: 0
 31196  00172E  8E89               	bsf	3977,7,c	;volatile
 31197  001730  D013               	goto	l612
 31198  001732                     l14958:
 31199                           
 31200                           ; BSR set to: 0
 31201  001732  0EC6               	movlw	low _LEDCmd
 31202  001734  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31203  001736  6ED9               	movwf	fsr2l,c
 31204  001738  0E01               	movlw	high _LEDCmd
 31205  00173A  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31206  00173C  6EDA               	movwf	fsr2h,c
 31207  00173E  0E04               	movlw	4
 31208  001740  18DE               	xorwf	postinc2,w,c
 31209  001742  E10A               	bnz	l612
 31210  001744                     L18:
 31211                           
 31212                           ; BSR set to: 0
 31213                           ;system.c: 525: {
 31214                           ;system.c: 526: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 31215  001744  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31216  001746  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31217  001748  E102               	bnz	l14964
 31218                           
 31219                           ; BSR set to: 0
 31220  00174A  848B               	bsf	3979,2,c	;volatile
 31221  00174C  D7AB               	goto	l14940
 31222  00174E                     l14964:
 31223                           
 31224                           ; BSR set to: 0
 31225  00174E  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31226  001750  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31227  001752  E1A7               	bnz	l610
 31228                           
 31229                           ; BSR set to: 0
 31230  001754  8C89               	bsf	3977,6,c	;volatile
 31231  001756  D7A6               	goto	l14940
 31232  001758                     l612:
 31233                           
 31234                           ; BSR set to: 0
 31235                           ;system.c: 528: }
 31236                           ;system.c: 529: LEDCmd[i]=lCMD_None;
 31237  001758  0EC6               	movlw	low _LEDCmd
 31238  00175A  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31239  00175C  6ED9               	movwf	fsr2l,c
 31240  00175E  0E01               	movlw	high _LEDCmd
 31241  001760  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31242  001762  6EDA               	movwf	fsr2h,c
 31243  001764  0E00               	movlw	0
 31244  001766                     L12:
 31245  001766  6EDF               	movwf	indf2,c
 31246                           
 31247                           ;system.c: 530: break;
 31248  001768  D127               	goto	l15042
 31249  00176A                     l14970:
 31250                           
 31251                           ; BSR set to: 0
 31252                           ;system.c: 533: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 31253  00176A  0E1E               	movlw	low LEDManagerTask@tStart
 31254  00176C  6F87               	movwf	??_LEDManagerTask& (0+255),b
 31255  00176E  0E02               	movlw	high LEDManagerTask@tStart
 31256  001770  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 31257  001772  90D8               	bcf	status,0,c
 31258  001774  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 31259  001776  6ED9               	movwf	fsr2l,c
 31260  001778  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 31261  00177A  6EDA               	movwf	fsr2h,c
 31262  00177C  90D8               	bcf	status,0,c
 31263  00177E  36D9               	rlcf	fsr2l,f,c
 31264  001780  36DA               	rlcf	fsr2h,f,c
 31265  001782  5187               	movf	??_LEDManagerTask& (0+255),w,b
 31266  001784  26D9               	addwf	fsr2l,f,c
 31267  001786  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 31268  001788  22DA               	addwfc	fsr2h,f,c
 31269  00178A  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 31270  00178E  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 31271  001792  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 31272  001796  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 31273  00179A  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 31274  00179E  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 31275  0017A0  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 31276  0017A2  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 31277  0017A4  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 31278  0017A6  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 31279  0017A8  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 31280  0017AA  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 31281  0017AC  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 31282  0017AE  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 31283  0017B0  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 31284  0017B2  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 31285  0017B4  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 31286  0017B6  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 31287  0017B8  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 31288  0017BA  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 31289  0017BC  E104               	bnz	u17100
 31290  0017BE  0E15               	movlw	21
 31291  0017C0  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 31292  0017C2  E201 D0F9          	bnc	l15042
 31293  0017C6                     u17100:
 31294                           
 31295                           ; BSR set to: 0
 31296                           ;system.c: 534: {
 31297                           ;system.c: 535: LEDState[i]=LED_DelayInactive;
 31298  0017C6  0EC9               	movlw	low _LEDState
 31299  0017C8  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31300  0017CA  6ED9               	movwf	fsr2l,c
 31301  0017CC  0E01               	movlw	high _LEDState
 31302  0017CE  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31303  0017D0  6EDA               	movwf	fsr2h,c
 31304  0017D2  0E04               	movlw	4
 31305  0017D4  6EDF               	movwf	indf2,c
 31306                           
 31307                           ; BSR set to: 0
 31308                           ;system.c: 536: tStart[i]=MiWi_TickGetMs();
 31309  0017D6  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 31310  0017DA  0E1E               	movlw	low LEDManagerTask@tStart
 31311  0017DC  6F87               	movwf	??_LEDManagerTask& (0+255),b
 31312  0017DE  0E02               	movlw	high LEDManagerTask@tStart
 31313  0017E0  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 31314  0017E2  90D8               	bcf	status,0,c
 31315  0017E4  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 31316  0017E6  6ED9               	movwf	fsr2l,c
 31317  0017E8  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 31318  0017EA  6EDA               	movwf	fsr2h,c
 31319  0017EC  90D8               	bcf	status,0,c
 31320  0017EE  36D9               	rlcf	fsr2l,f,c
 31321  0017F0  36DA               	rlcf	fsr2h,f,c
 31322  0017F2  5187               	movf	??_LEDManagerTask& (0+255),w,b
 31323  0017F4  26D9               	addwf	fsr2l,f,c
 31324  0017F6  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 31325  0017F8  22DA               	addwfc	fsr2h,f,c
 31326  0017FA  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 31327  0017FE  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 31328  001802  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 31329  001806  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 31330                           
 31331                           ; BSR set to: 0
 31332                           ;system.c: 537: if(lNextState[i]==LED_Off)
 31333  00180A  0E4E               	movlw	low LEDManagerTask@lNextState
 31334  00180C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31335  00180E  6ED9               	movwf	fsr2l,c
 31336  001810  0E02               	movlw	high LEDManagerTask@lNextState
 31337  001812  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31338  001814  6EDA               	movwf	fsr2h,c
 31339  001816  04DE               	decf	postinc2,w,c
 31340  001818  E10C               	bnz	l14986
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;system.c: 538: {
 31344                           ;system.c: 539: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 31345  00181A  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31346  00181C  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31347  00181E  E102               	bnz	l14982
 31348                           
 31349                           ; BSR set to: 0
 31350  001820  948B               	bcf	3979,2,c	;volatile
 31351  001822  D0CA               	goto	l15042
 31352  001824                     l14982:
 31353                           
 31354                           ; BSR set to: 0
 31355  001824  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31356  001826  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31357  001828  E102               	bnz	l629
 31358                           
 31359                           ; BSR set to: 0
 31360  00182A  9C89               	bcf	3977,6,c	;volatile
 31361  00182C  D0C5               	goto	l15042
 31362  00182E                     l629:
 31363                           
 31364                           ; BSR set to: 0
 31365  00182E  9E89               	bcf	3977,7,c	;volatile
 31366  001830  D0C3               	goto	l15042
 31367  001832                     l14986:
 31368                           
 31369                           ; BSR set to: 0
 31370                           ;system.c: 541: {
 31371                           ;system.c: 542: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 31372  001832  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31373  001834  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31374  001836  E102               	bnz	l14990
 31375                           
 31376                           ; BSR set to: 0
 31377  001838  848B               	bsf	3979,2,c	;volatile
 31378  00183A  D0BE               	goto	l15042
 31379  00183C                     l14990:
 31380                           
 31381                           ; BSR set to: 0
 31382  00183C  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31383  00183E  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31384  001840  E102               	bnz	l634
 31385                           
 31386                           ; BSR set to: 0
 31387  001842  8C89               	bsf	3977,6,c	;volatile
 31388  001844  D0B9               	goto	l15042
 31389  001846                     l634:
 31390                           
 31391                           ; BSR set to: 0
 31392  001846  8E89               	bsf	3977,7,c	;volatile
 31393  001848  D0B7               	goto	l15042
 31394  00184A                     l14994:
 31395                           
 31396                           ; BSR set to: 0
 31397                           ;system.c: 548: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 31398  00184A  0E1E               	movlw	low LEDManagerTask@tStart
 31399  00184C  6F87               	movwf	??_LEDManagerTask& (0+255),b
 31400  00184E  0E02               	movlw	high LEDManagerTask@tStart
 31401  001850  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 31402  001852  90D8               	bcf	status,0,c
 31403  001854  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 31404  001856  6ED9               	movwf	fsr2l,c
 31405  001858  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 31406  00185A  6EDA               	movwf	fsr2h,c
 31407  00185C  90D8               	bcf	status,0,c
 31408  00185E  36D9               	rlcf	fsr2l,f,c
 31409  001860  36DA               	rlcf	fsr2h,f,c
 31410  001862  5187               	movf	??_LEDManagerTask& (0+255),w,b
 31411  001864  26D9               	addwf	fsr2l,f,c
 31412  001866  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 31413  001868  22DA               	addwfc	fsr2h,f,c
 31414  00186A  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 31415  00186E  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 31416  001872  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 31417  001876  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 31418  00187A  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 31419  00187E  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 31420  001880  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 31421  001882  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 31422  001884  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 31423  001886  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 31424  001888  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 31425  00188A  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 31426  00188C  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 31427  00188E  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 31428  001890  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 31429  001892  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 31430  001894  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 31431  001896  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 31432  001898  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 31433  00189A  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 31434  00189C  E104               	bnz	u17160
 31435  00189E  0E15               	movlw	21
 31436  0018A0  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 31437  0018A2  E201 D089          	bnc	l15042
 31438  0018A6                     u17160:
 31439                           
 31440                           ; BSR set to: 0
 31441                           ;system.c: 549: {
 31442                           ;system.c: 550: LEDState[i]=lNextState[i];
 31443  0018A6  0E4E               	movlw	low LEDManagerTask@lNextState
 31444  0018A8  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31445  0018AA  6ED9               	movwf	fsr2l,c
 31446  0018AC  0E02               	movlw	high LEDManagerTask@lNextState
 31447  0018AE  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31448  0018B0  6EDA               	movwf	fsr2h,c
 31449  0018B2  0EC9               	movlw	low _LEDState
 31450  0018B4  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31451  0018B6  6EE1               	movwf	fsr1l,c
 31452  0018B8  0E01               	movlw	high _LEDState
 31453  0018BA  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31454  0018BC  6EE2               	movwf	fsr1h,c
 31455  0018BE  CFDF FFE7          	movff	indf2,indf1
 31456  0018C2  D07A               	goto	l15042
 31457  0018C4                     l14998:
 31458                           
 31459                           ; BSR set to: 0
 31460                           ;system.c: 555: if(LEDCmd[i]==lCMD_Off)
 31461  0018C4  0EC6               	movlw	low _LEDCmd
 31462  0018C6  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31463  0018C8  6ED9               	movwf	fsr2l,c
 31464  0018CA  0E01               	movlw	high _LEDCmd
 31465  0018CC  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31466  0018CE  6EDA               	movwf	fsr2h,c
 31467  0018D0  04DE               	decf	postinc2,w,c
 31468  0018D2  E10B               	bnz	l15010
 31469  0018D4  D053               	goto	L19
 31470  0018D6                     l642:
 31471                           
 31472                           ; BSR set to: 0
 31473  0018D6  9E89               	bcf	3977,7,c	;volatile
 31474  0018D8                     l15008:
 31475                           
 31476                           ; BSR set to: 0
 31477                           ;system.c: 558: LEDState[i]=LED_Off;
 31478  0018D8  0EC9               	movlw	low _LEDState
 31479  0018DA  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31480  0018DC  6ED9               	movwf	fsr2l,c
 31481  0018DE  0E01               	movlw	high _LEDState
 31482  0018E0  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31483  0018E2  6EDA               	movwf	fsr2h,c
 31484  0018E4  0E01               	movlw	1
 31485  0018E6                     L13:
 31486  0018E6  6EDF               	movwf	indf2,c
 31487                           
 31488                           ;system.c: 559: }else if(LEDCmd[i]==lCMD_Blink)
 31489  0018E8  D737               	goto	l612
 31490  0018EA                     l15010:
 31491                           
 31492                           ; BSR set to: 0
 31493  0018EA  0EC6               	movlw	low _LEDCmd
 31494  0018EC  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31495  0018EE  6ED9               	movwf	fsr2l,c
 31496  0018F0  0E01               	movlw	high _LEDCmd
 31497  0018F2  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31498  0018F4  6EDA               	movwf	fsr2h,c
 31499  0018F6  0E03               	movlw	3
 31500  0018F8  18DE               	xorwf	postinc2,w,c
 31501  0018FA  E136               	bnz	l15026
 31502                           
 31503                           ; BSR set to: 0
 31504                           ;system.c: 560: {
 31505                           ;system.c: 561: tStart[i]=MiWi_TickGetMs();
 31506  0018FC  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 31507  001900  0E1E               	movlw	low LEDManagerTask@tStart
 31508  001902  6F87               	movwf	??_LEDManagerTask& (0+255),b
 31509  001904  0E02               	movlw	high LEDManagerTask@tStart
 31510  001906  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 31511  001908  90D8               	bcf	status,0,c
 31512  00190A  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 31513  00190C  6ED9               	movwf	fsr2l,c
 31514  00190E  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 31515  001910  6EDA               	movwf	fsr2h,c
 31516  001912  90D8               	bcf	status,0,c
 31517  001914  36D9               	rlcf	fsr2l,f,c
 31518  001916  36DA               	rlcf	fsr2h,f,c
 31519  001918  5187               	movf	??_LEDManagerTask& (0+255),w,b
 31520  00191A  26D9               	addwf	fsr2l,f,c
 31521  00191C  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 31522  00191E  22DA               	addwfc	fsr2h,f,c
 31523  001920  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 31524  001924  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 31525  001928  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 31526  00192C  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 31527                           
 31528                           ; BSR set to: 0
 31529                           ;system.c: 562: LEDState[i]=LED_DelayActive;
 31530  001930  0EC9               	movlw	low _LEDState
 31531  001932  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31532  001934  6ED9               	movwf	fsr2l,c
 31533  001936  0E01               	movlw	high _LEDState
 31534  001938  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31535  00193A  6EDA               	movwf	fsr2h,c
 31536  00193C  0E03               	movlw	3
 31537  00193E  6EDF               	movwf	indf2,c
 31538                           
 31539                           ; BSR set to: 0
 31540                           ;system.c: 563: lNextState[i]=LED_On;
 31541  001940  0E4E               	movlw	low LEDManagerTask@lNextState
 31542  001942  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31543  001944  6ED9               	movwf	fsr2l,c
 31544  001946  0E02               	movlw	high LEDManagerTask@lNextState
 31545  001948  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31546  00194A  6EDA               	movwf	fsr2h,c
 31547  00194C  0E05               	movlw	5
 31548  00194E  6EDF               	movwf	indf2,c
 31549                           
 31550                           ; BSR set to: 0
 31551                           ;system.c: 564: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 31552  001950  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31553  001952  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31554  001954  E102               	bnz	l15022
 31555                           
 31556                           ; BSR set to: 0
 31557  001956  948B               	bcf	3979,2,c	;volatile
 31558  001958  D6FF               	goto	l612
 31559  00195A                     l15022:
 31560                           
 31561                           ; BSR set to: 0
 31562  00195A  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31563  00195C  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31564  00195E  E102               	bnz	l648
 31565                           
 31566                           ; BSR set to: 0
 31567  001960  9C89               	bcf	3977,6,c	;volatile
 31568  001962  D6FA               	goto	l612
 31569  001964                     l648:
 31570                           
 31571                           ; BSR set to: 0
 31572  001964  9E89               	bcf	3977,7,c	;volatile
 31573  001966  D6F8               	goto	l612
 31574  001968                     l15026:
 31575                           
 31576                           ; BSR set to: 0
 31577  001968  0EC6               	movlw	low _LEDCmd
 31578  00196A  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31579  00196C  6ED9               	movwf	fsr2l,c
 31580  00196E  0E01               	movlw	high _LEDCmd
 31581  001970  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31582  001972  6EDA               	movwf	fsr2h,c
 31583  001974  0E04               	movlw	4
 31584  001976  18DE               	xorwf	postinc2,w,c
 31585  001978  E001 D6EE          	bnz	l612
 31586  00197C                     L19:
 31587                           
 31588                           ; BSR set to: 0
 31589                           ;system.c: 566: {
 31590                           ;system.c: 567: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 31591  00197C  5191               	movf	LEDManagerTask@i& (0+255),w,b
 31592  00197E  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31593  001980  E102               	bnz	l15032
 31594                           
 31595                           ; BSR set to: 0
 31596  001982  948B               	bcf	3979,2,c	;volatile
 31597  001984  D7A9               	goto	l15008
 31598  001986                     l15032:
 31599                           
 31600                           ; BSR set to: 0
 31601  001986  0591               	decf	LEDManagerTask@i& (0+255),w,b
 31602  001988  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31603  00198A  E1A5               	bnz	l642
 31604                           
 31605                           ; BSR set to: 0
 31606  00198C  9C89               	bcf	3977,6,c	;volatile
 31607  00198E  D7A4               	goto	l15008
 31608  001990                     l15040:
 31609                           
 31610                           ; BSR set to: 0
 31611  001990  0EC9               	movlw	low _LEDState
 31612  001992  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 31613  001994  6ED9               	movwf	fsr2l,c
 31614  001996  0E01               	movlw	high _LEDState
 31615  001998  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31616  00199A  6EDA               	movwf	fsr2h,c
 31617  00199C  50DF               	movf	indf2,w,c
 31618                           
 31619                           ; Switch size 1, requested type "speed"
 31620                           ; Number of cases is 5, Range of values is 0 to 5
 31621                           ; switch strategies available:
 31622                           ; Name         Instructions Cycles
 31623                           ; simple_byte           16     9 (average)
 31624                           ;	Chosen strategy is simple_byte
 31625  00199E  E101 D663          	bz	l14920
 31626  0019A2  0A01               	xorlw	1	; case 1
 31627  0019A4  E101 D673          	bz	l14930
 31628  0019A8  0A02               	xorlw	2	; case 3
 31629  0019AA  E101 D6DE          	bz	l14970
 31630  0019AE  0A07               	xorlw	7	; case 4
 31631  0019B0  E101 D74B          	bz	l14994
 31632  0019B4  0A01               	xorlw	1	; case 5
 31633  0019B6  E086               	bz	l14998
 31634  0019B8                     l15042:
 31635                           
 31636                           ; BSR set to: 0
 31637  0019B8  4B91               	infsnz	LEDManagerTask@i& (0+255),f,b
 31638  0019BA  2B92               	incf	(LEDManagerTask@i+1)& (0+255),f,b
 31639                           
 31640                           ; BSR set to: 0
 31641  0019BC  5192               	movf	(LEDManagerTask@i+1)& (0+255),w,b
 31642  0019BE  E103               	bnz	u17260
 31643  0019C0  0E03               	movlw	3
 31644  0019C2  5D91               	subwf	LEDManagerTask@i& (0+255),w,b
 31645  0019C4  E3E5               	bnc	l15040
 31646  0019C6                     u17260:
 31647                           
 31648                           ; BSR set to: 0
 31649  0019C6  0012               	return		;funcret
 31650  0019C8                     __end_of_LEDManagerTask:
 31651                           	opt stack 0
 31652                           tblptru	equ	0xFF8
 31653                           tblptrh	equ	0xFF7
 31654                           tblptrl	equ	0xFF6
 31655                           tablat	equ	0xFF5
 31656                           prodh	equ	0xFF4
 31657                           prodl	equ	0xFF3
 31658                           intcon	equ	0xFF2
 31659                           intcon3	equ	0xFF0
 31660                           indf0	equ	0xFEF
 31661                           postinc0	equ	0xFEE
 31662                           plusw0	equ	0xFEB
 31663                           fsr0h	equ	0xFEA
 31664                           fsr0l	equ	0xFE9
 31665                           wreg	equ	0xFE8
 31666                           indf1	equ	0xFE7
 31667                           postinc1	equ	0xFE6
 31668                           postdec1	equ	0xFE5
 31669                           plusw1	equ	0xFE3
 31670                           fsr1h	equ	0xFE2
 31671                           fsr1l	equ	0xFE1
 31672                           indf2	equ	0xFDF
 31673                           postinc2	equ	0xFDE
 31674                           postdec2	equ	0xFDD
 31675                           plusw2	equ	0xFDB
 31676                           fsr2h	equ	0xFDA
 31677                           fsr2l	equ	0xFD9
 31678                           status	equ	0xFD8
 31679                           
 31680 ;; *************** function _LCDUpdate *****************
 31681 ;; Defined at:
 31682 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31683 ;; Parameters:    Size  Location     Type
 31684 ;;		None
 31685 ;; Auto vars:     Size  Location     Type
 31686 ;;  i               1   39[BANK0 ] unsigned char 
 31687 ;; Return value:  Size  Location     Type
 31688 ;;                  1    wreg      void 
 31689 ;; Registers used:
 31690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31691 ;; Tracked objects:
 31692 ;;		On entry : 0/0
 31693 ;;		On exit  : F/0
 31694 ;;		Unchanged: 0/0
 31695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31700 ;;Total ram usage:        1 bytes
 31701 ;; Hardware stack levels used:    1
 31702 ;; Hardware stack levels required when called:    8
 31703 ;; This function calls:
 31704 ;;		_DelayUS
 31705 ;;		_LCDInit
 31706 ;;		_LCD_WriteCmd
 31707 ;;		_LCD_WriteData
 31708 ;; This function is called by:
 31709 ;;		_main
 31710 ;; This function uses a non-reentrant model
 31711 ;;
 31712                           
 31713                           	psect	text157
 31714  005942                     __ptext157:
 31715                           	opt stack 0
 31716  005942                     _LCDUpdate:
 31717                           	opt stack 22
 31718                           
 31719                           ;lcd.c: 118: uint8_t i;
 31720                           ;lcd.c: 119: if(lcdInitialized==0)
 31721                           
 31722                           ; BSR set to: 0
 31723                           ;incstack = 0
 31724  005942  0101               	movlb	1	; () banked
 31725  005944  51DC               	movf	_lcdInitialized& (0+255),w,b
 31726  005946  E104               	bnz	l14738
 31727                           
 31728                           ; BSR set to: 1
 31729                           ;lcd.c: 120: {
 31730                           ;lcd.c: 121: lcdInitialized=1;
 31731  005948  0E01               	movlw	1
 31732  00594A  6FDC               	movwf	_lcdInitialized& (0+255),b
 31733                           
 31734                           ; BSR set to: 1
 31735                           ;lcd.c: 122: LCDInit();
 31736  00594C  EC36  F027         	call	_LCDInit	;wreg free
 31737  005950                     l14738:
 31738                           
 31739                           ;lcd.c: 123: }
 31740                           ;lcd.c: 124: LCD_WriteCmd(0x80 | 0x00);
 31741  005950  0E80               	movlw	128
 31742  005952  EC93  F03B         	call	_LCD_WriteCmd
 31743                           
 31744                           ;lcd.c: 126: for(i = 0; i < 16; i++)
 31745  005956  0100               	movlb	0	; () banked
 31746  005958  6B87               	clrf	LCDUpdate@i& (0+255),b
 31747  00595A                     l14746:
 31748                           
 31749                           ; BSR set to: 0
 31750                           ;lcd.c: 127: {
 31751                           ;lcd.c: 128: DelayUS(10);
 31752  00595A  0E0A               	movlw	10
 31753  00595C  6F73               	movwf	DelayUS@delay& (0+255),b
 31754  00595E  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31755  005960  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31756  005962  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31757  005964  EC20  F03A         	call	_DelayUS	;wreg free
 31758                           
 31759                           ; BSR set to: 0
 31760                           ;lcd.c: 129: if( LCDText[i] == 0 )
 31761  005968  0ECE               	movlw	low _LCDText
 31762  00596A  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31763  00596C  6ED9               	movwf	fsr2l,c
 31764  00596E  6ADA               	clrf	fsr2h,c
 31765  005970  0E03               	movlw	high _LCDText
 31766  005972  22DA               	addwfc	fsr2h,f,c
 31767  005974  50DF               	movf	indf2,w,c
 31768  005976  E104               	bnz	l14752
 31769                           
 31770                           ; BSR set to: 0
 31771                           ;lcd.c: 130: {
 31772                           ;lcd.c: 131: LCD_WriteData(' ');
 31773  005978  0E20               	movlw	32
 31774  00597A  EC88  F03B         	call	_LCD_WriteData
 31775                           
 31776                           ;lcd.c: 132: }
 31777  00597E  D009               	goto	l14754
 31778  005980                     l14752:
 31779                           
 31780                           ; BSR set to: 0
 31781                           ;lcd.c: 133: else
 31782                           ;lcd.c: 134: {
 31783                           ;lcd.c: 135: LCD_WriteData(LCDText[i]);
 31784  005980  0ECE               	movlw	low _LCDText
 31785  005982  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31786  005984  6ED9               	movwf	fsr2l,c
 31787  005986  6ADA               	clrf	fsr2h,c
 31788  005988  0E03               	movlw	high _LCDText
 31789  00598A  22DA               	addwfc	fsr2h,f,c
 31790  00598C  50DF               	movf	indf2,w,c
 31791  00598E  EC88  F03B         	call	_LCD_WriteData
 31792  005992                     l14754:
 31793  005992  0100               	movlb	0	; () banked
 31794  005994  2B87               	incf	LCDUpdate@i& (0+255),f,b
 31795                           
 31796                           ; BSR set to: 0
 31797  005996  0E0F               	movlw	15
 31798  005998  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 31799  00599A  D7DF               	goto	l14746
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;lcd.c: 136: }
 31803                           ;lcd.c: 137: }
 31804                           ;lcd.c: 138: DelayUS(10);
 31805  00599C  0E0A               	movlw	10
 31806  00599E  6F73               	movwf	DelayUS@delay& (0+255),b
 31807  0059A0  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31808  0059A2  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31809  0059A4  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31810  0059A6  EC20  F03A         	call	_DelayUS	;wreg free
 31811                           
 31812                           ; BSR set to: 0
 31813                           ;lcd.c: 139: LCD_WriteCmd(0x80 | 0x40);
 31814  0059AA  0EC0               	movlw	192
 31815  0059AC  EC93  F03B         	call	_LCD_WriteCmd
 31816                           
 31817                           ;lcd.c: 141: for(i = 16; i < 32; i++)
 31818  0059B0  0E10               	movlw	16
 31819  0059B2  0100               	movlb	0	; () banked
 31820  0059B4  6F87               	movwf	LCDUpdate@i& (0+255),b
 31821  0059B6                     l14766:
 31822                           
 31823                           ; BSR set to: 0
 31824                           ;lcd.c: 142: {
 31825                           ;lcd.c: 143: DelayUS(10);
 31826  0059B6  0E0A               	movlw	10
 31827  0059B8  6F73               	movwf	DelayUS@delay& (0+255),b
 31828  0059BA  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 31829  0059BC  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 31830  0059BE  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 31831  0059C0  EC20  F03A         	call	_DelayUS	;wreg free
 31832                           
 31833                           ; BSR set to: 0
 31834                           ;lcd.c: 144: if( LCDText[i] == 0 )
 31835  0059C4  0ECE               	movlw	low _LCDText
 31836  0059C6  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31837  0059C8  6ED9               	movwf	fsr2l,c
 31838  0059CA  6ADA               	clrf	fsr2h,c
 31839  0059CC  0E03               	movlw	high _LCDText
 31840  0059CE  22DA               	addwfc	fsr2h,f,c
 31841  0059D0  50DF               	movf	indf2,w,c
 31842  0059D2  E104               	bnz	l14772
 31843                           
 31844                           ; BSR set to: 0
 31845                           ;lcd.c: 145: {
 31846                           ;lcd.c: 146: LCD_WriteData(' ');
 31847  0059D4  0E20               	movlw	32
 31848  0059D6  EC88  F03B         	call	_LCD_WriteData
 31849                           
 31850                           ;lcd.c: 147: }
 31851  0059DA  D009               	goto	l14774
 31852  0059DC                     l14772:
 31853                           
 31854                           ; BSR set to: 0
 31855                           ;lcd.c: 148: else
 31856                           ;lcd.c: 149: {
 31857                           ;lcd.c: 150: LCD_WriteData(LCDText[i]);
 31858  0059DC  0ECE               	movlw	low _LCDText
 31859  0059DE  2587               	addwf	LCDUpdate@i& (0+255),w,b
 31860  0059E0  6ED9               	movwf	fsr2l,c
 31861  0059E2  6ADA               	clrf	fsr2h,c
 31862  0059E4  0E03               	movlw	high _LCDText
 31863  0059E6  22DA               	addwfc	fsr2h,f,c
 31864  0059E8  50DF               	movf	indf2,w,c
 31865  0059EA  EC88  F03B         	call	_LCD_WriteData
 31866  0059EE                     l14774:
 31867  0059EE  0100               	movlb	0	; () banked
 31868  0059F0  2B87               	incf	LCDUpdate@i& (0+255),f,b
 31869                           
 31870                           ; BSR set to: 0
 31871  0059F2  0E1F               	movlw	31
 31872  0059F4  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 31873  0059F6  D7DF               	goto	l14766
 31874  0059F8  0C1F               	retlw	31
 31875  0059FA                     __end_of_LCDUpdate:
 31876                           	opt stack 0
 31877                           tblptru	equ	0xFF8
 31878                           tblptrh	equ	0xFF7
 31879                           tblptrl	equ	0xFF6
 31880                           tablat	equ	0xFF5
 31881                           prodh	equ	0xFF4
 31882                           prodl	equ	0xFF3
 31883                           intcon	equ	0xFF2
 31884                           intcon3	equ	0xFF0
 31885                           indf0	equ	0xFEF
 31886                           postinc0	equ	0xFEE
 31887                           plusw0	equ	0xFEB
 31888                           fsr0h	equ	0xFEA
 31889                           fsr0l	equ	0xFE9
 31890                           wreg	equ	0xFE8
 31891                           indf1	equ	0xFE7
 31892                           postinc1	equ	0xFE6
 31893                           postdec1	equ	0xFE5
 31894                           plusw1	equ	0xFE3
 31895                           fsr1h	equ	0xFE2
 31896                           fsr1l	equ	0xFE1
 31897                           indf2	equ	0xFDF
 31898                           postinc2	equ	0xFDE
 31899                           postdec2	equ	0xFDD
 31900                           plusw2	equ	0xFDB
 31901                           fsr2h	equ	0xFDA
 31902                           fsr2l	equ	0xFD9
 31903                           status	equ	0xFD8
 31904                           
 31905 ;; *************** function _LCD_WriteData *****************
 31906 ;; Defined at:
 31907 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31908 ;; Parameters:    Size  Location     Type
 31909 ;;  data            1    wreg     unsigned char 
 31910 ;; Auto vars:     Size  Location     Type
 31911 ;;  data            1   21[BANK0 ] unsigned char 
 31912 ;; Return value:  Size  Location     Type
 31913 ;;                  1    wreg      void 
 31914 ;; Registers used:
 31915 ;;		wreg, status,2, cstack
 31916 ;; Tracked objects:
 31917 ;;		On entry : F/0
 31918 ;;		On exit  : 0/0
 31919 ;;		Unchanged: 0/0
 31920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31924 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31925 ;;Total ram usage:        1 bytes
 31926 ;; Hardware stack levels used:    1
 31927 ;; Hardware stack levels required when called:    6
 31928 ;; This function calls:
 31929 ;;		_SPIPut2
 31930 ;; This function is called by:
 31931 ;;		_LCDUpdate
 31932 ;; This function uses a non-reentrant model
 31933 ;;
 31934                           
 31935                           	psect	text158
 31936  007710                     __ptext158:
 31937                           	opt stack 0
 31938  007710                     _LCD_WriteData:
 31939                           	opt stack 23
 31940                           
 31941                           ; BSR set to: 0
 31942                           ;incstack = 0
 31943                           ;LCD_WriteData@data stored from wreg
 31944  007710  6F75               	movwf	LCD_WriteData@data& (0+255),b
 31945                           
 31946                           ;lcd.c: 45: GIE=0;
 31947  007712  9EF2               	bcf	intcon,7,c	;volatile
 31948                           
 31949                           ;lcd.c: 46: LATDbits.LATD7 = 0;
 31950  007714  9E8C               	bcf	3980,7,c	;volatile
 31951                           
 31952                           ;lcd.c: 47: LATDbits.LATD3 = 1;
 31953  007716  868C               	bsf	3980,3,c	;volatile
 31954                           
 31955                           ;lcd.c: 49: SPIPut2(data);
 31956  007718  0100               	movlb	0	; () banked
 31957  00771A  5175               	movf	LCD_WriteData@data& (0+255),w,b
 31958  00771C  EC66  F03B         	call	_SPIPut2
 31959                           
 31960                           ;lcd.c: 51: LATDbits.LATD7 = 1;
 31961  007720  8E8C               	bsf	3980,7,c	;volatile
 31962                           
 31963                           ;lcd.c: 52: GIE=1;
 31964  007722  8EF2               	bsf	intcon,7,c	;volatile
 31965  007724  0012               	return		;funcret
 31966  007726                     __end_of_LCD_WriteData:
 31967                           	opt stack 0
 31968                           tblptru	equ	0xFF8
 31969                           tblptrh	equ	0xFF7
 31970                           tblptrl	equ	0xFF6
 31971                           tablat	equ	0xFF5
 31972                           prodh	equ	0xFF4
 31973                           prodl	equ	0xFF3
 31974                           intcon	equ	0xFF2
 31975                           intcon3	equ	0xFF0
 31976                           indf0	equ	0xFEF
 31977                           postinc0	equ	0xFEE
 31978                           plusw0	equ	0xFEB
 31979                           fsr0h	equ	0xFEA
 31980                           fsr0l	equ	0xFE9
 31981                           wreg	equ	0xFE8
 31982                           indf1	equ	0xFE7
 31983                           postinc1	equ	0xFE6
 31984                           postdec1	equ	0xFE5
 31985                           plusw1	equ	0xFE3
 31986                           fsr1h	equ	0xFE2
 31987                           fsr1l	equ	0xFE1
 31988                           indf2	equ	0xFDF
 31989                           postinc2	equ	0xFDE
 31990                           postdec2	equ	0xFDD
 31991                           plusw2	equ	0xFDB
 31992                           fsr2h	equ	0xFDA
 31993                           fsr2l	equ	0xFD9
 31994                           status	equ	0xFD8
 31995                           
 31996 ;; *************** function _LCDInit *****************
 31997 ;; Defined at:
 31998 ;;		line 55 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31999 ;; Parameters:    Size  Location     Type
 32000 ;;		None
 32001 ;; Auto vars:     Size  Location     Type
 32002 ;;		None
 32003 ;; Return value:  Size  Location     Type
 32004 ;;                  1    wreg      void 
 32005 ;; Registers used:
 32006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32007 ;; Tracked objects:
 32008 ;;		On entry : F/1
 32009 ;;		On exit  : F/0
 32010 ;;		Unchanged: 0/0
 32011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32016 ;;Total ram usage:        0 bytes
 32017 ;; Hardware stack levels used:    1
 32018 ;; Hardware stack levels required when called:    7
 32019 ;; This function calls:
 32020 ;;		_DelayMs
 32021 ;;		_LCD_WriteCmd
 32022 ;; This function is called by:
 32023 ;;		_LCDUpdate
 32024 ;; This function uses a non-reentrant model
 32025 ;;
 32026                           
 32027                           	psect	text159
 32028  004E6C                     __ptext159:
 32029                           	opt stack 0
 32030  004E6C                     _LCDInit:
 32031                           	opt stack 22
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;lcd.c: 57: LATEbits.LATE1 = 0;
 32035                           
 32036                           ;incstack = 0
 32037  004E6C  928D               	bcf	3981,1,c	;volatile
 32038                           
 32039                           ;lcd.c: 58: LATDbits.LATD7 = 1;
 32040  004E6E  8E8C               	bsf	3980,7,c	;volatile
 32041                           
 32042                           ;lcd.c: 59: LATDbits.LATD3 = 0;
 32043  004E70  968C               	bcf	3980,3,c	;volatile
 32044                           
 32045                           ;lcd.c: 60: LATEbits.LATE0 = 0;
 32046  004E72  908D               	bcf	3981,0,c	;volatile
 32047                           
 32048                           ;lcd.c: 61: TRISEbits.TRISE1 = 0;
 32049  004E74  9296               	bcf	3990,1,c	;volatile
 32050                           
 32051                           ;lcd.c: 62: TRISDbits.TRISD7 = 0;
 32052  004E76  9E95               	bcf	3989,7,c	;volatile
 32053                           
 32054                           ;lcd.c: 63: TRISDbits.TRISD3 = 0;
 32055  004E78  9695               	bcf	3989,3,c	;volatile
 32056                           
 32057                           ;lcd.c: 64: TRISEbits.TRISE0 = 0;
 32058  004E7A  9096               	bcf	3990,0,c	;volatile
 32059                           
 32060                           ;lcd.c: 66: LATEbits.LATE0 = 0;
 32061  004E7C  908D               	bcf	3981,0,c	;volatile
 32062                           
 32063                           ; BSR set to: 1
 32064                           ;lcd.c: 67: DelayMs(2);
 32065  004E7E  0E02               	movlw	2
 32066  004E80  0100               	movlb	0	; () banked
 32067  004E82  6F7B               	movwf	DelayMs@ms& (0+255),b
 32068  004E84  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32069  004E86  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32070  004E88  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32071  004E8A  EC4E  F02F         	call	_DelayMs	;wreg free
 32072                           
 32073                           ; BSR set to: 0
 32074                           ;lcd.c: 68: LATEbits.LATE0 = 1;
 32075  004E8E  808D               	bsf	3981,0,c	;volatile
 32076                           
 32077                           ;lcd.c: 69: DelayMs(2);
 32078  004E90  0E02               	movlw	2
 32079  004E92  6F7B               	movwf	DelayMs@ms& (0+255),b
 32080  004E94  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32081  004E96  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32082  004E98  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32083  004E9A  EC4E  F02F         	call	_DelayMs	;wreg free
 32084                           
 32085                           ; BSR set to: 0
 32086                           ;lcd.c: 70: LCD_WriteCmd(0x30);
 32087  004E9E  0E30               	movlw	48
 32088  004EA0  EC93  F03B         	call	_LCD_WriteCmd
 32089                           
 32090                           ;lcd.c: 71: DelayMs(2);
 32091  004EA4  0E02               	movlw	2
 32092  004EA6  0100               	movlb	0	; () banked
 32093  004EA8  6F7B               	movwf	DelayMs@ms& (0+255),b
 32094  004EAA  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32095  004EAC  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32096  004EAE  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32097  004EB0  EC4E  F02F         	call	_DelayMs	;wreg free
 32098                           
 32099                           ;lcd.c: 72: LCD_WriteCmd(0x30);
 32100  004EB4  0E30               	movlw	48
 32101  004EB6  EC93  F03B         	call	_LCD_WriteCmd
 32102                           
 32103                           ;lcd.c: 73: DelayMs(2);
 32104  004EBA  0E02               	movlw	2
 32105  004EBC  0100               	movlb	0	; () banked
 32106  004EBE  6F7B               	movwf	DelayMs@ms& (0+255),b
 32107  004EC0  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32108  004EC2  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32109  004EC4  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32110  004EC6  EC4E  F02F         	call	_DelayMs	;wreg free
 32111                           
 32112                           ; BSR set to: 0
 32113                           ;lcd.c: 74: LCD_WriteCmd(0x30);
 32114  004ECA  0E30               	movlw	48
 32115  004ECC  EC93  F03B         	call	_LCD_WriteCmd
 32116                           
 32117                           ;lcd.c: 75: DelayMs(2);
 32118  004ED0  0E02               	movlw	2
 32119  004ED2  0100               	movlb	0	; () banked
 32120  004ED4  6F7B               	movwf	DelayMs@ms& (0+255),b
 32121  004ED6  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32122  004ED8  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32123  004EDA  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32124  004EDC  EC4E  F02F         	call	_DelayMs	;wreg free
 32125                           
 32126                           ; BSR set to: 0
 32127                           ;lcd.c: 76: LCD_WriteCmd(0x39);
 32128  004EE0  0E39               	movlw	57
 32129  004EE2  EC93  F03B         	call	_LCD_WriteCmd
 32130                           
 32131                           ;lcd.c: 77: DelayMs(2);
 32132  004EE6  0E02               	movlw	2
 32133  004EE8  0100               	movlb	0	; () banked
 32134  004EEA  6F7B               	movwf	DelayMs@ms& (0+255),b
 32135  004EEC  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32136  004EEE  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32137  004EF0  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32138  004EF2  EC4E  F02F         	call	_DelayMs	;wreg free
 32139                           
 32140                           ;lcd.c: 78: LCD_WriteCmd(0x14);
 32141  004EF6  0E14               	movlw	20
 32142  004EF8  EC93  F03B         	call	_LCD_WriteCmd
 32143                           
 32144                           ;lcd.c: 79: DelayMs(2);
 32145  004EFC  0E02               	movlw	2
 32146  004EFE  0100               	movlb	0	; () banked
 32147  004F00  6F7B               	movwf	DelayMs@ms& (0+255),b
 32148  004F02  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32149  004F04  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32150  004F06  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32151  004F08  EC4E  F02F         	call	_DelayMs	;wreg free
 32152                           
 32153                           ; BSR set to: 0
 32154                           ;lcd.c: 80: LCD_WriteCmd(0x56);
 32155  004F0C  0E56               	movlw	86
 32156  004F0E  EC93  F03B         	call	_LCD_WriteCmd
 32157                           
 32158                           ;lcd.c: 81: DelayMs(2);
 32159  004F12  0E02               	movlw	2
 32160  004F14  0100               	movlb	0	; () banked
 32161  004F16  6F7B               	movwf	DelayMs@ms& (0+255),b
 32162  004F18  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32163  004F1A  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32164  004F1C  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32165  004F1E  EC4E  F02F         	call	_DelayMs	;wreg free
 32166                           
 32167                           ; BSR set to: 0
 32168                           ;lcd.c: 82: LCD_WriteCmd(0x6D);
 32169  004F22  0E6D               	movlw	109
 32170  004F24  EC93  F03B         	call	_LCD_WriteCmd
 32171                           
 32172                           ;lcd.c: 83: DelayMs(2);
 32173  004F28  0E02               	movlw	2
 32174  004F2A  0100               	movlb	0	; () banked
 32175  004F2C  6F7B               	movwf	DelayMs@ms& (0+255),b
 32176  004F2E  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32177  004F30  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32178  004F32  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32179  004F34  EC4E  F02F         	call	_DelayMs	;wreg free
 32180                           
 32181                           ;lcd.c: 85: LCD_WriteCmd(0x70);
 32182  004F38  0E70               	movlw	112
 32183  004F3A  EC93  F03B         	call	_LCD_WriteCmd
 32184                           
 32185                           ;lcd.c: 86: DelayMs(2);
 32186  004F3E  0E02               	movlw	2
 32187  004F40  0100               	movlb	0	; () banked
 32188  004F42  6F7B               	movwf	DelayMs@ms& (0+255),b
 32189  004F44  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32190  004F46  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32191  004F48  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32192  004F4A  EC4E  F02F         	call	_DelayMs	;wreg free
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;lcd.c: 87: LCD_WriteCmd(0x0E);
 32196  004F4E  0E0E               	movlw	14
 32197  004F50  EC93  F03B         	call	_LCD_WriteCmd
 32198                           
 32199                           ;lcd.c: 88: DelayMs(2);
 32200  004F54  0E02               	movlw	2
 32201  004F56  0100               	movlb	0	; () banked
 32202  004F58  6F7B               	movwf	DelayMs@ms& (0+255),b
 32203  004F5A  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32204  004F5C  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32205  004F5E  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32206  004F60  EC4E  F02F         	call	_DelayMs	;wreg free
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;lcd.c: 89: LCD_WriteCmd(0x06);
 32210  004F64  0E06               	movlw	6
 32211  004F66  EC93  F03B         	call	_LCD_WriteCmd
 32212                           
 32213                           ;lcd.c: 90: DelayMs(2);
 32214  004F6A  0E02               	movlw	2
 32215  004F6C  0100               	movlb	0	; () banked
 32216  004F6E  6F7B               	movwf	DelayMs@ms& (0+255),b
 32217  004F70  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32218  004F72  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32219  004F74  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32220  004F76  EC4E  F02F         	call	_DelayMs	;wreg free
 32221                           
 32222                           ;lcd.c: 91: LCD_WriteCmd(0x01);
 32223  004F7A  0E01               	movlw	1
 32224  004F7C  EC93  F03B         	call	_LCD_WriteCmd
 32225                           
 32226                           ;lcd.c: 92: DelayMs(10);
 32227  004F80  0E0A               	movlw	10
 32228  004F82  0100               	movlb	0	; () banked
 32229  004F84  6F7B               	movwf	DelayMs@ms& (0+255),b
 32230  004F86  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 32231  004F88  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 32232  004F8A  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 32233  004F8C  EF4E  F02F         	goto	_DelayMs	;wreg free
 32234  004F90                     __end_of_LCDInit:
 32235                           	opt stack 0
 32236                           tblptru	equ	0xFF8
 32237                           tblptrh	equ	0xFF7
 32238                           tblptrl	equ	0xFF6
 32239                           tablat	equ	0xFF5
 32240                           prodh	equ	0xFF4
 32241                           prodl	equ	0xFF3
 32242                           intcon	equ	0xFF2
 32243                           intcon3	equ	0xFF0
 32244                           indf0	equ	0xFEF
 32245                           postinc0	equ	0xFEE
 32246                           plusw0	equ	0xFEB
 32247                           fsr0h	equ	0xFEA
 32248                           fsr0l	equ	0xFE9
 32249                           wreg	equ	0xFE8
 32250                           indf1	equ	0xFE7
 32251                           postinc1	equ	0xFE6
 32252                           postdec1	equ	0xFE5
 32253                           plusw1	equ	0xFE3
 32254                           fsr1h	equ	0xFE2
 32255                           fsr1l	equ	0xFE1
 32256                           indf2	equ	0xFDF
 32257                           postinc2	equ	0xFDE
 32258                           postdec2	equ	0xFDD
 32259                           plusw2	equ	0xFDB
 32260                           fsr2h	equ	0xFDA
 32261                           fsr2l	equ	0xFD9
 32262                           status	equ	0xFD8
 32263                           
 32264 ;; *************** function _LCD_WriteCmd *****************
 32265 ;; Defined at:
 32266 ;;		line 31 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 32267 ;; Parameters:    Size  Location     Type
 32268 ;;  data            1    wreg     unsigned char 
 32269 ;; Auto vars:     Size  Location     Type
 32270 ;;  data            1   21[BANK0 ] unsigned char 
 32271 ;; Return value:  Size  Location     Type
 32272 ;;                  1    wreg      void 
 32273 ;; Registers used:
 32274 ;;		wreg, status,2, cstack
 32275 ;; Tracked objects:
 32276 ;;		On entry : E/1
 32277 ;;		On exit  : 0/0
 32278 ;;		Unchanged: 0/0
 32279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32283 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32284 ;;Total ram usage:        1 bytes
 32285 ;; Hardware stack levels used:    1
 32286 ;; Hardware stack levels required when called:    6
 32287 ;; This function calls:
 32288 ;;		_SPIPut2
 32289 ;; This function is called by:
 32290 ;;		_LCDInit
 32291 ;;		_LCDUpdate
 32292 ;; This function uses a non-reentrant model
 32293 ;;
 32294                           
 32295                           	psect	text160
 32296  007726                     __ptext160:
 32297                           	opt stack 0
 32298  007726                     _LCD_WriteCmd:
 32299                           	opt stack 23
 32300                           
 32301                           ; BSR set to: 0
 32302                           ;incstack = 0
 32303                           ;LCD_WriteCmd@data stored from wreg
 32304  007726  0100               	movlb	0	; () banked
 32305  007728  6F75               	movwf	LCD_WriteCmd@data& (0+255),b
 32306                           
 32307                           ;lcd.c: 33: GIE=0;
 32308  00772A  9EF2               	bcf	intcon,7,c	;volatile
 32309                           
 32310                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 32311  00772C  9E8C               	bcf	3980,7,c	;volatile
 32312                           
 32313                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 32314  00772E  968C               	bcf	3980,3,c	;volatile
 32315                           
 32316                           ;lcd.c: 37: SPIPut2(data);
 32317  007730  5175               	movf	LCD_WriteCmd@data& (0+255),w,b
 32318  007732  EC66  F03B         	call	_SPIPut2
 32319                           
 32320                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 32321  007736  8E8C               	bsf	3980,7,c	;volatile
 32322                           
 32323                           ;lcd.c: 40: GIE=1;
 32324  007738  8EF2               	bsf	intcon,7,c	;volatile
 32325  00773A  0012               	return		;funcret
 32326  00773C                     __end_of_LCD_WriteCmd:
 32327                           	opt stack 0
 32328                           tblptru	equ	0xFF8
 32329                           tblptrh	equ	0xFF7
 32330                           tblptrl	equ	0xFF6
 32331                           tablat	equ	0xFF5
 32332                           prodh	equ	0xFF4
 32333                           prodl	equ	0xFF3
 32334                           intcon	equ	0xFF2
 32335                           intcon3	equ	0xFF0
 32336                           indf0	equ	0xFEF
 32337                           postinc0	equ	0xFEE
 32338                           plusw0	equ	0xFEB
 32339                           fsr0h	equ	0xFEA
 32340                           fsr0l	equ	0xFE9
 32341                           wreg	equ	0xFE8
 32342                           indf1	equ	0xFE7
 32343                           postinc1	equ	0xFE6
 32344                           postdec1	equ	0xFE5
 32345                           plusw1	equ	0xFE3
 32346                           fsr1h	equ	0xFE2
 32347                           fsr1l	equ	0xFE1
 32348                           indf2	equ	0xFDF
 32349                           postinc2	equ	0xFDE
 32350                           postdec2	equ	0xFDD
 32351                           plusw2	equ	0xFDB
 32352                           fsr2h	equ	0xFDA
 32353                           fsr2l	equ	0xFD9
 32354                           status	equ	0xFD8
 32355                           
 32356 ;; *************** function _SPIPut2 *****************
 32357 ;; Defined at:
 32358 ;;		line 332 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 32359 ;; Parameters:    Size  Location     Type
 32360 ;;  v               1    wreg     unsigned char 
 32361 ;; Auto vars:     Size  Location     Type
 32362 ;;  v               1   19[BANK0 ] unsigned char 
 32363 ;;  i               1   20[BANK0 ] volatile unsigned char 
 32364 ;; Return value:  Size  Location     Type
 32365 ;;                  1    wreg      void 
 32366 ;; Registers used:
 32367 ;;		wreg
 32368 ;; Tracked objects:
 32369 ;;		On entry : F/0
 32370 ;;		On exit  : 0/0
 32371 ;;		Unchanged: 0/0
 32372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32377 ;;Total ram usage:        2 bytes
 32378 ;; Hardware stack levels used:    1
 32379 ;; Hardware stack levels required when called:    5
 32380 ;; This function calls:
 32381 ;;		Nothing
 32382 ;; This function is called by:
 32383 ;;		_LCD_WriteCmd
 32384 ;;		_LCD_WriteData
 32385 ;;		_SPIGet2
 32386 ;;		_EEPROMRead
 32387 ;; This function uses a non-reentrant model
 32388 ;;
 32389                           
 32390                           	psect	text161
 32391  0076CC                     __ptext161:
 32392                           	opt stack 0
 32393  0076CC                     _SPIPut2:
 32394                           	opt stack 23
 32395                           
 32396                           ;incstack = 0
 32397                           ;SPIPut2@v stored from wreg
 32398  0076CC  6F73               	movwf	SPIPut2@v& (0+255),b
 32399                           
 32400                           ;spi.c: 334: volatile uint8_t i;
 32401                           ;spi.c: 354: PIR3bits.SSP2IF = 0;
 32402  0076CE  9EA4               	bcf	4004,7,c	;volatile
 32403                           
 32404                           ;spi.c: 355: i = SSP2BUF;
 32405  0076D0  CF75 F074          	movff	3957,SPIPut2@i	;volatile
 32406  0076D4                     l438:
 32407                           
 32408                           ;spi.c: 357: {
 32409                           ;spi.c: 358: SSP2CON1bits.WCOL = 0;
 32410  0076D4  9E72               	bcf	3954,7,c	;volatile
 32411                           
 32412                           ;spi.c: 359: SSP2BUF = v;
 32413  0076D6  C073  FF75         	movff	SPIPut2@v,3957	;volatile
 32414                           
 32415                           ;spi.c: 360: } while( SSP2CON1bits.WCOL );
 32416  0076DA  BE72               	btfsc	3954,7,c	;volatile
 32417  0076DC  D7FB               	goto	l438
 32418  0076DE                     l440:
 32419  0076DE  BEA4               	btfsc	4004,7,c	;volatile
 32420  0076E0  0012               	return		;funcret
 32421  0076E2  D7FD               	goto	l440
 32422  0076E4                     __end_of_SPIPut2:
 32423                           	opt stack 0
 32424                           tblptru	equ	0xFF8
 32425                           tblptrh	equ	0xFF7
 32426                           tblptrl	equ	0xFF6
 32427                           tablat	equ	0xFF5
 32428                           prodh	equ	0xFF4
 32429                           prodl	equ	0xFF3
 32430                           intcon	equ	0xFF2
 32431                           intcon3	equ	0xFF0
 32432                           indf0	equ	0xFEF
 32433                           postinc0	equ	0xFEE
 32434                           plusw0	equ	0xFEB
 32435                           fsr0h	equ	0xFEA
 32436                           fsr0l	equ	0xFE9
 32437                           wreg	equ	0xFE8
 32438                           indf1	equ	0xFE7
 32439                           postinc1	equ	0xFE6
 32440                           postdec1	equ	0xFE5
 32441                           plusw1	equ	0xFE3
 32442                           fsr1h	equ	0xFE2
 32443                           fsr1l	equ	0xFE1
 32444                           indf2	equ	0xFDF
 32445                           postinc2	equ	0xFDE
 32446                           postdec2	equ	0xFDD
 32447                           plusw2	equ	0xFDB
 32448                           fsr2h	equ	0xFDA
 32449                           fsr2l	equ	0xFD9
 32450                           status	equ	0xFD8
 32451                           
 32452 ;; *************** function _DelayMs *****************
 32453 ;; Defined at:
 32454 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 32455 ;; Parameters:    Size  Location     Type
 32456 ;;  ms              4   27[BANK0 ] unsigned long 
 32457 ;; Auto vars:     Size  Location     Type
 32458 ;;		None
 32459 ;; Return value:  Size  Location     Type
 32460 ;;                  1    wreg      void 
 32461 ;; Registers used:
 32462 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32463 ;; Tracked objects:
 32464 ;;		On entry : F/0
 32465 ;;		On exit  : F/0
 32466 ;;		Unchanged: 0/0
 32467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32470 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32471 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32472 ;;Total ram usage:       12 bytes
 32473 ;; Hardware stack levels used:    1
 32474 ;; Hardware stack levels required when called:    6
 32475 ;; This function calls:
 32476 ;;		_DelayUS
 32477 ;; This function is called by:
 32478 ;;		_TxPacket
 32479 ;;		_MiMAC_Init
 32480 ;;		_MiMAC_PowerState
 32481 ;;		_LCDInit
 32482 ;; This function uses a non-reentrant model
 32483 ;;
 32484                           
 32485                           	psect	text162
 32486  005E9C                     __ptext162:
 32487                           	opt stack 0
 32488  005E9C                     _DelayMs:
 32489                           	opt stack 16
 32490                           
 32491                           ; BSR set to: 0
 32492                           ;delay.c: 36: DelayUS(ms*1000);
 32493                           
 32494                           ;incstack = 0
 32495  005E9C  C07B  F07F         	movff	DelayMs@ms,??_DelayMs
 32496  005EA0  C07C  F080         	movff	DelayMs@ms+1,??_DelayMs+1
 32497  005EA4  C07D  F081         	movff	DelayMs@ms+2,??_DelayMs+2
 32498  005EA8  C07E  F082         	movff	DelayMs@ms+3,??_DelayMs+3
 32499  005EAC  0EE8               	movlw	232
 32500  005EAE  037F               	mulwf	??_DelayMs& (0+255),b
 32501  005EB0  CFF3 F083          	movff	prodl,??_DelayMs+4
 32502  005EB4  CFF4 F084          	movff	prodh,??_DelayMs+5
 32503  005EB8  6B85               	clrf	(??_DelayMs+6)& (0+255),b
 32504  005EBA  6B86               	clrf	(??_DelayMs+7)& (0+255),b
 32505  005EBC  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 32506  005EBE  50F3               	movf	prodl,w,c
 32507  005EC0  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 32508  005EC2  50F4               	movf	prodh,w,c
 32509  005EC4  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 32510  005EC6  0E00               	movlw	0
 32511  005EC8  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 32512  005ECA  0E03               	movlw	3
 32513  005ECC  037F               	mulwf	??_DelayMs& (0+255),b
 32514  005ECE  50F3               	movf	prodl,w,c
 32515  005ED0  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 32516  005ED2  50F4               	movf	prodh,w,c
 32517  005ED4  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 32518  005ED6  0E00               	movlw	0
 32519  005ED8  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 32520  005EDA  0EE8               	movlw	232
 32521  005EDC  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 32522  005EDE  50F3               	movf	prodl,w,c
 32523  005EE0  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 32524  005EE2  50F4               	movf	prodh,w,c
 32525  005EE4  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 32526  005EE6  0E03               	movlw	3
 32527  005EE8  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 32528  005EEA  50F3               	movf	prodl,w,c
 32529  005EEC  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 32530  005EEE  50F4               	movf	prodh,w,c
 32531  005EF0  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 32532  005EF2  0E00               	movlw	0
 32533  005EF4  037F               	mulwf	??_DelayMs& (0+255),b
 32534  005EF6  50F3               	movf	prodl,w,c
 32535  005EF8  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 32536  005EFA  50F4               	movf	prodh,w,c
 32537  005EFC  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 32538  005EFE  0EE8               	movlw	232
 32539  005F00  0382               	mulwf	(??_DelayMs+3)& (0+255),b
 32540  005F02  50F3               	movf	prodl,w,c
 32541  005F04  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 32542  005F06  0E03               	movlw	3
 32543  005F08  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 32544  005F0A  50F3               	movf	prodl,w,c
 32545  005F0C  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 32546  005F0E  0E00               	movlw	0
 32547  005F10  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 32548  005F12  50F3               	movf	prodl,w,c
 32549  005F14  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 32550  005F16  0E00               	movlw	0
 32551  005F18  037F               	mulwf	??_DelayMs& (0+255),b
 32552  005F1A  50F3               	movf	prodl,w,c
 32553  005F1C  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 32554  005F1E  C083  F073         	movff	??_DelayMs+4,DelayUS@delay
 32555  005F22  C084  F074         	movff	??_DelayMs+5,DelayUS@delay+1
 32556  005F26  C085  F075         	movff	??_DelayMs+6,DelayUS@delay+2
 32557  005F2A  C086  F076         	movff	??_DelayMs+7,DelayUS@delay+3
 32558  005F2E  EF20  F03A         	goto	_DelayUS	;wreg free
 32559  005F32                     __end_of_DelayMs:
 32560                           	opt stack 0
 32561                           tblptru	equ	0xFF8
 32562                           tblptrh	equ	0xFF7
 32563                           tblptrl	equ	0xFF6
 32564                           tablat	equ	0xFF5
 32565                           prodh	equ	0xFF4
 32566                           prodl	equ	0xFF3
 32567                           intcon	equ	0xFF2
 32568                           intcon3	equ	0xFF0
 32569                           indf0	equ	0xFEF
 32570                           postinc0	equ	0xFEE
 32571                           plusw0	equ	0xFEB
 32572                           fsr0h	equ	0xFEA
 32573                           fsr0l	equ	0xFE9
 32574                           wreg	equ	0xFE8
 32575                           indf1	equ	0xFE7
 32576                           postinc1	equ	0xFE6
 32577                           postdec1	equ	0xFE5
 32578                           plusw1	equ	0xFE3
 32579                           fsr1h	equ	0xFE2
 32580                           fsr1l	equ	0xFE1
 32581                           indf2	equ	0xFDF
 32582                           postinc2	equ	0xFDE
 32583                           postdec2	equ	0xFDD
 32584                           plusw2	equ	0xFDB
 32585                           fsr2h	equ	0xFDA
 32586                           fsr2l	equ	0xFD9
 32587                           status	equ	0xFD8
 32588                           
 32589 ;; *************** function _DelayUS *****************
 32590 ;; Defined at:
 32591 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 32592 ;; Parameters:    Size  Location     Type
 32593 ;;  delay           4   19[BANK0 ] unsigned long 
 32594 ;; Auto vars:     Size  Location     Type
 32595 ;;  i               4   23[BANK0 ] unsigned long 
 32596 ;; Return value:  Size  Location     Type
 32597 ;;                  1    wreg      void 
 32598 ;; Registers used:
 32599 ;;		wreg, status,2, status,0
 32600 ;; Tracked objects:
 32601 ;;		On entry : F/0
 32602 ;;		On exit  : F/0
 32603 ;;		Unchanged: 0/0
 32604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32606 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32608 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32609 ;;Total ram usage:        8 bytes
 32610 ;; Hardware stack levels used:    1
 32611 ;; Hardware stack levels required when called:    5
 32612 ;; This function calls:
 32613 ;;		Nothing
 32614 ;; This function is called by:
 32615 ;;		_DelayMs
 32616 ;;		_LCDUpdate
 32617 ;; This function uses a non-reentrant model
 32618 ;;
 32619                           
 32620                           	psect	text163
 32621  007440                     __ptext163:
 32622                           	opt stack 0
 32623  007440                     _DelayUS:
 32624                           	opt stack 16
 32625                           
 32626                           ; BSR set to: 0
 32627                           ;delay.c: 25: uint32_t i;
 32628                           ;delay.c: 27: for(i=0;i<delay;i++)
 32629                           
 32630                           ; BSR set to: 0
 32631                           ;incstack = 0
 32632  007440  6B77               	clrf	DelayUS@i& (0+255),b
 32633  007442  6B78               	clrf	(DelayUS@i+1)& (0+255),b
 32634  007444  6B79               	clrf	(DelayUS@i+2)& (0+255),b
 32635  007446  6B7A               	clrf	(DelayUS@i+3)& (0+255),b
 32636  007448  D007               	goto	l354
 32637  00744A                     l355:
 32638                           
 32639                           ; BSR set to: 0
 32640                           ;delay.c: 28: {
 32641                           ;delay.c: 29: __nop();
 32642  00744A  F000               	nop	
 32643  00744C  0100               	movlb	0	; () banked
 32644  00744E  2B77               	incf	DelayUS@i& (0+255),f,b
 32645  007450  0E00               	movlw	0
 32646  007452  2378               	addwfc	(DelayUS@i+1)& (0+255),f,b
 32647  007454  2379               	addwfc	(DelayUS@i+2)& (0+255),f,b
 32648  007456  237A               	addwfc	(DelayUS@i+3)& (0+255),f,b
 32649  007458                     l354:
 32650                           
 32651                           ; BSR set to: 0
 32652  007458  5173               	movf	DelayUS@delay& (0+255),w,b
 32653  00745A  5D77               	subwf	DelayUS@i& (0+255),w,b
 32654  00745C  5174               	movf	(DelayUS@delay+1)& (0+255),w,b
 32655  00745E  5978               	subwfb	(DelayUS@i+1)& (0+255),w,b
 32656  007460  5175               	movf	(DelayUS@delay+2)& (0+255),w,b
 32657  007462  5979               	subwfb	(DelayUS@i+2)& (0+255),w,b
 32658  007464  5176               	movf	(DelayUS@delay+3)& (0+255),w,b
 32659  007466  597A               	subwfb	(DelayUS@i+3)& (0+255),w,b
 32660  007468  E3F0               	bnc	l355
 32661                           
 32662                           ; BSR set to: 0
 32663  00746A  0012               	return		;funcret
 32664  00746C                     __end_of_DelayUS:
 32665                           	opt stack 0
 32666                           tblptru	equ	0xFF8
 32667                           tblptrh	equ	0xFF7
 32668                           tblptrl	equ	0xFF6
 32669                           tablat	equ	0xFF5
 32670                           prodh	equ	0xFF4
 32671                           prodl	equ	0xFF3
 32672                           intcon	equ	0xFF2
 32673                           intcon3	equ	0xFF0
 32674                           indf0	equ	0xFEF
 32675                           postinc0	equ	0xFEE
 32676                           plusw0	equ	0xFEB
 32677                           fsr0h	equ	0xFEA
 32678                           fsr0l	equ	0xFE9
 32679                           wreg	equ	0xFE8
 32680                           indf1	equ	0xFE7
 32681                           postinc1	equ	0xFE6
 32682                           postdec1	equ	0xFE5
 32683                           plusw1	equ	0xFE3
 32684                           fsr1h	equ	0xFE2
 32685                           fsr1l	equ	0xFE1
 32686                           indf2	equ	0xFDF
 32687                           postinc2	equ	0xFDE
 32688                           postdec2	equ	0xFDD
 32689                           plusw2	equ	0xFDB
 32690                           fsr2h	equ	0xFDA
 32691                           fsr2l	equ	0xFD9
 32692                           status	equ	0xFD8
 32693                           
 32694 ;; *************** function _InitSymbolTimer *****************
 32695 ;; Defined at:
 32696 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32697 ;; Parameters:    Size  Location     Type
 32698 ;;		None
 32699 ;; Auto vars:     Size  Location     Type
 32700 ;;		None
 32701 ;; Return value:  Size  Location     Type
 32702 ;;                  1    wreg      void 
 32703 ;; Registers used:
 32704 ;;		None
 32705 ;; Tracked objects:
 32706 ;;		On entry : F/E
 32707 ;;		On exit  : F/1
 32708 ;;		Unchanged: 0/0
 32709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32714 ;;Total ram usage:        0 bytes
 32715 ;; Hardware stack levels used:    1
 32716 ;; Hardware stack levels required when called:    5
 32717 ;; This function calls:
 32718 ;;		Nothing
 32719 ;; This function is called by:
 32720 ;;		_main
 32721 ;; This function uses a non-reentrant model
 32722 ;;
 32723                           
 32724                           	psect	text164
 32725  00773C                     __ptext164:
 32726                           	opt stack 0
 32727  00773C                     _InitSymbolTimer:
 32728                           	opt stack 25
 32729                           
 32730                           ; BSR set to: 14
 32731                           ;symbol.c: 103: T0CON = 0x00;
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;incstack = 0
 32735  00773C  6AD5               	clrf	4053,c	;volatile
 32736                           
 32737                           ;symbol.c: 104: INTCON2bits.TMR0IP = 1;
 32738  00773E  84F1               	bsf	intcon2,2,c	;volatile
 32739                           
 32740                           ;symbol.c: 105: INTCONbits.TMR0IF = 0;
 32741  007740  94F2               	bcf	intcon,2,c	;volatile
 32742                           
 32743                           ;symbol.c: 106: INTCONbits.TMR0IE = 1;
 32744  007742  8AF2               	bsf	intcon,5,c	;volatile
 32745                           
 32746                           ;symbol.c: 107: T0CONbits.TMR0ON = 1;
 32747  007744  8ED5               	bsf	4053,7,c	;volatile
 32748                           
 32749                           ;symbol.c: 109: t1extension=0;
 32750  007746  0101               	movlb	1	; () banked
 32751  007748  6BC2               	clrf	_t1extension& (0+255),b
 32752  00774A  6BC3               	clrf	(_t1extension+1)& (0+255),b
 32753  00774C  6BC4               	clrf	(_t1extension+2)& (0+255),b
 32754  00774E  6BC5               	clrf	(_t1extension+3)& (0+255),b
 32755                           
 32756                           ; BSR set to: 1
 32757  007750  0012               	return		;funcret
 32758  007752                     __end_of_InitSymbolTimer:
 32759                           	opt stack 0
 32760                           tblptru	equ	0xFF8
 32761                           tblptrh	equ	0xFF7
 32762                           tblptrl	equ	0xFF6
 32763                           tablat	equ	0xFF5
 32764                           prodh	equ	0xFF4
 32765                           prodl	equ	0xFF3
 32766                           intcon	equ	0xFF2
 32767                           intcon2	equ	0xFF1
 32768                           intcon3	equ	0xFF0
 32769                           indf0	equ	0xFEF
 32770                           postinc0	equ	0xFEE
 32771                           plusw0	equ	0xFEB
 32772                           fsr0h	equ	0xFEA
 32773                           fsr0l	equ	0xFE9
 32774                           wreg	equ	0xFE8
 32775                           indf1	equ	0xFE7
 32776                           postinc1	equ	0xFE6
 32777                           postdec1	equ	0xFE5
 32778                           plusw1	equ	0xFE3
 32779                           fsr1h	equ	0xFE2
 32780                           fsr1l	equ	0xFE1
 32781                           indf2	equ	0xFDF
 32782                           postinc2	equ	0xFDE
 32783                           postdec2	equ	0xFDD
 32784                           plusw2	equ	0xFDB
 32785                           fsr2h	equ	0xFDA
 32786                           fsr2l	equ	0xFD9
 32787                           status	equ	0xFD8
 32788                           
 32789 ;; *************** function _HardwareInit *****************
 32790 ;; Defined at:
 32791 ;;		line 235 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 32792 ;; Parameters:    Size  Location     Type
 32793 ;;		None
 32794 ;; Auto vars:     Size  Location     Type
 32795 ;;		None
 32796 ;; Return value:  Size  Location     Type
 32797 ;;                  1    wreg      void 
 32798 ;; Registers used:
 32799 ;;		wreg, status,2
 32800 ;; Tracked objects:
 32801 ;;		On entry : F/2
 32802 ;;		On exit  : F/E
 32803 ;;		Unchanged: 0/0
 32804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32809 ;;Total ram usage:        0 bytes
 32810 ;; Hardware stack levels used:    1
 32811 ;; Hardware stack levels required when called:    5
 32812 ;; This function calls:
 32813 ;;		Nothing
 32814 ;; This function is called by:
 32815 ;;		_main
 32816 ;; This function uses a non-reentrant model
 32817 ;;
 32818                           
 32819                           	psect	text165
 32820  005AB0                     __ptext165:
 32821                           	opt stack 0
 32822  005AB0                     _HardwareInit:
 32823                           	opt stack 25
 32824                           
 32825                           ; BSR set to: 2
 32826                           ;system.c: 240: OSCCON = 0x78;
 32827                           
 32828                           ; BSR set to: 1
 32829                           ;incstack = 0
 32830  005AB0  0E78               	movlw	120
 32831  005AB2  6ED3               	movwf	4051,c	;volatile
 32832                           
 32833                           ; BSR set to: 2
 32834                           ;system.c: 241: OSCTUNEbits.PLLEN = 1;
 32835  005AB4  8C9B               	bsf	3995,6,c	;volatile
 32836                           
 32837                           ; BSR set to: 2
 32838                           ;system.c: 242: WDTCONbits.SWDTEN = 0;
 32839  005AB6  90C0               	bcf	4032,0,c	;volatile
 32840                           
 32841                           ;system.c: 248: EECON2 = 0x55;
 32842  005AB8  0E55               	movlw	85
 32843  005ABA  6EA7               	movwf	4007,c	;volatile
 32844                           
 32845                           ;system.c: 249: EECON2 = 0xAA;
 32846  005ABC  0EAA               	movlw	170
 32847  005ABE  6EA7               	movwf	4007,c	;volatile
 32848                           
 32849                           ; BSR set to: 2
 32850                           ;system.c: 250: PPSCONbits.IOLOCK = 0;
 32851  005AC0  010E               	movlb	14	; () banked
 32852  005AC2  91FF               	bcf	255,0,b	;volatile
 32853                           
 32854                           ;system.c: 252: RPINR1 = 17;
 32855  005AC4  0E11               	movlw	17
 32856  005AC6  6FE7               	movwf	231,b	;volatile
 32857                           
 32858                           ;system.c: 253: RPINR21 = 23;
 32859  005AC8  0E17               	movlw	23
 32860  005ACA  6FFB               	movwf	251,b	;volatile
 32861                           
 32862                           ;system.c: 254: RPOR21 = 10;
 32863  005ACC  0E0A               	movlw	10
 32864  005ACE  6FDB               	movwf	219,b	;volatile
 32865                           
 32866                           ;system.c: 255: RPOR19 = 9;
 32867  005AD0  0E09               	movlw	9
 32868  005AD2  6FD9               	movwf	217,b	;volatile
 32869                           
 32870                           ;system.c: 258: EECON2 = 0x55;
 32871  005AD4  0E55               	movlw	85
 32872  005AD6  6EA7               	movwf	4007,c	;volatile
 32873                           
 32874                           ;system.c: 259: EECON2 = 0xAA;
 32875  005AD8  0EAA               	movlw	170
 32876  005ADA  6EA7               	movwf	4007,c	;volatile
 32877                           
 32878                           ; BSR set to: 14
 32879                           ;system.c: 260: PPSCONbits.IOLOCK = 1;
 32880  005ADC  81FF               	bsf	255,0,b	;volatile
 32881                           
 32882                           ;system.c: 265: ANCON0 = 0xFC;
 32883  005ADE  0EFC               	movlw	252
 32884  005AE0  010F               	movlb	15	; () banked
 32885  005AE2  6F48               	movwf	72,b	;volatile
 32886                           
 32887                           ;system.c: 266: ANCON1 = 0x1F;
 32888  005AE4  0E1F               	movlw	31
 32889  005AE6  6F49               	movwf	73,b	;volatile
 32890                           
 32891                           ; BSR set to: 15
 32892                           ;system.c: 271: TRISCbits.TRISC2=0;
 32893  005AE8  9494               	bcf	3988,2,c	;volatile
 32894                           
 32895                           ; BSR set to: 15
 32896                           ;system.c: 272: TRISAbits.TRISA6=0;
 32897  005AEA  9C92               	bcf	3986,6,c	;volatile
 32898                           
 32899                           ; BSR set to: 15
 32900                           ;system.c: 273: TRISAbits.TRISA7=0;
 32901  005AEC  9E92               	bcf	3986,7,c	;volatile
 32902                           
 32903                           ; BSR set to: 15
 32904                           ;system.c: 284: INTCON2bits.RBPU = 0;
 32905  005AEE  9EF1               	bcf	intcon2,7,c	;volatile
 32906                           
 32907                           ; BSR set to: 15
 32908                           ;system.c: 289: TRISAbits.TRISA1 = 1;
 32909  005AF0  8292               	bsf	3986,1,c	;volatile
 32910                           
 32911                           ; BSR set to: 15
 32912                           ;system.c: 290: TRISAbits.TRISA0 = 1;
 32913  005AF2  8092               	bsf	3986,0,c	;volatile
 32914                           
 32915                           ; BSR set to: 15
 32916                           ;system.c: 328: LATAbits.LATA5 = 1;
 32917  005AF4  8A89               	bsf	3977,5,c	;volatile
 32918                           
 32919                           ; BSR set to: 15
 32920                           ;system.c: 329: LATDbits.LATD1 = 1;
 32921  005AF6  828C               	bsf	3980,1,c	;volatile
 32922                           
 32923                           ; BSR set to: 15
 32924                           ;system.c: 331: TRISAbits.TRISA5 = 0;
 32925  005AF8  9A92               	bcf	3986,5,c	;volatile
 32926                           
 32927                           ; BSR set to: 15
 32928                           ;system.c: 332: TRISDbits.TRISD1 = 0;
 32929  005AFA  9295               	bcf	3989,1,c	;volatile
 32930                           
 32931                           ; BSR set to: 15
 32932                           ;system.c: 334: TRISBbits.TRISB0 = 1;
 32933  005AFC  8093               	bsf	3987,0,c	;volatile
 32934                           
 32935                           ; BSR set to: 15
 32936                           ;system.c: 335: TRISCbits.TRISC6 = 1;
 32937  005AFE  8C94               	bsf	3988,6,c	;volatile
 32938                           
 32939                           ; BSR set to: 15
 32940                           ;system.c: 338: INTCON2bits.INTEDG1 = 1;
 32941  005B00  8AF1               	bsf	intcon2,5,c	;volatile
 32942                           
 32943                           ; BSR set to: 15
 32944                           ;system.c: 341: INTCON2bits.INTEDG0 = 1;
 32945  005B02  8CF1               	bsf	intcon2,6,c	;volatile
 32946                           
 32947                           ; BSR set to: 15
 32948                           ;system.c: 343: INTCONbits.INT0IF = 0;
 32949  005B04  92F2               	bcf	intcon,1,c	;volatile
 32950                           
 32951                           ; BSR set to: 15
 32952                           ;system.c: 344: INTCONbits.INT0IE = 1;
 32953  005B06  88F2               	bsf	intcon,4,c	;volatile
 32954                           
 32955                           ; BSR set to: 15
 32956                           ;system.c: 345: INTCON3bits.INT1IF = 0;
 32957  005B08  90F0               	bcf	intcon3,0,c	;volatile
 32958                           
 32959                           ; BSR set to: 15
 32960                           ;system.c: 346: INTCON3bits.INT1IE = 1;
 32961  005B0A  86F0               	bsf	intcon3,3,c	;volatile
 32962                           
 32963                           ; BSR set to: 15
 32964                           ;system.c: 350: TRISBbits.TRISB5 = 1;
 32965  005B0C  8A93               	bsf	3987,5,c	;volatile
 32966                           
 32967                           ; BSR set to: 15
 32968                           ;system.c: 351: TRISCbits.TRISC7 = 0;
 32969  005B0E  9E94               	bcf	3988,7,c	;volatile
 32970                           
 32971                           ; BSR set to: 15
 32972                           ;system.c: 352: TRISBbits.TRISB4 = 0;
 32973  005B10  9893               	bcf	3987,4,c	;volatile
 32974                           
 32975                           ;system.c: 354: SSP1STAT = 0xC0;
 32976  005B12  0EC0               	movlw	192
 32977  005B14  6EC7               	movwf	4039,c	;volatile
 32978                           
 32979                           ;system.c: 355: SSP1CON1 = 0x22;
 32980  005B16  0E22               	movlw	34
 32981  005B18  6EC6               	movwf	4038,c	;volatile
 32982                           
 32983                           ; BSR set to: 15
 32984                           ;system.c: 360: TRISDbits.TRISD6 = 1;
 32985  005B1A  8C95               	bsf	3989,6,c	;volatile
 32986                           
 32987                           ; BSR set to: 15
 32988                           ;system.c: 361: TRISDbits.TRISD2 = 0;
 32989  005B1C  9495               	bcf	3989,2,c	;volatile
 32990                           
 32991                           ; BSR set to: 15
 32992                           ;system.c: 362: TRISDbits.TRISD4 = 0;
 32993  005B1E  9895               	bcf	3989,4,c	;volatile
 32994                           
 32995                           ;system.c: 364: RPINR1 = 17;
 32996  005B20  0E11               	movlw	17
 32997  005B22  010E               	movlb	14	; () banked
 32998  005B24  6FE7               	movwf	231,b	;volatile
 32999                           
 33000                           ;system.c: 365: RPINR21 = 23;
 33001  005B26  0E17               	movlw	23
 33002  005B28  6FFB               	movwf	251,b	;volatile
 33003                           
 33004                           ;system.c: 366: RPOR21 = 10;
 33005  005B2A  0E0A               	movlw	10
 33006  005B2C  6FDB               	movwf	219,b	;volatile
 33007                           
 33008                           ;system.c: 367: RPOR19 = 9;
 33009  005B2E  0E09               	movlw	9
 33010  005B30  6FD9               	movwf	217,b	;volatile
 33011                           
 33012                           ; BSR set to: 14
 33013                           ;system.c: 369: SSP2STAT = 0x00;
 33014  005B32  6A73               	clrf	3955,c	;volatile
 33015                           
 33016                           ;system.c: 370: SSP2CON1 = 0x31;
 33017  005B34  0E31               	movlw	49
 33018  005B36  6E72               	movwf	3954,c	;volatile
 33019                           
 33020                           ; BSR set to: 14
 33021                           ;system.c: 372: PIR3bits.SSP2IF = 0;
 33022  005B38  9EA4               	bcf	4004,7,c	;volatile
 33023                           
 33024                           ; BSR set to: 14
 33025                           ;system.c: 380: LATDbits.LATD5 = 1;
 33026  005B3A  8A8C               	bsf	3980,5,c	;volatile
 33027                           
 33028                           ; BSR set to: 14
 33029                           ;system.c: 381: TRISDbits.TRISD5 = 0;
 33030  005B3C  9A95               	bcf	3989,5,c	;volatile
 33031                           
 33032                           ; BSR set to: 14
 33033                           ;system.c: 386: LATEbits.LATE1 = 0;
 33034  005B3E  928D               	bcf	3981,1,c	;volatile
 33035                           
 33036                           ; BSR set to: 14
 33037                           ;system.c: 387: LATDbits.LATD7 = 1;
 33038  005B40  8E8C               	bsf	3980,7,c	;volatile
 33039                           
 33040                           ; BSR set to: 14
 33041                           ;system.c: 388: LATDbits.LATD3 = 0;
 33042  005B42  968C               	bcf	3980,3,c	;volatile
 33043                           
 33044                           ; BSR set to: 14
 33045                           ;system.c: 389: LATEbits.LATE0 = 0;
 33046  005B44  908D               	bcf	3981,0,c	;volatile
 33047                           
 33048                           ; BSR set to: 14
 33049                           ;system.c: 390: TRISEbits.TRISE1 = 0;
 33050  005B46  9296               	bcf	3990,1,c	;volatile
 33051                           
 33052                           ; BSR set to: 14
 33053                           ;system.c: 391: TRISDbits.TRISD7 = 0;
 33054  005B48  9E95               	bcf	3989,7,c	;volatile
 33055                           
 33056                           ; BSR set to: 14
 33057                           ;system.c: 392: TRISDbits.TRISD3 = 0;
 33058  005B4A  9695               	bcf	3989,3,c	;volatile
 33059                           
 33060                           ; BSR set to: 14
 33061                           ;system.c: 393: TRISEbits.TRISE0 = 0;
 33062  005B4C  9096               	bcf	3990,0,c	;volatile
 33063                           
 33064                           ; BSR set to: 14
 33065                           ;system.c: 398: TRISDbits.TRISD6 = 1;
 33066  005B4E  8C95               	bsf	3989,6,c	;volatile
 33067                           
 33068                           ; BSR set to: 14
 33069                           ;system.c: 399: TRISDbits.TRISD2 = 0;
 33070  005B50  9495               	bcf	3989,2,c	;volatile
 33071                           
 33072                           ; BSR set to: 14
 33073                           ;system.c: 400: TRISDbits.TRISD4 = 0;
 33074  005B52  9895               	bcf	3989,4,c	;volatile
 33075                           
 33076                           ; BSR set to: 14
 33077                           ;system.c: 402: SSP2STAT = 0x00;
 33078  005B54  6A73               	clrf	3955,c	;volatile
 33079                           
 33080                           ;system.c: 403: SSP2CON1 = 0x32;
 33081  005B56  0E32               	movlw	50
 33082  005B58  6E72               	movwf	3954,c	;volatile
 33083                           
 33084                           ; BSR set to: 14
 33085                           ;system.c: 405: TRISEbits.TRISE2=0;
 33086  005B5A  9496               	bcf	3990,2,c	;volatile
 33087                           
 33088                           ; BSR set to: 14
 33089                           ;system.c: 406: LATEbits.LATE2=1;
 33090  005B5C  848D               	bsf	3981,2,c	;volatile
 33091                           
 33092                           ; BSR set to: 14
 33093                           ;system.c: 408: PIR3bits.SSP2IF = 0;
 33094  005B5E  9EA4               	bcf	4004,7,c	;volatile
 33095                           
 33096                           ; BSR set to: 14
 33097                           ;system.c: 413: INTCONbits.GIEH = 1;
 33098  005B60  8EF2               	bsf	intcon,7,c	;volatile
 33099                           
 33100                           ; BSR set to: 14
 33101  005B62  0C32               	retlw	50	;funcret
 33102  005B64                     __end_of_HardwareInit:
 33103                           	opt stack 0
 33104                           tblptru	equ	0xFF8
 33105                           tblptrh	equ	0xFF7
 33106                           tblptrl	equ	0xFF6
 33107                           tablat	equ	0xFF5
 33108                           prodh	equ	0xFF4
 33109                           prodl	equ	0xFF3
 33110                           intcon	equ	0xFF2
 33111                           intcon2	equ	0xFF1
 33112                           intcon3	equ	0xFF0
 33113                           indf0	equ	0xFEF
 33114                           postinc0	equ	0xFEE
 33115                           plusw0	equ	0xFEB
 33116                           fsr0h	equ	0xFEA
 33117                           fsr0l	equ	0xFE9
 33118                           wreg	equ	0xFE8
 33119                           indf1	equ	0xFE7
 33120                           postinc1	equ	0xFE6
 33121                           postdec1	equ	0xFE5
 33122                           plusw1	equ	0xFE3
 33123                           fsr1h	equ	0xFE2
 33124                           fsr1l	equ	0xFE1
 33125                           indf2	equ	0xFDF
 33126                           postinc2	equ	0xFDE
 33127                           postdec2	equ	0xFDD
 33128                           plusw2	equ	0xFDB
 33129                           fsr2h	equ	0xFDA
 33130                           fsr2l	equ	0xFD9
 33131                           status	equ	0xFD8
 33132                           
 33133 ;; *************** function _ButtonTask *****************
 33134 ;; Defined at:
 33135 ;;		line 427 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 33136 ;; Parameters:    Size  Location     Type
 33137 ;;		None
 33138 ;; Auto vars:     Size  Location     Type
 33139 ;;  Sw              1   39[BANK0 ] unsigned char 
 33140 ;; Return value:  Size  Location     Type
 33141 ;;                  1    wreg      void 
 33142 ;; Registers used:
 33143 ;;		wreg, status,2, status,0, cstack
 33144 ;; Tracked objects:
 33145 ;;		On entry : 0/1
 33146 ;;		On exit  : E/0
 33147 ;;		Unchanged: 0/0
 33148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33153 ;;Total ram usage:        1 bytes
 33154 ;; Hardware stack levels used:    1
 33155 ;; Hardware stack levels required when called:    7
 33156 ;; This function calls:
 33157 ;;		_MiWi_TickGetMs
 33158 ;; This function is called by:
 33159 ;;		_main
 33160 ;; This function uses a non-reentrant model
 33161 ;;
 33162                           
 33163                           	psect	text166
 33164  00679E                     __ptext166:
 33165                           	opt stack 0
 33166  00679E                     _ButtonTask:
 33167                           	opt stack 23
 33168                           
 33169                           ;system.c: 429: static MIWI_TICK tStart;
 33170                           ;system.c: 430: static uint8_t s0Count=0,s1Count=0;
 33171                           ;system.c: 431: static uint8_t pS0=0,pS1=0;
 33172                           ;system.c: 432: uint8_t Sw;
 33173                           ;system.c: 433: if((MiWi_TickGetMs().Val - tStart.Val)>10)
 33174                           
 33175                           ; BSR set to: 14
 33176                           ;incstack = 0
 33177  00679E  EC73  F039         	call	_MiWi_TickGetMs	;wreg free
 33178  0067A2  5182               	movf	(?_MiWi_TickGetMs+3)& (0+255),w,b
 33179  0067A4  1181               	iorwf	(?_MiWi_TickGetMs+2)& (0+255),w,b
 33180  0067A6  1180               	iorwf	(?_MiWi_TickGetMs+1)& (0+255),w,b
 33181  0067A8  E104               	bnz	u16890
 33182  0067AA  0E0B               	movlw	11
 33183  0067AC  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 33184  0067AE  A0D8               	btfss	status,0,c
 33185  0067B0  0012               	return	
 33186  0067B2                     u16890:
 33187                           
 33188                           ; BSR set to: 0
 33189                           ;system.c: 434: {
 33190                           ;system.c: 435: Sw=PORTBbits.RB1;
 33191  0067B2  0E00               	movlw	0
 33192  0067B4  B281               	btfsc	3969,1,c	;volatile
 33193  0067B6  0E01               	movlw	1
 33194  0067B8  6F87               	movwf	ButtonTask@Sw& (0+255),b
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;system.c: 436: if(pS0==Sw)
 33198  0067BA  5187               	movf	ButtonTask@Sw& (0+255),w,b
 33199  0067BC  1839               	xorwf	ButtonTask@pS0,w,c
 33200  0067BE  E10B               	bnz	l14894
 33201                           
 33202                           ; BSR set to: 0
 33203                           ;system.c: 437: {
 33204                           ;system.c: 438: if(s0Count<5)
 33205  0067C0  0E05               	movlw	5
 33206  0067C2  0101               	movlb	1	; () banked
 33207  0067C4  61D0               	cpfslt	ButtonTask@s0Count& (0+255),b
 33208  0067C6  D002               	goto	l14888
 33209                           
 33210                           ; BSR set to: 1
 33211                           ;system.c: 439: {
 33212                           ;system.c: 440: s0Count++;
 33213  0067C8  2BD0               	incf	ButtonTask@s0Count& (0+255),f,b
 33214                           
 33215                           ;system.c: 441: }else
 33216  0067CA  D005               	goto	l14894
 33217  0067CC                     l14888:
 33218                           
 33219                           ; BSR set to: 1
 33220                           ;system.c: 442: {
 33221                           ;system.c: 443: if(pS0==0)
 33222  0067CC  5039               	movf	ButtonTask@pS0,w,c
 33223  0067CE  E102               	bnz	l14892
 33224                           
 33225                           ; BSR set to: 1
 33226                           ;system.c: 444: {
 33227                           ;system.c: 445: switches|=(1<<0);
 33228  0067D0  81E0               	bsf	_switches& (0+255),0,b
 33229                           
 33230                           ;system.c: 446: }else
 33231  0067D2  D001               	goto	l14894
 33232  0067D4                     l14892:
 33233                           
 33234                           ; BSR set to: 1
 33235                           ;system.c: 447: {
 33236                           ;system.c: 448: switches&=(~(1<<0));
 33237  0067D4  91E0               	bcf	_switches& (0+255),0,b
 33238  0067D6                     l14894:
 33239                           
 33240                           ;system.c: 449: }
 33241                           ;system.c: 450: }
 33242                           ;system.c: 451: }
 33243                           ;system.c: 452: pS0=Sw;
 33244  0067D6  C087  F039         	movff	ButtonTask@Sw,ButtonTask@pS0
 33245                           
 33246                           ;system.c: 454: Sw=PORTBbits.RB2;
 33247  0067DA  0E00               	movlw	0
 33248  0067DC  B481               	btfsc	3969,2,c	;volatile
 33249  0067DE  0E01               	movlw	1
 33250  0067E0  0100               	movlb	0	; () banked
 33251  0067E2  6F87               	movwf	ButtonTask@Sw& (0+255),b
 33252                           
 33253                           ;system.c: 455: if(pS1==Sw)
 33254  0067E4  5187               	movf	ButtonTask@Sw& (0+255),w,b
 33255  0067E6  183A               	xorwf	ButtonTask@pS1,w,c
 33256  0067E8  E10B               	bnz	l14908
 33257                           
 33258                           ; BSR set to: 0
 33259                           ;system.c: 456: {
 33260                           ;system.c: 457: if(s1Count<5)
 33261  0067EA  0E05               	movlw	5
 33262  0067EC  0101               	movlb	1	; () banked
 33263  0067EE  61D1               	cpfslt	ButtonTask@s1Count& (0+255),b
 33264  0067F0  D002               	goto	l14902
 33265                           
 33266                           ; BSR set to: 1
 33267                           ;system.c: 458: {
 33268                           ;system.c: 459: s1Count++;
 33269  0067F2  2BD1               	incf	ButtonTask@s1Count& (0+255),f,b
 33270                           
 33271                           ;system.c: 460: }else
 33272  0067F4  D005               	goto	l14908
 33273  0067F6                     l14902:
 33274                           
 33275                           ; BSR set to: 1
 33276                           ;system.c: 461: {
 33277                           ;system.c: 462: if(pS1==0)
 33278  0067F6  503A               	movf	ButtonTask@pS1,w,c
 33279  0067F8  E102               	bnz	l14906
 33280                           
 33281                           ; BSR set to: 1
 33282                           ;system.c: 463: {
 33283                           ;system.c: 464: switches|=(1<<1);
 33284  0067FA  83E0               	bsf	_switches& (0+255),1,b
 33285                           
 33286                           ;system.c: 465: }else
 33287  0067FC  D001               	goto	l14908
 33288  0067FE                     l14906:
 33289                           
 33290                           ; BSR set to: 1
 33291                           ;system.c: 466: {
 33292                           ;system.c: 467: switches&=(~(1<<1));
 33293  0067FE  93E0               	bcf	_switches& (0+255),1,b
 33294  006800                     l14908:
 33295                           
 33296                           ;system.c: 468: }
 33297                           ;system.c: 469: }
 33298                           ;system.c: 470: }
 33299                           ;system.c: 471: pS1=Sw;
 33300  006800  C087  F03A         	movff	ButtonTask@Sw,ButtonTask@pS1
 33301  006804  0012               	return		;funcret
 33302  006806                     __end_of_ButtonTask:
 33303                           	opt stack 0
 33304                           tblptru	equ	0xFF8
 33305                           tblptrh	equ	0xFF7
 33306                           tblptrl	equ	0xFF6
 33307                           tablat	equ	0xFF5
 33308                           prodh	equ	0xFF4
 33309                           prodl	equ	0xFF3
 33310                           intcon	equ	0xFF2
 33311                           intcon2	equ	0xFF1
 33312                           intcon3	equ	0xFF0
 33313                           indf0	equ	0xFEF
 33314                           postinc0	equ	0xFEE
 33315                           plusw0	equ	0xFEB
 33316                           fsr0h	equ	0xFEA
 33317                           fsr0l	equ	0xFE9
 33318                           wreg	equ	0xFE8
 33319                           indf1	equ	0xFE7
 33320                           postinc1	equ	0xFE6
 33321                           postdec1	equ	0xFE5
 33322                           plusw1	equ	0xFE3
 33323                           fsr1h	equ	0xFE2
 33324                           fsr1l	equ	0xFE1
 33325                           indf2	equ	0xFDF
 33326                           postinc2	equ	0xFDE
 33327                           postdec2	equ	0xFDD
 33328                           plusw2	equ	0xFDB
 33329                           fsr2h	equ	0xFDA
 33330                           fsr2l	equ	0xFD9
 33331                           status	equ	0xFD8
 33332                           
 33333 ;; *************** function _MiWi_TickGetMs *****************
 33334 ;; Defined at:
 33335 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 33336 ;; Parameters:    Size  Location     Type
 33337 ;;		None
 33338 ;; Auto vars:     Size  Location     Type
 33339 ;;  tnow            4   35[BANK0 ] unsigned long 
 33340 ;; Return value:  Size  Location     Type
 33341 ;;                  4   31[BANK0 ] struct MIWI_TICK_t
 33342 ;; Registers used:
 33343 ;;		wreg, status,2, status,0, cstack
 33344 ;; Tracked objects:
 33345 ;;		On entry : 0/1
 33346 ;;		On exit  : F/0
 33347 ;;		Unchanged: 0/0
 33348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33352 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33353 ;;Total ram usage:        8 bytes
 33354 ;; Hardware stack levels used:    1
 33355 ;; Hardware stack levels required when called:    6
 33356 ;; This function calls:
 33357 ;;		_MiWi_TickGet
 33358 ;; This function is called by:
 33359 ;;		_TxPacket
 33360 ;;		_MiMAC_ReceivedPacket
 33361 ;;		_ButtonTask
 33362 ;;		_LEDManagerTask
 33363 ;;		_main
 33364 ;;		_MiApp_MessageAvailable
 33365 ;;		_MiApp_SearchConnection
 33366 ;; This function uses a non-reentrant model
 33367 ;;
 33368                           
 33369                           	psect	text167
 33370  0072E6                     __ptext167:
 33371                           	opt stack 0
 33372  0072E6                     _MiWi_TickGetMs:
 33373                           	opt stack 24
 33374                           
 33375                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 33376                           
 33377                           ;incstack = 0
 33378  0072E6  EC0C  F038         	call	_MiWi_TickGet	;wreg free
 33379  0072EA  C073  F083         	movff	?_MiWi_TickGet,MiWi_TickGetMs@tnow
 33380  0072EE  C074  F084         	movff	?_MiWi_TickGet+1,MiWi_TickGetMs@tnow+1
 33381  0072F2  C075  F085         	movff	?_MiWi_TickGet+2,MiWi_TickGetMs@tnow+2
 33382  0072F6  C076  F086         	movff	?_MiWi_TickGet+3,MiWi_TickGetMs@tnow+3
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;symbol.c: 123: currentTime.Val=tnow;
 33386  0072FA  C083  F1BA         	movff	MiWi_TickGetMs@tnow,_currentTime
 33387  0072FE  C084  F1BB         	movff	MiWi_TickGetMs@tnow+1,_currentTime+1
 33388  007302  C085  F1BC         	movff	MiWi_TickGetMs@tnow+2,_currentTime+2
 33389  007306  C086  F1BD         	movff	MiWi_TickGetMs@tnow+3,_currentTime+3
 33390                           
 33391                           ; BSR set to: 0
 33392                           ;symbol.c: 124: return(currentTime);
 33393  00730A  C1BA  F07F         	movff	_currentTime,?_MiWi_TickGetMs
 33394  00730E  C1BB  F080         	movff	_currentTime+1,?_MiWi_TickGetMs+1
 33395  007312  C1BC  F081         	movff	_currentTime+2,?_MiWi_TickGetMs+2
 33396  007316  C1BD  F082         	movff	_currentTime+3,?_MiWi_TickGetMs+3
 33397                           
 33398                           ; BSR set to: 0
 33399  00731A  0012               	return		;funcret
 33400  00731C                     __end_of_MiWi_TickGetMs:
 33401                           	opt stack 0
 33402                           tblptru	equ	0xFF8
 33403                           tblptrh	equ	0xFF7
 33404                           tblptrl	equ	0xFF6
 33405                           tablat	equ	0xFF5
 33406                           prodh	equ	0xFF4
 33407                           prodl	equ	0xFF3
 33408                           intcon	equ	0xFF2
 33409                           intcon2	equ	0xFF1
 33410                           intcon3	equ	0xFF0
 33411                           indf0	equ	0xFEF
 33412                           postinc0	equ	0xFEE
 33413                           plusw0	equ	0xFEB
 33414                           fsr0h	equ	0xFEA
 33415                           fsr0l	equ	0xFE9
 33416                           wreg	equ	0xFE8
 33417                           indf1	equ	0xFE7
 33418                           postinc1	equ	0xFE6
 33419                           postdec1	equ	0xFE5
 33420                           plusw1	equ	0xFE3
 33421                           fsr1h	equ	0xFE2
 33422                           fsr1l	equ	0xFE1
 33423                           indf2	equ	0xFDF
 33424                           postinc2	equ	0xFDE
 33425                           postdec2	equ	0xFDD
 33426                           plusw2	equ	0xFDB
 33427                           fsr2h	equ	0xFDA
 33428                           fsr2l	equ	0xFD9
 33429                           status	equ	0xFD8
 33430                           
 33431 ;; *************** function _MiWi_TickGet *****************
 33432 ;; Defined at:
 33433 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 33434 ;; Parameters:    Size  Location     Type
 33435 ;;		None
 33436 ;; Auto vars:     Size  Location     Type
 33437 ;;  tmrval          4   27[BANK0 ] unsigned long 
 33438 ;;  t1ext           4   23[BANK0 ] unsigned long 
 33439 ;; Return value:  Size  Location     Type
 33440 ;;                  4   19[BANK0 ] unsigned long 
 33441 ;; Registers used:
 33442 ;;		wreg, status,2, status,0
 33443 ;; Tracked objects:
 33444 ;;		On entry : 0/1
 33445 ;;		On exit  : F/0
 33446 ;;		Unchanged: 0/0
 33447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33449 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33451 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33452 ;;Total ram usage:       12 bytes
 33453 ;; Hardware stack levels used:    1
 33454 ;; Hardware stack levels required when called:    5
 33455 ;; This function calls:
 33456 ;;		Nothing
 33457 ;; This function is called by:
 33458 ;;		_MiWi_TickGetMs
 33459 ;; This function uses a non-reentrant model
 33460 ;;
 33461                           
 33462                           	psect	text168
 33463  007018                     __ptext168:
 33464                           	opt stack 0
 33465  007018                     _MiWi_TickGet:
 33466                           	opt stack 24
 33467                           
 33468                           ;symbol.c: 129: uint32_t tmrval=0;
 33469                           
 33470                           ; BSR set to: 0
 33471                           ;incstack = 0
 33472  007018  0100               	movlb	0	; () banked
 33473  00701A  6B7B               	clrf	MiWi_TickGet@tmrval& (0+255),b
 33474  00701C  6B7C               	clrf	(MiWi_TickGet@tmrval+1)& (0+255),b
 33475  00701E  6B7D               	clrf	(MiWi_TickGet@tmrval+2)& (0+255),b
 33476  007020  6B7E               	clrf	(MiWi_TickGet@tmrval+3)& (0+255),b
 33477  007022                     l474:
 33478                           
 33479                           ;symbol.c: 133: {
 33480                           ;symbol.c: 134: t1fired=0;
 33481  007022  6A44               	clrf	_t1fired,c	;volatile
 33482                           
 33483                           ;symbol.c: 136: t1ext=t1extension;
 33484  007024  C1C2  F077         	movff	_t1extension,MiWi_TickGet@t1ext
 33485  007028  C1C3  F078         	movff	_t1extension+1,MiWi_TickGet@t1ext+1
 33486  00702C  C1C4  F079         	movff	_t1extension+2,MiWi_TickGet@t1ext+2
 33487  007030  C1C5  F07A         	movff	_t1extension+3,MiWi_TickGet@t1ext+3
 33488                           
 33489                           ;symbol.c: 137: } while(t1fired==1);
 33490  007034  0444               	decf	_t1fired,w,c	;volatile
 33491  007036  E0F5               	bz	l474
 33492                           
 33493                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 33494  007038  0100               	movlb	0	; () banked
 33495  00703A  5177               	movf	MiWi_TickGet@t1ext& (0+255),w,b
 33496  00703C  137B               	iorwf	MiWi_TickGet@tmrval& (0+255),f,b
 33497  00703E  5178               	movf	(MiWi_TickGet@t1ext+1)& (0+255),w,b
 33498  007040  137C               	iorwf	(MiWi_TickGet@tmrval+1)& (0+255),f,b
 33499  007042  5179               	movf	(MiWi_TickGet@t1ext+2)& (0+255),w,b
 33500  007044  137D               	iorwf	(MiWi_TickGet@tmrval+2)& (0+255),f,b
 33501  007046  517A               	movf	(MiWi_TickGet@t1ext+3)& (0+255),w,b
 33502  007048  137E               	iorwf	(MiWi_TickGet@tmrval+3)& (0+255),f,b
 33503                           
 33504                           ; BSR set to: 0
 33505                           ;symbol.c: 140: return(tmrval);
 33506  00704A  C07B  F073         	movff	MiWi_TickGet@tmrval,?_MiWi_TickGet
 33507  00704E  C07C  F074         	movff	MiWi_TickGet@tmrval+1,?_MiWi_TickGet+1
 33508  007052  C07D  F075         	movff	MiWi_TickGet@tmrval+2,?_MiWi_TickGet+2
 33509  007056  C07E  F076         	movff	MiWi_TickGet@tmrval+3,?_MiWi_TickGet+3
 33510                           
 33511                           ; BSR set to: 0
 33512  00705A  0012               	return		;funcret
 33513  00705C                     __end_of_MiWi_TickGet:
 33514                           	opt stack 0
 33515                           tblptru	equ	0xFF8
 33516                           tblptrh	equ	0xFF7
 33517                           tblptrl	equ	0xFF6
 33518                           tablat	equ	0xFF5
 33519                           prodh	equ	0xFF4
 33520                           prodl	equ	0xFF3
 33521                           intcon	equ	0xFF2
 33522                           intcon2	equ	0xFF1
 33523                           intcon3	equ	0xFF0
 33524                           indf0	equ	0xFEF
 33525                           postinc0	equ	0xFEE
 33526                           plusw0	equ	0xFEB
 33527                           fsr0h	equ	0xFEA
 33528                           fsr0l	equ	0xFE9
 33529                           wreg	equ	0xFE8
 33530                           indf1	equ	0xFE7
 33531                           postinc1	equ	0xFE6
 33532                           postdec1	equ	0xFE5
 33533                           plusw1	equ	0xFE3
 33534                           fsr1h	equ	0xFE2
 33535                           fsr1l	equ	0xFE1
 33536                           indf2	equ	0xFDF
 33537                           postinc2	equ	0xFDE
 33538                           postdec2	equ	0xFDD
 33539                           plusw2	equ	0xFDB
 33540                           fsr2h	equ	0xFDA
 33541                           fsr2l	equ	0xFD9
 33542                           status	equ	0xFD8
 33543                           
 33544 ;; *************** function _HighISR *****************
 33545 ;; Defined at:
 33546 ;;		line 1316 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 33547 ;; Parameters:    Size  Location     Type
 33548 ;;		None
 33549 ;; Auto vars:     Size  Location     Type
 33550 ;;  dstPan          2    8[BANK0 ] unsigned int 
 33551 ;;  dPan            1    0[BANK0 ] PTR unsigned char 
 33552 ;;		 -> HighISR@dstPan(2), 
 33553 ;;  ackInfoIndex    1   15[BANK0 ] unsigned char 
 33554 ;;  PacketForMe     1   10[BANK0 ] unsigned char 
 33555 ;;  i               1   18[BANK0 ] unsigned char 
 33556 ;;  fifo_stat       1    3[BANK0 ] unsigned char 
 33557 ;;  ackPacket       4    4[BANK0 ] unsigned char [4]
 33558 ;;  counter         2    1[BANK0 ] unsigned int 
 33559 ;;  BankIndex       1   17[BANK0 ] unsigned char 
 33560 ;;  PacketLen       1   16[BANK0 ] unsigned char 
 33561 ;;  RxPacketPtr     1   14[BANK0 ] unsigned char 
 33562 ;;  bAck            1   11[BANK0 ] unsigned char 
 33563 ;;  tmr             2   12[BANK0 ] unsigned int 
 33564 ;; Return value:  Size  Location     Type
 33565 ;;                  1    wreg      void 
 33566 ;; Registers used:
 33567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33568 ;; Tracked objects:
 33569 ;;		On entry : 0/0
 33570 ;;		On exit  : 0/0
 33571 ;;		Unchanged: 0/0
 33572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33574 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33575 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33576 ;;      Totals:        10      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33577 ;;Total ram usage:       29 bytes
 33578 ;; Hardware stack levels used:    1
 33579 ;; Hardware stack levels required when called:    4
 33580 ;; This function calls:
 33581 ;;		i2_MiWi_TickGetMs
 33582 ;;		i2_RegisterRead
 33583 ;;		i2_SPIGet
 33584 ;;		i2_TxPacket
 33585 ;; This function is called by:
 33586 ;;		Interrupt level 2
 33587 ;; This function uses a non-reentrant model
 33588 ;;
 33589                           
 33590                           	psect	intcode
 33591  000008                     __pintcode:
 33592                           	opt stack 0
 33593  000008                     _HighISR:
 33594                           	opt stack 13
 33595                           
 33596                           ; BSR set to: 0
 33597                           ;incstack = 0
 33598  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33599  00000A  CFE1 F030          	movff	fsr1l,??_HighISR+4
 33600  00000E  CFE2 F031          	movff	fsr1h,??_HighISR+5
 33601  000012  CFD9 F032          	movff	fsr2l,??_HighISR+6
 33602  000016  CFDA F033          	movff	fsr2h,??_HighISR+7
 33603  00001A  CFF3 F034          	movff	prodl,??_HighISR+8
 33604  00001E  CFF4 F035          	movff	prodh,??_HighISR+9
 33605                           
 33606                           ;drv_mrf_miwi_mesh_89xa.c: 1325: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 33607  000022  B0F0               	btfsc	intcon3,0,c	;volatile
 33608  000024  A6F0               	btfss	intcon3,3,c	;volatile
 33609  000026  D20F               	goto	i2l15628
 33610                           
 33611                           ;drv_mrf_miwi_mesh_89xa.c: 1326: {
 33612                           ;drv_mrf_miwi_mesh_89xa.c: 1327: if(RF_Mode == 0x60)
 33613  000028  0E60               	movlw	96
 33614  00002A  183D               	xorwf	_RF_Mode,w,c
 33615  00002C  E001 D207          	bnz	i2l15622
 33616                           
 33617                           ;drv_mrf_miwi_mesh_89xa.c: 1328: {
 33618                           ;drv_mrf_miwi_mesh_89xa.c: 1329: uint8_t RxPacketPtr;
 33619                           ;drv_mrf_miwi_mesh_89xa.c: 1330: uint8_t PacketLen;
 33620                           ;drv_mrf_miwi_mesh_89xa.c: 1331: uint8_t BankIndex;
 33621                           ;drv_mrf_miwi_mesh_89xa.c: 1332: uint16_t counter;
 33622                           ;drv_mrf_miwi_mesh_89xa.c: 1333: bool bAck;
 33623                           ;drv_mrf_miwi_mesh_89xa.c: 1334: uint8_t ackPacket[4];
 33624                           ;drv_mrf_miwi_mesh_89xa.c: 1337: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 33625  000030  0E28               	movlw	40
 33626  000032  EC36  F03A         	call	i2_RegisterRead
 33627  000036  6E2C               	movwf	??_HighISR& (0+255),c
 33628  000038  90D8               	bcf	status,0,c
 33629  00003A  302C               	rrcf	??_HighISR,w,c
 33630  00003C  0101               	movlb	1	; () banked
 33631  00003E  6FD6               	movwf	_RSSIVal& (0+255),b
 33632                           
 33633                           ; BSR set to: 1
 33634                           ;drv_mrf_miwi_mesh_89xa.c: 1340: RSSILock = RSSIVal;
 33635  000040  C1D6  F1D5         	movff	_RSSIVal,_RSSILock
 33636                           
 33637                           ; BSR set to: 1
 33638                           ;drv_mrf_miwi_mesh_89xa.c: 1342: LATAbits.LATA5 = 0;
 33639  000044  9A89               	bcf	3977,5,c	;volatile
 33640                           
 33641                           ; BSR set to: 1
 33642                           ;drv_mrf_miwi_mesh_89xa.c: 1343: PacketLen = SPIGet();
 33643  000046  EC2B  F03C         	call	i2_SPIGet	;wreg free
 33644  00004A  0100               	movlb	0	; () banked
 33645  00004C  6F70               	movwf	HighISR@PacketLen& (0+255),b
 33646                           
 33647                           ; BSR set to: 0
 33648                           ;drv_mrf_miwi_mesh_89xa.c: 1344: LATAbits.LATA5 = 1;
 33649  00004E  8A89               	bsf	3977,5,c	;volatile
 33650                           
 33651                           ; BSR set to: 0
 33652                           ;drv_mrf_miwi_mesh_89xa.c: 1347: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 33653  000050  6B71               	clrf	HighISR@BankIndex& (0+255),b
 33654  000052                     i2l15432:
 33655                           
 33656                           ; BSR set to: 0
 33657                           ;drv_mrf_miwi_mesh_89xa.c: 1348: {
 33658                           ;drv_mrf_miwi_mesh_89xa.c: 1349: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 33659  000052  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33660  000054  0D47               	mullw	71
 33661  000056  0E00               	movlw	low _RxPacket
 33662  000058  24F3               	addwf	prodl,w,c
 33663  00005A  6ED9               	movwf	fsr2l,c
 33664  00005C  0E03               	movlw	high _RxPacket
 33665  00005E  20F4               	addwfc	prodh,w,c
 33666  000060  6EDA               	movwf	fsr2h,c
 33667  000062  A0DF               	btfss	indf2,0,c
 33668  000064  D005               	goto	i2l15440
 33669                           
 33670                           ; BSR set to: 3
 33671  000066  0100               	movlb	0	; () banked
 33672  000068  2B71               	incf	HighISR@BankIndex& (0+255),f,b
 33673                           
 33674                           ; BSR set to: 0
 33675  00006A  0E01               	movlw	1
 33676  00006C  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33677  00006E  D7F1               	goto	i2l15432
 33678  000070                     i2l15440:
 33679                           
 33680                           ;drv_mrf_miwi_mesh_89xa.c: 1352: }
 33681                           ;drv_mrf_miwi_mesh_89xa.c: 1353: }
 33682                           ;drv_mrf_miwi_mesh_89xa.c: 1356: if( PacketLen == 2 )
 33683  000070  0E02               	movlw	2
 33684  000072  0100               	movlb	0	; () banked
 33685  000074  1970               	xorwf	HighISR@PacketLen& (0+255),w,b
 33686  000076  E103               	bnz	i2l243
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;drv_mrf_miwi_mesh_89xa.c: 1357: {
 33690                           ;drv_mrf_miwi_mesh_89xa.c: 1358: bAck = 1;
 33691  000078  0E01               	movlw	1
 33692  00007A  6F6B               	movwf	HighISR@bAck& (0+255),b
 33693                           
 33694                           ;drv_mrf_miwi_mesh_89xa.c: 1359: }
 33695  00007C  D001               	goto	i2l15444
 33696  00007E                     i2l243:
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;drv_mrf_miwi_mesh_89xa.c: 1360: else
 33700                           ;drv_mrf_miwi_mesh_89xa.c: 1361: {
 33701                           ;drv_mrf_miwi_mesh_89xa.c: 1362: bAck = 0;
 33702  00007E  6B6B               	clrf	HighISR@bAck& (0+255),b
 33703  000080                     i2l15444:
 33704                           
 33705                           ; BSR set to: 0
 33706                           ;drv_mrf_miwi_mesh_89xa.c: 1363: }
 33707                           ;drv_mrf_miwi_mesh_89xa.c: 1366: if( PacketLen >= 64 || PacketLen == 0 || (BankIndex >= 
      +                          2 && (bAck==0)) )
 33708  000080  0E40               	movlw	64
 33709  000082  6170               	cpfslt	HighISR@PacketLen& (0+255),b
 33710  000084  D007               	goto	i2l15452
 33711                           
 33712                           ; BSR set to: 0
 33713  000086  5170               	movf	HighISR@PacketLen& (0+255),w,b
 33714  000088  E005               	bz	i2l15452
 33715                           
 33716                           ; BSR set to: 0
 33717  00008A  0E01               	movlw	1
 33718  00008C  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33719  00008E  D012               	goto	i2l245
 33720                           
 33721                           ; BSR set to: 0
 33722  000090  516B               	movf	HighISR@bAck& (0+255),w,b
 33723  000092  E110               	bnz	i2l245
 33724  000094                     i2l15452:
 33725                           
 33726                           ; BSR set to: 0
 33727                           ;drv_mrf_miwi_mesh_89xa.c: 1369: {
 33728                           ;drv_mrf_miwi_mesh_89xa.c: 1370: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 33729  000094  0E1A               	movlw	26
 33730  000096  EC36  F03A         	call	i2_RegisterRead
 33731  00009A  D007               	goto	L14
 33732  00009C                     i2l250:
 33733                           
 33734                           ; BSR set to: 0
 33735                           ;drv_mrf_miwi_mesh_89xa.c: 1372: {
 33736                           ;drv_mrf_miwi_mesh_89xa.c: 1373: LATAbits.LATA5 = 0;
 33737  00009C  9A89               	bcf	3977,5,c	;volatile
 33738                           
 33739                           ; BSR set to: 0
 33740                           ;drv_mrf_miwi_mesh_89xa.c: 1374: SPIGet();
 33741  00009E  EC2B  F03C         	call	i2_SPIGet	;wreg free
 33742                           
 33743                           ;drv_mrf_miwi_mesh_89xa.c: 1375: LATAbits.LATA5 = 1;
 33744  0000A2  8A89               	bsf	3977,5,c	;volatile
 33745                           
 33746                           ;drv_mrf_miwi_mesh_89xa.c: 1376: fifo_stat = RegisterRead(0x1A00>>8);
 33747  0000A4  0E1A               	movlw	26
 33748  0000A6  EC36  F03A         	call	i2_RegisterRead
 33749  0000AA                     L14:
 33750  0000AA  0100               	movlb	0	; () banked
 33751  0000AC  6F63               	movwf	HighISR@fifo_stat& (0+255),b
 33752                           
 33753                           ; BSR set to: 0
 33754  0000AE  B363               	btfsc	HighISR@fifo_stat& (0+255),1,b
 33755  0000B0  D7F5               	goto	i2l250
 33756  0000B2  D1C7               	goto	i2l15624
 33757  0000B4                     i2l245:
 33758                           
 33759                           ; BSR set to: 0
 33760                           ;drv_mrf_miwi_mesh_89xa.c: 1380: }
 33761                           ;drv_mrf_miwi_mesh_89xa.c: 1382: RxPacketPtr = 0;
 33762  0000B4  6B6E               	clrf	HighISR@RxPacketPtr& (0+255),b
 33763                           
 33764                           ;drv_mrf_miwi_mesh_89xa.c: 1383: counter = PacketLen;
 33765  0000B6  C070  F061         	movff	HighISR@PacketLen,HighISR@counter
 33766  0000BA  6B62               	clrf	(HighISR@counter+1)& (0+255),b
 33767                           
 33768                           ;drv_mrf_miwi_mesh_89xa.c: 1385: while(counter >= 1)
 33769  0000BC  D1BC               	goto	i2l15620
 33770  0000BE                     i2l15462:
 33771                           
 33772                           ; BSR set to: 0
 33773                           ;drv_mrf_miwi_mesh_89xa.c: 1388: if(1)
 33774  0000BE  0761               	decf	HighISR@counter& (0+255),f,b
 33775  0000C0  A0D8               	btfss	status,0,c
 33776  0000C2  0762               	decf	(HighISR@counter+1)& (0+255),f,b
 33777                           
 33778                           ; BSR set to: 0
 33779                           ;drv_mrf_miwi_mesh_89xa.c: 1389: {
 33780                           ;drv_mrf_miwi_mesh_89xa.c: 1391: if( bAck )
 33781  0000C4  516B               	movf	HighISR@bAck& (0+255),w,b
 33782  0000C6  E008               	bz	i2l256
 33783                           
 33784                           ; BSR set to: 0
 33785                           ;drv_mrf_miwi_mesh_89xa.c: 1392: {
 33786                           ;drv_mrf_miwi_mesh_89xa.c: 1393: LATAbits.LATA5 = 0;
 33787  0000C8  9A89               	bcf	3977,5,c	;volatile
 33788                           
 33789                           ; BSR set to: 0
 33790                           ;drv_mrf_miwi_mesh_89xa.c: 1394: ackPacket[RxPacketPtr++] = SPIGet();
 33791  0000CA  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 33792  0000CC  0F64               	addlw	low HighISR@ackPacket
 33793  0000CE  6ED9               	movwf	fsr2l,c
 33794  0000D0  6ADA               	clrf	fsr2h,c
 33795  0000D2  EC2B  F03C         	call	i2_SPIGet	;wreg free
 33796  0000D6  D016               	goto	L20
 33797  0000D8                     i2l256:
 33798                           
 33799                           ; BSR set to: 0
 33800                           ;drv_mrf_miwi_mesh_89xa.c: 1398: else
 33801                           ;drv_mrf_miwi_mesh_89xa.c: 1399: {
 33802                           ;drv_mrf_miwi_mesh_89xa.c: 1400: LATAbits.LATA5 = 0;
 33803  0000D8  9A89               	bcf	3977,5,c	;volatile
 33804                           
 33805                           ; BSR set to: 0
 33806                           ;drv_mrf_miwi_mesh_89xa.c: 1401: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 33807  0000DA  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33808  0000DC  0D47               	mullw	71
 33809  0000DE  0E00               	movlw	low _RxPacket
 33810  0000E0  6E2C               	movwf	??_HighISR& (0+255),c
 33811  0000E2  0E03               	movlw	high _RxPacket
 33812  0000E4  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33813  0000E6  2A2C               	incf	??_HighISR,f,c
 33814  0000E8  0E00               	movlw	0
 33815  0000EA  222D               	addwfc	??_HighISR+1,f,c
 33816  0000EC  50F3               	movf	prodl,w,c
 33817  0000EE  262C               	addwf	??_HighISR,f,c
 33818  0000F0  50F4               	movf	prodh,w,c
 33819  0000F2  222D               	addwfc	??_HighISR+1,f,c
 33820  0000F4  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 33821  0000F6  242C               	addwf	??_HighISR,w,c
 33822  0000F8  6ED9               	movwf	fsr2l,c
 33823  0000FA  0E00               	movlw	0
 33824  0000FC  202D               	addwfc	??_HighISR+1,w,c
 33825  0000FE  6EDA               	movwf	fsr2h,c
 33826  000100  EC2B  F03C         	call	i2_SPIGet	;wreg free
 33827  000104                     L20:
 33828  000104  6EDF               	movwf	indf2,c
 33829  000106  0100               	movlb	0	; () banked
 33830  000108  2B6E               	incf	HighISR@RxPacketPtr& (0+255),f,b
 33831                           
 33832                           ; BSR set to: 0
 33833                           ;drv_mrf_miwi_mesh_89xa.c: 1402: LATAbits.LATA5 = 1;
 33834  00010A  8A89               	bsf	3977,5,c	;volatile
 33835                           
 33836                           ; BSR set to: 0
 33837                           ;drv_mrf_miwi_mesh_89xa.c: 1403: }
 33838                           ;drv_mrf_miwi_mesh_89xa.c: 1406: if( RxPacketPtr >= PacketLen )
 33839  00010C  5170               	movf	HighISR@PacketLen& (0+255),w,b
 33840  00010E  5D6E               	subwf	HighISR@RxPacketPtr& (0+255),w,b
 33841  000110  E201 D191          	bnc	i2l15620
 33842                           
 33843                           ; BSR set to: 0
 33844                           ;drv_mrf_miwi_mesh_89xa.c: 1407: {
 33845                           ;drv_mrf_miwi_mesh_89xa.c: 1408: uint8_t i;
 33846                           ;drv_mrf_miwi_mesh_89xa.c: 1410: if( bAck )
 33847  000114  516B               	movf	HighISR@bAck& (0+255),w,b
 33848  000116  E023               	bz	i2l259
 33849                           
 33850                           ; BSR set to: 0
 33851                           ;drv_mrf_miwi_mesh_89xa.c: 1411: {
 33852                           ;drv_mrf_miwi_mesh_89xa.c: 1413: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 33853  000118  5164               	movf	HighISR@ackPacket& (0+255),w,b
 33854  00011A  0B03               	andlw	3
 33855  00011C  0A02               	xorlw	2
 33856  00011E  E107               	bnz	i2l15494
 33857                           
 33858                           ; BSR set to: 0
 33859                           ;drv_mrf_miwi_mesh_89xa.c: 1414: {
 33860                           ;drv_mrf_miwi_mesh_89xa.c: 1415: if( ackPacket[1] == TxMACSeq )
 33861  000120  5041               	movf	_TxMACSeq,w,c
 33862  000122  1965               	xorwf	(HighISR@ackPacket+1)& (0+255),w,b
 33863  000124  E001 D18D          	bnz	i2l15624
 33864                           
 33865                           ; BSR set to: 0
 33866                           ;drv_mrf_miwi_mesh_89xa.c: 1416: {
 33867                           ;drv_mrf_miwi_mesh_89xa.c: 1417: hasAck = 1;
 33868  000128  0E01               	movlw	1
 33869  00012A  6E42               	movwf	_hasAck,c	;volatile
 33870                           
 33871                           ; BSR set to: 0
 33872                           ;drv_mrf_miwi_mesh_89xa.c: 1420: goto RETURN_HERE;
 33873  00012C  D18A               	goto	i2l15624
 33874  00012E                     i2l15494:
 33875                           
 33876                           ; BSR set to: 0
 33877                           ;drv_mrf_miwi_mesh_89xa.c: 1422: else
 33878                           ;drv_mrf_miwi_mesh_89xa.c: 1424: if( BankIndex >= 2 )
 33879  00012E  0E01               	movlw	1
 33880  000130  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 33881  000132  D001               	goto	i2l15498
 33882  000134  D7AF               	goto	i2l15452
 33883  000136                     i2l15498:
 33884                           
 33885                           ; BSR set to: 0
 33886                           ;drv_mrf_miwi_mesh_89xa.c: 1428: }
 33887                           ;drv_mrf_miwi_mesh_89xa.c: 1429: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 33888  000136  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33889  000138  0D47               	mullw	71
 33890  00013A  0E01               	movlw	low (_RxPacket+1)
 33891  00013C  24F3               	addwf	prodl,w,c
 33892  00013E  6ED9               	movwf	fsr2l,c
 33893  000140  0E03               	movlw	high (_RxPacket+1)
 33894  000142  20F4               	addwfc	prodh,w,c
 33895  000144  6EDA               	movwf	fsr2h,c
 33896  000146  C064  FFDF         	movff	HighISR@ackPacket,indf2
 33897                           
 33898                           ;drv_mrf_miwi_mesh_89xa.c: 1430: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 33899  00014A  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33900  00014C  0D47               	mullw	71
 33901  00014E  0E02               	movlw	low (_RxPacket+2)
 33902  000150  24F3               	addwf	prodl,w,c
 33903  000152  6ED9               	movwf	fsr2l,c
 33904  000154  0E03               	movlw	high (_RxPacket+2)
 33905  000156  20F4               	addwfc	prodh,w,c
 33906  000158  6EDA               	movwf	fsr2h,c
 33907  00015A  C065  FFDF         	movff	HighISR@ackPacket+1,indf2
 33908  00015E                     i2l259:
 33909                           
 33910                           ; BSR set to: 0
 33911                           ;drv_mrf_miwi_mesh_89xa.c: 1432: }
 33912                           ;drv_mrf_miwi_mesh_89xa.c: 1434: RxPacket[BankIndex].PayloadLen = PacketLen;
 33913  00015E  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33914  000160  0D47               	mullw	71
 33915  000162  0E41               	movlw	low (_RxPacket+65)
 33916  000164  24F3               	addwf	prodl,w,c
 33917  000166  6ED9               	movwf	fsr2l,c
 33918  000168  0E03               	movlw	high (_RxPacket+65)
 33919  00016A  20F4               	addwfc	prodh,w,c
 33920  00016C  6EDA               	movwf	fsr2h,c
 33921  00016E  C070  FFDF         	movff	HighISR@PacketLen,indf2
 33922                           
 33923                           ; BSR set to: 0
 33924                           ;drv_mrf_miwi_mesh_89xa.c: 1451: {
 33925                           ;drv_mrf_miwi_mesh_89xa.c: 1452: uint8_t ackInfoIndex = 0xFF;
 33926  000172  696F               	setf	HighISR@ackInfoIndex& (0+255),b
 33927                           
 33928                           ; BSR set to: 0
 33929                           ;drv_mrf_miwi_mesh_89xa.c: 1453: bool PacketForMe=0;
 33930  000174  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 33931                           
 33932                           ;drv_mrf_miwi_mesh_89xa.c: 1454: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 33933  000176  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33934  000178  0D47               	mullw	71
 33935  00017A  0E01               	movlw	low (_RxPacket+1)
 33936  00017C  24F3               	addwf	prodl,w,c
 33937  00017E  6ED9               	movwf	fsr2l,c
 33938  000180  0E03               	movlw	high (_RxPacket+1)
 33939  000182  20F4               	addwfc	prodh,w,c
 33940  000184  6EDA               	movwf	fsr2h,c
 33941  000186  ACDF               	btfss	indf2,6,c
 33942  000188  D08F               	goto	i2l15554
 33943                           
 33944                           ; BSR set to: 3
 33945                           ;drv_mrf_miwi_mesh_89xa.c: 1455: {
 33946                           ;drv_mrf_miwi_mesh_89xa.c: 1456: uint16_t dstPan;
 33947                           ;drv_mrf_miwi_mesh_89xa.c: 1457: uint8_t *dPan=(uint8_t*)&dstPan;
 33948  00018A  0E68               	movlw	low HighISR@dstPan
 33949  00018C  0100               	movlb	0	; () banked
 33950  00018E  6F60               	movwf	HighISR@dPan& (0+255),b
 33951                           
 33952                           ; BSR set to: 0
 33953                           ;drv_mrf_miwi_mesh_89xa.c: 1458: for(i=0;i<2;i++)
 33954  000190  6B72               	clrf	HighISR@i& (0+255),b
 33955  000192                     i2l15510:
 33956                           
 33957                           ; BSR set to: 0
 33958                           ;drv_mrf_miwi_mesh_89xa.c: 1459: {
 33959                           ;drv_mrf_miwi_mesh_89xa.c: 1460: dPan[i]=RxPacket[BankIndex].Payload[2+i];
 33960  000192  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33961  000194  0D47               	mullw	71
 33962  000196  0E00               	movlw	low _RxPacket
 33963  000198  6E2C               	movwf	??_HighISR& (0+255),c
 33964  00019A  0E03               	movlw	high _RxPacket
 33965  00019C  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 33966  00019E  0E03               	movlw	3
 33967  0001A0  262C               	addwf	??_HighISR,f,c
 33968  0001A2  0E00               	movlw	0
 33969  0001A4  222D               	addwfc	??_HighISR+1,f,c
 33970  0001A6  50F3               	movf	prodl,w,c
 33971  0001A8  262C               	addwf	??_HighISR,f,c
 33972  0001AA  50F4               	movf	prodh,w,c
 33973  0001AC  222D               	addwfc	??_HighISR+1,f,c
 33974  0001AE  5172               	movf	HighISR@i& (0+255),w,b
 33975  0001B0  242C               	addwf	??_HighISR,w,c
 33976  0001B2  6ED9               	movwf	fsr2l,c
 33977  0001B4  0E00               	movlw	0
 33978  0001B6  202D               	addwfc	??_HighISR+1,w,c
 33979  0001B8  6EDA               	movwf	fsr2h,c
 33980  0001BA  5160               	movf	HighISR@dPan& (0+255),w,b
 33981  0001BC  2572               	addwf	HighISR@i& (0+255),w,b
 33982  0001BE  6EE1               	movwf	fsr1l,c
 33983  0001C0  6AE2               	clrf	fsr1h,c
 33984  0001C2  CFDF FFE7          	movff	indf2,indf1
 33985                           
 33986                           ; BSR set to: 0
 33987  0001C6  2B72               	incf	HighISR@i& (0+255),f,b
 33988                           
 33989                           ; BSR set to: 0
 33990  0001C8  0E01               	movlw	1
 33991  0001CA  6572               	cpfsgt	HighISR@i& (0+255),b
 33992  0001CC  D7E2               	goto	i2l15510
 33993                           
 33994                           ; BSR set to: 0
 33995                           ;drv_mrf_miwi_mesh_89xa.c: 1461: }
 33996                           ;drv_mrf_miwi_mesh_89xa.c: 1463: if( (dstPan==0xffff) || (dstPan==myPANID) || (myPANID==
      +                          0xffff) )
 33997  0001CE  2968               	incf	HighISR@dstPan& (0+255),w,b
 33998  0001D0  E102               	bnz	i2u1789_40
 33999  0001D2  2969               	incf	(HighISR@dstPan+1)& (0+255),w,b
 34000  0001D4  E00A               	bz	i2l15522
 34001  0001D6                     i2u1789_40:
 34002                           
 34003                           ; BSR set to: 0
 34004  0001D6  504D               	movf	_myPANID,w,c
 34005  0001D8  1968               	xorwf	HighISR@dstPan& (0+255),w,b
 34006  0001DA  E103               	bnz	i2u1790_40
 34007  0001DC  504E               	movf	_myPANID+1,w,c
 34008  0001DE  1969               	xorwf	(HighISR@dstPan+1)& (0+255),w,b
 34009  0001E0  E004               	bz	i2l15522
 34010  0001E2                     i2u1790_40:
 34011                           
 34012                           ; BSR set to: 0
 34013  0001E2  284D               	incf	_myPANID,w,c
 34014  0001E4  E155               	bnz	i2l15548
 34015  0001E6  284E               	incf	_myPANID+1,w,c
 34016  0001E8  E153               	bnz	i2l15548
 34017  0001EA                     i2l15522:
 34018                           
 34019                           ; BSR set to: 0
 34020                           ;drv_mrf_miwi_mesh_89xa.c: 1464: {
 34021                           ;drv_mrf_miwi_mesh_89xa.c: 1465: PacketForMe=1;
 34022  0001EA  0E01               	movlw	1
 34023  0001EC  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 34024                           
 34025                           ; BSR set to: 0
 34026                           ;drv_mrf_miwi_mesh_89xa.c: 1466: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 34027  0001EE  6B72               	clrf	HighISR@i& (0+255),b
 34028  0001F0  D020               	goto	i2l15532
 34029  0001F2                     i2l15526:
 34030                           
 34031                           ; BSR set to: 0
 34032                           ;drv_mrf_miwi_mesh_89xa.c: 1467: {
 34033                           ;drv_mrf_miwi_mesh_89xa.c: 1468: if( RxPacket[BankIndex].Payload[4+i] != MACInitParams.P
      +                          Address[i] )
 34034  0001F2  5172               	movf	HighISR@i& (0+255),w,b
 34035  0001F4  2437               	addwf	_MACInitParams+1,w,c
 34036  0001F6  6ED9               	movwf	fsr2l,c
 34037  0001F8  0E00               	movlw	0
 34038  0001FA  2038               	addwfc	_MACInitParams+2,w,c
 34039  0001FC  6EDA               	movwf	fsr2h,c
 34040  0001FE  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34041  000200  0D47               	mullw	71
 34042  000202  0E00               	movlw	low _RxPacket
 34043  000204  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 34044  000206  0E03               	movlw	high _RxPacket
 34045  000208  6E2E               	movwf	(??_HighISR+2)& (0+255),c
 34046  00020A  0E05               	movlw	5
 34047  00020C  262D               	addwf	??_HighISR+1,f,c
 34048  00020E  0E00               	movlw	0
 34049  000210  222E               	addwfc	??_HighISR+2,f,c
 34050  000212  50F3               	movf	prodl,w,c
 34051  000214  262D               	addwf	??_HighISR+1,f,c
 34052  000216  50F4               	movf	prodh,w,c
 34053  000218  222E               	addwfc	??_HighISR+2,f,c
 34054  00021A  5172               	movf	HighISR@i& (0+255),w,b
 34055  00021C  242D               	addwf	??_HighISR+1,w,c
 34056  00021E  6EE1               	movwf	fsr1l,c
 34057  000220  0E00               	movlw	0
 34058  000222  202E               	addwfc	??_HighISR+2,w,c
 34059  000224  6EE2               	movwf	fsr1h,c
 34060  000226  50DE               	movf	postinc2,w,c
 34061  000228  18E6               	xorwf	postinc1,w,c
 34062  00022A  E002               	bz	i2l15530
 34063                           
 34064                           ; BSR set to: 0
 34065                           ;drv_mrf_miwi_mesh_89xa.c: 1469: {
 34066                           ;drv_mrf_miwi_mesh_89xa.c: 1470: PacketForMe=0;
 34067  00022C  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 34068                           
 34069                           ;drv_mrf_miwi_mesh_89xa.c: 1471: break;
 34070  00022E  D009               	goto	i2l15534
 34071  000230                     i2l15530:
 34072                           
 34073                           ; BSR set to: 0
 34074  000230  2B72               	incf	HighISR@i& (0+255),f,b
 34075  000232                     i2l15532:
 34076                           
 34077                           ; BSR set to: 0
 34078  000232  3036               	rrcf	_MACInitParams,w,c
 34079  000234  32E8               	rrcf	wreg,f,c
 34080  000236  32E8               	rrcf	wreg,f,c
 34081  000238  0B0F               	andlw	15
 34082  00023A  6E2C               	movwf	??_HighISR& (0+255),c
 34083  00023C  502C               	movf	??_HighISR,w,c
 34084  00023E  5D72               	subwf	HighISR@i& (0+255),w,b
 34085  000240  E3D8               	bnc	i2l15526
 34086  000242                     i2l15534:
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;drv_mrf_miwi_mesh_89xa.c: 1472: }
 34090                           ;drv_mrf_miwi_mesh_89xa.c: 1473: }
 34091                           ;drv_mrf_miwi_mesh_89xa.c: 1474: if(PacketForMe==0)
 34092  000242  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 34093  000244  E125               	bnz	i2l15548
 34094                           
 34095                           ; BSR set to: 0
 34096                           ;drv_mrf_miwi_mesh_89xa.c: 1475: {
 34097                           ;drv_mrf_miwi_mesh_89xa.c: 1476: PacketForMe=1;
 34098  000246  0E01               	movlw	1
 34099  000248  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 34100                           
 34101                           ; BSR set to: 0
 34102                           ;drv_mrf_miwi_mesh_89xa.c: 1477: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 34103  00024A  6B72               	clrf	HighISR@i& (0+255),b
 34104  00024C  D019               	goto	i2l15546
 34105  00024E                     i2l15540:
 34106                           
 34107                           ; BSR set to: 0
 34108                           ;drv_mrf_miwi_mesh_89xa.c: 1478: {
 34109                           ;drv_mrf_miwi_mesh_89xa.c: 1480: if( RxPacket[BankIndex].Payload[4+i] != 0xff )
 34110  00024E  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34111  000250  0D47               	mullw	71
 34112  000252  0E00               	movlw	low _RxPacket
 34113  000254  6E2C               	movwf	??_HighISR& (0+255),c
 34114  000256  0E03               	movlw	high _RxPacket
 34115  000258  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 34116  00025A  0E05               	movlw	5
 34117  00025C  262C               	addwf	??_HighISR,f,c
 34118  00025E  0E00               	movlw	0
 34119  000260  222D               	addwfc	??_HighISR+1,f,c
 34120  000262  50F3               	movf	prodl,w,c
 34121  000264  262C               	addwf	??_HighISR,f,c
 34122  000266  50F4               	movf	prodh,w,c
 34123  000268  222D               	addwfc	??_HighISR+1,f,c
 34124  00026A  5172               	movf	HighISR@i& (0+255),w,b
 34125  00026C  242C               	addwf	??_HighISR,w,c
 34126  00026E  6ED9               	movwf	fsr2l,c
 34127  000270  0E00               	movlw	0
 34128  000272  202D               	addwfc	??_HighISR+1,w,c
 34129  000274  6EDA               	movwf	fsr2h,c
 34130  000276  28DE               	incf	postinc2,w,c
 34131  000278  E002               	bz	i2l15544
 34132                           
 34133                           ; BSR set to: 0
 34134                           ;drv_mrf_miwi_mesh_89xa.c: 1481: {
 34135                           ;drv_mrf_miwi_mesh_89xa.c: 1482: PacketForMe=0;
 34136  00027A  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 34137                           
 34138                           ;drv_mrf_miwi_mesh_89xa.c: 1483: break;
 34139  00027C  D009               	goto	i2l15548
 34140  00027E                     i2l15544:
 34141                           
 34142                           ; BSR set to: 0
 34143  00027E  2B72               	incf	HighISR@i& (0+255),f,b
 34144  000280                     i2l15546:
 34145                           
 34146                           ; BSR set to: 0
 34147  000280  3036               	rrcf	_MACInitParams,w,c
 34148  000282  32E8               	rrcf	wreg,f,c
 34149  000284  32E8               	rrcf	wreg,f,c
 34150  000286  0B0F               	andlw	15
 34151  000288  6E2C               	movwf	??_HighISR& (0+255),c
 34152  00028A  502C               	movf	??_HighISR,w,c
 34153  00028C  5D72               	subwf	HighISR@i& (0+255),w,b
 34154  00028E  E3DF               	bnc	i2l15540
 34155  000290                     i2l15548:
 34156                           
 34157                           ; BSR set to: 0
 34158                           ;drv_mrf_miwi_mesh_89xa.c: 1484: }
 34159                           ;drv_mrf_miwi_mesh_89xa.c: 1485: }
 34160                           ;drv_mrf_miwi_mesh_89xa.c: 1486: }
 34161                           ;drv_mrf_miwi_mesh_89xa.c: 1487: }
 34162                           ;drv_mrf_miwi_mesh_89xa.c: 1489: if(PacketForMe==0)
 34163  000290  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 34164  000292  E10A               	bnz	i2l15554
 34165                           
 34166                           ; BSR set to: 0
 34167                           ;drv_mrf_miwi_mesh_89xa.c: 1492: RxPacket[BankIndex].PayloadLen = 0;
 34168                           
 34169                           ; BSR set to: 0
 34170  000294  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34171  000296  0D47               	mullw	71
 34172  000298  0E41               	movlw	low (_RxPacket+65)
 34173  00029A  24F3               	addwf	prodl,w,c
 34174  00029C  6ED9               	movwf	fsr2l,c
 34175  00029E  0E03               	movlw	high (_RxPacket+65)
 34176  0002A0  20F4               	addwfc	prodh,w,c
 34177  0002A2  6EDA               	movwf	fsr2h,c
 34178  0002A4  6ADF               	clrf	indf2,c
 34179                           
 34180                           ;drv_mrf_miwi_mesh_89xa.c: 1493: goto IGNORE_HERE;
 34181  0002A6  D6F6               	goto	i2l15452
 34182  0002A8                     i2l15554:
 34183                           
 34184                           ;drv_mrf_miwi_mesh_89xa.c: 1494: }
 34185                           ;drv_mrf_miwi_mesh_89xa.c: 1495: }
 34186                           ;drv_mrf_miwi_mesh_89xa.c: 1498: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 34187  0002A8  0100               	movlb	0	; () banked
 34188  0002AA  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34189  0002AC  0D47               	mullw	71
 34190  0002AE  0E01               	movlw	low (_RxPacket+1)
 34191  0002B0  24F3               	addwf	prodl,w,c
 34192  0002B2  6ED9               	movwf	fsr2l,c
 34193  0002B4  0E03               	movlw	high (_RxPacket+1)
 34194  0002B6  20F4               	addwfc	prodh,w,c
 34195  0002B8  6EDA               	movwf	fsr2h,c
 34196  0002BA  AADF               	btfss	indf2,5,c
 34197  0002BC  D037               	goto	i2l280
 34198                           
 34199                           ; BSR set to: 3
 34200                           ;drv_mrf_miwi_mesh_89xa.c: 1499: {
 34201                           ;drv_mrf_miwi_mesh_89xa.c: 1501: for(i = 0; i < 2; i++)
 34202  0002BE  6B72               	clrf	HighISR@i& (0+255),b
 34203  0002C0                     i2l15562:
 34204                           
 34205                           ; BSR set to: 0
 34206                           ;drv_mrf_miwi_mesh_89xa.c: 1502: {
 34207                           ;drv_mrf_miwi_mesh_89xa.c: 1503: ackPacket[i] = MACTxBuffer[i];
 34208  0002C0  0E8E               	movlw	low _MACTxBuffer
 34209  0002C2  2572               	addwf	HighISR@i& (0+255),w,b
 34210  0002C4  6ED9               	movwf	fsr2l,c
 34211  0002C6  6ADA               	clrf	fsr2h,c
 34212  0002C8  0E03               	movlw	high _MACTxBuffer
 34213  0002CA  22DA               	addwfc	fsr2h,f,c
 34214  0002CC  5172               	movf	HighISR@i& (0+255),w,b
 34215  0002CE  0F64               	addlw	low HighISR@ackPacket
 34216  0002D0  6EE1               	movwf	fsr1l,c
 34217  0002D2  6AE2               	clrf	fsr1h,c
 34218  0002D4  CFDF FFE7          	movff	indf2,indf1
 34219                           
 34220                           ; BSR set to: 0
 34221  0002D8  2B72               	incf	HighISR@i& (0+255),f,b
 34222                           
 34223                           ; BSR set to: 0
 34224  0002DA  0E01               	movlw	1
 34225  0002DC  6572               	cpfsgt	HighISR@i& (0+255),b
 34226  0002DE  D7F0               	goto	i2l15562
 34227                           
 34228                           ; BSR set to: 0
 34229                           ;drv_mrf_miwi_mesh_89xa.c: 1504: }
 34230                           ;drv_mrf_miwi_mesh_89xa.c: 1505: MACTxBuffer[0] = 0x02 | 0x04;
 34231  0002E0  0E06               	movlw	6
 34232  0002E2  0103               	movlb	3	; () banked
 34233  0002E4  6F8E               	movwf	_MACTxBuffer& (0+255),b	;volatile
 34234                           
 34235                           ; BSR set to: 3
 34236                           ;drv_mrf_miwi_mesh_89xa.c: 1506: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 34237  0002E6  0100               	movlb	0	; () banked
 34238  0002E8  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34239  0002EA  0D47               	mullw	71
 34240  0002EC  0E02               	movlw	low (_RxPacket+2)
 34241  0002EE  24F3               	addwf	prodl,w,c
 34242  0002F0  6ED9               	movwf	fsr2l,c
 34243  0002F2  0E03               	movlw	high (_RxPacket+2)
 34244  0002F4  20F4               	addwfc	prodh,w,c
 34245  0002F6  6EDA               	movwf	fsr2h,c
 34246  0002F8  50DF               	movf	indf2,w,c
 34247  0002FA  0103               	movlb	3	; () banked
 34248  0002FC  6F8F               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 34249                           
 34250                           ; BSR set to: 3
 34251                           ;drv_mrf_miwi_mesh_89xa.c: 1507: INTCON3bits.INT1IF = 0;
 34252  0002FE  90F0               	bcf	intcon3,0,c	;volatile
 34253                           
 34254                           ; BSR set to: 3
 34255                           ;drv_mrf_miwi_mesh_89xa.c: 1508: TxPacket(2, 0);
 34256  000300  6A15               	clrf	i2TxPacket@CCA,c
 34257  000302  0E02               	movlw	2
 34258  000304  ECCF  F024         	call	i2_TxPacket
 34259                           
 34260                           ;drv_mrf_miwi_mesh_89xa.c: 1511: for(i = 0; i < 2; i++)
 34261  000308  0100               	movlb	0	; () banked
 34262  00030A  6B72               	clrf	HighISR@i& (0+255),b
 34263  00030C                     i2l15582:
 34264                           
 34265                           ; BSR set to: 0
 34266                           ;drv_mrf_miwi_mesh_89xa.c: 1512: {
 34267                           ;drv_mrf_miwi_mesh_89xa.c: 1513: MACTxBuffer[i] = ackPacket[i];
 34268  00030C  5172               	movf	HighISR@i& (0+255),w,b
 34269  00030E  0F64               	addlw	low HighISR@ackPacket
 34270  000310  6ED9               	movwf	fsr2l,c
 34271  000312  6ADA               	clrf	fsr2h,c
 34272  000314  0E8E               	movlw	low _MACTxBuffer
 34273  000316  2572               	addwf	HighISR@i& (0+255),w,b
 34274  000318  6EE1               	movwf	fsr1l,c
 34275  00031A  6AE2               	clrf	fsr1h,c
 34276  00031C  0E03               	movlw	high _MACTxBuffer
 34277  00031E  22E2               	addwfc	fsr1h,f,c
 34278  000320  CFDF FFE7          	movff	indf2,indf1
 34279                           
 34280                           ; BSR set to: 0
 34281  000324  2B72               	incf	HighISR@i& (0+255),f,b
 34282                           
 34283                           ; BSR set to: 0
 34284  000326  0E01               	movlw	1
 34285  000328  6572               	cpfsgt	HighISR@i& (0+255),b
 34286  00032A  D7F0               	goto	i2l15582
 34287  00032C                     i2l280:
 34288                           
 34289                           ;drv_mrf_miwi_mesh_89xa.c: 1514: }
 34290                           ;drv_mrf_miwi_mesh_89xa.c: 1515: }
 34291                           ;drv_mrf_miwi_mesh_89xa.c: 1519: for(i = 0; i < 5; i++)
 34292  00032C  0100               	movlb	0	; () banked
 34293  00032E  6B72               	clrf	HighISR@i& (0+255),b
 34294  000330                     i2l15592:
 34295                           
 34296                           ; BSR set to: 0
 34297                           ;drv_mrf_miwi_mesh_89xa.c: 1520: {
 34298                           ;drv_mrf_miwi_mesh_89xa.c: 1521: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[Ban
      +                          kIndex].Payload[1]) )
 34299  000330  5172               	movf	HighISR@i& (0+255),w,b
 34300  000332  0D06               	mullw	6
 34301  000334  0E00               	movlw	low _AckInfo
 34302  000336  24F3               	addwf	prodl,w,c
 34303  000338  6ED9               	movwf	fsr2l,c
 34304  00033A  0E02               	movlw	high _AckInfo
 34305  00033C  20F4               	addwfc	prodh,w,c
 34306  00033E  6EDA               	movwf	fsr2h,c
 34307  000340  50DF               	movf	indf2,w,c
 34308  000342  E027               	bz	i2l15598
 34309                           
 34310                           ; BSR set to: 0
 34311  000344  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34312  000346  0D47               	mullw	71
 34313  000348  0E02               	movlw	low (_RxPacket+2)
 34314  00034A  24F3               	addwf	prodl,w,c
 34315  00034C  6ED9               	movwf	fsr2l,c
 34316  00034E  0E03               	movlw	high (_RxPacket+2)
 34317  000350  20F4               	addwfc	prodh,w,c
 34318  000352  6EDA               	movwf	fsr2h,c
 34319  000354  5172               	movf	HighISR@i& (0+255),w,b
 34320  000356  0D06               	mullw	6
 34321  000358  0E01               	movlw	low (_AckInfo+1)
 34322  00035A  24F3               	addwf	prodl,w,c
 34323  00035C  6EE1               	movwf	fsr1l,c
 34324  00035E  0E02               	movlw	high (_AckInfo+1)
 34325  000360  20F4               	addwfc	prodh,w,c
 34326  000362  6EE2               	movwf	fsr1h,c
 34327  000364  50DE               	movf	postinc2,w,c
 34328  000366  18E6               	xorwf	postinc1,w,c
 34329  000368  E114               	bnz	i2l15598
 34330                           
 34331                           ; BSR set to: 0
 34332                           ;drv_mrf_miwi_mesh_89xa.c: 1522: {
 34333                           ;drv_mrf_miwi_mesh_89xa.c: 1523: AckInfo[i].startTick = MiWi_TickGetMs();
 34334  00036A  EC8E  F039         	call	i2_MiWi_TickGetMs	;wreg free
 34335  00036E  0100               	movlb	0	; () banked
 34336  000370  5172               	movf	HighISR@i& (0+255),w,b
 34337  000372  0D06               	mullw	6
 34338  000374  0E02               	movlw	low (_AckInfo+2)
 34339  000376  24F3               	addwf	prodl,w,c
 34340  000378  6ED9               	movwf	fsr2l,c
 34341  00037A  0E02               	movlw	high (_AckInfo+2)
 34342  00037C  20F4               	addwfc	prodh,w,c
 34343  00037E  6EDA               	movwf	fsr2h,c
 34344  000380  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 34345  000384  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 34346  000388  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 34347  00038C  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 34348                           
 34349                           ;drv_mrf_miwi_mesh_89xa.c: 1524: break;
 34350  000390  D012               	goto	i2l15608
 34351  000392                     i2l15598:
 34352                           
 34353                           ; BSR set to: 0
 34354                           ;drv_mrf_miwi_mesh_89xa.c: 1525: }
 34355                           ;drv_mrf_miwi_mesh_89xa.c: 1526: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 34356  000392  296F               	incf	HighISR@ackInfoIndex& (0+255),w,b
 34357  000394  E10C               	bnz	i2l15604
 34358                           
 34359                           ; BSR set to: 0
 34360  000396  5172               	movf	HighISR@i& (0+255),w,b
 34361  000398  0D06               	mullw	6
 34362  00039A  0E00               	movlw	low _AckInfo
 34363  00039C  24F3               	addwf	prodl,w,c
 34364  00039E  6ED9               	movwf	fsr2l,c
 34365  0003A0  0E02               	movlw	high _AckInfo
 34366  0003A2  20F4               	addwfc	prodh,w,c
 34367  0003A4  6EDA               	movwf	fsr2h,c
 34368  0003A6  50DF               	movf	indf2,w,c
 34369  0003A8  E102               	bnz	i2l15604
 34370                           
 34371                           ; BSR set to: 0
 34372                           ;drv_mrf_miwi_mesh_89xa.c: 1527: {
 34373                           ;drv_mrf_miwi_mesh_89xa.c: 1528: ackInfoIndex = i;
 34374  0003AA  C072  F06F         	movff	HighISR@i,HighISR@ackInfoIndex
 34375  0003AE                     i2l15604:
 34376                           
 34377                           ; BSR set to: 0
 34378  0003AE  2B72               	incf	HighISR@i& (0+255),f,b
 34379                           
 34380                           ; BSR set to: 0
 34381  0003B0  0E04               	movlw	4
 34382  0003B2  6572               	cpfsgt	HighISR@i& (0+255),b
 34383  0003B4  D7BD               	goto	i2l15592
 34384  0003B6                     i2l15608:
 34385                           
 34386                           ; BSR set to: 0
 34387                           ;drv_mrf_miwi_mesh_89xa.c: 1529: }
 34388                           ;drv_mrf_miwi_mesh_89xa.c: 1530: }
 34389                           ;drv_mrf_miwi_mesh_89xa.c: 1532: if( i >= 5 )
 34390  0003B6  0E04               	movlw	4
 34391  0003B8  6572               	cpfsgt	HighISR@i& (0+255),b
 34392  0003BA  D043               	goto	i2l15624
 34393                           
 34394                           ; BSR set to: 0
 34395                           ;drv_mrf_miwi_mesh_89xa.c: 1533: {
 34396                           ;drv_mrf_miwi_mesh_89xa.c: 1534: if( ackInfoIndex < 5 )
 34397  0003BC  0E05               	movlw	5
 34398  0003BE  616F               	cpfslt	HighISR@ackInfoIndex& (0+255),b
 34399  0003C0  D02F               	goto	i2l15618
 34400                           
 34401                           ; BSR set to: 0
 34402                           ;drv_mrf_miwi_mesh_89xa.c: 1535: {
 34403                           ;drv_mrf_miwi_mesh_89xa.c: 1536: AckInfo[ackInfoIndex].Valid = 1;
 34404  0003C2  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 34405  0003C4  0D06               	mullw	6
 34406  0003C6  0E00               	movlw	low _AckInfo
 34407  0003C8  24F3               	addwf	prodl,w,c
 34408  0003CA  6ED9               	movwf	fsr2l,c
 34409  0003CC  0E02               	movlw	high _AckInfo
 34410  0003CE  20F4               	addwfc	prodh,w,c
 34411  0003D0  6EDA               	movwf	fsr2h,c
 34412  0003D2  0E01               	movlw	1
 34413  0003D4  6EDF               	movwf	indf2,c
 34414                           
 34415                           ; BSR set to: 0
 34416                           ;drv_mrf_miwi_mesh_89xa.c: 1537: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload
      +                          [1];
 34417  0003D6  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34418  0003D8  0D47               	mullw	71
 34419  0003DA  0E02               	movlw	low (_RxPacket+2)
 34420  0003DC  24F3               	addwf	prodl,w,c
 34421  0003DE  6ED9               	movwf	fsr2l,c
 34422  0003E0  0E03               	movlw	high (_RxPacket+2)
 34423  0003E2  20F4               	addwfc	prodh,w,c
 34424  0003E4  6EDA               	movwf	fsr2h,c
 34425  0003E6  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 34426  0003E8  0D06               	mullw	6
 34427  0003EA  0E01               	movlw	low (_AckInfo+1)
 34428  0003EC  24F3               	addwf	prodl,w,c
 34429  0003EE  6EE1               	movwf	fsr1l,c
 34430  0003F0  0E02               	movlw	high (_AckInfo+1)
 34431  0003F2  20F4               	addwfc	prodh,w,c
 34432  0003F4  6EE2               	movwf	fsr1h,c
 34433  0003F6  CFDF FFE7          	movff	indf2,indf1
 34434                           
 34435                           ; BSR set to: 0
 34436                           ;drv_mrf_miwi_mesh_89xa.c: 1538: AckInfo[ackInfoIndex].startTick = MiWi_TickGetMs();
 34437  0003FA  EC8E  F039         	call	i2_MiWi_TickGetMs	;wreg free
 34438  0003FE  0100               	movlb	0	; () banked
 34439  000400  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 34440  000402  0D06               	mullw	6
 34441  000404  0E02               	movlw	low (_AckInfo+2)
 34442  000406  24F3               	addwf	prodl,w,c
 34443  000408  6ED9               	movwf	fsr2l,c
 34444  00040A  0E02               	movlw	high (_AckInfo+2)
 34445  00040C  20F4               	addwfc	prodh,w,c
 34446  00040E  6EDA               	movwf	fsr2h,c
 34447  000410  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 34448  000414  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 34449  000418  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 34450  00041C  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 34451  000420                     i2l15618:
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;drv_mrf_miwi_mesh_89xa.c: 1539: }
 34455                           ;drv_mrf_miwi_mesh_89xa.c: 1542: RxPacket[BankIndex].flags.bits.Valid = 1;
 34456  000420  5171               	movf	HighISR@BankIndex& (0+255),w,b
 34457  000422  0D47               	mullw	71
 34458  000424  0E00               	movlw	low _RxPacket
 34459  000426  24F3               	addwf	prodl,w,c
 34460  000428  6ED9               	movwf	fsr2l,c
 34461  00042A  0E03               	movlw	high _RxPacket
 34462  00042C  20F4               	addwfc	prodh,w,c
 34463  00042E  6EDA               	movwf	fsr2h,c
 34464  000430  0103               	movlb	3	; () banked
 34465  000432  80DF               	bsf	indf2,0,c
 34466  000434  D006               	goto	i2l15624
 34467  000436                     i2l15620:
 34468                           
 34469                           ; BSR set to: 0
 34470  000436  5161               	movf	HighISR@counter& (0+255),w,b
 34471  000438  1162               	iorwf	(HighISR@counter+1)& (0+255),w,b
 34472  00043A  E003               	bz	i2l15624
 34473  00043C  D640               	goto	i2l15462
 34474  00043E                     i2l15622:
 34475                           
 34476                           ;drv_mrf_miwi_mesh_89xa.c: 1557: else
 34477                           ;drv_mrf_miwi_mesh_89xa.c: 1558: {
 34478                           ;drv_mrf_miwi_mesh_89xa.c: 1560: IRQ1_Received = 1;
 34479  00043E  0E01               	movlw	1
 34480  000440  6E3B               	movwf	_IRQ1_Received,c	;volatile
 34481  000442                     i2l15624:
 34482                           
 34483                           ;drv_mrf_miwi_mesh_89xa.c: 1564: INTCON3bits.INT1IF = 0;
 34484  000442  90F0               	bcf	intcon3,0,c	;volatile
 34485                           
 34486                           ;drv_mrf_miwi_mesh_89xa.c: 1566: __nop();
 34487  000444  F000               	nop	
 34488  000446                     i2l15628:
 34489                           
 34490                           ;drv_mrf_miwi_mesh_89xa.c: 1567: }
 34491                           ;drv_mrf_miwi_mesh_89xa.c: 1587: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1
      +                          ))
 34492  000446  B4F2               	btfsc	intcon,2,c	;volatile
 34493  000448  AAF2               	btfss	intcon,5,c	;volatile
 34494  00044A  D018               	goto	i2l15646
 34495                           
 34496                           ;drv_mrf_miwi_mesh_89xa.c: 1588: {
 34497                           ;drv_mrf_miwi_mesh_89xa.c: 1589: uint16_t tmr = TMR0;
 34498  00044C  CFD6 F06C          	movff	4054,HighISR@tmr	;volatile
 34499  000450  CFD7 F06D          	movff	4055,HighISR@tmr+1	;volatile
 34500                           
 34501                           ;drv_mrf_miwi_mesh_89xa.c: 1590: t1extension++;
 34502  000454  0101               	movlb	1	; () banked
 34503  000456  2BC2               	incf	_t1extension& (0+255),f,b
 34504  000458  0E00               	movlw	0
 34505  00045A  23C3               	addwfc	(_t1extension+1)& (0+255),f,b
 34506  00045C  23C4               	addwfc	(_t1extension+2)& (0+255),f,b
 34507  00045E  23C5               	addwfc	(_t1extension+3)& (0+255),f,b
 34508                           
 34509                           ;drv_mrf_miwi_mesh_89xa.c: 1591: tmr += (0xffff - 6000);
 34510  000460  0100               	movlb	0	; () banked
 34511  000462  0E8F               	movlw	143
 34512  000464  276C               	addwf	HighISR@tmr& (0+255),f,b
 34513  000466  0EE8               	movlw	232
 34514  000468  236D               	addwfc	(HighISR@tmr+1)& (0+255),f,b
 34515                           
 34516                           ; BSR set to: 0
 34517                           ;drv_mrf_miwi_mesh_89xa.c: 1592: TMR0L = tmr;
 34518  00046A  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 34519                           
 34520                           ; BSR set to: 0
 34521                           ;drv_mrf_miwi_mesh_89xa.c: 1593: TMR0H = tmr >> 8;
 34522  00046E  C06D  FFD7         	movff	HighISR@tmr+1,4055	;volatile
 34523                           
 34524                           ; BSR set to: 0
 34525                           ;drv_mrf_miwi_mesh_89xa.c: 1594: TMR0L = tmr;
 34526  000472  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 34527                           
 34528                           ; BSR set to: 0
 34529                           ;drv_mrf_miwi_mesh_89xa.c: 1595: INTCONbits.TMR0IF = 0;
 34530  000476  94F2               	bcf	intcon,2,c	;volatile
 34531                           
 34532                           ; BSR set to: 0
 34533                           ;drv_mrf_miwi_mesh_89xa.c: 1596: t1fired=1;
 34534  000478  0E01               	movlw	1
 34535  00047A  6E44               	movwf	_t1fired,c	;volatile
 34536  00047C                     i2l15646:
 34537                           
 34538                           ;drv_mrf_miwi_mesh_89xa.c: 1597: }
 34539                           ;drv_mrf_miwi_mesh_89xa.c: 1599: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 34540  00047C  B2F2               	btfsc	intcon,1,c	;volatile
 34541  00047E  A8F2               	btfss	intcon,4,c	;volatile
 34542  000480  D001               	goto	i2l295
 34543                           
 34544                           ;drv_mrf_miwi_mesh_89xa.c: 1600: {
 34545                           ;drv_mrf_miwi_mesh_89xa.c: 1601: INTCONbits.INT0IF = 0;
 34546  000482  92F2               	bcf	intcon,1,c	;volatile
 34547  000484                     i2l295:
 34548  000484  C035  FFF4         	movff	??_HighISR+9,prodh
 34549  000488  C034  FFF3         	movff	??_HighISR+8,prodl
 34550  00048C  C033  FFDA         	movff	??_HighISR+7,fsr2h
 34551  000490  C032  FFD9         	movff	??_HighISR+6,fsr2l
 34552  000494  C031  FFE2         	movff	??_HighISR+5,fsr1h
 34553  000498  C030  FFE1         	movff	??_HighISR+4,fsr1l
 34554  00049C  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34555  00049E  0011               	retfie		f
 34556  0004A0                     __end_of_HighISR:
 34557                           	opt stack 0
 34558                           tblptru	equ	0xFF8
 34559                           tblptrh	equ	0xFF7
 34560                           tblptrl	equ	0xFF6
 34561                           tablat	equ	0xFF5
 34562                           prodh	equ	0xFF4
 34563                           prodl	equ	0xFF3
 34564                           intcon	equ	0xFF2
 34565                           intcon2	equ	0xFF1
 34566                           intcon3	equ	0xFF0
 34567                           indf0	equ	0xFEF
 34568                           postinc0	equ	0xFEE
 34569                           plusw0	equ	0xFEB
 34570                           fsr0h	equ	0xFEA
 34571                           fsr0l	equ	0xFE9
 34572                           wreg	equ	0xFE8
 34573                           indf1	equ	0xFE7
 34574                           postinc1	equ	0xFE6
 34575                           postdec1	equ	0xFE5
 34576                           plusw1	equ	0xFE3
 34577                           fsr1h	equ	0xFE2
 34578                           fsr1l	equ	0xFE1
 34579                           indf2	equ	0xFDF
 34580                           postinc2	equ	0xFDE
 34581                           postdec2	equ	0xFDD
 34582                           plusw2	equ	0xFDB
 34583                           fsr2h	equ	0xFDA
 34584                           fsr2l	equ	0xFD9
 34585                           status	equ	0xFD8
 34586                           
 34587 ;; *************** function i2_TxPacket *****************
 34588 ;; Defined at:
 34589 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34590 ;; Parameters:    Size  Location     Type
 34591 ;;  TxPacketLen     1    wreg     unsigned char 
 34592 ;;  CCA             1   20[COMRAM] unsigned char 
 34593 ;; Auto vars:     Size  Location     Type
 34594 ;;  TxPacketLen     1   25[COMRAM] unsigned char 
 34595 ;;  TxPacket        4   31[COMRAM] struct MIWI_TICK_t
 34596 ;;  TxPacket        4   27[COMRAM] struct MIWI_TICK_t
 34597 ;;  TxPacket        2   39[COMRAM] unsigned int 
 34598 ;;  TxPacket        2   35[COMRAM] unsigned int 
 34599 ;;  TxPacket        1   42[COMRAM] unsigned char 
 34600 ;;  TxPacket        1   41[COMRAM] unsigned char 
 34601 ;;  TxPacket        1   38[COMRAM] unsigned char 
 34602 ;;  TxPacket        1   37[COMRAM] unsigned char 
 34603 ;;  TxPacket        1   26[COMRAM] unsigned char 
 34604 ;;  TxPacket        1    0        unsigned char 
 34605 ;; Return value:  Size  Location     Type
 34606 ;;                  1    wreg      unsigned char 
 34607 ;; Registers used:
 34608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34609 ;; Tracked objects:
 34610 ;;		On entry : F/3
 34611 ;;		On exit  : 0/0
 34612 ;;		Unchanged: 0/0
 34613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34615 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34617 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34618 ;;Total ram usage:       23 bytes
 34619 ;; Hardware stack levels used:    1
 34620 ;; Hardware stack levels required when called:    3
 34621 ;; This function calls:
 34622 ;;		i2_DelayMs
 34623 ;;		i2_MiWi_TickGetMs
 34624 ;;		i2_RegisterRead
 34625 ;;		i2_RegisterSet
 34626 ;;		i2_SetRFMode
 34627 ;;		i2_WriteFIFO
 34628 ;;		i2_krnd
 34629 ;; This function is called by:
 34630 ;;		_HighISR
 34631 ;; This function uses a non-reentrant model
 34632 ;;
 34633                           
 34634                           	psect	text170
 34635  00499E                     __ptext170:
 34636                           	opt stack 0
 34637  00499E                     i2_TxPacket:
 34638                           	opt stack 13
 34639                           
 34640                           ;incstack = 0
 34641                           ;i2TxPacket@TxPacketLen stored from wreg
 34642  00499E  6E1A               	movwf	i2TxPacket@TxPacketLen,c
 34643                           
 34644                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 34645                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 34646                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 34647                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 34648                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 34649                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 34650  0049A0  0E03               	movlw	3
 34651  0049A2  6E26               	movwf	i2TxPacket@reTry,c
 34652                           
 34653                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 34654  0049A4  D094               	goto	i2l15408
 34655  0049A6                     i2l102:
 34656                           
 34657                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 34658                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 34659                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 34660  0049A6  6A27               	clrf	i2TxPacket@allowedTxFailure,c
 34661  0049A8                     i2l103:
 34662                           
 34663                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 34664  0049A8  6A42               	clrf	_hasAck,c	;volatile
 34665                           
 34666                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 34667  0049AA  96F0               	bcf	intcon3,3,c	;volatile
 34668                           
 34669                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 34670  0049AC  0E20               	movlw	32
 34671  0049AE  EC03  F034         	call	i2_SetRFMode
 34672                           
 34673                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 34674  0049B2  0E1A               	movlw	26
 34675  0049B4  6E04               	movwf	i2RegisterSet@setting+1,c
 34676  0049B6  0EC9               	movlw	201
 34677  0049B8  6E03               	movwf	i2RegisterSet@setting,c
 34678  0049BA  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 34679                           
 34680                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 34681  0049BE  501A               	movf	i2TxPacket@TxPacketLen,w,c
 34682  0049C0  ECEA  F03A         	call	i2_WriteFIFO
 34683                           
 34684                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 34685  0049C4  6A2B               	clrf	i2TxPacket@i,c
 34686  0049C6  D00A               	goto	i2l15346
 34687  0049C8                     i2l15342:
 34688                           
 34689                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 34690                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 34691  0049C8  0E8E               	movlw	low _MACTxBuffer
 34692  0049CA  242B               	addwf	i2TxPacket@i,w,c
 34693  0049CC  6ED9               	movwf	fsr2l,c
 34694  0049CE  6ADA               	clrf	fsr2h,c
 34695  0049D0  0E03               	movlw	high _MACTxBuffer
 34696  0049D2  22DA               	addwfc	fsr2h,f,c
 34697  0049D4  50DF               	movf	indf2,w,c
 34698  0049D6  ECEA  F03A         	call	i2_WriteFIFO
 34699  0049DA  2A2B               	incf	i2TxPacket@i,f,c
 34700  0049DC                     i2l15346:
 34701  0049DC  501A               	movf	i2TxPacket@TxPacketLen,w,c
 34702  0049DE  5C2B               	subwf	i2TxPacket@i,w,c
 34703  0049E0  E3F3               	bnc	i2l15342
 34704                           
 34705                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 34706  0049E2  5015               	movf	i2TxPacket@CCA,w,c
 34707  0049E4  E02D               	bz	i2l15376
 34708                           
 34709                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 34710                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 34711  0049E6  6A2B               	clrf	i2TxPacket@i,c
 34712  0049E8                     i2l15352:
 34713  0049E8  0E03               	movlw	3
 34714  0049EA  642B               	cpfsgt	i2TxPacket@i,c
 34715  0049EC  D001               	goto	i2l15356
 34716  0049EE  D028               	goto	i2l15376
 34717  0049F0                     i2l15356:
 34718                           
 34719                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 34720                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 34721  0049F0  0E28               	movlw	40
 34722  0049F2  EC36  F03A         	call	i2_RegisterRead
 34723  0049F6  6E2A               	movwf	i2TxPacket@rssival,c
 34724                           
 34725                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 34726  0049F8  90D8               	bcf	status,0,c
 34727  0049FA  322A               	rrcf	i2TxPacket@rssival,f,c
 34728                           
 34729                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 34730  0049FC  0E41               	movlw	65
 34731  0049FE  642A               	cpfsgt	i2TxPacket@rssival,c
 34732  004A00  D01F               	goto	i2l15376
 34733                           
 34734                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 34735                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 34736                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 34737                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 34738  004A02  EC90  F023         	call	i2_krnd	;wreg free
 34739  004A06  0E1F               	movlw	31
 34740  004A08  1601               	andwf	?i2_krnd,f,c
 34741  004A0A  6A02               	clrf	?i2_krnd+1,c
 34742  004A0C  0E08               	movlw	8
 34743  004A0E  2401               	addwf	?i2_krnd,w,c
 34744  004A10  6E24               	movwf	i2TxPacket@delay,c
 34745  004A12  0E00               	movlw	0
 34746  004A14  2002               	addwfc	?i2_krnd+1,w,c
 34747  004A16  6E25               	movwf	i2TxPacket@delay+1,c
 34748                           
 34749                           ; BSR set to: 1
 34750                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 34751  004A18  6A28               	clrf	i2TxPacket@j,c
 34752  004A1A  6A29               	clrf	i2TxPacket@j+1,c
 34753  004A1C  D00A               	goto	i2l15370
 34754  004A1E                     i2l112:
 34755  004A1E  0004               	clrwdt		;# 
 34756                           
 34757                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 34758  004A20  0E01               	movlw	1
 34759  004A22  6E09               	movwf	i2DelayMs@ms,c
 34760  004A24  6A0A               	clrf	i2DelayMs@ms+1,c
 34761  004A26  6A0B               	clrf	i2DelayMs@ms+2,c
 34762  004A28  6A0C               	clrf	i2DelayMs@ms+3,c
 34763  004A2A  EC99  F02F         	call	i2_DelayMs	;wreg free
 34764  004A2E  4A28               	infsnz	i2TxPacket@j,f,c
 34765  004A30  2A29               	incf	i2TxPacket@j+1,f,c
 34766  004A32                     i2l15370:
 34767  004A32  5024               	movf	i2TxPacket@delay,w,c
 34768  004A34  5C28               	subwf	i2TxPacket@j,w,c
 34769  004A36  5025               	movf	i2TxPacket@delay+1,w,c
 34770  004A38  5829               	subwfb	i2TxPacket@j+1,w,c
 34771  004A3A  E3F1               	bnc	i2l112
 34772  004A3C  2A2B               	incf	i2TxPacket@i,f,c
 34773  004A3E  D7D4               	goto	i2l15352
 34774  004A40                     i2l15376:
 34775                           
 34776                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 34777                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 34778                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 34779                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 34780  004A40  0E80               	movlw	128
 34781  004A42  EC03  F034         	call	i2_SetRFMode
 34782                           
 34783                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 34784  004A46  86F0               	bsf	intcon3,3,c	;volatile
 34785  004A48                     i2l15380:
 34786  004A48  503B               	movf	_IRQ1_Received,w,c	;volatile
 34787  004A4A  E102               	bnz	i2l119
 34788  004A4C  A0F0               	btfss	intcon3,0,c	;volatile
 34789  004A4E  D7FC               	goto	i2l15380
 34790  004A50                     i2l119:
 34791                           
 34792                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 34793                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 34794  004A50  6A3B               	clrf	_IRQ1_Received,c	;volatile
 34795                           
 34796                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 34797  004A52  0E20               	movlw	32
 34798  004A54  EC03  F034         	call	i2_SetRFMode
 34799                           
 34800                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 34801  004A58  0E60               	movlw	96
 34802  004A5A  EC03  F034         	call	i2_SetRFMode
 34803                           
 34804                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 34805  004A5E  0103               	movlb	3	; () banked
 34806  004A60  AB8E               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 34807  004A62  D00E               	goto	i2l15394
 34808                           
 34809                           ; BSR set to: 3
 34810                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 34811                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 34812  004A64  C38F  F041         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 34813                           
 34814                           ; BSR set to: 3
 34815                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 34816  004A68  EC8E  F039         	call	i2_MiWi_TickGetMs	;wreg free
 34817  004A6C  C00D  F01C         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t1
 34818  004A70  C00E  F01D         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t1+1
 34819  004A74  C00F  F01E         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t1+2
 34820  004A78  C010  F01F         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t1+3
 34821  004A7C                     i2l15392:
 34822                           
 34823                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 34824                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 34825  004A7C  5042               	movf	_hasAck,w,c	;volatile
 34826  004A7E  E003               	bz	i2l15396
 34827  004A80                     i2l15394:
 34828                           
 34829                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 34830                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 34831  004A80  0E01               	movlw	1
 34832  004A82  6E1B               	movwf	i2TxPacket@status,c
 34833                           
 34834                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 34835  004A84  0C01               	retlw	1
 34836  004A86                     i2l15396:
 34837                           
 34838                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 34839                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 34840  004A86  EC8E  F039         	call	i2_MiWi_TickGetMs	;wreg free
 34841  004A8A  C00D  F020         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t2
 34842  004A8E  C00E  F021         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t2+1
 34843  004A92  C00F  F022         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t2+2
 34844  004A96  C010  F023         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t2+3
 34845                           
 34846                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 34847  004A9A  501C               	movf	i2TxPacket@t1,w,c
 34848  004A9C  5C20               	subwf	i2TxPacket@t2,w,c
 34849  004A9E  6E16               	movwf	??i2_TxPacket& (0+255),c
 34850  004AA0  501D               	movf	i2TxPacket@t1+1,w,c
 34851  004AA2  5821               	subwfb	i2TxPacket@t2+1,w,c
 34852  004AA4  6E17               	movwf	(??i2_TxPacket+1)& (0+255),c
 34853  004AA6  501E               	movf	i2TxPacket@t1+2,w,c
 34854  004AA8  5822               	subwfb	i2TxPacket@t2+2,w,c
 34855  004AAA  6E18               	movwf	(??i2_TxPacket+2)& (0+255),c
 34856  004AAC  501F               	movf	i2TxPacket@t1+3,w,c
 34857  004AAE  5823               	subwfb	i2TxPacket@t2+3,w,c
 34858  004AB0  6E19               	movwf	(??i2_TxPacket+3)& (0+255),c
 34859  004AB2  5019               	movf	??i2_TxPacket+3,w,c
 34860  004AB4  1018               	iorwf	??i2_TxPacket+2,w,c
 34861  004AB6  1017               	iorwf	??i2_TxPacket+1,w,c
 34862  004AB8  E103               	bnz	i2u1767_40
 34863  004ABA  0E33               	movlw	51
 34864  004ABC  5C16               	subwf	??i2_TxPacket,w,c
 34865  004ABE  E3DE               	bnc	i2l15392
 34866  004AC0                     i2u1767_40:
 34867                           
 34868                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 34869                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 34870                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 34871  004AC0  2A27               	incf	i2TxPacket@allowedTxFailure,f,c
 34872  004AC2  0427               	decf	i2TxPacket@allowedTxFailure,w,c
 34873  004AC4  6E16               	movwf	??i2_TxPacket& (0+255),c
 34874  004AC6  0E04               	movlw	4
 34875  004AC8  6016               	cpfslt	??i2_TxPacket,c
 34876  004ACA  D001               	goto	i2l15408
 34877  004ACC  D76D               	goto	i2l103
 34878  004ACE                     i2l15408:
 34879  004ACE  0626               	decf	i2TxPacket@reTry,f,c
 34880  004AD0  2826               	incf	i2TxPacket@reTry,w,c
 34881  004AD2  E001 D768          	bnz	i2l102
 34882                           
 34883                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 34884                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 34885                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 34886  004AD6  6A1B               	clrf	i2TxPacket@status,c
 34887  004AD8  0012               	return		;funcret
 34888  004ADA                     __end_ofi2_TxPacket:
 34889                           	opt stack 0
 34890                           tblptru	equ	0xFF8
 34891                           tblptrh	equ	0xFF7
 34892                           tblptrl	equ	0xFF6
 34893                           tablat	equ	0xFF5
 34894                           prodh	equ	0xFF4
 34895                           prodl	equ	0xFF3
 34896                           intcon	equ	0xFF2
 34897                           intcon2	equ	0xFF1
 34898                           intcon3	equ	0xFF0
 34899                           indf0	equ	0xFEF
 34900                           postinc0	equ	0xFEE
 34901                           plusw0	equ	0xFEB
 34902                           fsr0h	equ	0xFEA
 34903                           fsr0l	equ	0xFE9
 34904                           wreg	equ	0xFE8
 34905                           indf1	equ	0xFE7
 34906                           postinc1	equ	0xFE6
 34907                           postdec1	equ	0xFE5
 34908                           plusw1	equ	0xFE3
 34909                           fsr1h	equ	0xFE2
 34910                           fsr1l	equ	0xFE1
 34911                           indf2	equ	0xFDF
 34912                           postinc2	equ	0xFDE
 34913                           postdec2	equ	0xFDD
 34914                           plusw2	equ	0xFDB
 34915                           fsr2h	equ	0xFDA
 34916                           fsr2l	equ	0xFD9
 34917                           status	equ	0xFD8
 34918                           
 34919 ;; *************** function i2_krnd *****************
 34920 ;; Defined at:
 34921 ;;		line 16 in file "../krnd.c"
 34922 ;; Parameters:    Size  Location     Type
 34923 ;;		None
 34924 ;; Auto vars:     Size  Location     Type
 34925 ;;  krnd            4    8[COMRAM] long 
 34926 ;; Return value:  Size  Location     Type
 34927 ;;                  4    0[COMRAM] unsigned long 
 34928 ;; Registers used:
 34929 ;;		wreg, status,2, status,0
 34930 ;; Tracked objects:
 34931 ;;		On entry : 0/3
 34932 ;;		On exit  : F/1
 34933 ;;		Unchanged: 0/0
 34934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34936 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34938 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34939 ;;Total ram usage:       12 bytes
 34940 ;; Hardware stack levels used:    1
 34941 ;; This function calls:
 34942 ;;		Nothing
 34943 ;; This function is called by:
 34944 ;;		i2_TxPacket
 34945 ;; This function uses a non-reentrant model
 34946 ;;
 34947                           
 34948                           	psect	text171
 34949  004720                     __ptext171:
 34950                           	opt stack 0
 34951  004720                     i2_krnd:
 34952                           	opt stack 15
 34953                           
 34954                           ;krnd.c: 18: int32_t t;
 34955                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 34956                           
 34957                           ;incstack = 0
 34958  004720  C049  F005         	movff	_y,??i2_krnd
 34959  004724  C04A  F006         	movff	_y+1,??i2_krnd+1
 34960  004728  C04B  F007         	movff	_y+2,??i2_krnd+2
 34961  00472C  C04C  F008         	movff	_y+3,??i2_krnd+3
 34962  004730  0E05               	movlw	5
 34963  004732                     i2u1679_45:
 34964  004732  90D8               	bcf	status,0,c
 34965  004734  3605               	rlcf	??i2_krnd,f,c
 34966  004736  3606               	rlcf	??i2_krnd+1,f,c
 34967  004738  3607               	rlcf	??i2_krnd+2,f,c
 34968  00473A  3608               	rlcf	??i2_krnd+3,f,c
 34969  00473C  2EE8               	decfsz	wreg,f,c
 34970  00473E  D7F9               	goto	i2u1679_45
 34971  004740  5005               	movf	??i2_krnd,w,c
 34972  004742  1A49               	xorwf	_y,f,c
 34973  004744  5006               	movf	??i2_krnd+1,w,c
 34974  004746  1A4A               	xorwf	_y+1,f,c
 34975  004748  5007               	movf	??i2_krnd+2,w,c
 34976  00474A  1A4B               	xorwf	_y+2,f,c
 34977  00474C  5008               	movf	??i2_krnd+3,w,c
 34978  00474E  1A4C               	xorwf	_y+3,f,c
 34979  004750  C049  F005         	movff	_y,??i2_krnd
 34980  004754  C04A  F006         	movff	_y+1,??i2_krnd+1
 34981  004758  C04B  F007         	movff	_y+2,??i2_krnd+2
 34982  00475C  C04C  F008         	movff	_y+3,??i2_krnd+3
 34983  004760  0E08               	movlw	8
 34984  004762  D005               	goto	i2u1680_40
 34985  004764                     i2u1680_45:
 34986  004764  90D8               	bcf	status,0,c
 34987  004766  3208               	rrcf	??i2_krnd+3,f,c
 34988  004768  3207               	rrcf	??i2_krnd+2,f,c
 34989  00476A  3206               	rrcf	??i2_krnd+1,f,c
 34990  00476C  3205               	rrcf	??i2_krnd,f,c
 34991  00476E                     i2u1680_40:
 34992  00476E  2EE8               	decfsz	wreg,f,c
 34993  004770  D7F9               	goto	i2u1680_45
 34994  004772  5005               	movf	??i2_krnd,w,c
 34995  004774  1A49               	xorwf	_y,f,c
 34996  004776  5006               	movf	??i2_krnd+1,w,c
 34997  004778  1A4A               	xorwf	_y+1,f,c
 34998  00477A  5007               	movf	??i2_krnd+2,w,c
 34999  00477C  1A4B               	xorwf	_y+2,f,c
 35000  00477E  5008               	movf	??i2_krnd+3,w,c
 35001  004780  1A4C               	xorwf	_y+3,f,c
 35002  004782  C049  F005         	movff	_y,??i2_krnd
 35003  004786  C04A  F006         	movff	_y+1,??i2_krnd+1
 35004  00478A  C04B  F007         	movff	_y+2,??i2_krnd+2
 35005  00478E  C04C  F008         	movff	_y+3,??i2_krnd+3
 35006  004792  0E16               	movlw	22
 35007  004794                     i2u1681_45:
 35008  004794  90D8               	bcf	status,0,c
 35009  004796  3605               	rlcf	??i2_krnd,f,c
 35010  004798  3606               	rlcf	??i2_krnd+1,f,c
 35011  00479A  3607               	rlcf	??i2_krnd+2,f,c
 35012  00479C  3608               	rlcf	??i2_krnd+3,f,c
 35013  00479E  2EE8               	decfsz	wreg,f,c
 35014  0047A0  D7F9               	goto	i2u1681_45
 35015  0047A2  5005               	movf	??i2_krnd,w,c
 35016  0047A4  1A49               	xorwf	_y,f,c
 35017  0047A6  5006               	movf	??i2_krnd+1,w,c
 35018  0047A8  1A4A               	xorwf	_y+1,f,c
 35019  0047AA  5007               	movf	??i2_krnd+2,w,c
 35020  0047AC  1A4B               	xorwf	_y+2,f,c
 35021  0047AE  5008               	movf	??i2_krnd+3,w,c
 35022  0047B0  1A4C               	xorwf	_y+3,f,c
 35023                           
 35024                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 35025  0047B2  5045               	movf	_w,w,c
 35026  0047B4  0101               	movlb	1	; () banked
 35027  0047B6  25F2               	addwf	_z& (0+255),w,b
 35028  0047B8  6E05               	movwf	??i2_krnd& (0+255),c
 35029  0047BA  5046               	movf	_w+1,w,c
 35030  0047BC  21F3               	addwfc	(_z+1)& (0+255),w,b
 35031  0047BE  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 35032  0047C0  5047               	movf	_w+2,w,c
 35033  0047C2  21F4               	addwfc	(_z+2)& (0+255),w,b
 35034  0047C4  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 35035  0047C6  5048               	movf	_w+3,w,c
 35036  0047C8  21F5               	addwfc	(_z+3)& (0+255),w,b
 35037  0047CA  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 35038  0047CC  0102               	movlb	2	; () banked
 35039  0047CE  514A               	movf	_c& (0+255),w,b
 35040  0047D0  2405               	addwf	??i2_krnd,w,c
 35041  0047D2  6E09               	movwf	i2krnd@t,c
 35042  0047D4  514B               	movf	(_c+1)& (0+255),w,b
 35043  0047D6  2006               	addwfc	??i2_krnd+1,w,c
 35044  0047D8  6E0A               	movwf	i2krnd@t+1,c
 35045  0047DA  514C               	movf	(_c+2)& (0+255),w,b
 35046  0047DC  2007               	addwfc	??i2_krnd+2,w,c
 35047  0047DE  6E0B               	movwf	i2krnd@t+2,c
 35048  0047E0  514D               	movf	(_c+3)& (0+255),w,b
 35049  0047E2  2008               	addwfc	??i2_krnd+3,w,c
 35050  0047E4  6E0C               	movwf	i2krnd@t+3,c
 35051                           
 35052                           ; BSR set to: 2
 35053  0047E6  C045  F1F2         	movff	_w,_z
 35054  0047EA  C046  F1F3         	movff	_w+1,_z+1
 35055  0047EE  C047  F1F4         	movff	_w+2,_z+2
 35056  0047F2  C048  F1F5         	movff	_w+3,_z+3
 35057  0047F6  0E01               	movlw	1
 35058  0047F8  AE0C               	btfss	i2krnd@t+3,7,c
 35059  0047FA  0E00               	movlw	0
 35060  0047FC  6F4A               	movwf	_c& (0+255),b
 35061  0047FE  6B4B               	clrf	(_c+1)& (0+255),b
 35062  004800  6B4C               	clrf	(_c+2)& (0+255),b
 35063  004802  6B4D               	clrf	(_c+3)& (0+255),b
 35064  004804  0E3A               	movlw	58
 35065  004806  1409               	andwf	i2krnd@t,w,c
 35066  004808  6E45               	movwf	_w,c
 35067  00480A  0E37               	movlw	55
 35068  00480C  140A               	andwf	i2krnd@t+1,w,c
 35069  00480E  6E46               	movwf	_w+1,c
 35070  004810  0EDE               	movlw	222
 35071  004812  140B               	andwf	i2krnd@t+2,w,c
 35072  004814  6E47               	movwf	_w+2,c
 35073  004816  0E54               	movlw	84
 35074  004818  140C               	andwf	i2krnd@t+3,w,c
 35075  00481A  6E48               	movwf	_w+3,c
 35076                           
 35077                           ;krnd.c: 24: x += 1832334820;
 35078  00481C  0EE4               	movlw	228
 35079  00481E  0101               	movlb	1	; () banked
 35080  004820  27EE               	addwf	_x& (0+255),f,b
 35081  004822  0E35               	movlw	53
 35082  004824  23EF               	addwfc	(_x+1)& (0+255),f,b
 35083  004826  0E37               	movlw	55
 35084  004828  23F0               	addwfc	(_x+2)& (0+255),f,b
 35085  00482A  0E6D               	movlw	109
 35086  00482C  23F1               	addwfc	(_x+3)& (0+255),f,b
 35087                           
 35088                           ;krnd.c: 26: return x + y + w;
 35089  00482E  5049               	movf	_y,w,c
 35090  004830  25EE               	addwf	_x& (0+255),w,b
 35091  004832  6E05               	movwf	??i2_krnd& (0+255),c
 35092  004834  504A               	movf	_y+1,w,c
 35093  004836  21EF               	addwfc	(_x+1)& (0+255),w,b
 35094  004838  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 35095  00483A  504B               	movf	_y+2,w,c
 35096  00483C  21F0               	addwfc	(_x+2)& (0+255),w,b
 35097  00483E  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 35098  004840  504C               	movf	_y+3,w,c
 35099  004842  21F1               	addwfc	(_x+3)& (0+255),w,b
 35100  004844  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 35101  004846  5045               	movf	_w,w,c
 35102  004848  2405               	addwf	??i2_krnd,w,c
 35103  00484A  6E01               	movwf	?i2_krnd,c
 35104  00484C  5046               	movf	_w+1,w,c
 35105  00484E  2006               	addwfc	??i2_krnd+1,w,c
 35106  004850  6E02               	movwf	?i2_krnd+1,c
 35107  004852  5047               	movf	_w+2,w,c
 35108  004854  2007               	addwfc	??i2_krnd+2,w,c
 35109  004856  6E03               	movwf	?i2_krnd+2,c
 35110  004858  5048               	movf	_w+3,w,c
 35111  00485A  2008               	addwfc	??i2_krnd+3,w,c
 35112  00485C  6E04               	movwf	?i2_krnd+3,c
 35113                           
 35114                           ; BSR set to: 1
 35115  00485E  0012               	return		;funcret
 35116  004860                     __end_ofi2_krnd:
 35117                           	opt stack 0
 35118                           tblptru	equ	0xFF8
 35119                           tblptrh	equ	0xFF7
 35120                           tblptrl	equ	0xFF6
 35121                           tablat	equ	0xFF5
 35122                           prodh	equ	0xFF4
 35123                           prodl	equ	0xFF3
 35124                           intcon	equ	0xFF2
 35125                           intcon2	equ	0xFF1
 35126                           intcon3	equ	0xFF0
 35127                           indf0	equ	0xFEF
 35128                           postinc0	equ	0xFEE
 35129                           plusw0	equ	0xFEB
 35130                           fsr0h	equ	0xFEA
 35131                           fsr0l	equ	0xFE9
 35132                           wreg	equ	0xFE8
 35133                           indf1	equ	0xFE7
 35134                           postinc1	equ	0xFE6
 35135                           postdec1	equ	0xFE5
 35136                           plusw1	equ	0xFE3
 35137                           fsr1h	equ	0xFE2
 35138                           fsr1l	equ	0xFE1
 35139                           indf2	equ	0xFDF
 35140                           postinc2	equ	0xFDE
 35141                           postdec2	equ	0xFDD
 35142                           plusw2	equ	0xFDB
 35143                           fsr2h	equ	0xFDA
 35144                           fsr2l	equ	0xFD9
 35145                           status	equ	0xFD8
 35146                           
 35147 ;; *************** function i2_WriteFIFO *****************
 35148 ;; Defined at:
 35149 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 35150 ;; Parameters:    Size  Location     Type
 35151 ;;  Data            1    wreg     unsigned char 
 35152 ;; Auto vars:     Size  Location     Type
 35153 ;;  Data            1    2[COMRAM] unsigned char 
 35154 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 35155 ;; Return value:  Size  Location     Type
 35156 ;;                  1    wreg      void 
 35157 ;; Registers used:
 35158 ;;		wreg, status,2, cstack
 35159 ;; Tracked objects:
 35160 ;;		On entry : 0/3
 35161 ;;		On exit  : 0/0
 35162 ;;		Unchanged: 0/0
 35163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35168 ;;Total ram usage:        2 bytes
 35169 ;; Hardware stack levels used:    1
 35170 ;; Hardware stack levels required when called:    1
 35171 ;; This function calls:
 35172 ;;		i2_SPIPut
 35173 ;; This function is called by:
 35174 ;;		i2_TxPacket
 35175 ;; This function uses a non-reentrant model
 35176 ;;
 35177                           
 35178                           	psect	text172
 35179  0075D4                     __ptext172:
 35180                           	opt stack 0
 35181  0075D4                     i2_WriteFIFO:
 35182                           	opt stack 14
 35183                           
 35184                           ; BSR set to: 1
 35185                           ;incstack = 0
 35186                           ;i2WriteFIFO@Data stored from wreg
 35187  0075D4  6E03               	movwf	i2WriteFIFO@Data,c
 35188                           
 35189                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 35190  0075D6  0E00               	movlw	0
 35191  0075D8  B6F0               	btfsc	intcon3,3,c	;volatile
 35192  0075DA  0E01               	movlw	1
 35193  0075DC  6E04               	movwf	i2WriteFIFO@IRQ1select,c
 35194                           
 35195                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 35196  0075DE  96F0               	bcf	intcon3,3,c	;volatile
 35197                           
 35198                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 35199  0075E0  9A89               	bcf	3977,5,c	;volatile
 35200                           
 35201                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 35202  0075E2  5003               	movf	i2WriteFIFO@Data,w,c
 35203  0075E4  ECA9  F03B         	call	i2_SPIPut
 35204                           
 35205                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 35206  0075E8  8A89               	bsf	3977,5,c	;volatile
 35207                           
 35208                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 35209  0075EA  B004               	btfsc	i2WriteFIFO@IRQ1select,0,c
 35210  0075EC  D002               	bra	i2u1678_45
 35211  0075EE  96F0               	bcf	intcon3,3,c	;volatile
 35212  0075F0  D001               	bra	i2u1678_46
 35213  0075F2                     i2u1678_45:
 35214  0075F2  86F0               	bsf	intcon3,3,c	;volatile
 35215  0075F4                     i2u1678_46:
 35216  0075F4  0012               	return		;funcret
 35217  0075F6                     __end_ofi2_WriteFIFO:
 35218                           	opt stack 0
 35219                           tblptru	equ	0xFF8
 35220                           tblptrh	equ	0xFF7
 35221                           tblptrl	equ	0xFF6
 35222                           tablat	equ	0xFF5
 35223                           prodh	equ	0xFF4
 35224                           prodl	equ	0xFF3
 35225                           intcon	equ	0xFF2
 35226                           intcon2	equ	0xFF1
 35227                           intcon3	equ	0xFF0
 35228                           indf0	equ	0xFEF
 35229                           postinc0	equ	0xFEE
 35230                           plusw0	equ	0xFEB
 35231                           fsr0h	equ	0xFEA
 35232                           fsr0l	equ	0xFE9
 35233                           wreg	equ	0xFE8
 35234                           indf1	equ	0xFE7
 35235                           postinc1	equ	0xFE6
 35236                           postdec1	equ	0xFE5
 35237                           plusw1	equ	0xFE3
 35238                           fsr1h	equ	0xFE2
 35239                           fsr1l	equ	0xFE1
 35240                           indf2	equ	0xFDF
 35241                           postinc2	equ	0xFDE
 35242                           postdec2	equ	0xFDD
 35243                           plusw2	equ	0xFDB
 35244                           fsr2h	equ	0xFDA
 35245                           fsr2l	equ	0xFD9
 35246                           status	equ	0xFD8
 35247                           
 35248 ;; *************** function i2_SetRFMode *****************
 35249 ;; Defined at:
 35250 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 35251 ;; Parameters:    Size  Location     Type
 35252 ;;  mode            1    wreg     unsigned char 
 35253 ;; Auto vars:     Size  Location     Type
 35254 ;;  mode            1    5[COMRAM] unsigned char 
 35255 ;; Return value:  Size  Location     Type
 35256 ;;                  1    wreg      void 
 35257 ;; Registers used:
 35258 ;;		wreg, status,2, status,0, cstack
 35259 ;; Tracked objects:
 35260 ;;		On entry : 0/3
 35261 ;;		On exit  : 0/0
 35262 ;;		Unchanged: 0/0
 35263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35268 ;;Total ram usage:        1 bytes
 35269 ;; Hardware stack levels used:    1
 35270 ;; Hardware stack levels required when called:    2
 35271 ;; This function calls:
 35272 ;;		i2_RegisterSet
 35273 ;; This function is called by:
 35274 ;;		i2_TxPacket
 35275 ;; This function uses a non-reentrant model
 35276 ;;
 35277                           
 35278                           	psect	text173
 35279  006806                     __ptext173:
 35280                           	opt stack 0
 35281  006806                     i2_SetRFMode:
 35282                           	opt stack 13
 35283                           
 35284                           ;incstack = 0
 35285                           ;i2SetRFMode@mode stored from wreg
 35286  006806  6E06               	movwf	i2SetRFMode@mode,c
 35287                           
 35288                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 35289  006808  D027               	goto	i2l14714
 35290  00680A                     i2l14692:
 35291                           
 35292                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 35293  00680A  6A04               	clrf	i2RegisterSet@setting+1,c
 35294  00680C  0E8E               	movlw	142
 35295  00680E  6E03               	movwf	i2RegisterSet@setting,c
 35296  006810  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 35297                           
 35298                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 35299  006814  0E80               	movlw	128
 35300  006816  6E3D               	movwf	_RF_Mode,c
 35301                           
 35302                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 35303  006818  0C80               	retlw	128
 35304  00681A                     i2l14696:
 35305                           
 35306                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 35307  00681A  6A04               	clrf	i2RegisterSet@setting+1,c
 35308  00681C  0E6E               	movlw	110
 35309  00681E  6E03               	movwf	i2RegisterSet@setting,c
 35310  006820  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 35311                           
 35312                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 35313  006824  0E60               	movlw	96
 35314  006826  6E3D               	movwf	_RF_Mode,c
 35315                           
 35316                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 35317  006828  0C60               	retlw	96
 35318  00682A                     i2l14700:
 35319                           
 35320                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 35321  00682A  6A04               	clrf	i2RegisterSet@setting+1,c
 35322  00682C  0E4E               	movlw	78
 35323  00682E  6E03               	movwf	i2RegisterSet@setting,c
 35324  006830  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 35325                           
 35326                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 35327  006834  0E40               	movlw	64
 35328  006836  6E3D               	movwf	_RF_Mode,c
 35329                           
 35330                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 35331  006838  0C40               	retlw	64
 35332  00683A                     i2l14704:
 35333                           
 35334                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 35335  00683A  6A04               	clrf	i2RegisterSet@setting+1,c
 35336  00683C  0E2E               	movlw	46
 35337  00683E  6E03               	movwf	i2RegisterSet@setting,c
 35338  006840  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 35339                           
 35340                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 35341  006844  0E20               	movlw	32
 35342  006846  6E3D               	movwf	_RF_Mode,c
 35343                           
 35344                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 35345  006848  0C20               	retlw	32
 35346  00684A                     i2l14708:
 35347                           
 35348                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 35349  00684A  6A04               	clrf	i2RegisterSet@setting+1,c
 35350  00684C  0E0E               	movlw	14
 35351  00684E  6E03               	movwf	i2RegisterSet@setting,c
 35352  006850  ECD7  F03A         	call	i2_RegisterSet	;wreg free
 35353                           
 35354                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 35355  006854  6A3D               	clrf	_RF_Mode,c
 35356                           
 35357                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 35358  006856  0012               	return	
 35359  006858                     i2l14714:
 35360  006858  5006               	movf	i2SetRFMode@mode,w,c
 35361                           
 35362                           ; Switch size 1, requested type "speed"
 35363                           ; Number of cases is 5, Range of values is 0 to 128
 35364                           ; switch strategies available:
 35365                           ; Name         Instructions Cycles
 35366                           ; simple_byte           16     9 (average)
 35367                           ;	Chosen strategy is simple_byte
 35368  00685A  E0F7               	bz	i2l14708
 35369  00685C  0A20               	xorlw	32	; case 32
 35370  00685E  E0ED               	bz	i2l14704
 35371  006860  0A60               	xorlw	96	; case 64
 35372  006862  E0E3               	bz	i2l14700
 35373  006864  0A20               	xorlw	32	; case 96
 35374  006866  E0D9               	bz	i2l14696
 35375  006868  0AE0               	xorlw	224	; case 128
 35376  00686A  E0CF               	bz	i2l14692
 35377  00686C  0012               	return		;funcret
 35378  00686E                     __end_ofi2_SetRFMode:
 35379                           	opt stack 0
 35380                           tblptru	equ	0xFF8
 35381                           tblptrh	equ	0xFF7
 35382                           tblptrl	equ	0xFF6
 35383                           tablat	equ	0xFF5
 35384                           prodh	equ	0xFF4
 35385                           prodl	equ	0xFF3
 35386                           intcon	equ	0xFF2
 35387                           intcon2	equ	0xFF1
 35388                           intcon3	equ	0xFF0
 35389                           indf0	equ	0xFEF
 35390                           postinc0	equ	0xFEE
 35391                           plusw0	equ	0xFEB
 35392                           fsr0h	equ	0xFEA
 35393                           fsr0l	equ	0xFE9
 35394                           wreg	equ	0xFE8
 35395                           indf1	equ	0xFE7
 35396                           postinc1	equ	0xFE6
 35397                           postdec1	equ	0xFE5
 35398                           plusw1	equ	0xFE3
 35399                           fsr1h	equ	0xFE2
 35400                           fsr1l	equ	0xFE1
 35401                           indf2	equ	0xFDF
 35402                           postinc2	equ	0xFDE
 35403                           postdec2	equ	0xFDD
 35404                           plusw2	equ	0xFDB
 35405                           fsr2h	equ	0xFDA
 35406                           fsr2l	equ	0xFD9
 35407                           status	equ	0xFD8
 35408                           
 35409 ;; *************** function i2_RegisterSet *****************
 35410 ;; Defined at:
 35411 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 35412 ;; Parameters:    Size  Location     Type
 35413 ;;  setting         2    2[COMRAM] unsigned int 
 35414 ;; Auto vars:     Size  Location     Type
 35415 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 35416 ;; Return value:  Size  Location     Type
 35417 ;;                  1    wreg      void 
 35418 ;; Registers used:
 35419 ;;		wreg, status,2, cstack
 35420 ;; Tracked objects:
 35421 ;;		On entry : 0/3
 35422 ;;		On exit  : 0/0
 35423 ;;		Unchanged: 0/0
 35424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35429 ;;Total ram usage:        3 bytes
 35430 ;; Hardware stack levels used:    1
 35431 ;; Hardware stack levels required when called:    1
 35432 ;; This function calls:
 35433 ;;		i2_SPIPut
 35434 ;; This function is called by:
 35435 ;;		i2_TxPacket
 35436 ;;		i2_SetRFMode
 35437 ;; This function uses a non-reentrant model
 35438 ;;
 35439                           
 35440                           	psect	text174
 35441  0075AE                     __ptext174:
 35442                           	opt stack 0
 35443  0075AE                     i2_RegisterSet:
 35444                           	opt stack 13
 35445                           
 35446                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 35447                           
 35448                           ;incstack = 0
 35449  0075AE  0E00               	movlw	0
 35450  0075B0  B6F0               	btfsc	intcon3,3,c	;volatile
 35451  0075B2  0E01               	movlw	1
 35452  0075B4  6E05               	movwf	i2RegisterSet@IRQ1select,c
 35453                           
 35454                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 35455  0075B6  96F0               	bcf	intcon3,3,c	;volatile
 35456                           
 35457                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 35458  0075B8  928C               	bcf	3980,1,c	;volatile
 35459                           
 35460                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 35461                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 35462  0075BA  5004               	movf	i2RegisterSet@setting+1,w,c
 35463  0075BC  ECA9  F03B         	call	i2_SPIPut
 35464                           
 35465                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 35466  0075C0  5003               	movf	i2RegisterSet@setting,w,c
 35467  0075C2  ECA9  F03B         	call	i2_SPIPut
 35468                           
 35469                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 35470  0075C6  828C               	bsf	3980,1,c	;volatile
 35471                           
 35472                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 35473  0075C8  B005               	btfsc	i2RegisterSet@IRQ1select,0,c
 35474  0075CA  D002               	bra	i2u1656_45
 35475  0075CC  96F0               	bcf	intcon3,3,c	;volatile
 35476  0075CE  D001               	bra	i2u1656_46
 35477  0075D0                     i2u1656_45:
 35478  0075D0  86F0               	bsf	intcon3,3,c	;volatile
 35479  0075D2                     i2u1656_46:
 35480  0075D2  0012               	return		;funcret
 35481  0075D4                     __end_ofi2_RegisterSet:
 35482                           	opt stack 0
 35483                           tblptru	equ	0xFF8
 35484                           tblptrh	equ	0xFF7
 35485                           tblptrl	equ	0xFF6
 35486                           tablat	equ	0xFF5
 35487                           prodh	equ	0xFF4
 35488                           prodl	equ	0xFF3
 35489                           intcon	equ	0xFF2
 35490                           intcon2	equ	0xFF1
 35491                           intcon3	equ	0xFF0
 35492                           indf0	equ	0xFEF
 35493                           postinc0	equ	0xFEE
 35494                           plusw0	equ	0xFEB
 35495                           fsr0h	equ	0xFEA
 35496                           fsr0l	equ	0xFE9
 35497                           wreg	equ	0xFE8
 35498                           indf1	equ	0xFE7
 35499                           postinc1	equ	0xFE6
 35500                           postdec1	equ	0xFE5
 35501                           plusw1	equ	0xFE3
 35502                           fsr1h	equ	0xFE2
 35503                           fsr1l	equ	0xFE1
 35504                           indf2	equ	0xFDF
 35505                           postinc2	equ	0xFDE
 35506                           postdec2	equ	0xFDD
 35507                           plusw2	equ	0xFDB
 35508                           fsr2h	equ	0xFDA
 35509                           fsr2l	equ	0xFD9
 35510                           status	equ	0xFD8
 35511                           
 35512 ;; *************** function i2_RegisterRead *****************
 35513 ;; Defined at:
 35514 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 35515 ;; Parameters:    Size  Location     Type
 35516 ;;  address         1    wreg     unsigned char 
 35517 ;; Auto vars:     Size  Location     Type
 35518 ;;  address         1    2[COMRAM] unsigned char 
 35519 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 35520 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 35521 ;; Return value:  Size  Location     Type
 35522 ;;                  1    wreg      unsigned char 
 35523 ;; Registers used:
 35524 ;;		wreg, status,2, status,0, cstack
 35525 ;; Tracked objects:
 35526 ;;		On entry : 0/0
 35527 ;;		On exit  : 0/0
 35528 ;;		Unchanged: 0/0
 35529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35533 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35534 ;;Total ram usage:        3 bytes
 35535 ;; Hardware stack levels used:    1
 35536 ;; Hardware stack levels required when called:    2
 35537 ;; This function calls:
 35538 ;;		i2_SPIGet
 35539 ;;		i2_SPIPut
 35540 ;; This function is called by:
 35541 ;;		_HighISR
 35542 ;;		i2_TxPacket
 35543 ;; This function uses a non-reentrant model
 35544 ;;
 35545                           
 35546                           	psect	text175
 35547  00746C                     __ptext175:
 35548                           	opt stack 0
 35549  00746C                     i2_RegisterRead:
 35550                           	opt stack 13
 35551                           
 35552                           ;incstack = 0
 35553                           ;i2RegisterRead@address stored from wreg
 35554  00746C  6E03               	movwf	i2RegisterRead@address,c
 35555                           
 35556                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 35557                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 35558  00746E  0E00               	movlw	0
 35559  007470  B6F0               	btfsc	intcon3,3,c	;volatile
 35560  007472  0E01               	movlw	1
 35561  007474  6E05               	movwf	i2RegisterRead@IRQ1select,c
 35562                           
 35563                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 35564  007476  96F0               	bcf	intcon3,3,c	;volatile
 35565                           
 35566                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 35567  007478  928C               	bcf	3980,1,c	;volatile
 35568                           
 35569                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 35570  00747A  8C03               	bsf	i2RegisterRead@address,6,c
 35571                           
 35572                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 35573  00747C  5003               	movf	i2RegisterRead@address,w,c
 35574  00747E  ECA9  F03B         	call	i2_SPIPut
 35575                           
 35576                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 35577  007482  EC2B  F03C         	call	i2_SPIGet	;wreg free
 35578  007486  6E04               	movwf	i2RegisterRead@value,c
 35579                           
 35580                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 35581  007488  828C               	bsf	3980,1,c	;volatile
 35582                           
 35583                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 35584  00748A  B005               	btfsc	i2RegisterRead@IRQ1select,0,c
 35585  00748C  D002               	bra	i2u1677_45
 35586  00748E  96F0               	bcf	intcon3,3,c	;volatile
 35587  007490  D001               	bra	i2u1677_46
 35588  007492                     i2u1677_45:
 35589  007492  86F0               	bsf	intcon3,3,c	;volatile
 35590  007494                     i2u1677_46:
 35591                           
 35592                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 35593  007494  5004               	movf	i2RegisterRead@value,w,c
 35594  007496  0012               	return		;funcret
 35595  007498                     __end_ofi2_RegisterRead:
 35596                           	opt stack 0
 35597                           tblptru	equ	0xFF8
 35598                           tblptrh	equ	0xFF7
 35599                           tblptrl	equ	0xFF6
 35600                           tablat	equ	0xFF5
 35601                           prodh	equ	0xFF4
 35602                           prodl	equ	0xFF3
 35603                           intcon	equ	0xFF2
 35604                           intcon2	equ	0xFF1
 35605                           intcon3	equ	0xFF0
 35606                           indf0	equ	0xFEF
 35607                           postinc0	equ	0xFEE
 35608                           plusw0	equ	0xFEB
 35609                           fsr0h	equ	0xFEA
 35610                           fsr0l	equ	0xFE9
 35611                           wreg	equ	0xFE8
 35612                           indf1	equ	0xFE7
 35613                           postinc1	equ	0xFE6
 35614                           postdec1	equ	0xFE5
 35615                           plusw1	equ	0xFE3
 35616                           fsr1h	equ	0xFE2
 35617                           fsr1l	equ	0xFE1
 35618                           indf2	equ	0xFDF
 35619                           postinc2	equ	0xFDE
 35620                           postdec2	equ	0xFDD
 35621                           plusw2	equ	0xFDB
 35622                           fsr2h	equ	0xFDA
 35623                           fsr2l	equ	0xFD9
 35624                           status	equ	0xFD8
 35625                           
 35626 ;; *************** function i2_SPIGet *****************
 35627 ;; Defined at:
 35628 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 35629 ;; Parameters:    Size  Location     Type
 35630 ;;		None
 35631 ;; Auto vars:     Size  Location     Type
 35632 ;;		None
 35633 ;; Return value:  Size  Location     Type
 35634 ;;                  1    wreg      unsigned char 
 35635 ;; Registers used:
 35636 ;;		wreg, status,2, cstack
 35637 ;; Tracked objects:
 35638 ;;		On entry : 0/1
 35639 ;;		On exit  : 0/0
 35640 ;;		Unchanged: 0/0
 35641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35646 ;;Total ram usage:        0 bytes
 35647 ;; Hardware stack levels used:    1
 35648 ;; Hardware stack levels required when called:    1
 35649 ;; This function calls:
 35650 ;;		i2_SPIPut
 35651 ;; This function is called by:
 35652 ;;		_HighISR
 35653 ;;		i2_RegisterRead
 35654 ;; This function uses a non-reentrant model
 35655 ;;
 35656                           
 35657                           	psect	text176
 35658  007856                     __ptext176:
 35659                           	opt stack 0
 35660  007856                     i2_SPIGet:
 35661                           	opt stack 13
 35662                           
 35663                           ;spi.c: 310: SPIPut(0x00);
 35664                           
 35665                           ;incstack = 0
 35666  007856  0E00               	movlw	0
 35667  007858  ECA9  F03B         	call	i2_SPIPut
 35668                           
 35669                           ;spi.c: 311: return SSPBUF;
 35670  00785C  50C9               	movf	4041,w,c	;volatile
 35671  00785E  0012               	return		;funcret
 35672  007860                     __end_ofi2_SPIGet:
 35673                           	opt stack 0
 35674                           tblptru	equ	0xFF8
 35675                           tblptrh	equ	0xFF7
 35676                           tblptrl	equ	0xFF6
 35677                           tablat	equ	0xFF5
 35678                           prodh	equ	0xFF4
 35679                           prodl	equ	0xFF3
 35680                           intcon	equ	0xFF2
 35681                           intcon2	equ	0xFF1
 35682                           intcon3	equ	0xFF0
 35683                           indf0	equ	0xFEF
 35684                           postinc0	equ	0xFEE
 35685                           plusw0	equ	0xFEB
 35686                           fsr0h	equ	0xFEA
 35687                           fsr0l	equ	0xFE9
 35688                           wreg	equ	0xFE8
 35689                           indf1	equ	0xFE7
 35690                           postinc1	equ	0xFE6
 35691                           postdec1	equ	0xFE5
 35692                           plusw1	equ	0xFE3
 35693                           fsr1h	equ	0xFE2
 35694                           fsr1l	equ	0xFE1
 35695                           indf2	equ	0xFDF
 35696                           postinc2	equ	0xFDE
 35697                           postdec2	equ	0xFDD
 35698                           plusw2	equ	0xFDB
 35699                           fsr2h	equ	0xFDA
 35700                           fsr2l	equ	0xFD9
 35701                           status	equ	0xFD8
 35702                           
 35703 ;; *************** function i2_SPIPut *****************
 35704 ;; Defined at:
 35705 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 35706 ;; Parameters:    Size  Location     Type
 35707 ;;  v               1    wreg     unsigned char 
 35708 ;; Auto vars:     Size  Location     Type
 35709 ;;  v               1    1[COMRAM] unsigned char 
 35710 ;;  SPIPut          1    0        volatile unsigned char 
 35711 ;; Return value:  Size  Location     Type
 35712 ;;                  1    wreg      void 
 35713 ;; Registers used:
 35714 ;;		wreg
 35715 ;; Tracked objects:
 35716 ;;		On entry : 0/3
 35717 ;;		On exit  : 0/0
 35718 ;;		Unchanged: 0/0
 35719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35724 ;;Total ram usage:        2 bytes
 35725 ;; Hardware stack levels used:    1
 35726 ;; This function calls:
 35727 ;;		Nothing
 35728 ;; This function is called by:
 35729 ;;		i2_RegisterSet
 35730 ;;		i2_RegisterRead
 35731 ;;		i2_WriteFIFO
 35732 ;;		i2_SPIGet
 35733 ;; This function uses a non-reentrant model
 35734 ;;
 35735                           
 35736                           	psect	text177
 35737  007752                     __ptext177:
 35738                           	opt stack 0
 35739  007752                     i2_SPIPut:
 35740                           	opt stack 14
 35741                           
 35742                           ;incstack = 0
 35743                           ;i2SPIPut@v stored from wreg
 35744  007752  6E02               	movwf	i2SPIPut@v,c
 35745                           
 35746                           ;spi.c: 228: volatile uint8_t i;
 35747                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 35748  007754  969E               	bcf	3998,3,c	;volatile
 35749  007756  50C9               	movf	4041,w,c	;volatile
 35750  007758                     i2l427:
 35751                           
 35752                           ;spi.c: 256: {
 35753                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 35754  007758  9EC6               	bcf	4038,7,c	;volatile
 35755                           
 35756                           ;spi.c: 258: SSPBUF = v;
 35757  00775A  C002  FFC9         	movff	i2SPIPut@v,4041	;volatile
 35758                           
 35759                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 35760  00775E  BEC6               	btfsc	4038,7,c	;volatile
 35761  007760  D7FB               	goto	i2l427
 35762  007762                     i2l429:
 35763  007762  B69E               	btfsc	3998,3,c	;volatile
 35764  007764  0012               	return		;funcret
 35765  007766  D7FD               	goto	i2l429
 35766  007768                     __end_ofi2_SPIPut:
 35767                           	opt stack 0
 35768                           tblptru	equ	0xFF8
 35769                           tblptrh	equ	0xFF7
 35770                           tblptrl	equ	0xFF6
 35771                           tablat	equ	0xFF5
 35772                           prodh	equ	0xFF4
 35773                           prodl	equ	0xFF3
 35774                           intcon	equ	0xFF2
 35775                           intcon2	equ	0xFF1
 35776                           intcon3	equ	0xFF0
 35777                           indf0	equ	0xFEF
 35778                           postinc0	equ	0xFEE
 35779                           plusw0	equ	0xFEB
 35780                           fsr0h	equ	0xFEA
 35781                           fsr0l	equ	0xFE9
 35782                           wreg	equ	0xFE8
 35783                           indf1	equ	0xFE7
 35784                           postinc1	equ	0xFE6
 35785                           postdec1	equ	0xFE5
 35786                           plusw1	equ	0xFE3
 35787                           fsr1h	equ	0xFE2
 35788                           fsr1l	equ	0xFE1
 35789                           indf2	equ	0xFDF
 35790                           postinc2	equ	0xFDE
 35791                           postdec2	equ	0xFDD
 35792                           plusw2	equ	0xFDB
 35793                           fsr2h	equ	0xFDA
 35794                           fsr2l	equ	0xFD9
 35795                           status	equ	0xFD8
 35796                           
 35797 ;; *************** function i2_MiWi_TickGetMs *****************
 35798 ;; Defined at:
 35799 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 35800 ;; Parameters:    Size  Location     Type
 35801 ;;		None
 35802 ;; Auto vars:     Size  Location     Type
 35803 ;;  MiWi_TickGet    4   16[COMRAM] unsigned long 
 35804 ;; Return value:  Size  Location     Type
 35805 ;;                  4   12[COMRAM] struct MIWI_TICK_t
 35806 ;; Registers used:
 35807 ;;		wreg, status,2, status,0, cstack
 35808 ;; Tracked objects:
 35809 ;;		On entry : 0/0
 35810 ;;		On exit  : 0/0
 35811 ;;		Unchanged: 0/0
 35812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35816 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35817 ;;Total ram usage:        8 bytes
 35818 ;; Hardware stack levels used:    1
 35819 ;; Hardware stack levels required when called:    1
 35820 ;; This function calls:
 35821 ;;		i2_MiWi_TickGet
 35822 ;; This function is called by:
 35823 ;;		_HighISR
 35824 ;;		i2_TxPacket
 35825 ;; This function uses a non-reentrant model
 35826 ;;
 35827                           
 35828                           	psect	text178
 35829  00731C                     __ptext178:
 35830                           	opt stack 0
 35831  00731C                     i2_MiWi_TickGetMs:
 35832                           	opt stack 14
 35833                           
 35834                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 35835                           
 35836                           ;incstack = 0
 35837  00731C  EC2E  F038         	call	i2_MiWi_TickGet	;wreg free
 35838  007320  C001  F011         	movff	?i2_MiWi_TickGet,i2MiWi_TickGetMs@tnow
 35839  007324  C002  F012         	movff	?i2_MiWi_TickGet+1,i2MiWi_TickGetMs@tnow+1
 35840  007328  C003  F013         	movff	?i2_MiWi_TickGet+2,i2MiWi_TickGetMs@tnow+2
 35841  00732C  C004  F014         	movff	?i2_MiWi_TickGet+3,i2MiWi_TickGetMs@tnow+3
 35842                           
 35843                           ;symbol.c: 123: currentTime.Val=tnow;
 35844  007330  C011  F1BA         	movff	i2MiWi_TickGetMs@tnow,_currentTime
 35845  007334  C012  F1BB         	movff	i2MiWi_TickGetMs@tnow+1,_currentTime+1
 35846  007338  C013  F1BC         	movff	i2MiWi_TickGetMs@tnow+2,_currentTime+2
 35847  00733C  C014  F1BD         	movff	i2MiWi_TickGetMs@tnow+3,_currentTime+3
 35848                           
 35849                           ;symbol.c: 124: return(currentTime);
 35850  007340  C1BA  F00D         	movff	_currentTime,?i2_MiWi_TickGetMs
 35851  007344  C1BB  F00E         	movff	_currentTime+1,?i2_MiWi_TickGetMs+1
 35852  007348  C1BC  F00F         	movff	_currentTime+2,?i2_MiWi_TickGetMs+2
 35853  00734C  C1BD  F010         	movff	_currentTime+3,?i2_MiWi_TickGetMs+3
 35854  007350  0012               	return		;funcret
 35855  007352                     __end_ofi2_MiWi_TickGetMs:
 35856                           	opt stack 0
 35857                           tblptru	equ	0xFF8
 35858                           tblptrh	equ	0xFF7
 35859                           tblptrl	equ	0xFF6
 35860                           tablat	equ	0xFF5
 35861                           prodh	equ	0xFF4
 35862                           prodl	equ	0xFF3
 35863                           intcon	equ	0xFF2
 35864                           intcon2	equ	0xFF1
 35865                           intcon3	equ	0xFF0
 35866                           indf0	equ	0xFEF
 35867                           postinc0	equ	0xFEE
 35868                           plusw0	equ	0xFEB
 35869                           fsr0h	equ	0xFEA
 35870                           fsr0l	equ	0xFE9
 35871                           wreg	equ	0xFE8
 35872                           indf1	equ	0xFE7
 35873                           postinc1	equ	0xFE6
 35874                           postdec1	equ	0xFE5
 35875                           plusw1	equ	0xFE3
 35876                           fsr1h	equ	0xFE2
 35877                           fsr1l	equ	0xFE1
 35878                           indf2	equ	0xFDF
 35879                           postinc2	equ	0xFDE
 35880                           postdec2	equ	0xFDD
 35881                           plusw2	equ	0xFDB
 35882                           fsr2h	equ	0xFDA
 35883                           fsr2l	equ	0xFD9
 35884                           status	equ	0xFD8
 35885                           
 35886 ;; *************** function i2_MiWi_TickGet *****************
 35887 ;; Defined at:
 35888 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 35889 ;; Parameters:    Size  Location     Type
 35890 ;;		None
 35891 ;; Auto vars:     Size  Location     Type
 35892 ;;  MiWi_TickGet    4    8[COMRAM] unsigned long 
 35893 ;;  MiWi_TickGet    4    4[COMRAM] unsigned long 
 35894 ;; Return value:  Size  Location     Type
 35895 ;;                  4    0[COMRAM] unsigned long 
 35896 ;; Registers used:
 35897 ;;		wreg, status,2, status,0
 35898 ;; Tracked objects:
 35899 ;;		On entry : 0/0
 35900 ;;		On exit  : 0/0
 35901 ;;		Unchanged: 0/0
 35902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35904 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35906 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35907 ;;Total ram usage:       12 bytes
 35908 ;; Hardware stack levels used:    1
 35909 ;; This function calls:
 35910 ;;		Nothing
 35911 ;; This function is called by:
 35912 ;;		i2_MiWi_TickGetMs
 35913 ;; This function uses a non-reentrant model
 35914 ;;
 35915                           
 35916                           	psect	text179
 35917  00705C                     __ptext179:
 35918                           	opt stack 0
 35919  00705C                     i2_MiWi_TickGet:
 35920                           	opt stack 14
 35921                           
 35922                           ;symbol.c: 129: uint32_t tmrval=0;
 35923                           
 35924                           ;incstack = 0
 35925  00705C  6A09               	clrf	i2MiWi_TickGet@tmrval,c
 35926  00705E  6A0A               	clrf	i2MiWi_TickGet@tmrval+1,c
 35927  007060  6A0B               	clrf	i2MiWi_TickGet@tmrval+2,c
 35928  007062  6A0C               	clrf	i2MiWi_TickGet@tmrval+3,c
 35929  007064                     i2l474:
 35930                           
 35931                           ;symbol.c: 133: {
 35932                           ;symbol.c: 134: t1fired=0;
 35933  007064  6A44               	clrf	_t1fired,c	;volatile
 35934                           
 35935                           ;symbol.c: 136: t1ext=t1extension;
 35936  007066  C1C2  F005         	movff	_t1extension,i2MiWi_TickGet@t1ext
 35937  00706A  C1C3  F006         	movff	_t1extension+1,i2MiWi_TickGet@t1ext+1
 35938  00706E  C1C4  F007         	movff	_t1extension+2,i2MiWi_TickGet@t1ext+2
 35939  007072  C1C5  F008         	movff	_t1extension+3,i2MiWi_TickGet@t1ext+3
 35940                           
 35941                           ;symbol.c: 137: } while(t1fired==1);
 35942  007076  0444               	decf	_t1fired,w,c	;volatile
 35943  007078  E0F5               	bz	i2l474
 35944                           
 35945                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 35946  00707A  5005               	movf	i2MiWi_TickGet@t1ext,w,c
 35947  00707C  1209               	iorwf	i2MiWi_TickGet@tmrval,f,c
 35948  00707E  5006               	movf	i2MiWi_TickGet@t1ext+1,w,c
 35949  007080  120A               	iorwf	i2MiWi_TickGet@tmrval+1,f,c
 35950  007082  5007               	movf	i2MiWi_TickGet@t1ext+2,w,c
 35951  007084  120B               	iorwf	i2MiWi_TickGet@tmrval+2,f,c
 35952  007086  5008               	movf	i2MiWi_TickGet@t1ext+3,w,c
 35953  007088  120C               	iorwf	i2MiWi_TickGet@tmrval+3,f,c
 35954                           
 35955                           ;symbol.c: 140: return(tmrval);
 35956  00708A  C009  F001         	movff	i2MiWi_TickGet@tmrval,?i2_MiWi_TickGet
 35957  00708E  C00A  F002         	movff	i2MiWi_TickGet@tmrval+1,?i2_MiWi_TickGet+1
 35958  007092  C00B  F003         	movff	i2MiWi_TickGet@tmrval+2,?i2_MiWi_TickGet+2
 35959  007096  C00C  F004         	movff	i2MiWi_TickGet@tmrval+3,?i2_MiWi_TickGet+3
 35960  00709A  0012               	return		;funcret
 35961  00709C                     __end_ofi2_MiWi_TickGet:
 35962                           	opt stack 0
 35963                           tblptru	equ	0xFF8
 35964                           tblptrh	equ	0xFF7
 35965                           tblptrl	equ	0xFF6
 35966                           tablat	equ	0xFF5
 35967                           prodh	equ	0xFF4
 35968                           prodl	equ	0xFF3
 35969                           intcon	equ	0xFF2
 35970                           intcon2	equ	0xFF1
 35971                           intcon3	equ	0xFF0
 35972                           indf0	equ	0xFEF
 35973                           postinc0	equ	0xFEE
 35974                           plusw0	equ	0xFEB
 35975                           fsr0h	equ	0xFEA
 35976                           fsr0l	equ	0xFE9
 35977                           wreg	equ	0xFE8
 35978                           indf1	equ	0xFE7
 35979                           postinc1	equ	0xFE6
 35980                           postdec1	equ	0xFE5
 35981                           plusw1	equ	0xFE3
 35982                           fsr1h	equ	0xFE2
 35983                           fsr1l	equ	0xFE1
 35984                           indf2	equ	0xFDF
 35985                           postinc2	equ	0xFDE
 35986                           postdec2	equ	0xFDD
 35987                           plusw2	equ	0xFDB
 35988                           fsr2h	equ	0xFDA
 35989                           fsr2l	equ	0xFD9
 35990                           status	equ	0xFD8
 35991                           
 35992 ;; *************** function i2_DelayMs *****************
 35993 ;; Defined at:
 35994 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 35995 ;; Parameters:    Size  Location     Type
 35996 ;;  ms              4    8[COMRAM] unsigned long 
 35997 ;; Auto vars:     Size  Location     Type
 35998 ;;		None
 35999 ;; Return value:  Size  Location     Type
 36000 ;;                  1    wreg      void 
 36001 ;; Registers used:
 36002 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 36003 ;; Tracked objects:
 36004 ;;		On entry : 0/1
 36005 ;;		On exit  : 0/0
 36006 ;;		Unchanged: 0/0
 36007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36010 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36011 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36012 ;;Total ram usage:       12 bytes
 36013 ;; Hardware stack levels used:    1
 36014 ;; Hardware stack levels required when called:    1
 36015 ;; This function calls:
 36016 ;;		i2_DelayUS
 36017 ;; This function is called by:
 36018 ;;		i2_TxPacket
 36019 ;; This function uses a non-reentrant model
 36020 ;;
 36021                           
 36022                           	psect	text180
 36023  005F32                     __ptext180:
 36024                           	opt stack 0
 36025  005F32                     i2_DelayMs:
 36026                           	opt stack 14
 36027                           
 36028                           ;delay.c: 36: DelayUS(ms*1000);
 36029                           
 36030                           ;incstack = 0
 36031  005F32  C009  F00D         	movff	i2DelayMs@ms,??i2_DelayMs
 36032  005F36  C00A  F00E         	movff	i2DelayMs@ms+1,??i2_DelayMs+1
 36033  005F3A  C00B  F00F         	movff	i2DelayMs@ms+2,??i2_DelayMs+2
 36034  005F3E  C00C  F010         	movff	i2DelayMs@ms+3,??i2_DelayMs+3
 36035  005F42  0EE8               	movlw	232
 36036  005F44  020D               	mulwf	??i2_DelayMs& (0+255),c
 36037  005F46  CFF3 F011          	movff	prodl,??i2_DelayMs+4
 36038  005F4A  CFF4 F012          	movff	prodh,??i2_DelayMs+5
 36039  005F4E  6A13               	clrf	(??i2_DelayMs+6)& (0+255),c
 36040  005F50  6A14               	clrf	(??i2_DelayMs+7)& (0+255),c
 36041  005F52  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 36042  005F54  50F3               	movf	prodl,w,c
 36043  005F56  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 36044  005F58  50F4               	movf	prodh,w,c
 36045  005F5A  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 36046  005F5C  0E00               	movlw	0
 36047  005F5E  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 36048  005F60  0E03               	movlw	3
 36049  005F62  020D               	mulwf	??i2_DelayMs& (0+255),c
 36050  005F64  50F3               	movf	prodl,w,c
 36051  005F66  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 36052  005F68  50F4               	movf	prodh,w,c
 36053  005F6A  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 36054  005F6C  0E00               	movlw	0
 36055  005F6E  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 36056  005F70  0EE8               	movlw	232
 36057  005F72  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 36058  005F74  50F3               	movf	prodl,w,c
 36059  005F76  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 36060  005F78  50F4               	movf	prodh,w,c
 36061  005F7A  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 36062  005F7C  0E03               	movlw	3
 36063  005F7E  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 36064  005F80  50F3               	movf	prodl,w,c
 36065  005F82  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 36066  005F84  50F4               	movf	prodh,w,c
 36067  005F86  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 36068  005F88  0E00               	movlw	0
 36069  005F8A  020D               	mulwf	??i2_DelayMs& (0+255),c
 36070  005F8C  50F3               	movf	prodl,w,c
 36071  005F8E  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 36072  005F90  50F4               	movf	prodh,w,c
 36073  005F92  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 36074  005F94  0EE8               	movlw	232
 36075  005F96  0210               	mulwf	(??i2_DelayMs+3)& (0+255),c
 36076  005F98  50F3               	movf	prodl,w,c
 36077  005F9A  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 36078  005F9C  0E03               	movlw	3
 36079  005F9E  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 36080  005FA0  50F3               	movf	prodl,w,c
 36081  005FA2  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 36082  005FA4  0E00               	movlw	0
 36083  005FA6  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 36084  005FA8  50F3               	movf	prodl,w,c
 36085  005FAA  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 36086  005FAC  0E00               	movlw	0
 36087  005FAE  020D               	mulwf	??i2_DelayMs& (0+255),c
 36088  005FB0  50F3               	movf	prodl,w,c
 36089  005FB2  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 36090  005FB4  C011  F001         	movff	??i2_DelayMs+4,i2DelayUS@delay
 36091  005FB8  C012  F002         	movff	??i2_DelayMs+5,i2DelayUS@delay+1
 36092  005FBC  C013  F003         	movff	??i2_DelayMs+6,i2DelayUS@delay+2
 36093  005FC0  C014  F004         	movff	??i2_DelayMs+7,i2DelayUS@delay+3
 36094  005FC4  EF76  F03A         	goto	i2_DelayUS	;wreg free
 36095  005FC8                     __end_ofi2_DelayMs:
 36096                           	opt stack 0
 36097                           tblptru	equ	0xFF8
 36098                           tblptrh	equ	0xFF7
 36099                           tblptrl	equ	0xFF6
 36100                           tablat	equ	0xFF5
 36101                           prodh	equ	0xFF4
 36102                           prodl	equ	0xFF3
 36103                           intcon	equ	0xFF2
 36104                           intcon2	equ	0xFF1
 36105                           intcon3	equ	0xFF0
 36106                           indf0	equ	0xFEF
 36107                           postinc0	equ	0xFEE
 36108                           plusw0	equ	0xFEB
 36109                           fsr0h	equ	0xFEA
 36110                           fsr0l	equ	0xFE9
 36111                           wreg	equ	0xFE8
 36112                           indf1	equ	0xFE7
 36113                           postinc1	equ	0xFE6
 36114                           postdec1	equ	0xFE5
 36115                           plusw1	equ	0xFE3
 36116                           fsr1h	equ	0xFE2
 36117                           fsr1l	equ	0xFE1
 36118                           indf2	equ	0xFDF
 36119                           postinc2	equ	0xFDE
 36120                           postdec2	equ	0xFDD
 36121                           plusw2	equ	0xFDB
 36122                           fsr2h	equ	0xFDA
 36123                           fsr2l	equ	0xFD9
 36124                           status	equ	0xFD8
 36125                           
 36126 ;; *************** function i2_DelayUS *****************
 36127 ;; Defined at:
 36128 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 36129 ;; Parameters:    Size  Location     Type
 36130 ;;  delay           4    0[COMRAM] unsigned long 
 36131 ;; Auto vars:     Size  Location     Type
 36132 ;;  DelayUS         4    4[COMRAM] unsigned long 
 36133 ;; Return value:  Size  Location     Type
 36134 ;;                  1    wreg      void 
 36135 ;; Registers used:
 36136 ;;		wreg, status,2, status,0
 36137 ;; Tracked objects:
 36138 ;;		On entry : 0/1
 36139 ;;		On exit  : 0/0
 36140 ;;		Unchanged: 0/0
 36141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36143 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36145 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36146 ;;Total ram usage:        8 bytes
 36147 ;; Hardware stack levels used:    1
 36148 ;; This function calls:
 36149 ;;		Nothing
 36150 ;; This function is called by:
 36151 ;;		i2_DelayMs
 36152 ;; This function uses a non-reentrant model
 36153 ;;
 36154                           
 36155                           	psect	text181
 36156  0074EC                     __ptext181:
 36157                           	opt stack 0
 36158  0074EC                     i2_DelayUS:
 36159                           	opt stack 14
 36160                           
 36161                           ;delay.c: 25: uint32_t i;
 36162                           ;delay.c: 27: for(i=0;i<delay;i++)
 36163                           
 36164                           ;incstack = 0
 36165  0074EC  6A05               	clrf	i2DelayUS@i,c
 36166  0074EE  6A06               	clrf	i2DelayUS@i+1,c
 36167  0074F0  6A07               	clrf	i2DelayUS@i+2,c
 36168  0074F2  6A08               	clrf	i2DelayUS@i+3,c
 36169  0074F4  D006               	goto	i2l354
 36170  0074F6                     i2l355:
 36171                           
 36172                           ;delay.c: 28: {
 36173                           ;delay.c: 29: __nop();
 36174  0074F6  F000               	nop	
 36175  0074F8  2A05               	incf	i2DelayUS@i,f,c
 36176  0074FA  0E00               	movlw	0
 36177  0074FC  2206               	addwfc	i2DelayUS@i+1,f,c
 36178  0074FE  2207               	addwfc	i2DelayUS@i+2,f,c
 36179  007500  2208               	addwfc	i2DelayUS@i+3,f,c
 36180  007502                     i2l354:
 36181  007502  5001               	movf	i2DelayUS@delay,w,c
 36182  007504  5C05               	subwf	i2DelayUS@i,w,c
 36183  007506  5002               	movf	i2DelayUS@delay+1,w,c
 36184  007508  5806               	subwfb	i2DelayUS@i+1,w,c
 36185  00750A  5003               	movf	i2DelayUS@delay+2,w,c
 36186  00750C  5807               	subwfb	i2DelayUS@i+2,w,c
 36187  00750E  5004               	movf	i2DelayUS@delay+3,w,c
 36188  007510  5808               	subwfb	i2DelayUS@i+3,w,c
 36189  007512  E3F1               	bnc	i2l355
 36190  007514  0012               	return		;funcret
 36191  007516                     __end_ofi2_DelayUS:
 36192                           	opt stack 0
 36193                           tblptru	equ	0xFF8
 36194                           tblptrh	equ	0xFF7
 36195                           tblptrl	equ	0xFF6
 36196                           tablat	equ	0xFF5
 36197                           prodh	equ	0xFF4
 36198                           prodl	equ	0xFF3
 36199                           intcon	equ	0xFF2
 36200                           intcon2	equ	0xFF1
 36201                           intcon3	equ	0xFF0
 36202                           indf0	equ	0xFEF
 36203                           postinc0	equ	0xFEE
 36204                           plusw0	equ	0xFEB
 36205                           fsr0h	equ	0xFEA
 36206                           fsr0l	equ	0xFE9
 36207                           wreg	equ	0xFE8
 36208                           indf1	equ	0xFE7
 36209                           postinc1	equ	0xFE6
 36210                           postdec1	equ	0xFE5
 36211                           plusw1	equ	0xFE3
 36212                           fsr1h	equ	0xFE2
 36213                           fsr1l	equ	0xFE1
 36214                           indf2	equ	0xFDF
 36215                           postinc2	equ	0xFDE
 36216                           postdec2	equ	0xFDD
 36217                           plusw2	equ	0xFDB
 36218                           fsr2h	equ	0xFDA
 36219                           fsr2l	equ	0xFD9
 36220                           status	equ	0xFD8
 36221                           tblptru	equ	0xFF8
 36222                           tblptrh	equ	0xFF7
 36223                           tblptrl	equ	0xFF6
 36224                           tablat	equ	0xFF5
 36225                           prodh	equ	0xFF4
 36226                           prodl	equ	0xFF3
 36227                           intcon	equ	0xFF2
 36228                           intcon2	equ	0xFF1
 36229                           intcon3	equ	0xFF0
 36230                           indf0	equ	0xFEF
 36231                           postinc0	equ	0xFEE
 36232                           plusw0	equ	0xFEB
 36233                           fsr0h	equ	0xFEA
 36234                           fsr0l	equ	0xFE9
 36235                           wreg	equ	0xFE8
 36236                           indf1	equ	0xFE7
 36237                           postinc1	equ	0xFE6
 36238                           postdec1	equ	0xFE5
 36239                           plusw1	equ	0xFE3
 36240                           fsr1h	equ	0xFE2
 36241                           fsr1l	equ	0xFE1
 36242                           indf2	equ	0xFDF
 36243                           postinc2	equ	0xFDE
 36244                           postdec2	equ	0xFDD
 36245                           plusw2	equ	0xFDB
 36246                           fsr2h	equ	0xFDA
 36247                           fsr2l	equ	0xFD9
 36248                           status	equ	0xFD8
 36249                           
 36250                           	psect	rparam
 36251  0000                     tblptru	equ	0xFF8
 36252                           tblptrh	equ	0xFF7
 36253                           tblptrl	equ	0xFF6
 36254                           tablat	equ	0xFF5
 36255                           prodh	equ	0xFF4
 36256                           prodl	equ	0xFF3
 36257                           intcon	equ	0xFF2
 36258                           intcon2	equ	0xFF1
 36259                           intcon3	equ	0xFF0
 36260                           indf0	equ	0xFEF
 36261                           postinc0	equ	0xFEE
 36262                           plusw0	equ	0xFEB
 36263                           fsr0h	equ	0xFEA
 36264                           fsr0l	equ	0xFE9
 36265                           wreg	equ	0xFE8
 36266                           indf1	equ	0xFE7
 36267                           postinc1	equ	0xFE6
 36268                           postdec1	equ	0xFE5
 36269                           plusw1	equ	0xFE3
 36270                           fsr1h	equ	0xFE2
 36271                           fsr1l	equ	0xFE1
 36272                           indf2	equ	0xFDF
 36273                           postinc2	equ	0xFDE
 36274                           postdec2	equ	0xFDD
 36275                           plusw2	equ	0xFDB
 36276                           fsr2h	equ	0xFDA
 36277                           fsr2l	equ	0xFD9
 36278                           status	equ	0xFD8
 36279                           
 36280                           	psect	temp
 36281  00004F                     btemp:
 36282                           	opt stack 0
 36283  00004F                     	ds	1
 36284  0000                     int$flags	set	btemp
 36285                           tblptru	equ	0xFF8
 36286                           tblptrh	equ	0xFF7
 36287                           tblptrl	equ	0xFF6
 36288                           tablat	equ	0xFF5
 36289                           prodh	equ	0xFF4
 36290                           prodl	equ	0xFF3
 36291                           intcon	equ	0xFF2
 36292                           intcon2	equ	0xFF1
 36293                           intcon3	equ	0xFF0
 36294                           indf0	equ	0xFEF
 36295                           postinc0	equ	0xFEE
 36296                           plusw0	equ	0xFEB
 36297                           fsr0h	equ	0xFEA
 36298                           fsr0l	equ	0xFE9
 36299                           wreg	equ	0xFE8
 36300                           indf1	equ	0xFE7
 36301                           postinc1	equ	0xFE6
 36302                           postdec1	equ	0xFE5
 36303                           plusw1	equ	0xFE3
 36304                           fsr1h	equ	0xFE2
 36305                           fsr1l	equ	0xFE1
 36306                           indf2	equ	0xFDF
 36307                           postinc2	equ	0xFDE
 36308                           postdec2	equ	0xFDD
 36309                           plusw2	equ	0xFDB
 36310                           fsr2h	equ	0xFDA
 36311                           fsr2l	equ	0xFD9
 36312                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    1176
    Data        26
    BSS         2392
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      78
    BANK0           160    139     141
    BANK1           256    182     254
    BANK2           256     29     195
    BANK3           256      0     239
    BANK4           256      0     175
    BANK5           256      0     220
    BANK6           256      0     242
    BANK7           256      0     254
    BANK8           256      0     220
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    MiApp_UnicastAddress@Origin	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK2[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK2[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK2[25]), radioBroadcast@addr(BANK1[2]), main@coord(BANK2[2]), 
		 -> rxMessage(BANK2[10]), LCDText(BANK3[33]), ConnectionTable(BANK4[55]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK2[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK2[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK2[25]), radioBroadcast@addr(BANK1[2]), main@coord(BANK2[2]), 
		 -> rxMessage(BANK2[10]), LCDText(BANK3[33]), ConnectionTable(BANK4[55]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(BANK0[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK2[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiApp_MessageAvailable@src(BANK0[2]), MiApp_UnicastAddress@src(BANK0[2]), 
		 -> MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), MiApp_StartConnection@src(COMRAM[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), ConnectionTable.Address(BANK4[2]), ConnectionTable(BANK4[55]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), NULL(NULL[0]), MACRxPacket(BANK2[12]), key(BANK2[8]), 
		 -> MACTxBuffer(BANK3[64]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(BANK0[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK2[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiApp_MessageAvailable@src(BANK0[2]), MiApp_UnicastAddress@src(BANK0[2]), 
		 -> MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), MiApp_StartConnection@src(COMRAM[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), ConnectionTable.Address(BANK4[2]), ConnectionTable(BANK4[55]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), NULL(NULL[0]), MACRxPacket(BANK2[12]), key(BANK2[8]), 
		 -> MACTxBuffer(BANK3[64]), 

    memcpy@s1	PTR const void  size(2) Largest target is 152
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), address.bytes(COMRAM[2]), 
		 -> IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK2[2]), address.bytes(COMRAM[2]), 
		 -> NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), TunnelManagerGetTunnel@device(BANK0[2]), 
		 -> tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), neighbor_tbl.ll_addr.bytes(BANK5[2]), 
		 -> neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[2]), radioReceivedPacket@child(BANK1[2]), 
		 -> source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK1[2]), address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), 
		 -> srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), MiApp_EstablishConnection@src(BANK0[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@addr8(BANK0[6]), TxBuffer(BANK7[64]), main@coord(BANK2[2]), myAddr(BANK1[2]), 
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), myPANID(COMRAM[2]), transParam.DestPANID(COMRAM[2]), 
		 -> MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), RxPacket(BANK3[142]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 152
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), address.bytes(COMRAM[2]), 
		 -> IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK2[2]), address.bytes(COMRAM[2]), 
		 -> NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), TunnelManagerGetTunnel@device(BANK0[2]), 
		 -> tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), neighbor_tbl.ll_addr.bytes(BANK5[2]), 
		 -> neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[2]), radioReceivedPacket@child(BANK1[2]), 
		 -> source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK1[2]), address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), 
		 -> srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), MiApp_EstablishConnection@src(BANK0[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@addr8(BANK0[6]), TxBuffer(BANK7[64]), main@coord(BANK2[2]), myAddr(BANK1[2]), 
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), myPANID(COMRAM[2]), transParam.DestPANID(COMRAM[2]), 
		 -> MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), RxPacket(BANK3[142]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> a2.bytes(COMRAM[2]), isSameAddress@a2(BANK0[2]), isBroadcastAddress@addr(BANK0[8]), isKnownPacket@zeros(BANK0[12]), 
		 -> src1.bytes(COMRAM[2]), main@src1(BANK2[2]), 

    memcmp@s1	PTR const void  size(2) Largest target is 360
		 -> a1.bytes(COMRAM[2]), isSameAddress@a1(BANK0[2]), address.bytes(COMRAM[2]), isBroadcastAddress@address(BANK0[2]), 
		 -> hc_table(BIGRAM[360]), src.bytes(COMRAM[2]), main@src(BANK2[2]), 

    crc32@buf	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    crc32@p	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    DeviceManagerGetDeviceData@isFormed	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isFormed(BANK1[1]), 

    DeviceManagerGetDeviceData@isSecure	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isSecurePacket(BANK1[1]), 

    DeviceManagerGetDeviceData@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), 

    DeviceManagerGetDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DeviceManagerBufferDeviceData@data	PTR unsigned char  size(2) Largest target is 142
		 -> TxBuffer(BANK7[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    DeviceManagerBufferDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    devBuffers	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    NetworkSendDiscoverResponse@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), 

    NetworkSendDiscoverRequest@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkSendDiscoverRequest@databuff(BANK1[64]), 

    NetworkPrepareSendPacket@data	PTR unsigned char  size(2) Largest target is 152
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMQ(BANK6[152]), TxBuffer(BANK7[64]), NULL(NULL[0]), 

    NetworkPrepareSendPacket@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(BANK0[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkPrepareSendPacket@nHdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(BANK0[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkManagerProcessIncomingData@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    NetworkManagerProcessIncomingData@dHdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    TMSendFormedPacketToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@myaddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    TMSendDataToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TxBuffer(BANK7[64]), NULL(NULL[0]), 

    TMSendFormedPacketTowardsCoordinator@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), TxBuffer(BANK7[64]), RxPacket.Payload(BANK3[64]), 
		 -> RxPacket(BANK3[142]), 

    TunnelManagerSetTunnel@parent	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@parent(BANK1[2]), 

    TunnelManagerSetTunnel@device	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@child(BANK1[2]), 

    BroadcastManagerDelaySend@pkt	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK1[2]), 

    LE_processReceivedMessage@hdr	PTR struct linkest_header_t_def size(2) Largest target is 142
		 -> RxPacket.lnk_header(BANK3[2]), RxPacket.Payload.lnk_header(BANK0[2]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    LE_processReceivedMessage@bhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    le_updateNeighborTableEst@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_updateETX@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_initNeighborIdx@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LE_ClearDLQ@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LEAppendNeighborInfo@data	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    sp__LEAppendNeighborInfo	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@last	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@adr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    networkSendBeacon@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK2[7]), 

    RoutingTableFindDeviceOrParent@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerShouldInsert@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerShouldInsert@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerShouldInsert@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerProcessReceive@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK1[2]), 

    RouteManagerProcessReceive@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouteManagerProcessReceive@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    RouterEvicted@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK2[7]), 

    routeInfoInit@ri	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK2[7]), 

    RouteManagerPerformUpdate@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), 

    RouteManagerPerformUpdate@best	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK6[90]), NULL(NULL[0]), 

    sp__NetworkGetMyRouteInfo	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK2[7]), 

    RouteManagerPerformUpdate@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK2[7]), 

    NetworkUnicastData@data	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuffer(BANK7[64]), 

    NetworkUnicastData@mAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    sp__NetworkManagerGetMyAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@myAddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioReceivedPacket@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioReceivedPacket@rhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[7]), STR_6(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[18]), STR_2(CODE[18]), 
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    NetworkDataArrivedEvent@data	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> main@coord(BANK2[2]), 

    MiApp_SetAddressPan@address	PTR unsigned char  size(2) Largest target is 2
		 -> MiApp_EstablishConnection@src(BANK0[2]), myLongAddress(BANK1[2]), myAddr(BANK1[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    radioUnicast@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkIssueDataRequest@data(BANK0[10]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), NetworkManagerTask@data(BANK1[19]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    radioBroadcast@data	PTR unsigned char  size(2) Largest target is 444
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    Read_MAC_Address@pAddress	PTR unsigned char  size(1) Largest target is 2
		 -> Read_MAC_Address@address(BANK0[2]), 

    EEPROMRead@dest	PTR unsigned char  size(1) Largest target is 6
		 -> Read_MAC_Address@addr8(BANK0[6]), 

    S2125$Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK7[54]), 

    S2125$SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress(BANK2[2]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress.bytes(BANK2[2]), srcAddress(BANK2[2]), 

    sp__memset	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(BANK1[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK2[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK2[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK2[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK2[25]), radioBroadcast@addr(BANK1[2]), main@coord(BANK2[2]), 
		 -> rxMessage(BANK2[10]), LCDText(BANK3[33]), ConnectionTable(BANK4[55]), NULL(NULL[0]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK3[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), MACTxBuffer(BANK3[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), MACTxBuffer(BANK3[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    HighISR@dPan	PTR unsigned char  size(1) Largest target is 2
		 -> HighISR@dstPan(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuff(BANK7[64]), 

    S313$DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK2[2]), radioBroadcast@addr(BANK1[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), list.address(BANK8[2]), 
		 -> list(BANK8[220]), NetworkIssueDataRequest@data(BANK0[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(BANK1[64]), 
		 -> userdata(BANK7[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[2]), NetworkManagerTask@data(BANK1[19]), 
		 -> routeInfo(BANK2[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), 
		 -> TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@retAddr(BANK0[2]), 
		 -> tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[2]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), RouteManagerProcessReceive@from(BANK0[2]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), MiApp_MessageAvailable@src(BANK0[2]), MiApp_UnicastAddress@src(BANK0[2]), 
		 -> MiApp_SetAddressPan@addr(BANK0[2]), MiApp_EstablishConnection@src(BANK0[2]), MiApp_StartConnection@src(COMRAM[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), ConnectionTable.Address(BANK4[2]), ConnectionTable(BANK4[55]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), NULL(NULL[0]), MACRxPacket(BANK2[12]), key(BANK2[8]), 
		 -> MACTxBuffer(BANK3[64]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    S40$PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    S337$Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket(BANK3[142]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 

    S337$SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> NULL(NULL[0]), RxPacket(BANK3[142]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[64]), RxPacket(BANK3[142]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_TxPacket
    i2_TxPacket->i2_DelayMs
    i2_TxPacket->i2_MiWi_TickGetMs
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut
    i2_MiWi_TickGetMs->i2_MiWi_TickGet
    i2_DelayMs->i2_DelayUS

Critical Paths under _main in BANK0

    _main->_MiApp_MessageAvailable
    _sprintf->___lwdiv
    _Read_MAC_Address->_memcpy
    _EEPROMRead->_SPIPut2
    _SPIGet2->_SPIPut2
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_DelayMs
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _NetworkSendDiscoverRequest->_BroadcastManagerDelaySend
    _MiApp_MessageAvailable->_radioReceivedPacket
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _isKnownPacket->_MSTickGetDiffNow
    _TunnelManagerSetTunnel->_MSTickGet
    _RouteManagerProcessReceive->_LE_InsertNeighbor
    _routingTableUpdateEntry->_routingTableFind
    _LE_InsertNeighbor->_RouterEvicted
    _NetworkSendDiscoverResponse->_BroadcastManagerDelaySend
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _TMSendDataToRFD->_TMSendFormedPacketToRFD
    _TMSendFormedPacketToRFD->_radioUnicast
    _TunnelManagerInvalidateTunnel->_isSameAddress
    _TunnelManagerGetTunnel->_MSTickGetDiffNow
    _TMSendFormedPacketTowardsCoordinator->_NetworkHasRoute
    _LE_RemoveNeighborDevice->_RouterEvicted
    _GetRouteAddressOfChild->_RoutingTableFindDeviceOrParent
    _RoutingTableFindDeviceOrParent->_isSameAddress
    _BroadcastManagerDelaySend->_AddMSToTick
    _AddMSToTick->_MSTickGet
    _NetworkDataArrivedEvent->_memset
    _IsNetworkDevice->_MSTickGet
    _DeviceManagerGetDeviceData->_isSameAddress
    _LE_processReceivedMessage->_le_updateNeighborEntryIdx
    _le_updateNeighborEntryIdx->_le_updateNeighborTableEst
    _le_updateNeighborTableEst->_le_updateETX
    _le_updateETX->_le_computeETX
    _le_computeETX->___awdiv
    _le_findWorstNeighborIdx->_isSameAddress
    _le_findRandomNeighborIdx->___lwmod
    _RouteManagerShouldInsert->_isInvalidAddress
    _DeviceManagerGetDeviceType->_isSameAddress
    _DeviceManagerBufferDeviceData->_memcpy
    _BlinkRedLED->_LEDCommand
    _TransportManagerTask->_radioUnicast
    _RouteManagerTask->_MSTickGetDiffNow
    _LE_UnpinNeighbor->_le_findIdx
    _LE_PinNeighbor->_le_findIdx
    _LE_ClearDLQ->_le_findIdx
    _BroadcastManagerTask->_radioBroadcast
    _BeaconManagerTask->_networkSendBeacon
    _networkSendBeacon->_radioBroadcast
    _radioBroadcast->_SendPacket
    _LELinkQualityGet->_le_findIdx
    _le_findIdx->_isSameAddress
    _LEAppendNeighborInfo->___lwmod
    ___lwmod->_krnd
    _netDecayInterval->_netChooseAdvertiseTime
    _MSTickGetDiffNow->_MSTickGet
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _AddNodeToNetworkTable->_isSameAddress
    _MiApp_RequestData->_NetworkIssueDataRequest
    _NetworkIssueDataRequest->_radioUnicast
    _radioUnicast->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_DelayMs
    _TxPacket->_MiWi_TickGetMs
    _WriteFIFO->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _RouterEvicted->_routingTableFind
    _routingTableFind->_isInvalidAddress
    _isSameAddress->_CoordinatorGenericAddress
    _routeInfoInit->_memset
    _NetworkPrepareSendPacket->_memcpy
    _CoordinatorGenericAddress->_memset
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DelayMs
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _IsMemberOfNetwork->_NetworkHasRoute
    _NetworkHasRoute->_isInvalidAddress
    _isInvalidAddress->_isBroadcastAddress
    _isBroadcastAddress->_memcmp
    _MiApp_GetParentAddress->_NetworkGetParentAddress
    _MiApp_EstablishConnection->_NetworkInit
    _TunnelManagerInit->_memset
    _TransportManagerInit->_memset
    _RouteManagerInit->_MSTickGet
    _DeviceManagerInit->_memset
    _CacheInit->_memset
    _BroadcastManagerInit->_memset
    _netResetInterval->_netChooseAdvertiseTime
    _netChooseAdvertiseTime->_MSTickGet
    ___llmod->_krnd
    _MSTickGet->_memcpy
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _MiApp_SetAddressPan->_NetworkSetAddressPAN
    _NetworkSetAddressPAN->_memcpy
    _memcpy->_NetworkManagerGetMyAddress
    _LEDManagerTask->_MiWi_TickGetMs
    _LCD_WriteData->_SPIPut2
    _LCDInit->_DelayMs
    _LCD_WriteCmd->_SPIPut2
    _DelayMs->_DelayUS
    _ButtonTask->_MiWi_TickGetMs
    _MiWi_TickGetMs->_MiWi_TickGet

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_SearchConnection
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_radioReceivedPacket
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _NetworkManagerTask->_TransportManagerTask

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_MiApp_SearchConnection

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0 5149024
                                            178 BANK1      4     4      0
                                             13 BANK2     16    16      0
                         _ButtonTask
                       _HardwareInit
                    _InitSymbolTimer
                          _LCDUpdate
                         _LEDCommand
                     _LEDManagerTask
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_GetParentAddress
            _MiApp_IsMemberOfNetwork
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
                  _MiApp_RequestData
             _MiApp_SearchConnection
                _MiApp_SetAddressPan
        _MiApp_TransceiverPowerState
               _MiApp_UnicastAddress
                     _MiWi_TickGetMs
                   _Read_MAC_Address
                    _isButtonPressed
                             _memcmp
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    21      8    4317
                                             26 BANK0     25    17      8
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     440
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _isButtonPressed                                      4     4      0      65
                                             19 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Read_MAC_Address                                    14    12      2   15489
                                             31 BANK0     14    12      2
                         _EEPROMRead
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EEPROMRead                                           3     0      3     479
                                             21 BANK0      3     0      3
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIGet2                                              0     0      0      34
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                 7     2      5  358130
                                            127 BANK0      2     2      0
                                             71 BANK1      5     0      5
                 _NetworkUnicastData
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkUnicastData                                  10     3      7  343534
                                            124 BANK0      3     3      0
                                             64 BANK1      7     0      7
                 _CoordinatorAddress
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
               _NetworkGetDeviceType
         _NetworkManagerGetMyAddress
                    _TMSendDataToRFD
_TMSendFormedPacketTowardsCoordinato
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_TransceiverPowerState                          2     2      0    4144
                                             41 BANK0      2     2      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (2) _MiMAC_PowerState                                     2     2      0    4100
                                             39 BANK0      2     2      0
                            _DelayMs
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              25    21      4 2230153
                                            166 BANK1     12     8      4
                                              0 BANK2     13    13      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                     _MiWi_TickGetMs
         _NetworkSendDiscoverRequest
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSendDiscoverRequest                          70    70      0   62539
                                              0 BANK1     70    70      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
                             _memset
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                               6     6      0 2153131
                                            137 BANK0      2     2      0
                                            162 BANK1      4     4      0
              _AddNodeToNetworkTable
               _MiMAC_ReceivedPacket
                     _MiWi_TickGetMs
                 _NetworkManagerTask
                        _TimeTickISR
                             _memcpy
                _radioReceivedPacket
 ---------------------------------------------------------------------------------
 (3) _radioReceivedPacket                                 34    23     11 1427580
                                            131 BANK0      6     6      0
                                            134 BANK1     28    17     11
                        _BlinkRedLED
          _BroadcastManagerDelaySend
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
             _GetRouteAddressOfChild
                  _IsMemberOfNetwork
                    _IsNetworkDevice
            _LE_RemoveNeighborDevice
          _LE_processReceivedMessage
             _NetworkDiscoveredEvent
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
  _NetworkManagerProcessIncomingData
        _NetworkSendDiscoverResponse
         _RouteManagerProcessReceive
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
             _TunnelManagerSetTunnel
                              _crc32
                 _isBroadcastAddress
                      _isKnownPacket
                      _isSameAddress
                             _memcpy
                 _radioDiscardPacket
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _radioDiscardPacket                                   0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _isKnownPacket                                       39    35      4   42349
                                             75 BANK0     39    35      4
                          _MSTickGet
                   _MSTickGetDiffNow
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (4) _crc32                                               20    12      8     513
                                             19 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (4) _TunnelManagerSetTunnel                              35    31      4   48455
                                             47 BANK0     26    22      4
                          _MSTickGet
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _RouteManagerProcessReceive                          13     8      5  152067
                                             61 BANK0     13     8      5
               _BeaconManagerTrigger
                  _LE_InsertNeighbor
                     _LE_PinNeighbor
              _NetworkAddressSizeGet
   _RouteManagerSetNeighborCongested
                      _RouterEvicted
                   _isInvalidAddress
                             _memcpy
            _routingTableUpdateEntry
 ---------------------------------------------------------------------------------
 (5) _routingTableUpdateEntry                             10     4      6   24070
                                             47 BANK0      9     3      6
                   _LELinkQualityGet
               _passLinkEtxThreshold
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (5) _RouteManagerSetNeighborCongested                     3     0      3     208
                                             19 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _LE_InsertNeighbor                                    6     3      3   52226
                                             55 BANK0      6     3      3
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
 ---------------------------------------------------------------------------------
 (4) _NetworkSendDiscoverResponse                         70    70      0   62539
                                              0 BANK1     70    70      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
           _isNetworkSecurityEnabled
                             _memset
 ---------------------------------------------------------------------------------
 (4) _NetworkManagerProcessIncomingData                   77    71      6  653021
                                            124 BANK0      7     1      6
                                             64 BANK1     70    70      0
               _BeaconManagerTrigger
         _DeviceManagerGetDeviceData
                    _IsNetworkDevice
            _NetworkDataArrivedEvent
               _NetworkGetDeviceType
                    _TMSendDataToRFD
            _TMSendFormedPacketToRFD
                   _isInvalidAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TMSendDataToRFD                                     72    64      8  276652
                                            116 BANK0      8     0      8
                                              0 BANK1     64    64      0
           _NetworkPrepareSendPacket
            _TMSendFormedPacketToRFD
 ---------------------------------------------------------------------------------
 (4) _TMSendFormedPacketToRFD                             15     8      7  255996
                                            101 BANK0     15     8      7
          _BroadcastManagerDelaySend
             _GetRouteAddressOfChild
            _LE_RemoveNeighborDevice
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
                 _isBroadcastAddress
                      _isSameAddress
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerInvalidateTunnel                        8     6      2   33086
                                             33 BANK0      8     6      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerGetTunnel                              22    20      2   48816
                                             75 BANK0     22    20      2
                   _MSTickGetDiffNow
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TMSendFormedPacketTowardsCoordinator                11     5      6   22567
                                             42 BANK0     11     5      6
                    _NetworkHasRoute
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LE_RemoveNeighborDevice                              6     4      2   42007
                                             55 BANK0      6     4      2
                      _RouterEvicted
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _GetRouteAddressOfChild                               6     4      2   28944
                                             43 BANK0      6     4      2
                 _CoordinatorAddress
           _LE_GetNeighborDeviceType
     _RoutingTableFindDeviceOrParent
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _RoutingTableFindDeviceOrParent                      10     8      2   18927
                                             33 BANK0     10     8      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LE_GetNeighborDeviceType                             6     4      2     203
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _CoordinatorAddress                                   2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _BroadcastManagerDelaySend                           15     9      6   33898
                                             63 BANK0     15     9      6
                        _AddMSToTick
                          _MSTickGet
           _isNetworkSecurityEnabled (ARG)
                               _krnd
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AddMSToTick                                         16     4     12     437
                                             47 BANK0     16     4     12
                          _MSTickGet (ARG)
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (5) _NetworkDataArrivedEvent                              7     0      7   11101
                                             27 BANK0      7     0      7
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IsNetworkDevice                                     18    15      3   51537
                                             47 BANK0     18    15      3
                          _MSTickGet
              _NetworkAddressSizeGet
                   _isInvalidAddress
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _DeviceManagerGetDeviceData                          20    12      8   23619
                                             33 BANK0     20    12      8
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _NetworkDiscoveredEvent                              12     8      4     874
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (4) _LE_processReceivedMessage                           16    10      6  104681
                                             63 BANK0     15     9      6
              _NetworkAddressSizeGet
           _RouteManagerShouldInsert
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
           _le_findRandomNeighborIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
          _le_updateNeighborEntryIdx
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _le_updateNeighborEntryIdx                            6     4      2   15477
                                             57 BANK0      6     4      2
                 _le_initNeighborIdx
          _le_updateNeighborTableEst
 ---------------------------------------------------------------------------------
 (6) _le_updateNeighborTableEst                           18    16      2   13470
                                             40 BANK0     17    15      2
                            ___lldiv
                            ___lwdiv
                      _isSameAddress
                      _le_computeETX
                       _le_updateETX
 ---------------------------------------------------------------------------------
 (7) _le_updateETX                                         8     4      4    1542
                                             32 BANK0      8     4      4
                            ___lwdiv
                      _le_computeETX (ARG)
 ---------------------------------------------------------------------------------
 (7) _le_computeETX                                        5     3      2     786
                                             27 BANK0      5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     657
                                             19 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _le_initNeighborIdx                                   5     3      2     906
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _le_findWorstNeighborIdx                             15    13      2    8842
                                             33 BANK0     15    13      2
            _NetworkGetParentAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (5) _le_findRandomNeighborIdx                            10     8      2    9614
                                             36 BANK0     10     8      2
            _NetworkGetParentAddress
                            ___lwmod
                      _isSameAddress
                               _krnd
 ---------------------------------------------------------------------------------
 (6) _le_findEmptyNeighborIdx                              8     6      2     167
                                             19 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _RouteManagerShouldInsert                            15    13      2   12484
                                             40 BANK0     15    13      2
            _NetworkGetParentAddress
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerGetDeviceType                           7     5      2    8753
                                             33 BANK0      7     5      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerBufferDeviceData                       19    11      8   15954
                                             31 BANK0     19    11      8
              _NetworkAddressSizeGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _BlinkRedLED                                          0     0      0     332
                         _LEDCommand
 ---------------------------------------------------------------------------------
 (5) _LEDCommand                                           3     2      1     332
                                             19 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _TimeTickISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NetworkManagerTask                                  25    25      0  647330
                                            115 BANK0      4     4      0
                                             68 BANK1     21    21      0
                  _BeaconManagerTask
               _BroadcastManagerTask
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                _MiApp_IsNetworkBusy
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                _RMRoutingTableCount
          _RouteManagerPerformUpdate
                   _RouteManagerTask
                      _RouterEvicted
               _TransportManagerTask
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                               _krnd
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _TransportManagerTask                                72    72      0  142857
                                            101 BANK0      4     4      0
                                              0 BANK1     68    68      0
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                    _NetworkGetPANID
            _NetworkGetParentAddress
                    _NetworkHasRoute
           _NetworkPrepareSendPacket
                      _RouterEvicted
                             _memcpy
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _RouteManagerTask                                     0     0      0   97577
                          _MSTickGet
                   _MSTickGetDiffNow
          _RouteManagerPerformUpdate
 ---------------------------------------------------------------------------------
 (5) _RouteManagerPerformUpdate                           18    18      0   67857
                                             51 BANK0     18    18      0
               _BeaconManagerTrigger
                   _LELinkQualityGet
                        _LE_ClearDLQ
                     _LE_PinNeighbor
                   _LE_UnpinNeighbor
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
            _TransportManagerNoRoute
         _TransportManagerRouteFound
                   _isInvalidAddress
                      _isSameAddress
               _passLinkEtxThreshold
 ---------------------------------------------------------------------------------
 (6) _passLinkEtxThreshold                                 2     0      2     239
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _TransportManagerRouteFound                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TransportManagerNoRoute                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _LE_UnpinNeighbor                                     7     5      2    9621
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _LE_PinNeighbor                                       7     5      2    9722
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _LE_ClearDLQ                                          9     7      2    9686
                                             37 BANK0      9     7      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _BeaconManagerTrigger                                 0     0      0   14798
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (4) _RMRoutingTableCount                                  2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _MiApp_IsNetworkBusy                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BroadcastManagerTask                                14    14      0   65742
                                             99 BANK0     14    14      0
                          _MSTickGet
                    _NetworkGetPANID
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (4) _BeaconManagerTask                                    0     0      0  145387
                          _MSTickGet
                   _MSTickGetDiffNow
                   _netDecayInterval
                  _networkSendBeacon
 ---------------------------------------------------------------------------------
 (5) _networkSendBeacon                                   18    18      0  100869
                                             99 BANK0     16    16      0
               _LEAppendNeighborInfo
                   _LELinkQualityGet
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
                    _NetworkGetPANID
                    _NetworkHasRoute
         _NetworkManagerGetMyAddress
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                             _memcpy
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (5) _radioBroadcast                                       7     1      6   40960
                                             92 BANK0      7     1      6
                    _NetworkGetPANID (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LELinkQualityGet                                     9     5      4   10503
                                             37 BANK0      9     5      4
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _le_findIdx                                           4     2      2    9408
                                             33 BANK0      4     2      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _LEAppendNeighborInfo                                18    14      4   16969
                                             36 BANK0     18    14      4
              _NetworkAddressSizeGet
                            ___lwdiv
                            ___lwmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     648
                                             31 BANK0      5     1      4
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1241
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _netDecayInterval                                     0     0      0   14798
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (6) _MSTickGetDiffNow                                    28    20      8   15498
                                             47 BANK0     28    20      8
                          _MSTickGet
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ReceivedPacket                                21    21      0   30333
                                             68 BANK0     21    21      0
                            _CCM_Dec
                     _MiWi_TickGetMs
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _CCM_Dec                                             13     7      6    6219
                                             55 BANK0     13     7      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (3) _AddNodeToNetworkTable                               12     8      4   33499
                                             33 BANK0     12     8      4
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
             _NetworkReleaseUserData
 ---------------------------------------------------------------------------------
 (3) _NetworkReleaseUserData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_RequestData                                    0     0      0   94420
            _NetworkIssueDataRequest
 ---------------------------------------------------------------------------------
 (2) _NetworkIssueDataRequest                             12    12      0   94420
                                            101 BANK0     12    12      0
          _CoordinatorGenericAddress
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                      _RouterEvicted
           _isNetworkSecurityEnabled
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _radioUnicast                                         9     1      8   33654
                                             92 BANK0      9     1      8
                    _NetworkGetPANID (ARG)
            _NetworkGetParentAddress (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          14     8      6   29791
                                             78 BANK0     14     8      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    12     4      8   28613
                                             66 BANK0     12     4      8
                            _CCM_Enc
                           _TxPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            24    23      1    6771
                                             39 BANK0     23    22      1
                            _DelayMs
                     _MiWi_TickGetMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            2     2      0      99
                                             21 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (8) _CCM_Enc                                             11     5      6    6219
                                             55 BANK0     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (9) _CTR                                                 13     6      7    2536
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (9) _CBC_MAC                                             13     6      7    2536
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (10) _encode                                             23    19      4    1094
                                             19 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (5) _isNetworkSecurityEnabled                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RouterEvicted                                        8     6      2   32264
                                             47 BANK0      8     6      2
              _NetworkGetMyRouteInfo
            _NetworkGetParentAddress (ARG)
          _RouteManagerRequestUpdate
                      _isSameAddress
                      _routeInfoInit
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (7) _routingTableFind                                     7     5      2   12390
                                             40 BANK0      7     5      2
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        4     0      4    8347
                                             29 BANK0      4     0      4
                 _CoordinatorAddress (ARG)
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
            _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _routeInfoInit                                        2     0      2   10404
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (7) _RouteManagerRequestUpdate                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _NetworkGetMyRouteInfo                                2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _NetworkPrepareSendPacket                            11     2      9   18216
                                             31 BANK0     11     2      9
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
                    _NetworkSequence
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _NetworkSequence                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkManagerGetMyAddress                           2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _NetworkGetPANID                                      2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CoordinatorGenericAddress                            2     0      2   10145
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   5     5      0   60634
                                             46 BANK0      4     4      0
                _MiApp_SetAddressPan
                         _MiMAC_Init
               _NetworkSetDeviceType
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSetDeviceType                                 1     1      0      31
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           7     4      3   20735
                                             39 BANK0      7     4      3
                            _DelayMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                               _krnd
                           _krndInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _krndInit                                             6     4      2     259
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         3     3      0     170
                                             21 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_IsMemberOfNetwork                              0     0      0    3711
                  _IsMemberOfNetwork
 ---------------------------------------------------------------------------------
 (4) _IsMemberOfNetwork                                    0     0      0    3711
                    _NetworkHasRoute
 ---------------------------------------------------------------------------------
 (4) _NetworkHasRoute                                      2     2      0    3711
                                             40 BANK0      2     2      0
               _NetworkGetDeviceType
                   _isInvalidAddress
 ---------------------------------------------------------------------------------
 (5) _isInvalidAddress                                     2     0      2    3634
                                             38 BANK0      2     0      2
            _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress
 ---------------------------------------------------------------------------------
 (6) _isBroadcastAddress                                  11     9      2    2355
                                             27 BANK0     11     9      2
              _NetworkAddressSizeGet
                             _memcmp
 ---------------------------------------------------------------------------------
 (1) _memcmp                                               8     2      6    1409
                                             19 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _MiApp_GetParentAddress                               2     0      2       0
                                             21 BANK0      2     0      2
            _NetworkGetParentAddress
 ---------------------------------------------------------------------------------
 (5) _NetworkGetParentAddress                              2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                            5     4      1  177659
                                             58 BANK0      5     4      1
                _MiApp_SetAddressPan
                   _MiApp_SetChannel
                        _NetworkInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkInit                                          7     2      5  129806
                                             51 BANK0      7     2      5
                  _BeaconManagerInit
               _BroadcastManagerInit
                          _CacheInit
                  _DeviceManagerInit
                  _LinkEstimatorInit
              _NetworkAddressSizeGet
               _NetworkSetAddressPAN
                   _RouteManagerInit
               _TransportManagerInit
                  _TunnelManagerInit
                               _krnd
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TunnelManagerInit                                    0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TransportManagerInit                                 0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerInit                                     0     0      0   24367
                          _MSTickGet
                             _memset
 ---------------------------------------------------------------------------------
 (3) _LinkEstimatorInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerInit                                    0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CacheInit                                            0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _BroadcastManagerInit                                 0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6   10145
                                             19 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _BeaconManagerInit                                    0     0      0   14863
                               _krnd
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (6) _netResetInterval                                     0     0      0   14798
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (7) _netChooseAdvertiseTime                               4     4      0   14798
                                             47 BANK0      4     4      0
                          _MSTickGet
                            ___llmod
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _krnd                                                12     8      4      65
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     440
                                             31 BANK0      9     1      8
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (7) _MSTickGet                                           16     8      8   14222
                                             31 BANK0     16     8      8
                 _TimerEnterCritical
                  _TimerExitCritical
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TimerExitCritical                                    0     0      0       0
                        _TimerEnable
 ---------------------------------------------------------------------------------
 (9) _TimerEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TimerEnterCritical                                   0     0      0       0
                       _TimerDisable
 ---------------------------------------------------------------------------------
 (9) _TimerDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     2     2      0    3665
                                             28 BANK0      2     2      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _MiMAC_SetChannel                                     3     2      1    3580
                                             25 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            1     1      0    1707
                                             24 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         3     1      2    1676
                                             21 BANK0      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIPut                                              2     2      0      34
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MiApp_SetAddressPan                                  6     2      4   29636
                                             35 BANK0      6     2      4
               _NetworkSetAddressPAN
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkSetAddressPAN                                 4     0      4   14666
                                             31 BANK0      4     0      4
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6   14154
                                             21 BANK0     10     4      6
              _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
 ---------------------------------------------------------------------------------
 (5) _NetworkGetDeviceType                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NetworkAddressSizeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDManagerTask                                      12    12      0    1568
                                             39 BANK0     12    12      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _LCDUpdate                                            1     1      0    3202
                                             39 BANK0      1     1      0
                            _DelayUS
                            _LCDInit
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    2328
                            _DelayMs
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIPut2                                              2     2      0      34
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _DelayMs                                             12     8      4    2263
                                             27 BANK0     12     8      4
                            _DelayUS
 ---------------------------------------------------------------------------------
 (10) _DelayUS                                             8     4      4     484
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ButtonTask                                           1     1      0     235
                                             39 BANK0      1     1      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _MiWi_TickGetMs                                       8     4      4     105
                                             31 BANK0      8     4      4
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        12     8      4      71
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _HighISR                                            29    29      0    4742
                                             43 COMRAM    10    10      0
                                              0 BANK0     19    19      0
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (15) i2_TxPacket                                         24    23      1    1843
                                             20 COMRAM    23    22      1
                          i2_DelayMs
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
                             i2_krnd
 ---------------------------------------------------------------------------------
 (16) i2_krnd                                             12     8      4      65
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (16) i2_WriteFIFO                                         2     2      0      99
                                              2 COMRAM     2     2      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SetRFMode                                         1     1      0     371
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (17) i2_RegisterSet                                       3     1      2     340
                                              2 COMRAM     3     1      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_RegisterRead                                      3     3      0     170
                                              2 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (17) i2_SPIPut                                            2     2      0      34
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) i2_MiWi_TickGetMs                                    8     4      4     105
                                             12 COMRAM     8     4      4
                     i2_MiWi_TickGet
 ---------------------------------------------------------------------------------
 (17) i2_MiWi_TickGet                                     12     8      4      71
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (16) i2_DelayMs                                          12     8      4     169
                                              8 COMRAM    12     8      4
                          i2_DelayUS
 ---------------------------------------------------------------------------------
 (17) i2_DelayUS                                           8     4      4     103
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _HardwareInit
   _InitSymbolTimer
   _LCDUpdate
     _DelayUS
     _LCDInit
       _DelayMs
         _DelayUS
       _LCD_WriteCmd
         _SPIPut2
     _LCD_WriteCmd
       _SPIPut2
     _LCD_WriteData
       _SPIPut2
   _LEDCommand
   _LEDManagerTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _MiApp_DiscardMessage
     _NetworkReleaseUserData
   _MiApp_EstablishConnection
     _MiApp_SetAddressPan
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _NetworkInit
       _BeaconManagerInit
         _krnd
         _netResetInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
       _BroadcastManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _CacheInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _LinkEstimatorInit
       _NetworkAddressSizeGet
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouteManagerInit
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TransportManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _krnd
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_GetParentAddress
     _NetworkGetParentAddress
   _MiApp_IsMemberOfNetwork
     _IsMemberOfNetwork
       _NetworkHasRoute
         _NetworkGetDeviceType
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
   _MiApp_MessageAvailable
     _AddNodeToNetworkTable
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           _encode
         _CTR
           _encode
       _MiWi_TickGetMs
         _MiWi_TickGet
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkManagerTask
       _BeaconManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _netDecayInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
         _networkSendBeacon
           _LEAppendNeighborInfo
             _NetworkAddressSizeGet
             ___lwdiv
             ___lwmod
               _krnd (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkGetPANID
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isNetworkSecurityEnabled
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
       _BroadcastManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _memset
           _NetworkAddressSizeGet (ARG)
         _radioBroadcast
           _NetworkGetPANID (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _memset (ARG)
             _NetworkAddressSizeGet (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _MSTickGet
         _TimerEnterCritical
           _TimerDisable
         _TimerExitCritical
           _TimerEnable
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MSTickGetDiffNow
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
       _MiApp_IsNetworkBusy
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RMRoutingTableCount
       _RouteManagerPerformUpdate
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LELinkQualityGet
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_ClearDLQ
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_UnpinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
         _TransportManagerNoRoute
         _TransportManagerRouteFound
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _passLinkEtxThreshold
       _RouteManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _TransportManagerTask
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
       _isInvalidAddress
         _NetworkGetParentAddress (ARG)
         _isBroadcastAddress (ARG)
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _krnd
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
     _TimeTickISR
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
     _radioReceivedPacket
       _BlinkRedLED
         _LEDCommand
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _GetRouteAddressOfChild
         _CoordinatorAddress
         _LE_GetNeighborDeviceType
         _RoutingTableFindDeviceOrParent
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _IsMemberOfNetwork
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
       _IsNetworkDevice
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _LE_RemoveNeighborDevice
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _LE_processReceivedMessage
         _NetworkAddressSizeGet
         _RouteManagerShouldInsert
           _NetworkGetParentAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findEmptyNeighborIdx
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_findRandomNeighborIdx
           _NetworkGetParentAddress
           ___lwmod
             _krnd (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _krnd
         _le_findWorstNeighborIdx
           _NetworkGetParentAddress
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_initNeighborIdx
         _le_updateNeighborEntryIdx
           _le_initNeighborIdx
           _le_updateNeighborTableEst
             ___lldiv
             ___lwdiv
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _le_computeETX
               ___awdiv
             _le_updateETX
               ___lwdiv
               _le_computeETX (ARG)
                 ___awdiv
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkDiscoveredEvent
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkManagerGetMyAddress
       _NetworkManagerProcessIncomingData
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _DeviceManagerGetDeviceData
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkDataArrivedEvent
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _TMSendDataToRFD
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSendDiscoverResponse
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled
         _memset
           _NetworkAddressSizeGet (ARG)
       _RouteManagerProcessReceive
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LE_InsertNeighbor
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet
         _RouteManagerSetNeighborCongested
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _routingTableUpdateEntry
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
           _routingTableFind
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _TunnelManagerGetTunnel
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInvalidateTunnel
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerSetTunnel
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _crc32
       _isBroadcastAddress
         _NetworkAddressSizeGet
         _memcmp
           _NetworkAddressSizeGet (ARG)
       _isKnownPacket
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _memcmp
           _NetworkAddressSizeGet (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioDiscardPacket
         _MiMAC_DiscardPacket
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
   _MiApp_ProtocolInit
     _MiApp_SetAddressPan
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiMAC_Init
       _DelayMs
         _DelayUS
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
       _krnd
       _krndInit
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _NetworkSetDeviceType
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_RequestData
     _NetworkIssueDataRequest
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _NetworkReleaseUserData
     _MiApp_MessageAvailable
       _AddNodeToNetworkTable
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _MiMAC_ReceivedPacket
         _CCM_Dec
           _CBC_MAC
             _encode
           _CTR
             _encode
         _MiWi_TickGetMs
           _MiWi_TickGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MiWi_TickGetMs
         _MiWi_TickGet
       _NetworkManagerTask
         _BeaconManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _netDecayInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
           _networkSendBeacon
             _LEAppendNeighborInfo
               _NetworkAddressSizeGet
               ___lwdiv
               ___lwmod
                 _krnd (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkGetPANID
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isNetworkSecurityEnabled
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
             _radioBroadcast
               _NetworkGetPANID (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _memset (ARG)
                 _NetworkAddressSizeGet (ARG)
         _BroadcastManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _MiApp_IsNetworkBusy
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RMRoutingTableCount
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
         _RouteManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _RouteManagerPerformUpdate
             _BeaconManagerTrigger
               _netResetInterval
                 _netChooseAdvertiseTime
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   ___llmod
                     _krnd (ARG)
                   _krnd
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_ClearDLQ
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_PinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_UnpinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkManagerGetMyAddress
             _TransportManagerNoRoute
             _TransportManagerRouteFound
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _TransportManagerTask
           _CoordinatorGenericAddress
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isNetworkSecurityEnabled
         _krnd
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
       _TimeTickISR
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioReceivedPacket
         _BlinkRedLED
           _LEDCommand
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _DeviceManagerBufferDeviceData
           _NetworkAddressSizeGet
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _DeviceManagerGetDeviceType
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _GetRouteAddressOfChild
           _CoordinatorAddress
           _LE_GetNeighborDeviceType
           _RoutingTableFindDeviceOrParent
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _IsMemberOfNetwork
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _LE_RemoveNeighborDevice
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_processReceivedMessage
           _NetworkAddressSizeGet
           _RouteManagerShouldInsert
             _NetworkGetParentAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findRandomNeighborIdx
             _NetworkGetParentAddress
             ___lwmod
               _krnd (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _krnd
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
           _le_updateNeighborEntryIdx
             _le_initNeighborIdx
             _le_updateNeighborTableEst
               ___lldiv
               ___lwdiv
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _le_computeETX
                 ___awdiv
               _le_updateETX
                 ___lwdiv
                 _le_computeETX (ARG)
                   ___awdiv
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkDiscoveredEvent
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
         _NetworkManagerProcessIncomingData
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _DeviceManagerGetDeviceData
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _IsNetworkDevice
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkDataArrivedEvent
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _TMSendDataToRFD
             _NetworkPrepareSendPacket
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _NetworkSequence (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TMSendFormedPacketToRFD
               _BroadcastManagerDelaySend
                 _AddMSToTick
                   _MSTickGet (ARG)
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _krnd (ARG)
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _isNetworkSecurityEnabled (ARG)
                 _krnd (ARG)
                 _memcpy (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _GetRouteAddressOfChild
                 _CoordinatorAddress
                 _LE_GetNeighborDeviceType
                 _RoutingTableFindDeviceOrParent
                   _NetworkAddressSizeGet
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _LE_RemoveNeighborDevice
                 _RouterEvicted
                   _NetworkGetMyRouteInfo
                   _NetworkGetParentAddress (ARG)
                   _RouteManagerRequestUpdate (ARG)
                   _isSameAddress (ARG)
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _routeInfoInit (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _routingTableFind (ARG)
                     _isInvalidAddress
                       _NetworkGetParentAddress (ARG)
                       _isBroadcastAddress (ARG)
                         _NetworkAddressSizeGet
                         _memcmp
                           _NetworkAddressSizeGet (ARG)
                     _isSameAddress
                       _CoordinatorAddress (ARG)
                       _CoordinatorGenericAddress (ARG)
                         _NetworkAddressSizeGet
                         _memset
                           _NetworkAddressSizeGet (ARG)
                       _NetworkAddressSizeGet (ARG)
                       _NetworkGetParentAddress (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                       _memcmp (ARG)
                         _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType
               _NetworkGetPANID
               _NetworkGetParentAddress
               _NetworkManagerGetMyAddress
               _TMSendFormedPacketTowardsCoordinator
                 _NetworkHasRoute
                   _NetworkGetDeviceType
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _TunnelManagerGetTunnel
                 _MSTickGetDiffNow
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _TunnelManagerInvalidateTunnel
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _isBroadcastAddress
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _radioUnicast
                 _NetworkGetPANID (ARG)
                 _NetworkGetParentAddress (ARG)
                 _SendPacket (ARG)
                   _MiMAC_SendPacket
                     _CCM_Enc
                       _CBC_MAC
                         _encode
                       _CTR
                         _encode
                     _TxPacket
                       _DelayMs
                         _DelayUS
                       _MiWi_TickGetMs
                         _MiWi_TickGet
                       _RegisterRead
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _RegisterSet
                         _SPIPut
                       _SetRFMode
                         _RegisterSet
                           _SPIPut
                       _WriteFIFO
                         _SPIPut
                       _krnd
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                 _isNetworkSecurityEnabled (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkSendDiscoverResponse
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled
           _memset
             _NetworkAddressSizeGet (ARG)
         _RouteManagerProcessReceive
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LE_InsertNeighbor
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findEmptyNeighborIdx
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_findWorstNeighborIdx
               _NetworkGetParentAddress
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_initNeighborIdx
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _RouteManagerSetNeighborCongested
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _routingTableUpdateEntry
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
             _routingTableFind
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
         _TMSendFormedPacketTowardsCoordinator
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TunnelManagerGetTunnel
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerInvalidateTunnel
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerSetTunnel
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _crc32
         _isBroadcastAddress
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
         _isKnownPacket
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _memcmp
             _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioDiscardPacket
           _MiMAC_DiscardPacket
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPIPut
         _SetRFMode
           _RegisterSet
             _SPIPut
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkSendDiscoverRequest
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkAddressSizeGet
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_SetAddressPan
     _NetworkSetAddressPAN
       _NetworkAddressSizeGet
       _NetworkGetDeviceType
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _DelayMs
         _DelayUS
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_UnicastAddress
     _NetworkUnicastData
       _CoordinatorAddress
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _NetworkGetDeviceType
       _NetworkManagerGetMyAddress
       _TMSendDataToRFD
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiWi_TickGetMs
     _MiWi_TickGet
   _Read_MAC_Address
     _EEPROMRead
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _isButtonPressed
   _memcmp
     _NetworkAddressSizeGet (ARG)
   _memset
     _NetworkAddressSizeGet (ARG)
   _sprintf
     ___lwdiv
     ___wmul
     _isdigit

 _HighISR (ROOT)
   i2_MiWi_TickGetMs
     i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DelayMs
       i2_DelayUS
     i2_MiWi_TickGetMs
       i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut
     i2_krnd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     324      35       21.3%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      DC      22       85.9%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FE      20       99.2%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      F2      18       94.5%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      AF      14       68.4%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      EF      12       93.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100     1D      C3      10       76.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100     B6      FE       8       99.2%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4E       1       83.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     7E2       6        0.0%
DATA                 0      0     B06       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Nov 02 10:45:09 2016

                        isKnownPacket@emptyindex 00C6                                       i2_TxPacket 499E  
                               ?_isButtonPressed 0001                         ??_TunnelManagerGetTunnel 00AD  
                             ?_networkSendBeacon 0001                             NetworkManagerTask@sz 0157  
                            ??_BeaconManagerInit 0093                               ??_routingTableFind 008A  
                                AddMSToTick@tick 008F                              ??_BeaconManagerTask 00D3  
                                    ?_LEDCommand 0073                                                _c 024A  
               __size_of_le_findWorstNeighborIdx 012C                                                _w 0045  
                                              _x 01EE                                                _y 0049  
                                              _z 01F2                          netChooseAdvertiseTime@t 008F  
                            ?_le_initNeighborIdx 0073                             ?_MiMAC_DiscardPacket 0001  
                                 _LEDManagerTask 1660                 __end_of_RouteManagerShouldInsert 5632  
                                 ?_isSameAddress 007D                              ?_CoordinatorAddress 0073  
                          _NetworkAddressSizeGet 7884                           __size_of_routeInfoInit 0056  
                   __end_of_BroadcastManagerInit 76B4                         ?_LE_RemoveNeighborDevice 0097  
                      __size_of_MSTickGetDiffNow 0080                     __end_of_BroadcastManagerTask 3264  
               MiApp_SearchConnection@ChannelMap 01A6                                     ___awdiv@sign 0078  
                   __size_of_MiApp_SetAddressPan 004E                              __end_of_BlinkRedLED 77C0  
                         NetworkManagerTask@data 0144                              ___wmul@multiplicand 0075  
            __size_of_TransportManagerRouteFound 0002                       ?_BroadcastManagerDelaySend 009F  
                              _ActiveScanResults 0255                                     __CFG_CP0$OFF 000000  
                  NetworkDataArrivedEvent@source 007B                           ??_NetworkGetDeviceType 0073  
                            ??_networkSendBeacon 00C3                              _RMRoutingTableCount 7824  
                                     _MiMAC_Init 50AA                                              l102 449C  
                                            l103 449E                                              l112 4514  
             __size_of_RouteManagerRequestUpdate 0008            DeviceManagerBufferDeviceData@isFormed 0086  
                      __size_of_netResetInterval 0018                                              l119 454C  
                                            l321 5C3C                                              l171 36A6  
                                            l308 57E0                                              l165 35DA  
                                            l175 373A                                              l167 364E  
                                            l440 76DE                                              l193 108C  
                                            l354 7458                                              l610 16A2  
                                            l194 1090                                              l355 744A  
                                            l603 167C                                              l427 765C  
                                            l195 110E                                              l612 1758  
                                            l196 111A                                              l188 1006  
                                            l429 7666                                              l438 76D4  
                                            l198 1162                                              l616 172E  
                                            l474 7022                                              l642 18D6  
                                            l634 1846                                              l629 182E  
                                 ?i2_RegisterSet 0003                                              l648 1964  
                                            l914 5E80                                              l763 1596  
                                            l766 15B2                                              l971 4686  
                                            _GIE 007F97                                              _CTR 57CC  
                                            _TMQ 0600            DeviceManagerBufferDeviceData@isSecure 0085  
               __end_of_le_findRandomNeighborIdx 35C8                                              _key 028C  
                                            _nst 01DF                                  __end_of_CBC_MAC 5CBC  
                    NetworkIssueDataRequest@data 00C5                          NetworkManagerTask@delay 0246  
                                  _NewBestParent 029F                                              prod 000FF3  
                                            wreg 000FE8                     NetworkPrepareSendPacket@nHdr 0088  
                      NetworkUnicastData@address 0140                                     __CFG_IESO$ON 000000  
                   NetworkPrepareSendPacket@data 0084                                  __end_of_CCM_Dec 57CC  
                                __end_of_CCM_Enc 5942                            __end_of_mySecurityKey FFA1  
                      _le_updateNeighborEntryIdx 41F2                                      i2_WriteFIFO 75D4  
                   NetworkPrepareSendPacket@size 0086                   RouteManagerProcessReceive@data 009F  
                              ?_RouteManagerInit 0001                __end_of_MiApp_EstablishConnection 5E9C  
                              ?_RouteManagerTask 0001                   RouteManagerProcessReceive@from 00A6  
                      _le_updateNeighborTableEst 1F7C                                  __end_of_LCDInit 4F90  
                                    le_findIdx@i 0084                                             ?_CTR 008A  
                      __end_of_BeaconManagerInit 7616                                             CTR@i 0095  
                                           CTR@j 0096                             ??_le_initNeighborIdx 0075  
                      __end_of_BeaconManagerTask 547C                                   ?_le_computeETX 007B  
                           ??_CoordinatorAddress 0075         __end_of_RouteManagerSetNeighborCongested 78B4  
      __size_of_RouteManagerSetNeighborCongested 0002               ??_RouteManagerSetNeighborCongested 0076  
              ?_RouteManagerSetNeighborCongested 0073                 _RouteManagerSetNeighborCongested 78B2  
                                           l1010 2246                                             l1031 232C  
                                           l2010 7274                                             l1043 2406  
                                           l1044 240A                                             l1310 692C  
                                           l2009 7252                                             l1305 68EE  
                                           l1049 244E                                             l1156 094E  
                                           l2205 7370                                             l1502 3C5C  
                                           l2071 554A                               ??_RouteManagerInit 008F  
                                           l1362 5C06                                             l1552 70D0  
                                           l1538 6EA0                                             l1730 269E  
                                           l1732 26CA                                             l1581 34CA  
                    __end_of_radioReceivedPacket 0B24                                             l1569 421E  
                                           l1681 28FA                                             l1588 35BE  
                                           l2638 6F82                                             l2648 710E  
                                           l1688 41E8                                             l2585 655A  
                                           l2595 6986                           LELinkQualityGet@offset 0087  
                                ?i2_RegisterRead 0001                               ??_RouteManagerTask 00AB  
                                           STR_1 FFD6                                             STR_2 FFB3  
                                           STR_3 FFA1                                             STR_4 FFEB  
                                           STR_5 FFF2                                             STR_6 FFDF  
                                           STR_7 FFE4                                             STR_8 FFC5  
               __size_of_NetworkGetParentAddress 000A                       ??_LE_GetNeighborDeviceType 0075  
                                    main@counter 02BC                                             _TMR0 000FD6  
                    RouteManagerShouldInsert@hdr 0088                       NetworkUnicastData@mAddress 00DC  
                                           _RbcQ 08DC                       MiApp_UnicastAddress@Origin 0149  
                                  __CFG_FCMEN$ON 000000        RouteManagerSetNeighborCongested@congested 0075  
                        ?_GetRouteAddressOfChild 008B                             ?_RMRoutingTableCount 0073  
                     MiMAC_SetChannel@offsetFreq 0079                                             _main 12E2  
                                __end_of_SPIGet2 7810                                 ?_NetworkGetPANID 0073  
                     __end_of_TimerEnterCritical 78AE                                             _list 0800  
                                           _krnd 3F28                        __end_of_networkSendBeacon 3074  
                         ??_BeaconManagerTrigger 0093                         ??_TunnelManagerSetTunnel 0093  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                                           indf0 000FEF                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                             btemp 004F  
                                __end_of_SPIPut2 76E4                                    __CFG_T1DIG$ON 000000  
                 __end_of_NetworkReleaseUserData 7896                                _LE_InsertNeighbor 6178  
                                           prodh 000FF4                      NetworkDataArrivedEvent@data 007D  
                     ??_isNetworkSecurityEnabled 0073                                             prodl 000FF3  
                         __end_of_LE_PinNeighbor 7208                                             start 04A0  
                             __size_of_LCDUpdate 00B8                       le_updateNeighborTableEst@i 0096  
                                 ?_RouterEvicted 008F                                    LE_ClearDLQ@ne 008A  
                     le_updateNeighborTableEst@n 0088                  TMSendFormedPacketToRFD@isSecure 00CB  
                       NetworkManagerTask@tStart 022A                      NetworkDataArrivedEvent@size 007F  
                                __end_of_DelayUS 746C                                 ?_NetworkHasRoute 0001  
                                __end_of_DelayMs 5F32                       __size_of_IsMemberOfNetwork 0004  
                             ?_LE_InsertNeighbor 0097                              __size_of_EEPROMRead 002E  
                                  ?_LCD_WriteCmd 0001                                   ?_isKnownPacket 00AB  
                                __end_of_HighISR 04A0                                    _LCD_WriteData 7710  
               __size_of_MiApp_IsMemberOfNetwork 0004                                   _InitConfigRegs FF09  
                         __end_of_LEDManagerTask 19C8                                     ___param_bank 000010  
                        LELinkQualityGet@address 0085                            ??_MiMAC_DiscardPacket 0073  
                                          ??_CTR 0091                                 CCM_Enc@headerLen 0099  
                     NetworkDiscoveredEvent@rssi 0075              __size_of_NetworkManagerGetMyAddress 000C  
                                     _DeviceType 01F8                                    ?_le_updateETX 0080  
                   __end_of_MiApp_DiscardMessage 7868                              ??_LE_InsertNeighbor 009A  
                                  __CFG_PLLDIV$2 000000                         _radioReceivedPacket$5373 0193  
                       isKnownPacket@oldestindex 00C2                       NetworkUnicastData@isSecure 0146  
                     MiMAC_PowerState@PowerState 0087                                            l12000 68F2  
                                          l12020 6956                                            l12006 691C  
                                          l12110 5BF8                                            l12024 6978  
                                          l12016 6946                                            l12008 6932  
                                          l12120 6B0E                                            l12200 6438  
                                          l12112 5BFC                                            l13000 618C  
                                          l12018 6952                                            l12130 6B5C  
                                          l12202 6440                                            l12106 5BC2  
                                          l13010 61C8                                            l12220 6474  
                                          l12212 645E                                            l12204 6444  
                                          l12140 7150                                            l12108 5BE6  
                                          l12230 6F52                                            l12126 6B52  
                                          l13110 429C                                            l13006 61A8  
                                          l12080 5D90                                            l12064 62EE  
                                          l12232 6F5A                                            l12216 6468  
                                          l13120 4326                                            l12320 438E  
                                          l12312 435E                                            l12242 6F78  
                                          l12234 6F5E                                            l14010 1D80  
                                          l14002 1D50                                            l13034 559A  
                                          l13122 432C                                            l12306 435A  
                                          l12402 5FE6                                            l11620 6748  
                                          l12156 7270                                            l12084 5DBC  
                                          l14004 1D58                                            l13052 562E  
                                          l14100 064A                                            l12510 554E  
                                          l12086 5DCC                                            l12254 6DE8  
                                          l13222 5712                                            l14030 1E26  
                                          l14014 1DAE                                            l13046 561A  
                                          l13038 55B4                                            l13134 3426  
                                          l13118 42EA                                            l12174 6242  
                                          l12406 6048                                            l11632 6778  
                                          l11624 6758                                            l11616 6738  
                                          l11800 457C                                            l12248 6DC8  
                                          l13048 561E                                            l12440 651A  
                                          l12176 627C                                            l12272 3AAA  
                                          l12352 40CA                                            l13304 5CCA  
                                          l15010 18EA                                            l11546 3DEA  
                                          l11722 5CB4                                            l11802 4584  
                                          l13218 5708                                            l12530 66B8  
                                          l13082 2F7C                                            l14050 1F0A  
                                          l14026 1E16                                            l14018 1DB6  
                                          l13170 35AE                                            l12450 654C  
                                          l12442 651E                                            l12194 6428  
                                          l12290 3C14                                            l12098 5B82  
                                          l12338 448E                                            l14202 0A2A  
                                          l11628 6768                                            l11708 5C3E  
                                          l13244 57C2                                            l12460 70EE  
                                          l13084 2FBA                                            l12188 6418  
                                          l13404 4BC0                                            l12292 3C1A  
                                          l12380 6AA6                                            l12364 41D8  
                                          l13308 5D3A                                            l14140 07BE  
                                          l14108 0682                                            l15022 195A  
                                          l11822 6CCC                                            l11638 6786  
                                          l11582 6C48                                            l11718 5C9E  
                                          l11814 45CC                                            l11910 363E  
                                          l13238 5786                                            l12462 70F2  
                                          l12614 3D6C                                            l13078 2F44  
                                          l14054 1F24                                            l12702 6E62  
                                          l13158 34FC                                            l12438 650E  
                                          l13414 4C02                                            l12286 3BEE  
                                          l12358 4150                                            l13510 2902  
                                          l13502 28D8                                            l13350 26A8  
                                          l13334 259C                                            l14118 06DE  
                                          l15032 1986                                            l15008 18D8  
                                          l15040 1990                                            l11576 6C10  
                                          l11584 6C50                                            l11664 57E2  
                                          l11816 45D6                                            l11752 44DA  
                                          l11904 361E                                            l12528 66B0  
                                          l14064 1F50                                            l12296 3C2A  
                                          l12376 6A8A                                            l12800 2BA4  
                                          l13344 2614                                            l13328 2506  
                                          l14232 0AB6                                            l14160 0872  
                                          l14136 0798                                            l14152 0834  
                                          l14128 0760                                            l15120 222E  
                                          l15026 1968                                            l15042 19B8  
                                          l14410 5170                                            l11690 5882  
                                          l11762 44E6                                            l12466 7104  
                                          l12458 70E6                                            l12482 6A34  
                                          l12706 6E90                                            l12730 20D8  
                                          l13290 385A                                            l12810 2C04  
                                          l13530 2CC4                                            l13522 2C4E  
                                          l13450 497C                                            l13506 28E8  
                                          l13354 26B8                                            l13338 25D0  
                                          l14242 0B14                                            l14218 0A8E  
                                          l14170 08F0                                            l15210 242C  
                                          l15130 2254                                            l11828 6D00  
                                          l15300 5E76                                            l11852 58F2  
                                          l11748 44C4                                            l11940 36F2  
                                          l11924 3696                                            l12476 6A14  
                                          l13700 31A6                                            l12716 1F7E  
                                          l13284 3826                                            l13276 3782  
                                          l13532 2CF6                                            l13452 4988  
                                          l13364 2734                                            l14148 07F6  
                                          l14092 0620                                            l15212 2432  
                                          l11870 74B2                                            l11678 5820  
                                          l11838 58AE                                            l11782 453C  
                                          l11918 3676                                            l14270 3322  
                                          l14254 326C                                            l13702 31B2  
                                          l12742 221E                                            l13294 3868  
                                          l13534 2D20                                            l13446 4936  
                                          l13358 26D2                                            l14238 0ADC  
                                          l14158 0852                                            l14246 0B20  
                                          l14430 6ABE                                            l15054 6F00  
                                          l15230 24C2                                            l15126 224E  
                                          l13800 60F4                                            l11688 5880  
                                          l11848 58E8                                            l11776 452A  
                                          l11952 373E                                            l11960 3764  
                                          l14264 32EE                                            l12920 1B1E  
                                          l13640 6FB8                                            l13712 0B26  
                                          l12680 4E32                                            l13480 275C  
                                          l14168 08CE                                            l14088 05E6  
                                          l14520 535A                                            l14512 52F4  
                                          l15152 22F4                                            l15144 22D4  
                                          l15136 227C                                            l11866 74A2  
                                          l11698 5C22                                            l11786 4544  
                                          l11946 3712                                            l14274 3332  
                                          l12594 3C6A                                            l13650 5396  
                                          l13706 3252                                            l12930 1B58  
                                          l12906 19F2                                            l13730 0BB6  
                                          l13714 0B2A                                            l12690 4E62  
                                          l12658 4D50                                            l13394 4B70  
                                          l13386 4B38                                            l12762 2A12  
                                          l13562 2DCE                                            l13546 2D5A  
                                          l13490 2828                                            l14186 099A  
                                          l14442 6ADE                                            l14426 6AB4  
                                          l15218 2454                                            l15226 24A4  
                                          l15162 2332                                            l15154 22FA  
                                          l13652 539C                                            l12932 1B5C  
                                          l13740 0BD4                                            l13580 6576  
                                          l13396 4B94                                            l12772 2A7A  
                                          l13548 2D80                                            l14620 4CC2  
                                          l14540 73F8                                            l15180 23A8  
                                          l15156 22FE                                            l15228 24AA  
                                          l11798 4578                                            l11958 375E  
                                          l11886 35D0                                            l13902 11CC  
                                          l13830 0F54                                            l13662 540C  
                                          l12942 1BB0                                            l13726 0B46  
                                          l13718 0B38                                            l12870 39FA  
                                          l12854 3932                                            l12782 2AD8  
                                          l12790 2B36                                            l13558 2DB2  
                                          l13486 27F2                                            l14526 538E  
                                          l14454 6AFA                                            l15318 7776  
                                          l15190 23BE                                            l15174 2370  
                                          l15166 2342                                            l14384 510E  
                                          l14368 50CC                                            l13840 0FF8  
                                          l12944 1BC6                                            l13760 0D7E  
                                          l13584 65CE                                            l12688 4E5C  
                                          l12864 39BC                                            l12784 2AF6  
                                          l15280 4714                                            l15272 46F8  
                                          l15264 46E2                                            l15248 4624  
                                          l14624 4CFA                                            l15168 2352  
                                          l13930 1296                                            l13674 5466  
                                          l13690 30CA                                            l12970 1CAC  
                                          l12962 1C92                                            l13770 0E46  
                                          l13762 0DA4                                            l13754 0CA4  
                                          l13738 0BC8                                            l12874 3A08  
                                          l12794 2B5E                                            l13498 2888  
                                          l15258 467A                                            l14626 4D16  
                                          l14618 4C9C                                            l14546 740A  
                                          l15178 2382                                            l14572 5214  
                                          l12956 1C70                                            l13748 0BE4  
                                          l12884 3AA0                                            l12788 2B18  
                                          l12980 4FBE                                            l15284 471C  
                                          l14628 4D3C                                            l15700 13C2  
                                          l14902 67F6                                            l14582 525C  
                                          l14574 521E                                            l13918 124A  
                                          l13942 12D6                                            l13854 1008  
                                          l13686 3078                                            l13774 0E7E  
                                          l13758 0D26                                            l13782 0F0E  
                                          l15198 23E4                                            l14752 5980  
                                          l14920 1668                                            l13696 317E  
                                          l13784 0F3E                                            l14656 762C  
                                          l15800 162A                                            l15720 1482  
                                          l14906 67FE                                            l14754 5992  
                                          l14746 595A                                            l14738 5950  
                                          l14930 168E                                            l13890 116C  
                                          l14908 6800                                            l14772 59DC  
                                          l14940 16A4                                            l14924 1672  
                                          l12988 504C                                            l15724 148C  
                                          l15716 1476                                            l14774 59EE  
                                          l14766 59B6                                            l14942 16B4  
                                          l13878 114E                                            l13982 1CC2  
                                          l15750 1518                                            l14928 167E  
                                          l14970 176A                                            l14954 1724  
                                          l13898 11C2                                            l13986 1CD0  
                                          l15690 1390                                            l15682 1372  
                                          l15770 1566                                            l15674 1348  
                                          l14892 67D4                                            l14964 174E  
                                          l13996 1CFE                                            l13988 1CD8  
                                          l15756 1536                                            l15772 157E  
                                          l14894 67D6                                            l14990 183C  
                                          l14982 1824                                            l14958 1732  
                                          l13998 1D06                                            l15678 1368  
                                          l14888 67CC                                            l15792 15F4  
                                          l15784 15B6                                            l15696 13B2  
                                          l15688 138C                                            l14994 184A  
                                          l14986 1832                                            l15778 159A  
                                          l14998 18C4                                            l15798 1624  
                                          ?_main 0001                __end_of_BroadcastManagerDelaySend 3C2E  
                                __end_of___awdiv 647E                                            ?_krnd 0073  
                  MiApp_EstablishConnection@Mode 009A                       __size_of_MiApp_RequestData 0004  
                                __end_of___lldiv 656C                TunnelManagerInvalidateTunnel@addr 0085  
                                          _T0CON 000FD5                                  ___awdiv@divisor 0075  
                                          u13101 6286                                            u12225 74E8  
                                __end_of___llmod 6998                                            u14001 398C  
                                          u12226 74EA                                            u12315 73AE  
                                          u12235 3E20                                            u12340 3F78  
                                          u12316 73B0                                            u13300 438E  
                                          u12245 3E78                                            u12325 755E  
                                          u12326 7560                                            u14030 3A08  
                                          u12335 3F3A                                            u12255 3EB6  
                                          u13231 3B64                                            u14200 1C6C  
                                          u14040 3A12                                            u12345 3F6E  
                                          u13081 64DC                                            u13241 3BA0  
                                          u12610 6CF4                                            u13410 41E8  
                                          u12355 3F9E                                            u12460 6FE2  
                                          u14061 3A72                                            u14150 1B72  
                                          u13270 3C2A                                            u15110 28E8  
                                          u13335 445C                                            u14160 1B7A  
                                          u13336 445E                                            u13280 4354  
                                          u15200 2D34                                            u15120 28F0  
                                          u12617 6CEA                                            u13345 4486  
                                          u13610 7798                                            u14250 1CA8  
                                          u13346 4488                                            u15130 290C  
                                          u16011 1F1A                                            u12580 45BE  
                                          u13700 3D7E                                            u15300 6FB8  
                                          u13460 6056                                            u16021 1F2E  
                                          u13381 4174                                            u15141 2998  
                                          u16030 1F4E                                            u14510 34DA  
                                          u12911 60C8                                            u15311 6FCA  
                                          u13391 4186                                            u13480 70CC  
                                          u12905 60A6                                            u12921 629A  
                                          u15321 53A6                             main@pMemberOfNetwork 02BD  
                                          u12906 60AA                                            u12850 6068  
                                          u15250 2DE2                                            u15411 3148  
                                          u17100 17C6                                            u13660 3C56  
                                          u14700 3868                                            u16140 066A  
                                          u12781 72DC                                            u15341 53FC  
                                          u12870 6080                                            u15270 65DC  
                                          u14710 3874                                            u12951 5DB2  
                                          u15351 5416                                            u13760 4E42  
                                          u14720 387E                                            u15371 5456  
                                          u15291 6F9A                                            u14811 266E  
                                          u12868 606C                                            u15460 3262  
                                          u14580 35BE                                            u13790 6EA0  
                                          u14830 26B8                                            u12895 609A  
                                          u15551 0DCC                                            u17160 18A6  
                                          u12896 609E                                            u12888 6084  
                                          u16520 3332                                            u14840 26C0  
                                          u16530 3340                                            u15650 0FE6  
                                          u14850 26DA                                            u15571 0EA6  
                                          u14771 25C0                                            u17260 19C6  
                                          u16540 3352                                            u15580 0EC2  
                                          u15820 7364                                            u15901 1D70  
                                          u14861 272C                                            u15590 0F4E  
                                          u16551 73DC                                            u15911 1D8A  
                                          u15920 1DAA                                            u15941 1DD4  
                                          u15881 1D48                                            u17465 45F4  
                                __end_of___lwdiv 6F8C                                            u15971 1E44  
                              _userDataAvailable 01E1                                            u16890 67B2  
                                          u16964 7428                                            u16965 7424  
                                          i2l102 49A6                                            i2l103 49A8  
                                          i2l112 4A1E                                  __end_of___lwmod 7118  
                                          i2l119 4A50                                            i2l250 009C  
                                          i2l243 007E                                            i2l245 00B4  
                                          i2l280 032C                                            i2l256 00D8  
                                          i2l354 7502                                            i2l355 74F6  
                                          i2l427 7758                                            i2l259 015E  
                                          i2l429 7762                                            i2l295 0484  
                                          i2l474 7064                                  ___awdiv@counter 0077  
                  RouteManagerPerformUpdate@best 009D                         __size_of_InitSymbolTimer 0016  
                       ?_TMSendFormedPacketToRFD 00C5                 __size_of_TransportManagerNoRoute 0002  
                                          _TMR0H 000FD7                                            _TMR0L 000FD6  
                                   _routingTable 0698                 RouteManagerShouldInsert@neighEtx 008E  
                    ?_RouteManagerProcessReceive 009D                                 ?_NetworkSequence 0001  
                               SendPacket@tParam 00B7                  __end_of_le_findEmptyNeighborIdx 6EAA  
                               __end_ofi2_SPIGet 7860                        MiApp_SearchConnection@res 02B0  
                              _justEvictedParent 0043                                 __end_ofi2_SPIPut 7768  
                                _TMSendDataToRFD 6E0A                               __size_ofi2_DelayUS 002A  
                             __size_ofi2_DelayMs 0096                                            _crc32 5CBC  
                __size_of_NetworkDiscoveredEvent 01A2                                 RouterEvicted@idx 0095  
                   ??_NetworkSendDiscoverRequest 00AE                                 SendPacket@status 00B5  
                  __size_of_MiApp_UnicastAddress 003A                                            _pcnt1 0251  
                                __end_of_isdigit 7634                                    _routeInfoInit 6BB8  
                            __size_of_LEDCommand 003C                 CoordinatorGenericAddress@address 01E6  
                 __end_of_GetRouteAddressOfChild 6AB0                                  LEDManagerTask@i 0091  
                                          krnd@t 007B                                            tablat 000FF5  
                      __end_of_LE_InsertNeighbor 6206                                     ?_LE_ClearDLQ 0085  
                          ??_RMRoutingTableCount 0075                          ?_netChooseAdvertiseTime 0001  
                                          plusw0 000FEB                                            plusw1 000FE3  
                                          plusw2 000FDB                    __size_of_NetworkSetAddressPAN 0056  
                                          status 000FD8                      le_updateNeighborTableEst@ne 0097  
                                __end_of_sprintf 24CE                               __size_of_MSTickGet 0036  
                             __size_of_CacheInit 0018              __end_of_MiApp_TransceiverPowerState 777C  
                    _MiApp_TransceiverPowerState 7768                           __end_of_InitConfigRegs FF49  
                       LE_RemoveNeighborDevice@i 009B                          MiApp_SearchConnection@i 02B1  
                                ?_LE_PinNeighbor 0085                          MiApp_SetChannel@Channel 007C  
                      __size_of_LELinkQualityGet 0070                                   ??_LCD_WriteCmd 0075  
                                 ?_LCD_WriteData 0001                        __size_of_MiMAC_SetChannel 0090  
                           __end_of_HardwareInit 5B64                          __CFG_DSWDTOSC$INTOSCREF 000000  
                                    _BlinkRedLED 77B4                  __end_of_LE_RemoveNeighborDevice 68D4  
                      __size_of_Read_MAC_Address 004A                                  __initialization 5632  
                                ?_LEDManagerTask 0001                                  ??_isSameAddress 0081  
                                    ?i2_TxPacket 0015                         LE_UnpinNeighbor@neighbor 0085  
                          _AddNodeToNetworkTable 3264                        __size_of_MiMAC_SendPacket 01AA  
                         ?_NetworkAddressSizeGet 0001                                     __end_of_main 1660  
                                 main@SendPacket 02BA                                     __end_of_krnd 4098  
                           _UserMessageAvailable 01D9                  __size_of_TunnelManagerGetTunnel 015A  
                    LE_GetNeighborDeviceType@dev 0078                                   ??_le_updateETX 0084  
                                     _ButtonTask 679E                                   TxPacket@status 009B  
                                  krndInit@value 0073                        isBroadcastAddress@address 007B  
                                      ??_CBC_MAC 0091                                  ??i2_RegisterSet 0005  
                              ??_IsNetworkDevice 0092                                        ??_CCM_Dec 009D  
                             MiWi_TickGet@tmrval 007B                                        ??_CCM_Enc 009D  
                                  ??_RegisterSet 0077                                           ??_main 01B2  
                             MiWi_TickGetMs@tnow 0083                                      ?_MiMAC_Init 0087  
                                         ??_krnd 0077                                    __activetblptr 000002  
                       _RouteManagerShouldInsert 555C                                    le_findIdx@res 0083  
                       ??_MiApp_SearchConnection 01AA                                        ??_LCDInit 0087  
                           __end_of_MiWi_TickGet 705C                                           CTR@len 008C  
                                         CTR@key 008D                                    _IRQ1_Received 003B  
                              __end_of_LCDUpdate 59FA                                    ??_NetworkInit 0098  
                               __end_of_TxPacket 45DA                      radioReceivedPacket@isSecure 0190  
                              ?_isInvalidAddress 0086                      __size_of_NetworkUnicastData 012E  
                          radioReceivedPacket@bt 0198                BroadcastManagerDelaySend@isSecure 00A3  
              MiApp_ProtocolInit@bNetworkFreezer 0001                                  ??_le_computeETX 007D  
                           _MiMAC_ReceivedPacket 0F50                                           ?_crc32 0073  
                                i2SetRFMode@mode 0006                                       _SendPacket 6058  
                                      ??_SPIGet2 0075                    __size_of_NetworkSetDeviceType 000A  
                                 ?_routeInfoInit 007B                       __size_of_BeaconManagerInit 0020  
                             ??_isInvalidAddress 0088                       __size_of_BeaconManagerTask 00E8  
                               ___llmod@dividend 007F                      __size_of_isBroadcastAddress 0044  
                                         _EECON2 000FA7                                           _ANCON0 000F48  
                                         _ANCON1 000F49                        le_findRandomNeighborIdx@i 008C  
                                      ??_SPIPut2 0073                                 ___awdiv@dividend 0073  
                            routingTableFind@res 008C                   __end_of_netChooseAdvertiseTime 64F6  
                                         _LEDCmd 01C6                                           _MACSeq 003C  
                                 __CFG_WDTEN$OFF 000000                                        ??_DelayUS 0077  
                                      ??_DelayMs 007F                 __end_of_NetworkPrepareSendPacket 555C  
                           _BroadcastManagerInit 769C                                           _OSCCON 000FD3  
                           _BroadcastManagerTask 3074                                        ??_HighISR 002C  
                                         _PVALUE FF49                                           _RPOR21 000EDB  
                                         _RPINR1 000EE7                                           _RPOR19 000ED9  
                                ??_RouterEvicted 0091                                   MiMAC_Init@seed 008B  
                 RouteManagerPerformUpdate@entry 00A1                                           _SVALUE FF69  
                                 __CFG_WPCFG$OFF 000000                                           _SPIGet 7842  
                     __size_of_networkSendBeacon 0236                                           _SSPBUF 000FC9  
                                         _SPIPut 7652                    RouteManagerShouldInsert@found 0094  
                  RouteManagerShouldInsert@entry 0090              __end_of_NetworkSendDiscoverResponse 6406  
                    _NetworkSendDiscoverResponse 638E                        __size_of_MiMAC_PowerState 0058  
                __size_of_TunnelManagerSetTunnel 0266                                  ??_isKnownPacket 00AF  
                        i2RegisterSet@IRQ1select 0005                                           i2_krnd 4720  
                                 __CFG_WPDIS$OFF 000000                       MiApp_SearchConnection@mask 02AC  
                                  ?_radioUnicast 00BC                __size_of_le_findRandomNeighborIdx 01AC  
                                  ??_TimeTickISR 0073                                       TxPacket@t1 008C  
                                     TxPacket@t2 0090          TMSendFormedPacketTowardsCoordinator@res 0092  
                      ?_le_findRandomNeighborIdx 0084                  NetworkPrepareSendPacket@address 007F  
                                         _NetSeq 01D4                               __size_of_SetRFMode 006C  
                                 __CFG_XINST$OFF 000000                RouteManagerShouldInsert@rcvBeacon 0095  
                                         _TxData 01D8                                           _TxBuff 0748  
                         _NetworkDiscoveredEvent 3772                     ??_DeviceManagerGetDeviceData 0089  
                                   ?_AddMSToTick 008F                                 LCD_WriteCmd@data 0075  
                        _le_findWorstNeighborIdx 4D40                   le_findWorstNeighborIdx@thisETX 008A  
                              __end_ofi2_DelayUS 7516                                __end_ofi2_DelayMs 5FC8  
                             HighISR@PacketForMe 006A                     ??_DeviceManagerGetDeviceType 0083  
                 ?_TunnelManagerInvalidateTunnel 0081                                           ___wmul 7516  
                                      ??___awdiv 0077                               _radioDiscardPacket 788A  
                                         crc32@p 0085                                   __CFG_STVREN$ON 000000  
                                         _hasAck 0042                                        ??___lldiv 007B  
                                      ??___llmod 0087        NetworkManagerProcessIncomingData@isFormed 0180  
                                         _nState 01DD                        __size_of_MiApp_SetChannel 000C  
                                      ??___lwdiv 0077                                        ??___lwmod 0083  
                                         _encode 3DB8                      routingTableUpdateEntry@from 008F  
                               _MSTickGetDiffNow 6290                                    ??_TimerEnable 0073  
      NetworkManagerProcessIncomingData@isSecure 00E1                                           _myAddr 01EA  
                __end_of_TMSendFormedPacketToRFD 2C08                                           _memcmp 6C0E  
                                         _memcpy 6CBA                   radioReceivedPacket@isBroadcast 018F  
                                         _memset 7498                                           clear_0 567A  
                                         clear_1 568C                                           clear_2 5698  
                                         clear_3 56A4                                           clear_4 56B0  
                                         clear_5 56BC                                           clear_6 56C8  
                                         clear_7 56D4                                           clear_8 56E0  
                                         clear_9 56F2                     __end_of_LEAppendNeighborInfo 3DB8  
                               ___awdiv@quotient 0079                                  _currentInterval 01B6  
                   __end_of_passLinkEtxThreshold 779A                        __size_ofi2_MiWi_TickGetMs 0036  
                        __end_of_TMSendDataToRFD 6E5A                               radioBroadcast@addr 01EC  
                             radioBroadcast@data 00BC                                 __end_of_krndInit 5AB0  
                               _netResetInterval 76B4                       ?_RouteManagerPerformUpdate 0001  
                              __end_of_MSTickGet 72E6                              ?_radioDiscardPacket 0001  
                       __end_of_netDecayInterval 72B0                                __end_of_CacheInit 769C  
                                   ??_EEPROMRead 0078                  le_updateNeighborTableEst@newEst 0094  
                    __end_of_MiApp_IsNetworkBusy 78BA                                     __pdataCOMRAM 0045  
                                      ??_isdigit 0073                          Read_MAC_Address@address 0088  
                                   __mediumconst FB08                            ?_MiMAC_ReceivedPacket 0001  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8                      ??_MiApp_EstablishConnection 009B  
                       ?_NetworkDataArrivedEvent 007B                           _RouteMgrUpdateRequired 01D7  
                         _TunnelManagerGetTunnel 4098                              __end_of_RegisterSet 74EC  
                                LE_ClearDLQ@nidx 008C                                    ?_RegisterRead 0001  
                        _NetworkGetParentAddress 784C                     __end_of_TransportManagerInit 7710  
                            __size_ofi2_TxPacket 013C                                        ??_sprintf 0082  
                   __end_of_TransportManagerTask 0F50                                    LEDCommand@cmd 0073  
                                  LEDCommand@led 0075                                _ReceivedBankIndex 003E  
                              ??_InitSymbolTimer 0073                                  __CFG_DSBOREN$ON 000000  
                                   ?i2_SetRFMode 0001                          ??_NetworkGetMyRouteInfo 0075  
                            networkSendBeacon@bt 00CD                 __size_of_routingTableUpdateEntry 011A  
                          ?_BroadcastManagerInit 0001                              _MiApp_SetAddressPan 6EAA  
                            __end_of_NetworkInit 529E                                 HighISR@BankIndex 0071  
                      radioReceivedPacket@myAddr 0191                            ?_BroadcastManagerTask 0001  
                     __size_of_LE_InsertNeighbor 008E                        radioReceivedPacket@parent 019E  
                           _MiApp_DiscardMessage 7860                                       __accesstop 0060  
                             __size_of_WriteFIFO 0026                          __end_of__initialization 56F8  
                            le_initNeighborIdx@i 0075               __size_of_le_updateNeighborEntryIdx 0156  
                                ??_LCD_WriteData 0075                             ??_radioDiscardPacket 0073  
                      radioReceivedPacket@source 0186                 __end_of_isNetworkSecurityEnabled 787E  
                              ?_LE_UnpinNeighbor 0085                  MiMAC_ReceivedPacket@currentTick 00AC  
                                 ??_radioUnicast 00C4                              __size_of_MiMAC_Init 00FA  
                                  ___rparam_used 000001               __size_of_le_updateNeighborTableEst 02AC  
                        _MiApp_IsMemberOfNetwork 789A                                CCM_Enc@payloadLen 009A  
                  LE_RemoveNeighborDevice@device 0097                       RouteManagerPerformUpdate@i 0097  
                     __end_of_NetworkManagerTask 1F7C                       RouteManagerPerformUpdate@r 00A3  
                           __CFG_WPEND$PAGE_WPFP 000000                           ?_AddNodeToNetworkTable 0081  
                             ??_LE_UnpinNeighbor 0087                              i2MiWi_TickGet@t1ext 0005  
                             __end_of_EEPROMRead 7414                                   __pcstackCOMRAM 0001  
            __size_of_RouteManagerProcessReceive 013E                                        ?i2_SPIGet 0001  
                                      ?i2_SPIPut 0001                                     __pidataBANK1 777C  
                   MiApp_MessageAvailable@tStart 0242                                     ??_LEDCommand 0074  
                                  __end_of_crc32 5D62                                     ButtonTask@Sw 0087  
                                    ?_ButtonTask 0001                            i2RegisterRead@address 0003  
                     le_findEmptyNeighborIdx@res 0077                   DeviceManagerGetDeviceData@data 0083  
               MiMAC_ReceivedPacket@FrameCounter 00B2                         ??_MiApp_GetParentAddress 0077  
                                __CFG_DSWDTEN$ON 000000                             ?_MiApp_SetAddressPan 0083  
                            __end_of_TimeTickISR 7384                                        CTR@nounce 008F  
                                __CFG_DSWDTPS$G2 000000                  ??_DeviceManagerBufferDeviceData 0087  
                    ??_BroadcastManagerDelaySend 00A5                          _TransportManagerNoRoute 78B6  
                         _TunnelManagerSetTunnel 273C                                  TxPacket@rssival 009A  
      __end_of_NetworkManagerProcessIncomingData 2E3E       __size_of_NetworkManagerProcessIncomingData 0236  
            ??_NetworkManagerProcessIncomingData 00E2               ?_NetworkManagerProcessIncomingData 00DC  
              _NetworkManagerProcessIncomingData 2C08               le_updateNeighborEntryIdx@packetGap 009D  
              __end_of_RouteManagerPerformUpdate 1CB0                              isButtonPressed@mask 0076  
                __size_of_MiApp_SearchConnection 0146                                routingTableFind@i 008E  
                      __size_of_routingTableFind 0062                                  _ConnectionTable 0478  
                                     _addressLen 01F9                                 ??i2_RegisterRead 0003  
                            __end_of_TimerEnable 78AA                             __end_of_LCD_WriteCmd 773C  
                      NetworkSetAddressPAN@PANID 0081                                __end_of_SetRFMode 679E  
                                ??_routeInfoInit 007D                                     ?i2_WriteFIFO 0001  
             __end_of_NetworkSendDiscoverRequest 6652                       _NetworkSendDiscoverRequest 65E0  
                               HighISR@PacketLen 0070                                          ??_crc32 007B  
                                 ??_RegisterRead 0075                         AddNodeToNetworkTable@ind 0089  
                                    ?_SendPacket 00AE                           NetworkUnicastData@data 0142  
               __size_of_LE_RemoveNeighborDevice 0066                            Read_MAC_Address@addr8 0082  
                 NetworkPrepareSendPacket@buffer 0081                           NetworkUnicastData@size 0144  
                MiApp_TransceiverPowerState@Mode 008A                                     sprintf@width 0090  
                     routingTableUpdateEntry@idx 0097                            IsNetworkDevice@oldest 0094  
                     routingTableUpdateEntry@etx 0093                             __end_of_le_updateETX 69F8  
                                     __pbssBANK0 00EB                                       __pbssBANK1 01B6  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                     __pbssBANK4 0400                                       __pbssBANK5 0500  
                                     __pbssBANK6 0600                                       __pbssBANK7 0700  
                                     __pbssBANK8 0800                         radioReceivedPacket@PANID 0188  
                          ?_MiApp_DiscardMessage 0001                               __end_of_LEDCommand 7190  
                           MSTickGetDiffNow@diff 0097                      __size_of_MiApp_ProtocolInit 0058  
                          __size_of_HardwareInit 00B4                             MSTickGetDiffNow@tNow 009B  
                           MSTickGetDiffNow@tick 008F                                          ?_SPIGet 0001  
                                        CTR@text 008A                                          ?_SPIPut 0001  
                             RegisterSet@setting 0075                        SendPacket@SecurityEnabled 00B3  
                                  MSTickGet@tNow 0087                        LE_InsertNeighbor@neighbor 0097  
              DeviceManagerGetDeviceType@address 0081                             __size_of_LE_ClearDLQ 0054  
                      ??_le_findWorstNeighborIdx 0083                              i2RegisterRead@value 0004  
                                        ?i2_krnd 0001                         ?_NetworkIssueDataRequest 0001  
                       radioReceivedPacket@child 019C                                 _LELinkQualityGet 6652  
              __end_of_le_updateNeighborEntryIdx 4348                                 _MiMAC_SetChannel 60E8  
                       _NetworkPrepareSendPacket 547C                                       CBC_MAC@MIC 008F  
                      _MiApp_EstablishConnection 5E02                                 _Read_MAC_Address 6EF8  
                             HighISR@RxPacketPtr 006E                        __size_of_RouteManagerInit 0030  
                                   CBC_MAC@block 0094                           radioReceivedPacket@crc 0194  
                      __size_of_RouteManagerTask 0048                __end_of_le_updateNeighborTableEst 2228  
                                     CBC_MAC@len 008C                                       CBC_MAC@key 008D  
               RouteManagerPerformUpdate@linkEtx 0095                    LE_GetNeighborDeviceType@index 0073  
                                      ?_TxPacket 0087                 RouteManagerPerformUpdate@pathEtx 0099  
                               _MiMAC_SendPacket 35C8                                       ??i2_SPIGet 0003  
                                     ??i2_SPIPut 0001                                  main@RequestData 02BB  
                                        ?___wmul 0073                     TunnelManagerGetTunnel@device 00AB  
                          ??_MiApp_SetAddressPan 0087                RoutingTableFindDeviceOrParent@res 0087  
                                        ?_encode 0073                                 radioUnicast@addr 02A3  
                               radioUnicast@data 00C0                            __size_of_MiWi_TickGet 0044  
                               radioUnicast@dest 00BC                                          ?_memcmp 0073  
                             _TimerEnterCritical 78AA                                          ?_memcpy 0075  
                                        _CBC_MAC 5C10                                          ?_memset 0073  
              RouteManagerSetNeighborCongested@n 0073                                          SPIPut@i 0074  
                                        SPIPut@v 0073                                          _CCM_Dec 5706  
                                        _CCM_Enc 588A                                 ?_TMSendDataToRFD 00D4  
                              __end_of_WriteFIFO 7562                  __end_of_NetworkDataArrivedEvent 6D64  
                                    _RegisterSet 74C2                         __size_of_isButtonPressed 002C  
                       LE_InsertNeighbor@devType 0099                                isKnownPacket@hash 00AB  
                                        _LCDInit 4E6C                           ??_MiMAC_ReceivedPacket 00A4  
                                        i2l14700 682A                                          i2l15342 49C8  
                                        i2l15510 0192                                          i2l14704 683A  
                                        i2l15352 49E8                                          i2l15408 4ACE  
                                        i2l15440 0070                                          i2l15432 0052  
                                        i2l14714 6858                                          i2l15370 4A32  
                                        i2l15346 49DC                                          i2l15530 0230  
                                        i2l15522 01EA                                          i2l14708 684A  
                                        i2l15380 4A48                                          i2l15356 49F0  
                                        i2l15604 03AE                                          i2l15540 024E  
                                        i2l15532 0232                                          i2l15620 0436  
                                        i2l15452 0094                                          i2l15444 0080  
                                        i2l15534 0242                                          i2l15526 01F2  
                                        i2l15462 00BE                                          i2l15622 043E  
                                        i2l15392 4A7C                                          i2l15376 4A40  
                                        i2l15608 03B6                                          i2l15544 027E  
                                        i2l15624 0442                                          i2l15394 4A80  
                                        i2l15618 0420                                          i2l15562 02C0  
                                        i2l15546 0280                                          i2l15554 02A8  
                                        i2l14692 680A                                          i2l15396 4A86  
                                        i2l15548 0290                                          i2l15628 0446  
                                        i2l15646 047C                                          i2l15582 030C  
                                        i2l15494 012E                                          i2l14696 681A  
                                        i2l15592 0330                                          i2l15498 0136  
                             __CFG_OSC$INTOSCPLL 000000                                          i2l15598 0392  
                                        _LCDText 03CE                    __size_of_NetworkGetDeviceType 0006  
                      NetworkIssueDataRequest@sz 00CF                                    ?_TimerDisable 0001  
                        NetworkDiscoveredEvent@i 007D                                   NetworkInit@dev 0097  
                            ?_TimerEnterCritical 0001                                          _BMState 01D3  
                      ??_NetworkGetParentAddress 0075                                      _NetworkInit 51A4  
               MiApp_SearchConnection@msDuration 02AA                                     _HardwareInit 5AB0  
                          i2WriteFIFO@IRQ1select 0004                                       _le_findIdx 6B08  
                                        _RPINR21 000EFB                                 HighISR@ackPacket 0064  
                                        _SSP2BUF 000F75                  RouteManagerPerformUpdate@minEtx 009F  
                                        _SPIGet2 7806                           ??_BroadcastManagerInit 007B  
                                        _RF_Mode 003D                                          _AckInfo 0200  
                         ??_BroadcastManagerTask 00C3                                          _SPIPut2 76CC  
                    __size_of_le_initNeighborIdx 007E                                          _RSSIVal 01D6  
                    __size_of_CoordinatorAddress 000A                     ??_TransportManagerRouteFound 0073  
                               ??_LE_PinNeighbor 0087                              __size_of_ButtonTask 0068  
                        __size_of_MiWi_TickGetMs 0036                                          _TMState 003F  
                                        _DelayUS 7440                                          _DelayMs 5E9C  
                      _BroadcastManagerDelaySend 3AA4                       AddNodeToNetworkTable@PANID 0083  
                        __size_of_radioBroadcast 005E                        ??_MiApp_IsMemberOfNetwork 008A  
             NetworkDataArrivedEvent@isBroadcast 0081                                          _HighISR 0008  
                           _LEAppendNeighborInfo 3C2E                 __size_of_TMSendFormedPacketToRFD 0266  
                       ?_le_findEmptyNeighborIdx 0073                                 ??_LEDManagerTask 0087  
                     ?_CoordinatorGenericAddress 007B                        MiApp_MessageAvailable@src 00E9  
                           _passLinkEtxThreshold 778C                                      TxPacket@CCA 0087  
                                        i2krnd@t 0009                                  __size_of_SPIGet 000A  
                               _MiMAC_PowerState 6AB0                                  __size_of_SPIPut 001A  
                                      ?_krndInit 0073                      __end_of_MiMAC_DiscardPacket 7652  
                         _MiApp_SearchConnection 45DA                                  _IsNetworkDevice 3914  
                        ??_NetworkAddressSizeGet 0073                DeviceManagerGetDeviceData@address 0081  
                                __size_ofi2_krnd 0140                             ??_TimerEnterCritical 0073  
                                   _MiWi_TickGet 7018                     __size_of_radioReceivedPacket 0680  
             __end_of_DeviceManagerGetDeviceData 77B4                       _DeviceManagerGetDeviceData 77A8  
                  __size_of_BeaconManagerTrigger 0004                                          __Hparam 0000  
                                   ?_BlinkRedLED 0001                                      _TimeTickISR 7352  
                                        _Tick_MS 0284                                          __Lparam 0000  
             __end_of_DeviceManagerGetDeviceType 65E0                       _DeviceManagerGetDeviceType 656C  
                                        _TxIndex 0040                                     ??i2_TxPacket 0016  
                                     ??_TxPacket 0088                                       CCM_Dec@key 009B  
                                radioBroadcast@i 00C2                     __end_of_MiApp_UnicastAddress 7242  
                     ??_RouteManagerShouldInsert 008A                       ?_LE_processReceivedMessage 009F  
                                        _t1fired 0044                                LCD_WriteData@data 0075  
                       __size_of_NetworkGetPANID 000A                          __size_ofi2_MiWi_TickGet 0040  
                                        ___awdiv 6406                                       _linkEstSeq 01CC  
                                     CCM_Enc@key 009B                                          ___lldiv 64F6  
                                __size_of___wmul 0026                                          ___llmod 6936  
                               _MiApp_SetChannel 77F0                              __size_of_SendPacket 0090  
              __size_of_LE_GetNeighborDeviceType 003C                                          ___lwdiv 6F42  
                                        ___lwmod 70DA                        ??_TransportManagerNoRoute 0073  
                           __size_of_AddMSToTick 008A                             _TransportManagerInit 76FA  
                      ?_LE_GetNeighborDeviceType 0073                             _TransportManagerTask 0B24  
                                __size_of_encode 0170                            __CFG_RTCOSC$INTOSCREF 000000  
                __size_of_MiApp_GetParentAddress 000E                                      _TimerEnable 78A6  
                              _TunnelManagerInit 76E4                     __end_of_NetworkSetAddressPAN 6CBA  
                       __size_of_NetworkHasRoute 0038                                          __pcinit 5632  
                                __size_of_memcmp 0056                                  __size_of_memcpy 0056  
                               i2_MiWi_TickGetMs 731C                                  __size_of_memset 002A  
                                        __ramtop 0F00                                 HighISR@fifo_stat 0063  
           __size_of_MiApp_TransceiverPowerState 0014                                          __ptext0 12E2  
                                        __ptext1 2228                                     ??_MiMAC_Init 008A  
                                        __ptext2 7616                                          __ptext3 7516  
                                        __ptext4 7414                                          __ptext5 6EF8  
                                        __ptext6 73E6                                          __ptext7 7806  
                                        __ptext8 7208                                          __ptext9 4C12  
                                        _myPANID 004D                                        _T0CONbits 000FD5  
                            radioBroadcast@PANID 00BF                               ?_TunnelManagerInit 0001  
                __end_of_le_findWorstNeighborIdx 4E6C                __size_of_isNetworkSecurityEnabled 0006  
                                   __size_of_CTR 00BE                                   ??_TimerDisable 0073  
                              __end_of_hexpowers FF91                        ?_isNetworkSecurityEnabled 0001  
                       ??_MiApp_MessageAvailable 01A2                              __end_of_crc32_table FF09  
                           __end_of_radioUnicast 6E0A                  le_findWorstNeighborIdx@worstETX 008C  
                                        _isdigit 7616              BroadcastManagerDelaySend@isInterPan 00A4  
                                  HighISR@dstPan 0068                                    _myLongAddress 01FC  
          __end_of_DeviceManagerBufferDeviceData 7824           __size_of_DeviceManagerBufferDeviceData 000A  
                  _DeviceManagerBufferDeviceData 781A                                 NetworkInit@PANID 0095  
                         RegisterRead@IRQ1select 0077                       ?_RouteManagerRequestUpdate 0001  
                    __end_of_RMRoutingTableCount 782E                          MiApp_SetAddressPan@addr 0087  
                                        encode@i 0083                              ??_TunnelManagerInit 007B  
                   ??_NetworkManagerGetMyAddress 0075                          _routingTableUpdateEntry 4F90  
                                        _sprintf 2228                                        _LCDUpdate 5942  
                                        main@src 02BE                           ??_MiApp_DiscardMessage 0073  
                                        _tunnels 0400                               __end_ofi2_TxPacket 4ADA  
                           end_of_initialization 56F8                                        DelayMs@ms 007B  
                       __end_of_MSTickGetDiffNow 6310                  __end_of_NetworkIssueDataRequest 6732  
                       __size_of_NetworkSequence 0008                                          memcmp@n 0077  
                                      i2SPIPut@v 0002                                          memcpy@d 007B  
                                        memcpy@n 0079                            ?_LEAppendNeighborInfo 0084  
                                        memcpy@s 007D                                       _srcAddress 02A1  
                          ?_passLinkEtxThreshold 0073                         Read_MAC_Address@pAddress 008A  
                                        memset@c 0075                                          memset@n 0077  
                                        memset@p 0079                    MiMAC_SendPacket@MACPayloadLen 00A9  
                                 le_computeETX@q 007E                                    __Lmediumconst FB08  
                                  _intervalDelay 01BE                             __size_ofi2_SetRFMode 0068  
                       __end_of_netResetInterval 76CC                          ?_NetworkDiscoveredEvent 0073  
          NetworkManagerProcessIncomingData@dHdr 0184                                       ??_krndInit 0075  
              __end_of_CoordinatorGenericAddress 75AE            NetworkManagerProcessIncomingData@data 00DC  
                                      i2u1680_40 476E                                        i2u1656_45 75D0  
                                      i2u1680_45 4764                                        i2u1656_46 75D2  
                                      i2u1681_45 4794                                        i2u1677_45 7492  
                                      i2u1677_46 7494                                        i2u1790_40 01E2  
                                      i2u1678_45 75F2                                        i2u1678_46 75F4  
                                      i2u1767_40 4AC0                                        i2u1679_45 4732  
                                ___lldiv@divisor 0077                               __end_of_MiMAC_Init 51A4  
                                      i2u1789_40 01D6                        __size_of_isInvalidAddress 000C  
          NetworkManagerProcessIncomingData@size 00DE                                  ___lldiv@counter 007F  
                       LEAppendNeighborInfo@data 0084                        RouteManagerShouldInsert@i 0092  
                       LEAppendNeighborInfo@size 0086                     __end_of_NetworkSetDeviceType 7842  
                        MiMAC_SetChannel@channel 007B                                          postdec1 000FE5  
                                        postdec2 000FDD              NetworkSendDiscoverResponse@databuff 0100  
                           __end_of_RegisterRead 73B6                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                      __end_of_TunnelManagerInit 76FA                            ?_TransportManagerInit 0001  
              __end_of_LE_processReceivedMessage 4C12                            __end_of_isSameAddress 7588  
                          ?_TransportManagerTask 0001                              RegisterRead@address 0075  
                            TMSendDataToRFD@data 00D7                                    WriteFIFO@Data 0075  
                            TMSendDataToRFD@size 00D9                                        i2_DelayUS 74EC  
                                      i2_DelayMs 5F32                            __size_of_LCD_WriteCmd 0016  
           __size_of_NetworkSendDiscoverResponse 0078                         MiMAC_ReceivedPacket@addr 00B0  
                                      _PORTBbits 000F81                           radioBroadcast@datasize 00BE  
                                _InitSymbolTimer 773C               DeviceManagerBufferDeviceData@empty 008C  
                          __end_ofi2_RegisterSet 75D4                       __end_of_NetworkUnicastData 4D40  
                           networkSendBeacon@adr 00CB                       le_findWorstNeighborIdx@res 0088  
                    ??_RouteManagerPerformUpdate 0093                             networkSendBeacon@hdr 00D1  
                        ?_TunnelManagerGetTunnel 00AB                                 _routingTableFind 68D4  
                              ?_netDecayInterval 0001                                 __CFG_CPUDIV$OSC1 000000  
                          __size_of_le_updateETX 0060                       __end_of_isBroadcastAddress 7018  
                         radioBroadcast@isSecure 00C1                                        _TRISAbits 000F92  
                                      _TRISBbits 000F93                                  _CoordinatorAddr 01E8  
                                      _TRISCbits 000F94                                        _TRISDbits 000F95  
                                      _TRISEbits 000F96                                       encode@text 0073  
                ??_TunnelManagerInvalidateTunnel 0083                          _LE_RemoveNeighborDevice 686E  
                                    ?_le_findIdx 0081                               ??_netDecayInterval 0093  
                                      _MSTickGet 72B0                           LE_PinNeighbor@neighbor 0085  
                                  _mySecurityKey FF99                                        _CacheInit 7684  
                        MiMAC_SendPacket@TxIndex 00AD                              LELinkQualityGet@idx 008D  
              __end_of_RouteManagerRequestUpdate 7870                              LELinkQualityGet@res 008B  
                           le_initNeighborIdx@ne 0076                                ??_isButtonPressed 0073  
                       ??_NetworkReleaseUserData 0073                                       ?_LCDUpdate 0001  
                          __end_of_le_computeETX 70DA                          TunnelManagerGetTunnel@i 00BF  
                           __size_ofi2_WriteFIFO 0022                          __end_of_IsNetworkDevice 3AA4  
                                    _t1extension 01C2                           _MiApp_GetParentAddress 779A  
                              le_findIdx@ll_addr 0081                   __end_of_NetworkDiscoveredEvent 3914  
                              CCM_Dec@payloadLen 009A                       MiMAC_SendPacket@transParam 00A2  
                  RouteManagerProcessReceive@len 00A1                   __size_of_NetworkGetMyRouteInfo 000C  
                  __end_of_NetworkGetMyRouteInfo 77CC                          ??_AddNodeToNetworkTable 0085  
                                 _lcdInitialized 01DC                                __CFG_WPFP$PAGE_63 000000  
                      MiApp_UnicastAddress@SecEn 014B                                       main@tStart 02B6  
                      LEAppendNeighborInfo@count 008E                                 __CFG_IOL1WAY$OFF 000000  
                                 __end_of_PVALUE FF69                                   RouterEvicted@i 0096  
                          __end_of_RouterEvicted 5E02                                   RouterEvicted@r 0093  
                                 __end_of_SVALUE FF89                                   __end_of_SPIGet 784C  
                           radioUnicast@datasize 00C2                 __size_of_NetworkDataArrivedEvent 0054  
                                 __end_of_SPIPut 766C                        BroadcastManagerTask@PANID 00CD  
                               _RouteManagerInit 73B6                            __end_of_isKnownPacket 273C  
                              _DeviceManagerInit 766C                                   __end_ofi2_krnd 4860  
                               _RouteManagerTask 6F8C                                     _LCD_WriteCmd 7726  
                            __CFG_MSSP7B_EN$MSK7 000000                               le_updateETX@newEst 0082  
                             ?_DeviceManagerInit 0001                             radioUnicast@isSecure 00C3  
                                   DelayUS@delay 0073                                     ??_ButtonTask 0087  
                    TMSendFormedPacketToRFD@data 00C7                          ?_TunnelManagerSetTunnel 008F  
                    TMSendFormedPacketToRFD@dhdr 00D0                                      _crc32_table FB09  
              NetworkSendDiscoverRequest@address 0144                                   isKnownPacket@i 00D0  
                    TMSendFormedPacketToRFD@size 00C9                                       LCDUpdate@i 0087  
                                 __end_of___wmul 753C                                    ButtonTask@pS0 0039  
                                  ButtonTask@pS1 003A                                     _le_updateETX 6998  
                              __size_ofi2_SPIGet 000A                                __size_ofi2_SPIPut 0016  
                                     ?i2_DelayUS 0001                                    __pidataCOMRAM 77FC  
                                     ?i2_DelayMs 0009              RoutingTableFindDeviceOrParent@entry 0089  
                                 __end_of_encode 3F28                             i2MiWi_TickGet@tmrval 0009  
             __size_of_MiApp_EstablishConnection 009A                             main@pButtonPressed_0 02B4  
                           main@pButtonPressed_1 02B5                   __end_of_TunnelManagerGetTunnel 41F2  
                           i2MiWi_TickGetMs@tnow 0011                        __size_of_LE_UnpinNeighbor 003C  
                                 __end_of_memcmp 6C64                                   __end_of_memcpy 6D10  
                                 __end_of_memset 74C2                               _NetworkManagerTask 1CB0  
                            ??_DeviceManagerInit 007B                                ??_NetworkGetPANID 0075  
                         isBroadcastAddress@F537 FF91                         __end_of_LELinkQualityGet 66C2  
                __size_of_MiApp_MessageAvailable 00F6                 MiMAC_ReceivedPacket@PayloadIndex 00B7  
                       __end_of_MiMAC_SetChannel 6178                         ??_GetRouteAddressOfChild 008D  
                            start_initialization 5632                                        _MyAddress 01FA  
                      ??_routingTableUpdateEntry 0095                         __end_of_Read_MAC_Address 6F42  
                                    __end_of_CTR 588A                                    TxPacket@delay 0094  
                              ??_NetworkHasRoute 0088                                MiWi_TickGet@t1ext 0077  
                    ?_NetworkSendDiscoverRequest 0001                                       ?_MSTickGet 007F  
                                  TxPacket@reTry 0096                              WriteFIFO@IRQ1select 0076  
                         isBroadcastAddress@addr 007D                                       ?_CacheInit 0001  
                       __end_of_MiMAC_SendPacket 3772                                     ??_SendPacket 00B4  
                            ?_NetworkManagerTask 0001                       i2TxPacket@allowedTxFailure 0027  
             __end_of_TransportManagerRouteFound 78B6                       _TransportManagerRouteFound 78B4  
                         TransportManagerTask@sz 0140                             _MiApp_UnicastAddress 7208  
                     ??_NetworkPrepareSendPacket 0088                        GetRouteAddressOfChild@res 008D  
                            NetworkInit@devPanID 0098                     __size_of_MiApp_IsNetworkBusy 0002  
                   BroadcastManagerDelaySend@res 00AB                           ??_LEAppendNeighborInfo 0088  
                   BroadcastManagerDelaySend@pkt 009F                   ?_DeviceManagerBufferDeviceData 007F  
                                      _SetRFMode 6732                                   _MiWi_TickGetMs 72E6  
                         ??_passLinkEtxThreshold 0075                    LE_processReceivedMessage@bhdr 00A9  
                  LE_processReceivedMessage@data 00A1                                   _radioBroadcast 69F8  
                        _TMSendFormedPacketToRFD 29A2                    LE_processReceivedMessage@nidx 00AD  
                  LE_processReceivedMessage@rssi 00A4                                         CBC_MAC@i 0096  
                                       CBC_MAC@j 0095                         _le_findRandomNeighborIdx 341C  
                             __end_of_ButtonTask 6806                             isButtonPressed@index 0075  
                           _NetworkSetAddressPAN 6C64                                         ??_SPIGet 0075  
                      _RouteManagerPerformUpdate 19C8                                         ??_SPIPut 0073  
                                ___llmod@divisor 0083                        __end_of_DeviceManagerInit 7684  
                    __size_of_radioDiscardPacket 0004                                  ___llmod@counter 0087  
                                       ??i2_krnd 0005                             __end_of_TimerDisable 78B2  
                          __end_of_LCD_WriteData 7726                               NetworkHasRoute@res 0089  
                                      TxPacket@i 009D                                        TxPacket@j 0098  
                              ??_NetworkSequence 0073                                         CCM_Dec@i 00A3  
                                       CCM_Enc@i 00A1                           IsNetworkDevice@address 008F  
                           ??_NetworkManagerTask 00D3                           ??_TransportManagerInit 007B  
                 __end_of_TunnelManagerSetTunnel 29A2                           ??_TransportManagerTask 00C5  
             __size_of_BroadcastManagerDelaySend 018A              le_findWorstNeighborIdx@thresholdETX 0085  
                        __end_of_InitSymbolTimer 7752                                   i2_MiWi_TickGet 705C  
                            __size_of_le_findIdx 0058            TMSendFormedPacketTowardsCoordinator@i 0093  
                                       ??___wmul 0077                       __size_of_TunnelManagerInit 0016  
                           __size_of_BlinkRedLED 000C                           IsNetworkDevice@devType 0091  
                                    _CCM_Dec$784 00A1          NetworkManagerProcessIncomingData@buffer 0140  
                                       ??_encode 0077                                      __pdataBANK1 01EE  
                              __size_of_TxPacket 0148                                 __CFG_LPT1OSC$OFF 000000  
                             __end_of_SendPacket 60E8                                         ??_memcmp 0079  
                          __size_of_radioUnicast 0052                                         ??_memcpy 007B  
                                       ?_CBC_MAC 008A                                         ??_memset 0079  
                                    _CCM_Enc$776 009F                                         ?_CCM_Dec 0097  
                                       ?_CCM_Enc 0097                                     ?_RegisterSet 0075  
               __size_of_NetworkIssueDataRequest 0070                       SendPacket@destinationPANID 00B0  
             MiApp_SearchConnection@ScanDuartion 02A9                               networkSendBeacon@r 00CF  
                       __end_of_MiMAC_PowerState 6B08                        ??_LE_RemoveNeighborDevice 0099  
                              RegisterRead@value 0076                                         ?_LCDInit 0001  
                                    __pbssBIGRAM 08DC                         le_findEmptyNeighborIdx@i 0079  
                       ??_netChooseAdvertiseTime 008F                              _radioReceivedPacket 04A4  
                           LEDManagerTask@tStart 021E                                      __pbssCOMRAM 0036  
                                   ?_NetworkInit 0093                                     _neighbor_tbl 0500  
                   ??_RouteManagerProcessReceive 00A2                                        _WriteFIFO 753C  
                                  __pcstackBANK0 0060                                    __pcstackBANK1 0100  
                                  __pcstackBANK2 02A5               __end_of_NetworkManagerGetMyAddress 77D8  
                     _NetworkManagerGetMyAddress 77CC                             LE_UnpinNeighbor@nidx 008A  
                          MSTickGetDiffNow@tdiff 00A3                              SendPacket@Broadcast 00B6  
                                       CTR@block 0094           MiApp_UnicastAddress@DestinationAddress 0147  
                         __end_of_MiWi_TickGetMs 731C                            ?_MiApp_UnicastAddress 0147  
                          __end_of_routeInfoInit 6C0E                           __end_of_radioBroadcast 6A56  
                                   _isdigit$4824 0074                                         ?_SPIGet2 0001  
                           _NetworkSetDeviceType 7838                                     _myDeviceType 02C2  
                     __end_of_MiApp_ProtocolInit 6BB8                                      ??_LCDUpdate 0087  
                                       ?_SPIPut2 0001                  __size_of_NetworkReleaseUserData 0004  
                       __end_of_MiApp_SetChannel 77FC                                 ?_IsNetworkDevice 008F  
                                     ?_SetRFMode 0001                                Read_MAC_Address@i 008C  
    NetworkManagerProcessIncomingData@packetsize 0181                                  isSameAddress@a1 007D  
                                isSameAddress@a2 007F                                    ??_LE_ClearDLQ 0087  
                        ?_MiApp_SearchConnection 01A6                             RouterEvicted@address 008F  
          __end_of_TunnelManagerInvalidateTunnel 6058           __size_of_TunnelManagerInvalidateTunnel 0090  
                  _TunnelManagerInvalidateTunnel 5FC8                                      MiMAC_Init@i 008D  
                                       ?_DelayUS 0073                                         ?_DelayMs 007B  
                          ?_NetworkSetAddressPAN 007F                         __end_ofi2_MiWi_TickGetMs 7352  
                                       ?_HighISR 0001                 __end_of_LE_GetNeighborDeviceType 7154  
                                    sprintf@flag 0087                         routingTableFind@neighbor 0088  
                          NetworkUnicastData@res 00DE                             IsNetworkDevice@empty 009D  
                                    sprintf@prec 008A                 TunnelManagerSetTunnel@OldestTick 009F  
                              _LinkEstimatorInit 77E4                    NetworkPrepareSendPacket@pType 0083  
                    ??_CoordinatorGenericAddress 007D                     __end_of_NetworkGetDeviceType 7884  
                                      crc32@size 0079                               LE_PinNeighbor@nidx 008A  
                                      __pnvBANK2 02C2                            __size_of_RegisterRead 0032  
                         _MiApp_MessageAvailable 529E                     ?_MiApp_TransceiverPowerState 0001  
                           ?_radioReceivedPacket 0186                      __end_of_MiApp_SetAddressPan 6EF8  
                               _isInvalidAddress 77D8                  __end_of_routingTableUpdateEntry 50AA  
                             ?_LinkEstimatorInit 0001                                     _radioUnicast 6DB8  
                         __end_ofi2_MiWi_TickGet 709C                                     ?_TimeTickISR 0001  
                        radioReceivedPacket@data 018A                          radioReceivedPacket@dhdr 01A0  
                    ?_DeviceManagerGetDeviceData 0081                 ??_RoutingTableFindDeviceOrParent 0083  
                ?_RoutingTableFindDeviceOrParent 0081                          TMSendDataToRFD@databuff 0100  
                              MiMAC_SendPacket@i 00AC                                 ___lwdiv@dividend 0073  
                        radioReceivedPacket@rhdr 019A                       MiApp_SetAddressPan@address 0083  
                        radioReceivedPacket@size 018C                   __size_of_NetworkAddressSizeGet 0006  
                        radioReceivedPacket@rssi 018E                       ?_le_updateNeighborEntryIdx 0099  
                              __size_of_krndInit 00B6                      ?_DeviceManagerGetDeviceType 0081  
                   TransportManagerTask@databuff 0100                    __end_of_NetworkAddressSizeGet 788A  
                                    CBC_MAC@text 008A                                        __pintcode 0008  
                     ?_le_updateNeighborTableEst 0088                                    __pmediumconst FB08  
                    ??_LE_processReceivedMessage 00A5                                         ?___awdiv 0073  
                                      __ptext100 7878                                        __ptext101 5D62  
                                      __ptext110 782E                                        __ptext102 68D4  
                                      __ptext111 7588                                        __ptext103 7562  
                                      __ptext120 7242                                        __ptext112 6B60  
                                      __ptext104 6BB8                                        __ptext121 77D8  
                                      __ptext113 7838                                        __ptext105 7868  
                                      __ptext130 73B6                                        __ptext122 6FD4  
                                      __ptext114 50AA                                        __ptext106 77C0  
                                      __ptext131 77E4                                        __ptext123 6C0E  
                                      __ptext115 59FA                                        __ptext107 547C  
                                      __ptext140 6936                                        __ptext132 766C  
                                      __ptext124 779A                                        __ptext116 7384  
                                      __ptext108 7870                                        __ptext141 72B0  
                                      __ptext133 7684                                        __ptext125 784C  
                                      __ptext117 7842                                        __ptext109 77CC  
                                      __ptext150 7652                                        __ptext142 78A2  
                                      __ptext134 769C                                        __ptext126 5E02  
                                      __ptext118 789A                                        __ptext151 6EAA  
                                      __ptext143 78A6                                        __ptext135 7498  
                                      __ptext127 51A4                                        __ptext119 789E  
                                      __ptext160 7726                                        __ptext152 6C64  
                                      __ptext144 78AA                                        __ptext136 75F6  
                                      __ptext128 76E4                                        __ptext161 76CC  
                                      __ptext153 6CBA                                        __ptext145 78AE  
                                      __ptext137 76B4                                        __ptext129 76FA  
                                      __ptext170 499E                                        __ptext162 5E9C  
                                      __ptext154 787E                                        __ptext146 77F0  
                                      __ptext138 647E                                        __ptext171 4720  
                                      __ptext163 7440                                        __ptext155 7884  
                                      __ptext147 60E8                                        __ptext139 3F28  
                                      __ptext180 5F32                                        __ptext172 75D4  
                                      __ptext164 773C                                        __ptext156 1660  
                                      __ptext148 6732                                        __ptext181 74EC  
                                      __ptext173 6806                                        __ptext165 5AB0  
                                      __ptext157 5942                                        __ptext149 74C2  
                                      __ptext174 75AE                                        __ptext166 679E  
                                      __ptext158 7710                                        __ptext175 746C  
                                      __ptext167 72E6                                        __ptext159 4E6C  
                                      __ptext176 7856                                        __ptext168 7018  
                                      __ptext177 7752                                        __ptext178 731C  
                                      __ptext179 705C                        MiMAC_SendPacket@headerLen 00AB  
                                       ?___lldiv 0073                                         ?___llmod 007F  
                                       ?___lwdiv 0073                                         ?___lwmod 007F  
                              radioUnicast@PANID 00BE                          TMSendDataToRFD@isSecure 00DB  
                            ??_LinkEstimatorInit 0073                                     ?_TimerEnable 0001  
            RouteManagerPerformUpdate@currentEtx 009B                 __size_of_le_findEmptyNeighborIdx 0050  
                                    ??i2_DelayUS 0005                                      ??i2_DelayMs 000D  
                          LEAppendNeighborInfo@i 0090                            LEAppendNeighborInfo@j 0092  
                          LEAppendNeighborInfo@k 0094                                        _tInterval 0232  
             NetworkSendDiscoverRequest@databuff 0100                   routingTableUpdateEntry@linkEtx 0095  
                   __end_of_BeaconManagerTrigger 7892                    TunnelManagerGetTunnel@retAddr 00BD  
                                       ?_isdigit 0001                                         SPIPut2@i 0074  
                                       SPIPut2@v 0073                                       ?_WriteFIFO 0001  
                __size_of_GetRouteAddressOfChild 005A                       __end_of_le_initNeighborIdx 638E  
                     __end_of_CoordinatorAddress 781A                    __size_of_MiMAC_ReceivedPacket 0392  
                                    ??_MSTickGet 0087                                 CCM_Dec@headerLen 0099  
                                    ??_CacheInit 007B                      ??_RouteManagerRequestUpdate 0073  
                                      _hexpowers FF89                                   __size_of_crc32 00A6  
                          ?_NetworkSetDeviceType 0001                                        _tRouteMgr 023A  
                      ??_TMSendFormedPacketToRFD 00CC                                  ?_MiWi_TickGetMs 007F  
                               ___lwdiv@quotient 0078                         __size_of_TMSendDataToRFD 0050  
                                ?_radioBroadcast 00BC                   __end_of_MiApp_SearchConnection 4720  
                                       ?_sprintf 007A             DeviceManagerBufferDeviceData@address 007F  
                                   _RegisterRead 7384                                         _DEVPanID 01F6  
                        TunnelManagerSetTunnel@i 00A7                         ?_le_findWorstNeighborIdx 0081  
                      __end_of_LinkEstimatorInit 77F0                                ?_MSTickGetDiffNow 008F  
                  __size_of_BroadcastManagerInit 0018                    __size_of_BroadcastManagerTask 01F0  
                             isKnownPacket@index 00C4                          isInvalidAddress@address 0086  
                                 ___wmul@product 0077                           _isNetworkTrafficSecure 01DB  
                        __size_ofi2_RegisterRead 002C                                         _LATAbits 000F89  
                    NetworkDiscoveredEvent@PANID 0073                             i2RegisterSet@setting 0003  
                                       _LATCbits 000F8B                                         DelayUS@i 0077  
                                       _LATDbits 000F8C                                         _LATEbits 000F8D  
                        _NetworkDataArrivedEvent 6D10                       __size_of_DeviceManagerInit 0018  
                                       _LEDState 01C9                               ??_MSTickGetDiffNow 0097  
                             isKnownPacket@zeros 00B5                            ??_radioReceivedPacket 00E3  
                              ?_netResetInterval 0001                     ?_NetworkSendDiscoverResponse 0001  
                       __end_of_routingTableFind 6936                                 IsNetworkDevice@i 009F  
                    __size_of_TimerEnterCritical 0004                                  ?i2_MiWi_TickGet 0001  
                            __end_of_LE_ClearDLQ 6DB8                                         HighISR@i 0072  
                                       _PIR1bits 000F9E                                ButtonTask@s0Count 01D0  
                                  ??_AddMSToTick 009B                                         _PIR3bits 000FA4  
                              ButtonTask@s1Count 01D1                               ??_netResetInterval 0093  
                        LEAppendNeighborInfo@cnt 008A                    ??_MiApp_TransceiverPowerState 0089  
                                      _rxMessage 027A                          MiApp_UnicastAddress@src 00DF  
                    NetworkDiscoveredEvent@empty 007B                                 __CFG_WDTPS$32768 000000  
                                       i2_SPIGet 7856                                         i2_SPIPut 7752  
                               ?_InitSymbolTimer 0001                                        main@F8344 0253  
               RouteManagerProcessReceive@source 009D                                         _SSP1CON1 000FC6  
                                       _SSP2CON1 000F72                           _NetworkReleaseUserData 7892  
            __size_of_NetworkSendDiscoverRequest 0072                DeviceManagerBufferDeviceData@data 0081  
                                       _SSP1STAT 000FC7                                         _SSP2STAT 000F73  
                   __size_of_MiMAC_DiscardPacket 001E                DeviceManagerBufferDeviceData@size 0083  
                  BroadcastManagerDelaySend@size 00A1         MiApp_EstablishConnection@ActiveScanIndex 009E  
                        GetRouteAddressOfChild@i 008F                                      _MACRxPacket 026E  
                                      encode@key 0075                                   i2DelayUS@delay 0001  
                   MiApp_EstablishConnection@dev 009B                                        encode@sum 0088  
                                _isButtonPressed 7414                         ?_NetworkGetParentAddress 0073  
                                       _RSSILock 01D5                                      _MACTxBuffer 038E  
                   MiApp_EstablishConnection@src 009C                                    AddMSToTick@ms 0097  
                                  SetRFMode@mode 0078                                 __size_of_CBC_MAC 00AC  
                               _LE_UnpinNeighbor 7190                        _CoordinatorGenericAddress 7588  
                        passLinkEtxThreshold@etx 0073                                ___wmul@multiplier 0073  
   __end_of_TMSendFormedPacketTowardsCoordinator 4492    __size_of_TMSendFormedPacketTowardsCoordinator 014A  
         ??_TMSendFormedPacketTowardsCoordinator 0090            ?_TMSendFormedPacketTowardsCoordinator 008A  
           _TMSendFormedPacketTowardsCoordinator 4348                  RouteManagerShouldInsert@pathEtx 008C  
                               __size_of_CCM_Dec 00C6                                 __size_of_CCM_Enc 00B8  
                                      _routeInfo 0294                     le_updateNeighborEntryIdx@dev 009A  
                              _netSequenceNumber 01DE                     le_updateNeighborEntryIdx@idx 009E  
                   le_updateNeighborEntryIdx@seq 0099                                _TimerExitCritical 78A2  
                   AddNodeToNetworkTable@address 0081                                        main@coord 02C0  
                          i2TxPacket@TxPacketLen 001A                    TMSendFormedPacketToRFD@device 00C5  
                               __size_of_LCDInit 0124                  __size_of_netChooseAdvertiseTime 0078  
                           _OutgoingFrameCounter 029B                         __end_of_RouteManagerInit 73E6  
                         ??_MiApp_UnicastAddress 00DF                         __end_of_RouteManagerTask 6FD4  
                        isKnownPacket@OldestTick 00C8                                     ??_le_findIdx 0083  
                        ?_MiApp_GetParentAddress 0075                              SendPacket@isCommand 00B2  
              __size_of_RouteManagerShouldInsert 00D6                               ?_TimerExitCritical 0001  
                  TMSendFormedPacketToRFD@parent 00D2                        ?_RouteManagerShouldInsert 0088  
                  TMSendFormedPacketToRFD@myaddr 00CD                        _LE_processReceivedMessage 4ADA  
                       ?_MiApp_IsMemberOfNetwork 0001            RoutingTableFindDeviceOrParent@address 0081  
                                    _INTCON2bits 000FF1                                      _INTCON3bits 000FF0  
                                      copy_data0 5646                                        copy_data1 5666  
                                  ??i2_SetRFMode 0006                                      ??_SetRFMode 0078  
                         ??_NetworkSetAddressPAN 0083                                 __size_of_SPIGet2 000A  
                      le_initNeighborIdx@ll_addr 0073                            __size_of_TimerDisable 0004  
                               __size_of_SPIPut2 0018                               _NetworkUnicastData 4C12  
                  __size_of_MiApp_DiscardMessage 0008     NetworkManagerProcessIncomingData@isBroadcast 00E0  
                            ??_TimerExitCritical 0073                            TransportManagerTask@i 0142  
                                       _TxMACSeq 0041                            isBroadcastAddress@res 0085  
                             NetworkInit@address 0093                                 __size_of_DelayUS 002C  
                               __size_of_DelayMs 0096                     __size_of_RMRoutingTableCount 000A  
                               __size_of_HighISR 0498                        __size_of_netDecayInterval 0036  
                   LE_processReceivedMessage@hdr 00A7                     LE_processReceivedMessage@len 00A3  
                             _isBroadcastAddress 6FD4    le_findRandomNeighborIdx@num_eligible_eviction 008B  
                 __size_of_AddNodeToNetworkTable 01B8                          NetworkSetDeviceType@dev 0073  
                  __end_of_AddNodeToNetworkTable 341C                           _GetRouteAddressOfChild 6A56  
                                       __Hrparam 0000                                         _RxPacket 0300  
                       ?_TransportManagerNoRoute 0001                              ?_NetworkUnicastData 0140  
                       _LE_GetNeighborDeviceType 7118                                         _TxBuffer 0788  
                  ??_NetworkSendDiscoverResponse 00AE                        _RouteManagerRequestUpdate 7868  
                                       __Lrparam 0000                                  _NetworkGetPANID 782E  
                                       _TxPacket 4492                          __size_of_LE_PinNeighbor 003C  
             DeviceManagerGetDeviceData@isFormed 0087                                      CCM_Dec@text 0097  
                            ?_isBroadcastAddress 007B               DeviceManagerGetDeviceData@isSecure 0085  
   TMSendFormedPacketTowardsCoordinator@isFormed 008E               __size_of_RouteManagerPerformUpdate 02E8  
                             __end_of_le_findIdx 6B60                                  _NetworkHasRoute 7242  
                          MiMAC_ReceivedPacket@i 00B8                            MiMAC_ReceivedPacket@j 00B6  
   TMSendFormedPacketTowardsCoordinator@isSecure 008F                              _MiApp_IsNetworkBusy 78B8  
                        __size_of_LEDManagerTask 0368                                 __size_of___awdiv 0078  
                       _isNetworkSecurityEnabled 7878                                 __size_of___lldiv 0076  
                               __size_of___llmod 0062                                 __size_of___lwdiv 004A  
                               __size_of___lwmod 003E                          _NetworkIssueDataRequest 66C2  
                                    CCM_Enc@text 0097                              __end_of_AddMSToTick 6290  
                      __end_of_TimerExitCritical 78A6                         i2RegisterRead@IRQ1select 0005  
                            LE_ClearDLQ@neighbor 0085                           AddNodeToNetworkTable@i 008B  
                                     sprintf@idx 0086                                       _EEPROMRead 73E6  
                                     sprintf@len 008E               __end_of_RouteManagerProcessReceive 499E  
                     _RouteManagerProcessReceive 4860                                      _currentTime 01BA  
                                     sprintf@val 0088                   __end_of_MiApp_GetParentAddress 77A8  
                                       crc32@crc 0073                             _NetworkGetDeviceType 787E  
                                       crc32@buf 0077                 LE_processReceivedMessage@ll_addr 00AB  
                    DeviceManagerGetDeviceType@i 0086                                     _TimerDisable 78AE  
                           __size_of_RegisterSet 002A                       ??_le_findRandomNeighborIdx 0086  
                           ??_NetworkUnicastData 00DC                                    ??i2_WriteFIFO 0003  
                              ?_LELinkQualityGet 0085                                      ??_WriteFIFO 0075  
                         ??_NetworkSetDeviceType 0073                      NetworkSetAddressPAN@address 007F  
                               __size_of_isdigit 001E                                ?_MiMAC_SetChannel 0079  
                                ___lwdiv@divisor 0075                                         _devState 01DA  
                                       _hc_table 0A98                       TunnelManagerGetTunnel@addr 00BB  
                              ?_Read_MAC_Address 007F                  RoutingTableFindDeviceOrParent@i 0085  
                                ___lwdiv@counter 0077              RouteManagerProcessReceive@congested 00A5  
                                       __ptext10 7768                                         __ptext11 6AB0  
                                       __ptext20 273C                                         __ptext12 45DA  
                                       __ptext21 4860                                         __ptext13 65E0  
                                       __ptext30 4098                                         __ptext22 4F90  
                                       __ptext14 529E                                         __ptext31 4348  
                                       __ptext23 78B2                                         __ptext15 04A4  
                                       __ptext40 3914                                         __ptext32 686E  
                                       __ptext24 6178                                         __ptext16 788A  
                                       __ptext41 77A8                                         __ptext33 6A56  
                                       __ptext25 638E                                         __ptext17 7634  
                                       __ptext50 6310                                         __ptext42 3772  
                                       __ptext34 5B64                                         __ptext26 2C08  
                                       __ptext18 24CE                                         __ptext51 4D40  
                                       __ptext43 4ADA                                         __ptext35 7118  
                                       __ptext27 6E0A                                         __ptext19 5CBC  
                                       __ptext60 1CB0                                         __ptext52 341C  
                                       __ptext44 41F2                                         __ptext36 7810  
                                       __ptext28 29A2                                         __ptext61 0B24  
                                       __ptext53 6E5A                                         __ptext45 1F7C  
                                       __ptext37 3AA4                                         __ptext29 5FC8  
                                       __ptext70 788E                                         __ptext62 6F8C  
                                       __ptext54 555C                                         __ptext46 6998  
                                       __ptext38 6206                                         __ptext71 7824  
                                       __ptext63 19C8                                         __ptext55 656C  
                                       __ptext47 709C                                         __ptext39 6D10  
                                       __ptext80 70DA                                         __ptext72 78B8  
                                       __ptext64 778C                                         __ptext56 781A  
                                       __ptext48 6406                                         __ptext81 6F42  
                                       __ptext73 3074                                         __ptext65 78B4  
                                       __ptext57 77B4                                         __ptext49 64F6  
                                       __ptext90 66C2                                         __ptext82 727A  
                                       __ptext74 5394                                         __ptext66 78B6  
                                       __ptext58 7154                                         __ptext91 6DB8  
                                       __ptext83 6290                                         __ptext75 2E3E  
                                       __ptext67 7190                                         __ptext59 7352  
                                       __ptext92 6058                                         __ptext84 0F50  
                                       __ptext76 69F8                                         __ptext68 71CC  
                                       __ptext93 35C8                                         __ptext85 5706  
                                       __ptext77 6652                                         __ptext69 6D64  
                                       __ptext94 4492                                         __ptext86 3264  
                                       __ptext78 6B08                                         __ptext95 753C  
                                       __ptext87 7860                                         __ptext79 3C2E  
                                       __ptext96 588A                                         __ptext88 7892  
                                       __ptext97 57CC                                         __ptext89 7896  
                                       __ptext98 5C10                                         __ptext99 3DB8  
                     TunnelManagerGetTunnel@trec 00B3              __size_of_DeviceManagerGetDeviceData 000C  
                           ??_isBroadcastAddress 007D                               ??_LELinkQualityGet 0089  
                           __size_of_NetworkInit 00FA               LEAppendNeighborInfo@newPrevSentIdx 008C  
                       TxPacket@allowedTxFailure 0097                               ??_MiMAC_SetChannel 007A  
                              ?_MiMAC_SendPacket 00A2                      ?_TransportManagerRouteFound 0001  
            __size_of_DeviceManagerGetDeviceType 0074                     TunnelManagerSetTunnel@device 008F  
                           ?_MiApp_IsNetworkBusy 0001                               ??_Read_MAC_Address 0081  
                                   _SSP2CON1bits 000F72                                  _NetworkSequence 7870  
                  routingTableUpdateEntry@parent 0091                                 __size_of_sprintf 02A6  
                      ??_NetworkDataArrivedEvent 0082                       __size_of_LinkEstimatorInit 000C  
                                    i2DelayMs@ms 0009                     TunnelManagerSetTunnel@parent 0091  
                         __size_of_isSameAddress 0026                               ??_MiMAC_SendPacket 00AA  
                                    _LE_ClearDLQ 6D64                       BroadcastManagerDelaySend@i 00AC  
                                    HighISR@bAck 006B                                    __size_of_main 037E  
                                  __size_of_krnd 0170                                      HighISR@dPan 0060  
              TunnelManagerSetTunnel@oldestindex 0099                                ??_TMSendDataToRFD 00DC  
                                       _krndInit 59FA                                   HighISR@counter 0061  
                         __size_ofi2_RegisterSet 0026              RouteManagerProcessReceive@rcvBeacon 00A8  
                            __end_ofi2_SetRFMode 686E                           _netChooseAdvertiseTime 647E  
                          _NetworkGetMyRouteInfo 77C0                             _BeaconManagerTrigger 788E  
                        __end_of_isButtonPressed 7440                                         _tmpBlock 01E2  
                              _IsMemberOfNetwork 789E                  __end_of_NetworkGetParentAddress 7856  
                          BroadcastManagerTask@i 00CF                             __size_of_TimeTickISR 0032  
                                     _LEDCommand 7154                                         int$flags 004F  
                       MiApp_SetAddressPan@panid 0085                          _le_findEmptyNeighborIdx 6E5A  
                 __end_ofisBroadcastAddress@F537 FF99                                MiMAC_PowerState@i 0088  
                             ?_IsMemberOfNetwork 0001                           __size_of_le_computeETX 003E  
                    le_findRandomNeighborIdx@cnt 0088                      le_findRandomNeighborIdx@res 0089  
                                       main@src1 02B2                                         _userdata 07C8  
                                       _switches 01E0                             _NetworkHasRoute$4294 0088  
                 TunnelManagerInvalidateTunnel@i 0087                       MiMAC_SendPacket@MACPayload 00A7  
               TunnelManagerSetTunnel@emptyindex 009B                             __size_of_TimerEnable 0004  
                           isKnownPacket@unknown 00C1                      GetRouteAddressOfChild@child 008B  
                          ?_NetworkGetDeviceType 0001                  __end_of_MiApp_IsMemberOfNetwork 789E  
                              ?_MiMAC_PowerState 0001                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                              ??_IsMemberOfNetwork 008A  
                       __end_of_isInvalidAddress 77E4                                _MiApp_RequestData 7896  
                                       memcmp@s1 0073                                         memcmp@s2 0075  
                                  ?_HardwareInit 0001                           __size_of_RouterEvicted 00A0  
                                       memcpy@d1 0075                                  i2WriteFIFO@Data 0003  
                                       memcpy@s1 0077                               ??_MiMAC_PowerState 0087  
                    ?_NetworkManagerGetMyAddress 0073                    DeviceManagerGetDeviceType@dev 0085  
                         __size_of_isKnownPacket 026E                                         isdigit@c 0075  
                                       memset@p1 0073                                  le_computeETX@q1 007D  
                             ?_MiApp_RequestData 0001                            ??_MiApp_IsNetworkBusy 0073  
                                 le_updateETX@ne 0080                      MiApp_ProtocolInit@initValue 008F  
                                       intlevel2 0000                                ?_MiApp_SetChannel 0001  
                                      sprintf@ap 008B                                        sprintf@cp 008C  
                                      sprintf@sp 007A                               IsNetworkDevice@res 009C  
                     __end_of_radioDiscardPacket 788E                          ?_MiApp_MessageAvailable 0001  
                            __end_ofi2_WriteFIFO 75F6                                   i2_RegisterRead 746C  
                          TMSendDataToRFD@device 00D4                  __end_of_TransportManagerNoRoute 78B8  
                                  radioUnicast@i 00C4                          __end_of_NetworkGetPANID 7838  
                               ___lwmod@dividend 007F                    __size_of_LEAppendNeighborInfo 018A  
                               ___lldiv@dividend 0073                                ?i2_MiWi_TickGetMs 000D  
                  __size_of_passLinkEtxThreshold 000E                              ??_MiApp_RequestData 00D1  
                             ??_MiApp_SetChannel 007C                            LE_InsertNeighbor@nidx 009C  
                                     i2DelayUS@i 0005                  LE_processReceivedMessage@source 009F  
                    TunnelManagerSetTunnel@index 009D                            ?_BeaconManagerTrigger 0001  
                                  ?_MiWi_TickGet 0073                          __end_of_NetworkHasRoute 727A  
              le_updateNeighborTableEst@totalPkt 0093                               ??i2_MiWi_TickGetMs 0011  
                                  ??_BlinkRedLED 0076                        __end_of_IsMemberOfNetwork 78A2  
                                     HighISR@tmr 006C                         le_findWorstNeighborIdx@i 008E  
                            _beaconMessageBuffer 0700                               _MiApp_ProtocolInit 6B60  
                   SendPacket@DestinationAddress 00AE                                      _AddMSToTick 6206  
                    ??_le_updateNeighborEntryIdx 009B               NetworkSendDiscoverResponse@address 0144  
                    __size_of_NetworkManagerTask 02CC                        ??_NetworkIssueDataRequest 00C5  
                                  _MACInitParams 0036                              MiMAC_Init@initValue 0087  
                    ??_le_updateNeighborTableEst 008A                __size_of_NetworkPrepareSendPacket 00E0  
                      ?_NetworkPrepareSendPacket 007F                    __size_of_TransportManagerInit 0016  
                  __size_of_TransportManagerTask 042C          le_findWorstNeighborIdx@worstNeighborIdx 0086  
                                  _isSameAddress 7562              TunnelManagerInvalidateTunnel@device 0081  
                            ?_MiApp_ProtocolInit 0001                                  EEPROMRead@count 0077  
                     __size_of_TimerExitCritical 0004                         ?_routingTableUpdateEntry 008F  
                                    _prevSentIdx 01CE                        __end_of_MiApp_RequestData 789A  
                   MiApp_SearchConnection@tStart 02A5                         LEDManagerTask@lNextState 024E  
                                routeInfoInit@ri 007B                                         sprintf@c 0092  
                                       sprintf@f 007C                              HighISR@ackInfoIndex 006F  
                               ??_MiWi_TickGetMs 0083                                 ??_radioBroadcast 00C2  
                                  i2_RegisterSet 75AE           __end_of_RoutingTableFindDeviceOrParent 5C10  
        __size_of_RoutingTableFindDeviceOrParent 00AC                   _RoutingTableFindDeviceOrParent 5B64  
                                    ?_EEPROMRead 0075                                   ??_HardwareInit 0073  
                                     _PPSCONbits 000EFF                                 ___lldiv@quotient 007B  
                           TMSendDataToRFD@pType 00D6                          __end_of_NetworkSequence 7878  
                                ___lwmod@divisor 0081                                  ___lwmod@counter 0083  
                              i2TxPacket@rssival 002A                              TxPacket@TxPacketLen 009C  
                     ?_MiApp_EstablishConnection 009A                         ??_NetworkDiscoveredEvent 0077  
                         __size_of_LCD_WriteData 0016                                      _SSPCON1bits 000FC6  
                                     _WDTCONbits 000FC0                               _routingTableActive 00EB  
                 NetworkSendDiscoverRequest@dhdr 0142                                   EEPROMRead@addr 0076  
             __size_of_CoordinatorGenericAddress 0026                                   EEPROMRead@dest 0075  
                 NetworkSendDiscoverRequest@size 0140                   __end_of_MiApp_MessageAvailable 5394  
                         __end_ofi2_RegisterRead 7498                  NetworkSendDiscoverResponse@dhdr 0142  
                            _MiMAC_DiscardPacket 7634                       TMSendFormedPacketToRFD@res 00CF  
                                  _le_computeETX 709C                  NetworkSendDiscoverResponse@size 0140  
                                    i2_SetRFMode 6806         TMSendFormedPacketTowardsCoordinator@data 008A  
NetworkManagerProcessIncomingData@isSecurePacket 0183                             ??_MiApp_ProtocolInit 008E  
                               i2TxPacket@status 001B                                _BeaconManagerInit 75F6  
                          networkSendBeacon@last 00C9         TMSendFormedPacketTowardsCoordinator@size 008C  
                              _BeaconManagerTask 5394                                 ??i2_MiWi_TickGet 0005  
                                i2TxPacket@delay 0024                         __end_of_LE_UnpinNeighbor 71CC  
                                i2TxPacket@reTry 0026                               ?_BeaconManagerInit 0001  
                                 ??_MiWi_TickGet 0077                           ?_NetworkGetMyRouteInfo 0073  
                               _netDecayInterval 727A                               ?_BeaconManagerTask 0001  
             __size_of_LE_processReceivedMessage 0138                                    i2TxPacket@CCA 0015  
                             _le_initNeighborIdx 6310                               _CoordinatorAddress 7810  
                              _networkSendBeacon 2E3E                                      encode@delta 0081  
                        ?_NetworkReleaseUserData 0001                            RegisterSet@IRQ1select 0077  
                   __end_of_MiMAC_ReceivedPacket 12E2                                    _RouterEvicted 5D62  
                              _ActiveScanChannel 01D2                         __size_of_IsNetworkDevice 0190  
                              ?_routingTableFind 0088                                     i2TxPacket@t1 001C  
                                   i2TxPacket@t2 0020                                      encode@part1 0084  
                                    encode@part2 0086                        ??_le_findEmptyNeighborIdx 0075  
                                    i2TxPacket@i 002B                                      i2TxPacket@j 0028  
                                 _LE_PinNeighbor 71CC                                    _isKnownPacket 24CE  
