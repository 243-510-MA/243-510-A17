

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 21:28:22 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1
   184                           	psect	text158,global,reloc=2,class=CODE,delta=1
   185                           	psect	text159,global,reloc=2,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1
   188                           	psect	text162,global,reloc=2,class=CODE,delta=1
   189                           	psect	text163,global,reloc=2,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1
   192                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1
   195                           	psect	text169,global,reloc=2,class=CODE,delta=1
   196                           	psect	text170,global,reloc=2,class=CODE,delta=1
   197                           	psect	text171,global,reloc=2,class=CODE,delta=1
   198                           	psect	text172,global,reloc=2,class=CODE,delta=1
   199                           	psect	text173,global,reloc=2,class=CODE,delta=1
   200                           	psect	text174,global,reloc=2,class=CODE,delta=1
   201                           	psect	text175,global,reloc=2,class=CODE,delta=1
   202                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           	psect	idataCOMRAM
   207  007C62                     __pidataCOMRAM:
   208                           	opt stack 0
   209                           
   210                           ;initializer for _y
   211  007C62  B535               	dw	46389
   212  007C64  2053               	dw	8275
   213                           
   214                           ;initializer for _BankIndex
   215  007C66  FF                 	db	255
   216                           
   217                           ;initializer for _DeviceType
   218  007C67  01                 	db	1
   219                           
   220                           ;initializer for _addressLen
   221  007C68  08                 	db	8
   222                           
   223                           ;initializer for _myPANID
   224  007C69  1234               	dw	4660
   225                           
   226                           	psect	idataBANK2
   227  0079D0                     __pidataBANK2:
   228                           	opt stack 0
   229                           
   230                           ;initializer for _w
   231  0079D0  07CD               	dw	1997
   232  0079D2  387B               	dw	14459
   233                           
   234                           ;initializer for _x
   235  0079D4  BA36               	dw	47670
   236  0079D6  38D1               	dw	14545
   237                           
   238                           ;initializer for _z
   239  0079D8  9799               	dw	38809
   240  0079DA  0DFC               	dw	3580
   241                           
   242                           ;initializer for _DEVPanID
   243  0079DC  FFE3               	dw	65507
   244                           
   245                           ;initializer for _MyAddress
   246  0079DE  01                 	db	1
   247  0079DF  03                 	db	3
   248  0079E0  00                 	db	0
   249  0079E1  00                 	db	0
   250  0079E2  00                 	db	0
   251  0079E3  00                 	db	0
   252  0079E4  00                 	db	0
   253  0079E5  00                 	db	0
   254                           
   255                           ;initializer for _myLongAddress
   256  0079E6  04                 	db	4
   257  0079E7  77                 	db	119
   258  0079E8  66                 	db	102
   259  0079E9  55                 	db	85
   260  0079EA  44                 	db	68
   261  0079EB  33                 	db	51
   262  0079EC  22                 	db	34
   263  0079ED  11                 	db	17
   264                           
   265                           	psect	mediumconst
   266  00FB7E                     __pmediumconst:
   267                           	opt stack 0
   268  00FB7E  00                 	db	0
   269  00FB7F                     _crc32_table:
   270                           	opt stack 0
   271  00FB7F  0000               	dw	0
   272  00FB81  0000               	dw	0
   273  00FB83  3096               	dw	12438
   274  00FB85  7707               	dw	30471
   275  00FB87  612C               	dw	24876
   276  00FB89  EE0E               	dw	60942
   277  00FB8B  51BA               	dw	20922
   278  00FB8D  9909               	dw	39177
   279  00FB8F  C419               	dw	50201
   280  00FB91  076D               	dw	1901
   281  00FB93  F48F               	dw	62607
   282  00FB95  706A               	dw	28778
   283  00FB97  A535               	dw	42293
   284  00FB99  E963               	dw	59747
   285  00FB9B  95A3               	dw	38307
   286  00FB9D  9E64               	dw	40548
   287  00FB9F  8832               	dw	34866
   288  00FBA1  0EDB               	dw	3803
   289  00FBA3  B8A4               	dw	47268
   290  00FBA5  79DC               	dw	31196
   291  00FBA7  E91E               	dw	59678
   292  00FBA9  E0D5               	dw	57557
   293  00FBAB  D988               	dw	55688
   294  00FBAD  97D2               	dw	38866
   295  00FBAF  4C2B               	dw	19499
   296  00FBB1  09B6               	dw	2486
   297  00FBB3  7CBD               	dw	31933
   298  00FBB5  7EB1               	dw	32433
   299  00FBB7  2D07               	dw	11527
   300  00FBB9  E7B8               	dw	59320
   301  00FBBB  1D91               	dw	7569
   302  00FBBD  90BF               	dw	37055
   303  00FBBF  1064               	dw	4196
   304  00FBC1  1DB7               	dw	7607
   305  00FBC3  20F2               	dw	8434
   306  00FBC5  6AB0               	dw	27312
   307  00FBC7  7148               	dw	29000
   308  00FBC9  F3B9               	dw	62393
   309  00FBCB  41DE               	dw	16862
   310  00FBCD  84BE               	dw	33982
   311  00FBCF  D47D               	dw	54397
   312  00FBD1  1ADA               	dw	6874
   313  00FBD3  E4EB               	dw	58603
   314  00FBD5  6DDD               	dw	28125
   315  00FBD7  B551               	dw	46417
   316  00FBD9  F4D4               	dw	62676
   317  00FBDB  85C7               	dw	34247
   318  00FBDD  83D3               	dw	33747
   319  00FBDF  9856               	dw	38998
   320  00FBE1  136C               	dw	4972
   321  00FBE3  A8C0               	dw	43200
   322  00FBE5  646B               	dw	25707
   323  00FBE7  F97A               	dw	63866
   324  00FBE9  FD62               	dw	64866
   325  00FBEB  C9EC               	dw	51692
   326  00FBED  8A65               	dw	35429
   327  00FBEF  5C4F               	dw	23631
   328  00FBF1  1401               	dw	5121
   329  00FBF3  6CD9               	dw	27865
   330  00FBF5  6306               	dw	25350
   331  00FBF7  3D63               	dw	15715
   332  00FBF9  FA0F               	dw	64015
   333  00FBFB  0DF5               	dw	3573
   334  00FBFD  8D08               	dw	36104
   335  00FBFF  20C8               	dw	8392
   336  00FC01  3B6E               	dw	15214
   337  00FC03  105E               	dw	4190
   338  00FC05  4C69               	dw	19561
   339  00FC07  41E4               	dw	16868
   340  00FC09  D560               	dw	54624
   341  00FC0B  7172               	dw	29042
   342  00FC0D  A267               	dw	41575
   343  00FC0F  E4D1               	dw	58577
   344  00FC11  3C03               	dw	15363
   345  00FC13  D447               	dw	54343
   346  00FC15  4B04               	dw	19204
   347  00FC17  85FD               	dw	34301
   348  00FC19  D20D               	dw	53773
   349  00FC1B  B56B               	dw	46443
   350  00FC1D  A50A               	dw	42250
   351  00FC1F  A8FA               	dw	43258
   352  00FC21  35B5               	dw	13749
   353  00FC23  986C               	dw	39020
   354  00FC25  42B2               	dw	17074
   355  00FC27  C9D6               	dw	51670
   356  00FC29  DBBB               	dw	56251
   357  00FC2B  F940               	dw	63808
   358  00FC2D  ACBC               	dw	44220
   359  00FC2F  6CE3               	dw	27875
   360  00FC31  32D8               	dw	13016
   361  00FC33  5C75               	dw	23669
   362  00FC35  45DF               	dw	17887
   363  00FC37  0DCF               	dw	3535
   364  00FC39  DCD6               	dw	56534
   365  00FC3B  3D59               	dw	15705
   366  00FC3D  ABD1               	dw	43985
   367  00FC3F  30AC               	dw	12460
   368  00FC41  26D9               	dw	9945
   369  00FC43  003A               	dw	58
   370  00FC45  51DE               	dw	20958
   371  00FC47  5180               	dw	20864
   372  00FC49  C8D7               	dw	51415
   373  00FC4B  6116               	dw	24854
   374  00FC4D  BFD0               	dw	49104
   375  00FC4F  F4B5               	dw	62645
   376  00FC51  21B4               	dw	8628
   377  00FC53  C423               	dw	50211
   378  00FC55  56B3               	dw	22195
   379  00FC57  9599               	dw	38297
   380  00FC59  CFBA               	dw	53178
   381  00FC5B  A50F               	dw	42255
   382  00FC5D  B8BD               	dw	47293
   383  00FC5F  B89E               	dw	47262
   384  00FC61  2802               	dw	10242
   385  00FC63  8808               	dw	34824
   386  00FC65  5F05               	dw	24325
   387  00FC67  D9B2               	dw	55730
   388  00FC69  C60C               	dw	50700
   389  00FC6B  E924               	dw	59684
   390  00FC6D  B10B               	dw	45323
   391  00FC6F  7C87               	dw	31879
   392  00FC71  2F6F               	dw	12143
   393  00FC73  4C11               	dw	19473
   394  00FC75  5868               	dw	22632
   395  00FC77  1DAB               	dw	7595
   396  00FC79  C161               	dw	49505
   397  00FC7B  2D3D               	dw	11581
   398  00FC7D  B666               	dw	46694
   399  00FC7F  4190               	dw	16784
   400  00FC81  76DC               	dw	30428
   401  00FC83  7106               	dw	28934
   402  00FC85  01DB               	dw	475
   403  00FC87  20BC               	dw	8380
   404  00FC89  98D2               	dw	39122
   405  00FC8B  102A               	dw	4138
   406  00FC8D  EFD5               	dw	61397
   407  00FC8F  8589               	dw	34185
   408  00FC91  71B1               	dw	29105
   409  00FC93  B51F               	dw	46367
   410  00FC95  06B6               	dw	1718
   411  00FC97  E4A5               	dw	58533
   412  00FC99  9FBF               	dw	40895
   413  00FC9B  D433               	dw	54323
   414  00FC9D  E8B8               	dw	59576
   415  00FC9F  C9A2               	dw	51618
   416  00FCA1  7807               	dw	30727
   417  00FCA3  F934               	dw	63796
   418  00FCA5  0F00               	dw	3840
   419  00FCA7  A88E               	dw	43150
   420  00FCA9  9609               	dw	38409
   421  00FCAB  9818               	dw	38936
   422  00FCAD  E10E               	dw	57614
   423  00FCAF  0DBB               	dw	3515
   424  00FCB1  7F6A               	dw	32618
   425  00FCB3  3D2D               	dw	15661
   426  00FCB5  086D               	dw	2157
   427  00FCB7  6C97               	dw	27799
   428  00FCB9  9164               	dw	37220
   429  00FCBB  5C01               	dw	23553
   430  00FCBD  E663               	dw	58979
   431  00FCBF  51F4               	dw	20980
   432  00FCC1  6B6B               	dw	27499
   433  00FCC3  6162               	dw	24930
   434  00FCC5  1C6C               	dw	7276
   435  00FCC7  30D8               	dw	12504
   436  00FCC9  8565               	dw	34149
   437  00FCCB  004E               	dw	78
   438  00FCCD  F262               	dw	62050
   439  00FCCF  95ED               	dw	38381
   440  00FCD1  6C06               	dw	27654
   441  00FCD3  A57B               	dw	42363
   442  00FCD5  1B01               	dw	6913
   443  00FCD7  F4C1               	dw	62657
   444  00FCD9  8208               	dw	33288
   445  00FCDB  C457               	dw	50263
   446  00FCDD  F50F               	dw	62735
   447  00FCDF  D9C6               	dw	55750
   448  00FCE1  65B0               	dw	26032
   449  00FCE3  E950               	dw	59728
   450  00FCE5  12B7               	dw	4791
   451  00FCE7  B8EA               	dw	47338
   452  00FCE9  8BBE               	dw	35774
   453  00FCEB  887C               	dw	34940
   454  00FCED  FCB9               	dw	64697
   455  00FCEF  1DDF               	dw	7647
   456  00FCF1  62DD               	dw	25309
   457  00FCF3  2D49               	dw	11593
   458  00FCF5  15DA               	dw	5594
   459  00FCF7  7CF3               	dw	31987
   460  00FCF9  8CD3               	dw	36051
   461  00FCFB  4C65               	dw	19557
   462  00FCFD  FBD4               	dw	64468
   463  00FCFF  6158               	dw	24920
   464  00FD01  4DB2               	dw	19890
   465  00FD03  51CE               	dw	20942
   466  00FD05  3AB5               	dw	15029
   467  00FD07  0074               	dw	116
   468  00FD09  A3BC               	dw	41916
   469  00FD0B  30E2               	dw	12514
   470  00FD0D  D4BB               	dw	54459
   471  00FD0F  A541               	dw	42305
   472  00FD11  4ADF               	dw	19167
   473  00FD13  95D7               	dw	38359
   474  00FD15  3DD8               	dw	15832
   475  00FD17  C46D               	dw	50285
   476  00FD19  A4D1               	dw	42193
   477  00FD1B  F4FB               	dw	62715
   478  00FD1D  D3D6               	dw	54230
   479  00FD1F  E96A               	dw	59754
   480  00FD21  4369               	dw	17257
   481  00FD23  D9FC               	dw	55804
   482  00FD25  346E               	dw	13422
   483  00FD27  8846               	dw	34886
   484  00FD29  AD67               	dw	44391
   485  00FD2B  B8D0               	dw	47312
   486  00FD2D  DA60               	dw	55904
   487  00FD2F  2D73               	dw	11635
   488  00FD31  4404               	dw	17412
   489  00FD33  1DE5               	dw	7653
   490  00FD35  3303               	dw	13059
   491  00FD37  4C5F               	dw	19551
   492  00FD39  AA0A               	dw	43530
   493  00FD3B  7CC9               	dw	31945
   494  00FD3D  DD0D               	dw	56589
   495  00FD3F  713C               	dw	28988
   496  00FD41  5005               	dw	20485
   497  00FD43  41AA               	dw	16810
   498  00FD45  2702               	dw	9986
   499  00FD47  1010               	dw	4112
   500  00FD49  BE0B               	dw	48651
   501  00FD4B  2086               	dw	8326
   502  00FD4D  C90C               	dw	51468
   503  00FD4F  B525               	dw	46373
   504  00FD51  5768               	dw	22376
   505  00FD53  85B3               	dw	34227
   506  00FD55  206F               	dw	8303
   507  00FD57  D409               	dw	54281
   508  00FD59  B966               	dw	47462
   509  00FD5B  E49F               	dw	58527
   510  00FD5D  CE61               	dw	52833
   511  00FD5F  F90E               	dw	63758
   512  00FD61  5EDE               	dw	24286
   513  00FD63  C998               	dw	51608
   514  00FD65  29D9               	dw	10713
   515  00FD67  9822               	dw	38946
   516  00FD69  B0D0               	dw	45264
   517  00FD6B  A8B4               	dw	43188
   518  00FD6D  C7D7               	dw	51159
   519  00FD6F  3D17               	dw	15639
   520  00FD71  59B3               	dw	22963
   521  00FD73  0D81               	dw	3457
   522  00FD75  2EB4               	dw	11956
   523  00FD77  5C3B               	dw	23611
   524  00FD79  B7BD               	dw	47037
   525  00FD7B  6CAD               	dw	27821
   526  00FD7D  C0BA               	dw	49338
   527  00FD7F  8320               	dw	33568
   528  00FD81  EDB8               	dw	60856
   529  00FD83  B3B6               	dw	46006
   530  00FD85  9ABF               	dw	39615
   531  00FD87  E20C               	dw	57868
   532  00FD89  03B6               	dw	950
   533  00FD8B  D29A               	dw	53914
   534  00FD8D  74B1               	dw	29873
   535  00FD8F  4739               	dw	18233
   536  00FD91  EAD5               	dw	60117
   537  00FD93  77AF               	dw	30639
   538  00FD95  9DD2               	dw	40402
   539  00FD97  2615               	dw	9749
   540  00FD99  04DB               	dw	1243
   541  00FD9B  1683               	dw	5763
   542  00FD9D  73DC               	dw	29660
   543  00FD9F  0B12               	dw	2834
   544  00FDA1  E363               	dw	58211
   545  00FDA3  3B84               	dw	15236
   546  00FDA5  9464               	dw	37988
   547  00FDA7  6A3E               	dw	27198
   548  00FDA9  0D6D               	dw	3437
   549  00FDAB  5AA8               	dw	23208
   550  00FDAD  7A6A               	dw	31338
   551  00FDAF  CF0B               	dw	53003
   552  00FDB1  E40E               	dw	58382
   553  00FDB3  FF9D               	dw	65437
   554  00FDB5  9309               	dw	37641
   555  00FDB7  AE27               	dw	44583
   556  00FDB9  0A00               	dw	2560
   557  00FDBB  9EB1               	dw	40625
   558  00FDBD  7D07               	dw	32007
   559  00FDBF  9344               	dw	37700
   560  00FDC1  F00F               	dw	61455
   561  00FDC3  A3D2               	dw	41938
   562  00FDC5  8708               	dw	34568
   563  00FDC7  F268               	dw	62056
   564  00FDC9  1E01               	dw	7681
   565  00FDCB  C2FE               	dw	49918
   566  00FDCD  6906               	dw	26886
   567  00FDCF  575D               	dw	22365
   568  00FDD1  F762               	dw	63330
   569  00FDD3  67CB               	dw	26571
   570  00FDD5  8065               	dw	32869
   571  00FDD7  3671               	dw	13937
   572  00FDD9  196C               	dw	6508
   573  00FDDB  06E7               	dw	1767
   574  00FDDD  6E6B               	dw	28267
   575  00FDDF  1B76               	dw	7030
   576  00FDE1  FED4               	dw	65236
   577  00FDE3  2BE0               	dw	11232
   578  00FDE5  89D3               	dw	35283
   579  00FDE7  7A5A               	dw	31322
   580  00FDE9  10DA               	dw	4314
   581  00FDEB  4ACC               	dw	19148
   582  00FDED  67DD               	dw	26589
   583  00FDEF  DF6F               	dw	57199
   584  00FDF1  F9B9               	dw	63929
   585  00FDF3  EFF9               	dw	61433
   586  00FDF5  8EBE               	dw	36542
   587  00FDF7  BE43               	dw	48707
   588  00FDF9  17B7               	dw	6071
   589  00FDFB  8ED5               	dw	36565
   590  00FDFD  60B0               	dw	24752
   591  00FDFF  A3E8               	dw	41960
   592  00FE01  D6D6               	dw	54998
   593  00FE03  937E               	dw	37758
   594  00FE05  A1D1               	dw	41425
   595  00FE07  C2C4               	dw	49860
   596  00FE09  38D8               	dw	14552
   597  00FE0B  F252               	dw	62034
   598  00FE0D  4FDF               	dw	20447
   599  00FE0F  67F1               	dw	26609
   600  00FE11  D1BB               	dw	53691
   601  00FE13  5767               	dw	22375
   602  00FE15  A6BC               	dw	42684
   603  00FE17  06DD               	dw	1757
   604  00FE19  3FB5               	dw	16309
   605  00FE1B  364B               	dw	13899
   606  00FE1D  48B2               	dw	18610
   607  00FE1F  2BDA               	dw	11226
   608  00FE21  D80D               	dw	55309
   609  00FE23  1B4C               	dw	6988
   610  00FE25  AF0A               	dw	44810
   611  00FE27  4AF6               	dw	19190
   612  00FE29  3603               	dw	13827
   613  00FE2B  7A60               	dw	31328
   614  00FE2D  4104               	dw	16644
   615  00FE2F  EFC3               	dw	61379
   616  00FE31  DF60               	dw	57184
   617  00FE33  DF55               	dw	57173
   618  00FE35  A867               	dw	43111
   619  00FE37  8EEF               	dw	36591
   620  00FE39  316E               	dw	12654
   621  00FE3B  BE79               	dw	48761
   622  00FE3D  4669               	dw	18025
   623  00FE3F  B38C               	dw	45964
   624  00FE41  CB61               	dw	52065
   625  00FE43  831A               	dw	33562
   626  00FE45  BC66               	dw	48230
   627  00FE47  D2A0               	dw	53920
   628  00FE49  256F               	dw	9583
   629  00FE4B  E236               	dw	57910
   630  00FE4D  5268               	dw	21096
   631  00FE4F  7795               	dw	30613
   632  00FE51  CC0C               	dw	52236
   633  00FE53  4703               	dw	18179
   634  00FE55  BB0B               	dw	47883
   635  00FE57  16B9               	dw	5817
   636  00FE59  2202               	dw	8706
   637  00FE5B  262F               	dw	9775
   638  00FE5D  5505               	dw	21765
   639  00FE5F  3BBE               	dw	15294
   640  00FE61  C5BA               	dw	50618
   641  00FE63  0B28               	dw	2856
   642  00FE65  B2BD               	dw	45757
   643  00FE67  5A92               	dw	23186
   644  00FE69  2BB4               	dw	11188
   645  00FE6B  6A04               	dw	27140
   646  00FE6D  5CB3               	dw	23731
   647  00FE6F  FFA7               	dw	65447
   648  00FE71  C2D7               	dw	49879
   649  00FE73  CF31               	dw	53041
   650  00FE75  B5D0               	dw	46544
   651  00FE77  9E8B               	dw	40587
   652  00FE79  2CD9               	dw	11481
   653  00FE7B  AE1D               	dw	44573
   654  00FE7D  5BDE               	dw	23518
   655  00FE7F  C2B0               	dw	49840
   656  00FE81  9B64               	dw	39780
   657  00FE83  F226               	dw	61990
   658  00FE85  EC63               	dw	60515
   659  00FE87  A39C               	dw	41884
   660  00FE89  756A               	dw	30058
   661  00FE8B  930A               	dw	37642
   662  00FE8D  026D               	dw	621
   663  00FE8F  06A9               	dw	1705
   664  00FE91  9C09               	dw	39945
   665  00FE93  363F               	dw	13887
   666  00FE95  EB0E               	dw	60174
   667  00FE97  6785               	dw	26501
   668  00FE99  7207               	dw	29191
   669  00FE9B  5713               	dw	22291
   670  00FE9D  0500               	dw	1280
   671  00FE9F  4A82               	dw	19074
   672  00FEA1  95BF               	dw	38335
   673  00FEA3  7A14               	dw	31252
   674  00FEA5  E2B8               	dw	58040
   675  00FEA7  2BAE               	dw	11182
   676  00FEA9  7BB1               	dw	31665
   677  00FEAB  1B38               	dw	6968
   678  00FEAD  0CB6               	dw	3254
   679  00FEAF  8E9B               	dw	36507
   680  00FEB1  92D2               	dw	37586
   681  00FEB3  BE0D               	dw	48653
   682  00FEB5  E5D5               	dw	58837
   683  00FEB7  EFB7               	dw	61367
   684  00FEB9  7CDC               	dw	31964
   685  00FEBB  DF21               	dw	57121
   686  00FEBD  0BDB               	dw	3035
   687  00FEBF  D2D4               	dw	53972
   688  00FEC1  86D3               	dw	34515
   689  00FEC3  E242               	dw	57922
   690  00FEC5  F1D4               	dw	61908
   691  00FEC7  B3F8               	dw	46072
   692  00FEC9  68DD               	dw	26845
   693  00FECB  836E               	dw	33646
   694  00FECD  1FDA               	dw	8154
   695  00FECF  16CD               	dw	5837
   696  00FED1  81BE               	dw	33214
   697  00FED3  265B               	dw	9819
   698  00FED5  F6B9               	dw	63161
   699  00FED7  77E1               	dw	30689
   700  00FED9  6FB0               	dw	28592
   701  00FEDB  4777               	dw	18295
   702  00FEDD  18B7               	dw	6327
   703  00FEDF  5AE6               	dw	23270
   704  00FEE1  8808               	dw	34824
   705  00FEE3  6A70               	dw	27248
   706  00FEE5  FF0F               	dw	65295
   707  00FEE7  3BCA               	dw	15306
   708  00FEE9  6606               	dw	26118
   709  00FEEB  0B5C               	dw	2908
   710  00FEED  1101               	dw	4353
   711  00FEEF  9EFF               	dw	40703
   712  00FEF1  8F65               	dw	36709
   713  00FEF3  AE69               	dw	44649
   714  00FEF5  F862               	dw	63586
   715  00FEF7  FFD3               	dw	65491
   716  00FEF9  616B               	dw	24939
   717  00FEFB  CF45               	dw	53061
   718  00FEFD  166C               	dw	5740
   719  00FEFF  E278               	dw	57976
   720  00FF01  A00A               	dw	40970
   721  00FF03  D2EE               	dw	53998
   722  00FF05  D70D               	dw	55053
   723  00FF07  8354               	dw	33620
   724  00FF09  4E04               	dw	19972
   725  00FF0B  B3C2               	dw	46018
   726  00FF0D  3903               	dw	14595
   727  00FF0F  2661               	dw	9825
   728  00FF11  A767               	dw	42855
   729  00FF13  16F7               	dw	5879
   730  00FF15  D060               	dw	53344
   731  00FF17  474D               	dw	18253
   732  00FF19  4969               	dw	18793
   733  00FF1B  77DB               	dw	30683
   734  00FF1D  3E6E               	dw	15982
   735  00FF1F  6A4A               	dw	27210
   736  00FF21  AED1               	dw	44753
   737  00FF23  5ADC               	dw	23260
   738  00FF25  D9D6               	dw	55766
   739  00FF27  0B66               	dw	2918
   740  00FF29  40DF               	dw	16607
   741  00FF2B  3BF0               	dw	15344
   742  00FF2D  37D8               	dw	14296
   743  00FF2F  AE53               	dw	44627
   744  00FF31  A9BC               	dw	43452
   745  00FF33  9EC5               	dw	40645
   746  00FF35  DEBB               	dw	57019
   747  00FF37  CF7F               	dw	53119
   748  00FF39  47B2               	dw	18354
   749  00FF3B  FFE9               	dw	65513
   750  00FF3D  30B5               	dw	12469
   751  00FF3F  F21C               	dw	61980
   752  00FF41  BDBD               	dw	48573
   753  00FF43  C28A               	dw	49802
   754  00FF45  CABA               	dw	51898
   755  00FF47  9330               	dw	37680
   756  00FF49  53B3               	dw	21427
   757  00FF4B  A3A6               	dw	41894
   758  00FF4D  24B4               	dw	9396
   759  00FF4F  3605               	dw	13829
   760  00FF51  BAD0               	dw	47824
   761  00FF53  0693               	dw	1683
   762  00FF55  CDD7               	dw	52695
   763  00FF57  5729               	dw	22313
   764  00FF59  54DE               	dw	21726
   765  00FF5B  67BF               	dw	26559
   766  00FF5D  23D9               	dw	9177
   767  00FF5F  7A2E               	dw	31278
   768  00FF61  B366               	dw	45926
   769  00FF63  4AB8               	dw	19128
   770  00FF65  C461               	dw	50273
   771  00FF67  1B02               	dw	6914
   772  00FF69  5D68               	dw	23912
   773  00FF6B  2B94               	dw	11156
   774  00FF6D  2A6F               	dw	10863
   775  00FF6F  BE37               	dw	48695
   776  00FF71  B40B               	dw	46091
   777  00FF73  8EA1               	dw	36513
   778  00FF75  C30C               	dw	49932
   779  00FF77  DF1B               	dw	57115
   780  00FF79  5A05               	dw	23045
   781  00FF7B  EF8D               	dw	61325
   782  00FF7D  2D02               	dw	11522
   783  00FF7F                     __end_of_crc32_table:
   784                           	opt stack 0
   785  00FF7F                     _mySecurityKey:
   786                           	opt stack 0
   787  00FF7F  00                 	db	0
   788  00FF80  01                 	db	1
   789  00FF81  02                 	db	2
   790  00FF82  03                 	db	3
   791  00FF83  04                 	db	4
   792  00FF84  05                 	db	5
   793  00FF85  06                 	db	6
   794  00FF86  07                 	db	7
   795  00FF87  08                 	db	8
   796  00FF88  09                 	db	9
   797  00FF89  0A                 	db	10
   798  00FF8A  0B                 	db	11
   799  00FF8B  0C                 	db	12
   800  00FF8C  0D                 	db	13
   801  00FF8D  0E                 	db	14
   802  00FF8E  0F                 	db	15
   803  00FF8F                     __end_of_mySecurityKey:
   804                           	opt stack 0
   805  00FF8F                     _hexpowers:
   806                           	opt stack 0
   807  00FF8F  0001               	dw	1
   808  00FF91  0010               	dw	16
   809  00FF93  0100               	dw	256
   810  00FF95  1000               	dw	4096
   811  00FF97                     __end_of_hexpowers:
   812                           	opt stack 0
   813  00FF97                     isBroadcastAddress@F537:
   814                           	opt stack 0
   815  00FF97  FF                 	db	255
   816  00FF98  FF                 	db	255
   817  00FF99  FF                 	db	255
   818  00FF9A  FF                 	db	255
   819  00FF9B  FF                 	db	255
   820  00FF9C  FF                 	db	255
   821  00FF9D  FF                 	db	255
   822  00FF9E  FF                 	db	255
   823  00FF9F                     __end_ofisBroadcastAddress@F537:
   824                           	opt stack 0
   825  00FF9F                     _mySecurityLevel:
   826                           	opt stack 0
   827  00FF9F  04                 	db	4
   828  00FFA0                     __end_of_mySecurityLevel:
   829                           	opt stack 0
   830  00FFA0                     STR_3:
   831  00FFA0  6F                 	db	111	;'o'
   832  00FFA1  3A                 	db	58	;':'
   833  00FFA2  25                 	db	37
   834  00FFA3  30                 	db	48	;'0'
   835  00FFA4  32                 	db	50	;'2'
   836  00FFA5  58                 	db	88	;'X'
   837  00FFA6  20                 	db	32
   838  00FFA7  20                 	db	32
   839  00FFA8  20                 	db	32
   840  00FFA9  20                 	db	32
   841  00FFAA  20                 	db	32
   842  00FFAB  20                 	db	32
   843  00FFAC  20                 	db	32
   844  00FFAD  20                 	db	32
   845  00FFAE  20                 	db	32
   846  00FFAF  20                 	db	32
   847  00FFB0  20                 	db	32
   848  00FFB1  00                 	db	0
   849  00FFB2                     STR_2:
   850  00FFB2  69                 	db	105	;'i'
   851  00FFB3  3A                 	db	58	;':'
   852  00FFB4  25                 	db	37
   853  00FFB5  30                 	db	48	;'0'
   854  00FFB6  34                 	db	52	;'4'
   855  00FFB7  58                 	db	88	;'X'
   856  00FFB8  3D                 	db	61	;'='
   857  00FFB9  25                 	db	37
   858  00FFBA  30                 	db	48	;'0'
   859  00FFBB  32                 	db	50	;'2'
   860  00FFBC  58                 	db	88	;'X'
   861  00FFBD  20                 	db	32
   862  00FFBE  20                 	db	32
   863  00FFBF  20                 	db	32
   864  00FFC0  20                 	db	32
   865  00FFC1  20                 	db	32
   866  00FFC2  20                 	db	32
   867  00FFC3  00                 	db	0
   868  00FFC4                     STR_8:
   869  00FFC4  30                 	db	48	;'0'
   870  00FFC5  31                 	db	49	;'1'
   871  00FFC6  32                 	db	50	;'2'
   872  00FFC7  33                 	db	51	;'3'
   873  00FFC8  34                 	db	52	;'4'
   874  00FFC9  35                 	db	53	;'5'
   875  00FFCA  36                 	db	54	;'6'
   876  00FFCB  37                 	db	55	;'7'
   877  00FFCC  38                 	db	56	;'8'
   878  00FFCD  39                 	db	57	;'9'
   879  00FFCE  41                 	db	65	;'A'
   880  00FFCF  42                 	db	66	;'B'
   881  00FFD0  43                 	db	67	;'C'
   882  00FFD1  44                 	db	68	;'D'
   883  00FFD2  45                 	db	69	;'E'
   884  00FFD3  46                 	db	70	;'F'
   885  00FFD4  00                 	db	0
   886  00FFD5                     STR_1:
   887  00FFD5  61                 	db	97	;'a'
   888  00FFD6  3A                 	db	58	;':'
   889  00FFD7  25                 	db	37
   890  00FFD8  30                 	db	48	;'0'
   891  00FFD9  34                 	db	52	;'4'
   892  00FFDA  58                 	db	88	;'X'
   893  00FFDB  20                 	db	32
   894  00FFDC  70                 	db	112	;'p'
   895  00FFDD  3A                 	db	58	;':'
   896  00FFDE  46                 	db	70	;'F'
   897  00FFDF  46                 	db	70	;'F'
   898  00FFE0  46                 	db	70	;'F'
   899  00FFE1  46                 	db	70	;'F'
   900  00FFE2  00                 	db	0
   901  00FFE3                     STR_7:
   902  00FFE3  28                 	db	40
   903  00FFE4  6E                 	db	110	;'n'
   904  00FFE5  75                 	db	117	;'u'
   905  00FFE6  6C                 	db	108	;'l'
   906  00FFE7  6C                 	db	108	;'l'
   907  00FFE8  29                 	db	41
   908  00FFE9  00                 	db	0
   909  00FFEA                     STR_4:
   910  00FFEA  70                 	db	112	;'p'
   911  00FFEB  3A                 	db	58	;':'
   912  00FFEC  25                 	db	37
   913  00FFED  30                 	db	48	;'0'
   914  00FFEE  34                 	db	52	;'4'
   915  00FFEF  58                 	db	88	;'X'
   916  00FFF0  00                 	db	0
   917  00FFF1                     STR_5:
   918  00FFF1  70                 	db	112	;'p'
   919  00FFF2  3A                 	db	58	;':'
   920  00FFF3  25                 	db	37
   921  00FFF4  73                 	db	115	;'s'
   922  00FFF5  00                 	db	0
   923  0000                     
   924                           ; #config settings
   925  00FFF6  00                 	db	0	; dummy byte at the end
   926  0000                     
   927                           	psect	nvBANK1
   928  0001E5                     __pnvBANK1:
   929                           	opt stack 0
   930  0001E5                     _myDeviceType:
   931                           	opt stack 0
   932  0001E5                     	ds	1
   933  0000                     _PPSCONbits	set	3839
   934  0000                     _RPINR1	set	3815
   935  0000                     _RPINR21	set	3835
   936  0000                     _RPOR19	set	3801
   937  0000                     _RPOR21	set	3803
   938  0000                     _ANCON0	set	3912
   939  0000                     _ANCON1	set	3913
   940  0000                     _TMR0	set	4054
   941  0000                     _TMR1	set	4046
   942  0000                     _EECON2	set	4007
   943  0000                     _INTCON2bits	set	4081
   944  0000                     _INTCONbits	set	4082
   945  0000                     _LATAbits	set	3977
   946  0000                     _LATCbits	set	3979
   947  0000                     _LATDbits	set	3980
   948  0000                     _LATEbits	set	3981
   949  0000                     _OSCCON	set	4051
   950  0000                     _OSCTUNEbits	set	3995
   951  0000                     _PIR1bits	set	3998
   952  0000                     _PIR3bits	set	4004
   953  0000                     _PORTBbits	set	3969
   954  0000                     _SSP1CON1	set	4038
   955  0000                     _SSP1STAT	set	4039
   956  0000                     _SSP2BUF	set	3957
   957  0000                     _SSP2CON1	set	3954
   958  0000                     _SSP2CON1bits	set	3954
   959  0000                     _SSP2STAT	set	3955
   960  0000                     _SSPBUF	set	4041
   961  0000                     _SSPCON1bits	set	4038
   962  0000                     _T0CON	set	4053
   963  0000                     _T0CONbits	set	4053
   964  0000                     _TMR0H	set	4055
   965  0000                     _TMR0L	set	4054
   966  0000                     _TRISAbits	set	3986
   967  0000                     _TRISBbits	set	3987
   968  0000                     _TRISCbits	set	3988
   969  0000                     _TRISDbits	set	3989
   970  0000                     _TRISEbits	set	3990
   971  0000                     _WDTCONbits	set	4032
   972  0000                     _GIE	set	32663
   973                           
   974                           	psect	cinit
   975  005C28                     __pcinit:
   976                           	opt stack 0
   977  005C28                     start_initialization:
   978                           	opt stack 0
   979  005C28                     __initialization:
   980                           	opt stack 0
   981                           
   982                           ; Initialize objects allocated to BANK2 (30 bytes)
   983                           ; load TBLPTR registers with __pidataBANK2
   984  005C28  0ED0               	movlw	low __pidataBANK2
   985  005C2A  6EF6               	movwf	tblptrl,c
   986  005C2C  0E79               	movlw	high __pidataBANK2
   987  005C2E  6EF7               	movwf	tblptrh,c
   988  005C30  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   989  005C32  6EF8               	movwf	tblptru,c
   990  005C34  EE02  F0DD         	lfsr	0,__pdataBANK2
   991  005C38  EE10 F01E          	lfsr	1,30
   992  005C3C                     copy_data0:
   993  005C3C  0009               	tblrd		*+
   994  005C3E  CFF5 FFEE          	movff	tablat,postinc0
   995  005C42  50E5               	movf	postdec1,w,c
   996  005C44  50E1               	movf	fsr1l,w,c
   997  005C46  E1FA               	bnz	copy_data0
   998                           
   999                           ; Initialize objects allocated to COMRAM (9 bytes)
  1000                           ; load TBLPTR registers with __pidataCOMRAM
  1001  005C48  0E62               	movlw	low __pidataCOMRAM
  1002  005C4A  6EF6               	movwf	tblptrl,c
  1003  005C4C  0E7C               	movlw	high __pidataCOMRAM
  1004  005C4E  6EF7               	movwf	tblptrh,c
  1005  005C50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1006  005C52  6EF8               	movwf	tblptru,c
  1007  005C54  EE00  F055         	lfsr	0,__pdataCOMRAM
  1008  005C58  EE10 F009          	lfsr	1,9
  1009  005C5C                     copy_data1:
  1010  005C5C  0009               	tblrd		*+
  1011  005C5E  CFF5 FFEE          	movff	tablat,postinc0
  1012  005C62  50E5               	movf	postdec1,w,c
  1013  005C64  50E1               	movf	fsr1l,w,c
  1014  005C66  E1FA               	bnz	copy_data1
  1015                           
  1016                           ; Clear objects allocated to BIGRAM (1484 bytes)
  1017  005C68  EE08  F0D2         	lfsr	0,__pbssBIGRAM
  1018  005C6C  EE15 F0CC          	lfsr	1,1484
  1019  005C70                     clear_0:
  1020  005C70  6AEE               	clrf	postinc0,c
  1021  005C72  50E5               	movf	postdec1,w,c
  1022  005C74  50E1               	movf	fsr1l,w,c
  1023  005C76  E1FC               	bnz	clear_0
  1024  005C78  50E2               	movf	fsr1h,w,c
  1025  005C7A  E1FA               	bnz	clear_0
  1026                           
  1027                           ; Clear objects allocated to BANK8 (210 bytes)
  1028  005C7C  EE08  F000         	lfsr	0,__pbssBANK8
  1029  005C80  0ED2               	movlw	210
  1030  005C82                     clear_1:
  1031  005C82  6AEE               	clrf	postinc0,c
  1032  005C84  06E8               	decf	wreg,f,c
  1033  005C86  E1FD               	bnz	clear_1
  1034                           
  1035                           ; Clear objects allocated to BANK7 (84 bytes)
  1036  005C88  EE07  F000         	lfsr	0,__pbssBANK7
  1037  005C8C  0E54               	movlw	84
  1038  005C8E                     clear_2:
  1039  005C8E  6AEE               	clrf	postinc0,c
  1040  005C90  06E8               	decf	wreg,f,c
  1041  005C92  E1FD               	bnz	clear_2
  1042                           
  1043                           ; Clear objects allocated to BANK6 (240 bytes)
  1044  005C94  EE06  F000         	lfsr	0,__pbssBANK6
  1045  005C98  0EF0               	movlw	240
  1046  005C9A                     clear_3:
  1047  005C9A  6AEE               	clrf	postinc0,c
  1048  005C9C  06E8               	decf	wreg,f,c
  1049  005C9E  E1FD               	bnz	clear_3
  1050                           
  1051                           ; Clear objects allocated to BANK5 (216 bytes)
  1052  005CA0  EE05  F000         	lfsr	0,__pbssBANK5
  1053  005CA4  0ED8               	movlw	216
  1054  005CA6                     clear_4:
  1055  005CA6  6AEE               	clrf	postinc0,c
  1056  005CA8  06E8               	decf	wreg,f,c
  1057  005CAA  E1FD               	bnz	clear_4
  1058                           
  1059                           ; Clear objects allocated to BANK4 (256 bytes)
  1060  005CAC  EE04  F000         	lfsr	0,__pbssBANK4
  1061  005CB0  EE11 F000          	lfsr	1,256
  1062  005CB4                     clear_5:
  1063  005CB4  6AEE               	clrf	postinc0,c
  1064  005CB6  50E5               	movf	postdec1,w,c
  1065  005CB8  50E1               	movf	fsr1l,w,c
  1066  005CBA  E1FC               	bnz	clear_5
  1067  005CBC  50E2               	movf	fsr1h,w,c
  1068  005CBE  E1FA               	bnz	clear_5
  1069                           
  1070                           ; Clear objects allocated to BANK3 (218 bytes)
  1071  005CC0  EE03  F000         	lfsr	0,__pbssBANK3
  1072  005CC4  0EDA               	movlw	218
  1073  005CC6                     clear_6:
  1074  005CC6  6AEE               	clrf	postinc0,c
  1075  005CC8  06E8               	decf	wreg,f,c
  1076  005CCA  E1FD               	bnz	clear_6
  1077                           
  1078                           ; Clear objects allocated to BANK2 (221 bytes)
  1079  005CCC  EE02  F000         	lfsr	0,__pbssBANK2
  1080  005CD0  0EDD               	movlw	221
  1081  005CD2                     clear_7:
  1082  005CD2  6AEE               	clrf	postinc0,c
  1083  005CD4  06E8               	decf	wreg,f,c
  1084  005CD6  E1FD               	bnz	clear_7
  1085                           
  1086                           ; Clear objects allocated to BANK1 (12 bytes)
  1087  005CD8  EE01  F0D9         	lfsr	0,__pbssBANK1
  1088  005CDC  0E0C               	movlw	12
  1089  005CDE                     clear_8:
  1090  005CDE  6AEE               	clrf	postinc0,c
  1091  005CE0  06E8               	decf	wreg,f,c
  1092  005CE2  E1FD               	bnz	clear_8
  1093                           
  1094                           ; Clear objects allocated to COMRAM (31 bytes)
  1095  005CE4  EE00  F036         	lfsr	0,__pbssCOMRAM
  1096  005CE8  0E1F               	movlw	31
  1097  005CEA                     clear_9:
  1098  005CEA  6AEE               	clrf	postinc0,c
  1099  005CEC  06E8               	decf	wreg,f,c
  1100  005CEE  E1FD               	bnz	clear_9
  1101  005CF0                     end_of_initialization:
  1102                           	opt stack 0
  1103  005CF0                     __end_of__initialization:
  1104                           	opt stack 0
  1105  005CF0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1106  005CF2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1107  005CF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1108  005CF6  6EF8               	movwf	tblptru,c
  1109  005CF8  0100               	movlb	0
  1110  005CFA  EFC0  F00C         	goto	_main	;jump to C main() function
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           fsr1h	equ	0xFE2
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121                           	psect	bssCOMRAM
  1122  000036                     __pbssCOMRAM:
  1123                           	opt stack 0
  1124  000036                     _LEDCmd:
  1125                           	opt stack 0
  1126  000036                     	ds	3
  1127  000039                     _routingTableActive:
  1128                           	opt stack 0
  1129  000039                     	ds	2
  1130  00003B                     ButtonTask@pS0:
  1131                           	opt stack 0
  1132  00003B                     	ds	1
  1133  00003C                     ButtonTask@pS1:
  1134                           	opt stack 0
  1135  00003C                     	ds	1
  1136  00003D                     ButtonTask@s0Count:
  1137                           	opt stack 0
  1138  00003D                     	ds	1
  1139  00003E                     ButtonTask@s1Count:
  1140                           	opt stack 0
  1141  00003E                     	ds	1
  1142  00003F                     _BMState:
  1143                           	opt stack 0
  1144  00003F                     	ds	1
  1145  000040                     _IEEESeqNum:
  1146                           	opt stack 0
  1147  000040                     	ds	1
  1148  000041                     _MACCurrentChannel:
  1149                           	opt stack 0
  1150  000041                     	ds	1
  1151  000042                     _MRF24J40Status:
  1152                           	opt stack 0
  1153  000042                     	ds	1
  1154  000043                     _NetSeq:
  1155                           	opt stack 0
  1156  000043                     	ds	1
  1157  000044                     _RouteMgrUpdateRequired:
  1158                           	opt stack 0
  1159  000044                     	ds	1
  1160  000045                     _TMState:
  1161                           	opt stack 0
  1162  000045                     	ds	1
  1163  000046                     _TxIndex:
  1164                           	opt stack 0
  1165  000046                     	ds	1
  1166  000047                     _isNetworkTrafficSecure:
  1167                           	opt stack 0
  1168  000047                     	ds	1
  1169  000048                     _justEvictedParent:
  1170                           	opt stack 0
  1171  000048                     	ds	1
  1172  000049                     _lcdInitialized:
  1173                           	opt stack 0
  1174  000049                     	ds	1
  1175  00004A                     _netSequenceNumber:
  1176                           	opt stack 0
  1177  00004A                     	ds	1
  1178  00004B                     _switches:
  1179                           	opt stack 0
  1180  00004B                     	ds	1
  1181  00004C                     _t1fired:
  1182                           	opt stack 0
  1183  00004C                     	ds	1
  1184  00004D                     _tmpFrameCounter:
  1185                           	opt stack 0
  1186  00004D                     	ds	4
  1187  000051                     _MAC_PANID:
  1188                           	opt stack 0
  1189  000051                     	ds	2
  1190  000053                     _myNetworkAddress:
  1191                           	opt stack 0
  1192  000053                     	ds	2
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1h	equ	0xFE2
  1201                           fsr1l	equ	0xFE1
  1202                           
  1203                           	psect	dataCOMRAM
  1204  000055                     __pdataCOMRAM:
  1205                           	opt stack 0
  1206  000055                     _y:
  1207                           	opt stack 0
  1208  000055                     	ds	4
  1209  000059                     _BankIndex:
  1210                           	opt stack 0
  1211  000059                     	ds	1
  1212  00005A                     _DeviceType:
  1213                           	opt stack 0
  1214  00005A                     	ds	1
  1215  00005B                     _addressLen:
  1216                           	opt stack 0
  1217  00005B                     	ds	1
  1218  00005C                     _myPANID:
  1219                           	opt stack 0
  1220  00005C                     	ds	2
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	bssBANK1
  1232  0001D9                     __pbssBANK1:
  1233                           	opt stack 0
  1234  0001D9                     _LEDState:
  1235                           	opt stack 0
  1236  0001D9                     	ds	3
  1237  0001DC                     _failureCounter:
  1238                           	opt stack 0
  1239  0001DC                     	ds	2
  1240  0001DE                     _ActiveScanChannel:
  1241                           	opt stack 0
  1242  0001DE                     	ds	1
  1243  0001DF                     _TxData:
  1244                           	opt stack 0
  1245  0001DF                     	ds	1
  1246  0001E0                     _UserMessageAvailable:
  1247                           	opt stack 0
  1248  0001E0                     	ds	1
  1249  0001E1                     _devState:
  1250                           	opt stack 0
  1251  0001E1                     	ds	1
  1252  0001E2                     _nState:
  1253                           	opt stack 0
  1254  0001E2                     	ds	1
  1255  0001E3                     _nst:
  1256                           	opt stack 0
  1257  0001E3                     	ds	1
  1258  0001E4                     _userDataAvailable:
  1259                           	opt stack 0
  1260  0001E4                     	ds	1
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           postdec1	equ	0xFE5
  1268                           fsr1h	equ	0xFE2
  1269                           fsr1l	equ	0xFE1
  1270                           
  1271                           	psect	bssBANK2
  1272  000200                     __pbssBANK2:
  1273                           	opt stack 0
  1274  000200                     LEDManagerTask@tStart:
  1275                           	opt stack 0
  1276  000200                     	ds	12
  1277  00020C                     NetworkManagerTask@tStart:
  1278                           	opt stack 0
  1279  00020C                     	ds	8
  1280  000214                     _tInterval:
  1281                           	opt stack 0
  1282  000214                     	ds	8
  1283  00021C                     _tRouteMgr:
  1284                           	opt stack 0
  1285  00021C                     	ds	8
  1286  000224                     _tmpSourceLongAddress:
  1287                           	opt stack 0
  1288  000224                     	ds	8
  1289  00022C                     main@F8442:
  1290                           	opt stack 0
  1291  00022C                     	ds	8
  1292  000234                     MiApp_MessageAvailable@tStart:
  1293                           	opt stack 0
  1294  000234                     	ds	4
  1295  000238                     NetworkManagerTask@delay:
  1296                           	opt stack 0
  1297  000238                     	ds	4
  1298  00023C                     _OutgoingFrameCounter:
  1299                           	opt stack 0
  1300  00023C                     	ds	4
  1301  000240                     _c:
  1302                           	opt stack 0
  1303  000240                     	ds	4
  1304  000244                     _currentInterval:
  1305                           	opt stack 0
  1306  000244                     	ds	4
  1307  000248                     _currentTime:
  1308                           	opt stack 0
  1309  000248                     	ds	4
  1310  00024C                     _intervalDelay:
  1311                           	opt stack 0
  1312  00024C                     	ds	4
  1313  000250                     _t1extension:
  1314                           	opt stack 0
  1315  000250                     	ds	4
  1316  000254                     LEDManagerTask@lNextState:
  1317                           	opt stack 0
  1318  000254                     	ds	3
  1319  000257                     _MACInitParams:
  1320                           	opt stack 0
  1321  000257                     	ds	3
  1322  00025A                     _linkEstSeq:
  1323                           	opt stack 0
  1324  00025A                     	ds	2
  1325  00025C                     _pcnt1:
  1326                           	opt stack 0
  1327  00025C                     	ds	2
  1328  00025E                     _prevSentIdx:
  1329                           	opt stack 0
  1330  00025E                     	ds	2
  1331  000260                     _ActiveScanResults:
  1332                           	opt stack 0
  1333  000260                     	ds	25
  1334  000279                     _MACRxPacket:
  1335                           	opt stack 0
  1336  000279                     	ds	13
  1337  000286                     _routeInfo:
  1338                           	opt stack 0
  1339  000286                     	ds	13
  1340  000293                     _rxMessage:
  1341                           	opt stack 0
  1342  000293                     	ds	10
  1343  00029D                     CoordinatorGenericAddress@address:
  1344                           	opt stack 0
  1345  00029D                     	ds	8
  1346  0002A5                     _CoordinatorAddr:
  1347                           	opt stack 0
  1348  0002A5                     	ds	8
  1349  0002AD                     _NewBestParent:
  1350                           	opt stack 0
  1351  0002AD                     	ds	8
  1352  0002B5                     _Tick_MS:
  1353                           	opt stack 0
  1354  0002B5                     	ds	8
  1355  0002BD                     _myAddr:
  1356                           	opt stack 0
  1357  0002BD                     	ds	8
  1358  0002C5                     _srcAddress:
  1359                           	opt stack 0
  1360  0002C5                     	ds	8
  1361  0002CD                     radioBroadcast@addr:
  1362                           	opt stack 0
  1363  0002CD                     	ds	8
  1364  0002D5                     radioUnicast@addr:
  1365                           	opt stack 0
  1366  0002D5                     	ds	8
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec1	equ	0xFE5
  1374                           fsr1h	equ	0xFE2
  1375                           fsr1l	equ	0xFE1
  1376                           
  1377                           	psect	dataBANK2
  1378  0002DD                     __pdataBANK2:
  1379                           	opt stack 0
  1380  0002DD                     _w:
  1381                           	opt stack 0
  1382  0002DD                     	ds	4
  1383  0002E1                     _x:
  1384                           	opt stack 0
  1385  0002E1                     	ds	4
  1386  0002E5                     _z:
  1387                           	opt stack 0
  1388  0002E5                     	ds	4
  1389  0002E9                     _DEVPanID:
  1390                           	opt stack 0
  1391  0002E9                     	ds	2
  1392  0002EB                     _MyAddress:
  1393                           	opt stack 0
  1394  0002EB                     	ds	8
  1395  0002F3                     _myLongAddress:
  1396                           	opt stack 0
  1397  0002F3                     	ds	8
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1h	equ	0xFE2
  1406                           fsr1l	equ	0xFE1
  1407                           
  1408                           	psect	bssBANK3
  1409  000300                     __pbssBANK3:
  1410                           	opt stack 0
  1411  000300                     _ConnectionTable:
  1412                           	opt stack 0
  1413  000300                     	ds	85
  1414  000355                     _TxBuffer:
  1415                           	opt stack 0
  1416  000355                     	ds	64
  1417  000395                     _userdata:
  1418                           	opt stack 0
  1419  000395                     	ds	36
  1420  0003B9                     _LCDText:
  1421                           	opt stack 0
  1422  0003B9                     	ds	33
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           postinc0	equ	0xFEE
  1428                           wreg	equ	0xFE8
  1429                           postdec1	equ	0xFE5
  1430                           fsr1h	equ	0xFE2
  1431                           fsr1l	equ	0xFE1
  1432                           
  1433                           	psect	bssBANK4
  1434  000400                     __pbssBANK4:
  1435                           	opt stack 0
  1436  000400                     _RxBuffer:
  1437                           	opt stack 0
  1438  000400                     	ds	256
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           postdec1	equ	0xFE5
  1446                           fsr1h	equ	0xFE2
  1447                           fsr1l	equ	0xFE1
  1448                           
  1449                           	psect	bssBANK5
  1450  000500                     __pbssBANK5:
  1451                           	opt stack 0
  1452  000500                     _TMQ:
  1453                           	opt stack 0
  1454  000500                     	ds	152
  1455  000598                     _TxBuff:
  1456                           	opt stack 0
  1457  000598                     	ds	64
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1h	equ	0xFE2
  1466                           fsr1l	equ	0xFE1
  1467                           
  1468                           	psect	bssBANK6
  1469  000600                     __pbssBANK6:
  1470                           	opt stack 0
  1471  000600                     _tunnels:
  1472                           	opt stack 0
  1473  000600                     	ds	240
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1h	equ	0xFE2
  1482                           fsr1l	equ	0xFE1
  1483                           
  1484                           	psect	bssBANK7
  1485  000700                     __pbssBANK7:
  1486                           	opt stack 0
  1487  000700                     _beaconMessageBuffer:
  1488                           	opt stack 0
  1489  000700                     	ds	84
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1h	equ	0xFE2
  1498                           fsr1l	equ	0xFE1
  1499                           
  1500                           	psect	bssBANK8
  1501  000800                     __pbssBANK8:
  1502                           	opt stack 0
  1503  000800                     _routingTable:
  1504                           	opt stack 0
  1505  000800                     	ds	210
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postdec1	equ	0xFE5
  1513                           fsr1h	equ	0xFE2
  1514                           fsr1l	equ	0xFE1
  1515                           
  1516                           	psect	bssBIGRAM
  1517  0008D2                     __pbssBIGRAM:
  1518                           	opt stack 0
  1519  0008D2                     _RbcQ:
  1520                           	opt stack 0
  1521  0008D2                     	ds	444
  1522  000A8E                     _hc_table:
  1523                           	opt stack 0
  1524  000A8E                     	ds	360
  1525  000BF6                     _list:
  1526                           	opt stack 0
  1527  000BF6                     	ds	340
  1528  000D4A                     _neighbor_tbl:
  1529                           	opt stack 0
  1530  000D4A                     	ds	340
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           
  1541                           	psect	cstackBANK3
  1542  0003DA                     __pcstackBANK3:
  1543                           	opt stack 0
  1544  0003DA                     main@pButtonPressed_0:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x0
  1548  0003DA                     	ds	1
  1549  0003DB                     main@pButtonPressed_1:
  1550                           	opt stack 0
  1551                           
  1552                           ; 1 bytes @ 0x1
  1553  0003DB                     	ds	1
  1554  0003DC                     main@src1:
  1555                           	opt stack 0
  1556                           
  1557                           ; 8 bytes @ 0x2
  1558  0003DC                     	ds	8
  1559  0003E4                     main@tStart:
  1560                           	opt stack 0
  1561                           
  1562                           ; 4 bytes @ 0xA
  1563  0003E4                     	ds	4
  1564  0003E8                     main@SendPacket:
  1565                           	opt stack 0
  1566                           
  1567                           ; 1 bytes @ 0xE
  1568  0003E8                     	ds	1
  1569  0003E9                     main@RequestData:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0xF
  1573  0003E9                     	ds	1
  1574  0003EA                     main@counter:
  1575                           	opt stack 0
  1576                           
  1577                           ; 1 bytes @ 0x10
  1578  0003EA                     	ds	1
  1579  0003EB                     main@coord:
  1580                           	opt stack 0
  1581                           
  1582                           ; 8 bytes @ 0x11
  1583  0003EB                     	ds	8
  1584  0003F3                     main@pMemberOfNetwork:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x19
  1588  0003F3                     	ds	1
  1589  0003F4                     main@src:
  1590                           	opt stack 0
  1591                           
  1592                           ; 8 bytes @ 0x1A
  1593  0003F4                     	ds	8
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1h	equ	0xFE2
  1602                           fsr1l	equ	0xFE1
  1603                           
  1604                           	psect	cstackBANK1
  1605  000100                     __pcstackBANK1:
  1606                           	opt stack 0
  1607  000100                     NetworkManagerTask@data:
  1608                           	opt stack 0
  1609  000100                     TMSendDataToRFD@databuff:
  1610                           	opt stack 0
  1611                           
  1612                           ; 64 bytes @ 0x0
  1613  000100                     	ds	37
  1614  000125                     NetworkManagerTask@sz:
  1615                           	opt stack 0
  1616                           
  1617                           ; 2 bytes @ 0x25
  1618  000125                     	ds	27
  1619  000140                     MiApp_UnicastAddress@src:
  1620                           	opt stack 0
  1621  000140                     NetworkManagerProcessIncomingData@buffer:
  1622                           	opt stack 0
  1623                           
  1624                           ; 64 bytes @ 0x40
  1625  000140                     	ds	64
  1626  000180                     NetworkManagerProcessIncomingData@isFormed:
  1627                           	opt stack 0
  1628                           
  1629                           ; 1 bytes @ 0x80
  1630  000180                     	ds	1
  1631  000181                     NetworkManagerProcessIncomingData@packetsize:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x81
  1635  000181                     	ds	2
  1636  000183                     NetworkManagerProcessIncomingData@isSecurePacket:
  1637                           	opt stack 0
  1638                           
  1639                           ; 1 bytes @ 0x83
  1640  000183                     	ds	1
  1641  000184                     NetworkManagerProcessIncomingData@dHdr:
  1642                           	opt stack 0
  1643                           
  1644                           ; 2 bytes @ 0x84
  1645  000184                     	ds	2
  1646  000186                     radioReceivedPacket@source:
  1647                           	opt stack 0
  1648                           
  1649                           ; 8 bytes @ 0x86
  1650  000186                     	ds	8
  1651  00018E                     radioReceivedPacket@PANID:
  1652                           	opt stack 0
  1653                           
  1654                           ; 2 bytes @ 0x8E
  1655  00018E                     	ds	2
  1656  000190                     radioReceivedPacket@data:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x90
  1660  000190                     	ds	2
  1661  000192                     radioReceivedPacket@size:
  1662                           	opt stack 0
  1663                           
  1664                           ; 2 bytes @ 0x92
  1665  000192                     	ds	2
  1666  000194                     radioReceivedPacket@rssi:
  1667                           	opt stack 0
  1668                           
  1669                           ; 1 bytes @ 0x94
  1670  000194                     	ds	1
  1671  000195                     radioReceivedPacket@isBroadcast:
  1672                           	opt stack 0
  1673                           
  1674                           ; 1 bytes @ 0x95
  1675  000195                     	ds	1
  1676  000196                     radioReceivedPacket@isSecure:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x96
  1680  000196                     	ds	1
  1681  000197                     radioReceivedPacket@myAddr:
  1682                           	opt stack 0
  1683                           
  1684                           ; 2 bytes @ 0x97
  1685  000197                     	ds	2
  1686  000199                     _radioReceivedPacket$5323:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x99
  1690  000199                     	ds	1
  1691  00019A                     radioReceivedPacket@crc:
  1692                           	opt stack 0
  1693                           
  1694                           ; 4 bytes @ 0x9A
  1695  00019A                     	ds	4
  1696  00019E                     radioReceivedPacket@bt:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0x9E
  1700  00019E                     	ds	2
  1701  0001A0                     radioReceivedPacket@rhdr:
  1702                           	opt stack 0
  1703                           
  1704                           ; 2 bytes @ 0xA0
  1705  0001A0                     	ds	2
  1706  0001A2                     radioReceivedPacket@child:
  1707                           	opt stack 0
  1708                           
  1709                           ; 8 bytes @ 0xA2
  1710  0001A2                     	ds	8
  1711  0001AA                     radioReceivedPacket@parent:
  1712                           	opt stack 0
  1713                           
  1714                           ; 8 bytes @ 0xAA
  1715  0001AA                     	ds	8
  1716  0001B2                     radioReceivedPacket@dhdr:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0xB2
  1720  0001B2                     	ds	2
  1721  0001B4                     MiApp_MessageAvailable@src:
  1722                           	opt stack 0
  1723                           
  1724                           ; 8 bytes @ 0xB4
  1725  0001B4                     	ds	8
  1726  0001BC                     MiApp_SearchConnection@ChannelMap:
  1727                           	opt stack 0
  1728                           
  1729                           ; 4 bytes @ 0xBC
  1730  0001BC                     	ds	4
  1731  0001C0                     ??_MiApp_SearchConnection:
  1732                           
  1733                           ; 1 bytes @ 0xC0
  1734  0001C0                     	ds	8
  1735  0001C8                     MiApp_SearchConnection@tStart:
  1736                           	opt stack 0
  1737                           
  1738                           ; 4 bytes @ 0xC8
  1739  0001C8                     	ds	4
  1740  0001CC                     MiApp_SearchConnection@ScanDuartion:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0xCC
  1744  0001CC                     	ds	1
  1745  0001CD                     MiApp_SearchConnection@msDuration:
  1746                           	opt stack 0
  1747                           
  1748                           ; 2 bytes @ 0xCD
  1749  0001CD                     	ds	2
  1750  0001CF                     MiApp_SearchConnection@mask:
  1751                           	opt stack 0
  1752                           
  1753                           ; 4 bytes @ 0xCF
  1754  0001CF                     	ds	4
  1755  0001D3                     MiApp_SearchConnection@res:
  1756                           	opt stack 0
  1757                           
  1758                           ; 1 bytes @ 0xD3
  1759  0001D3                     	ds	1
  1760  0001D4                     MiApp_SearchConnection@i:
  1761                           	opt stack 0
  1762                           
  1763                           ; 1 bytes @ 0xD4
  1764  0001D4                     	ds	1
  1765  0001D5                     ??_main:
  1766                           
  1767                           ; 1 bytes @ 0xD5
  1768  0001D5                     	ds	4
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1h	equ	0xFE2
  1777                           fsr1l	equ	0xFE1
  1778                           
  1779                           	psect	cstackBANK0
  1780  000060                     __pcstackBANK0:
  1781                           	opt stack 0
  1782  000060                     ??_isdigit:
  1783  000060                     ??_isButtonPressed:
  1784  000060                     ?_memcmp:
  1785                           	opt stack 0
  1786  000060                     ?_NetworkManagerGetMyAddress:
  1787                           	opt stack 0
  1788  000060                     ?_NetworkGetPANID:
  1789                           	opt stack 0
  1790  000060                     ?_NetworkGetMyRouteInfo:
  1791                           	opt stack 0
  1792  000060                     ?_RMRoutingTableCount:
  1793                           	opt stack 0
  1794  000060                     ?_le_findEmptyNeighborIdx:
  1795                           	opt stack 0
  1796  000060                     ?___wmul:
  1797                           	opt stack 0
  1798  000060                     ?___awdiv:
  1799                           	opt stack 0
  1800  000060                     ?___lwdiv:
  1801                           	opt stack 0
  1802  000060                     ?_MiWi_TickGet:
  1803                           	opt stack 0
  1804  000060                     ?_krnd:
  1805                           	opt stack 0
  1806  000060                     ?_crc32:
  1807                           	opt stack 0
  1808  000060                     ?___lldiv:
  1809                           	opt stack 0
  1810  000060                     ?_NetworkGetParentAddress:
  1811                           	opt stack 0
  1812  000060                     ?_CoordinatorAddress:
  1813                           	opt stack 0
  1814  000060                     SPIPut@v:
  1815                           	opt stack 0
  1816  000060                     SPIPut2@v:
  1817                           	opt stack 0
  1818  000060                     LEDCommand@cmd:
  1819                           	opt stack 0
  1820  000060                     NetworkSetDeviceType@dev:
  1821                           	opt stack 0
  1822  000060                     NetworkDiscoveredEvent@PANID:
  1823                           	opt stack 0
  1824  000060                     passLinkEtxThreshold@etx:
  1825                           	opt stack 0
  1826  000060                     LE_GetNeighborDeviceType@index:
  1827                           	opt stack 0
  1828  000060                     krndInit@value:
  1829                           	opt stack 0
  1830  000060                     ___wmul@multiplier:
  1831                           	opt stack 0
  1832  000060                     ___awdiv@dividend:
  1833                           	opt stack 0
  1834  000060                     ___lwdiv@dividend:
  1835                           	opt stack 0
  1836  000060                     memcmp@s1:
  1837                           	opt stack 0
  1838  000060                     memset@p1:
  1839                           	opt stack 0
  1840  000060                     DelayUS@delay:
  1841                           	opt stack 0
  1842  000060                     crc32@crc:
  1843                           	opt stack 0
  1844  000060                     ___lldiv@dividend:
  1845                           	opt stack 0
  1846  000060                     RouteManagerSetNeighborCongested@n:
  1847                           	opt stack 0
  1848  000060                     le_initNeighborIdx@ll_addr:
  1849                           	opt stack 0
  1850                           
  1851                           ; 8 bytes @ 0x0
  1852  000060                     	ds	1
  1853  000061                     SPIPut@i:
  1854                           	opt stack 0
  1855  000061                     SPIPut2@i:
  1856                           	opt stack 0
  1857  000061                     _isdigit$4787:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x1
  1861  000061                     	ds	1
  1862  000062                     ??_krndInit:
  1863  000062                     ??_LE_GetNeighborDeviceType:
  1864  000062                     ??_le_findEmptyNeighborIdx:
  1865  000062                     LCD_WriteCmd@data:
  1866                           	opt stack 0
  1867  000062                     LCD_WriteData@data:
  1868                           	opt stack 0
  1869  000062                     isButtonPressed@index:
  1870                           	opt stack 0
  1871  000062                     LEDCommand@led:
  1872                           	opt stack 0
  1873  000062                     EEPROMRead@dest:
  1874                           	opt stack 0
  1875  000062                     PHYSetShortRAMAddr@value:
  1876                           	opt stack 0
  1877  000062                     PHYGetShortRAMAddr@address:
  1878                           	opt stack 0
  1879  000062                     isdigit@c:
  1880                           	opt stack 0
  1881  000062                     NetworkDiscoveredEvent@rssi:
  1882                           	opt stack 0
  1883  000062                     PHYSetLongRAMAddr@address:
  1884                           	opt stack 0
  1885  000062                     PHYGetLongRAMAddr@address:
  1886                           	opt stack 0
  1887  000062                     ___wmul@multiplicand:
  1888                           	opt stack 0
  1889  000062                     ___awdiv@divisor:
  1890                           	opt stack 0
  1891  000062                     ___lwdiv@divisor:
  1892                           	opt stack 0
  1893  000062                     memcmp@s2:
  1894                           	opt stack 0
  1895  000062                     memcpy@d1:
  1896                           	opt stack 0
  1897  000062                     memset@c:
  1898                           	opt stack 0
  1899                           
  1900                           ; 2 bytes @ 0x2
  1901  000062                     	ds	1
  1902  000063                     isButtonPressed@mask:
  1903                           	opt stack 0
  1904  000063                     EEPROMRead@addr:
  1905                           	opt stack 0
  1906  000063                     PHYSetShortRAMAddr@address:
  1907                           	opt stack 0
  1908  000063                     PHYGetShortRAMAddr@toReturn:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x3
  1912  000063                     	ds	1
  1913  000064                     ??_krnd:
  1914  000064                     ??_NetworkDiscoveredEvent:
  1915  000064                     ??_PHYGetLongRAMAddr:
  1916  000064                     EEPROMRead@count:
  1917                           	opt stack 0
  1918  000064                     PHYSetLongRAMAddr@value:
  1919                           	opt stack 0
  1920  000064                     PHYSetShortRAMAddr@tmpRFIE:
  1921                           	opt stack 0
  1922  000064                     PHYGetShortRAMAddr@tmpRFIE:
  1923                           	opt stack 0
  1924  000064                     ___awdiv@counter:
  1925                           	opt stack 0
  1926  000064                     ___lwdiv@counter:
  1927                           	opt stack 0
  1928  000064                     le_findEmptyNeighborIdx@res:
  1929                           	opt stack 0
  1930  000064                     crc32@buf:
  1931                           	opt stack 0
  1932  000064                     ___wmul@product:
  1933                           	opt stack 0
  1934  000064                     memcmp@n:
  1935                           	opt stack 0
  1936  000064                     memcpy@s1:
  1937                           	opt stack 0
  1938  000064                     memset@n:
  1939                           	opt stack 0
  1940  000064                     DelayUS@i:
  1941                           	opt stack 0
  1942  000064                     MiWi_TickGet@t1ext:
  1943                           	opt stack 0
  1944  000064                     ___lldiv@divisor:
  1945                           	opt stack 0
  1946                           
  1947                           ; 4 bytes @ 0x4
  1948  000064                     	ds	1
  1949  000065                     ??_PHYSetLongRAMAddr:
  1950  000065                     LE_GetNeighborDeviceType@dev:
  1951                           	opt stack 0
  1952  000065                     ___awdiv@sign:
  1953                           	opt stack 0
  1954  000065                     ___lwdiv@quotient:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x5
  1958  000065                     	ds	1
  1959  000066                     ??_memcmp:
  1960  000066                     PHYGetLongRAMAddr@toReturn:
  1961                           	opt stack 0
  1962  000066                     le_findEmptyNeighborIdx@i:
  1963                           	opt stack 0
  1964  000066                     crc32@size:
  1965                           	opt stack 0
  1966  000066                     ___awdiv@quotient:
  1967                           	opt stack 0
  1968  000066                     memcpy@n:
  1969                           	opt stack 0
  1970  000066                     memset@p:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x6
  1974  000066                     	ds	1
  1975  000067                     ?_sprintf:
  1976                           	opt stack 0
  1977  000067                     PHYSetLongRAMAddr@tmpRFIE:
  1978                           	opt stack 0
  1979  000067                     PHYGetLongRAMAddr@tmpRFIE:
  1980                           	opt stack 0
  1981  000067                     sprintf@sp:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x7
  1985  000067                     	ds	1
  1986  000068                     ??_crc32:
  1987  000068                     ?_le_computeETX:
  1988                           	opt stack 0
  1989  000068                     ?_MiApp_GetParentAddress:
  1990                           	opt stack 0
  1991  000068                     ?_CoordinatorGenericAddress:
  1992                           	opt stack 0
  1993  000068                     MiMAC_ChannelAssessment@RSSIcheck:
  1994                           	opt stack 0
  1995  000068                     MiMAC_SetChannel@offsetFreq:
  1996                           	opt stack 0
  1997  000068                     RouteManagerSetNeighborCongested@congested:
  1998                           	opt stack 0
  1999  000068                     le_initNeighborIdx@i:
  2000                           	opt stack 0
  2001  000068                     NetworkDiscoveredEvent@empty:
  2002                           	opt stack 0
  2003  000068                     routeInfoInit@ri:
  2004                           	opt stack 0
  2005  000068                     memcpy@d:
  2006                           	opt stack 0
  2007  000068                     DelayMs@ms:
  2008                           	opt stack 0
  2009  000068                     MiWi_TickGet@tmrval:
  2010                           	opt stack 0
  2011  000068                     krnd@t:
  2012                           	opt stack 0
  2013  000068                     ___lldiv@quotient:
  2014                           	opt stack 0
  2015  000068                     NetworkDataArrivedEvent@source:
  2016                           	opt stack 0
  2017  000068                     isBroadcastAddress@address:
  2018                           	opt stack 0
  2019                           
  2020                           ; 8 bytes @ 0x8
  2021  000068                     	ds	1
  2022  000069                     MiMAC_SetChannel@channel:
  2023                           	opt stack 0
  2024  000069                     sprintf@f:
  2025                           	opt stack 0
  2026  000069                     le_initNeighborIdx@ne:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x9
  2030  000069                     	ds	1
  2031  00006A                     ??_InitMRF24J40:
  2032  00006A                     MiApp_SetChannel@Channel:
  2033                           	opt stack 0
  2034  00006A                     le_computeETX@q1:
  2035                           	opt stack 0
  2036  00006A                     NetworkDiscoveredEvent@i:
  2037                           	opt stack 0
  2038  00006A                     memcpy@s:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0xA
  2042  00006A                     	ds	1
  2043  00006B                     InitMRF24J40@i:
  2044                           	opt stack 0
  2045  00006B                     le_computeETX@q:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0xB
  2049  00006B                     	ds	1
  2050  00006C                     ??_MiMAC_ReceivedPacket:
  2051  00006C                     ??_DelayMs:
  2052  00006C                     ?___lwmod:
  2053                           	opt stack 0
  2054  00006C                     ?_MiWi_TickGetMs:
  2055                           	opt stack 0
  2056  00006C                     ?___llmod:
  2057                           	opt stack 0
  2058  00006C                     ?_Read_MAC_Address:
  2059                           	opt stack 0
  2060  00006C                     ?_MSTickGet:
  2061                           	opt stack 0
  2062  00006C                     ___lldiv@counter:
  2063                           	opt stack 0
  2064  00006C                     InitMRF24J40@j:
  2065                           	opt stack 0
  2066  00006C                     MiMAC_SetAltAddress@Address:
  2067                           	opt stack 0
  2068  00006C                     ___lwmod@dividend:
  2069                           	opt stack 0
  2070  00006C                     ___llmod@dividend:
  2071                           	opt stack 0
  2072  00006C                     NetworkSetAddressPAN@address:
  2073                           	opt stack 0
  2074  00006C                     DeviceManagerBufferDeviceData@address:
  2075                           	opt stack 0
  2076                           
  2077                           ; 8 bytes @ 0xC
  2078  00006C                     	ds	1
  2079  00006D                     le_updateETX@ne:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0xD
  2083  00006D                     	ds	1
  2084  00006E                     MiMAC_SetAltAddress@PANID:
  2085                           	opt stack 0
  2086  00006E                     ___lwmod@divisor:
  2087                           	opt stack 0
  2088                           
  2089                           ; 2 bytes @ 0xE
  2090  00006E                     	ds	1
  2091  00006F                     ??_sprintf:
  2092  00006F                     le_updateETX@newEst:
  2093                           	opt stack 0
  2094                           
  2095                           ; 2 bytes @ 0xF
  2096  00006F                     	ds	1
  2097  000070                     ?_NetworkPrepareSendPacket:
  2098                           	opt stack 0
  2099  000070                     ___lwmod@counter:
  2100                           	opt stack 0
  2101  000070                     NetworkDataArrivedEvent@data:
  2102                           	opt stack 0
  2103  000070                     MiWi_TickGetMs@tnow:
  2104                           	opt stack 0
  2105  000070                     ___llmod@divisor:
  2106                           	opt stack 0
  2107  000070                     isBroadcastAddress@addr:
  2108                           	opt stack 0
  2109  000070                     isSameAddress@a1:
  2110                           	opt stack 0
  2111  000070                     NetworkPrepareSendPacket@address:
  2112                           	opt stack 0
  2113                           
  2114                           ; 8 bytes @ 0x10
  2115  000070                     	ds	1
  2116  000071                     ??_le_updateETX:
  2117  000071                     ?_LEAppendNeighborInfo:
  2118                           	opt stack 0
  2119  000071                     MiMAC_ReceivedPacket@addrMode:
  2120                           	opt stack 0
  2121  000071                     LEAppendNeighborInfo@data:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x11
  2125  000071                     	ds	1
  2126  000072                     MiMAC_ReceivedPacket@i:
  2127                           	opt stack 0
  2128  000072                     NetworkDataArrivedEvent@size:
  2129                           	opt stack 0
  2130  000072                     crc32@p:
  2131                           	opt stack 0
  2132                           
  2133                           ; 2 bytes @ 0x12
  2134  000072                     	ds	1
  2135  000073                     MiMAC_ReceivedPacket@bIntraPAN:
  2136                           	opt stack 0
  2137  000073                     sprintf@idx:
  2138                           	opt stack 0
  2139  000073                     LEAppendNeighborInfo@size:
  2140                           	opt stack 0
  2141                           
  2142                           ; 2 bytes @ 0x13
  2143  000073                     	ds	1
  2144  000074                     ??_Read_MAC_Address:
  2145  000074                     ??_LEDManagerTask:
  2146  000074                     LCDUpdate@i:
  2147                           	opt stack 0
  2148  000074                     ButtonTask@Sw:
  2149                           	opt stack 0
  2150  000074                     NetworkDataArrivedEvent@isBroadcast:
  2151                           	opt stack 0
  2152  000074                     MiMAC_PowerState@PowerState:
  2153                           	opt stack 0
  2154  000074                     sprintf@flag:
  2155                           	opt stack 0
  2156  000074                     ___llmod@counter:
  2157                           	opt stack 0
  2158  000074                     NetworkSetAddressPAN@PANID:
  2159                           	opt stack 0
  2160  000074                     DeviceManagerBufferDeviceData@data:
  2161                           	opt stack 0
  2162  000074                     MiMAC_Init@initValue:
  2163                           	opt stack 0
  2164  000074                     MiMAC_SendPacket@transParam:
  2165                           	opt stack 0
  2166  000074                     MSTickGet@tNow:
  2167                           	opt stack 0
  2168                           
  2169                           ; 8 bytes @ 0x14
  2170  000074                     	ds	1
  2171  000075                     ??_LEAppendNeighborInfo:
  2172  000075                     sprintf@val:
  2173                           	opt stack 0
  2174  000075                     MiMAC_PowerState@t1:
  2175                           	opt stack 0
  2176  000075                     Read_MAC_Address@addr8:
  2177                           	opt stack 0
  2178                           
  2179                           ; 6 bytes @ 0x15
  2180  000075                     	ds	1
  2181  000076                     MiApp_SetAddressPan@address:
  2182                           	opt stack 0
  2183  000076                     DeviceManagerBufferDeviceData@size:
  2184                           	opt stack 0
  2185                           
  2186                           ; 2 bytes @ 0x16
  2187  000076                     	ds	1
  2188  000077                     sprintf@prec:
  2189                           	opt stack 0
  2190  000077                     MiMAC_Init@seed:
  2191                           	opt stack 0
  2192  000077                     LEAppendNeighborInfo@cnt:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x17
  2196  000077                     	ds	1
  2197  000078                     sprintf@ap:
  2198                           	opt stack 0
  2199  000078                     isBroadcastAddress@res:
  2200                           	opt stack 0
  2201  000078                     DeviceManagerBufferDeviceData@isSecure:
  2202                           	opt stack 0
  2203  000078                     MiApp_SetAddressPan@panid:
  2204                           	opt stack 0
  2205  000078                     NetworkPrepareSendPacket@buffer:
  2206                           	opt stack 0
  2207  000078                     isSameAddress@a2:
  2208                           	opt stack 0
  2209                           
  2210                           ; 8 bytes @ 0x18
  2211  000078                     	ds	1
  2212  000079                     MiMAC_PowerState@results:
  2213                           	opt stack 0
  2214  000079                     MiMAC_Init@i:
  2215                           	opt stack 0
  2216  000079                     DeviceManagerBufferDeviceData@isFormed:
  2217                           	opt stack 0
  2218  000079                     sprintf@cp:
  2219                           	opt stack 0
  2220  000079                     LEAppendNeighborInfo@newPrevSentIdx:
  2221                           	opt stack 0
  2222  000079                     isInvalidAddress@address:
  2223                           	opt stack 0
  2224                           
  2225                           ; 8 bytes @ 0x19
  2226  000079                     	ds	1
  2227  00007A                     NetworkPrepareSendPacket@pType:
  2228                           	opt stack 0
  2229  00007A                     MiMAC_PowerState@t2:
  2230                           	opt stack 0
  2231  00007A                     MiApp_SetAddressPan@addr:
  2232                           	opt stack 0
  2233                           
  2234                           ; 8 bytes @ 0x1A
  2235  00007A                     	ds	1
  2236  00007B                     MiMAC_SendPacket@MACPayload:
  2237                           	opt stack 0
  2238  00007B                     sprintf@len:
  2239                           	opt stack 0
  2240  00007B                     LEAppendNeighborInfo@count:
  2241                           	opt stack 0
  2242  00007B                     NetworkPrepareSendPacket@data:
  2243                           	opt stack 0
  2244  00007B                     Read_MAC_Address@address:
  2245                           	opt stack 0
  2246                           
  2247                           ; 8 bytes @ 0x1B
  2248  00007B                     	ds	1
  2249  00007C                     ?_MSTickGetDiffNow:
  2250                           	opt stack 0
  2251  00007C                     ?_AddMSToTick:
  2252                           	opt stack 0
  2253  00007C                     netChooseAdvertiseTime@t:
  2254                           	opt stack 0
  2255  00007C                     MSTickGetDiffNow@tick:
  2256                           	opt stack 0
  2257  00007C                     AddMSToTick@tick:
  2258                           	opt stack 0
  2259                           
  2260                           ; 8 bytes @ 0x1C
  2261  00007C                     	ds	1
  2262  00007D                     MiMAC_SendPacket@MACPayloadLen:
  2263                           	opt stack 0
  2264  00007D                     sprintf@width:
  2265                           	opt stack 0
  2266  00007D                     LEAppendNeighborInfo@i:
  2267                           	opt stack 0
  2268  00007D                     NetworkPrepareSendPacket@size:
  2269                           	opt stack 0
  2270                           
  2271                           ; 2 bytes @ 0x1D
  2272  00007D                     	ds	1
  2273  00007E                     ??_MiMAC_SendPacket:
  2274  00007E                     LEDManagerTask@i:
  2275                           	opt stack 0
  2276                           
  2277                           ; 2 bytes @ 0x1E
  2278  00007E                     	ds	1
  2279  00007F                     MiApp_TransceiverPowerState@Mode:
  2280                           	opt stack 0
  2281  00007F                     sprintf@c:
  2282                           	opt stack 0
  2283  00007F                     LEAppendNeighborInfo@j:
  2284                           	opt stack 0
  2285  00007F                     NetworkPrepareSendPacket@nHdr:
  2286                           	opt stack 0
  2287  00007F                     DeviceManagerBufferDeviceData@empty:
  2288                           	opt stack 0
  2289                           
  2290                           ; 2 bytes @ 0x1F
  2291  00007F                     	ds	1
  2292  000080                     ?_DeviceManagerGetDeviceData:
  2293                           	opt stack 0
  2294  000080                     ?_le_findWorstNeighborIdx:
  2295                           	opt stack 0
  2296  000080                     ?_le_findRandomNeighborIdx:
  2297                           	opt stack 0
  2298  000080                     ?_RoutingTableFindDeviceOrParent:
  2299                           	opt stack 0
  2300  000080                     TunnelManagerSetTunnel@device:
  2301                           	opt stack 0
  2302  000080                     AddNodeToNetworkTable@address:
  2303                           	opt stack 0
  2304  000080                     RoutingTableFindDeviceOrParent@address:
  2305                           	opt stack 0
  2306  000080                     le_findIdx@ll_addr:
  2307                           	opt stack 0
  2308  000080                     le_updateNeighborTableEst@n:
  2309                           	opt stack 0
  2310  000080                     TunnelManagerInvalidateTunnel@device:
  2311                           	opt stack 0
  2312  000080                     NetworkInit@address:
  2313                           	opt stack 0
  2314  000080                     DeviceManagerGetDeviceType@address:
  2315                           	opt stack 0
  2316  000080                     DeviceManagerGetDeviceData@address:
  2317                           	opt stack 0
  2318                           
  2319                           ; 8 bytes @ 0x20
  2320  000080                     	ds	1
  2321  000081                     _NetworkHasRoute$4257:
  2322                           	opt stack 0
  2323  000081                     RouteManagerShouldInsert@hdr:
  2324                           	opt stack 0
  2325  000081                     LEAppendNeighborInfo@k:
  2326                           	opt stack 0
  2327  000081                     routingTableFind@neighbor:
  2328                           	opt stack 0
  2329  000081                     IsNetworkDevice@address:
  2330                           	opt stack 0
  2331                           
  2332                           ; 8 bytes @ 0x21
  2333  000081                     	ds	1
  2334  000082                     ??_le_findWorstNeighborIdx:
  2335  000082                     ??_le_findRandomNeighborIdx:
  2336  000082                     NetworkHasRoute@res:
  2337                           	opt stack 0
  2338  000082                     TunnelManagerSetTunnel@parent:
  2339                           	opt stack 0
  2340                           
  2341                           ; 2 bytes @ 0x22
  2342  000082                     	ds	1
  2343  000083                     ??_RouteManagerShouldInsert:
  2344  000083                     Read_MAC_Address@pAddress:
  2345                           	opt stack 0
  2346  000083                     TMSendFormedPacketTowardsCoordinator@data:
  2347                           	opt stack 0
  2348  000083                     MiApp_ProtocolInit@initValue:
  2349                           	opt stack 0
  2350  000083                     MiMAC_SendPacket@t1:
  2351                           	opt stack 0
  2352                           
  2353                           ; 4 bytes @ 0x23
  2354  000083                     	ds	1
  2355  000084                     ??_TunnelManagerSetTunnel:
  2356  000084                     Read_MAC_Address@j:
  2357                           	opt stack 0
  2358  000084                     le_findWorstNeighborIdx@thresholdETX:
  2359                           	opt stack 0
  2360  000084                     le_findRandomNeighborIdx@cnt:
  2361                           	opt stack 0
  2362  000084                     MSTickGetDiffNow@diff:
  2363                           	opt stack 0
  2364  000084                     AddMSToTick@ms:
  2365                           	opt stack 0
  2366                           
  2367                           ; 4 bytes @ 0x24
  2368  000084                     	ds	1
  2369  000085                     Read_MAC_Address@i:
  2370                           	opt stack 0
  2371  000085                     RouteManagerShouldInsert@pathEtx:
  2372                           	opt stack 0
  2373  000085                     le_findWorstNeighborIdx@worstNeighborIdx:
  2374                           	opt stack 0
  2375  000085                     le_findRandomNeighborIdx@res:
  2376                           	opt stack 0
  2377  000085                     TMSendFormedPacketTowardsCoordinator@size:
  2378                           	opt stack 0
  2379                           
  2380                           ; 2 bytes @ 0x25
  2381  000085                     	ds	2
  2382  000087                     le_findRandomNeighborIdx@num_eligible_eviction:
  2383                           	opt stack 0
  2384  000087                     TMSendFormedPacketTowardsCoordinator@isFormed:
  2385                           	opt stack 0
  2386  000087                     RouteManagerShouldInsert@neighEtx:
  2387                           	opt stack 0
  2388  000087                     le_findWorstNeighborIdx@res:
  2389                           	opt stack 0
  2390  000087                     MiMAC_SendPacket@t2:
  2391                           	opt stack 0
  2392                           
  2393                           ; 4 bytes @ 0x27
  2394  000087                     	ds	1
  2395  000088                     ??_DeviceManagerGetDeviceType:
  2396  000088                     ??_TunnelManagerInvalidateTunnel:
  2397  000088                     ??_AddMSToTick:
  2398  000088                     ??_RoutingTableFindDeviceOrParent:
  2399  000088                     ??_le_updateNeighborTableEst:
  2400  000088                     le_findIdx@res:
  2401                           	opt stack 0
  2402  000088                     TMSendFormedPacketTowardsCoordinator@isSecure:
  2403                           	opt stack 0
  2404  000088                     AddNodeToNetworkTable@PANID:
  2405                           	opt stack 0
  2406  000088                     le_findRandomNeighborIdx@i:
  2407                           	opt stack 0
  2408  000088                     NetworkInit@PANID:
  2409                           	opt stack 0
  2410  000088                     DeviceManagerGetDeviceData@data:
  2411                           	opt stack 0
  2412  000088                     MSTickGetDiffNow@tNow:
  2413                           	opt stack 0
  2414                           
  2415                           ; 8 bytes @ 0x28
  2416  000088                     	ds	1
  2417  000089                     ??_TMSendFormedPacketTowardsCoordinator:
  2418  000089                     ??_routingTableFind:
  2419  000089                     le_findIdx@i:
  2420                           	opt stack 0
  2421  000089                     IsNetworkDevice@devType:
  2422                           	opt stack 0
  2423  000089                     RouteManagerShouldInsert@entry:
  2424                           	opt stack 0
  2425  000089                     le_findWorstNeighborIdx@thisETX:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0x29
  2429  000089                     	ds	1
  2430  00008A                     ??_AddNodeToNetworkTable:
  2431  00008A                     ??_IsNetworkDevice:
  2432  00008A                     ?_LELinkQualityGet:
  2433                           	opt stack 0
  2434  00008A                     NetworkInit@dev:
  2435                           	opt stack 0
  2436  00008A                     DeviceManagerGetDeviceType@dev:
  2437                           	opt stack 0
  2438  00008A                     RoutingTableFindDeviceOrParent@i:
  2439                           	opt stack 0
  2440  00008A                     TunnelManagerSetTunnel@oldestindex:
  2441                           	opt stack 0
  2442  00008A                     DeviceManagerGetDeviceData@isSecure:
  2443                           	opt stack 0
  2444  00008A                     LELinkQualityGet@address:
  2445                           	opt stack 0
  2446  00008A                     LE_PinNeighbor@neighbor:
  2447                           	opt stack 0
  2448  00008A                     LE_UnpinNeighbor@neighbor:
  2449                           	opt stack 0
  2450  00008A                     LE_ClearDLQ@neighbor:
  2451                           	opt stack 0
  2452  00008A                     TunnelManagerInvalidateTunnel@addr:
  2453                           	opt stack 0
  2454                           
  2455                           ; 8 bytes @ 0x2A
  2456  00008A                     	ds	1
  2457  00008B                     MiMAC_SendPacket@IntraPAN:
  2458                           	opt stack 0
  2459  00008B                     TMSendFormedPacketTowardsCoordinator@res:
  2460                           	opt stack 0
  2461  00008B                     routingTableFind@res:
  2462                           	opt stack 0
  2463  00008B                     RouteManagerShouldInsert@i:
  2464                           	opt stack 0
  2465  00008B                     le_findWorstNeighborIdx@worstETX:
  2466                           	opt stack 0
  2467  00008B                     NetworkInit@devPanID:
  2468                           	opt stack 0
  2469  00008B                     DeviceManagerGetDeviceType@i:
  2470                           	opt stack 0
  2471                           
  2472                           ; 2 bytes @ 0x2B
  2473  00008B                     	ds	1
  2474  00008C                     MiMAC_SendPacket@headerLength:
  2475                           	opt stack 0
  2476  00008C                     BroadcastManagerDelaySend@pkt:
  2477                           	opt stack 0
  2478  00008C                     TunnelManagerSetTunnel@emptyindex:
  2479                           	opt stack 0
  2480  00008C                     TMSendFormedPacketTowardsCoordinator@i:
  2481                           	opt stack 0
  2482  00008C                     DeviceManagerGetDeviceData@isFormed:
  2483                           	opt stack 0
  2484  00008C                     RoutingTableFindDeviceOrParent@res:
  2485                           	opt stack 0
  2486  00008C                     IsNetworkDevice@oldest:
  2487                           	opt stack 0
  2488                           
  2489                           ; 8 bytes @ 0x2C
  2490  00008C                     	ds	1
  2491  00008D                     MiApp_EstablishConnection@Mode:
  2492                           	opt stack 0
  2493  00008D                     MiMAC_SendPacket@i:
  2494                           	opt stack 0
  2495  00008D                     routingTableFind@i:
  2496                           	opt stack 0
  2497  00008D                     RouteManagerShouldInsert@found:
  2498                           	opt stack 0
  2499  00008D                     le_findWorstNeighborIdx@i:
  2500                           	opt stack 0
  2501                           
  2502                           ; 2 bytes @ 0x2D
  2503  00008D                     	ds	1
  2504  00008E                     MiApp_EstablishConnection@dev:
  2505                           	opt stack 0
  2506  00008E                     MiMAC_SendPacket@loc:
  2507                           	opt stack 0
  2508  00008E                     AddNodeToNetworkTable@ind:
  2509                           	opt stack 0
  2510  00008E                     RouteManagerShouldInsert@rcvBeacon:
  2511                           	opt stack 0
  2512  00008E                     BroadcastManagerDelaySend@size:
  2513                           	opt stack 0
  2514  00008E                     TunnelManagerSetTunnel@index:
  2515                           	opt stack 0
  2516  00008E                     RouterEvicted@address:
  2517                           	opt stack 0
  2518                           
  2519                           ; 8 bytes @ 0x2E
  2520  00008E                     	ds	1
  2521  00008F                     SendPacket@DestinationAddress:
  2522                           	opt stack 0
  2523  00008F                     MiApp_EstablishConnection@src:
  2524                           	opt stack 0
  2525                           
  2526                           ; 8 bytes @ 0x2F
  2527  00008F                     	ds	1
  2528  000090                     BroadcastManagerDelaySend@isSecure:
  2529                           	opt stack 0
  2530  000090                     AddNodeToNetworkTable@i:
  2531                           	opt stack 0
  2532  000090                     TunnelManagerSetTunnel@OldestTick:
  2533                           	opt stack 0
  2534  000090                     MSTickGetDiffNow@tdiff:
  2535                           	opt stack 0
  2536                           
  2537                           ; 8 bytes @ 0x30
  2538  000090                     	ds	1
  2539  000091                     le_updateNeighborTableEst@totalPkt:
  2540                           	opt stack 0
  2541  000091                     BroadcastManagerDelaySend@isInterPan:
  2542                           	opt stack 0
  2543  000091                     SendPacket@destinationPANID:
  2544                           	opt stack 0
  2545                           
  2546                           ; 2 bytes @ 0x31
  2547  000091                     	ds	1
  2548  000092                     ??_BroadcastManagerDelaySend:
  2549  000092                     ??_LE_UnpinNeighbor:
  2550  000092                     ??_LE_PinNeighbor:
  2551  000092                     ??_LE_ClearDLQ:
  2552  000092                     LELinkQualityGet@offset:
  2553                           	opt stack 0
  2554  000092                     le_updateNeighborTableEst@newEst:
  2555                           	opt stack 0
  2556  000092                     TunnelManagerInvalidateTunnel@i:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x32
  2560  000092                     	ds	1
  2561  000093                     SendPacket@isCommand:
  2562                           	opt stack 0
  2563                           
  2564                           ; 1 bytes @ 0x33
  2565  000093                     	ds	1
  2566  000094                     ??_LELinkQualityGet:
  2567  000094                     SendPacket@SecurityEnabled:
  2568                           	opt stack 0
  2569  000094                     le_updateNeighborTableEst@i:
  2570                           	opt stack 0
  2571  000094                     IsNetworkDevice@res:
  2572                           	opt stack 0
  2573  000094                     RoutingTableFindDeviceOrParent@entry:
  2574                           	opt stack 0
  2575                           
  2576                           ; 2 bytes @ 0x34
  2577  000094                     	ds	1
  2578  000095                     ??_SendPacket:
  2579  000095                     LE_PinNeighbor@nidx:
  2580                           	opt stack 0
  2581  000095                     LE_UnpinNeighbor@nidx:
  2582                           	opt stack 0
  2583  000095                     LE_ClearDLQ@ne:
  2584                           	opt stack 0
  2585  000095                     le_updateNeighborTableEst@ne:
  2586                           	opt stack 0
  2587  000095                     IsNetworkDevice@empty:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0x35
  2591  000095                     	ds	1
  2592  000096                     ??_RouterEvicted:
  2593  000096                     ?_GetRouteAddressOfChild:
  2594                           	opt stack 0
  2595  000096                     SendPacket@status:
  2596                           	opt stack 0
  2597  000096                     LELinkQualityGet@res:
  2598                           	opt stack 0
  2599  000096                     GetRouteAddressOfChild@child:
  2600                           	opt stack 0
  2601                           
  2602                           ; 8 bytes @ 0x36
  2603  000096                     	ds	1
  2604  000097                     SendPacket@Broadcast:
  2605                           	opt stack 0
  2606  000097                     MiApp_EstablishConnection@ActiveScanIndex:
  2607                           	opt stack 0
  2608  000097                     le_updateNeighborEntryIdx@seq:
  2609                           	opt stack 0
  2610  000097                     LE_ClearDLQ@nidx:
  2611                           	opt stack 0
  2612  000097                     IsNetworkDevice@i:
  2613                           	opt stack 0
  2614                           
  2615                           ; 2 bytes @ 0x37
  2616  000097                     	ds	1
  2617  000098                     ?_TunnelManagerGetTunnel:
  2618                           	opt stack 0
  2619  000098                     LELinkQualityGet@idx:
  2620                           	opt stack 0
  2621  000098                     le_updateNeighborEntryIdx@dev:
  2622                           	opt stack 0
  2623  000098                     BroadcastManagerDelaySend@res:
  2624                           	opt stack 0
  2625  000098                     RouterEvicted@r:
  2626                           	opt stack 0
  2627  000098                     TunnelManagerSetTunnel@i:
  2628                           	opt stack 0
  2629  000098                     isKnownPacket@hash:
  2630                           	opt stack 0
  2631  000098                     SendPacket@tParam:
  2632                           	opt stack 0
  2633  000098                     TunnelManagerGetTunnel@device:
  2634                           	opt stack 0
  2635                           
  2636                           ; 8 bytes @ 0x38
  2637  000098                     	ds	1
  2638  000099                     ??_RouteManagerPerformUpdate:
  2639  000099                     ??_le_updateNeighborEntryIdx:
  2640  000099                     BroadcastManagerDelaySend@i:
  2641                           	opt stack 0
  2642  000099                     routingTableUpdateEntry@from:
  2643                           	opt stack 0
  2644                           
  2645                           ; 8 bytes @ 0x39
  2646  000099                     	ds	1
  2647  00009A                     RouterEvicted@idx:
  2648                           	opt stack 0
  2649                           
  2650                           ; 1 bytes @ 0x3A
  2651  00009A                     	ds	1
  2652  00009B                     RouterEvicted@i:
  2653                           	opt stack 0
  2654  00009B                     le_updateNeighborEntryIdx@packetGap:
  2655                           	opt stack 0
  2656  00009B                     RouteManagerPerformUpdate@linkEtx:
  2657                           	opt stack 0
  2658  00009B                     NetworkSendDiscoverRequest@databuff:
  2659                           	opt stack 0
  2660  00009B                     NetworkSendDiscoverResponse@databuff:
  2661                           	opt stack 0
  2662                           
  2663                           ; 64 bytes @ 0x3B
  2664  00009B                     	ds	1
  2665  00009C                     ??_isKnownPacket:
  2666  00009C                     le_updateNeighborEntryIdx@idx:
  2667                           	opt stack 0
  2668  00009C                     LE_InsertNeighbor@neighbor:
  2669                           	opt stack 0
  2670  00009C                     LE_RemoveNeighborDevice@device:
  2671                           	opt stack 0
  2672                           
  2673                           ; 8 bytes @ 0x3C
  2674  00009C                     	ds	1
  2675  00009D                     RouteManagerPerformUpdate@i:
  2676                           	opt stack 0
  2677  00009D                     LE_processReceivedMessage@source:
  2678                           	opt stack 0
  2679                           
  2680                           ; 2 bytes @ 0x3D
  2681  00009D                     	ds	1
  2682  00009E                     GetRouteAddressOfChild@res:
  2683                           	opt stack 0
  2684                           
  2685                           ; 8 bytes @ 0x3E
  2686  00009E                     	ds	1
  2687  00009F                     radioBroadcast@data:
  2688                           	opt stack 0
  2689  00009F                     RouteManagerPerformUpdate@pathEtx:
  2690                           	opt stack 0
  2691  00009F                     LE_processReceivedMessage@data:
  2692                           	opt stack 0
  2693  00009F                     radioUnicast@dest:
  2694                           	opt stack 0
  2695                           
  2696                           ; 8 bytes @ 0x3F
  2697  00009F                     	ds	1
  2698  0000A0                     ??_TunnelManagerGetTunnel:
  2699                           
  2700                           ; 1 bytes @ 0x40
  2701  0000A0                     	ds	1
  2702  0000A1                     radioBroadcast@datasize:
  2703                           	opt stack 0
  2704  0000A1                     LE_processReceivedMessage@len:
  2705                           	opt stack 0
  2706  0000A1                     RouteManagerPerformUpdate@currentEtx:
  2707                           	opt stack 0
  2708  0000A1                     routingTableUpdateEntry@parent:
  2709                           	opt stack 0
  2710                           
  2711                           ; 8 bytes @ 0x41
  2712  0000A1                     	ds	1
  2713  0000A2                     LE_processReceivedMessage@rssi:
  2714                           	opt stack 0
  2715  0000A2                     radioBroadcast@PANID:
  2716                           	opt stack 0
  2717  0000A2                     isKnownPacket@zeros:
  2718                           	opt stack 0
  2719                           
  2720                           ; 12 bytes @ 0x42
  2721  0000A2                     	ds	1
  2722  0000A3                     RouteManagerPerformUpdate@best:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x43
  2726  0000A3                     	ds	1
  2727  0000A4                     ??_LE_RemoveNeighborDevice:
  2728  0000A4                     radioBroadcast@isSecure:
  2729                           	opt stack 0
  2730  0000A4                     LE_InsertNeighbor@devType:
  2731                           	opt stack 0
  2732                           
  2733                           ; 1 bytes @ 0x44
  2734  0000A4                     	ds	1
  2735  0000A5                     ??_LE_InsertNeighbor:
  2736  0000A5                     radioBroadcast@i:
  2737                           	opt stack 0
  2738  0000A5                     RouteManagerPerformUpdate@minEtx:
  2739                           	opt stack 0
  2740  0000A5                     LE_processReceivedMessage@hdr:
  2741                           	opt stack 0
  2742                           
  2743                           ; 2 bytes @ 0x45
  2744  0000A5                     	ds	1
  2745  0000A6                     ??_networkSendBeacon:
  2746  0000A6                     ??_BroadcastManagerTask:
  2747  0000A6                     GetRouteAddressOfChild@i:
  2748                           	opt stack 0
  2749  0000A6                     LE_RemoveNeighborDevice@i:
  2750                           	opt stack 0
  2751  0000A6                     TunnelManagerGetTunnel@trec:
  2752                           	opt stack 0
  2753                           
  2754                           ; 8 bytes @ 0x46
  2755  0000A6                     	ds	1
  2756  0000A7                     LE_InsertNeighbor@nidx:
  2757                           	opt stack 0
  2758  0000A7                     radioUnicast@PANID:
  2759                           	opt stack 0
  2760  0000A7                     RouteManagerPerformUpdate@entry:
  2761                           	opt stack 0
  2762  0000A7                     LE_processReceivedMessage@bhdr:
  2763                           	opt stack 0
  2764                           
  2765                           ; 2 bytes @ 0x47
  2766  0000A7                     	ds	2
  2767  0000A9                     radioUnicast@data:
  2768                           	opt stack 0
  2769  0000A9                     RouteManagerPerformUpdate@r:
  2770                           	opt stack 0
  2771  0000A9                     routingTableUpdateEntry@etx:
  2772                           	opt stack 0
  2773  0000A9                     LE_processReceivedMessage@ll_addr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 8 bytes @ 0x49
  2777  0000A9                     	ds	2
  2778  0000AB                     radioUnicast@datasize:
  2779                           	opt stack 0
  2780  0000AB                     routingTableUpdateEntry@linkEtx:
  2781                           	opt stack 0
  2782                           
  2783                           ; 2 bytes @ 0x4B
  2784  0000AB                     	ds	1
  2785  0000AC                     radioUnicast@isSecure:
  2786                           	opt stack 0
  2787  0000AC                     networkSendBeacon@last:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x4C
  2791  0000AC                     	ds	1
  2792  0000AD                     radioUnicast@i:
  2793                           	opt stack 0
  2794  0000AD                     routingTableUpdateEntry@idx:
  2795                           	opt stack 0
  2796                           
  2797                           ; 1 bytes @ 0x4D
  2798  0000AD                     	ds	1
  2799  0000AE                     ??_TransportManagerTask:
  2800  0000AE                     isKnownPacket@unknown:
  2801                           	opt stack 0
  2802  0000AE                     RouteManagerProcessReceive@source:
  2803                           	opt stack 0
  2804  0000AE                     networkSendBeacon@adr:
  2805                           	opt stack 0
  2806  0000AE                     TunnelManagerGetTunnel@addr:
  2807                           	opt stack 0
  2808  0000AE                     NetworkIssueDataRequest@data:
  2809                           	opt stack 0
  2810                           
  2811                           ; 28 bytes @ 0x4E
  2812  0000AE                     	ds	1
  2813  0000AF                     isKnownPacket@oldestindex:
  2814                           	opt stack 0
  2815                           
  2816                           ; 2 bytes @ 0x4F
  2817  0000AF                     	ds	1
  2818  0000B0                     RouteManagerProcessReceive@data:
  2819                           	opt stack 0
  2820  0000B0                     networkSendBeacon@bt:
  2821                           	opt stack 0
  2822  0000B0                     BroadcastManagerTask@PANID:
  2823                           	opt stack 0
  2824                           
  2825                           ; 2 bytes @ 0x50
  2826  0000B0                     	ds	1
  2827  0000B1                     LE_processReceivedMessage@nidx:
  2828                           	opt stack 0
  2829  0000B1                     isKnownPacket@index:
  2830                           	opt stack 0
  2831                           
  2832                           ; 2 bytes @ 0x51
  2833  0000B1                     	ds	1
  2834  0000B2                     RouteManagerProcessReceive@len:
  2835                           	opt stack 0
  2836  0000B2                     networkSendBeacon@r:
  2837                           	opt stack 0
  2838  0000B2                     BroadcastManagerTask@i:
  2839                           	opt stack 0
  2840  0000B2                     TransportManagerTask@databuff:
  2841                           	opt stack 0
  2842                           
  2843                           ; 64 bytes @ 0x52
  2844  0000B2                     	ds	1
  2845  0000B3                     isKnownPacket@emptyindex:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x53
  2849  0000B3                     	ds	1
  2850  0000B4                     networkSendBeacon@hdr:
  2851                           	opt stack 0
  2852                           
  2853                           ; 2 bytes @ 0x54
  2854  0000B4                     	ds	1
  2855  0000B5                     isKnownPacket@OldestTick:
  2856                           	opt stack 0
  2857                           
  2858                           ; 8 bytes @ 0x55
  2859  0000B5                     	ds	1
  2860  0000B6                     RouteManagerProcessReceive@congested:
  2861                           	opt stack 0
  2862  0000B6                     TunnelManagerGetTunnel@retAddr:
  2863                           	opt stack 0
  2864                           
  2865                           ; 8 bytes @ 0x56
  2866  0000B6                     	ds	1
  2867  0000B7                     RouteManagerProcessReceive@from:
  2868                           	opt stack 0
  2869                           
  2870                           ; 8 bytes @ 0x57
  2871  0000B7                     	ds	6
  2872  0000BD                     isKnownPacket@i:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x5D
  2876  0000BD                     	ds	1
  2877  0000BE                     TunnelManagerGetTunnel@i:
  2878                           	opt stack 0
  2879                           
  2880                           ; 2 bytes @ 0x5E
  2881  0000BE                     	ds	1
  2882  0000BF                     RouteManagerProcessReceive@rcvBeacon:
  2883                           	opt stack 0
  2884                           
  2885                           ; 2 bytes @ 0x5F
  2886  0000BF                     	ds	1
  2887  0000C0                     TMSendFormedPacketToRFD@device:
  2888                           	opt stack 0
  2889                           
  2890                           ; 8 bytes @ 0x60
  2891  0000C0                     	ds	8
  2892  0000C8                     TMSendFormedPacketToRFD@data:
  2893                           	opt stack 0
  2894                           
  2895                           ; 2 bytes @ 0x68
  2896  0000C8                     	ds	2
  2897  0000CA                     TMSendFormedPacketToRFD@size:
  2898                           	opt stack 0
  2899  0000CA                     NetworkIssueDataRequest@sz:
  2900                           	opt stack 0
  2901                           
  2902                           ; 2 bytes @ 0x6A
  2903  0000CA                     	ds	2
  2904  0000CC                     TMSendFormedPacketToRFD@isSecure:
  2905                           	opt stack 0
  2906                           
  2907                           ; 1 bytes @ 0x6C
  2908  0000CC                     	ds	1
  2909  0000CD                     
  2910                           ; 1 bytes @ 0x6D
  2911  0000CD                     	ds	1
  2912  0000CE                     TMSendFormedPacketToRFD@myaddr:
  2913                           	opt stack 0
  2914                           
  2915                           ; 2 bytes @ 0x6E
  2916  0000CE                     	ds	2
  2917  0000D0                     TMSendFormedPacketToRFD@res:
  2918                           	opt stack 0
  2919                           
  2920                           ; 1 bytes @ 0x70
  2921  0000D0                     	ds	1
  2922  0000D1                     TMSendFormedPacketToRFD@dhdr:
  2923                           	opt stack 0
  2924                           
  2925                           ; 2 bytes @ 0x71
  2926  0000D1                     	ds	2
  2927  0000D3                     TMSendFormedPacketToRFD@parent:
  2928                           	opt stack 0
  2929                           
  2930                           ; 8 bytes @ 0x73
  2931  0000D3                     	ds	8
  2932  0000DB                     NetworkSendDiscoverRequest@size:
  2933                           	opt stack 0
  2934  0000DB                     NetworkSendDiscoverResponse@size:
  2935                           	opt stack 0
  2936  0000DB                     TMSendDataToRFD@device:
  2937                           	opt stack 0
  2938                           
  2939                           ; 8 bytes @ 0x7B
  2940  0000DB                     	ds	2
  2941  0000DD                     NetworkSendDiscoverRequest@dhdr:
  2942                           	opt stack 0
  2943  0000DD                     NetworkSendDiscoverResponse@dhdr:
  2944                           	opt stack 0
  2945                           
  2946                           ; 1 bytes @ 0x7D
  2947  0000DD                     	ds	1
  2948  0000DE                     NetworkSendDiscoverRequest@address:
  2949                           	opt stack 0
  2950  0000DE                     NetworkSendDiscoverResponse@address:
  2951                           	opt stack 0
  2952                           
  2953                           ; 8 bytes @ 0x7E
  2954  0000DE                     	ds	5
  2955  0000E3                     TMSendDataToRFD@pType:
  2956                           	opt stack 0
  2957                           
  2958                           ; 1 bytes @ 0x83
  2959  0000E3                     	ds	1
  2960  0000E4                     TMSendDataToRFD@data:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x84
  2964  0000E4                     	ds	2
  2965  0000E6                     TMSendDataToRFD@size:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x86
  2969  0000E6                     	ds	2
  2970  0000E8                     TMSendDataToRFD@isSecure:
  2971                           	opt stack 0
  2972                           
  2973                           ; 1 bytes @ 0x88
  2974  0000E8                     	ds	1
  2975  0000E9                     NetworkManagerProcessIncomingData@data:
  2976                           	opt stack 0
  2977  0000E9                     NetworkUnicastData@address:
  2978                           	opt stack 0
  2979                           
  2980                           ; 8 bytes @ 0x89
  2981  0000E9                     	ds	2
  2982  0000EB                     NetworkManagerProcessIncomingData@size:
  2983                           	opt stack 0
  2984                           
  2985                           ; 2 bytes @ 0x8B
  2986  0000EB                     	ds	2
  2987  0000ED                     NetworkManagerProcessIncomingData@isBroadcast:
  2988                           	opt stack 0
  2989                           
  2990                           ; 1 bytes @ 0x8D
  2991  0000ED                     	ds	1
  2992  0000EE                     NetworkManagerProcessIncomingData@isSecure:
  2993                           	opt stack 0
  2994                           
  2995                           ; 1 bytes @ 0x8E
  2996  0000EE                     	ds	1
  2997  0000EF                     
  2998                           ; 1 bytes @ 0x8F
  2999  0000EF                     	ds	1
  3000  0000F0                     ??_radioReceivedPacket:
  3001                           
  3002                           ; 1 bytes @ 0x90
  3003  0000F0                     	ds	1
  3004  0000F1                     NetworkUnicastData@data:
  3005                           	opt stack 0
  3006                           
  3007                           ; 2 bytes @ 0x91
  3008  0000F1                     	ds	1
  3009  0000F2                     TransportManagerTask@sz:
  3010                           	opt stack 0
  3011                           
  3012                           ; 2 bytes @ 0x92
  3013  0000F2                     	ds	1
  3014  0000F3                     NetworkUnicastData@size:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x93
  3018  0000F3                     	ds	1
  3019  0000F4                     TransportManagerTask@i:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x94
  3023  0000F4                     	ds	1
  3024  0000F5                     NetworkUnicastData@isSecure:
  3025                           	opt stack 0
  3026                           
  3027                           ; 1 bytes @ 0x95
  3028  0000F5                     	ds	1
  3029  0000F6                     ??_NetworkManagerTask:
  3030  0000F6                     NetworkUnicastData@mAddress:
  3031                           	opt stack 0
  3032                           
  3033                           ; 2 bytes @ 0x96
  3034  0000F6                     	ds	2
  3035  0000F8                     NetworkUnicastData@res:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x98
  3039  0000F8                     	ds	1
  3040  0000F9                     MiApp_UnicastAddress@DestinationAddress:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x99
  3044  0000F9                     	ds	1
  3045  0000FA                     ??_MiApp_MessageAvailable:
  3046                           
  3047                           ; 1 bytes @ 0x9A
  3048  0000FA                     	ds	1
  3049  0000FB                     MiApp_UnicastAddress@Origin:
  3050                           	opt stack 0
  3051                           
  3052                           ; 2 bytes @ 0x9B
  3053  0000FB                     	ds	2
  3054  0000FD                     MiApp_UnicastAddress@SecEn:
  3055                           	opt stack 0
  3056                           
  3057                           ; 1 bytes @ 0x9D
  3058  0000FD                     	ds	1
  3059  0000FE                     tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           postdec1	equ	0xFE5
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           
  3069                           ; 1 bytes @ 0x9E
  3070                           
  3071                           	psect	cstackCOMRAM
  3072  000001                     __pcstackCOMRAM:
  3073                           	opt stack 0
  3074  000001                     ?i2_memcmp:
  3075                           	opt stack 0
  3076  000001                     i2memcmp@s1:
  3077                           	opt stack 0
  3078                           
  3079                           ; 2 bytes @ 0x0
  3080  000001                     	ds	1
  3081  000002                     i2SPIPut@v:
  3082                           	opt stack 0
  3083                           
  3084                           ; 1 bytes @ 0x1
  3085  000002                     	ds	1
  3086  000003                     i2PHYSetShortRAMAddr@value:
  3087                           	opt stack 0
  3088  000003                     i2PHYGetShortRAMAddr@address:
  3089                           	opt stack 0
  3090  000003                     i2PHYSetLongRAMAddr@address:
  3091                           	opt stack 0
  3092  000003                     i2PHYGetLongRAMAddr@address:
  3093                           	opt stack 0
  3094  000003                     i2memcmp@s2:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x2
  3098  000003                     	ds	1
  3099  000004                     i2PHYSetShortRAMAddr@address:
  3100                           	opt stack 0
  3101  000004                     i2PHYGetShortRAMAddr@toReturn:
  3102                           	opt stack 0
  3103                           
  3104                           ; 1 bytes @ 0x3
  3105  000004                     	ds	1
  3106  000005                     ??i2_PHYGetLongRAMAddr:
  3107  000005                     i2PHYSetLongRAMAddr@value:
  3108                           	opt stack 0
  3109  000005                     i2PHYSetShortRAMAddr@tmpRFIE:
  3110                           	opt stack 0
  3111  000005                     i2PHYGetShortRAMAddr@tmpRFIE:
  3112                           	opt stack 0
  3113  000005                     i2memcmp@n:
  3114                           	opt stack 0
  3115                           
  3116                           ; 2 bytes @ 0x4
  3117  000005                     	ds	1
  3118  000006                     ??i2_PHYSetLongRAMAddr:
  3119                           
  3120                           ; 1 bytes @ 0x5
  3121  000006                     	ds	1
  3122  000007                     ??i2_memcmp:
  3123  000007                     i2PHYGetLongRAMAddr@toReturn:
  3124                           	opt stack 0
  3125                           
  3126                           ; 1 bytes @ 0x6
  3127  000007                     	ds	1
  3128  000008                     i2PHYSetLongRAMAddr@tmpRFIE:
  3129                           	opt stack 0
  3130  000008                     i2PHYGetLongRAMAddr@tmpRFIE:
  3131                           	opt stack 0
  3132                           
  3133                           ; 1 bytes @ 0x7
  3134  000008                     	ds	1
  3135  000009                     i2isSameAddress@a1:
  3136                           	opt stack 0
  3137                           
  3138                           ; 8 bytes @ 0x8
  3139  000009                     	ds	8
  3140  000011                     i2isSameAddress@a2:
  3141                           	opt stack 0
  3142                           
  3143                           ; 8 bytes @ 0x10
  3144  000011                     	ds	8
  3145  000019                     ??_HighISR:
  3146  000019                     
  3147                           ; 1 bytes @ 0x18
  3148  000019                     	ds	17
  3149  00002A                     HighISR@results:
  3150                           	opt stack 0
  3151                           
  3152                           ; 1 bytes @ 0x29
  3153  00002A                     	ds	1
  3154  00002B                     HighISR@DecryptionStatus:
  3155                           	opt stack 0
  3156                           
  3157                           ; 1 bytes @ 0x2A
  3158  00002B                     	ds	1
  3159  00002C                     HighISR@v:
  3160                           	opt stack 0
  3161                           
  3162                           ; 1 bytes @ 0x2B
  3163  00002C                     	ds	1
  3164  00002D                     HighISR@FrameControl:
  3165                           	opt stack 0
  3166                           
  3167                           ; 1 bytes @ 0x2C
  3168  00002D                     	ds	1
  3169  00002E                     HighISR@FrameControl_2711:
  3170                           	opt stack 0
  3171                           
  3172                           ; 1 bytes @ 0x2D
  3173  00002E                     	ds	1
  3174  00002F                     HighISR@flags:
  3175                           	opt stack 0
  3176                           
  3177                           ; 2 bytes @ 0x2E
  3178  00002F                     	ds	2
  3179  000031                     HighISR@tmr:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x30
  3183  000031                     	ds	2
  3184  000033                     HighISR@RxBank:
  3185                           	opt stack 0
  3186                           
  3187                           ; 1 bytes @ 0x32
  3188  000033                     	ds	1
  3189  000034                     HighISR@j:
  3190                           	opt stack 0
  3191                           
  3192                           ; 1 bytes @ 0x33
  3193  000034                     	ds	1
  3194  000035                     HighISR@i:
  3195                           	opt stack 0
  3196                           
  3197                           ; 1 bytes @ 0x34
  3198  000035                     	ds	1
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           postdec1	equ	0xFE5
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           
  3209 ;;
  3210 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3211 ;;
  3212 ;; *************** function _main *****************
  3213 ;; Defined at:
  3214 ;;		line 41 in file "../src/mainRFD-Sleeping.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  coord           8   17[BANK3 ] struct addr_t_def
  3219 ;;  src             8   26[BANK3 ] struct addr_t_def
  3220 ;;  src1            8    2[BANK3 ] struct addr_t_def
  3221 ;;  tStart          4   10[BANK3 ] struct MIWI_TICK_t
  3222 ;;  pMemberOfNet    1   25[BANK3 ] unsigned char 
  3223 ;;  counter         1   16[BANK3 ] unsigned char 
  3224 ;;  RequestData     1   15[BANK3 ] unsigned char 
  3225 ;;  SendPacket      1   14[BANK3 ] unsigned char 
  3226 ;;  pButtonPress    1    1[BANK3 ] unsigned char 
  3227 ;;  pButtonPress    1    0[BANK3 ] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2  390[None  ] int 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : F/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         0       0       0       0      34       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         0       0       4       0      34       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:       38 bytes
  3242 ;; Hardware stack levels required when called:   17
  3243 ;; This function calls:
  3244 ;;		_ButtonTask
  3245 ;;		_HardwareInit
  3246 ;;		_InitSymbolTimer
  3247 ;;		_LCDUpdate
  3248 ;;		_LEDCommand
  3249 ;;		_LEDManagerTask
  3250 ;;		_MiApp_DiscardMessage
  3251 ;;		_MiApp_EstablishConnection
  3252 ;;		_MiApp_GetParentAddress
  3253 ;;		_MiApp_IsMemberOfNetwork
  3254 ;;		_MiApp_MessageAvailable
  3255 ;;		_MiApp_ProtocolInit
  3256 ;;		_MiApp_RequestData
  3257 ;;		_MiApp_SearchConnection
  3258 ;;		_MiApp_SetAddressPan
  3259 ;;		_MiApp_TransceiverPowerState
  3260 ;;		_MiApp_UnicastAddress
  3261 ;;		_MiWi_TickGetMs
  3262 ;;		_Read_MAC_Address
  3263 ;;		_isButtonPressed
  3264 ;;		_memcmp
  3265 ;;		_memset
  3266 ;;		_sprintf
  3267 ;; This function is called by:
  3268 ;;		Startup code after reset
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text0
  3273  001980                     __ptext0:
  3274                           	opt stack 0
  3275  001980                     _main:
  3276                           	opt stack 14
  3277                           
  3278                           ;mainRFD-Sleeping.c: 43: addr_t src;
  3279                           ;mainRFD-Sleeping.c: 44: addr_t src1;
  3280                           ;mainRFD-Sleeping.c: 45: MIWI_TICK tStart;
  3281                           ;mainRFD-Sleeping.c: 46: bool pButtonPressed_0=0;
  3282                           
  3283                           ;incstack = 0
  3284  001980  0103               	movlb	3	; () banked
  3285  001982  6BDA               	clrf	main@pButtonPressed_0& (0+255),b
  3286                           
  3287                           ;mainRFD-Sleeping.c: 47: bool pButtonPressed_1=0;
  3288  001984  6BDB               	clrf	main@pButtonPressed_1& (0+255),b
  3289                           
  3290                           ;mainRFD-Sleeping.c: 48: bool SendPacket=0;
  3291  001986  6BE8               	clrf	main@SendPacket& (0+255),b
  3292                           
  3293                           ;mainRFD-Sleeping.c: 49: bool RequestData=0;
  3294  001988  6BE9               	clrf	main@RequestData& (0+255),b
  3295                           
  3296                           ;mainRFD-Sleeping.c: 50: uint8_t counter=0;
  3297  00198A  6BEA               	clrf	main@counter& (0+255),b
  3298                           
  3299                           ;mainRFD-Sleeping.c: 51: bool pMemberOfNetwork=0;
  3300  00198C  6BF3               	clrf	main@pMemberOfNetwork& (0+255),b
  3301                           
  3302                           ; BSR set to: 3
  3303                           ;mainRFD-Sleeping.c: 54: myDeviceType=DeviceSleepingRFD;
  3304  00198E  0E02               	movlw	2
  3305  001990  0101               	movlb	1	; () banked
  3306  001992  6FE5               	movwf	_myDeviceType& (0+255),b
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;mainRFD-Sleeping.c: 56: HardwareInit();
  3310  001994  EC1B  F032         	call	_HardwareInit	;wreg free
  3311                           
  3312                           ;mainRFD-Sleeping.c: 57: InitSymbolTimer();
  3313  001998  ECB0  F03D         	call	_InitSymbolTimer	;wreg free
  3314                           
  3315                           ; BSR set to: 2
  3316                           ;mainRFD-Sleeping.c: 61: currentChannel = 25;
  3317  00199C  EC94  F030         	call	_Read_MAC_Address	;wreg free
  3318  0019A0  EE22  F0BD         	lfsr	2,_myAddr
  3319  0019A4  0E07               	movlw	7
  3320  0019A6                     u23541:
  3321  0019A6  CFEB FFDB          	movff	plusw0,plusw2
  3322  0019AA  06E8               	decf	wreg,f,c
  3323  0019AC  E2FC               	bc	u23541
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;mainRFD-Sleeping.c: 62: MiApp_SetAddressPan(myAddr.bytes, 0x5533);
  3327  0019AE  0EBD               	movlw	low _myAddr
  3328  0019B0  6F76               	movwf	MiApp_SetAddressPan@address& (0+255),b
  3329  0019B2  0E02               	movlw	high _myAddr
  3330  0019B4  6F77               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
  3331  0019B6  0E55               	movlw	85
  3332  0019B8  6F79               	movwf	(MiApp_SetAddressPan@panid+1)& (0+255),b
  3333  0019BA  0E33               	movlw	51
  3334  0019BC  6F78               	movwf	MiApp_SetAddressPan@panid& (0+255),b
  3335  0019BE  ECFD  F035         	call	_MiApp_SetAddressPan	;wreg free
  3336                           
  3337                           ;mainRFD-Sleeping.c: 63: MiApp_ProtocolInit(0);
  3338  0019C2  ECC9  F035         	call	_MiApp_ProtocolInit
  3339                           
  3340                           ;mainRFD-Sleeping.c: 65: LATCbits.LATC2=0;
  3341  0019C6  948B               	bcf	3979,2,c	;volatile
  3342                           
  3343                           ;mainRFD-Sleeping.c: 66: LATAbits.LATA6=0;
  3344  0019C8  9C89               	bcf	3977,6,c	;volatile
  3345                           
  3346                           ;mainRFD-Sleeping.c: 67: LATAbits.LATA7=0;
  3347  0019CA  9E89               	bcf	3977,7,c	;volatile
  3348                           
  3349                           ;mainRFD-Sleeping.c: 68: sprintf(&LCDText[0],"a:%04X p:FFFF",*(uint16_t*)(&myAddr)); LCD
      +                          Update();
  3350  0019CC  0EB9               	movlw	low _LCDText
  3351  0019CE  0100               	movlb	0	; () banked
  3352  0019D0  6F67               	movwf	sprintf@sp& (0+255),b
  3353  0019D2  0E03               	movlw	high _LCDText
  3354  0019D4  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  3355  0019D6  0ED5               	movlw	low STR_1
  3356  0019D8  6F69               	movwf	sprintf@f& (0+255),b
  3357  0019DA  0EFF               	movlw	high STR_1
  3358  0019DC  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  3359  0019DE  C2BD  F06B         	movff	_myAddr,?_sprintf+4
  3360  0019E2  C2BE  F06C         	movff	_myAddr+1,?_sprintf+5
  3361  0019E6  EC42  F016         	call	_sprintf	;wreg free
  3362                           
  3363                           ; BSR set to: 0
  3364  0019EA  EC3D  F02F         	call	_LCDUpdate	;wreg free
  3365  0019EE                     l15325:
  3366  0019EE  0101               	movlb	1	; () banked
  3367  0019F0  6BBC               	clrf	MiApp_SearchConnection@ChannelMap& (0+255),b
  3368  0019F2  6BBD               	clrf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),b
  3369  0019F4  6BBE               	clrf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),b
  3370  0019F6  0E1E               	movlw	30
  3371  0019F8  6FBF               	movwf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),b
  3372  0019FA  0E0E               	movlw	14
  3373  0019FC  EC17  F02A         	call	_MiApp_SearchConnection
  3374  001A00  0AFF               	xorlw	255
  3375  001A02  E0F5               	bz	l15325
  3376                           
  3377                           ; BSR set to: 1
  3378                           ;mainRFD-Sleeping.c: 78: MiApp_EstablishConnection(0,0);
  3379  001A04  0E00               	movlw	0
  3380  001A06  0100               	movlb	0	; () banked
  3381  001A08  6B8D               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3382  001A0A  EC42  F030         	call	_MiApp_EstablishConnection
  3383  001A0E                     l15329:
  3384                           
  3385                           ;mainRFD-Sleeping.c: 81: {
  3386                           ;mainRFD-Sleeping.c: 82: ButtonTask();
  3387  001A0E  ECC6  F036         	call	_ButtonTask	;wreg free
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;mainRFD-Sleeping.c: 83: LEDManagerTask();
  3391  001A12  EC92  F00E         	call	_LEDManagerTask	;wreg free
  3392                           
  3393                           ;mainRFD-Sleeping.c: 84: switch(devState)
  3394  001A16  D100               	goto	l15421
  3395  001A18                     l15333:
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;mainRFD-Sleeping.c: 87: tStart=MiWi_TickGetMs();
  3399  001A18  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3400  001A1C  C06C  F3E4         	movff	?_MiWi_TickGetMs,main@tStart
  3401  001A20  C06D  F3E5         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3402  001A24  C06E  F3E6         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3403  001A28  C06F  F3E7         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;mainRFD-Sleeping.c: 88: SendPacket=0;
  3407  001A2C  0103               	movlb	3	; () banked
  3408  001A2E  6BE8               	clrf	main@SendPacket& (0+255),b
  3409                           
  3410                           ; BSR set to: 3
  3411                           ;mainRFD-Sleeping.c: 89: RequestData=0;
  3412  001A30  6BE9               	clrf	main@RequestData& (0+255),b
  3413  001A32                     l15339:
  3414                           
  3415                           ;mainRFD-Sleeping.c: 90: devState=devWaitJoin;
  3416  001A32  0E01               	movlw	1
  3417  001A34  D0EE               	goto	L1
  3418  001A36                     l15341:
  3419                           
  3420                           ; BSR set to: 1
  3421                           ;mainRFD-Sleeping.c: 94: if(MiApp_IsMemberOfNetwork()==1)
  3422  001A36  EC4A  F03E         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3423  001A3A  06E8               	decf	wreg,f,c
  3424  001A3C  E10D               	bnz	l15347
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;mainRFD-Sleeping.c: 95: {
  3428                           ;mainRFD-Sleeping.c: 96: devState=devAwake;
  3429  001A3E  0E02               	movlw	2
  3430  001A40  0101               	movlb	1	; () banked
  3431  001A42  6FE1               	movwf	_devState& (0+255),b
  3432                           
  3433                           ; BSR set to: 1
  3434                           ;mainRFD-Sleeping.c: 97: tStart=MiWi_TickGetMs();
  3435  001A44  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3436  001A48  C06C  F3E4         	movff	?_MiWi_TickGetMs,main@tStart
  3437  001A4C  C06D  F3E5         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3438  001A50  C06E  F3E6         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3439  001A54  C06F  F3E7         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3440  001A58                     l15347:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;mainRFD-Sleeping.c: 98: }
  3444                           ;mainRFD-Sleeping.c: 99: if(MiApp_MessageAvailable()==1)
  3445  001A58  EC3B  F02B         	call	_MiApp_MessageAvailable	;wreg free
  3446  001A5C  06E8               	decf	wreg,f,c
  3447  001A5E  E001 D0E7          	bnz	l15423
  3448                           
  3449                           ; BSR set to: 1
  3450                           ;mainRFD-Sleeping.c: 100: {
  3451                           ;mainRFD-Sleeping.c: 101: MiApp_DiscardMessage();
  3452  001A62  EC36  F03E         	call	_MiApp_DiscardMessage	;wreg free
  3453  001A66  D0E4               	goto	l15423
  3454  001A68                     l15351:
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;mainRFD-Sleeping.c: 106: if((MiWi_TickGetMs().Val - tStart.Val)<300)
  3458  001A68  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3459  001A6C  0103               	movlb	3	; () banked
  3460  001A6E  51E4               	movf	main@tStart& (0+255),w,b
  3461  001A70  0100               	movlb	0	; () banked
  3462  001A72  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  3463  001A74  0101               	movlb	1	; () banked
  3464  001A76  6FD5               	movwf	??_main& (0+255),b
  3465  001A78  0103               	movlb	3	; () banked
  3466  001A7A  51E5               	movf	(main@tStart+1)& (0+255),w,b
  3467  001A7C  0100               	movlb	0	; () banked
  3468  001A7E  596D               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  3469  001A80  0101               	movlb	1	; () banked
  3470  001A82  6FD6               	movwf	(??_main+1)& (0+255),b
  3471  001A84  0103               	movlb	3	; () banked
  3472  001A86  51E6               	movf	(main@tStart+2)& (0+255),w,b
  3473  001A88  0100               	movlb	0	; () banked
  3474  001A8A  596E               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  3475  001A8C  0101               	movlb	1	; () banked
  3476  001A8E  6FD7               	movwf	(??_main+2)& (0+255),b
  3477  001A90  0103               	movlb	3	; () banked
  3478  001A92  51E7               	movf	(main@tStart+3)& (0+255),w,b
  3479  001A94  0100               	movlb	0	; () banked
  3480  001A96  596F               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  3481  001A98  0101               	movlb	1	; () banked
  3482  001A9A  6FD8               	movwf	(??_main+3)& (0+255),b
  3483  001A9C  51D8               	movf	(??_main+3)& (0+255),w,b
  3484  001A9E  11D7               	iorwf	(??_main+2)& (0+255),w,b
  3485  001AA0  E13D               	bnz	l15367
  3486  001AA2  0E2C               	movlw	44
  3487  001AA4  5DD5               	subwf	??_main& (0+255),w,b
  3488  001AA6  0E01               	movlw	1
  3489  001AA8  59D6               	subwfb	(??_main+1)& (0+255),w,b
  3490  001AAA  E238               	bc	l15367
  3491                           
  3492                           ; BSR set to: 1
  3493                           ;mainRFD-Sleeping.c: 107: {
  3494                           ;mainRFD-Sleeping.c: 108: if(MiApp_MessageAvailable()==1)
  3495  001AAC  EC3B  F02B         	call	_MiApp_MessageAvailable	;wreg free
  3496  001AB0  06E8               	decf	wreg,f,c
  3497  001AB2  E13A               	bnz	l15371
  3498                           
  3499                           ; BSR set to: 1
  3500                           ;mainRFD-Sleeping.c: 109: {
  3501                           ;mainRFD-Sleeping.c: 110: sprintf(&LCDText[17],"i:%04X=%02X      ",*((uint16_t*)(rxMessa
      +                          ge.SourceAddress)),rxMessage.Payload[1]); LCDUpdate();
  3502  001AB4  0ECA               	movlw	low (_LCDText+17)
  3503  001AB6  0100               	movlb	0	; () banked
  3504  001AB8  6F67               	movwf	sprintf@sp& (0+255),b
  3505  001ABA  0E03               	movlw	high (_LCDText+17)
  3506  001ABC  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  3507  001ABE  0EB2               	movlw	low STR_2
  3508  001AC0  6F69               	movwf	sprintf@f& (0+255),b
  3509  001AC2  0EFF               	movlw	high STR_2
  3510  001AC4  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  3511  001AC6  C296  FFD9         	movff	_rxMessage+3,fsr2l
  3512  001ACA  C297  FFDA         	movff	_rxMessage+4,fsr2h
  3513  001ACE  CFDE F06B          	movff	postinc2,?_sprintf+4
  3514  001AD2  CFDD F06C          	movff	postdec2,?_sprintf+5
  3515  001AD6  0102               	movlb	2	; () banked
  3516  001AD8  EE20 F001          	lfsr	2,1
  3517  001ADC  5198               	movf	(_rxMessage+5)& (0+255),w,b
  3518  001ADE  26D9               	addwf	fsr2l,f,c
  3519  001AE0  5199               	movf	(_rxMessage+6)& (0+255),w,b
  3520  001AE2  22DA               	addwfc	fsr2h,f,c
  3521  001AE4  50DF               	movf	indf2,w,c
  3522  001AE6  0100               	movlb	0	; () banked
  3523  001AE8  6F6D               	movwf	(?_sprintf+6)& (0+255),b
  3524  001AEA  6B6E               	clrf	(?_sprintf+7)& (0+255),b
  3525  001AEC  EC42  F016         	call	_sprintf	;wreg free
  3526                           
  3527                           ; BSR set to: 0
  3528  001AF0  EC3D  F02F         	call	_LCDUpdate	;wreg free
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;mainRFD-Sleeping.c: 111: LEDCommand(LEDGreen,lCMD_Toggle);
  3532  001AF4  0E04               	movlw	4
  3533  001AF6  6F60               	movwf	LEDCommand@cmd& (0+255),b
  3534  001AF8  0E00               	movlw	0
  3535  001AFA  ECBF  F03B         	call	_LEDCommand
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;mainRFD-Sleeping.c: 112: MiApp_DiscardMessage();
  3539  001AFE  EC36  F03E         	call	_MiApp_DiscardMessage	;wreg free
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;mainRFD-Sleeping.c: 113: tStart=MiWi_TickGetMs();
  3543  001B02  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3544  001B06  C06C  F3E4         	movff	?_MiWi_TickGetMs,main@tStart
  3545  001B0A  C06D  F3E5         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3546  001B0E  C06E  F3E6         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3547  001B12  C06F  F3E7         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;mainRFD-Sleeping.c: 114: MiApp_RequestData();
  3551  001B16  EC46  F03E         	call	_MiApp_RequestData	;wreg free
  3552  001B1A  D006               	goto	l15371
  3553  001B1C                     l15367:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;mainRFD-Sleeping.c: 118: {
  3557                           ;mainRFD-Sleeping.c: 119: MiApp_TransceiverPowerState(0x00);
  3558  001B1C  0E00               	movlw	0
  3559  001B1E  ECC6  F03D         	call	_MiApp_TransceiverPowerState
  3560                           
  3561                           ;mainRFD-Sleeping.c: 120: devState=devSleep;
  3562  001B22  0E03               	movlw	3
  3563  001B24  0101               	movlb	1	; () banked
  3564  001B26  6FE1               	movwf	_devState& (0+255),b
  3565  001B28                     l15371:
  3566                           
  3567                           ;mainRFD-Sleeping.c: 121: }
  3568                           ;mainRFD-Sleeping.c: 122: if(MiApp_IsMemberOfNetwork()==0)
  3569  001B28  EC4A  F03E         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3570  001B2C  0900               	iorlw	0
  3571  001B2E  E081               	bz	l15339
  3572  001B30  D07F               	goto	l15423
  3573  001B32                     l15375:
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;mainRFD-Sleeping.c: 133: if(SendPacket==1)
  3577  001B32  0103               	movlb	3	; () banked
  3578  001B34  05E8               	decf	main@SendPacket& (0+255),w,b
  3579  001B36  E158               	bnz	l15407
  3580                           
  3581                           ; BSR set to: 3
  3582                           ;mainRFD-Sleeping.c: 134: {
  3583                           ;mainRFD-Sleeping.c: 135: MiApp_TransceiverPowerState(0x01);
  3584  001B38  0E01               	movlw	1
  3585  001B3A  ECC6  F03D         	call	_MiApp_TransceiverPowerState
  3586                           
  3587                           ;mainRFD-Sleeping.c: 136: addr_t coord={0};
  3588  001B3E  EE22  F02C         	lfsr	2,main@F8442
  3589  001B42  EE13  F0EB         	lfsr	1,main@coord
  3590  001B46  0E07               	movlw	7
  3591  001B48                     u23621:
  3592  001B48  CFDB FFE3          	movff	plusw2,plusw1
  3593  001B4C  06E8               	decf	wreg,f,c
  3594  001B4E  E2FC               	bc	u23621
  3595                           
  3596                           ;mainRFD-Sleeping.c: 137: memset(coord.bytes,0x00,sizeof(coord));
  3597  001B50  0EEB               	movlw	low main@coord
  3598  001B52  0100               	movlb	0	; () banked
  3599  001B54  6F60               	movwf	memset@p1& (0+255),b
  3600  001B56  0E03               	movlw	high main@coord
  3601  001B58  6F61               	movwf	(memset@p1+1)& (0+255),b
  3602  001B5A  6B63               	clrf	(memset@c+1)& (0+255),b
  3603  001B5C  6B62               	clrf	memset@c& (0+255),b
  3604  001B5E  6B65               	clrf	(memset@n+1)& (0+255),b
  3605  001B60  0E08               	movlw	8
  3606  001B62  6F64               	movwf	memset@n& (0+255),b
  3607  001B64  EC61  F03C         	call	_memset	;wreg free
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;mainRFD-Sleeping.c: 138: {TxData = 0;};
  3611  001B68  0101               	movlb	1	; () banked
  3612  001B6A  6BDF               	clrf	_TxData& (0+255),b
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;mainRFD-Sleeping.c: 139: TxBuffer[TxData++] = mUserDataType;
  3616  001B6C  0E55               	movlw	low _TxBuffer
  3617  001B6E  25DF               	addwf	_TxData& (0+255),w,b
  3618  001B70  6ED9               	movwf	fsr2l,c
  3619  001B72  6ADA               	clrf	fsr2h,c
  3620  001B74  0E03               	movlw	high _TxBuffer
  3621  001B76  22DA               	addwfc	fsr2h,f,c
  3622  001B78  0E0A               	movlw	10
  3623  001B7A  6EDF               	movwf	indf2,c
  3624                           
  3625                           ; BSR set to: 1
  3626  001B7C  2BDF               	incf	_TxData& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;mainRFD-Sleeping.c: 140: TxBuffer[TxData++] = counter;
  3630  001B7E  0E55               	movlw	low _TxBuffer
  3631  001B80  25DF               	addwf	_TxData& (0+255),w,b
  3632  001B82  6ED9               	movwf	fsr2l,c
  3633  001B84  6ADA               	clrf	fsr2h,c
  3634  001B86  0E03               	movlw	high _TxBuffer
  3635  001B88  22DA               	addwfc	fsr2h,f,c
  3636  001B8A  C3EA  FFDF         	movff	main@counter,indf2
  3637                           
  3638                           ; BSR set to: 1
  3639  001B8E  2BDF               	incf	_TxData& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;mainRFD-Sleeping.c: 141: if(MiApp_UnicastAddress(coord.bytes, (0), 0)==1)
  3643  001B90  0EEB               	movlw	low main@coord
  3644  001B92  0100               	movlb	0	; () banked
  3645  001B94  6FF9               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  3646  001B96  0E03               	movlw	high main@coord
  3647  001B98  6FFA               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  3648  001B9A  6BFB               	clrf	MiApp_UnicastAddress@Origin& (0+255),b
  3649  001B9C  6BFC               	clrf	(MiApp_UnicastAddress@Origin+1)& (0+255),b
  3650  001B9E  6BFD               	clrf	MiApp_UnicastAddress@SecEn& (0+255),b
  3651  001BA0  EC59  F03A         	call	_MiApp_UnicastAddress	;wreg free
  3652  001BA4  06E8               	decf	wreg,f,c
  3653  001BA6  E111               	bnz	l15401
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;mainRFD-Sleeping.c: 142: {
  3657                           ;mainRFD-Sleeping.c: 145: sprintf(&LCDText[17],"o:%02X           ",counter++); LCDUpdate
      +                          ();
  3658  001BA8  0ECA               	movlw	low (_LCDText+17)
  3659  001BAA  6F67               	movwf	sprintf@sp& (0+255),b
  3660  001BAC  0E03               	movlw	high (_LCDText+17)
  3661  001BAE  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  3662  001BB0  0EA0               	movlw	low STR_3
  3663  001BB2  6F69               	movwf	sprintf@f& (0+255),b
  3664  001BB4  0EFF               	movlw	high STR_3
  3665  001BB6  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  3666  001BB8  C3EA  F06B         	movff	main@counter,?_sprintf+4
  3667  001BBC  6B6C               	clrf	(?_sprintf+5)& (0+255),b
  3668  001BBE  EC42  F016         	call	_sprintf	;wreg free
  3669                           
  3670                           ; BSR set to: 0
  3671  001BC2  0103               	movlb	3	; () banked
  3672  001BC4  2BEA               	incf	main@counter& (0+255),f,b
  3673                           
  3674                           ; BSR set to: 3
  3675  001BC6  EC3D  F02F         	call	_LCDUpdate	;wreg free
  3676  001BCA                     l15401:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;mainRFD-Sleeping.c: 146: }
  3680                           ;mainRFD-Sleeping.c: 147: tStart=MiWi_TickGetMs();
  3681  001BCA  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3682  001BCE  C06C  F3E4         	movff	?_MiWi_TickGetMs,main@tStart
  3683  001BD2  C06D  F3E5         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3684  001BD6  C06E  F3E6         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3685  001BDA  C06F  F3E7         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;mainRFD-Sleeping.c: 148: SendPacket=0;
  3689  001BDE  0103               	movlb	3	; () banked
  3690  001BE0  6BE8               	clrf	main@SendPacket& (0+255),b
  3691                           
  3692                           ; BSR set to: 3
  3693                           ;mainRFD-Sleeping.c: 149: devState=devAwake;
  3694  001BE2  0E02               	movlw	2
  3695  001BE4  0101               	movlb	1	; () banked
  3696  001BE6  6FE1               	movwf	_devState& (0+255),b
  3697  001BE8                     l15407:
  3698                           
  3699                           ;mainRFD-Sleeping.c: 150: }
  3700                           ;mainRFD-Sleeping.c: 151: if(RequestData==1)
  3701  001BE8  0103               	movlb	3	; () banked
  3702  001BEA  05E9               	decf	main@RequestData& (0+255),w,b
  3703  001BEC  E121               	bnz	l15423
  3704                           
  3705                           ; BSR set to: 3
  3706                           ;mainRFD-Sleeping.c: 152: {
  3707                           ;mainRFD-Sleeping.c: 153: MiApp_TransceiverPowerState(0x01);
  3708  001BEE  0E01               	movlw	1
  3709  001BF0  ECC6  F03D         	call	_MiApp_TransceiverPowerState
  3710                           
  3711                           ;mainRFD-Sleeping.c: 154: MiApp_RequestData();
  3712  001BF4  EC46  F03E         	call	_MiApp_RequestData	;wreg free
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;mainRFD-Sleeping.c: 155: tStart=MiWi_TickGetMs();
  3716  001BF8  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  3717  001BFC  C06C  F3E4         	movff	?_MiWi_TickGetMs,main@tStart
  3718  001C00  C06D  F3E5         	movff	?_MiWi_TickGetMs+1,main@tStart+1
  3719  001C04  C06E  F3E6         	movff	?_MiWi_TickGetMs+2,main@tStart+2
  3720  001C08  C06F  F3E7         	movff	?_MiWi_TickGetMs+3,main@tStart+3
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;mainRFD-Sleeping.c: 156: RequestData=0;
  3724  001C0C  0103               	movlb	3	; () banked
  3725  001C0E  6BE9               	clrf	main@RequestData& (0+255),b
  3726                           
  3727                           ; BSR set to: 3
  3728                           ;mainRFD-Sleeping.c: 157: devState=devAwake;
  3729  001C10  0E02               	movlw	2
  3730  001C12                     L1:
  3731  001C12  0101               	movlb	1	; () banked
  3732  001C14  6FE1               	movwf	_devState& (0+255),b
  3733  001C16  D00C               	goto	l15423
  3734  001C18                     l15421:
  3735                           
  3736                           ; BSR set to: 0
  3737  001C18  0101               	movlb	1	; () banked
  3738  001C1A  51E1               	movf	_devState& (0+255),w,b
  3739                           
  3740                           ; Switch size 1, requested type "speed"
  3741                           ; Number of cases is 4, Range of values is 0 to 3
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte           13     7 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746  001C1C  E101 D6FC          	bz	l15333
  3747  001C20  0A01               	xorlw	1	; case 1
  3748  001C22  E101 D708          	bz	l15341
  3749  001C26  0A03               	xorlw	3	; case 2
  3750  001C28  E101 D71E          	bz	l15351
  3751  001C2C  0A01               	xorlw	1	; case 3
  3752  001C2E  E081               	bz	l15375
  3753  001C30                     l15423:
  3754                           
  3755                           ;mainRFD-Sleeping.c: 162: if(isButtonPressed(0)==1)
  3756  001C30  0E00               	movlw	0
  3757  001C32  ECB2  F03C         	call	_isButtonPressed
  3758  001C36  06E8               	decf	wreg,f,c
  3759  001C38  E107               	bnz	l412
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;mainRFD-Sleeping.c: 163: {
  3763                           ;mainRFD-Sleeping.c: 164: if(pButtonPressed_0==0)
  3764  001C3A  0103               	movlb	3	; () banked
  3765  001C3C  51DA               	movf	main@pButtonPressed_0& (0+255),w,b
  3766  001C3E  E106               	bnz	l15429
  3767                           
  3768                           ; BSR set to: 3
  3769                           ;mainRFD-Sleeping.c: 165: {
  3770                           ;mainRFD-Sleeping.c: 166: pButtonPressed_0=1;
  3771  001C40  0E01               	movlw	1
  3772  001C42  6FDA               	movwf	main@pButtonPressed_0& (0+255),b
  3773                           
  3774                           ;mainRFD-Sleeping.c: 167: SendPacket=1;
  3775  001C44  6FE8               	movwf	main@SendPacket& (0+255),b
  3776  001C46  D002               	goto	l15429
  3777  001C48                     l412:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;mainRFD-Sleeping.c: 170: {
  3781                           ;mainRFD-Sleeping.c: 171: pButtonPressed_0=0;
  3782  001C48  0103               	movlb	3	; () banked
  3783  001C4A  6BDA               	clrf	main@pButtonPressed_0& (0+255),b
  3784  001C4C                     l15429:
  3785                           
  3786                           ; BSR set to: 3
  3787                           ;mainRFD-Sleeping.c: 172: }
  3788                           ;mainRFD-Sleeping.c: 173: if(isButtonPressed(1)==1)
  3789  001C4C  0E01               	movlw	1
  3790  001C4E  ECB2  F03C         	call	_isButtonPressed
  3791  001C52  06E8               	decf	wreg,f,c
  3792  001C54  E107               	bnz	l415
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;mainRFD-Sleeping.c: 174: {
  3796                           ;mainRFD-Sleeping.c: 175: if(pButtonPressed_1==0)
  3797  001C56  0103               	movlb	3	; () banked
  3798  001C58  51DB               	movf	main@pButtonPressed_1& (0+255),w,b
  3799  001C5A  E106               	bnz	l15435
  3800                           
  3801                           ; BSR set to: 3
  3802                           ;mainRFD-Sleeping.c: 176: {
  3803                           ;mainRFD-Sleeping.c: 177: pButtonPressed_1=1;
  3804  001C5C  0E01               	movlw	1
  3805  001C5E  6FDB               	movwf	main@pButtonPressed_1& (0+255),b
  3806                           
  3807                           ;mainRFD-Sleeping.c: 178: RequestData=1;
  3808  001C60  6FE9               	movwf	main@RequestData& (0+255),b
  3809  001C62  D002               	goto	l15435
  3810  001C64                     l415:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;mainRFD-Sleeping.c: 181: {
  3814                           ;mainRFD-Sleeping.c: 182: pButtonPressed_1=0;
  3815  001C64  0103               	movlb	3	; () banked
  3816  001C66  6BDB               	clrf	main@pButtonPressed_1& (0+255),b
  3817  001C68                     l15435:
  3818                           
  3819                           ; BSR set to: 3
  3820                           ;mainRFD-Sleeping.c: 183: }
  3821                           ;mainRFD-Sleeping.c: 185: if(MiApp_IsMemberOfNetwork()==1)
  3822  001C68  EC4A  F03E         	call	_MiApp_IsMemberOfNetwork	;wreg free
  3823  001C6C  06E8               	decf	wreg,f,c
  3824  001C6E  E13C               	bnz	l15451
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;mainRFD-Sleeping.c: 186: {
  3828                           ;mainRFD-Sleeping.c: 187: src1=MiApp_GetParentAddress();
  3829  001C70  EC15  F03D         	call	_MiApp_GetParentAddress	;wreg free
  3830  001C74  EE23  F0DC         	lfsr	2,main@src1
  3831  001C78  0E07               	movlw	7
  3832  001C7A                     u23701:
  3833  001C7A  CFEB FFDB          	movff	plusw0,plusw2
  3834  001C7E  06E8               	decf	wreg,f,c
  3835  001C80  E2FC               	bc	u23701
  3836                           
  3837                           ;mainRFD-Sleeping.c: 188: if( (pMemberOfNetwork==0) || (memcmp(src.bytes,src1.bytes,8)!=
      +                          0))
  3838  001C82  0103               	movlb	3	; () banked
  3839  001C84  51F3               	movf	main@pMemberOfNetwork& (0+255),w,b
  3840  001C86  E012               	bz	l15443
  3841                           
  3842                           ; BSR set to: 3
  3843  001C88  0EF4               	movlw	low main@src
  3844  001C8A  0100               	movlb	0	; () banked
  3845  001C8C  6F60               	movwf	memcmp@s1& (0+255),b
  3846  001C8E  0E03               	movlw	high main@src
  3847  001C90  6F61               	movwf	(memcmp@s1+1)& (0+255),b
  3848  001C92  0EDC               	movlw	low main@src1
  3849  001C94  6F62               	movwf	memcmp@s2& (0+255),b
  3850  001C96  0E03               	movlw	high main@src1
  3851  001C98  6F63               	movwf	(memcmp@s2+1)& (0+255),b
  3852  001C9A  6B65               	clrf	(memcmp@n+1)& (0+255),b
  3853  001C9C  0E08               	movlw	8
  3854  001C9E  6F64               	movwf	memcmp@n& (0+255),b
  3855  001CA0  EC3B  F038         	call	_memcmp	;wreg free
  3856  001CA4  5160               	movf	?_memcmp& (0+255),w,b
  3857  001CA6  1161               	iorwf	(?_memcmp+1)& (0+255),w,b
  3858  001CA8  E101 D6B1          	bz	l15329
  3859  001CAC                     l15443:
  3860                           
  3861                           ;mainRFD-Sleeping.c: 189: {
  3862                           ;mainRFD-Sleeping.c: 190: pMemberOfNetwork=1;
  3863  001CAC  0E01               	movlw	1
  3864  001CAE  0103               	movlb	3	; () banked
  3865  001CB0  6FF3               	movwf	main@pMemberOfNetwork& (0+255),b
  3866                           
  3867                           ; BSR set to: 3
  3868                           ;mainRFD-Sleeping.c: 191: src=MiApp_GetParentAddress();
  3869  001CB2  EC15  F03D         	call	_MiApp_GetParentAddress	;wreg free
  3870  001CB6  EE23  F0F4         	lfsr	2,main@src
  3871  001CBA  0E07               	movlw	7
  3872  001CBC                     u23731:
  3873  001CBC  CFEB FFDB          	movff	plusw0,plusw2
  3874  001CC0  06E8               	decf	wreg,f,c
  3875  001CC2  E2FC               	bc	u23731
  3876                           
  3877                           ;mainRFD-Sleeping.c: 192: sprintf(&LCDText[7],"p:%04X",*(uint16_t*)(&src)); LCDUpdate();
  3878  001CC4  0EC0               	movlw	low (_LCDText+7)
  3879  001CC6  0100               	movlb	0	; () banked
  3880  001CC8  6F67               	movwf	sprintf@sp& (0+255),b
  3881  001CCA  0E03               	movlw	high (_LCDText+7)
  3882  001CCC  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  3883  001CCE  0EEA               	movlw	low STR_4
  3884  001CD0  6F69               	movwf	sprintf@f& (0+255),b
  3885  001CD2  0EFF               	movlw	high STR_4
  3886  001CD4  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  3887  001CD6  C3F4  F06B         	movff	main@src,?_sprintf+4
  3888  001CDA  C3F5  F06C         	movff	main@src+1,?_sprintf+5
  3889  001CDE  EC42  F016         	call	_sprintf	;wreg free
  3890  001CE2                     l15449:
  3891                           
  3892                           ; BSR set to: 0
  3893  001CE2  EC3D  F02F         	call	_LCDUpdate	;wreg free
  3894  001CE6  D693               	goto	l15329
  3895  001CE8                     l15451:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;mainRFD-Sleeping.c: 195: {
  3899                           ;mainRFD-Sleeping.c: 196: if(pMemberOfNetwork==1)
  3900  001CE8  0103               	movlb	3	; () banked
  3901  001CEA  05F3               	decf	main@pMemberOfNetwork& (0+255),w,b
  3902  001CEC  E001 D68F          	bnz	l15329
  3903                           
  3904                           ; BSR set to: 3
  3905                           ;mainRFD-Sleeping.c: 197: {
  3906                           ;mainRFD-Sleeping.c: 198: pMemberOfNetwork=0;
  3907  001CF0  6BF3               	clrf	main@pMemberOfNetwork& (0+255),b
  3908                           
  3909                           ; BSR set to: 3
  3910                           ;mainRFD-Sleeping.c: 199: src=MiApp_GetParentAddress();
  3911  001CF2  EC15  F03D         	call	_MiApp_GetParentAddress	;wreg free
  3912  001CF6  EE23  F0F4         	lfsr	2,main@src
  3913  001CFA  0E07               	movlw	7
  3914  001CFC                     u23751:
  3915  001CFC  CFEB FFDB          	movff	plusw0,plusw2
  3916  001D00  06E8               	decf	wreg,f,c
  3917  001D02  E2FC               	bc	u23751
  3918                           
  3919                           ;mainRFD-Sleeping.c: 200: sprintf(&LCDText[7],"p:%s","FFFF"); LCDUpdate();
  3920  001D04  0EC0               	movlw	low (_LCDText+7)
  3921  001D06  0100               	movlb	0	; () banked
  3922  001D08  6F67               	movwf	sprintf@sp& (0+255),b
  3923  001D0A  0E03               	movlw	high (_LCDText+7)
  3924  001D0C  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  3925  001D0E  0EF1               	movlw	low STR_5
  3926  001D10  6F69               	movwf	sprintf@f& (0+255),b
  3927  001D12  0EFF               	movlw	high STR_5
  3928  001D14  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  3929  001D16  0EDE               	movlw	low (STR_1+9)
  3930  001D18  6F6B               	movwf	(?_sprintf+4)& (0+255),b
  3931  001D1A  0EFF               	movlw	high (STR_1+9)
  3932  001D1C  6F6C               	movwf	(?_sprintf+5)& (0+255),b
  3933  001D1E  EC42  F016         	call	_sprintf	;wreg free
  3934  001D22  D7DF               	goto	l15449
  3935  001D24                     __end_of_main:
  3936                           	opt stack 0
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           postinc0	equ	0xFEE
  3942                           plusw0	equ	0xFEB
  3943                           wreg	equ	0xFE8
  3944                           postdec1	equ	0xFE5
  3945                           plusw1	equ	0xFE3
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           plusw2	equ	0xFDB
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           
  3955 ;; *************** function _sprintf *****************
  3956 ;; Defined at:
  3957 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  sp              2    7[BANK0 ] PTR unsigned char 
  3960 ;;		 -> LCDText(33), 
  3961 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  3962 ;;		 -> STR_5(5), STR_4(7), STR_3(18), STR_2(18), 
  3963 ;;		 -> STR_1(14), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  idx             1   19[BANK0 ] unsigned char 
  3966 ;;  tmpval          4    0        struct .
  3967 ;;  width           2   29[BANK0 ] int 
  3968 ;;  len             2   27[BANK0 ] unsigned int 
  3969 ;;  cp              2   25[BANK0 ] PTR const unsigned char 
  3970 ;;		 -> STR_7(7), STR_6(5), 
  3971 ;;  val             2   21[BANK0 ] unsigned int 
  3972 ;;  c               1   31[BANK0 ] char 
  3973 ;;  ap              1   24[BANK0 ] PTR void [1]
  3974 ;;		 -> ?_sprintf(2), 
  3975 ;;  prec            1   23[BANK0 ] char 
  3976 ;;  flag            1   20[BANK0 ] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  2    7[BANK0 ] int 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : F/0
  3983 ;;		On exit  : F/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:       25 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    5
  3993 ;; This function calls:
  3994 ;;		___lwdiv
  3995 ;;		___wmul
  3996 ;;		_isdigit
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text1
  4003  002C84                     __ptext1:
  4004                           	opt stack 0
  4005  002C84                     _sprintf:
  4006                           	opt stack 25
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;doprnt.c: 494: va_list ap;
  4010                           ;doprnt.c: 499: signed char c;
  4011                           ;doprnt.c: 501: int width;
  4012                           ;doprnt.c: 506: signed char prec;
  4013                           ;doprnt.c: 508: unsigned char flag;
  4014                           ;doprnt.c: 523: union {
  4015                           ;doprnt.c: 524: unsigned long vd;
  4016                           ;doprnt.c: 525: double integ;
  4017                           ;doprnt.c: 526: } tmpval;
  4018                           ;doprnt.c: 528: unsigned int val;
  4019                           ;doprnt.c: 529: unsigned len;
  4020                           ;doprnt.c: 530: const char * cp;
  4021                           ;doprnt.c: 533: *ap = __va_start();
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;incstack = 0
  4025  002C84  0E6B               	movlw	low (?_sprintf+4)
  4026  002C86  6F78               	movwf	sprintf@ap& (0+255),b
  4027                           
  4028                           ;doprnt.c: 536: while(c = *f++) {
  4029  002C88  D13E               	goto	l15195
  4030  002C8A                     l15087:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;doprnt.c: 538: if(c != '%')
  4034  002C8A  0E25               	movlw	37
  4035  002C8C  197F               	xorwf	sprintf@c& (0+255),w,b
  4036  002C8E  E009               	bz	l981
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;doprnt.c: 540: {
  4040                           ;doprnt.c: 541: ((*sp++ = (c)));
  4041  002C90  C067  FFD9         	movff	sprintf@sp,fsr2l
  4042  002C94  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4043  002C98  C07F  FFDF         	movff	sprintf@c,indf2
  4044                           
  4045                           ; BSR set to: 0
  4046  002C9C  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4047  002C9E  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4048                           
  4049                           ;doprnt.c: 542: continue;
  4050  002CA0  D132               	goto	l15195
  4051  002CA2                     l981:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;doprnt.c: 543: }
  4055                           ;doprnt.c: 546: width = 0;
  4056  002CA2  6B7D               	clrf	sprintf@width& (0+255),b
  4057  002CA4  6B7E               	clrf	(sprintf@width+1)& (0+255),b
  4058                           
  4059                           ;doprnt.c: 548: flag = 0;
  4060  002CA6  6B74               	clrf	sprintf@flag& (0+255),b
  4061  002CA8  D003               	goto	l15097
  4062  002CAA                     l15093:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;doprnt.c: 580: flag |= 0x04;
  4066  002CAA  8574               	bsf	sprintf@flag& (0+255),2,b
  4067                           
  4068                           ;doprnt.c: 581: f++;
  4069  002CAC  4B69               	infsnz	sprintf@f& (0+255),f,b
  4070  002CAE  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  4071  002CB0                     l15097:
  4072                           
  4073                           ; BSR set to: 0
  4074  002CB0  C069  FFF6         	movff	sprintf@f,tblptrl
  4075  002CB4  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4076  002CB8                     	if	0	;tblptru may be non-zero
  4077  002CB8                     	endif
  4078  002CB8                     	if	0	;tblptru may be non-zero
  4079  002CB8                     	endif
  4080  002CB8  0008               	tblrd		*
  4081  002CBA  50F5               	movf	tablat,w,c
  4082                           
  4083                           ; Switch size 1, requested type "speed"
  4084                           ; Number of cases is 1, Range of values is 48 to 48
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte            4     3 (average)
  4088                           ;	Chosen strategy is simple_byte
  4089  002CBC  0A30               	xorlw	48	; case 48
  4090  002CBE  E0F5               	bz	l15093
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4094  002CC0  C069  FFF6         	movff	sprintf@f,tblptrl
  4095  002CC4  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4096  002CC8                     	if	0	;tblptru may be non-zero
  4097  002CC8                     	endif
  4098  002CC8                     	if	0	;tblptru may be non-zero
  4099  002CC8                     	endif
  4100  002CC8  0008               	tblrd		*
  4101  002CCA  50F5               	movf	tablat,w,c
  4102  002CCC  ECF7  F03C         	call	_isdigit
  4103  002CD0  E201 D085          	bnc	l15145
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;doprnt.c: 598: width = 0;
  4107  002CD4  6B7D               	clrf	sprintf@width& (0+255),b
  4108  002CD6  6B7E               	clrf	(sprintf@width+1)& (0+255),b
  4109  002CD8                     l15103:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;doprnt.c: 600: width *= 10;
  4113  002CD8  C07D  F060         	movff	sprintf@width,___wmul@multiplier
  4114  002CDC  C07E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4115  002CE0  6B63               	clrf	(___wmul@multiplicand+1)& (0+255),b
  4116  002CE2  0E0A               	movlw	10
  4117  002CE4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4118  002CE6  EC9F  F03C         	call	___wmul	;wreg free
  4119  002CEA  C060  F07D         	movff	?___wmul,sprintf@width
  4120  002CEE  C061  F07E         	movff	?___wmul+1,sprintf@width+1
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;doprnt.c: 601: width += *f++ - '0';
  4124  002CF2  0ED0               	movlw	208
  4125  002CF4  6F6F               	movwf	??_sprintf& (0+255),b
  4126  002CF6  6970               	setf	(??_sprintf+1)& (0+255),b
  4127  002CF8  C069  FFF6         	movff	sprintf@f,tblptrl
  4128  002CFC  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4129  002D00                     	if	0	;tblptru may be non-zero
  4130  002D00                     	endif
  4131  002D00                     	if	0	;tblptru may be non-zero
  4132  002D00                     	endif
  4133  002D00  0008               	tblrd		*
  4134  002D02  50F5               	movf	tablat,w,c
  4135  002D04  6F71               	movwf	(??_sprintf+2)& (0+255),b
  4136  002D06  6B72               	clrf	(??_sprintf+3)& (0+255),b
  4137  002D08  516F               	movf	??_sprintf& (0+255),w,b
  4138  002D0A  2771               	addwf	(??_sprintf+2)& (0+255),f,b
  4139  002D0C  5170               	movf	(??_sprintf+1)& (0+255),w,b
  4140  002D0E  2372               	addwfc	(??_sprintf+3)& (0+255),f,b
  4141  002D10  5171               	movf	(??_sprintf+2)& (0+255),w,b
  4142  002D12  277D               	addwf	sprintf@width& (0+255),f,b
  4143  002D14  5172               	movf	(??_sprintf+3)& (0+255),w,b
  4144  002D16  237E               	addwfc	(sprintf@width+1)& (0+255),f,b
  4145                           
  4146                           ; BSR set to: 0
  4147  002D18  4B69               	infsnz	sprintf@f& (0+255),f,b
  4148  002D1A  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4152  002D1C  C069  FFF6         	movff	sprintf@f,tblptrl
  4153  002D20  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4154  002D24                     	if	0	;tblptru may be non-zero
  4155  002D24                     	endif
  4156  002D24                     	if	0	;tblptru may be non-zero
  4157  002D24                     	endif
  4158  002D24  0008               	tblrd		*
  4159  002D26  50F5               	movf	tablat,w,c
  4160  002D28  ECF7  F03C         	call	_isdigit
  4161  002D2C  E358               	bnc	l15145
  4162  002D2E  D7D4               	goto	l15103
  4163  002D30                     l15111:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4167  002D30  5178               	movf	sprintf@ap& (0+255),w,b
  4168  002D32  6ED9               	movwf	fsr2l,c
  4169  002D34  6ADA               	clrf	fsr2h,c
  4170  002D36  CFDE F079          	movff	postinc2,sprintf@cp
  4171  002D3A  CFDD F07A          	movff	postdec2,sprintf@cp+1
  4172                           
  4173                           ; BSR set to: 0
  4174  002D3E  0E02               	movlw	2
  4175  002D40  2778               	addwf	sprintf@ap& (0+255),f,b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;doprnt.c: 740: if(!cp)
  4179  002D42  5179               	movf	sprintf@cp& (0+255),w,b
  4180  002D44  117A               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4181  002D46  E104               	bnz	l15119
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;doprnt.c: 741: cp = "(null)";
  4185  002D48  0EE3               	movlw	low STR_7
  4186  002D4A  6F79               	movwf	sprintf@cp& (0+255),b
  4187  002D4C  0EFF               	movlw	high STR_7
  4188  002D4E  6F7A               	movwf	(sprintf@cp+1)& (0+255),b
  4189  002D50                     l15119:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;doprnt.c: 745: len = 0;
  4193  002D50  6B7B               	clrf	sprintf@len& (0+255),b
  4194  002D52  6B7C               	clrf	(sprintf@len+1)& (0+255),b
  4195                           
  4196                           ;doprnt.c: 746: while(cp[len])
  4197  002D54  D002               	goto	l15123
  4198  002D56                     l15121:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;doprnt.c: 747: len++;
  4202  002D56  4B7B               	infsnz	sprintf@len& (0+255),f,b
  4203  002D58  2B7C               	incf	(sprintf@len+1)& (0+255),f,b
  4204  002D5A                     l15123:
  4205                           
  4206                           ; BSR set to: 0
  4207  002D5A  517B               	movf	sprintf@len& (0+255),w,b
  4208  002D5C  2579               	addwf	sprintf@cp& (0+255),w,b
  4209  002D5E  6F6F               	movwf	??_sprintf& (0+255),b
  4210  002D60  517C               	movf	(sprintf@len+1)& (0+255),w,b
  4211  002D62  217A               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4212  002D64  6F70               	movwf	(??_sprintf+1)& (0+255),b
  4213  002D66  C06F  FFF6         	movff	??_sprintf,tblptrl
  4214  002D6A  C070  FFF7         	movff	??_sprintf+1,tblptrh
  4215  002D6E                     	if	0	;tblptru may be non-zero
  4216  002D6E                     	endif
  4217  002D6E                     	if	0	;tblptru may be non-zero
  4218  002D6E                     	endif
  4219  002D6E  0008               	tblrd		*
  4220  002D70  50F5               	movf	tablat,w,c
  4221  002D72  E1F1               	bnz	l15121
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;doprnt.c: 757: if(width > len)
  4225  002D74  517D               	movf	sprintf@width& (0+255),w,b
  4226  002D76  5D7B               	subwf	sprintf@len& (0+255),w,b
  4227  002D78  517E               	movf	(sprintf@width+1)& (0+255),w,b
  4228  002D7A  597C               	subwfb	(sprintf@len+1)& (0+255),w,b
  4229  002D7C  E205               	bc	l1002
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;doprnt.c: 758: width -= len;
  4233  002D7E  517B               	movf	sprintf@len& (0+255),w,b
  4234  002D80  5F7D               	subwf	sprintf@width& (0+255),f,b
  4235  002D82  517C               	movf	(sprintf@len+1)& (0+255),w,b
  4236  002D84  5B7E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4237  002D86  D00B               	goto	l15133
  4238  002D88                     l1002:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;doprnt.c: 759: else
  4242                           ;doprnt.c: 760: width = 0;
  4243  002D88  6B7D               	clrf	sprintf@width& (0+255),b
  4244  002D8A  6B7E               	clrf	(sprintf@width+1)& (0+255),b
  4245  002D8C  D008               	goto	l15133
  4246  002D8E                     l15129:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4250  002D8E  C067  FFD9         	movff	sprintf@sp,fsr2l
  4251  002D92  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4252  002D96  0E20               	movlw	32
  4253  002D98  6EDF               	movwf	indf2,c
  4254                           
  4255                           ; BSR set to: 0
  4256  002D9A  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4257  002D9C  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4258  002D9E                     l15133:
  4259                           
  4260                           ; BSR set to: 0
  4261  002D9E  077D               	decf	sprintf@width& (0+255),f,b
  4262  002DA0  A0D8               	btfss	status,0,c
  4263  002DA2  077E               	decf	(sprintf@width+1)& (0+255),f,b
  4264  002DA4  297D               	incf	sprintf@width& (0+255),w,b
  4265  002DA6  E1F3               	bnz	l15129
  4266  002DA8  297E               	incf	(sprintf@width+1)& (0+255),w,b
  4267  002DAA  E010               	bz	l15141
  4268  002DAC  D7F0               	goto	l15129
  4269  002DAE                     l15135:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4273  002DAE  C079  FFF6         	movff	sprintf@cp,tblptrl
  4274  002DB2  C07A  FFF7         	movff	sprintf@cp+1,tblptrh
  4275  002DB6                     	if	0	;tblptru may be non-zero
  4276  002DB6                     	endif
  4277  002DB6                     	if	0	;tblptru may be non-zero
  4278  002DB6                     	endif
  4279  002DB6  C067  FFD9         	movff	sprintf@sp,fsr2l
  4280  002DBA  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4281  002DBE  0008               	tblrd		*
  4282  002DC0  CFF5 FFDF          	movff	tablat,indf2
  4283                           
  4284                           ; BSR set to: 0
  4285  002DC4  4B79               	infsnz	sprintf@cp& (0+255),f,b
  4286  002DC6  2B7A               	incf	(sprintf@cp+1)& (0+255),f,b
  4287                           
  4288                           ; BSR set to: 0
  4289  002DC8  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4290  002DCA  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4291  002DCC                     l15141:
  4292                           
  4293                           ; BSR set to: 0
  4294  002DCC  077B               	decf	sprintf@len& (0+255),f,b
  4295  002DCE  A0D8               	btfss	status,0,c
  4296  002DD0  077C               	decf	(sprintf@len+1)& (0+255),f,b
  4297  002DD2  297B               	incf	sprintf@len& (0+255),w,b
  4298  002DD4  E1EC               	bnz	l15135
  4299  002DD6  297C               	incf	(sprintf@len+1)& (0+255),w,b
  4300  002DD8  E101 D095          	bz	l15195
  4301  002DDC  D7E8               	goto	l15135
  4302  002DDE                     l15145:
  4303                           
  4304                           ; BSR set to: 0
  4305  002DDE  C069  FFF6         	movff	sprintf@f,tblptrl
  4306  002DE2  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4307  002DE6  4B69               	infsnz	sprintf@f& (0+255),f,b
  4308  002DE8  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  4309  002DEA                     	if	0	;tblptru may be non-zero
  4310  002DEA                     	endif
  4311  002DEA                     	if	0	;tblptru may be non-zero
  4312  002DEA                     	endif
  4313  002DEA  0008               	tblrd		*
  4314  002DEC  CFF5 F07F          	movff	tablat,sprintf@c
  4315  002DF0  517F               	movf	sprintf@c& (0+255),w,b
  4316                           
  4317                           ; Switch size 1, requested type "speed"
  4318                           ; Number of cases is 4, Range of values is 0 to 120
  4319                           ; switch strategies available:
  4320                           ; Name         Instructions Cycles
  4321                           ; simple_byte           13     7 (average)
  4322                           ;	Chosen strategy is simple_byte
  4323  002DF2  E101 D094          	bz	l15197
  4324  002DF6  0A58               	xorlw	88	; case 88
  4325  002DF8  E005               	bz	l15147
  4326  002DFA  0A2B               	xorlw	43	; case 115
  4327  002DFC  E099               	bz	l15111
  4328  002DFE  0A0B               	xorlw	11	; case 120
  4329  002E00  E001 D081          	bnz	l15195
  4330  002E04                     l15147:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;doprnt.c: 1273: {
  4334                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4335  002E04  5178               	movf	sprintf@ap& (0+255),w,b
  4336  002E06  6ED9               	movwf	fsr2l,c
  4337  002E08  6ADA               	clrf	fsr2h,c
  4338  002E0A  CFDE F075          	movff	postinc2,sprintf@val
  4339  002E0E  CFDD F076          	movff	postdec2,sprintf@val+1
  4340                           
  4341                           ; BSR set to: 0
  4342  002E12  0E02               	movlw	2
  4343  002E14  2778               	addwf	sprintf@ap& (0+255),f,b
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;doprnt.c: 1287: }
  4347                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4348  002E16  0E01               	movlw	1
  4349  002E18  6F7F               	movwf	sprintf@c& (0+255),b
  4350  002E1A                     l15157:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4354  002E1A  517F               	movf	sprintf@c& (0+255),w,b
  4355  002E1C  0D02               	mullw	2
  4356  002E1E  0E8F               	movlw	low _hexpowers
  4357  002E20  24F3               	addwf	prodl,w,c
  4358  002E22  6EF6               	movwf	tblptrl,c
  4359  002E24  0EFF               	movlw	high _hexpowers
  4360  002E26  20F4               	addwfc	prodh,w,c
  4361  002E28  6EF7               	movwf	tblptrh,c
  4362  002E2A                     	if	0	;There are less than 3 active tblptr bytes
  4363  002E2A                     	endif
  4364  002E2A  0009               	tblrd		*+
  4365  002E2C  50F5               	movf	tablat,w,c
  4366  002E2E  5D75               	subwf	sprintf@val& (0+255),w,b
  4367  002E30  0009               	tblrd		*+
  4368  002E32  50F5               	movf	tablat,w,c
  4369  002E34  5976               	subwfb	(sprintf@val+1)& (0+255),w,b
  4370  002E36  E304               	bnc	l15165
  4371                           
  4372                           ; BSR set to: 0
  4373  002E38  2B7F               	incf	sprintf@c& (0+255),f,b
  4374                           
  4375                           ; BSR set to: 0
  4376  002E3A  0E04               	movlw	4
  4377  002E3C  197F               	xorwf	sprintf@c& (0+255),w,b
  4378  002E3E  E1ED               	bnz	l15157
  4379  002E40                     l15165:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;doprnt.c: 1381: if(width > c)
  4383  002E40  0E80               	movlw	128
  4384  002E42  BF7F               	btfsc	sprintf@c& (0+255),7,b
  4385  002E44  0E7F               	movlw	127
  4386  002E46  6F6F               	movwf	??_sprintf& (0+255),b
  4387  002E48  517D               	movf	sprintf@width& (0+255),w,b
  4388  002E4A  5D7F               	subwf	sprintf@c& (0+255),w,b
  4389  002E4C  517E               	movf	(sprintf@width+1)& (0+255),w,b
  4390  002E4E  0A80               	xorlw	128
  4391  002E50  596F               	subwfb	??_sprintf& (0+255),w,b
  4392  002E52  E207               	bc	l1014
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;doprnt.c: 1382: width -= c;
  4396  002E54  517F               	movf	sprintf@c& (0+255),w,b
  4397  002E56  5F7D               	subwf	sprintf@width& (0+255),f,b
  4398  002E58  0E00               	movlw	0
  4399  002E5A  BF7F               	btfsc	sprintf@c& (0+255),7,b
  4400  002E5C  0EFF               	movlw	255
  4401  002E5E  5B7E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4402  002E60  D002               	goto	l1015
  4403  002E62                     l1014:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;doprnt.c: 1383: else
  4407                           ;doprnt.c: 1384: width = 0;
  4408  002E62  6B7D               	clrf	sprintf@width& (0+255),b
  4409  002E64  6B7E               	clrf	(sprintf@width+1)& (0+255),b
  4410  002E66                     l1015:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;doprnt.c: 1387: if(flag & 0x04) {
  4414  002E66  A574               	btfss	sprintf@flag& (0+255),2,b
  4415  002E68  D00F               	goto	l15177
  4416  002E6A                     
  4417                           ; BSR set to: 0
  4418                           ;doprnt.c: 1415: if(width)
  4419  002E6A  517D               	movf	sprintf@width& (0+255),w,b
  4420  002E6C  117E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4421  002E6E  E01D               	bz	l1020
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4425  002E70  C067  FFD9         	movff	sprintf@sp,fsr2l
  4426  002E74  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4427  002E78  0E30               	movlw	48
  4428  002E7A  6EDF               	movwf	indf2,c
  4429                           
  4430                           ; BSR set to: 0
  4431  002E7C  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4432  002E7E  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;doprnt.c: 1418: while(--width);
  4436  002E80  077D               	decf	sprintf@width& (0+255),f,b
  4437  002E82  A0D8               	btfss	status,0,c
  4438  002E84  077E               	decf	(sprintf@width+1)& (0+255),f,b
  4439  002E86  D7F1               	goto	L31
  4440  002E88                     l15177:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;doprnt.c: 1422: {
  4444                           ;doprnt.c: 1424: if(width
  4445                           ;doprnt.c: 1428: )
  4446  002E88  517D               	movf	sprintf@width& (0+255),w,b
  4447  002E8A  117E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4448  002E8C  E00E               	bz	l1020
  4449  002E8E                     l15179:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4453  002E8E  C067  FFD9         	movff	sprintf@sp,fsr2l
  4454  002E92  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4455  002E96  0E20               	movlw	32
  4456  002E98  6EDF               	movwf	indf2,c
  4457                           
  4458                           ; BSR set to: 0
  4459  002E9A  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4460  002E9C  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;doprnt.c: 1431: while(--width);
  4464  002E9E  077D               	decf	sprintf@width& (0+255),f,b
  4465  002EA0  A0D8               	btfss	status,0,c
  4466  002EA2  077E               	decf	(sprintf@width+1)& (0+255),f,b
  4467  002EA4  517D               	movf	sprintf@width& (0+255),w,b
  4468  002EA6  117E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4469  002EA8  E1F2               	bnz	l15179
  4470  002EAA                     l1020:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;doprnt.c: 1469: }
  4474                           ;doprnt.c: 1472: prec = c;
  4475  002EAA  C07F  F077         	movff	sprintf@c,sprintf@prec
  4476                           
  4477                           ;doprnt.c: 1474: while(prec--) {
  4478  002EAE  D028               	goto	l15193
  4479  002EB0                     l15185:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;doprnt.c: 1478: {
  4483                           ;doprnt.c: 1499: {
  4484                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4485  002EB0  C075  F060         	movff	sprintf@val,___lwdiv@dividend
  4486  002EB4  C076  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4487  002EB8  5177               	movf	sprintf@prec& (0+255),w,b
  4488  002EBA  0D02               	mullw	2
  4489  002EBC  0E8F               	movlw	low _hexpowers
  4490  002EBE  24F3               	addwf	prodl,w,c
  4491  002EC0  6EF6               	movwf	tblptrl,c
  4492  002EC2  0EFF               	movlw	high _hexpowers
  4493  002EC4  20F4               	addwfc	prodh,w,c
  4494  002EC6  6EF7               	movwf	tblptrh,c
  4495  002EC8                     	if	0	;There are less than 3 active tblptr bytes
  4496  002EC8                     	endif
  4497  002EC8  0009               	tblrd		*+
  4498  002ECA  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4499  002ECE  000A               	tblrd		*-
  4500  002ED0  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4501  002ED4  EC87  F039         	call	___lwdiv	;wreg free
  4502  002ED8  5160               	movf	?___lwdiv& (0+255),w,b
  4503  002EDA  0B0F               	andlw	15
  4504  002EDC  6F73               	movwf	sprintf@idx& (0+255),b
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4508  002EDE  0EC4               	movlw	low STR_8
  4509  002EE0  2573               	addwf	sprintf@idx& (0+255),w,b
  4510  002EE2  6EF6               	movwf	tblptrl,c
  4511  002EE4  6AF7               	clrf	tblptrh,c
  4512  002EE6  0EFF               	movlw	high STR_8
  4513  002EE8  22F7               	addwfc	tblptrh,f,c
  4514  002EEA                     	if	0	;There are less than 3 active tblptr bytes
  4515  002EEA                     	endif
  4516  002EEA  0008               	tblrd		*
  4517  002EEC  CFF5 F07F          	movff	tablat,sprintf@c
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;doprnt.c: 1508: }
  4521                           ;doprnt.c: 1523: }
  4522                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4523  002EF0  C067  FFD9         	movff	sprintf@sp,fsr2l
  4524  002EF4  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4525  002EF8  C07F  FFDF         	movff	sprintf@c,indf2
  4526                           
  4527                           ; BSR set to: 0
  4528  002EFC  4B67               	infsnz	sprintf@sp& (0+255),f,b
  4529  002EFE  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  4530  002F00                     l15193:
  4531                           
  4532                           ; BSR set to: 0
  4533  002F00  0777               	decf	sprintf@prec& (0+255),f,b
  4534  002F02  2977               	incf	sprintf@prec& (0+255),w,b
  4535  002F04  E1D5               	bnz	l15185
  4536  002F06                     l15195:
  4537                           
  4538                           ; BSR set to: 0
  4539  002F06  C069  FFF6         	movff	sprintf@f,tblptrl
  4540  002F0A  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  4541  002F0E  4B69               	infsnz	sprintf@f& (0+255),f,b
  4542  002F10  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  4543  002F12                     	if	0	;tblptru may be non-zero
  4544  002F12                     	endif
  4545  002F12                     	if	0	;tblptru may be non-zero
  4546  002F12                     	endif
  4547  002F12  0008               	tblrd		*
  4548  002F14  CFF5 F07F          	movff	tablat,sprintf@c
  4549  002F18  517F               	movf	sprintf@c& (0+255),w,b
  4550  002F1A  E001 D6B6          	bnz	l15087
  4551  002F1E                     l15197:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;doprnt.c: 1538: *sp = 0;
  4555  002F1E  C067  FFD9         	movff	sprintf@sp,fsr2l
  4556  002F22  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  4557  002F26  6ADF               	clrf	indf2,c
  4558                           
  4559                           ; BSR set to: 0
  4560  002F28  0C00               	retlw	0	;funcret
  4561  002F2A                     __end_of_sprintf:
  4562                           	opt stack 0
  4563                           tblptru	equ	0xFF8
  4564                           tblptrh	equ	0xFF7
  4565                           tblptrl	equ	0xFF6
  4566                           tablat	equ	0xFF5
  4567                           prodh	equ	0xFF4
  4568                           prodl	equ	0xFF3
  4569                           postinc0	equ	0xFEE
  4570                           plusw0	equ	0xFEB
  4571                           wreg	equ	0xFE8
  4572                           postdec1	equ	0xFE5
  4573                           plusw1	equ	0xFE3
  4574                           fsr1h	equ	0xFE2
  4575                           fsr1l	equ	0xFE1
  4576                           indf2	equ	0xFDF
  4577                           postinc2	equ	0xFDE
  4578                           postdec2	equ	0xFDD
  4579                           plusw2	equ	0xFDB
  4580                           fsr2h	equ	0xFDA
  4581                           fsr2l	equ	0xFD9
  4582                           status	equ	0xFD8
  4583                           
  4584 ;; *************** function _isdigit *****************
  4585 ;; Defined at:
  4586 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  c               1    wreg     unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  c               1    2[BANK0 ] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;		None               void
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : F/0
  4597 ;;		On exit  : F/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;Total ram usage:        3 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    4
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_sprintf
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text2
  4615  0079EE                     __ptext2:
  4616                           	opt stack 0
  4617  0079EE                     _isdigit:
  4618                           	opt stack 25
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;incstack = 0
  4622                           ;isdigit@c stored from wreg
  4623  0079EE  6F62               	movwf	isdigit@c& (0+255),b
  4624  0079F0  0100               	movlb	0	; () banked
  4625  0079F2  6B61               	clrf	_isdigit$4787& (0+255),b
  4626                           
  4627                           ; BSR set to: 0
  4628  0079F4  0E3A               	movlw	58
  4629  0079F6  6162               	cpfslt	isdigit@c& (0+255),b
  4630  0079F8  D005               	goto	l14691
  4631                           
  4632                           ; BSR set to: 0
  4633  0079FA  0E2F               	movlw	47
  4634  0079FC  6562               	cpfsgt	isdigit@c& (0+255),b
  4635  0079FE  D002               	goto	l14691
  4636                           
  4637                           ; BSR set to: 0
  4638  007A00  0E01               	movlw	1
  4639  007A02  6F61               	movwf	_isdigit$4787& (0+255),b
  4640  007A04                     l14691:
  4641                           
  4642                           ; BSR set to: 0
  4643  007A04  C061  F060         	movff	_isdigit$4787,??_isdigit
  4644  007A08  3160               	rrcf	??_isdigit& (0+255),w,b
  4645                           
  4646                           ; BSR set to: 0
  4647  007A0A  0012               	return		;funcret
  4648  007A0C                     __end_of_isdigit:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           prodh	equ	0xFF4
  4655                           prodl	equ	0xFF3
  4656                           postinc0	equ	0xFEE
  4657                           plusw0	equ	0xFEB
  4658                           wreg	equ	0xFE8
  4659                           postdec1	equ	0xFE5
  4660                           plusw1	equ	0xFE3
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           plusw2	equ	0xFDB
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function ___wmul *****************
  4672 ;; Defined at:
  4673 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4676 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  product         2    4[BANK0 ] unsigned int 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2    0[BANK0 ] unsigned int 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, prodl, prodh
  4683 ;; Tracked objects:
  4684 ;;		On entry : F/0
  4685 ;;		On exit  : F/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:        6 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    4
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_sprintf
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text3
  4703  00793E                     __ptext3:
  4704                           	opt stack 0
  4705  00793E                     ___wmul:
  4706                           	opt stack 25
  4707                           
  4708                           ; BSR set to: 0
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;incstack = 0
  4712  00793E  5160               	movf	___wmul@multiplier& (0+255),w,b
  4713  007940  0362               	mulwf	___wmul@multiplicand& (0+255),b
  4714  007942  CFF3 F064          	movff	prodl,___wmul@product
  4715  007946  CFF4 F065          	movff	prodh,___wmul@product+1
  4716  00794A  5160               	movf	___wmul@multiplier& (0+255),w,b
  4717  00794C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4718  00794E  50F3               	movf	prodl,w,c
  4719  007950  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  4720  007952  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4721  007954  0362               	mulwf	___wmul@multiplicand& (0+255),b
  4722  007956  50F3               	movf	prodl,w,c
  4723  007958  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  4724                           
  4725                           ; BSR set to: 0
  4726  00795A  C064  F060         	movff	___wmul@product,?___wmul
  4727  00795E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  4728                           
  4729                           ; BSR set to: 0
  4730  007962  0012               	return		;funcret
  4731  007964                     __end_of___wmul:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           postinc0	equ	0xFEE
  4740                           plusw0	equ	0xFEB
  4741                           wreg	equ	0xFE8
  4742                           postdec1	equ	0xFE5
  4743                           plusw1	equ	0xFE3
  4744                           fsr1h	equ	0xFE2
  4745                           fsr1l	equ	0xFE1
  4746                           indf2	equ	0xFDF
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           plusw2	equ	0xFDB
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function _isButtonPressed *****************
  4755 ;; Defined at:
  4756 ;;		line 475 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  index           1    wreg     unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  index           1    2[BANK0 ] unsigned char 
  4761 ;;  mask            1    3[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      unsigned char 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : C/1
  4768 ;;		On exit  : F/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;Total ram usage:        4 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    4
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text4
  4786  007964                     __ptext4:
  4787                           	opt stack 0
  4788  007964                     _isButtonPressed:
  4789                           	opt stack 26
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;incstack = 0
  4793                           ;isButtonPressed@index stored from wreg
  4794  007964  0100               	movlb	0	; () banked
  4795  007966  6F62               	movwf	isButtonPressed@index& (0+255),b
  4796                           
  4797                           ;system.c: 477: uint8_t mask=(1<<index);
  4798  007968  C062  F060         	movff	isButtonPressed@index,??_isButtonPressed
  4799  00796C  0E01               	movlw	1
  4800  00796E  6F61               	movwf	(??_isButtonPressed+1)& (0+255),b
  4801  007970  2B60               	incf	??_isButtonPressed& (0+255),f,b
  4802  007972  D002               	goto	u22844
  4803  007974                     u22845:
  4804  007974  90D8               	bcf	status,0,c
  4805  007976  3761               	rlcf	(??_isButtonPressed+1)& (0+255),f,b
  4806  007978                     u22844:
  4807  007978  2F60               	decfsz	??_isButtonPressed& (0+255),f,b
  4808  00797A  D7FC               	goto	u22845
  4809  00797C  0100               	movlb	0	; () banked
  4810  00797E  5161               	movf	(??_isButtonPressed+1)& (0+255),w,b
  4811  007980  6F63               	movwf	isButtonPressed@mask& (0+255),b
  4812                           
  4813                           ;system.c: 478: return((switches & mask)>0);
  4814  007982  144B               	andwf	_switches,w,c
  4815  007984  A4D8               	btfss	status,2,c
  4816  007986  0C01               	retlw	1
  4817                           
  4818                           ; BSR set to: 0
  4819  007988  0C00               	retlw	0	;funcret
  4820  00798A                     __end_of_isButtonPressed:
  4821                           	opt stack 0
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           prodh	equ	0xFF4
  4827                           prodl	equ	0xFF3
  4828                           postinc0	equ	0xFEE
  4829                           plusw0	equ	0xFEB
  4830                           wreg	equ	0xFE8
  4831                           postdec1	equ	0xFE5
  4832                           plusw1	equ	0xFE3
  4833                           fsr1h	equ	0xFE2
  4834                           fsr1l	equ	0xFE1
  4835                           indf2	equ	0xFDF
  4836                           postinc2	equ	0xFDE
  4837                           postdec2	equ	0xFDD
  4838                           plusw2	equ	0xFDB
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function _Read_MAC_Address *****************
  4844 ;; Defined at:
  4845 ;;		line 229 in file "../src/mainRFD-Sleeping.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  address         8   27[BANK0 ] struct addr_t_def
  4850 ;;  addr8           6   21[BANK0 ] unsigned char [6]
  4851 ;;  i               1   37[BANK0 ] unsigned char 
  4852 ;;  j               1   36[BANK0 ] unsigned char 
  4853 ;;  pAddress        1   35[BANK0 ] PTR unsigned char 
  4854 ;;		 -> Read_MAC_Address@address(8), 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  8   12[BANK0 ] struct addr_t_def
  4857 ;; Registers used:
  4858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : F/2
  4861 ;;		On exit  : F/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4864 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;Total ram usage:       26 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    7
  4871 ;; This function calls:
  4872 ;;		_EEPROMRead
  4873 ;;		_memcpy
  4874 ;; This function is called by:
  4875 ;;		_main
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text5
  4880  006128                     __ptext5:
  4881                           	opt stack 0
  4882  006128                     _Read_MAC_Address:
  4883                           	opt stack 23
  4884                           
  4885                           ; BSR set to: 2
  4886                           ;mainRFD-Sleeping.c: 231: uint8_t addr8[6];
  4887                           ;mainRFD-Sleeping.c: 232: addr_t address;
  4888                           ;mainRFD-Sleeping.c: 233: uint8_t *pAddress=(uint8_t*)&address;
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;incstack = 0
  4892  006128  0E7B               	movlw	low Read_MAC_Address@address
  4893  00612A  0100               	movlb	0	; () banked
  4894  00612C  6F83               	movwf	Read_MAC_Address@pAddress& (0+255),b
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;mainRFD-Sleeping.c: 234: uint8_t i;
  4898                           ;mainRFD-Sleeping.c: 235: uint8_t j=0;
  4899  00612E  6B84               	clrf	Read_MAC_Address@j& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;mainRFD-Sleeping.c: 236: for(i=0;i<6;i++)
  4903  006130  6B85               	clrf	Read_MAC_Address@i& (0+255),b
  4904  006132                     l15021:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;mainRFD-Sleeping.c: 237: {
  4908                           ;mainRFD-Sleeping.c: 238: EEPROMRead(&(addr8[6-1-i]), 0xFA+i, 1);
  4909  006132  5185               	movf	Read_MAC_Address@i& (0+255),w,b
  4910  006134  0805               	sublw	5
  4911  006136  6F74               	movwf	??_Read_MAC_Address& (0+255),b
  4912  006138  5174               	movf	??_Read_MAC_Address& (0+255),w,b
  4913  00613A  0F75               	addlw	low Read_MAC_Address@addr8
  4914  00613C  6F62               	movwf	EEPROMRead@dest& (0+255),b
  4915  00613E  5185               	movf	Read_MAC_Address@i& (0+255),w,b
  4916  006140  0FFA               	addlw	250
  4917  006142  6F63               	movwf	EEPROMRead@addr& (0+255),b
  4918  006144  0E01               	movlw	1
  4919  006146  6F64               	movwf	EEPROMRead@count& (0+255),b
  4920  006148  ECEF  F03B         	call	_EEPROMRead	;wreg free
  4921                           
  4922                           ; BSR set to: 0
  4923  00614C  2B85               	incf	Read_MAC_Address@i& (0+255),f,b
  4924                           
  4925                           ; BSR set to: 0
  4926  00614E  0E05               	movlw	5
  4927  006150  6585               	cpfsgt	Read_MAC_Address@i& (0+255),b
  4928  006152  D7EF               	goto	l15021
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;mainRFD-Sleeping.c: 241: {
  4932                           ;mainRFD-Sleeping.c: 242: for(i = 0; i < 3; i++)
  4933                           
  4934                           ;mainRFD-Sleeping.c: 239: }
  4935                           ;mainRFD-Sleeping.c: 240: if( 8 > 6 )
  4936  006154  6B85               	clrf	Read_MAC_Address@i& (0+255),b
  4937  006156                     l15031:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;mainRFD-Sleeping.c: 243: {
  4941                           ;mainRFD-Sleeping.c: 244: pAddress[j++]=addr8[i];
  4942  006156  5185               	movf	Read_MAC_Address@i& (0+255),w,b
  4943  006158  0F75               	addlw	low Read_MAC_Address@addr8
  4944  00615A  6ED9               	movwf	fsr2l,c
  4945  00615C  6ADA               	clrf	fsr2h,c
  4946  00615E  5183               	movf	Read_MAC_Address@pAddress& (0+255),w,b
  4947  006160  2584               	addwf	Read_MAC_Address@j& (0+255),w,b
  4948  006162  6EE1               	movwf	fsr1l,c
  4949  006164  6AE2               	clrf	fsr1h,c
  4950  006166  CFDF FFE7          	movff	indf2,indf1
  4951                           
  4952                           ; BSR set to: 0
  4953  00616A  2B84               	incf	Read_MAC_Address@j& (0+255),f,b
  4954                           
  4955                           ; BSR set to: 0
  4956  00616C  2B85               	incf	Read_MAC_Address@i& (0+255),f,b
  4957                           
  4958                           ; BSR set to: 0
  4959  00616E  0E02               	movlw	2
  4960  006170  6585               	cpfsgt	Read_MAC_Address@i& (0+255),b
  4961  006172  D7F1               	goto	l15031
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;mainRFD-Sleeping.c: 247: {
  4965                           ;mainRFD-Sleeping.c: 248: pAddress[j++] = 0xFE;
  4966  006174  5183               	movf	Read_MAC_Address@pAddress& (0+255),w,b
  4967  006176  2584               	addwf	Read_MAC_Address@j& (0+255),w,b
  4968  006178  6ED9               	movwf	fsr2l,c
  4969  00617A  6ADA               	clrf	fsr2h,c
  4970  00617C  0EFE               	movlw	254
  4971  00617E  6EDF               	movwf	indf2,c
  4972                           
  4973                           ; BSR set to: 0
  4974  006180  2B84               	incf	Read_MAC_Address@j& (0+255),f,b
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;mainRFD-Sleeping.c: 249: }
  4978                           ;mainRFD-Sleeping.c: 250: pAddress[j++] = 0xFF;
  4979  006182  5183               	movf	Read_MAC_Address@pAddress& (0+255),w,b
  4980  006184  2584               	addwf	Read_MAC_Address@j& (0+255),w,b
  4981  006186  6ED9               	movwf	fsr2l,c
  4982  006188  6ADA               	clrf	fsr2h,c
  4983  00618A  68DF               	setf	indf2,c
  4984  00618C  2B84               	incf	Read_MAC_Address@j& (0+255),f,b
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;mainRFD-Sleeping.c: 251: for(i = 0; i < 3; i++)
  4988  00618E  6B85               	clrf	Read_MAC_Address@i& (0+255),b
  4989  006190                     l15051:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;mainRFD-Sleeping.c: 252: {
  4993                           ;mainRFD-Sleeping.c: 253: pAddress[j++]=addr8[i+3];
  4994  006190  C085  F074         	movff	Read_MAC_Address@i,??_Read_MAC_Address
  4995  006194  0E03               	movlw	3
  4996  006196  2774               	addwf	??_Read_MAC_Address& (0+255),f,b
  4997  006198  5174               	movf	??_Read_MAC_Address& (0+255),w,b
  4998  00619A  0F75               	addlw	low Read_MAC_Address@addr8
  4999  00619C  6ED9               	movwf	fsr2l,c
  5000  00619E  6ADA               	clrf	fsr2h,c
  5001  0061A0  5183               	movf	Read_MAC_Address@pAddress& (0+255),w,b
  5002  0061A2  2584               	addwf	Read_MAC_Address@j& (0+255),w,b
  5003  0061A4  6EE1               	movwf	fsr1l,c
  5004  0061A6  6AE2               	clrf	fsr1h,c
  5005  0061A8  CFDF FFE7          	movff	indf2,indf1
  5006                           
  5007                           ; BSR set to: 0
  5008  0061AC  2B84               	incf	Read_MAC_Address@j& (0+255),f,b
  5009                           
  5010                           ; BSR set to: 0
  5011  0061AE  2B85               	incf	Read_MAC_Address@i& (0+255),f,b
  5012                           
  5013                           ; BSR set to: 0
  5014  0061B0  0E02               	movlw	2
  5015  0061B2  6585               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5016  0061B4  D7ED               	goto	l15051
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;mainRFD-Sleeping.c: 259: }
  5020                           ;mainRFD-Sleeping.c: 260: return address;
  5021  0061B6  EE20  F07B         	lfsr	2,Read_MAC_Address@address
  5022  0061BA  EE00  F06C         	lfsr	0,?_Read_MAC_Address
  5023  0061BE  0E07               	movlw	7
  5024  0061C0                     u23181:
  5025  0061C0  CFDB FFEB          	movff	plusw2,plusw0
  5026  0061C4  06E8               	decf	wreg,f,c
  5027  0061C6  E2FC               	bc	u23181
  5028                           
  5029                           ; BSR set to: 0
  5030  0061C8  0012               	return		;funcret
  5031  0061CA                     __end_of_Read_MAC_Address:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           postinc0	equ	0xFEE
  5040                           plusw0	equ	0xFEB
  5041                           wreg	equ	0xFE8
  5042                           indf1	equ	0xFE7
  5043                           postdec1	equ	0xFE5
  5044                           plusw1	equ	0xFE3
  5045                           fsr1h	equ	0xFE2
  5046                           fsr1l	equ	0xFE1
  5047                           indf2	equ	0xFDF
  5048                           postinc2	equ	0xFDE
  5049                           postdec2	equ	0xFDD
  5050                           plusw2	equ	0xFDB
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055 ;; *************** function _EEPROMRead *****************
  5056 ;; Defined at:
  5057 ;;		line 216 in file "../src/mainRFD-Sleeping.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  dest            1    2[BANK0 ] PTR unsigned char 
  5060 ;;		 -> Read_MAC_Address@addr8(6), 
  5061 ;;  addr            1    3[BANK0 ] unsigned char 
  5062 ;;  count           1    4[BANK0 ] unsigned char 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : F/0
  5071 ;;		On exit  : F/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5074 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;Total ram usage:        3 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    6
  5081 ;; This function calls:
  5082 ;;		_SPIGet2
  5083 ;;		_SPIPut2
  5084 ;; This function is called by:
  5085 ;;		_Read_MAC_Address
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text6
  5090  0077DE                     __ptext6:
  5091                           	opt stack 0
  5092  0077DE                     _EEPROMRead:
  5093                           	opt stack 23
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;mainRFD-Sleeping.c: 218: LATDbits.LATD5 = 0;
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;incstack = 0
  5100  0077DE  9A8C               	bcf	3980,5,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;mainRFD-Sleeping.c: 219: SPIPut2(0x03);
  5104  0077E0  0E03               	movlw	3
  5105  0077E2  EC62  F03D         	call	_SPIPut2
  5106                           
  5107                           ;mainRFD-Sleeping.c: 220: SPIPut2(addr);
  5108  0077E6  0100               	movlb	0	; () banked
  5109  0077E8  5163               	movf	EEPROMRead@addr& (0+255),w,b
  5110  0077EA  EC62  F03D         	call	_SPIPut2
  5111                           
  5112                           ;mainRFD-Sleeping.c: 221: while( count )
  5113  0077EE  D009               	goto	l14485
  5114  0077F0                     l14479:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;mainRFD-Sleeping.c: 222: {
  5118                           ;mainRFD-Sleeping.c: 223: *dest++ = SPIGet2();
  5119  0077F0  5162               	movf	EEPROMRead@dest& (0+255),w,b
  5120  0077F2  6ED9               	movwf	fsr2l,c
  5121  0077F4  6ADA               	clrf	fsr2h,c
  5122  0077F6  EC09  F03E         	call	_SPIGet2	;wreg free
  5123  0077FA  6EDF               	movwf	indf2,c
  5124  0077FC  0100               	movlb	0	; () banked
  5125  0077FE  2B62               	incf	EEPROMRead@dest& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;mainRFD-Sleeping.c: 224: count--;
  5129  007800  0764               	decf	EEPROMRead@count& (0+255),f,b
  5130  007802                     l14485:
  5131  007802  0100               	movlb	0	; () banked
  5132  007804  5164               	movf	EEPROMRead@count& (0+255),w,b
  5133  007806  E1F4               	bnz	l14479
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;mainRFD-Sleeping.c: 225: }
  5137                           ;mainRFD-Sleeping.c: 226: LATDbits.LATD5 = 1;
  5138  007808  8A8C               	bsf	3980,5,c	;volatile
  5139                           
  5140                           ; BSR set to: 0
  5141  00780A  0012               	return		;funcret
  5142  00780C                     __end_of_EEPROMRead:
  5143                           	opt stack 0
  5144                           tblptru	equ	0xFF8
  5145                           tblptrh	equ	0xFF7
  5146                           tblptrl	equ	0xFF6
  5147                           tablat	equ	0xFF5
  5148                           prodh	equ	0xFF4
  5149                           prodl	equ	0xFF3
  5150                           postinc0	equ	0xFEE
  5151                           plusw0	equ	0xFEB
  5152                           wreg	equ	0xFE8
  5153                           indf1	equ	0xFE7
  5154                           postdec1	equ	0xFE5
  5155                           plusw1	equ	0xFE3
  5156                           fsr1h	equ	0xFE2
  5157                           fsr1l	equ	0xFE1
  5158                           indf2	equ	0xFDF
  5159                           postinc2	equ	0xFDE
  5160                           postdec2	equ	0xFDD
  5161                           plusw2	equ	0xFDB
  5162                           fsr2h	equ	0xFDA
  5163                           fsr2l	equ	0xFD9
  5164                           status	equ	0xFD8
  5165                           
  5166 ;; *************** function _SPIGet2 *****************
  5167 ;; Defined at:
  5168 ;;		line 383 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      unsigned char 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : F/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    5
  5189 ;; This function calls:
  5190 ;;		_SPIPut2
  5191 ;; This function is called by:
  5192 ;;		_EEPROMRead
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text7
  5197  007C12                     __ptext7:
  5198                           	opt stack 0
  5199  007C12                     _SPIGet2:
  5200                           	opt stack 23
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;spi.c: 408: SPIPut2(0x00);
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;incstack = 0
  5207  007C12  0E00               	movlw	0
  5208  007C14  EC62  F03D         	call	_SPIPut2
  5209                           
  5210                           ;spi.c: 409: return SSP2BUF;
  5211  007C18  5075               	movf	3957,w,c	;volatile
  5212  007C1A  0012               	return		;funcret
  5213  007C1C                     __end_of_SPIGet2:
  5214                           	opt stack 0
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           postinc0	equ	0xFEE
  5222                           plusw0	equ	0xFEB
  5223                           wreg	equ	0xFE8
  5224                           indf1	equ	0xFE7
  5225                           postdec1	equ	0xFE5
  5226                           plusw1	equ	0xFE3
  5227                           fsr1h	equ	0xFE2
  5228                           fsr1l	equ	0xFE1
  5229                           indf2	equ	0xFDF
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           plusw2	equ	0xFDB
  5233                           fsr2h	equ	0xFDA
  5234                           fsr2l	equ	0xFD9
  5235                           status	equ	0xFD8
  5236                           
  5237 ;; *************** function _MiApp_UnicastAddress *****************
  5238 ;; Defined at:
  5239 ;;		line 224 in file "../src/Bridge.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  DestinationA    2  153[BANK0 ] PTR unsigned char 
  5242 ;;		 -> main@coord(8), 
  5243 ;;  Origin          2  155[BANK0 ] PTR unsigned char 
  5244 ;;		 -> NULL(0), 
  5245 ;;  SecEn           1  157[BANK0 ] unsigned char 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  src             8   64[BANK1 ] struct addr_t_def
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      unsigned char 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : F/0
  5254 ;;		On exit  : F/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5257 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Totals:         0       5       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;Total ram usage:       13 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:   14
  5264 ;; This function calls:
  5265 ;;		_NetworkUnicastData
  5266 ;;		_memcpy
  5267 ;; This function is called by:
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text8
  5273  0074B2                     __ptext8:
  5274                           	opt stack 0
  5275  0074B2                     _MiApp_UnicastAddress:
  5276                           	opt stack 16
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;Bridge.c: 226: addr_t src;
  5280                           ;Bridge.c: 227: memcpy(src.bytes,DestinationAddress,8);
  5281                           
  5282                           ;incstack = 0
  5283  0074B2  0E40               	movlw	low MiApp_UnicastAddress@src
  5284  0074B4  6F62               	movwf	memcpy@d1& (0+255),b
  5285  0074B6  0E01               	movlw	high MiApp_UnicastAddress@src
  5286  0074B8  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  5287  0074BA  C0F9  F064         	movff	MiApp_UnicastAddress@DestinationAddress,memcpy@s1
  5288  0074BE  C0FA  F065         	movff	MiApp_UnicastAddress@DestinationAddress+1,memcpy@s1+1
  5289  0074C2  6B67               	clrf	(memcpy@n+1)& (0+255),b
  5290  0074C4  0E08               	movlw	8
  5291  0074C6  6F66               	movwf	memcpy@n& (0+255),b
  5292  0074C8  ECFA  F03A         	call	_memcpy	;wreg free
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;Bridge.c: 228: return(NetworkUnicastData(src, TxBuffer, TxData,SecEn));
  5296  0074CC  EE21  F040         	lfsr	2,MiApp_UnicastAddress@src
  5297  0074D0  EE00  F0E9         	lfsr	0,NetworkUnicastData@address
  5298  0074D4  0E07               	movlw	7
  5299  0074D6                     u23501:
  5300  0074D6  CFDB FFEB          	movff	plusw2,plusw0
  5301  0074DA  06E8               	decf	wreg,f,c
  5302  0074DC  E2FC               	bc	u23501
  5303  0074DE  0E55               	movlw	low _TxBuffer
  5304  0074E0  6FF1               	movwf	NetworkUnicastData@data& (0+255),b
  5305  0074E2  0E03               	movlw	high _TxBuffer
  5306  0074E4  6FF2               	movwf	(NetworkUnicastData@data+1)& (0+255),b
  5307  0074E6  C1DF  F0F3         	movff	_TxData,NetworkUnicastData@size
  5308  0074EA  6BF4               	clrf	(NetworkUnicastData@size+1)& (0+255),b
  5309  0074EC  C0FD  F0F5         	movff	MiApp_UnicastAddress@SecEn,NetworkUnicastData@isSecure
  5310  0074F0  EF28  F01F         	goto	_NetworkUnicastData	;wreg free
  5311  0074F4                     __end_of_MiApp_UnicastAddress:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           postinc0	equ	0xFEE
  5320                           plusw0	equ	0xFEB
  5321                           wreg	equ	0xFE8
  5322                           indf1	equ	0xFE7
  5323                           postdec1	equ	0xFE5
  5324                           plusw1	equ	0xFE3
  5325                           fsr1h	equ	0xFE2
  5326                           fsr1l	equ	0xFE1
  5327                           indf2	equ	0xFDF
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           plusw2	equ	0xFDB
  5331                           fsr2h	equ	0xFDA
  5332                           fsr2l	equ	0xFD9
  5333                           status	equ	0xFD8
  5334                           
  5335 ;; *************** function _NetworkUnicastData *****************
  5336 ;; Defined at:
  5337 ;;		line 237 in file "../NetworkBridge.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  address         8  137[BANK0 ] struct addr_t_def
  5340 ;;  data            2  145[BANK0 ] PTR unsigned char 
  5341 ;;		 -> TxBuffer(64), 
  5342 ;;  size            2  147[BANK0 ] unsigned int 
  5343 ;;  isSecure        1  149[BANK0 ] unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  mAddress        2  150[BANK0 ] PTR struct addr_t_def
  5346 ;;		 -> MyAddress(8), 
  5347 ;;  res             1  152[BANK0 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      unsigned char 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : F/0
  5354 ;;		On exit  : F/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5357 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;Total ram usage:       16 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:   13
  5364 ;; This function calls:
  5365 ;;		_CoordinatorAddress
  5366 ;;		_CoordinatorGenericAddress
  5367 ;;		_DeviceManagerBufferDeviceData
  5368 ;;		_DeviceManagerGetDeviceType
  5369 ;;		_NetworkGetDeviceType
  5370 ;;		_NetworkManagerGetMyAddress
  5371 ;;		_TMSendDataToRFD
  5372 ;;		_TMSendFormedPacketTowardsCoordinator
  5373 ;;		_isSameAddress
  5374 ;; This function is called by:
  5375 ;;		_MiApp_UnicastAddress
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text9
  5380  003E50                     __ptext9:
  5381                           	opt stack 0
  5382  003E50                     _NetworkUnicastData:
  5383                           	opt stack 16
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;NetworkBridge.c: 239: bool res=0;
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;incstack = 0
  5390  003E50  6BF8               	clrf	NetworkUnicastData@res& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;NetworkBridge.c: 240: addr_t *mAddress=NetworkManagerGetMyAddress();
  5394  003E52  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
  5395  003E56  C060  F0F6         	movff	?_NetworkManagerGetMyAddress,NetworkUnicastData@mAddress
  5396  003E5A  C061  F0F7         	movff	?_NetworkManagerGetMyAddress+1,NetworkUnicastData@mAddress+1
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;NetworkBridge.c: 241: if(NetworkGetDeviceType()==DeviceCoordinator)
  5400  003E5E  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  5401  003E62  0900               	iorlw	0
  5402  003E64  E170               	bnz	l14605
  5403                           
  5404                           ;NetworkBridge.c: 242: {
  5405                           ;NetworkBridge.c: 243: if( (isSameAddress(address,*mAddress)==0) && (isSameAddress(addre
      +                          ss,CoordinatorGenericAddress())==0) )
  5406  003E66  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5407  003E6A  EE00  F070         	lfsr	0,isSameAddress@a1
  5408  003E6E  0E07               	movlw	7
  5409  003E70                     u22421:
  5410  003E70  CFDB FFEB          	movff	plusw2,plusw0
  5411  003E74  06E8               	decf	wreg,f,c
  5412  003E76  E2FC               	bc	u22421
  5413  003E78  C0F6  FFD9         	movff	NetworkUnicastData@mAddress,fsr2l
  5414  003E7C  C0F7  FFDA         	movff	NetworkUnicastData@mAddress+1,fsr2h
  5415  003E80  EE00  F078         	lfsr	0,isSameAddress@a2
  5416  003E84  0E07               	movlw	7
  5417  003E86                     u22431:
  5418  003E86  CFDB FFEB          	movff	plusw2,plusw0
  5419  003E8A  06E8               	decf	wreg,f,c
  5420  003E8C  E2FC               	bc	u22431
  5421  003E8E  ECC5  F03C         	call	_isSameAddress	;wreg free
  5422  003E92  0900               	iorlw	0
  5423  003E94  E001 D0B1          	bnz	l14613
  5424                           
  5425                           ; BSR set to: 0
  5426  003E98  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5427  003E9C  EE00  F070         	lfsr	0,isSameAddress@a1
  5428  003EA0  0E07               	movlw	7
  5429  003EA2                     u22451:
  5430  003EA2  CFDB FFEB          	movff	plusw2,plusw0
  5431  003EA6  06E8               	decf	wreg,f,c
  5432  003EA8  E2FC               	bc	u22451
  5433  003EAA  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
  5434  003EAE  CFE9 FFD9          	movff	fsr0l,fsr2l
  5435  003EB2  CFEA FFDA          	movff	fsr0h,fsr2h
  5436  003EB6  EE00  F078         	lfsr	0,isSameAddress@a2
  5437  003EBA  0E07               	movlw	7
  5438  003EBC                     u22461:
  5439  003EBC  CFDB FFEB          	movff	plusw2,plusw0
  5440  003EC0  06E8               	decf	wreg,f,c
  5441  003EC2  E2FC               	bc	u22461
  5442  003EC4  ECC5  F03C         	call	_isSameAddress	;wreg free
  5443  003EC8  0900               	iorlw	0
  5444  003ECA  E001 D096          	bnz	l14613
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;NetworkBridge.c: 244: {
  5448                           ;NetworkBridge.c: 246: if(DeviceManagerGetDeviceType(address)==DeviceSleepingRFD)
  5449  003ECE  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5450  003ED2  EE00  F080         	lfsr	0,DeviceManagerGetDeviceType@address
  5451  003ED6  0E07               	movlw	7
  5452  003ED8                     u22481:
  5453  003ED8  CFDB FFEB          	movff	plusw2,plusw0
  5454  003EDC  06E8               	decf	wreg,f,c
  5455  003EDE  E2FC               	bc	u22481
  5456  003EE0  EC31  F033         	call	_DeviceManagerGetDeviceType	;wreg free
  5457  003EE4  0A02               	xorlw	2
  5458  003EE6  E117               	bnz	l14603
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;NetworkBridge.c: 247: {
  5462                           ;NetworkBridge.c: 250: res=DeviceManagerBufferDeviceData(address,data,size,isSecure,0);
  5463  003EE8  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5464  003EEC  EE00  F06C         	lfsr	0,DeviceManagerBufferDeviceData@address
  5465  003EF0  0E07               	movlw	7
  5466  003EF2                     u22501:
  5467  003EF2  CFDB FFEB          	movff	plusw2,plusw0
  5468  003EF6  06E8               	decf	wreg,f,c
  5469  003EF8  E2FC               	bc	u22501
  5470  003EFA  C0F1  F074         	movff	NetworkUnicastData@data,DeviceManagerBufferDeviceData@data
  5471  003EFE  C0F2  F075         	movff	NetworkUnicastData@data+1,DeviceManagerBufferDeviceData@data+1
  5472  003F02  C0F3  F076         	movff	NetworkUnicastData@size,DeviceManagerBufferDeviceData@size
  5473  003F06  C0F4  F077         	movff	NetworkUnicastData@size+1,DeviceManagerBufferDeviceData@size+1
  5474  003F0A  C0F5  F078         	movff	NetworkUnicastData@isSecure,DeviceManagerBufferDeviceData@isSecure
  5475  003F0E  6B79               	clrf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  5476  003F10  EC13  F03E         	call	_DeviceManagerBufferDeviceData	;wreg free
  5477  003F14  D071               	goto	L2
  5478  003F16                     l14603:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;NetworkBridge.c: 253: {
  5482                           ;NetworkBridge.c: 254: res=TMSendDataToRFD(address,PacketData,data,size, isSecure);
  5483  003F16  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5484  003F1A  EE00  F0DB         	lfsr	0,TMSendDataToRFD@device
  5485  003F1E  0E07               	movlw	7
  5486  003F20                     u22511:
  5487  003F20  CFDB FFEB          	movff	plusw2,plusw0
  5488  003F24  06E8               	decf	wreg,f,c
  5489  003F26  E2FC               	bc	u22511
  5490  003F28  0E23               	movlw	35
  5491  003F2A  6FE3               	movwf	TMSendDataToRFD@pType& (0+255),b
  5492  003F2C  C0F1  F0E4         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5493  003F30  C0F2  F0E5         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5494  003F34  C0F3  F0E6         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5495  003F38  C0F4  F0E7         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5496  003F3C  C0F5  F0E8         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5497  003F40  EC31  F036         	call	_TMSendDataToRFD	;wreg free
  5498  003F44  D059               	goto	L2
  5499  003F46                     l14605:
  5500                           
  5501                           ;NetworkBridge.c: 258: {
  5502                           ;NetworkBridge.c: 259: if( (isSameAddress(address,CoordinatorAddress())==1) || (isSameAd
      +                          dress(address,CoordinatorGenericAddress())==1) )
  5503  003F46  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5504  003F4A  EE00  F070         	lfsr	0,isSameAddress@a1
  5505  003F4E  0E07               	movlw	7
  5506  003F50                     u22521:
  5507  003F50  CFDB FFEB          	movff	plusw2,plusw0
  5508  003F54  06E8               	decf	wreg,f,c
  5509  003F56  E2FC               	bc	u22521
  5510  003F58  ECD0  F03D         	call	_CoordinatorAddress	;wreg free
  5511  003F5C  CFE9 FFD9          	movff	fsr0l,fsr2l
  5512  003F60  CFEA FFDA          	movff	fsr0h,fsr2h
  5513  003F64  EE00  F078         	lfsr	0,isSameAddress@a2
  5514  003F68  0E07               	movlw	7
  5515  003F6A                     u22531:
  5516  003F6A  CFDB FFEB          	movff	plusw2,plusw0
  5517  003F6E  06E8               	decf	wreg,f,c
  5518  003F70  E2FC               	bc	u22531
  5519  003F72  ECC5  F03C         	call	_isSameAddress	;wreg free
  5520  003F76  06E8               	decf	wreg,f,c
  5521  003F78  E01A               	bz	l14609
  5522                           
  5523                           ; BSR set to: 0
  5524  003F7A  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5525  003F7E  EE00  F070         	lfsr	0,isSameAddress@a1
  5526  003F82  0E07               	movlw	7
  5527  003F84                     u22551:
  5528  003F84  CFDB FFEB          	movff	plusw2,plusw0
  5529  003F88  06E8               	decf	wreg,f,c
  5530  003F8A  E2FC               	bc	u22551
  5531  003F8C  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
  5532  003F90  CFE9 FFD9          	movff	fsr0l,fsr2l
  5533  003F94  CFEA FFDA          	movff	fsr0h,fsr2h
  5534  003F98  EE00  F078         	lfsr	0,isSameAddress@a2
  5535  003F9C  0E07               	movlw	7
  5536  003F9E                     u22561:
  5537  003F9E  CFDB FFEB          	movff	plusw2,plusw0
  5538  003FA2  06E8               	decf	wreg,f,c
  5539  003FA4  E2FC               	bc	u22561
  5540  003FA6  ECC5  F03C         	call	_isSameAddress	;wreg free
  5541  003FAA  06E8               	decf	wreg,f,c
  5542  003FAC  E10E               	bnz	l14611
  5543  003FAE                     l14609:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;NetworkBridge.c: 260: {
  5547                           ;NetworkBridge.c: 261: res=TMSendFormedPacketTowardsCoordinator(data,size,0, isSecure);
  5548  003FAE  C0F1  F083         	movff	NetworkUnicastData@data,TMSendFormedPacketTowardsCoordinator@data
  5549  003FB2  C0F2  F084         	movff	NetworkUnicastData@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  5550  003FB6  C0F3  F085         	movff	NetworkUnicastData@size,TMSendFormedPacketTowardsCoordinator@size
  5551  003FBA  C0F4  F086         	movff	NetworkUnicastData@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  5552  003FBE  6B87               	clrf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  5553  003FC0  C0F5  F088         	movff	NetworkUnicastData@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  5554  003FC4  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  5555  003FC8  D017               	goto	L2
  5556  003FCA                     l14611:
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;NetworkBridge.c: 263: {
  5560                           ;NetworkBridge.c: 264: res=TMSendDataToRFD(address,PacketRoutedData,data,size, isSecure)
      +                          ;
  5561  003FCA  EE20  F0E9         	lfsr	2,NetworkUnicastData@address
  5562  003FCE  EE00  F0DB         	lfsr	0,TMSendDataToRFD@device
  5563  003FD2  0E07               	movlw	7
  5564  003FD4                     u22581:
  5565  003FD4  CFDB FFEB          	movff	plusw2,plusw0
  5566  003FD8  06E8               	decf	wreg,f,c
  5567  003FDA  E2FC               	bc	u22581
  5568  003FDC  0E26               	movlw	38
  5569  003FDE  6FE3               	movwf	TMSendDataToRFD@pType& (0+255),b
  5570  003FE0  C0F1  F0E4         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  5571  003FE4  C0F2  F0E5         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  5572  003FE8  C0F3  F0E6         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  5573  003FEC  C0F4  F0E7         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  5574  003FF0  C0F5  F0E8         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  5575  003FF4  EC31  F036         	call	_TMSendDataToRFD	;wreg free
  5576  003FF8                     L2:
  5577  003FF8  6FF8               	movwf	NetworkUnicastData@res& (0+255),b
  5578  003FFA                     l14613:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;NetworkBridge.c: 265: }
  5582                           ;NetworkBridge.c: 266: }
  5583                           ;NetworkBridge.c: 267: return(res);
  5584  003FFA  51F8               	movf	NetworkUnicastData@res& (0+255),w,b
  5585                           
  5586                           ; BSR set to: 0
  5587  003FFC  0012               	return		;funcret
  5588  003FFE                     __end_of_NetworkUnicastData:
  5589                           	opt stack 0
  5590                           tblptru	equ	0xFF8
  5591                           tblptrh	equ	0xFF7
  5592                           tblptrl	equ	0xFF6
  5593                           tablat	equ	0xFF5
  5594                           prodh	equ	0xFF4
  5595                           prodl	equ	0xFF3
  5596                           postinc0	equ	0xFEE
  5597                           plusw0	equ	0xFEB
  5598                           fsr0h	equ	0xFEA
  5599                           fsr0l	equ	0xFE9
  5600                           wreg	equ	0xFE8
  5601                           indf1	equ	0xFE7
  5602                           postdec1	equ	0xFE5
  5603                           plusw1	equ	0xFE3
  5604                           fsr1h	equ	0xFE2
  5605                           fsr1l	equ	0xFE1
  5606                           indf2	equ	0xFDF
  5607                           postinc2	equ	0xFDE
  5608                           postdec2	equ	0xFDD
  5609                           plusw2	equ	0xFDB
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _MiApp_TransceiverPowerState *****************
  5615 ;; Defined at:
  5616 ;;		line 419 in file "../src/Bridge.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  Mode            1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  Mode            1   31[BANK0 ] unsigned char 
  5621 ;;  res             1    0        unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      unsigned char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : D/1
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;Total ram usage:        2 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    9
  5638 ;; This function calls:
  5639 ;;		_MiMAC_PowerState
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text10
  5646  007B8C                     __ptext10:
  5647                           	opt stack 0
  5648  007B8C                     _MiApp_TransceiverPowerState:
  5649                           	opt stack 21
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;incstack = 0
  5653                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  5654  007B8C  0100               	movlb	0	; () banked
  5655  007B8E  6F7F               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  5656                           
  5657                           ;Bridge.c: 421: uint8_t res;
  5658                           ;Bridge.c: 422: if(Mode==0x00)
  5659  007B90  517F               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  5660  007B92  E103               	bnz	l15285
  5661                           
  5662                           ; BSR set to: 0
  5663  007B94  0E00               	movlw	0
  5664  007B96  EF84  F029         	goto	_MiMAC_PowerState
  5665  007B9A                     l15285:
  5666                           
  5667                           ; BSR set to: 0
  5668  007B9A  0EFF               	movlw	255
  5669  007B9C  EF84  F029         	goto	_MiMAC_PowerState
  5670  007BA0                     __end_of_MiApp_TransceiverPowerState:
  5671                           	opt stack 0
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           postinc0	equ	0xFEE
  5679                           plusw0	equ	0xFEB
  5680                           fsr0h	equ	0xFEA
  5681                           fsr0l	equ	0xFE9
  5682                           wreg	equ	0xFE8
  5683                           indf1	equ	0xFE7
  5684                           postdec1	equ	0xFE5
  5685                           plusw1	equ	0xFE3
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           postdec2	equ	0xFDD
  5691                           plusw2	equ	0xFDB
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function _MiMAC_PowerState *****************
  5697 ;; Defined at:
  5698 ;;		line 1224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  PowerState      1    wreg     unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  PowerState      1   20[BANK0 ] unsigned char 
  5703 ;;  t2              4   26[BANK0 ] struct MIWI_TICK_t
  5704 ;;  t1              4   21[BANK0 ] struct MIWI_TICK_t
  5705 ;;  results         1   25[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      unsigned char 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : F/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;Total ram usage:       10 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    8
  5722 ;; This function calls:
  5723 ;;		_InitMRF24J40
  5724 ;;		_MiMAC_SetAltAddress
  5725 ;;		_MiWi_TickGetMs
  5726 ;;		_PHYGetLongRAMAddr
  5727 ;;		_PHYGetShortRAMAddr
  5728 ;;		_PHYSetShortRAMAddr
  5729 ;; This function is called by:
  5730 ;;		_MiApp_TransceiverPowerState
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text11
  5735  005308                     __ptext11:
  5736                           	opt stack 0
  5737  005308                     _MiMAC_PowerState:
  5738                           	opt stack 21
  5739                           
  5740                           ;incstack = 0
  5741                           ;MiMAC_PowerState@PowerState stored from wreg
  5742  005308  6F74               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  5743                           
  5744                           ;drv_mrf_miwi_mesh_24j40.c: 1226: switch(PowerState)
  5745  00530A  D089               	goto	l14671
  5746  00530C                     l871:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;drv_mrf_miwi_mesh_24j40.c: 1229: {
  5750                           ;drv_mrf_miwi_mesh_24j40.c: 1231: LATDbits.LATD1 = 0;
  5751  00530C  928C               	bcf	3980,1,c	;volatile
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;drv_mrf_miwi_mesh_24j40.c: 1240: PHYSetShortRAMAddr((0x55), 0x04);
  5755  00530E  0E04               	movlw	4
  5756  005310  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
  5757  005312  0E55               	movlw	85
  5758  005314  EC34  F03C         	call	_PHYSetShortRAMAddr
  5759                           
  5760                           ;drv_mrf_miwi_mesh_24j40.c: 1243: PHYSetShortRAMAddr((0x45),0x80);
  5761  005318  0E80               	movlw	128
  5762  00531A  0100               	movlb	0	; () banked
  5763  00531C  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
  5764  00531E  0E45               	movlw	69
  5765  005320  EC34  F03C         	call	_PHYSetShortRAMAddr
  5766                           
  5767                           ;drv_mrf_miwi_mesh_24j40.c: 1244: PHYSetShortRAMAddr((0x1B),0x60);
  5768  005324  0E60               	movlw	96
  5769  005326  0100               	movlb	0	; () banked
  5770  005328  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
  5771  00532A  0E1B               	movlw	27
  5772  00532C  EC34  F03C         	call	_PHYSetShortRAMAddr
  5773                           
  5774                           ;drv_mrf_miwi_mesh_24j40.c: 1245: PHYSetShortRAMAddr((0x6B),0x80);
  5775  005330  0E80               	movlw	128
  5776  005332  0100               	movlb	0	; () banked
  5777  005334  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
  5778  005336  0E6B               	movlw	107
  5779  005338  EC34  F03C         	call	_PHYSetShortRAMAddr
  5780                           
  5781                           ;drv_mrf_miwi_mesh_24j40.c: 1246: }
  5782                           ;drv_mrf_miwi_mesh_24j40.c: 1247: break;
  5783  00533C  0C01               	retlw	1
  5784  00533E                     l873:
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;drv_mrf_miwi_mesh_24j40.c: 1250: {
  5788                           ;drv_mrf_miwi_mesh_24j40.c: 1255: uint8_t results;
  5789                           ;drv_mrf_miwi_mesh_24j40.c: 1256: MIWI_TICK t1, t2;
  5790                           ;drv_mrf_miwi_mesh_24j40.c: 1259: LATDbits.LATD1 = 1;
  5791  00533E  828C               	bsf	3980,1,c	;volatile
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;drv_mrf_miwi_mesh_24j40.c: 1261: t1 = MiWi_TickGetMs();
  5795  005340  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  5796  005344  C06C  F075         	movff	?_MiWi_TickGetMs,MiMAC_PowerState@t1
  5797  005348  C06D  F076         	movff	?_MiWi_TickGetMs+1,MiMAC_PowerState@t1+1
  5798  00534C  C06E  F077         	movff	?_MiWi_TickGetMs+2,MiMAC_PowerState@t1+2
  5799  005350  C06F  F078         	movff	?_MiWi_TickGetMs+3,MiMAC_PowerState@t1+3
  5800  005354                     l874:
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;drv_mrf_miwi_mesh_24j40.c: 1264: {
  5804                           ;drv_mrf_miwi_mesh_24j40.c: 1265: t2 = MiWi_TickGetMs();
  5805  005354  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  5806  005358  C06C  F07A         	movff	?_MiWi_TickGetMs,MiMAC_PowerState@t2
  5807  00535C  C06D  F07B         	movff	?_MiWi_TickGetMs+1,MiMAC_PowerState@t2+1
  5808  005360  C06E  F07C         	movff	?_MiWi_TickGetMs+2,MiMAC_PowerState@t2+2
  5809  005364  C06F  F07D         	movff	?_MiWi_TickGetMs+3,MiMAC_PowerState@t2+3
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;drv_mrf_miwi_mesh_24j40.c: 1266: t2.Val = (t2.Val - t1.Val);
  5813  005368  5175               	movf	MiMAC_PowerState@t1& (0+255),w,b
  5814  00536A  5F7A               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  5815  00536C  5176               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  5816  00536E  5B7B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  5817  005370  5177               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  5818  005372  5B7C               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  5819  005374  5178               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  5820  005376  5B7D               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;drv_mrf_miwi_mesh_24j40.c: 1269: if( t2.Val > 100)
  5824  005378  517D               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  5825  00537A  117C               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  5826  00537C  117B               	iorwf	(MiMAC_PowerState@t2+1)& (0+255),w,b
  5827  00537E  E103               	bnz	u22600
  5828  005380  0E65               	movlw	101
  5829  005382  5D7A               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  5830  005384  E30B               	bnc	l14641
  5831  005386                     u22600:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;drv_mrf_miwi_mesh_24j40.c: 1270: {
  5835                           ;drv_mrf_miwi_mesh_24j40.c: 1271: InitMRF24J40();
  5836  005386  ECFF  F01F         	call	_InitMRF24J40	;wreg free
  5837                           
  5838                           ;drv_mrf_miwi_mesh_24j40.c: 1273: MiMAC_SetAltAddress((uint8_t*)&myNetworkAddress, (uint
      +                          8_t*)&MAC_PANID);
  5839  00538A  0E53               	movlw	low _myNetworkAddress
  5840  00538C  0100               	movlb	0	; () banked
  5841  00538E  6F6C               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
  5842  005390  6B6D               	clrf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
  5843  005392  0E51               	movlw	low _MAC_PANID
  5844  005394  6F6E               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
  5845  005396  EC91  F038         	call	_MiMAC_SetAltAddress	;wreg free
  5846                           
  5847                           ;drv_mrf_miwi_mesh_24j40.c: 1274: break;
  5848  00539A  D006               	goto	l14647
  5849  00539C                     l14641:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;drv_mrf_miwi_mesh_24j40.c: 1275: }
  5853                           ;drv_mrf_miwi_mesh_24j40.c: 1277: results = PHYGetShortRAMAddr((0x62));
  5854  00539C  0E62               	movlw	98
  5855  00539E  ECD7  F03B         	call	_PHYGetShortRAMAddr
  5856  0053A2  6F79               	movwf	MiMAC_PowerState@results& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;drv_mrf_miwi_mesh_24j40.c: 1278: if((results & 0x40) != 0x00)
  5860  0053A4  AD79               	btfss	MiMAC_PowerState@results& (0+255),6,b
  5861  0053A6  D7D6               	goto	l874
  5862  0053A8                     l14647:
  5863                           
  5864                           ;drv_mrf_miwi_mesh_24j40.c: 1285: {
  5865                           ;drv_mrf_miwi_mesh_24j40.c: 1286: t2 = MiWi_TickGetMs();
  5866  0053A8  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  5867  0053AC  C06C  F07A         	movff	?_MiWi_TickGetMs,MiMAC_PowerState@t2
  5868  0053B0  C06D  F07B         	movff	?_MiWi_TickGetMs+1,MiMAC_PowerState@t2+1
  5869  0053B4  C06E  F07C         	movff	?_MiWi_TickGetMs+2,MiMAC_PowerState@t2+2
  5870  0053B8  C06F  F07D         	movff	?_MiWi_TickGetMs+3,MiMAC_PowerState@t2+3
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;drv_mrf_miwi_mesh_24j40.c: 1287: t2.Val = (t2.Val - t1.Val);
  5874  0053BC  5175               	movf	MiMAC_PowerState@t1& (0+255),w,b
  5875  0053BE  5F7A               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  5876  0053C0  5176               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  5877  0053C2  5B7B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  5878  0053C4  5177               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  5879  0053C6  5B7C               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  5880  0053C8  5178               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  5881  0053CA  5B7D               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;drv_mrf_miwi_mesh_24j40.c: 1290: if( t2.Val > 100 )
  5885  0053CC  517D               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  5886  0053CE  117C               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  5887  0053D0  117B               	iorwf	(MiMAC_PowerState@t2+1)& (0+255),w,b
  5888  0053D2  E103               	bnz	u22620
  5889  0053D4  0E65               	movlw	101
  5890  0053D6  5D7A               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  5891  0053D8  E30B               	bnc	l14657
  5892  0053DA                     u22620:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;drv_mrf_miwi_mesh_24j40.c: 1291: {
  5896                           ;drv_mrf_miwi_mesh_24j40.c: 1292: InitMRF24J40();
  5897  0053DA  ECFF  F01F         	call	_InitMRF24J40	;wreg free
  5898                           
  5899                           ;drv_mrf_miwi_mesh_24j40.c: 1294: MiMAC_SetAltAddress((uint8_t*)&myNetworkAddress, (uint
      +                          8_t*)&MAC_PANID);
  5900  0053DE  0E53               	movlw	low _myNetworkAddress
  5901  0053E0  0100               	movlb	0	; () banked
  5902  0053E2  6F6C               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
  5903  0053E4  6B6D               	clrf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
  5904  0053E6  0E51               	movlw	low _MAC_PANID
  5905  0053E8  6F6E               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
  5906  0053EA  EC91  F038         	call	_MiMAC_SetAltAddress	;wreg free
  5907                           
  5908                           ;drv_mrf_miwi_mesh_24j40.c: 1295: break;
  5909  0053EE  D00B               	goto	l14663
  5910  0053F0                     l14657:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;drv_mrf_miwi_mesh_24j40.c: 1296: }
  5914                           ;drv_mrf_miwi_mesh_24j40.c: 1298: results = PHYGetLongRAMAddr((0x20f));
  5915  0053F0  0E02               	movlw	2
  5916  0053F2  6F63               	movwf	(PHYGetLongRAMAddr@address+1)& (0+255),b
  5917  0053F4  0E0F               	movlw	15
  5918  0053F6  6F62               	movwf	PHYGetLongRAMAddr@address& (0+255),b
  5919  0053F8  EC10  F038         	call	_PHYGetLongRAMAddr	;wreg free
  5920  0053FC  6F79               	movwf	MiMAC_PowerState@results& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;drv_mrf_miwi_mesh_24j40.c: 1299: if( (results & 0xE0) == 0xA0 )
  5924  0053FE  5179               	movf	MiMAC_PowerState@results& (0+255),w,b
  5925  005400  0BE0               	andlw	224
  5926  005402  0AA0               	xorlw	160
  5927  005404  E1D1               	bnz	l14647
  5928  005406                     l14663:
  5929                           
  5930                           ;drv_mrf_miwi_mesh_24j40.c: 1302: }
  5931                           ;drv_mrf_miwi_mesh_24j40.c: 1304: }
  5932                           ;drv_mrf_miwi_mesh_24j40.c: 1306: PHYSetShortRAMAddr((0x6D), 0x04);
  5933  005406  0E04               	movlw	4
  5934  005408  0100               	movlb	0	; () banked
  5935  00540A  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
  5936  00540C  0E6D               	movlw	109
  5937  00540E  EC34  F03C         	call	_PHYSetShortRAMAddr
  5938                           
  5939                           ;drv_mrf_miwi_mesh_24j40.c: 1307: PHYSetShortRAMAddr((0x6D), 0x00);
  5940  005412  0100               	movlb	0	; () banked
  5941  005414  6B62               	clrf	PHYSetShortRAMAddr@value& (0+255),b
  5942  005416  0E6D               	movlw	109
  5943  005418  EC34  F03C         	call	_PHYSetShortRAMAddr
  5944                           
  5945                           ;drv_mrf_miwi_mesh_24j40.c: 1328: }
  5946                           ;drv_mrf_miwi_mesh_24j40.c: 1329: break;
  5947  00541C  0C01               	retlw	1
  5948  00541E                     l14671:
  5949  00541E  0100               	movlb	0	; () banked
  5950  005420  5174               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  5951                           
  5952                           ; Switch size 1, requested type "speed"
  5953                           ; Number of cases is 2, Range of values is 0 to 255
  5954                           ; switch strategies available:
  5955                           ; Name         Instructions Cycles
  5956                           ; simple_byte            7     4 (average)
  5957                           ;	Chosen strategy is simple_byte
  5958  005422  E101 D773          	bz	l871
  5959  005426  0AFF               	xorlw	255	; case 255
  5960  005428  A4D8               	btfss	status,2,c
  5961  00542A  0C00               	retlw	0
  5962  00542C  D788               	goto	l873
  5963  00542E                     __end_of_MiMAC_PowerState:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           postinc0	equ	0xFEE
  5972                           plusw0	equ	0xFEB
  5973                           fsr0h	equ	0xFEA
  5974                           fsr0l	equ	0xFE9
  5975                           wreg	equ	0xFE8
  5976                           indf1	equ	0xFE7
  5977                           postdec1	equ	0xFE5
  5978                           plusw1	equ	0xFE3
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           plusw2	equ	0xFDB
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _MiApp_SearchConnection *****************
  5990 ;; Defined at:
  5991 ;;		line 344 in file "../src/Bridge.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  ScanDuartion    1    wreg     unsigned char 
  5994 ;;  ChannelMap      4  188[BANK1 ] unsigned long 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  ScanDuartion    1  204[BANK1 ] unsigned char 
  5997 ;;  mask            4  207[BANK1 ] unsigned long 
  5998 ;;  tStart          4  200[BANK1 ] struct MIWI_TICK_t
  5999 ;;  msDuration      2  205[BANK1 ] unsigned int 
  6000 ;;  i               1  212[BANK1 ] unsigned char 
  6001 ;;  res             1  211[BANK1 ] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      unsigned char 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : F/1
  6008 ;;		On exit  : F/1
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6011 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6015 ;;Total ram usage:       25 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:   16
  6018 ;; This function calls:
  6019 ;;		_MiApp_DiscardMessage
  6020 ;;		_MiApp_MessageAvailable
  6021 ;;		_MiApp_SetChannel
  6022 ;;		_MiWi_TickGetMs
  6023 ;;		_NetworkSendDiscoverRequest
  6024 ;;		_memset
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text12
  6031  00542E                     __ptext12:
  6032                           	opt stack 0
  6033  00542E                     _MiApp_SearchConnection:
  6034                           	opt stack 14
  6035                           
  6036                           ;incstack = 0
  6037                           ;MiApp_SearchConnection@ScanDuartion stored from wreg
  6038  00542E  6FCC               	movwf	MiApp_SearchConnection@ScanDuartion& (0+255),b
  6039                           
  6040                           ;Bridge.c: 346: uint8_t res=0xff;
  6041  005430  0101               	movlb	1	; () banked
  6042  005432  69D3               	setf	MiApp_SearchConnection@res& (0+255),b
  6043                           
  6044                           ; BSR set to: 1
  6045                           ;Bridge.c: 347: uint8_t i;
  6046                           ;Bridge.c: 348: MIWI_TICK tStart;
  6047                           ;Bridge.c: 349: uint32_t mask=(1<<1);
  6048  005434  0E02               	movlw	2
  6049  005436  6FCF               	movwf	MiApp_SearchConnection@mask& (0+255),b
  6050  005438  6BD0               	clrf	(MiApp_SearchConnection@mask+1)& (0+255),b
  6051  00543A  6BD1               	clrf	(MiApp_SearchConnection@mask+2)& (0+255),b
  6052  00543C  6BD2               	clrf	(MiApp_SearchConnection@mask+3)& (0+255),b
  6053                           
  6054                           ; BSR set to: 1
  6055                           ;Bridge.c: 350: uint16_t msDuration=((uint16_t)ScanDuartion)<<5;
  6056  00543E  51CC               	movf	MiApp_SearchConnection@ScanDuartion& (0+255),w,b
  6057  005440  6FC0               	movwf	??_MiApp_SearchConnection& (0+255),b
  6058  005442  6BC1               	clrf	(??_MiApp_SearchConnection+1)& (0+255),b
  6059  005444  0E05               	movlw	5
  6060  005446                     u23375:
  6061  005446  90D8               	bcf	status,0,c
  6062  005448  37C0               	rlcf	??_MiApp_SearchConnection& (0+255),f,b
  6063  00544A  37C1               	rlcf	(??_MiApp_SearchConnection+1)& (0+255),f,b
  6064  00544C  2EE8               	decfsz	wreg,f,c
  6065  00544E  D7FB               	goto	u23375
  6066  005450  C1C0  F1CD         	movff	??_MiApp_SearchConnection,MiApp_SearchConnection@msDuration
  6067  005454  C1C1  F1CE         	movff	??_MiApp_SearchConnection+1,MiApp_SearchConnection@msDuration+1
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;Bridge.c: 351: memset(ActiveScanResults,0x00,sizeof(ActiveScanResults));
  6071  005458  0E60               	movlw	low _ActiveScanResults
  6072  00545A  0100               	movlb	0	; () banked
  6073  00545C  6F60               	movwf	memset@p1& (0+255),b
  6074  00545E  0E02               	movlw	high _ActiveScanResults
  6075  005460  6F61               	movwf	(memset@p1+1)& (0+255),b
  6076  005462  6B63               	clrf	(memset@c+1)& (0+255),b
  6077  005464  6B62               	clrf	memset@c& (0+255),b
  6078  005466  6B65               	clrf	(memset@n+1)& (0+255),b
  6079  005468  0E19               	movlw	25
  6080  00546A  6F64               	movwf	memset@n& (0+255),b
  6081  00546C  EC61  F03C         	call	_memset	;wreg free
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;Bridge.c: 352: for(i=1;i<32;i++)
  6085  005470  0E01               	movlw	1
  6086  005472  0101               	movlb	1	; () banked
  6087  005474  6FD4               	movwf	MiApp_SearchConnection@i& (0+255),b
  6088  005476                     l15215:
  6089                           
  6090                           ; BSR set to: 1
  6091                           ;Bridge.c: 353: {
  6092                           ;Bridge.c: 354: if((mask & ChannelMap)>0)
  6093  005476  51BC               	movf	MiApp_SearchConnection@ChannelMap& (0+255),w,b
  6094  005478  15CF               	andwf	MiApp_SearchConnection@mask& (0+255),w,b
  6095  00547A  6FC0               	movwf	??_MiApp_SearchConnection& (0+255),b
  6096  00547C  51BD               	movf	(MiApp_SearchConnection@ChannelMap+1)& (0+255),w,b
  6097  00547E  15D0               	andwf	(MiApp_SearchConnection@mask+1)& (0+255),w,b
  6098  005480  6FC1               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  6099  005482  51BE               	movf	(MiApp_SearchConnection@ChannelMap+2)& (0+255),w,b
  6100  005484  15D1               	andwf	(MiApp_SearchConnection@mask+2)& (0+255),w,b
  6101  005486  6FC2               	movwf	(??_MiApp_SearchConnection+2)& (0+255),b
  6102  005488  51BF               	movf	(MiApp_SearchConnection@ChannelMap+3)& (0+255),w,b
  6103  00548A  15D2               	andwf	(MiApp_SearchConnection@mask+3)& (0+255),w,b
  6104  00548C  6FC3               	movwf	(??_MiApp_SearchConnection+3)& (0+255),b
  6105  00548E  51C0               	movf	??_MiApp_SearchConnection& (0+255),w,b
  6106  005490  11C1               	iorwf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  6107  005492  11C2               	iorwf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  6108  005494  11C3               	iorwf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  6109  005496  E03F               	bz	l15231
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;Bridge.c: 355: {
  6113                           ;Bridge.c: 356: ActiveScanChannel=i;
  6114  005498  C1D4  F1DE         	movff	MiApp_SearchConnection@i,_ActiveScanChannel
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;Bridge.c: 357: MiApp_SetChannel(ActiveScanChannel);
  6118  00549C  51DE               	movf	_ActiveScanChannel& (0+255),w,b
  6119  00549E  EC03  F03E         	call	_MiApp_SetChannel
  6120                           
  6121                           ;Bridge.c: 358: NetworkSendDiscoverRequest();
  6122  0054A2  EC93  F035         	call	_NetworkSendDiscoverRequest	;wreg free
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;Bridge.c: 359: tStart=MiWi_TickGetMs();
  6126  0054A6  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  6127  0054AA  C06C  F1C8         	movff	?_MiWi_TickGetMs,MiApp_SearchConnection@tStart
  6128  0054AE  C06D  F1C9         	movff	?_MiWi_TickGetMs+1,MiApp_SearchConnection@tStart+1
  6129  0054B2  C06E  F1CA         	movff	?_MiWi_TickGetMs+2,MiApp_SearchConnection@tStart+2
  6130  0054B6  C06F  F1CB         	movff	?_MiWi_TickGetMs+3,MiApp_SearchConnection@tStart+3
  6131  0054BA                     l15225:
  6132                           
  6133                           ;Bridge.c: 361: {
  6134                           ;Bridge.c: 362: if(MiApp_MessageAvailable())
  6135  0054BA  EC3B  F02B         	call	_MiApp_MessageAvailable	;wreg free
  6136  0054BE  0900               	iorlw	0
  6137  0054C0  E002               	bz	l624
  6138                           
  6139                           ; BSR set to: 1
  6140                           ;Bridge.c: 363: {
  6141                           ;Bridge.c: 364: MiApp_DiscardMessage();
  6142  0054C2  EC36  F03E         	call	_MiApp_DiscardMessage	;wreg free
  6143  0054C6                     l624:
  6144                           
  6145                           ; BSR set to: 1
  6146  0054C6  0004               	clrwdt		;# 
  6147                           
  6148                           ;Bridge.c: 367: }while((MiWi_TickGetMs().Val - tStart.Val)<msDuration);
  6149  0054C8  0101               	movlb	1	; () banked
  6150  0054CA  51CD               	movf	MiApp_SearchConnection@msDuration& (0+255),w,b
  6151  0054CC  6FC0               	movwf	??_MiApp_SearchConnection& (0+255),b
  6152  0054CE  51CE               	movf	(MiApp_SearchConnection@msDuration+1)& (0+255),w,b
  6153  0054D0  6FC1               	movwf	(??_MiApp_SearchConnection+1)& (0+255),b
  6154  0054D2  6BC2               	clrf	(??_MiApp_SearchConnection+2)& (0+255),b
  6155  0054D4  6BC3               	clrf	(??_MiApp_SearchConnection+3)& (0+255),b
  6156  0054D6  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  6157  0054DA  0101               	movlb	1	; () banked
  6158  0054DC  51C8               	movf	MiApp_SearchConnection@tStart& (0+255),w,b
  6159  0054DE  0100               	movlb	0	; () banked
  6160  0054E0  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  6161  0054E2  0101               	movlb	1	; () banked
  6162  0054E4  6FC4               	movwf	(??_MiApp_SearchConnection+4)& (0+255),b
  6163  0054E6  51C9               	movf	(MiApp_SearchConnection@tStart+1)& (0+255),w,b
  6164  0054E8  0100               	movlb	0	; () banked
  6165  0054EA  596D               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  6166  0054EC  0101               	movlb	1	; () banked
  6167  0054EE  6FC5               	movwf	(??_MiApp_SearchConnection+5)& (0+255),b
  6168  0054F0  51CA               	movf	(MiApp_SearchConnection@tStart+2)& (0+255),w,b
  6169  0054F2  0100               	movlb	0	; () banked
  6170  0054F4  596E               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  6171  0054F6  0101               	movlb	1	; () banked
  6172  0054F8  6FC6               	movwf	(??_MiApp_SearchConnection+6)& (0+255),b
  6173  0054FA  51CB               	movf	(MiApp_SearchConnection@tStart+3)& (0+255),w,b
  6174  0054FC  0100               	movlb	0	; () banked
  6175  0054FE  596F               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  6176  005500  0101               	movlb	1	; () banked
  6177  005502  6FC7               	movwf	(??_MiApp_SearchConnection+7)& (0+255),b
  6178  005504  51C0               	movf	??_MiApp_SearchConnection& (0+255),w,b
  6179  005506  5DC4               	subwf	(??_MiApp_SearchConnection+4)& (0+255),w,b
  6180  005508  51C1               	movf	(??_MiApp_SearchConnection+1)& (0+255),w,b
  6181  00550A  59C5               	subwfb	(??_MiApp_SearchConnection+5)& (0+255),w,b
  6182  00550C  51C2               	movf	(??_MiApp_SearchConnection+2)& (0+255),w,b
  6183  00550E  59C6               	subwfb	(??_MiApp_SearchConnection+6)& (0+255),w,b
  6184  005510  51C3               	movf	(??_MiApp_SearchConnection+3)& (0+255),w,b
  6185  005512  59C7               	subwfb	(??_MiApp_SearchConnection+7)& (0+255),w,b
  6186  005514  E3D2               	bnc	l15225
  6187  005516                     l15231:
  6188                           
  6189                           ; BSR set to: 1
  6190                           ;Bridge.c: 368: }
  6191                           ;Bridge.c: 369: mask<<=1;
  6192  005516  90D8               	bcf	status,0,c
  6193  005518  37CF               	rlcf	MiApp_SearchConnection@mask& (0+255),f,b
  6194  00551A  37D0               	rlcf	(MiApp_SearchConnection@mask+1)& (0+255),f,b
  6195  00551C  37D1               	rlcf	(MiApp_SearchConnection@mask+2)& (0+255),f,b
  6196  00551E  37D2               	rlcf	(MiApp_SearchConnection@mask+3)& (0+255),f,b
  6197  005520  2BD4               	incf	MiApp_SearchConnection@i& (0+255),f,b
  6198                           
  6199                           ; BSR set to: 1
  6200  005522  0E1F               	movlw	31
  6201  005524  65D4               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  6202  005526  D7A7               	goto	l15215
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;Bridge.c: 370: }
  6206                           ;Bridge.c: 371: for(i=0;i<5;i++)
  6207  005528  6BD4               	clrf	MiApp_SearchConnection@i& (0+255),b
  6208  00552A                     l15239:
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;Bridge.c: 372: {
  6212                           ;Bridge.c: 373: if(ActiveScanResults[i].Flags==0)
  6213  00552A  51D4               	movf	MiApp_SearchConnection@i& (0+255),w,b
  6214  00552C  0D05               	mullw	5
  6215  00552E  0E64               	movlw	low (_ActiveScanResults+4)
  6216  005530  24F3               	addwf	prodl,w,c
  6217  005532  6ED9               	movwf	fsr2l,c
  6218  005534  0E02               	movlw	high (_ActiveScanResults+4)
  6219  005536  20F4               	addwfc	prodh,w,c
  6220  005538  6EDA               	movwf	fsr2h,c
  6221  00553A  50DF               	movf	indf2,w,c
  6222  00553C  E004               	bz	l15247
  6223                           
  6224                           ; BSR set to: 1
  6225  00553E  2BD4               	incf	MiApp_SearchConnection@i& (0+255),f,b
  6226                           
  6227                           ; BSR set to: 1
  6228  005540  0E04               	movlw	4
  6229  005542  65D4               	cpfsgt	MiApp_SearchConnection@i& (0+255),b
  6230  005544  D7F2               	goto	l15239
  6231  005546                     l15247:
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;Bridge.c: 376: }
  6235                           ;Bridge.c: 377: }
  6236                           ;Bridge.c: 378: if(i>0)
  6237  005546  51D4               	movf	MiApp_SearchConnection@i& (0+255),w,b
  6238  005548  E002               	bz	l15251
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;Bridge.c: 379: {
  6242                           ;Bridge.c: 380: res=i;
  6243  00554A  C1D4  F1D3         	movff	MiApp_SearchConnection@i,MiApp_SearchConnection@res
  6244  00554E                     l15251:
  6245                           
  6246                           ; BSR set to: 1
  6247                           ;Bridge.c: 381: }
  6248                           ;Bridge.c: 382: return(res);
  6249  00554E  51D3               	movf	MiApp_SearchConnection@res& (0+255),w,b
  6250                           
  6251                           ; BSR set to: 1
  6252  005550  0012               	return		;funcret
  6253  005552                     __end_of_MiApp_SearchConnection:
  6254                           	opt stack 0
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           prodh	equ	0xFF4
  6260                           prodl	equ	0xFF3
  6261                           postinc0	equ	0xFEE
  6262                           plusw0	equ	0xFEB
  6263                           fsr0h	equ	0xFEA
  6264                           fsr0l	equ	0xFE9
  6265                           wreg	equ	0xFE8
  6266                           indf1	equ	0xFE7
  6267                           postdec1	equ	0xFE5
  6268                           plusw1	equ	0xFE3
  6269                           fsr1h	equ	0xFE2
  6270                           fsr1l	equ	0xFE1
  6271                           indf2	equ	0xFDF
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           plusw2	equ	0xFDB
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function _NetworkSendDiscoverRequest *****************
  6280 ;; Defined at:
  6281 ;;		line 395 in file "../NetworkManager.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  databuff       64   59[BANK0 ] unsigned char [64]
  6286 ;;  address         8  126[BANK0 ] struct addr_t_def
  6287 ;;  size            2  123[BANK0 ] unsigned int 
  6288 ;;  dhdr            1  125[BANK0 ] PTR struct net_data_head
  6289 ;;		 -> NetworkSendDiscoverRequest@databuff(64), 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/1
  6296 ;;		On exit  : F/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6300 ;;      Locals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;Total ram usage:       75 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    8
  6306 ;; This function calls:
  6307 ;;		_BroadcastManagerDelaySend
  6308 ;;		_NetworkAddressSizeGet
  6309 ;;		_NetworkPrepareSendPacket
  6310 ;;		_memset
  6311 ;; This function is called by:
  6312 ;;		_MiApp_SearchConnection
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text13
  6317  006B26                     __ptext13:
  6318                           	opt stack 0
  6319  006B26                     _NetworkSendDiscoverRequest:
  6320                           	opt stack 21
  6321                           
  6322                           ;NetworkManager.c: 397: addr_t address;
  6323                           ;NetworkManager.c: 398: uint16_t size;
  6324                           ;NetworkManager.c: 399: uint8_t databuff[64];
  6325                           ;NetworkManager.c: 400: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;incstack = 0
  6329  006B26  0E9B               	movlw	low NetworkSendDiscoverRequest@databuff
  6330  006B28  0100               	movlb	0	; () banked
  6331  006B2A  6FDD               	movwf	NetworkSendDiscoverRequest@dhdr& (0+255),b
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;NetworkManager.c: 401: memset(address.bytes,0xff,NetworkAddressSizeGet());
  6335  006B2C  0EDE               	movlw	low NetworkSendDiscoverRequest@address
  6336  006B2E  6F60               	movwf	memset@p1& (0+255),b
  6337  006B30  6B61               	clrf	(memset@p1+1)& (0+255),b
  6338  006B32  6B63               	clrf	(memset@c+1)& (0+255),b
  6339  006B34  6962               	setf	memset@c& (0+255),b
  6340  006B36  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
  6341  006B3A  6F64               	movwf	memset@n& (0+255),b
  6342  006B3C  6B65               	clrf	(memset@n+1)& (0+255),b
  6343  006B3E  EC61  F03C         	call	_memset	;wreg free
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;NetworkManager.c: 402: size=NetworkPrepareSendPacket(address,databuff,PacketScanRequest
      +                          ,(0),0);
  6347  006B42  EE20  F0DE         	lfsr	2,NetworkSendDiscoverRequest@address
  6348  006B46  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
  6349  006B4A  0E07               	movlw	7
  6350  006B4C                     u22591:
  6351  006B4C  CFDB FFEB          	movff	plusw2,plusw0
  6352  006B50  06E8               	decf	wreg,f,c
  6353  006B52  E2FC               	bc	u22591
  6354  006B54  0E9B               	movlw	low NetworkSendDiscoverRequest@databuff
  6355  006B56  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  6356  006B58  6B79               	clrf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  6357  006B5A  0E27               	movlw	39
  6358  006B5C  6F7A               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  6359  006B5E  6B7B               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  6360  006B60  6B7C               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  6361  006B62  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  6362  006B64  6B7D               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  6363  006B66  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
  6364  006B6A  C070  F0DB         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverRequest@size
  6365  006B6E  C071  F0DC         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverRequest@size+1
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;NetworkManager.c: 403: dhdr->Hops=0;
  6369  006B72  51DD               	movf	NetworkSendDiscoverRequest@dhdr& (0+255),w,b
  6370  006B74  6ED9               	movwf	fsr2l,c
  6371  006B76  6ADA               	clrf	fsr2h,c
  6372  006B78  6ADF               	clrf	indf2,c
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;NetworkManager.c: 404: BroadcastManagerDelaySend(databuff,size,0,1);
  6376  006B7A  0E9B               	movlw	low NetworkSendDiscoverRequest@databuff
  6377  006B7C  6F8C               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  6378  006B7E  6B8D               	clrf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  6379  006B80  C0DB  F08E         	movff	NetworkSendDiscoverRequest@size,BroadcastManagerDelaySend@size
  6380  006B84  C0DC  F08F         	movff	NetworkSendDiscoverRequest@size+1,BroadcastManagerDelaySend@size+1
  6381  006B88  6B90               	clrf	BroadcastManagerDelaySend@isSecure& (0+255),b
  6382  006B8A  0E01               	movlw	1
  6383  006B8C  6F91               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  6384  006B8E  EF3C  F023         	goto	_BroadcastManagerDelaySend	;wreg free
  6385  006B92                     __end_of_NetworkSendDiscoverRequest:
  6386                           	opt stack 0
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           postinc0	equ	0xFEE
  6394                           plusw0	equ	0xFEB
  6395                           fsr0h	equ	0xFEA
  6396                           fsr0l	equ	0xFE9
  6397                           wreg	equ	0xFE8
  6398                           indf1	equ	0xFE7
  6399                           postdec1	equ	0xFE5
  6400                           plusw1	equ	0xFE3
  6401                           fsr1h	equ	0xFE2
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           postinc2	equ	0xFDE
  6405                           postdec2	equ	0xFDD
  6406                           plusw2	equ	0xFDB
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _MiApp_MessageAvailable *****************
  6412 ;; Defined at:
  6413 ;;		line 236 in file "../src/Bridge.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  src             8  180[BANK1 ] struct addr_t_def
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      unsigned char 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : F/1
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;Total ram usage:       12 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:   15
  6434 ;; This function calls:
  6435 ;;		_AddNodeToNetworkTable
  6436 ;;		_MiMAC_ReceivedPacket
  6437 ;;		_MiWi_TickGetMs
  6438 ;;		_NetworkManagerTask
  6439 ;;		_TimeTickISR
  6440 ;;		_memcpy
  6441 ;;		_radioReceivedPacket
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;;		_MiApp_SearchConnection
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text14
  6449  005676                     __ptext14:
  6450                           	opt stack 0
  6451  005676                     _MiApp_MessageAvailable:
  6452                           	opt stack 14
  6453                           
  6454                           ;Bridge.c: 238: addr_t src;
  6455                           ;Bridge.c: 239: static MIWI_TICK tStart={0};
  6456                           ;Bridge.c: 241: if((MiWi_TickGetMs().Val - tStart.Val)>=1)
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;incstack = 0
  6460  005676  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  6461  00567A  0102               	movlb	2	; () banked
  6462  00567C  5134               	movf	MiApp_MessageAvailable@tStart& (0+255),w,b
  6463  00567E  0100               	movlb	0	; () banked
  6464  005680  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  6465  005682  6FFA               	movwf	??_MiApp_MessageAvailable& (0+255),b
  6466  005684  0102               	movlb	2	; () banked
  6467  005686  5135               	movf	(MiApp_MessageAvailable@tStart+1)& (0+255),w,b
  6468  005688  0100               	movlb	0	; () banked
  6469  00568A  596D               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  6470  00568C  6FFB               	movwf	(??_MiApp_MessageAvailable+1)& (0+255),b
  6471  00568E  0102               	movlb	2	; () banked
  6472  005690  5136               	movf	(MiApp_MessageAvailable@tStart+2)& (0+255),w,b
  6473  005692  0100               	movlb	0	; () banked
  6474  005694  596E               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  6475  005696  6FFC               	movwf	(??_MiApp_MessageAvailable+2)& (0+255),b
  6476  005698  0102               	movlb	2	; () banked
  6477  00569A  5137               	movf	(MiApp_MessageAvailable@tStart+3)& (0+255),w,b
  6478  00569C  0100               	movlb	0	; () banked
  6479  00569E  596F               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  6480  0056A0  6FFD               	movwf	(??_MiApp_MessageAvailable+3)& (0+255),b
  6481  0056A2  51FA               	movf	??_MiApp_MessageAvailable& (0+255),w,b
  6482  0056A4  11FB               	iorwf	(??_MiApp_MessageAvailable+1)& (0+255),w,b
  6483  0056A6  11FC               	iorwf	(??_MiApp_MessageAvailable+2)& (0+255),w,b
  6484  0056A8  11FD               	iorwf	(??_MiApp_MessageAvailable+3)& (0+255),w,b
  6485  0056AA  E00C               	bz	l14451
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;Bridge.c: 242: {
  6489                           ;Bridge.c: 243: tStart=MiWi_TickGetMs();
  6490  0056AC  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
  6491  0056B0  C06C  F234         	movff	?_MiWi_TickGetMs,MiApp_MessageAvailable@tStart
  6492  0056B4  C06D  F235         	movff	?_MiWi_TickGetMs+1,MiApp_MessageAvailable@tStart+1
  6493  0056B8  C06E  F236         	movff	?_MiWi_TickGetMs+2,MiApp_MessageAvailable@tStart+2
  6494  0056BC  C06F  F237         	movff	?_MiWi_TickGetMs+3,MiApp_MessageAvailable@tStart+3
  6495                           
  6496                           ;Bridge.c: 244: TimeTickISR();
  6497  0056C0  ECA6  F03B         	call	_TimeTickISR	;wreg free
  6498  0056C4                     l14451:
  6499                           
  6500                           ;Bridge.c: 245: }
  6501                           ;Bridge.c: 246: NetworkManagerTask();
  6502  0056C4  ECCC  F011         	call	_NetworkManagerTask	;wreg free
  6503                           
  6504                           ;Bridge.c: 247: if(MiMAC_ReceivedPacket()==1)
  6505  0056C8  EC1E  F006         	call	_MiMAC_ReceivedPacket	;wreg free
  6506  0056CC  06E8               	decf	wreg,f,c
  6507  0056CE  E133               	bnz	l14459
  6508                           
  6509                           ;Bridge.c: 248: {
  6510                           ;Bridge.c: 249: memcpy(src.bytes,MACRxPacket.SourceAddress,sizeof(src));
  6511  0056D0  0EB4               	movlw	low MiApp_MessageAvailable@src
  6512  0056D2  0100               	movlb	0	; () banked
  6513  0056D4  6F62               	movwf	memcpy@d1& (0+255),b
  6514  0056D6  0E01               	movlw	high MiApp_MessageAvailable@src
  6515  0056D8  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  6516  0056DA  C27A  F064         	movff	_MACRxPacket+1,memcpy@s1
  6517  0056DE  C27B  F065         	movff	_MACRxPacket+2,memcpy@s1+1
  6518  0056E2  6B67               	clrf	(memcpy@n+1)& (0+255),b
  6519  0056E4  0E08               	movlw	8
  6520  0056E6  6F66               	movwf	memcpy@n& (0+255),b
  6521  0056E8  ECFA  F03A         	call	_memcpy	;wreg free
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;Bridge.c: 250: radioReceivedPacket(src,MACRxPacket.SourcePANID,MACRxPacket.Payload,MACR
      +                          xPacket.PayloadLen,MACRxPacket.RSSIValue,MACRxPacket.flags.bits.broadcast,MACRxPacket.fl
      +                          ags.bits.secEn);
  6525  0056EC  EE21  F0B4         	lfsr	2,MiApp_MessageAvailable@src
  6526  0056F0  EE01  F086         	lfsr	0,radioReceivedPacket@source
  6527  0056F4  0E07               	movlw	7
  6528  0056F6                     u22321:
  6529  0056F6  CFDB FFEB          	movff	plusw2,plusw0
  6530  0056FA  06E8               	decf	wreg,f,c
  6531  0056FC  E2FC               	bc	u22321
  6532  0056FE  C282  F18E         	movff	_MACRxPacket+9,radioReceivedPacket@PANID
  6533  005702  C283  F18F         	movff	_MACRxPacket+10,radioReceivedPacket@PANID+1
  6534  005706  C27C  F190         	movff	_MACRxPacket+3,radioReceivedPacket@data
  6535  00570A  C27D  F191         	movff	_MACRxPacket+4,radioReceivedPacket@data+1
  6536  00570E  C27E  F192         	movff	_MACRxPacket+5,radioReceivedPacket@size
  6537  005712  0101               	movlb	1	; () banked
  6538  005714  6B93               	clrf	(radioReceivedPacket@size+1)& (0+255),b
  6539  005716  C27F  F194         	movff	_MACRxPacket+6,radioReceivedPacket@rssi
  6540  00571A  0102               	movlb	2	; () banked
  6541  00571C  0E00               	movlw	0
  6542  00571E  B579               	btfsc	_MACRxPacket& (0+255),2,b
  6543  005720  0E01               	movlw	1
  6544  005722  0101               	movlb	1	; () banked
  6545  005724  6F95               	movwf	radioReceivedPacket@isBroadcast& (0+255),b
  6546  005726  0102               	movlb	2	; () banked
  6547  005728  0E00               	movlw	0
  6548  00572A  B779               	btfsc	_MACRxPacket& (0+255),3,b
  6549  00572C  0E01               	movlw	1
  6550  00572E  0101               	movlb	1	; () banked
  6551  005730  6F96               	movwf	radioReceivedPacket@isSecure& (0+255),b
  6552  005732  EC40  F002         	call	_radioReceivedPacket	;wreg free
  6553  005736                     l14459:
  6554                           
  6555                           ;Bridge.c: 251: }
  6556                           ;Bridge.c: 253: if(UserMessageAvailable==1)
  6557  005736  0101               	movlb	1	; () banked
  6558  005738  05E0               	decf	_UserMessageAvailable& (0+255),w,b
  6559  00573A  E11D               	bnz	l14465
  6560                           
  6561                           ; BSR set to: 1
  6562                           ;Bridge.c: 254: {
  6563                           ;Bridge.c: 255: memcpy(src.bytes,rxMessage.SourceAddress,sizeof(src));
  6564  00573C  0EB4               	movlw	low MiApp_MessageAvailable@src
  6565  00573E  0100               	movlb	0	; () banked
  6566  005740  6F62               	movwf	memcpy@d1& (0+255),b
  6567  005742  0E01               	movlw	high MiApp_MessageAvailable@src
  6568  005744  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  6569  005746  C296  F064         	movff	_rxMessage+3,memcpy@s1
  6570  00574A  C297  F065         	movff	_rxMessage+4,memcpy@s1+1
  6571  00574E  6B67               	clrf	(memcpy@n+1)& (0+255),b
  6572  005750  0E08               	movlw	8
  6573  005752  6F66               	movwf	memcpy@n& (0+255),b
  6574  005754  ECFA  F03A         	call	_memcpy	;wreg free
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;Bridge.c: 256: AddNodeToNetworkTable(src,rxMessage.SourcePANID.Val);
  6578  005758  EE21  F0B4         	lfsr	2,MiApp_MessageAvailable@src
  6579  00575C  EE00  F080         	lfsr	0,AddNodeToNetworkTable@address
  6580  005760  0E07               	movlw	7
  6581  005762                     u22341:
  6582  005762  CFDB FFEB          	movff	plusw2,plusw0
  6583  005766  06E8               	decf	wreg,f,c
  6584  005768  E2FC               	bc	u22341
  6585  00576A  C294  F088         	movff	_rxMessage+1,AddNodeToNetworkTable@PANID
  6586  00576E  C295  F089         	movff	_rxMessage+2,AddNodeToNetworkTable@PANID+1
  6587  005772  EC44  F01E         	call	_AddNodeToNetworkTable	;wreg free
  6588  005776                     l14465:
  6589                           
  6590                           ;Bridge.c: 257: }
  6591                           ;Bridge.c: 259: return(UserMessageAvailable);
  6592  005776  0101               	movlb	1	; () banked
  6593  005778  51E0               	movf	_UserMessageAvailable& (0+255),w,b
  6594                           
  6595                           ; BSR set to: 1
  6596  00577A  0012               	return		;funcret
  6597  00577C                     __end_of_MiApp_MessageAvailable:
  6598                           	opt stack 0
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           postinc0	equ	0xFEE
  6606                           plusw0	equ	0xFEB
  6607                           fsr0h	equ	0xFEA
  6608                           fsr0l	equ	0xFE9
  6609                           wreg	equ	0xFE8
  6610                           indf1	equ	0xFE7
  6611                           postdec1	equ	0xFE5
  6612                           plusw1	equ	0xFE3
  6613                           fsr1h	equ	0xFE2
  6614                           fsr1l	equ	0xFE1
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           plusw2	equ	0xFDB
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _radioReceivedPacket *****************
  6624 ;; Defined at:
  6625 ;;		line 48 in file "../NetworkBridge.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  source          8  134[BANK1 ] struct addr_t_def
  6628 ;;  PANID           2  142[BANK1 ] unsigned int 
  6629 ;;  data            2  144[BANK1 ] PTR unsigned char 
  6630 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  6631 ;;  size            2  146[BANK1 ] unsigned int 
  6632 ;;  rssi            1  148[BANK1 ] unsigned char 
  6633 ;;  isBroadcast     1  149[BANK1 ] unsigned char 
  6634 ;;  isSecure        1  150[BANK1 ] unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  bt              2  158[BANK1 ] unsigned int 
  6637 ;;  parent          8  170[BANK1 ] struct addr_t_def
  6638 ;;  child           8  162[BANK1 ] struct addr_t_def
  6639 ;;  crc             4  154[BANK1 ] unsigned long 
  6640 ;;  dhdr            2  178[BANK1 ] PTR struct net_data_head
  6641 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  6642 ;;  rhdr            2  160[BANK1 ] PTR struct net_routing_h
  6643 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  6644 ;;  myAddr          2  151[BANK1 ] PTR struct addr_t_def
  6645 ;;		 -> MyAddress(8), 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : F/1
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6655 ;;      Params:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;      Totals:         0       6      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;Total ram usage:       52 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:   14
  6662 ;; This function calls:
  6663 ;;		_BlinkRedLED
  6664 ;;		_BroadcastManagerDelaySend
  6665 ;;		_CoordinatorGenericAddress
  6666 ;;		_DeviceManagerBufferDeviceData
  6667 ;;		_DeviceManagerGetDeviceType
  6668 ;;		_GetRouteAddressOfChild
  6669 ;;		_IsMemberOfNetwork
  6670 ;;		_IsNetworkDevice
  6671 ;;		_LE_RemoveNeighborDevice
  6672 ;;		_LE_processReceivedMessage
  6673 ;;		_NetworkDiscoveredEvent
  6674 ;;		_NetworkGetDeviceType
  6675 ;;		_NetworkGetPANID
  6676 ;;		_NetworkGetParentAddress
  6677 ;;		_NetworkManagerGetMyAddress
  6678 ;;		_NetworkManagerProcessIncomingData
  6679 ;;		_NetworkSendDiscoverResponse
  6680 ;;		_RouteManagerProcessReceive
  6681 ;;		_TMSendFormedPacketTowardsCoordinator
  6682 ;;		_TunnelManagerGetTunnel
  6683 ;;		_TunnelManagerInvalidateTunnel
  6684 ;;		_TunnelManagerSetTunnel
  6685 ;;		_crc32
  6686 ;;		_isBroadcastAddress
  6687 ;;		_isKnownPacket
  6688 ;;		_isSameAddress
  6689 ;;		_memcpy
  6690 ;;		_radioDiscardPacket
  6691 ;;		_radioUnicast
  6692 ;; This function is called by:
  6693 ;;		_MiApp_MessageAvailable
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text15
  6698  000480                     __ptext15:
  6699                           	opt stack 0
  6700  000480                     _radioReceivedPacket:
  6701                           	opt stack 14
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;NetworkBridge.c: 50: net_routing_header_t *rhdr=(net_routing_header_t*)data;
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;incstack = 0
  6708  000480  C190  F1A0         	movff	radioReceivedPacket@data,radioReceivedPacket@rhdr
  6709  000484  C191  F1A1         	movff	radioReceivedPacket@data+1,radioReceivedPacket@rhdr+1
  6710                           
  6711                           ;NetworkBridge.c: 51: net_data_header_t *dhdr=(net_data_header_t*)data;
  6712  000488  C190  F1B2         	movff	radioReceivedPacket@data,radioReceivedPacket@dhdr
  6713  00048C  C191  F1B3         	movff	radioReceivedPacket@data+1,radioReceivedPacket@dhdr+1
  6714                           
  6715                           ; BSR set to: 1
  6716                           ;NetworkBridge.c: 52: addr_t* myAddr=NetworkManagerGetMyAddress();
  6717  000490  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
  6718  000494  C060  F197         	movff	?_NetworkManagerGetMyAddress,radioReceivedPacket@myAddr
  6719  000498  C061  F198         	movff	?_NetworkManagerGetMyAddress+1,radioReceivedPacket@myAddr+1
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;NetworkBridge.c: 53: uint32_t crc=0;
  6723  00049C  0101               	movlb	1	; () banked
  6724  00049E  6B9A               	clrf	radioReceivedPacket@crc& (0+255),b
  6725  0004A0  6B9B               	clrf	(radioReceivedPacket@crc+1)& (0+255),b
  6726  0004A2  6B9C               	clrf	(radioReceivedPacket@crc+2)& (0+255),b
  6727  0004A4  6B9D               	clrf	(radioReceivedPacket@crc+3)& (0+255),b
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;NetworkBridge.c: 54: addr_t child,parent;
  6731                           ;NetworkBridge.c: 57: crc=crc32(crc,(uint8_t*)&data[1], size);
  6732  0004A6  C19A  F060         	movff	radioReceivedPacket@crc,crc32@crc
  6733  0004AA  C19B  F061         	movff	radioReceivedPacket@crc+1,crc32@crc+1
  6734  0004AE  C19C  F062         	movff	radioReceivedPacket@crc+2,crc32@crc+2
  6735  0004B2  C19D  F063         	movff	radioReceivedPacket@crc+3,crc32@crc+3
  6736  0004B6  2990               	incf	radioReceivedPacket@data& (0+255),w,b
  6737  0004B8  0100               	movlb	0	; () banked
  6738  0004BA  6F64               	movwf	crc32@buf& (0+255),b
  6739  0004BC  0E00               	movlw	0
  6740  0004BE  0101               	movlb	1	; () banked
  6741  0004C0  2191               	addwfc	(radioReceivedPacket@data+1)& (0+255),w,b
  6742  0004C2  0100               	movlb	0	; () banked
  6743  0004C4  6F65               	movwf	(crc32@buf+1)& (0+255),b
  6744  0004C6  C192  F066         	movff	radioReceivedPacket@size,crc32@size
  6745  0004CA  C193  F067         	movff	radioReceivedPacket@size+1,crc32@size+1
  6746  0004CE  ECEF  F02F         	call	_crc32	;wreg free
  6747  0004D2  C060  F19A         	movff	?_crc32,radioReceivedPacket@crc
  6748  0004D6  C061  F19B         	movff	?_crc32+1,radioReceivedPacket@crc+1
  6749  0004DA  C062  F19C         	movff	?_crc32+2,radioReceivedPacket@crc+2
  6750  0004DE  C063  F19D         	movff	?_crc32+3,radioReceivedPacket@crc+3
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;NetworkBridge.c: 59: if(isKnownPacket(crc)==0)
  6754  0004E2  C19A  F098         	movff	radioReceivedPacket@crc,isKnownPacket@hash
  6755  0004E6  C19B  F099         	movff	radioReceivedPacket@crc+1,isKnownPacket@hash+1
  6756  0004EA  C19C  F09A         	movff	radioReceivedPacket@crc+2,isKnownPacket@hash+2
  6757  0004EE  C19D  F09B         	movff	radioReceivedPacket@crc+3,isKnownPacket@hash+3
  6758  0004F2  ECDC  F018         	call	_isKnownPacket	;wreg free
  6759  0004F6  0900               	iorlw	0
  6760  0004F8  E002 EF23  F03D    	bnz	_MiMAC_DiscardPacket
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;NetworkBridge.c: 60: {
  6764                           ;NetworkBridge.c: 61: if( (isBroadcast==1) && (rhdr->packettype==PacketRouting) )
  6765  0004FE  0101               	movlb	1	; () banked
  6766  000500  0595               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6767  000502  E15F               	bnz	l14153
  6768                           
  6769                           ; BSR set to: 1
  6770  000504  EE20 F002          	lfsr	2,2
  6771  000508  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6772  00050A  26D9               	addwf	fsr2l,f,c
  6773  00050C  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6774  00050E  22DA               	addwfc	fsr2h,f,c
  6775  000510  0E22               	movlw	34
  6776  000512  18DE               	xorwf	postinc2,w,c
  6777  000514  E156               	bnz	l14153
  6778                           
  6779                           ; BSR set to: 1
  6780                           ;NetworkBridge.c: 62: {
  6781                           ;NetworkBridge.c: 65: uint16_t bt;
  6782                           ;NetworkBridge.c: 66: memcpy(&bt,source.bytes,2);
  6783  000516  0E9E               	movlw	low radioReceivedPacket@bt
  6784  000518  0100               	movlb	0	; () banked
  6785  00051A  6F62               	movwf	memcpy@d1& (0+255),b
  6786  00051C  0E01               	movlw	high radioReceivedPacket@bt
  6787  00051E  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  6788  000520  0E86               	movlw	low radioReceivedPacket@source
  6789  000522  6F64               	movwf	memcpy@s1& (0+255),b
  6790  000524  0E01               	movlw	high radioReceivedPacket@source
  6791  000526  6F65               	movwf	(memcpy@s1+1)& (0+255),b
  6792  000528  6B67               	clrf	(memcpy@n+1)& (0+255),b
  6793  00052A  0E02               	movlw	2
  6794  00052C  6F66               	movwf	memcpy@n& (0+255),b
  6795  00052E  ECFA  F03A         	call	_memcpy	;wreg free
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;NetworkBridge.c: 67: rhdr->etx=rhdr->etx ^ (((uint16_t)(~bt))+(uint16_t)0x3497);
  6799  000532  0101               	movlb	1	; () banked
  6800  000534  EE20 F00C          	lfsr	2,12
  6801  000538  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6802  00053A  26D9               	addwf	fsr2l,f,c
  6803  00053C  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6804  00053E  22DA               	addwfc	fsr2h,f,c
  6805  000540  CFDE F0F0          	movff	postinc2,??_radioReceivedPacket
  6806  000544  CFDD F0F1          	movff	postdec2,??_radioReceivedPacket+1
  6807  000548  0E97               	movlw	151
  6808  00054A  0100               	movlb	0	; () banked
  6809  00054C  6FF2               	movwf	(??_radioReceivedPacket+2)& (0+255),b
  6810  00054E  0E34               	movlw	52
  6811  000550  6FF3               	movwf	(??_radioReceivedPacket+3)& (0+255),b
  6812  000552  0101               	movlb	1	; () banked
  6813  000554  1D9E               	comf	radioReceivedPacket@bt& (0+255),w,b
  6814  000556  0100               	movlb	0	; () banked
  6815  000558  6FF4               	movwf	(??_radioReceivedPacket+4)& (0+255),b
  6816  00055A  0101               	movlb	1	; () banked
  6817  00055C  1D9F               	comf	(radioReceivedPacket@bt+1)& (0+255),w,b
  6818  00055E  0100               	movlb	0	; () banked
  6819  000560  6FF5               	movwf	(??_radioReceivedPacket+5)& (0+255),b
  6820  000562  51F2               	movf	(??_radioReceivedPacket+2)& (0+255),w,b
  6821  000564  27F4               	addwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6822  000566  51F3               	movf	(??_radioReceivedPacket+3)& (0+255),w,b
  6823  000568  23F5               	addwfc	(??_radioReceivedPacket+5)& (0+255),f,b
  6824  00056A  51F0               	movf	??_radioReceivedPacket& (0+255),w,b
  6825  00056C  1BF4               	xorwf	(??_radioReceivedPacket+4)& (0+255),f,b
  6826  00056E  51F1               	movf	(??_radioReceivedPacket+1)& (0+255),w,b
  6827  000570  1BF5               	xorwf	(??_radioReceivedPacket+5)& (0+255),f,b
  6828  000572  0101               	movlb	1	; () banked
  6829  000574  EE20 F00C          	lfsr	2,12
  6830  000578  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6831  00057A  26D9               	addwf	fsr2l,f,c
  6832  00057C  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6833  00057E  22DA               	addwfc	fsr2h,f,c
  6834  000580  C0F4  FFDE         	movff	??_radioReceivedPacket+4,postinc2
  6835  000584  C0F5  FFDD         	movff	??_radioReceivedPacket+5,postdec2
  6836                           
  6837                           ; BSR set to: 1
  6838                           ;NetworkBridge.c: 69: LE_processReceivedMessage(&source,data,size,rssi);
  6839  000588  0E86               	movlw	low radioReceivedPacket@source
  6840  00058A  0100               	movlb	0	; () banked
  6841  00058C  6F9D               	movwf	LE_processReceivedMessage@source& (0+255),b
  6842  00058E  0E01               	movlw	high radioReceivedPacket@source
  6843  000590  6F9E               	movwf	(LE_processReceivedMessage@source+1)& (0+255),b
  6844  000592  C190  F09F         	movff	radioReceivedPacket@data,LE_processReceivedMessage@data
  6845  000596  C191  F0A0         	movff	radioReceivedPacket@data+1,LE_processReceivedMessage@data+1
  6846  00059A  C192  F0A1         	movff	radioReceivedPacket@size,LE_processReceivedMessage@len
  6847  00059E  C194  F0A2         	movff	radioReceivedPacket@rssi,LE_processReceivedMessage@rssi
  6848  0005A2  EC36  F026         	call	_LE_processReceivedMessage	;wreg free
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;NetworkBridge.c: 70: RouteManagerProcessReceive(&source,data,size);
  6852  0005A6  0E86               	movlw	low radioReceivedPacket@source
  6853  0005A8  6FAE               	movwf	RouteManagerProcessReceive@source& (0+255),b
  6854  0005AA  0E01               	movlw	high radioReceivedPacket@source
  6855  0005AC  6FAF               	movwf	(RouteManagerProcessReceive@source+1)& (0+255),b
  6856  0005AE  C190  F0B0         	movff	radioReceivedPacket@data,RouteManagerProcessReceive@data
  6857  0005B2  C191  F0B1         	movff	radioReceivedPacket@data+1,RouteManagerProcessReceive@data+1
  6858  0005B6  C192  F0B2         	movff	radioReceivedPacket@size,RouteManagerProcessReceive@len
  6859  0005BA  ECC2  F024         	call	_RouteManagerProcessReceive	;wreg free
  6860                           
  6861                           ;NetworkBridge.c: 71: }else if( (NetworkGetDeviceType()!=DeviceCoordinator) || (IsNetwor
      +                          kDevice(dhdr->origin,(dhdr->flags & 0x07))==1) )
  6862  0005BE  EF40  F03E         	goto	_radioDiscardPacket
  6863  0005C2                     l14153:
  6864                           
  6865                           ; BSR set to: 1
  6866  0005C2  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  6867  0005C6  0900               	iorlw	0
  6868  0005C8  E11D               	bnz	l14157
  6869  0005CA  0101               	movlb	1	; () banked
  6870  0005CC  EE20 F00C          	lfsr	2,12
  6871  0005D0  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6872  0005D2  26D9               	addwf	fsr2l,f,c
  6873  0005D4  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6874  0005D6  22DA               	addwfc	fsr2h,f,c
  6875  0005D8  EE00  F081         	lfsr	0,IsNetworkDevice@address
  6876  0005DC  0E07               	movlw	7
  6877  0005DE                     u21431:
  6878  0005DE  CFDB FFEB          	movff	plusw2,plusw0
  6879  0005E2  06E8               	decf	wreg,f,c
  6880  0005E4  E2FC               	bc	u21431
  6881  0005E6  EE20 F003          	lfsr	2,3
  6882  0005EA  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6883  0005EC  26D9               	addwf	fsr2l,f,c
  6884  0005EE  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6885  0005F0  22DA               	addwfc	fsr2h,f,c
  6886  0005F2  50DF               	movf	indf2,w,c
  6887  0005F4  0B07               	andlw	7
  6888  0005F6  0100               	movlb	0	; () banked
  6889  0005F8  6F89               	movwf	IsNetworkDevice@devType& (0+255),b
  6890  0005FA  ECD3  F020         	call	_IsNetworkDevice	;wreg free
  6891  0005FE  06E8               	decf	wreg,f,c
  6892  000600  E001 D31A          	bnz	l14307
  6893  000604                     l14157:
  6894                           
  6895                           ;NetworkBridge.c: 72: {
  6896                           ;NetworkBridge.c: 75: if( (isBroadcast==1) && (rhdr->packettype==PacketScanRequest) )
  6897  000604  0101               	movlb	1	; () banked
  6898  000606  0595               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6899  000608  E112               	bnz	l14165
  6900                           
  6901                           ; BSR set to: 1
  6902  00060A  EE20 F002          	lfsr	2,2
  6903  00060E  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6904  000610  26D9               	addwf	fsr2l,f,c
  6905  000612  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6906  000614  22DA               	addwfc	fsr2h,f,c
  6907  000616  0E27               	movlw	39
  6908  000618  18DE               	xorwf	postinc2,w,c
  6909  00061A  E109               	bnz	l14165
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;NetworkBridge.c: 76: {
  6913                           ;NetworkBridge.c: 77: if(IsMemberOfNetwork()==1)
  6914  00061C  EC4C  F03E         	call	_IsMemberOfNetwork	;wreg free
  6915  000620  06E8               	decf	wreg,f,c
  6916  000622  E001 D309          	bnz	l14307
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;NetworkBridge.c: 78: {
  6920                           ;NetworkBridge.c: 80: NetworkSendDiscoverResponse();
  6921  000626  EC5B  F035         	call	_NetworkSendDiscoverResponse	;wreg free
  6922  00062A  EF40  F03E         	goto	_radioDiscardPacket
  6923  00062E                     l14165:
  6924                           
  6925                           ; BSR set to: 1
  6926  00062E  0595               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  6927  000630  E11A               	bnz	l14173
  6928                           
  6929                           ; BSR set to: 1
  6930  000632  EE20 F002          	lfsr	2,2
  6931  000636  51A0               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  6932  000638  26D9               	addwf	fsr2l,f,c
  6933  00063A  51A1               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  6934  00063C  22DA               	addwfc	fsr2h,f,c
  6935  00063E  0E28               	movlw	40
  6936  000640  18DE               	xorwf	postinc2,w,c
  6937  000642  E111               	bnz	l14173
  6938                           
  6939                           ; BSR set to: 1
  6940                           ;NetworkBridge.c: 83: {
  6941                           ;NetworkBridge.c: 84: if(PANID!=0xffff)
  6942  000644  298E               	incf	radioReceivedPacket@PANID& (0+255),w,b
  6943  000646  E103               	bnz	u21500
  6944  000648  298F               	incf	(radioReceivedPacket@PANID+1)& (0+255),w,b
  6945  00064A  E101 D2F5          	bz	l14307
  6946  00064E                     u21500:
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;NetworkBridge.c: 85: {
  6950                           ;NetworkBridge.c: 86: NetworkDiscoveredEvent(PANID, rssi);
  6951  00064E  C18E  F060         	movff	radioReceivedPacket@PANID,NetworkDiscoveredEvent@PANID
  6952  000652  C18F  F061         	movff	radioReceivedPacket@PANID+1,NetworkDiscoveredEvent@PANID+1
  6953  000656  C194  F062         	movff	radioReceivedPacket@rssi,NetworkDiscoveredEvent@rssi
  6954  00065A  0100               	movlb	0	; () banked
  6955  00065C  6B63               	clrf	(NetworkDiscoveredEvent@rssi+1)& (0+255),b
  6956  00065E  ECA5  F021         	call	_NetworkDiscoveredEvent	;wreg free
  6957                           
  6958                           ;NetworkBridge.c: 87: }
  6959                           ;NetworkBridge.c: 88: }else if( (dhdr->packettype==PacketData) || (dhdr->packettype==Pac
      +                          ketCheckin)
  6960  000662  EF40  F03E         	goto	_radioDiscardPacket
  6961  000666                     l14173:
  6962                           
  6963                           ; BSR set to: 1
  6964                           ;NetworkBridge.c: 89: || (dhdr->packettype==PacketCheckinReply) ||(dhdr->packettype==Pac
      +                          ketRoutedData)
  6965                           ;NetworkBridge.c: 90: || (dhdr->packettype==PacketRFDRequestData) )
  6966  000666  EE20 F002          	lfsr	2,2
  6967  00066A  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6968  00066C  26D9               	addwf	fsr2l,f,c
  6969  00066E  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6970  000670  22DA               	addwfc	fsr2h,f,c
  6971  000672  0E23               	movlw	35
  6972  000674  18DE               	xorwf	postinc2,w,c
  6973  000676  E025               	bz	l14183
  6974                           
  6975                           ; BSR set to: 1
  6976  000678  EE20 F002          	lfsr	2,2
  6977  00067C  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6978  00067E  26D9               	addwf	fsr2l,f,c
  6979  000680  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6980  000682  22DA               	addwfc	fsr2h,f,c
  6981  000684  0E24               	movlw	36
  6982  000686  18DE               	xorwf	postinc2,w,c
  6983  000688  E01C               	bz	l14183
  6984                           
  6985                           ; BSR set to: 1
  6986  00068A  EE20 F002          	lfsr	2,2
  6987  00068E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6988  000690  26D9               	addwf	fsr2l,f,c
  6989  000692  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  6990  000694  22DA               	addwfc	fsr2h,f,c
  6991  000696  0E25               	movlw	37
  6992  000698  18DE               	xorwf	postinc2,w,c
  6993  00069A  E013               	bz	l14183
  6994                           
  6995                           ; BSR set to: 1
  6996  00069C  EE20 F002          	lfsr	2,2
  6997  0006A0  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  6998  0006A2  26D9               	addwf	fsr2l,f,c
  6999  0006A4  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7000  0006A6  22DA               	addwfc	fsr2h,f,c
  7001  0006A8  0E26               	movlw	38
  7002  0006AA  18DE               	xorwf	postinc2,w,c
  7003  0006AC  E00A               	bz	l14183
  7004                           
  7005                           ; BSR set to: 1
  7006  0006AE  EE20 F002          	lfsr	2,2
  7007  0006B2  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7008  0006B4  26D9               	addwf	fsr2l,f,c
  7009  0006B6  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7010  0006B8  22DA               	addwfc	fsr2h,f,c
  7011  0006BA  0E29               	movlw	41
  7012  0006BC  18DE               	xorwf	postinc2,w,c
  7013  0006BE  E001 D2BB          	bnz	l14307
  7014  0006C2                     l14183:
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;NetworkBridge.c: 91: {
  7018                           ;NetworkBridge.c: 92: BlinkRedLED();
  7019  0006C2  ECEB  F03D         	call	_BlinkRedLED	;wreg free
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;NetworkBridge.c: 93: if( (isSameAddress(*myAddr,dhdr->target)) || (isBroadcastAddress(d
      +                          hdr->target))
  7023                           ;NetworkBridge.c: 94: || ((NetworkGetDeviceType()==DeviceCoordinator) && (isSameAddress(
      +                          CoordinatorGenericAddress(),dhdr->target)) ) )
  7024  0006C6  C197  FFD9         	movff	radioReceivedPacket@myAddr,fsr2l
  7025  0006CA  C198  FFDA         	movff	radioReceivedPacket@myAddr+1,fsr2h
  7026  0006CE  EE00  F070         	lfsr	0,isSameAddress@a1
  7027  0006D2  0E07               	movlw	7
  7028  0006D4                     u21561:
  7029  0006D4  CFDB FFEB          	movff	plusw2,plusw0
  7030  0006D8  06E8               	decf	wreg,f,c
  7031  0006DA  E2FC               	bc	u21561
  7032  0006DC  0101               	movlb	1	; () banked
  7033  0006DE  EE20 F004          	lfsr	2,4
  7034  0006E2  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7035  0006E4  26D9               	addwf	fsr2l,f,c
  7036  0006E6  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7037  0006E8  22DA               	addwfc	fsr2h,f,c
  7038  0006EA  EE00  F078         	lfsr	0,isSameAddress@a2
  7039  0006EE  0E07               	movlw	7
  7040  0006F0                     u21571:
  7041  0006F0  CFDB FFEB          	movff	plusw2,plusw0
  7042  0006F4  06E8               	decf	wreg,f,c
  7043  0006F6  E2FC               	bc	u21571
  7044  0006F8  ECC5  F03C         	call	_isSameAddress	;wreg free
  7045  0006FC  0900               	iorlw	0
  7046  0006FE  E136               	bnz	l14193
  7047                           
  7048                           ; BSR set to: 0
  7049  000700  0101               	movlb	1	; () banked
  7050  000702  EE20 F004          	lfsr	2,4
  7051  000706  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7052  000708  26D9               	addwf	fsr2l,f,c
  7053  00070A  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7054  00070C  22DA               	addwfc	fsr2h,f,c
  7055  00070E  EE00  F068         	lfsr	0,isBroadcastAddress@address
  7056  000712  0E07               	movlw	7
  7057  000714                     u21591:
  7058  000714  CFDB FFEB          	movff	plusw2,plusw0
  7059  000718  06E8               	decf	wreg,f,c
  7060  00071A  E2FC               	bc	u21591
  7061  00071C  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
  7062  000720  0900               	iorlw	0
  7063  000722  E124               	bnz	l14193
  7064                           
  7065                           ; BSR set to: 0
  7066  000724  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7067  000728  0900               	iorlw	0
  7068  00072A  E001 D097          	bnz	l14215
  7069  00072E  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
  7070  000732  CFE9 FFD9          	movff	fsr0l,fsr2l
  7071  000736  CFEA FFDA          	movff	fsr0h,fsr2h
  7072  00073A  EE00  F070         	lfsr	0,isSameAddress@a1
  7073  00073E  0E07               	movlw	7
  7074  000740                     u21621:
  7075  000740  CFDB FFEB          	movff	plusw2,plusw0
  7076  000744  06E8               	decf	wreg,f,c
  7077  000746  E2FC               	bc	u21621
  7078  000748  0101               	movlb	1	; () banked
  7079  00074A  EE20 F004          	lfsr	2,4
  7080  00074E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7081  000750  26D9               	addwf	fsr2l,f,c
  7082  000752  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7083  000754  22DA               	addwfc	fsr2h,f,c
  7084  000756  EE00  F078         	lfsr	0,isSameAddress@a2
  7085  00075A  0E07               	movlw	7
  7086  00075C                     u21631:
  7087  00075C  CFDB FFEB          	movff	plusw2,plusw0
  7088  000760  06E8               	decf	wreg,f,c
  7089  000762  E2FC               	bc	u21631
  7090  000764  ECC5  F03C         	call	_isSameAddress	;wreg free
  7091  000768  0900               	iorlw	0
  7092  00076A  E078               	bz	l14215
  7093  00076C                     l14193:
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;NetworkBridge.c: 95: {
  7097                           ;NetworkBridge.c: 98: if( (dhdr->Hops>0) && ((isBroadcastAddress(dhdr->target) ) || ((is
      +                          Broadcast==1) && (NetworkGetDeviceType()==DeviceCoordinator) ) ))
  7098  00076C  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7099  000770  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7100  000774  50DF               	movf	indf2,w,c
  7101  000776  E02C               	bz	l14205
  7102                           
  7103                           ; BSR set to: 0
  7104  000778  0101               	movlb	1	; () banked
  7105  00077A  EE20 F004          	lfsr	2,4
  7106  00077E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7107  000780  26D9               	addwf	fsr2l,f,c
  7108  000782  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7109  000784  22DA               	addwfc	fsr2h,f,c
  7110  000786  EE00  F068         	lfsr	0,isBroadcastAddress@address
  7111  00078A  0E07               	movlw	7
  7112  00078C                     u21661:
  7113  00078C  CFDB FFEB          	movff	plusw2,plusw0
  7114  000790  06E8               	decf	wreg,f,c
  7115  000792  E2FC               	bc	u21661
  7116  000794  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
  7117  000798  0900               	iorlw	0
  7118  00079A  E107               	bnz	l14201
  7119                           
  7120                           ; BSR set to: 0
  7121  00079C  0101               	movlb	1	; () banked
  7122  00079E  0595               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7123  0007A0  E117               	bnz	l14205
  7124                           
  7125                           ; BSR set to: 1
  7126  0007A2  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7127  0007A6  0900               	iorlw	0
  7128  0007A8  E113               	bnz	l14205
  7129  0007AA                     l14201:
  7130                           
  7131                           ;NetworkBridge.c: 99: {
  7132                           ;NetworkBridge.c: 100: dhdr->Hops--;
  7133  0007AA  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7134  0007AE  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7135  0007B2  06DF               	decf	indf2,f,c
  7136                           
  7137                           ;NetworkBridge.c: 101: BroadcastManagerDelaySend(data,size,isSecure,0);
  7138  0007B4  C190  F08C         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  7139  0007B8  C191  F08D         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  7140  0007BC  C192  F08E         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  7141  0007C0  C193  F08F         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  7142  0007C4  C196  F090         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  7143  0007C8  0100               	movlb	0	; () banked
  7144  0007CA  6B91               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  7145  0007CC  EC3C  F023         	call	_BroadcastManagerDelaySend	;wreg free
  7146  0007D0                     l14205:
  7147                           
  7148                           ;NetworkBridge.c: 102: }
  7149                           ;NetworkBridge.c: 103: if(isBroadcast==0)
  7150  0007D0  0101               	movlb	1	; () banked
  7151  0007D2  5195               	movf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7152  0007D4  E121               	bnz	l14211
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;NetworkBridge.c: 104: {
  7156                           ;NetworkBridge.c: 105: child=dhdr->origin;
  7157  0007D6  EE20 F00C          	lfsr	2,12
  7158  0007DA  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7159  0007DC  26D9               	addwf	fsr2l,f,c
  7160  0007DE  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7161  0007E0  22DA               	addwfc	fsr2h,f,c
  7162  0007E2  EE11  F0A2         	lfsr	1,radioReceivedPacket@child
  7163  0007E6  0E07               	movlw	7
  7164  0007E8                     u21711:
  7165  0007E8  CFDB FFE3          	movff	plusw2,plusw1
  7166  0007EC  06E8               	decf	wreg,f,c
  7167  0007EE  E2FC               	bc	u21711
  7168                           
  7169                           ;NetworkBridge.c: 106: parent=source;
  7170  0007F0  EE21  F086         	lfsr	2,radioReceivedPacket@source
  7171  0007F4  EE11  F0AA         	lfsr	1,radioReceivedPacket@parent
  7172  0007F8  0E07               	movlw	7
  7173  0007FA                     u21721:
  7174  0007FA  CFDB FFE3          	movff	plusw2,plusw1
  7175  0007FE  06E8               	decf	wreg,f,c
  7176  000800  E2FC               	bc	u21721
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;NetworkBridge.c: 107: TunnelManagerSetTunnel(&child, &parent);
  7180  000802  0EA2               	movlw	low radioReceivedPacket@child
  7181  000804  0100               	movlb	0	; () banked
  7182  000806  6F80               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7183  000808  0E01               	movlw	high radioReceivedPacket@child
  7184  00080A  6F81               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7185  00080C  0EAA               	movlw	low radioReceivedPacket@parent
  7186  00080E  6F82               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7187  000810  0E01               	movlw	high radioReceivedPacket@parent
  7188  000812  6F83               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7189  000814  EC13  F01A         	call	_TunnelManagerSetTunnel	;wreg free
  7190  000818                     l14211:
  7191                           
  7192                           ;NetworkBridge.c: 108: }
  7193                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7194  000818  0101               	movlb	1	; () banked
  7195  00081A  EE20 F004          	lfsr	2,4
  7196  00081E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7197  000820  26D9               	addwf	fsr2l,f,c
  7198  000822  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7199  000824  22DA               	addwfc	fsr2h,f,c
  7200  000826  EE00  F068         	lfsr	0,isBroadcastAddress@address
  7201  00082A  0E07               	movlw	7
  7202  00082C                     u21731:
  7203  00082C  CFDB FFEB          	movff	plusw2,plusw0
  7204  000830  06E8               	decf	wreg,f,c
  7205  000832  E2FC               	bc	u21731
  7206  000834  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
  7207  000838  0101               	movlb	1	; () banked
  7208  00083A  6F99               	movwf	_radioReceivedPacket$5323& (0+255),b
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;NetworkBridge.c: 108: }
  7212                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7213  00083C  C190  F0E9         	movff	radioReceivedPacket@data,NetworkManagerProcessIncomingData@data
  7214  000840  C191  F0EA         	movff	radioReceivedPacket@data+1,NetworkManagerProcessIncomingData@data+1
  7215  000844  C192  F0EB         	movff	radioReceivedPacket@size,NetworkManagerProcessIncomingData@size
  7216  000848  C193  F0EC         	movff	radioReceivedPacket@size+1,NetworkManagerProcessIncomingData@size+1
  7217  00084C  C199  F0ED         	movff	_radioReceivedPacket$5323,NetworkManagerProcessIncomingData@isBroadcast
  7218  000850  C196  F0EE         	movff	radioReceivedPacket@isSecure,NetworkManagerProcessIncomingData@isSecure
  7219  000854  EC95  F017         	call	_NetworkManagerProcessIncomingData	;wreg free
  7220                           
  7221                           ;NetworkBridge.c: 111: }else
  7222  000858  EF40  F03E         	goto	_radioDiscardPacket
  7223  00085C                     l14215:
  7224                           
  7225                           ;NetworkBridge.c: 112: {
  7226                           ;NetworkBridge.c: 114: if(isBroadcast==1)
  7227  00085C  0101               	movlb	1	; () banked
  7228  00085E  0595               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7229  000860  E11C               	bnz	l14223
  7230                           
  7231                           ; BSR set to: 1
  7232                           ;NetworkBridge.c: 115: {
  7233                           ;NetworkBridge.c: 116: if(dhdr->Hops>0)
  7234  000862  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7235  000866  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7236  00086A  50DF               	movf	indf2,w,c
  7237  00086C  E101 D1E4          	bz	l14307
  7238                           
  7239                           ; BSR set to: 1
  7240                           ;NetworkBridge.c: 117: {
  7241                           ;NetworkBridge.c: 118: dhdr->Hops--;
  7242  000870  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7243  000874  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7244  000878  06DF               	decf	indf2,f,c
  7245  00087A                     l14221:
  7246                           
  7247                           ;NetworkBridge.c: 119: BroadcastManagerDelaySend(data,size,isSecure,0);
  7248  00087A  C190  F08C         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  7249  00087E  C191  F08D         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  7250  000882  C192  F08E         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  7251  000886  C193  F08F         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  7252  00088A  C196  F090         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  7253  00088E  0100               	movlb	0	; () banked
  7254  000890  6B91               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  7255  000892  EC3C  F023         	call	_BroadcastManagerDelaySend	;wreg free
  7256  000896  EF40  F03E         	goto	_radioDiscardPacket
  7257  00089A                     l14223:
  7258                           
  7259                           ; BSR set to: 1
  7260  00089A  EE20 F004          	lfsr	2,4
  7261  00089E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7262  0008A0  26D9               	addwf	fsr2l,f,c
  7263  0008A2  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7264  0008A4  22DA               	addwfc	fsr2h,f,c
  7265  0008A6  EE00  F070         	lfsr	0,isSameAddress@a1
  7266  0008AA  0E07               	movlw	7
  7267  0008AC                     u21761:
  7268  0008AC  CFDB FFEB          	movff	plusw2,plusw0
  7269  0008B0  06E8               	decf	wreg,f,c
  7270  0008B2  E2FC               	bc	u21761
  7271  0008B4  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
  7272  0008B8  CFE9 FFD9          	movff	fsr0l,fsr2l
  7273  0008BC  CFEA FFDA          	movff	fsr0h,fsr2h
  7274  0008C0  EE00  F078         	lfsr	0,isSameAddress@a2
  7275  0008C4  0E07               	movlw	7
  7276  0008C6                     u21771:
  7277  0008C6  CFDB FFEB          	movff	plusw2,plusw0
  7278  0008CA  06E8               	decf	wreg,f,c
  7279  0008CC  E2FC               	bc	u21771
  7280  0008CE  ECC5  F03C         	call	_isSameAddress	;wreg free
  7281  0008D2  06E8               	decf	wreg,f,c
  7282  0008D4  E133               	bnz	l14231
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;NetworkBridge.c: 122: {
  7286                           ;NetworkBridge.c: 124: child=dhdr->origin;
  7287  0008D6  0101               	movlb	1	; () banked
  7288  0008D8  EE20 F00C          	lfsr	2,12
  7289  0008DC  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7290  0008DE  26D9               	addwf	fsr2l,f,c
  7291  0008E0  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7292  0008E2  22DA               	addwfc	fsr2h,f,c
  7293  0008E4  EE11  F0A2         	lfsr	1,radioReceivedPacket@child
  7294  0008E8  0E07               	movlw	7
  7295  0008EA                     u21791:
  7296  0008EA  CFDB FFE3          	movff	plusw2,plusw1
  7297  0008EE  06E8               	decf	wreg,f,c
  7298  0008F0  E2FC               	bc	u21791
  7299                           
  7300                           ;NetworkBridge.c: 125: parent=source;
  7301  0008F2  EE21  F086         	lfsr	2,radioReceivedPacket@source
  7302  0008F6  EE11  F0AA         	lfsr	1,radioReceivedPacket@parent
  7303  0008FA  0E07               	movlw	7
  7304  0008FC                     u21801:
  7305  0008FC  CFDB FFE3          	movff	plusw2,plusw1
  7306  000900  06E8               	decf	wreg,f,c
  7307  000902  E2FC               	bc	u21801
  7308                           
  7309                           ; BSR set to: 1
  7310                           ;NetworkBridge.c: 126: TunnelManagerSetTunnel(&child, &parent);
  7311  000904  0EA2               	movlw	low radioReceivedPacket@child
  7312  000906  0100               	movlb	0	; () banked
  7313  000908  6F80               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7314  00090A  0E01               	movlw	high radioReceivedPacket@child
  7315  00090C  6F81               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7316  00090E  0EAA               	movlw	low radioReceivedPacket@parent
  7317  000910  6F82               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7318  000912  0E01               	movlw	high radioReceivedPacket@parent
  7319  000914  6F83               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7320  000916  EC13  F01A         	call	_TunnelManagerSetTunnel	;wreg free
  7321  00091A                     l14229:
  7322                           
  7323                           ;NetworkBridge.c: 127: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
  7324  00091A  C190  F083         	movff	radioReceivedPacket@data,TMSendFormedPacketTowardsCoordinator@data
  7325  00091E  C191  F084         	movff	radioReceivedPacket@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  7326  000922  C192  F085         	movff	radioReceivedPacket@size,TMSendFormedPacketTowardsCoordinator@size
  7327  000926  C193  F086         	movff	radioReceivedPacket@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  7328  00092A  0E01               	movlw	1
  7329  00092C  0100               	movlb	0	; () banked
  7330  00092E  6F87               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  7331  000930  C196  F088         	movff	radioReceivedPacket@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  7332  000934  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  7333                           
  7334                           ;NetworkBridge.c: 128: }else
  7335  000938  EF40  F03E         	goto	_radioDiscardPacket
  7336  00093C                     l14231:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;NetworkBridge.c: 129: {
  7340                           ;NetworkBridge.c: 138: if(dhdr->packettype==PacketRoutedData)
  7341  00093C  0101               	movlb	1	; () banked
  7342  00093E  EE20 F002          	lfsr	2,2
  7343  000942  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7344  000944  26D9               	addwf	fsr2l,f,c
  7345  000946  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7346  000948  22DA               	addwfc	fsr2h,f,c
  7347  00094A  0E26               	movlw	38
  7348  00094C  18DE               	xorwf	postinc2,w,c
  7349  00094E  E12E               	bnz	l14241
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;NetworkBridge.c: 139: {
  7353                           ;NetworkBridge.c: 142: child=dhdr->origin;
  7354  000950  EE20 F00C          	lfsr	2,12
  7355  000954  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7356  000956  26D9               	addwf	fsr2l,f,c
  7357  000958  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7358  00095A  22DA               	addwfc	fsr2h,f,c
  7359  00095C  EE11  F0A2         	lfsr	1,radioReceivedPacket@child
  7360  000960  0E07               	movlw	7
  7361  000962                     u21821:
  7362  000962  CFDB FFE3          	movff	plusw2,plusw1
  7363  000966  06E8               	decf	wreg,f,c
  7364  000968  E2FC               	bc	u21821
  7365                           
  7366                           ;NetworkBridge.c: 143: parent=source;
  7367  00096A  EE21  F086         	lfsr	2,radioReceivedPacket@source
  7368  00096E  EE11  F0AA         	lfsr	1,radioReceivedPacket@parent
  7369  000972  0E07               	movlw	7
  7370  000974                     u21831:
  7371  000974  CFDB FFE3          	movff	plusw2,plusw1
  7372  000978  06E8               	decf	wreg,f,c
  7373  00097A  E2FC               	bc	u21831
  7374                           
  7375                           ; BSR set to: 1
  7376                           ;NetworkBridge.c: 144: TunnelManagerSetTunnel(&child, &parent);
  7377  00097C  0EA2               	movlw	low radioReceivedPacket@child
  7378  00097E  0100               	movlb	0	; () banked
  7379  000980  6F80               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7380  000982  0E01               	movlw	high radioReceivedPacket@child
  7381  000984  6F81               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7382  000986  0EAA               	movlw	low radioReceivedPacket@parent
  7383  000988  6F82               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7384  00098A  0E01               	movlw	high radioReceivedPacket@parent
  7385  00098C  6F83               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7386  00098E  EC13  F01A         	call	_TunnelManagerSetTunnel	;wreg free
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;NetworkBridge.c: 145: if(NetworkGetDeviceType()==DeviceCoordinator)
  7390  000992  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7391  000996  0900               	iorlw	0
  7392  000998  E109               	bnz	l14241
  7393                           
  7394                           ;NetworkBridge.c: 146: {
  7395                           ;NetworkBridge.c: 147: dhdr->packettype=PacketData;
  7396  00099A  0101               	movlb	1	; () banked
  7397  00099C  EE20 F002          	lfsr	2,2
  7398  0009A0  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7399  0009A2  26D9               	addwf	fsr2l,f,c
  7400  0009A4  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7401  0009A6  22DA               	addwfc	fsr2h,f,c
  7402  0009A8  0E23               	movlw	35
  7403  0009AA  6EDF               	movwf	indf2,c
  7404  0009AC                     l14241:
  7405                           
  7406                           ;NetworkBridge.c: 148: }
  7407                           ;NetworkBridge.c: 149: }
  7408                           ;NetworkBridge.c: 150: child=dhdr->target;
  7409  0009AC  0101               	movlb	1	; () banked
  7410  0009AE  EE20 F004          	lfsr	2,4
  7411  0009B2  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7412  0009B4  26D9               	addwf	fsr2l,f,c
  7413  0009B6  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7414  0009B8  22DA               	addwfc	fsr2h,f,c
  7415  0009BA  EE11  F0A2         	lfsr	1,radioReceivedPacket@child
  7416  0009BE  0E07               	movlw	7
  7417  0009C0                     u21851:
  7418  0009C0  CFDB FFE3          	movff	plusw2,plusw1
  7419  0009C4  06E8               	decf	wreg,f,c
  7420  0009C6  E2FC               	bc	u21851
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;NetworkBridge.c: 151: if(DeviceManagerGetDeviceType(child)==DeviceSleepingRFD)
  7424  0009C8  EE21  F0A2         	lfsr	2,radioReceivedPacket@child
  7425  0009CC  EE00  F080         	lfsr	0,DeviceManagerGetDeviceType@address
  7426  0009D0  0E07               	movlw	7
  7427  0009D2                     u21861:
  7428  0009D2  CFDB FFEB          	movff	plusw2,plusw0
  7429  0009D6  06E8               	decf	wreg,f,c
  7430  0009D8  E2FC               	bc	u21861
  7431  0009DA  EC31  F033         	call	_DeviceManagerGetDeviceType	;wreg free
  7432  0009DE  0A02               	xorlw	2
  7433  0009E0  E119               	bnz	l14247
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;NetworkBridge.c: 152: {
  7437                           ;NetworkBridge.c: 154: DeviceManagerBufferDeviceData(child,data,size,isSecure,1);
  7438  0009E2  EE21  F0A2         	lfsr	2,radioReceivedPacket@child
  7439  0009E6  EE00  F06C         	lfsr	0,DeviceManagerBufferDeviceData@address
  7440  0009EA  0E07               	movlw	7
  7441  0009EC                     u21881:
  7442  0009EC  CFDB FFEB          	movff	plusw2,plusw0
  7443  0009F0  06E8               	decf	wreg,f,c
  7444  0009F2  E2FC               	bc	u21881
  7445  0009F4  C190  F074         	movff	radioReceivedPacket@data,DeviceManagerBufferDeviceData@data
  7446  0009F8  C191  F075         	movff	radioReceivedPacket@data+1,DeviceManagerBufferDeviceData@data+1
  7447  0009FC  C192  F076         	movff	radioReceivedPacket@size,DeviceManagerBufferDeviceData@size
  7448  000A00  C193  F077         	movff	radioReceivedPacket@size+1,DeviceManagerBufferDeviceData@size+1
  7449  000A04  C196  F078         	movff	radioReceivedPacket@isSecure,DeviceManagerBufferDeviceData@isSecure
  7450  000A08  0E01               	movlw	1
  7451  000A0A  6F79               	movwf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  7452  000A0C  EC13  F03E         	call	_DeviceManagerBufferDeviceData	;wreg free
  7453                           
  7454                           ;NetworkBridge.c: 155: }else
  7455  000A10  EF40  F03E         	goto	_radioDiscardPacket
  7456  000A14                     l14247:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;NetworkBridge.c: 156: {
  7460                           ;NetworkBridge.c: 157: parent = TunnelManagerGetTunnel(child);
  7461  000A14  EE21  F0A2         	lfsr	2,radioReceivedPacket@child
  7462  000A18  EE00  F098         	lfsr	0,TunnelManagerGetTunnel@device
  7463  000A1C  0E07               	movlw	7
  7464  000A1E                     u21891:
  7465  000A1E  CFDB FFEB          	movff	plusw2,plusw0
  7466  000A22  06E8               	decf	wreg,f,c
  7467  000A24  E2FC               	bc	u21891
  7468  000A26  EC7E  F025         	call	_TunnelManagerGetTunnel	;wreg free
  7469  000A2A  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7470  000A2E  0E07               	movlw	7
  7471  000A30                     u21901:
  7472  000A30  CFEB FFDB          	movff	plusw0,plusw2
  7473  000A34  06E8               	decf	wreg,f,c
  7474  000A36  E2FC               	bc	u21901
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;NetworkBridge.c: 158: if(isBroadcastAddress(parent)==1)
  7478  000A38  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7479  000A3C  EE00  F068         	lfsr	0,isBroadcastAddress@address
  7480  000A40  0E07               	movlw	7
  7481  000A42                     u21911:
  7482  000A42  CFDB FFEB          	movff	plusw2,plusw0
  7483  000A46  06E8               	decf	wreg,f,c
  7484  000A48  E2FC               	bc	u21911
  7485  000A4A  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
  7486  000A4E  06E8               	decf	wreg,f,c
  7487  000A50  E001 D0A7          	bnz	l14293
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;NetworkBridge.c: 159: {
  7491                           ;NetworkBridge.c: 160: if(dhdr->packettype==PacketRoutedData)
  7492  000A54  0101               	movlb	1	; () banked
  7493  000A56  EE20 F002          	lfsr	2,2
  7494  000A5A  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7495  000A5C  26D9               	addwf	fsr2l,f,c
  7496  000A5E  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7497  000A60  22DA               	addwfc	fsr2h,f,c
  7498  000A62  0E26               	movlw	38
  7499  000A64  18DE               	xorwf	postinc2,w,c
  7500  000A66  E001 D0E1          	bnz	l14303
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;NetworkBridge.c: 161: {
  7504                           ;NetworkBridge.c: 162: parent=GetRouteAddressOfChild(dhdr->target);
  7505  000A6A  EE20 F004          	lfsr	2,4
  7506  000A6E  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7507  000A70  26D9               	addwf	fsr2l,f,c
  7508  000A72  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7509  000A74  22DA               	addwfc	fsr2h,f,c
  7510  000A76  EE00  F096         	lfsr	0,GetRouteAddressOfChild@child
  7511  000A7A  0E07               	movlw	7
  7512  000A7C                     u21941:
  7513  000A7C  CFDB FFEB          	movff	plusw2,plusw0
  7514  000A80  06E8               	decf	wreg,f,c
  7515  000A82  E2FC               	bc	u21941
  7516  000A84  EC63  F032         	call	_GetRouteAddressOfChild	;wreg free
  7517  000A88  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7518  000A8C  0E07               	movlw	7
  7519  000A8E                     u21951:
  7520  000A8E  CFEB FFDB          	movff	plusw0,plusw2
  7521  000A92  06E8               	decf	wreg,f,c
  7522  000A94  E2FC               	bc	u21951
  7523                           
  7524                           ;NetworkBridge.c: 163: if(isBroadcastAddress(parent)==0)
  7525  000A96  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7526  000A9A  EE00  F068         	lfsr	0,isBroadcastAddress@address
  7527  000A9E  0E07               	movlw	7
  7528  000AA0                     u21961:
  7529  000AA0  CFDB FFEB          	movff	plusw2,plusw0
  7530  000AA4  06E8               	decf	wreg,f,c
  7531  000AA6  E2FC               	bc	u21961
  7532  000AA8  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
  7533  000AAC  0900               	iorlw	0
  7534  000AAE  E164               	bnz	l14279
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;NetworkBridge.c: 164: {
  7538                           ;NetworkBridge.c: 166: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  7539  000AB0  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7540  000AB4  0900               	iorlw	0
  7541  000AB6  E01B               	bz	l14263
  7542  000AB8  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7543  000ABC  EE00  F070         	lfsr	0,isSameAddress@a1
  7544  000AC0  0E07               	movlw	7
  7545  000AC2                     u21991:
  7546  000AC2  CFDB FFEB          	movff	plusw2,plusw0
  7547  000AC6  06E8               	decf	wreg,f,c
  7548  000AC8  E2FC               	bc	u21991
  7549  000ACA  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
  7550  000ACE  CFE9 FFD9          	movff	fsr0l,fsr2l
  7551  000AD2  CFEA FFDA          	movff	fsr0h,fsr2h
  7552  000AD6  EE00  F078         	lfsr	0,isSameAddress@a2
  7553  000ADA  0E07               	movlw	7
  7554  000ADC                     u22001:
  7555  000ADC  CFDB FFEB          	movff	plusw2,plusw0
  7556  000AE0  06E8               	decf	wreg,f,c
  7557  000AE2  E2FC               	bc	u22001
  7558  000AE4  ECC5  F03C         	call	_isSameAddress	;wreg free
  7559  000AE8  0900               	iorlw	0
  7560  000AEA  E001 D716          	bnz	l14229
  7561  000AEE                     l14263:
  7562                           
  7563                           ;NetworkBridge.c: 170: {
  7564                           ;NetworkBridge.c: 171: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  7565  000AEE  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7566  000AF2  EE00  F09F         	lfsr	0,radioUnicast@dest
  7567  000AF6  0E07               	movlw	7
  7568  000AF8                     u22021:
  7569  000AF8  CFDB FFEB          	movff	plusw2,plusw0
  7570  000AFC  06E8               	decf	wreg,f,c
  7571  000AFE  E2FC               	bc	u22021
  7572  000B00  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
  7573  000B04  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
  7574  000B08  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  7575  000B0C  C190  F0A9         	movff	radioReceivedPacket@data,radioUnicast@data
  7576  000B10  C191  F0AA         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  7577  000B14  C192  F0AB         	movff	radioReceivedPacket@size,radioUnicast@datasize
  7578  000B18  C196  F0AC         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  7579  000B1C  ECB4  F037         	call	_radioUnicast	;wreg free
  7580  000B20  0900               	iorlw	0
  7581  000B22  E001 D089          	bnz	l14307
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;NetworkBridge.c: 172: {
  7585                           ;NetworkBridge.c: 173: LE_RemoveNeighborDevice(parent);
  7586  000B26  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7587  000B2A  EE00  F09C         	lfsr	0,LE_RemoveNeighborDevice@device
  7588  000B2E  0E07               	movlw	7
  7589  000B30                     u22041:
  7590  000B30  CFDB FFEB          	movff	plusw2,plusw0
  7591  000B34  06E8               	decf	wreg,f,c
  7592  000B36  E2FC               	bc	u22041
  7593  000B38  EC21  F035         	call	_LE_RemoveNeighborDevice	;wreg free
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;NetworkBridge.c: 174: if(isSameAddress(dhdr->target,parent)==1)
  7597  000B3C  0101               	movlb	1	; () banked
  7598  000B3E  EE20 F004          	lfsr	2,4
  7599  000B42  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7600  000B44  26D9               	addwf	fsr2l,f,c
  7601  000B46  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7602  000B48  22DA               	addwfc	fsr2h,f,c
  7603  000B4A  EE00  F070         	lfsr	0,isSameAddress@a1
  7604  000B4E  0E07               	movlw	7
  7605  000B50                     u22051:
  7606  000B50  CFDB FFEB          	movff	plusw2,plusw0
  7607  000B54  06E8               	decf	wreg,f,c
  7608  000B56  E2FC               	bc	u22051
  7609  000B58  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7610  000B5C  EE00  F078         	lfsr	0,isSameAddress@a2
  7611  000B60  0E07               	movlw	7
  7612  000B62                     u22061:
  7613  000B62  CFDB FFEB          	movff	plusw2,plusw0
  7614  000B66  06E8               	decf	wreg,f,c
  7615  000B68  E2FC               	bc	u22061
  7616  000B6A  ECC5  F03C         	call	_isSameAddress	;wreg free
  7617  000B6E  06E8               	decf	wreg,f,c
  7618  000B70  E163               	bnz	l14307
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;NetworkBridge.c: 175: {
  7622                           ;NetworkBridge.c: 178: if(NetworkGetDeviceType()==DeviceCoordinator)
  7623  000B72  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7624  000B76  D002               	goto	L32
  7625  000B78                     l14279:
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;NetworkBridge.c: 193: {
  7629                           ;NetworkBridge.c: 195: if(NetworkGetDeviceType()==DeviceCoordinator)
  7630  000B78  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7631  000B7C                     L32:
  7632  000B7C  0900               	iorlw	0
  7633  000B7E  E001 D6CC          	bnz	l14229
  7634                           
  7635                           ;NetworkBridge.c: 196: {
  7636                           ;NetworkBridge.c: 198: dhdr->Hops=20;
  7637  000B82  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7638  000B86  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7639  000B8A  0E14               	movlw	20
  7640  000B8C  6EDF               	movwf	indf2,c
  7641                           
  7642                           ;NetworkBridge.c: 199: dhdr->packettype=PacketData;
  7643  000B8E  0101               	movlb	1	; () banked
  7644  000B90  EE20 F002          	lfsr	2,2
  7645  000B94  51B2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7646  000B96  26D9               	addwf	fsr2l,f,c
  7647  000B98  51B3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7648  000B9A  22DA               	addwfc	fsr2h,f,c
  7649  000B9C  0E23               	movlw	35
  7650  000B9E                     L3:
  7651  000B9E  6EDF               	movwf	indf2,c
  7652  000BA0  D66C               	goto	l14221
  7653  000BA2                     l14293:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;NetworkBridge.c: 213: {
  7657                           ;NetworkBridge.c: 215: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  7658  000BA2  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  7659  000BA6  0900               	iorlw	0
  7660  000BA8  E01B               	bz	l14299
  7661  000BAA  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7662  000BAE  EE00  F070         	lfsr	0,isSameAddress@a1
  7663  000BB2  0E07               	movlw	7
  7664  000BB4                     u22111:
  7665  000BB4  CFDB FFEB          	movff	plusw2,plusw0
  7666  000BB8  06E8               	decf	wreg,f,c
  7667  000BBA  E2FC               	bc	u22111
  7668  000BBC  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
  7669  000BC0  CFE9 FFD9          	movff	fsr0l,fsr2l
  7670  000BC4  CFEA FFDA          	movff	fsr0h,fsr2h
  7671  000BC8  EE00  F078         	lfsr	0,isSameAddress@a2
  7672  000BCC  0E07               	movlw	7
  7673  000BCE                     u22121:
  7674  000BCE  CFDB FFEB          	movff	plusw2,plusw0
  7675  000BD2  06E8               	decf	wreg,f,c
  7676  000BD4  E2FC               	bc	u22121
  7677  000BD6  ECC5  F03C         	call	_isSameAddress	;wreg free
  7678  000BDA  0900               	iorlw	0
  7679  000BDC  E001 D69D          	bnz	l14229
  7680  000BE0                     l14299:
  7681                           
  7682                           ;NetworkBridge.c: 219: {
  7683                           ;NetworkBridge.c: 220: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  7684  000BE0  EE21  F0AA         	lfsr	2,radioReceivedPacket@parent
  7685  000BE4  EE00  F09F         	lfsr	0,radioUnicast@dest
  7686  000BE8  0E07               	movlw	7
  7687  000BEA                     u22141:
  7688  000BEA  CFDB FFEB          	movff	plusw2,plusw0
  7689  000BEE  06E8               	decf	wreg,f,c
  7690  000BF0  E2FC               	bc	u22141
  7691  000BF2  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
  7692  000BF6  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
  7693  000BFA  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  7694  000BFE  C190  F0A9         	movff	radioReceivedPacket@data,radioUnicast@data
  7695  000C02  C191  F0AA         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  7696  000C06  C192  F0AB         	movff	radioReceivedPacket@size,radioUnicast@datasize
  7697  000C0A  C196  F0AC         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  7698  000C0E  ECB4  F037         	call	_radioUnicast	;wreg free
  7699  000C12  0900               	iorlw	0
  7700  000C14  E111               	bnz	l14307
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;NetworkBridge.c: 221: {
  7704                           ;NetworkBridge.c: 222: TunnelManagerInvalidateTunnel(child);
  7705  000C16  EE21  F0A2         	lfsr	2,radioReceivedPacket@child
  7706  000C1A  EE00  F080         	lfsr	0,TunnelManagerInvalidateTunnel@device
  7707  000C1E  0E07               	movlw	7
  7708  000C20                     u22161:
  7709  000C20  CFDB FFEB          	movff	plusw2,plusw0
  7710  000C24  06E8               	decf	wreg,f,c
  7711  000C26  E2FC               	bc	u22161
  7712  000C28  ECE5  F030         	call	_TunnelManagerInvalidateTunnel	;wreg free
  7713  000C2C                     l14303:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;NetworkBridge.c: 223: dhdr->Hops=20;
  7717  000C2C  C1B2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7718  000C30  C1B3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7719  000C34  0E14               	movlw	20
  7720  000C36  D7B3               	goto	L3
  7721  000C38                     l14307:
  7722                           
  7723                           ;NetworkBridge.c: 225: }
  7724                           ;NetworkBridge.c: 226: }
  7725                           ;NetworkBridge.c: 227: }
  7726                           ;NetworkBridge.c: 228: }
  7727                           ;NetworkBridge.c: 229: }
  7728                           ;NetworkBridge.c: 230: }
  7729                           ;NetworkBridge.c: 231: }
  7730                           ;NetworkBridge.c: 232: }
  7731                           ;NetworkBridge.c: 233: }
  7732                           ;NetworkBridge.c: 234: radioDiscardPacket();
  7733  000C38  EF40  F03E         	goto	_radioDiscardPacket	;wreg free
  7734  000C3C                     __end_of_radioReceivedPacket:
  7735                           	opt stack 0
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           postinc0	equ	0xFEE
  7743                           plusw0	equ	0xFEB
  7744                           fsr0h	equ	0xFEA
  7745                           fsr0l	equ	0xFE9
  7746                           wreg	equ	0xFE8
  7747                           indf1	equ	0xFE7
  7748                           postdec1	equ	0xFE5
  7749                           plusw1	equ	0xFE3
  7750                           fsr1h	equ	0xFE2
  7751                           fsr1l	equ	0xFE1
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           plusw2	equ	0xFDB
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _radioDiscardPacket *****************
  7761 ;; Defined at:
  7762 ;;		line 143 in file "../src/Bridge.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;		None
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : E/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;Total ram usage:        0 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    5
  7783 ;; This function calls:
  7784 ;;		_MiMAC_DiscardPacket
  7785 ;; This function is called by:
  7786 ;;		_radioReceivedPacket
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text16
  7791  007C80                     __ptext16:
  7792                           	opt stack 0
  7793  007C80                     _radioDiscardPacket:
  7794                           	opt stack 22
  7795                           
  7796                           ;Bridge.c: 145: MiMAC_DiscardPacket();
  7797                           
  7798                           ;incstack = 0
  7799  007C80  EF23  F03D         	goto	_MiMAC_DiscardPacket	;wreg free
  7800  007C84                     __end_of_radioDiscardPacket:
  7801                           	opt stack 0
  7802                           tblptru	equ	0xFF8
  7803                           tblptrh	equ	0xFF7
  7804                           tblptrl	equ	0xFF6
  7805                           tablat	equ	0xFF5
  7806                           prodh	equ	0xFF4
  7807                           prodl	equ	0xFF3
  7808                           postinc0	equ	0xFEE
  7809                           plusw0	equ	0xFEB
  7810                           fsr0h	equ	0xFEA
  7811                           fsr0l	equ	0xFE9
  7812                           wreg	equ	0xFE8
  7813                           indf1	equ	0xFE7
  7814                           postdec1	equ	0xFE5
  7815                           plusw1	equ	0xFE3
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           postdec2	equ	0xFDD
  7821                           plusw2	equ	0xFDB
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8
  7825                           
  7826 ;; *************** function _isKnownPacket *****************
  7827 ;; Defined at:
  7828 ;;		line 17 in file "../Cache.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  hash            4   56[BANK0 ] unsigned long 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  zeros          12   66[BANK0 ] unsigned char [12]
  7833 ;;  OldestTick      8   85[BANK0 ] struct TickMS_t_def
  7834 ;;  i               2   93[BANK0 ] unsigned int 
  7835 ;;  emptyindex      2   83[BANK0 ] unsigned int 
  7836 ;;  index           2   81[BANK0 ] unsigned int 
  7837 ;;  oldestindex     2   79[BANK0 ] unsigned int 
  7838 ;;  unknown         1   78[BANK0 ] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1    wreg      unsigned char 
  7841 ;; Registers used:
  7842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7843 ;; Tracked objects:
  7844 ;;		On entry : F/0
  7845 ;;		On exit  : F/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7848 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7852 ;;Total ram usage:       39 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    8
  7855 ;; This function calls:
  7856 ;;		_MSTickGet
  7857 ;;		_MSTickGetDiffNow
  7858 ;;		_memcmp
  7859 ;;		_memset
  7860 ;; This function is called by:
  7861 ;;		_radioReceivedPacket
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text17
  7866  0031B8                     __ptext17:
  7867                           	opt stack 0
  7868  0031B8                     _isKnownPacket:
  7869                           	opt stack 19
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;Cache.c: 19: uint16_t i;
  7873                           ;Cache.c: 20: uint16_t oldestindex=0xffff;
  7874                           
  7875                           ;incstack = 0
  7876  0031B8  69AF               	setf	isKnownPacket@oldestindex& (0+255),b
  7877  0031BA  69B0               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  7878                           
  7879                           ;Cache.c: 21: uint16_t emptyindex=0xffff;
  7880  0031BC  69B3               	setf	isKnownPacket@emptyindex& (0+255),b
  7881  0031BE  69B4               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;Cache.c: 23: bool unknown=1;
  7885  0031C0  0E01               	movlw	1
  7886  0031C2  6FAE               	movwf	isKnownPacket@unknown& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;Cache.c: 24: uint8_t zeros[sizeof(HashCache_t)];;
  7890                           ;Cache.c: 26: TickMS OldestTick;
  7891                           ;Cache.c: 28: memset(&OldestTick,0xff,sizeof(OldestTick));
  7892  0031C4  0EB5               	movlw	low isKnownPacket@OldestTick
  7893  0031C6  6F60               	movwf	memset@p1& (0+255),b
  7894  0031C8  6B61               	clrf	(memset@p1+1)& (0+255),b
  7895  0031CA  6B63               	clrf	(memset@c+1)& (0+255),b
  7896  0031CC  6962               	setf	memset@c& (0+255),b
  7897  0031CE  6B65               	clrf	(memset@n+1)& (0+255),b
  7898  0031D0  0E08               	movlw	8
  7899  0031D2  6F64               	movwf	memset@n& (0+255),b
  7900  0031D4  EC61  F03C         	call	_memset	;wreg free
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;Cache.c: 29: memset(zeros,0x00,sizeof(zeros));
  7904  0031D8  0EA2               	movlw	low isKnownPacket@zeros
  7905  0031DA  6F60               	movwf	memset@p1& (0+255),b
  7906  0031DC  6B61               	clrf	(memset@p1+1)& (0+255),b
  7907  0031DE  6B63               	clrf	(memset@c+1)& (0+255),b
  7908  0031E0  6B62               	clrf	memset@c& (0+255),b
  7909  0031E2  6B65               	clrf	(memset@n+1)& (0+255),b
  7910  0031E4  0E0C               	movlw	12
  7911  0031E6  6F64               	movwf	memset@n& (0+255),b
  7912  0031E8  EC61  F03C         	call	_memset	;wreg free
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;Cache.c: 31: for(i=0;i<30;i++)
  7916  0031EC  6BBD               	clrf	isKnownPacket@i& (0+255),b
  7917  0031EE  6BBE               	clrf	(isKnownPacket@i+1)& (0+255),b
  7918  0031F0                     l13359:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;Cache.c: 32: {
  7922                           ;Cache.c: 33: if(((OldestTick.msb>hc_table[i].RxTimeMs.msb) || ((OldestTick.msb==hc_tabl
      +                          e[i].RxTimeMs.msb) && (OldestTick.lsb>=hc_table[i].RxTimeMs.lsb) ) )==1)
  7923  0031F0  0E0C               	movlw	12
  7924  0031F2  03BD               	mulwf	isKnownPacket@i& (0+255),b
  7925  0031F4  CFF3 F09C          	movff	prodl,??_isKnownPacket
  7926  0031F8  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  7927  0031FC  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7928  0031FE  50F3               	movf	prodl,w,c
  7929  003200  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7930  003202  0E96               	movlw	low (_hc_table+8)
  7931  003204  259C               	addwf	??_isKnownPacket& (0+255),w,b
  7932  003206  6ED9               	movwf	fsr2l,c
  7933  003208  0E0A               	movlw	high (_hc_table+8)
  7934  00320A  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7935  00320C  6EDA               	movwf	fsr2h,c
  7936  00320E  51B9               	movf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7937  003210  5CDE               	subwf	postinc2,w,c
  7938  003212  51BA               	movf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7939  003214  58DE               	subwfb	postinc2,w,c
  7940  003216  51BB               	movf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7941  003218  58DE               	subwfb	postinc2,w,c
  7942  00321A  51BC               	movf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7943  00321C  58DE               	subwfb	postinc2,w,c
  7944  00321E  E333               	bnc	l13365
  7945                           
  7946                           ; BSR set to: 0
  7947  003220  0E0C               	movlw	12
  7948  003222  03BD               	mulwf	isKnownPacket@i& (0+255),b
  7949  003224  CFF3 F09C          	movff	prodl,??_isKnownPacket
  7950  003228  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  7951  00322C  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7952  00322E  50F3               	movf	prodl,w,c
  7953  003230  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7954  003232  0E96               	movlw	low (_hc_table+8)
  7955  003234  259C               	addwf	??_isKnownPacket& (0+255),w,b
  7956  003236  6ED9               	movwf	fsr2l,c
  7957  003238  0E0A               	movlw	high (_hc_table+8)
  7958  00323A  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7959  00323C  6EDA               	movwf	fsr2h,c
  7960  00323E  50DE               	movf	postinc2,w,c
  7961  003240  19B9               	xorwf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  7962  003242  E13B               	bnz	l13369
  7963  003244  50DE               	movf	postinc2,w,c
  7964  003246  19BA               	xorwf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  7965  003248  E138               	bnz	l13369
  7966  00324A  50DE               	movf	postinc2,w,c
  7967  00324C  19BB               	xorwf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  7968  00324E  E135               	bnz	l13369
  7969  003250  50DE               	movf	postinc2,w,c
  7970  003252  19BC               	xorwf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  7971  003254  E132               	bnz	l13369
  7972                           
  7973                           ; BSR set to: 0
  7974  003256  0E0C               	movlw	12
  7975  003258  03BD               	mulwf	isKnownPacket@i& (0+255),b
  7976  00325A  CFF3 F09C          	movff	prodl,??_isKnownPacket
  7977  00325E  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  7978  003262  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  7979  003264  50F3               	movf	prodl,w,c
  7980  003266  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  7981  003268  0E92               	movlw	low (_hc_table+4)
  7982  00326A  259C               	addwf	??_isKnownPacket& (0+255),w,b
  7983  00326C  6ED9               	movwf	fsr2l,c
  7984  00326E  0E0A               	movlw	high (_hc_table+4)
  7985  003270  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  7986  003272  6EDA               	movwf	fsr2h,c
  7987  003274  50DE               	movf	postinc2,w,c
  7988  003276  5DB5               	subwf	isKnownPacket@OldestTick& (0+255),w,b
  7989  003278  50DE               	movf	postinc2,w,c
  7990  00327A  59B6               	subwfb	(isKnownPacket@OldestTick+1)& (0+255),w,b
  7991  00327C  50DE               	movf	postinc2,w,c
  7992  00327E  59B7               	subwfb	(isKnownPacket@OldestTick+2)& (0+255),w,b
  7993  003280  50DE               	movf	postinc2,w,c
  7994  003282  59B8               	subwfb	(isKnownPacket@OldestTick+3)& (0+255),w,b
  7995  003284  E31A               	bnc	l13369
  7996  003286                     l13365:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;Cache.c: 34: {
  8000                           ;Cache.c: 35: OldestTick=hc_table[i].RxTimeMs;
  8001  003286  0E0C               	movlw	12
  8002  003288  03BD               	mulwf	isKnownPacket@i& (0+255),b
  8003  00328A  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8004  00328E  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8005  003292  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8006  003294  50F3               	movf	prodl,w,c
  8007  003296  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8008  003298  0E92               	movlw	low (_hc_table+4)
  8009  00329A  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8010  00329C  6ED9               	movwf	fsr2l,c
  8011  00329E  0E0A               	movlw	high (_hc_table+4)
  8012  0032A0  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8013  0032A2  6EDA               	movwf	fsr2h,c
  8014  0032A4  EE10  F0B5         	lfsr	1,isKnownPacket@OldestTick
  8015  0032A8  0E07               	movlw	7
  8016  0032AA                     u19801:
  8017  0032AA  CFDB FFE3          	movff	plusw2,plusw1
  8018  0032AE  06E8               	decf	wreg,f,c
  8019  0032B0  E2FC               	bc	u19801
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;Cache.c: 36: oldestindex=i;
  8023  0032B2  C0BD  F0AF         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  8024  0032B6  C0BE  F0B0         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  8025  0032BA                     l13369:
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;Cache.c: 37: }
  8029                           ;Cache.c: 38: if((emptyindex==0xffff) && (memcmp((uint8_t*)&hc_table[i],zeros,sizeof(zer
      +                          os))==0) )
  8030  0032BA  29B3               	incf	isKnownPacket@emptyindex& (0+255),w,b
  8031  0032BC  E120               	bnz	l13375
  8032  0032BE  29B4               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  8033  0032C0  E11E               	bnz	l13375
  8034                           
  8035                           ; BSR set to: 0
  8036  0032C2  0E0C               	movlw	12
  8037  0032C4  03BD               	mulwf	isKnownPacket@i& (0+255),b
  8038  0032C6  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8039  0032CA  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8040  0032CE  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8041  0032D0  50F3               	movf	prodl,w,c
  8042  0032D2  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8043  0032D4  0E8E               	movlw	low _hc_table
  8044  0032D6  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8045  0032D8  6F60               	movwf	memcmp@s1& (0+255),b
  8046  0032DA  0E0A               	movlw	high _hc_table
  8047  0032DC  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8048  0032DE  6F61               	movwf	(memcmp@s1+1)& (0+255),b
  8049  0032E0  0EA2               	movlw	low isKnownPacket@zeros
  8050  0032E2  6F62               	movwf	memcmp@s2& (0+255),b
  8051  0032E4  6B63               	clrf	(memcmp@s2+1)& (0+255),b
  8052  0032E6  6B65               	clrf	(memcmp@n+1)& (0+255),b
  8053  0032E8  0E0C               	movlw	12
  8054  0032EA  6F64               	movwf	memcmp@n& (0+255),b
  8055  0032EC  EC3B  F038         	call	_memcmp	;wreg free
  8056  0032F0  5160               	movf	?_memcmp& (0+255),w,b
  8057  0032F2  1161               	iorwf	(?_memcmp+1)& (0+255),w,b
  8058  0032F4  E104               	bnz	l13375
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;Cache.c: 39: {
  8062                           ;Cache.c: 40: emptyindex=i;
  8063  0032F6  C0BD  F0B3         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  8064  0032FA  C0BE  F0B4         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  8065  0032FE                     l13375:
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;Cache.c: 41: }
  8069                           ;Cache.c: 42: if( hc_table[i].Hash==hash )
  8070  0032FE  0E0C               	movlw	12
  8071  003300  03BD               	mulwf	isKnownPacket@i& (0+255),b
  8072  003302  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8073  003306  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8074  00330A  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8075  00330C  50F3               	movf	prodl,w,c
  8076  00330E  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8077  003310  0E8E               	movlw	low _hc_table
  8078  003312  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8079  003314  6ED9               	movwf	fsr2l,c
  8080  003316  0E0A               	movlw	high _hc_table
  8081  003318  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8082  00331A  6EDA               	movwf	fsr2h,c
  8083  00331C  5198               	movf	isKnownPacket@hash& (0+255),w,b
  8084  00331E  18DE               	xorwf	postinc2,w,c
  8085  003320  E138               	bnz	l13381
  8086  003322  5199               	movf	(isKnownPacket@hash+1)& (0+255),w,b
  8087  003324  18DE               	xorwf	postinc2,w,c
  8088  003326  E135               	bnz	l13381
  8089  003328  519A               	movf	(isKnownPacket@hash+2)& (0+255),w,b
  8090  00332A  18DE               	xorwf	postinc2,w,c
  8091  00332C  E132               	bnz	l13381
  8092  00332E  519B               	movf	(isKnownPacket@hash+3)& (0+255),w,b
  8093  003330  18DE               	xorwf	postinc2,w,c
  8094  003332  E12F               	bnz	l13381
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;Cache.c: 43: {
  8098                           ;Cache.c: 44: if(MSTickGetDiffNow(hc_table[i].RxTimeMs)<((SPAN)2*1000ULL))
  8099  003334  0E0C               	movlw	12
  8100  003336  03BD               	mulwf	isKnownPacket@i& (0+255),b
  8101  003338  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8102  00333C  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8103  003340  03BE               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8104  003342  50F3               	movf	prodl,w,c
  8105  003344  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8106  003346  0E92               	movlw	low (_hc_table+4)
  8107  003348  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8108  00334A  6ED9               	movwf	fsr2l,c
  8109  00334C  0E0A               	movlw	high (_hc_table+4)
  8110  00334E  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8111  003350  6EDA               	movwf	fsr2h,c
  8112  003352  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
  8113  003356  0E07               	movlw	7
  8114  003358                     u19841:
  8115  003358  CFDB FFEB          	movff	plusw2,plusw0
  8116  00335C  06E8               	decf	wreg,f,c
  8117  00335E  E2FC               	bc	u19841
  8118  003360  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
  8119  003364  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
  8120  003366  117E               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
  8121  003368  E10F               	bnz	l1701
  8122  00336A  0ED0               	movlw	208
  8123  00336C  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
  8124  00336E  0E07               	movlw	7
  8125  003370  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
  8126  003372  E20A               	bc	l1701
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;Cache.c: 45: {
  8130                           ;Cache.c: 46: emptyindex=i;
  8131  003374  C0BD  F0B3         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  8132  003378  C0BE  F0B4         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  8133                           
  8134                           ;Cache.c: 47: oldestindex=i;
  8135  00337C  C0BD  F0AF         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  8136  003380  C0BE  F0B0         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  8137                           
  8138                           ;Cache.c: 48: unknown=0;
  8139  003384  6BAE               	clrf	isKnownPacket@unknown& (0+255),b
  8140                           
  8141                           ;Cache.c: 49: }else
  8142  003386  D00D               	goto	l13385
  8143  003388                     l1701:
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;Cache.c: 50: {
  8147                           ;Cache.c: 51: emptyindex=0xffff;
  8148  003388  69B3               	setf	isKnownPacket@emptyindex& (0+255),b
  8149  00338A  69B4               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  8150                           
  8151                           ;Cache.c: 52: oldestindex=0xffff;
  8152  00338C  69AF               	setf	isKnownPacket@oldestindex& (0+255),b
  8153  00338E  69B0               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  8154  003390  D008               	goto	l13385
  8155  003392                     l13381:
  8156                           
  8157                           ; BSR set to: 0
  8158  003392  4BBD               	infsnz	isKnownPacket@i& (0+255),f,b
  8159  003394  2BBE               	incf	(isKnownPacket@i+1)& (0+255),f,b
  8160                           
  8161                           ; BSR set to: 0
  8162  003396  51BE               	movf	(isKnownPacket@i+1)& (0+255),w,b
  8163  003398  E104               	bnz	u19860
  8164  00339A  0E1E               	movlw	30
  8165  00339C  5DBD               	subwf	isKnownPacket@i& (0+255),w,b
  8166  00339E  E201 D727          	bnc	l13359
  8167  0033A2                     u19860:
  8168  0033A2                     l13385:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;Cache.c: 55: }
  8172                           ;Cache.c: 56: }
  8173                           ;Cache.c: 57: if(emptyindex!=0xffff)
  8174  0033A2  29B3               	incf	isKnownPacket@emptyindex& (0+255),w,b
  8175  0033A4  E102               	bnz	u19870
  8176  0033A6  29B4               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  8177  0033A8  E005               	bz	l1703
  8178  0033AA                     u19870:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;Cache.c: 58: {
  8182                           ;Cache.c: 59: index=emptyindex;
  8183  0033AA  C0B3  F0B1         	movff	isKnownPacket@emptyindex,isKnownPacket@index
  8184  0033AE  C0B4  F0B2         	movff	isKnownPacket@emptyindex+1,isKnownPacket@index+1
  8185                           
  8186                           ;Cache.c: 60: }else
  8187  0033B2  D004               	goto	l13389
  8188  0033B4                     l1703:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;Cache.c: 61: {
  8192                           ;Cache.c: 62: index=oldestindex;
  8193  0033B4  C0AF  F0B1         	movff	isKnownPacket@oldestindex,isKnownPacket@index
  8194  0033B8  C0B0  F0B2         	movff	isKnownPacket@oldestindex+1,isKnownPacket@index+1
  8195  0033BC                     l13389:
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;Cache.c: 63: }
  8199                           ;Cache.c: 64: if(index!=0xffff)
  8200  0033BC  29B1               	incf	isKnownPacket@index& (0+255),w,b
  8201  0033BE  E102               	bnz	u19880
  8202  0033C0  29B2               	incf	(isKnownPacket@index+1)& (0+255),w,b
  8203  0033C2  E02D               	bz	l13395
  8204  0033C4                     u19880:
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;Cache.c: 65: {
  8208                           ;Cache.c: 66: hc_table[index].Hash=hash;
  8209  0033C4  0E0C               	movlw	12
  8210  0033C6  03B1               	mulwf	isKnownPacket@index& (0+255),b
  8211  0033C8  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8212  0033CC  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8213  0033D0  03B2               	mulwf	(isKnownPacket@index+1)& (0+255),b
  8214  0033D2  50F3               	movf	prodl,w,c
  8215  0033D4  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8216  0033D6  0E8E               	movlw	low _hc_table
  8217  0033D8  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8218  0033DA  6ED9               	movwf	fsr2l,c
  8219  0033DC  0E0A               	movlw	high _hc_table
  8220  0033DE  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8221  0033E0  6EDA               	movwf	fsr2h,c
  8222  0033E2  C098  FFDE         	movff	isKnownPacket@hash,postinc2
  8223  0033E6  C099  FFDE         	movff	isKnownPacket@hash+1,postinc2
  8224  0033EA  C09A  FFDE         	movff	isKnownPacket@hash+2,postinc2
  8225  0033EE  C09B  FFDE         	movff	isKnownPacket@hash+3,postinc2
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;Cache.c: 67: hc_table[index].RxTimeMs=MSTickGet();
  8229  0033F2  EC70  F03B         	call	_MSTickGet	;wreg free
  8230  0033F6  0E0C               	movlw	12
  8231  0033F8  03B1               	mulwf	isKnownPacket@index& (0+255),b
  8232  0033FA  CFF3 F09C          	movff	prodl,??_isKnownPacket
  8233  0033FE  CFF4 F09D          	movff	prodh,??_isKnownPacket+1
  8234  003402  03B2               	mulwf	(isKnownPacket@index+1)& (0+255),b
  8235  003404  50F3               	movf	prodl,w,c
  8236  003406  279D               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8237  003408  0E92               	movlw	low (_hc_table+4)
  8238  00340A  259C               	addwf	??_isKnownPacket& (0+255),w,b
  8239  00340C  6ED9               	movwf	fsr2l,c
  8240  00340E  0E0A               	movlw	high (_hc_table+4)
  8241  003410  219D               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8242  003412  6EDA               	movwf	fsr2h,c
  8243  003414  0E07               	movlw	7
  8244  003416                     u19891:
  8245  003416  CFEB FFDB          	movff	plusw0,plusw2
  8246  00341A  06E8               	decf	wreg,f,c
  8247  00341C  E2FC               	bc	u19891
  8248  00341E                     l13395:
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;Cache.c: 68: }
  8252                           ;Cache.c: 69: return(!unknown);
  8253  00341E  51AE               	movf	isKnownPacket@unknown& (0+255),w,b
  8254  003420  B4D8               	btfsc	status,2,c
  8255  003422  0C01               	retlw	1
  8256                           
  8257                           ; BSR set to: 0
  8258  003424  0C00               	retlw	0	;funcret
  8259  003426                     __end_of_isKnownPacket:
  8260                           	opt stack 0
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           postinc0	equ	0xFEE
  8268                           plusw0	equ	0xFEB
  8269                           fsr0h	equ	0xFEA
  8270                           fsr0l	equ	0xFE9
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postdec1	equ	0xFE5
  8274                           plusw1	equ	0xFE3
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _crc32 *****************
  8286 ;; Defined at:
  8287 ;;		line 52 in file "../CRC32.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  crc             4    0[BANK0 ] unsigned long 
  8290 ;;  buf             2    4[BANK0 ] PTR unsigned char 
  8291 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  8292 ;;  size            2    6[BANK0 ] unsigned int 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  p               2   18[BANK0 ] PTR unsigned char 
  8295 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  4    0[BANK0 ] unsigned long 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8300 ;; Tracked objects:
  8301 ;;		On entry : F/0
  8302 ;;		On exit  : F/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8308 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8309 ;;Total ram usage:       20 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    4
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_radioReceivedPacket
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text18
  8320  005FDE                     __ptext18:
  8321                           	opt stack 0
  8322  005FDE                     _crc32:
  8323                           	opt stack 23
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;CRC32.c: 54: uint8_t *p;
  8327                           ;CRC32.c: 56: p = buf;
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;incstack = 0
  8331  005FDE  C064  F072         	movff	crc32@buf,crc32@p
  8332  005FE2  C065  F073         	movff	crc32@buf+1,crc32@p+1
  8333                           
  8334                           ;CRC32.c: 57: crc = crc ^ ~0U;
  8335  005FE6  1F60               	comf	crc32@crc& (0+255),f,b
  8336  005FE8  1F61               	comf	(crc32@crc+1)& (0+255),f,b
  8337                           
  8338                           ;CRC32.c: 59: while (size--)
  8339  005FEA  D038               	goto	l13339
  8340  005FEC                     l13335:
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;CRC32.c: 60: crc = crc32_table[(crc ^ *p++) & 0xFF] ^ (crc >> 8);
  8344  005FEC  C072  FFD9         	movff	crc32@p,fsr2l
  8345  005FF0  C073  FFDA         	movff	crc32@p+1,fsr2h
  8346  005FF4  50DF               	movf	indf2,w,c
  8347  005FF6  1960               	xorwf	crc32@crc& (0+255),w,b
  8348  005FF8  6F68               	movwf	??_crc32& (0+255),b
  8349  005FFA  0E00               	movlw	0
  8350  005FFC  1961               	xorwf	(crc32@crc+1)& (0+255),w,b
  8351  005FFE  6F69               	movwf	(??_crc32+1)& (0+255),b
  8352  006000  6B69               	clrf	(??_crc32+1)& (0+255),b
  8353  006002  90D8               	bcf	status,0,c
  8354  006004  3768               	rlcf	??_crc32& (0+255),f,b
  8355  006006  3769               	rlcf	(??_crc32+1)& (0+255),f,b
  8356  006008  90D8               	bcf	status,0,c
  8357  00600A  3768               	rlcf	??_crc32& (0+255),f,b
  8358  00600C  3769               	rlcf	(??_crc32+1)& (0+255),f,b
  8359  00600E  0E7F               	movlw	low _crc32_table
  8360  006010  2568               	addwf	??_crc32& (0+255),w,b
  8361  006012  6EF6               	movwf	tblptrl,c
  8362  006014  0EFB               	movlw	high _crc32_table
  8363  006016  2169               	addwfc	(??_crc32+1)& (0+255),w,b
  8364  006018  6EF7               	movwf	tblptrh,c
  8365  00601A                     	if	0	;There are less than 3 active tblptr bytes
  8366  00601A                     	endif
  8367  00601A  0009               	tblrd		*+
  8368  00601C  CFF5 F06A          	movff	tablat,??_crc32+2
  8369  006020  0009               	tblrd		*+
  8370  006022  CFF5 F06B          	movff	tablat,??_crc32+3
  8371  006026  0009               	tblrd		*+
  8372  006028  CFF5 F06C          	movff	tablat,??_crc32+4
  8373  00602C  0009               	tblrd		*+
  8374  00602E  CFF5 F06D          	movff	tablat,??_crc32+5
  8375  006032  5161               	movf	(crc32@crc+1)& (0+255),w,b
  8376  006034  6F6E               	movwf	(??_crc32+6)& (0+255),b
  8377  006036  5162               	movf	(crc32@crc+2)& (0+255),w,b
  8378  006038  6F6F               	movwf	(??_crc32+7)& (0+255),b
  8379  00603A  5163               	movf	(crc32@crc+3)& (0+255),w,b
  8380  00603C  6F70               	movwf	(??_crc32+8)& (0+255),b
  8381  00603E  6B71               	clrf	(??_crc32+9)& (0+255),b
  8382  006040  516A               	movf	(??_crc32+2)& (0+255),w,b
  8383  006042  196E               	xorwf	(??_crc32+6)& (0+255),w,b
  8384  006044  6F60               	movwf	crc32@crc& (0+255),b
  8385  006046  516B               	movf	(??_crc32+3)& (0+255),w,b
  8386  006048  196F               	xorwf	(??_crc32+7)& (0+255),w,b
  8387  00604A  6F61               	movwf	(crc32@crc+1)& (0+255),b
  8388  00604C  516C               	movf	(??_crc32+4)& (0+255),w,b
  8389  00604E  1970               	xorwf	(??_crc32+8)& (0+255),w,b
  8390  006050  6F62               	movwf	(crc32@crc+2)& (0+255),b
  8391  006052  516D               	movf	(??_crc32+5)& (0+255),w,b
  8392  006054  1971               	xorwf	(??_crc32+9)& (0+255),w,b
  8393  006056  6F63               	movwf	(crc32@crc+3)& (0+255),b
  8394                           
  8395                           ; BSR set to: 0
  8396  006058  4B72               	infsnz	crc32@p& (0+255),f,b
  8397  00605A  2B73               	incf	(crc32@p+1)& (0+255),f,b
  8398  00605C                     l13339:
  8399                           
  8400                           ; BSR set to: 0
  8401  00605C  0766               	decf	crc32@size& (0+255),f,b
  8402  00605E  A0D8               	btfss	status,0,c
  8403  006060  0767               	decf	(crc32@size+1)& (0+255),f,b
  8404  006062  2966               	incf	crc32@size& (0+255),w,b
  8405  006064  E1C3               	bnz	l13335
  8406  006066  2967               	incf	(crc32@size+1)& (0+255),w,b
  8407  006068  E1C1               	bnz	l13335
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;CRC32.c: 62: return crc ^ ~0U;
  8411  00606A  0EFF               	movlw	255
  8412  00606C  1960               	xorwf	crc32@crc& (0+255),w,b
  8413  00606E  6F60               	movwf	?_crc32& (0+255),b
  8414  006070  0EFF               	movlw	255
  8415  006072  1961               	xorwf	(crc32@crc+1)& (0+255),w,b
  8416  006074  6F61               	movwf	(?_crc32+1)& (0+255),b
  8417  006076  0E00               	movlw	0
  8418  006078  1962               	xorwf	(crc32@crc+2)& (0+255),w,b
  8419  00607A  6F62               	movwf	(?_crc32+2)& (0+255),b
  8420  00607C  0E00               	movlw	0
  8421  00607E  1963               	xorwf	(crc32@crc+3)& (0+255),w,b
  8422  006080  6F63               	movwf	(?_crc32+3)& (0+255),b
  8423                           
  8424                           ; BSR set to: 0
  8425  006082  0012               	return		;funcret
  8426  006084                     __end_of_crc32:
  8427                           	opt stack 0
  8428                           tblptru	equ	0xFF8
  8429                           tblptrh	equ	0xFF7
  8430                           tblptrl	equ	0xFF6
  8431                           tablat	equ	0xFF5
  8432                           prodh	equ	0xFF4
  8433                           prodl	equ	0xFF3
  8434                           postinc0	equ	0xFEE
  8435                           plusw0	equ	0xFEB
  8436                           fsr0h	equ	0xFEA
  8437                           fsr0l	equ	0xFE9
  8438                           wreg	equ	0xFE8
  8439                           indf1	equ	0xFE7
  8440                           postdec1	equ	0xFE5
  8441                           plusw1	equ	0xFE3
  8442                           fsr1h	equ	0xFE2
  8443                           fsr1l	equ	0xFE1
  8444                           indf2	equ	0xFDF
  8445                           postinc2	equ	0xFDE
  8446                           postdec2	equ	0xFDD
  8447                           plusw2	equ	0xFDB
  8448                           fsr2h	equ	0xFDA
  8449                           fsr2l	equ	0xFD9
  8450                           status	equ	0xFD8
  8451                           
  8452 ;; *************** function _TunnelManagerSetTunnel *****************
  8453 ;; Defined at:
  8454 ;;		line 22 in file "../TunnelManager.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  device          2   32[BANK0 ] PTR struct addr_t_def
  8457 ;;		 -> radioReceivedPacket@child(8), 
  8458 ;;  parent          2   34[BANK0 ] PTR struct addr_t_def
  8459 ;;		 -> radioReceivedPacket@parent(8), 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  OldestTick      8   48[BANK0 ] struct TickMS_t_def
  8462 ;;  trec            8    0        struct TickMS_t_def
  8463 ;;  i               2   56[BANK0 ] unsigned int 
  8464 ;;  index           2   46[BANK0 ] unsigned int 
  8465 ;;  emptyindex      2   44[BANK0 ] unsigned int 
  8466 ;;  oldestindex     2   42[BANK0 ] unsigned int 
  8467 ;;  unknown         1    0        unsigned char 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : F/0
  8474 ;;		On exit  : F/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8481 ;;Total ram usage:       26 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    7
  8484 ;; This function calls:
  8485 ;;		_MSTickGet
  8486 ;;		_NetworkAddressSizeGet
  8487 ;;		_isSameAddress
  8488 ;;		_memcpy
  8489 ;;		_memset
  8490 ;; This function is called by:
  8491 ;;		_radioReceivedPacket
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text19
  8496  003426                     __ptext19:
  8497                           	opt stack 0
  8498  003426                     _TunnelManagerSetTunnel:
  8499                           	opt stack 20
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;TunnelManager.c: 24: uint16_t i;
  8503                           ;TunnelManager.c: 25: uint16_t oldestindex=0xffff;
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;incstack = 0
  8507  003426  698A               	setf	TunnelManagerSetTunnel@oldestindex& (0+255),b
  8508  003428  698B               	setf	(TunnelManagerSetTunnel@oldestindex+1)& (0+255),b
  8509                           
  8510                           ;TunnelManager.c: 26: uint16_t emptyindex=0xffff;
  8511  00342A  698C               	setf	TunnelManagerSetTunnel@emptyindex& (0+255),b
  8512  00342C  698D               	setf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),b
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;TunnelManager.c: 29: TickMS trec;
  8516                           ;TunnelManager.c: 31: TickMS OldestTick;
  8517                           ;TunnelManager.c: 33: memset(&OldestTick,0xff,sizeof(OldestTick));
  8518  00342E  0E90               	movlw	low TunnelManagerSetTunnel@OldestTick
  8519  003430  6F60               	movwf	memset@p1& (0+255),b
  8520  003432  6B61               	clrf	(memset@p1+1)& (0+255),b
  8521  003434  6B63               	clrf	(memset@c+1)& (0+255),b
  8522  003436  6962               	setf	memset@c& (0+255),b
  8523  003438  6B65               	clrf	(memset@n+1)& (0+255),b
  8524  00343A  0E08               	movlw	8
  8525  00343C  6F64               	movwf	memset@n& (0+255),b
  8526  00343E  EC61  F03C         	call	_memset	;wreg free
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;TunnelManager.c: 35: for(i=0;i<10;i++)
  8530  003442  6B98               	clrf	TunnelManagerSetTunnel@i& (0+255),b
  8531  003444  6B99               	clrf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8532  003446                     l13511:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;TunnelManager.c: 36: {
  8536                           ;TunnelManager.c: 37: if(((OldestTick.msb>tunnels[i].TxTime.msb) || ((OldestTick.msb==tu
      +                          nnels[i].TxTime.msb) && (OldestTick.lsb>=tunnels[i].TxTime.lsb) ) )==1)
  8537  003446  0E18               	movlw	24
  8538  003448  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8539  00344A  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8540  00344E  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8541  003452  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8542  003454  50F3               	movf	prodl,w,c
  8543  003456  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8544  003458  0E04               	movlw	low (_tunnels+4)
  8545  00345A  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8546  00345C  6ED9               	movwf	fsr2l,c
  8547  00345E  0E06               	movlw	high (_tunnels+4)
  8548  003460  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8549  003462  6EDA               	movwf	fsr2h,c
  8550  003464  5194               	movf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  8551  003466  5CDE               	subwf	postinc2,w,c
  8552  003468  5195               	movf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  8553  00346A  58DE               	subwfb	postinc2,w,c
  8554  00346C  5196               	movf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  8555  00346E  58DE               	subwfb	postinc2,w,c
  8556  003470  5197               	movf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  8557  003472  58DE               	subwfb	postinc2,w,c
  8558  003474  E333               	bnc	l13517
  8559                           
  8560                           ; BSR set to: 0
  8561  003476  0E18               	movlw	24
  8562  003478  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8563  00347A  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8564  00347E  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8565  003482  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8566  003484  50F3               	movf	prodl,w,c
  8567  003486  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8568  003488  0E04               	movlw	low (_tunnels+4)
  8569  00348A  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8570  00348C  6ED9               	movwf	fsr2l,c
  8571  00348E  0E06               	movlw	high (_tunnels+4)
  8572  003490  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8573  003492  6EDA               	movwf	fsr2h,c
  8574  003494  50DE               	movf	postinc2,w,c
  8575  003496  1994               	xorwf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  8576  003498  E13C               	bnz	l13521
  8577  00349A  50DE               	movf	postinc2,w,c
  8578  00349C  1995               	xorwf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  8579  00349E  E139               	bnz	l13521
  8580  0034A0  50DE               	movf	postinc2,w,c
  8581  0034A2  1996               	xorwf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  8582  0034A4  E136               	bnz	l13521
  8583  0034A6  50DE               	movf	postinc2,w,c
  8584  0034A8  1997               	xorwf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  8585  0034AA  E133               	bnz	l13521
  8586                           
  8587                           ; BSR set to: 0
  8588  0034AC  0E18               	movlw	24
  8589  0034AE  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8590  0034B0  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8591  0034B4  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8592  0034B8  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8593  0034BA  50F3               	movf	prodl,w,c
  8594  0034BC  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8595  0034BE  0E00               	movlw	low _tunnels
  8596  0034C0  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8597  0034C2  6ED9               	movwf	fsr2l,c
  8598  0034C4  0E06               	movlw	high _tunnels
  8599  0034C6  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8600  0034C8  6EDA               	movwf	fsr2h,c
  8601  0034CA  50DE               	movf	postinc2,w,c
  8602  0034CC  5D90               	subwf	TunnelManagerSetTunnel@OldestTick& (0+255),w,b
  8603  0034CE  50DE               	movf	postinc2,w,c
  8604  0034D0  5991               	subwfb	(TunnelManagerSetTunnel@OldestTick+1)& (0+255),w,b
  8605  0034D2  50DE               	movf	postinc2,w,c
  8606  0034D4  5992               	subwfb	(TunnelManagerSetTunnel@OldestTick+2)& (0+255),w,b
  8607  0034D6  50DE               	movf	postinc2,w,c
  8608  0034D8  5993               	subwfb	(TunnelManagerSetTunnel@OldestTick+3)& (0+255),w,b
  8609  0034DA  E31B               	bnc	l13521
  8610  0034DC                     l13517:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;TunnelManager.c: 38: {
  8614                           ;TunnelManager.c: 39: memcpy(&OldestTick,&tunnels[i].TxTime,sizeof(TickMS));
  8615  0034DC  0E90               	movlw	low TunnelManagerSetTunnel@OldestTick
  8616  0034DE  6F62               	movwf	memcpy@d1& (0+255),b
  8617  0034E0  6B63               	clrf	(memcpy@d1+1)& (0+255),b
  8618  0034E2  0E18               	movlw	24
  8619  0034E4  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8620  0034E6  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8621  0034EA  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8622  0034EE  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8623  0034F0  50F3               	movf	prodl,w,c
  8624  0034F2  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8625  0034F4  0E00               	movlw	low _tunnels
  8626  0034F6  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8627  0034F8  6F64               	movwf	memcpy@s1& (0+255),b
  8628  0034FA  0E06               	movlw	high _tunnels
  8629  0034FC  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8630  0034FE  6F65               	movwf	(memcpy@s1+1)& (0+255),b
  8631  003500  6B67               	clrf	(memcpy@n+1)& (0+255),b
  8632  003502  0E08               	movlw	8
  8633  003504  6F66               	movwf	memcpy@n& (0+255),b
  8634  003506  ECFA  F03A         	call	_memcpy	;wreg free
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;TunnelManager.c: 40: oldestindex=i;
  8638  00350A  C098  F08A         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  8639  00350E  C099  F08B         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  8640  003512                     l13521:
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;TunnelManager.c: 41: }
  8644                           ;TunnelManager.c: 42: if( (emptyindex==0xffff) && (((tunnels[i].TxTime.msb==0) && (tunne
      +                          ls[i].TxTime.lsb==0))==1) )
  8645  003512  298C               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  8646  003514  E12E               	bnz	l13529
  8647  003516  298D               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  8648  003518  E12C               	bnz	l13529
  8649                           
  8650                           ; BSR set to: 0
  8651  00351A  0E18               	movlw	24
  8652  00351C  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8653  00351E  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8654  003522  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8655  003526  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8656  003528  50F3               	movf	prodl,w,c
  8657  00352A  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8658  00352C  0E04               	movlw	low (_tunnels+4)
  8659  00352E  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8660  003530  6ED9               	movwf	fsr2l,c
  8661  003532  0E06               	movlw	high (_tunnels+4)
  8662  003534  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8663  003536  6EDA               	movwf	fsr2h,c
  8664  003538  50DE               	movf	postinc2,w,c
  8665  00353A  10DE               	iorwf	postinc2,w,c
  8666  00353C  10DE               	iorwf	postinc2,w,c
  8667  00353E  10DE               	iorwf	postinc2,w,c
  8668  003540  E118               	bnz	l13529
  8669                           
  8670                           ; BSR set to: 0
  8671  003542  0E18               	movlw	24
  8672  003544  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8673  003546  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8674  00354A  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8675  00354E  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8676  003550  50F3               	movf	prodl,w,c
  8677  003552  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8678  003554  0E00               	movlw	low _tunnels
  8679  003556  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8680  003558  6ED9               	movwf	fsr2l,c
  8681  00355A  0E06               	movlw	high _tunnels
  8682  00355C  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8683  00355E  6EDA               	movwf	fsr2h,c
  8684  003560  50DE               	movf	postinc2,w,c
  8685  003562  10DE               	iorwf	postinc2,w,c
  8686  003564  10DE               	iorwf	postinc2,w,c
  8687  003566  10DE               	iorwf	postinc2,w,c
  8688  003568  E104               	bnz	l13529
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;TunnelManager.c: 43: {
  8692                           ;TunnelManager.c: 44: emptyindex=i;
  8693  00356A  C098  F08C         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  8694  00356E  C099  F08D         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  8695  003572                     l13529:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;TunnelManager.c: 47: {
  8699                           ;TunnelManager.c: 48: trec=tunnels[i].TxTime;
  8700  003572  C080  FFD9         	movff	TunnelManagerSetTunnel@device,fsr2l
  8701  003576  C081  FFDA         	movff	TunnelManagerSetTunnel@device+1,fsr2h
  8702  00357A  EE00  F070         	lfsr	0,isSameAddress@a1
  8703  00357E  0E07               	movlw	7
  8704  003580                     u20271:
  8705  003580  CFDB FFEB          	movff	plusw2,plusw0
  8706  003584  06E8               	decf	wreg,f,c
  8707  003586  E2FC               	bc	u20271
  8708  003588  0E18               	movlw	24
  8709  00358A  0398               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  8710  00358C  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8711  003590  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8712  003594  0399               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  8713  003596  50F3               	movf	prodl,w,c
  8714  003598  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8715  00359A  0E08               	movlw	low (_tunnels+8)
  8716  00359C  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8717  00359E  6ED9               	movwf	fsr2l,c
  8718  0035A0  0E06               	movlw	high (_tunnels+8)
  8719  0035A2  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8720  0035A4  6EDA               	movwf	fsr2h,c
  8721  0035A6  EE00  F078         	lfsr	0,isSameAddress@a2
  8722  0035AA  0E07               	movlw	7
  8723  0035AC                     u20281:
  8724  0035AC  CFDB FFEB          	movff	plusw2,plusw0
  8725  0035B0  06E8               	decf	wreg,f,c
  8726  0035B2  E2FC               	bc	u20281
  8727  0035B4  ECC5  F03C         	call	_isSameAddress	;wreg free
  8728  0035B8  06E8               	decf	wreg,f,c
  8729  0035BA  E109               	bnz	l13533
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;TunnelManager.c: 49: emptyindex=i;
  8733  0035BC  C098  F08C         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  8734  0035C0  C099  F08D         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  8735                           
  8736                           ;TunnelManager.c: 51: unknown=0;
  8737  0035C4  C098  F08A         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  8738  0035C8  C099  F08B         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  8739                           
  8740                           ;TunnelManager.c: 52: break;
  8741  0035CC  D008               	goto	l13537
  8742  0035CE                     l13533:
  8743                           
  8744                           ; BSR set to: 0
  8745  0035CE  4B98               	infsnz	TunnelManagerSetTunnel@i& (0+255),f,b
  8746  0035D0  2B99               	incf	(TunnelManagerSetTunnel@i+1)& (0+255),f,b
  8747                           
  8748                           ; BSR set to: 0
  8749  0035D2  5199               	movf	(TunnelManagerSetTunnel@i+1)& (0+255),w,b
  8750  0035D4  E104               	bnz	u20300
  8751  0035D6  0E0A               	movlw	10
  8752  0035D8  5D98               	subwf	TunnelManagerSetTunnel@i& (0+255),w,b
  8753  0035DA  E201 D734          	bnc	l13511
  8754  0035DE                     u20300:
  8755  0035DE                     l13537:
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;TunnelManager.c: 53: }
  8759                           ;TunnelManager.c: 54: }
  8760                           ;TunnelManager.c: 55: if(emptyindex!=0xffff)
  8761  0035DE  298C               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  8762  0035E0  E102               	bnz	u20310
  8763  0035E2  298D               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  8764  0035E4  E005               	bz	l1652
  8765  0035E6                     u20310:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;TunnelManager.c: 56: {
  8769                           ;TunnelManager.c: 57: index=emptyindex;
  8770  0035E6  C08C  F08E         	movff	TunnelManagerSetTunnel@emptyindex,TunnelManagerSetTunnel@index
  8771  0035EA  C08D  F08F         	movff	TunnelManagerSetTunnel@emptyindex+1,TunnelManagerSetTunnel@index+1
  8772                           
  8773                           ;TunnelManager.c: 58: }else
  8774  0035EE  D004               	goto	l13541
  8775  0035F0                     l1652:
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;TunnelManager.c: 59: {
  8779                           ;TunnelManager.c: 60: index=oldestindex;
  8780  0035F0  C08A  F08E         	movff	TunnelManagerSetTunnel@oldestindex,TunnelManagerSetTunnel@index
  8781  0035F4  C08B  F08F         	movff	TunnelManagerSetTunnel@oldestindex+1,TunnelManagerSetTunnel@index+1
  8782  0035F8                     l13541:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;TunnelManager.c: 61: }
  8786                           ;TunnelManager.c: 62: if(index!=0xffff)
  8787  0035F8  298E               	incf	TunnelManagerSetTunnel@index& (0+255),w,b
  8788  0035FA  E103               	bnz	u20320
  8789  0035FC  298F               	incf	(TunnelManagerSetTunnel@index+1)& (0+255),w,b
  8790  0035FE  B4D8               	btfsc	status,2,c
  8791  003600  0012               	return	
  8792  003602                     u20320:
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;TunnelManager.c: 63: {
  8796                           ;TunnelManager.c: 64: memcpy(&tunnels[index].devAddress,device,NetworkAddressSizeGet());
  8797  003602  0E18               	movlw	24
  8798  003604  038E               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8799  003606  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8800  00360A  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8801  00360E  038F               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8802  003610  50F3               	movf	prodl,w,c
  8803  003612  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8804  003614  0E08               	movlw	low (_tunnels+8)
  8805  003616  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8806  003618  6F62               	movwf	memcpy@d1& (0+255),b
  8807  00361A  0E06               	movlw	high (_tunnels+8)
  8808  00361C  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8809  00361E  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  8810  003620  C080  F064         	movff	TunnelManagerSetTunnel@device,memcpy@s1
  8811  003624  C081  F065         	movff	TunnelManagerSetTunnel@device+1,memcpy@s1+1
  8812  003628  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
  8813  00362C  6F66               	movwf	memcpy@n& (0+255),b
  8814  00362E  6B67               	clrf	(memcpy@n+1)& (0+255),b
  8815  003630  ECFA  F03A         	call	_memcpy	;wreg free
  8816                           
  8817                           ;TunnelManager.c: 65: memcpy(&tunnels[index].parent,parent,NetworkAddressSizeGet());
  8818  003634  0E18               	movlw	24
  8819  003636  038E               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8820  003638  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8821  00363C  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8822  003640  038F               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8823  003642  50F3               	movf	prodl,w,c
  8824  003644  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8825  003646  0E10               	movlw	low (_tunnels+16)
  8826  003648  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8827  00364A  6F62               	movwf	memcpy@d1& (0+255),b
  8828  00364C  0E06               	movlw	high (_tunnels+16)
  8829  00364E  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8830  003650  6F63               	movwf	(memcpy@d1+1)& (0+255),b
  8831  003652  C082  F064         	movff	TunnelManagerSetTunnel@parent,memcpy@s1
  8832  003656  C083  F065         	movff	TunnelManagerSetTunnel@parent+1,memcpy@s1+1
  8833  00365A  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
  8834  00365E  6F66               	movwf	memcpy@n& (0+255),b
  8835  003660  6B67               	clrf	(memcpy@n+1)& (0+255),b
  8836  003662  ECFA  F03A         	call	_memcpy	;wreg free
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;TunnelManager.c: 66: tunnels[index].TxTime=MSTickGet();
  8840  003666  EC70  F03B         	call	_MSTickGet	;wreg free
  8841  00366A  0E18               	movlw	24
  8842  00366C  038E               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  8843  00366E  CFF3 F084          	movff	prodl,??_TunnelManagerSetTunnel
  8844  003672  CFF4 F085          	movff	prodh,??_TunnelManagerSetTunnel+1
  8845  003676  038F               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  8846  003678  50F3               	movf	prodl,w,c
  8847  00367A  2785               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  8848  00367C  0E00               	movlw	low _tunnels
  8849  00367E  2584               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  8850  003680  6ED9               	movwf	fsr2l,c
  8851  003682  0E06               	movlw	high _tunnels
  8852  003684  2185               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  8853  003686  6EDA               	movwf	fsr2h,c
  8854  003688  0E07               	movlw	7
  8855  00368A                     u20331:
  8856  00368A  CFEB FFDB          	movff	plusw0,plusw2
  8857  00368E  06E8               	decf	wreg,f,c
  8858  003690  E2FC               	bc	u20331
  8859                           
  8860                           ; BSR set to: 0
  8861  003692  0012               	return		;funcret
  8862  003694                     __end_of_TunnelManagerSetTunnel:
  8863                           	opt stack 0
  8864                           tblptru	equ	0xFF8
  8865                           tblptrh	equ	0xFF7
  8866                           tblptrl	equ	0xFF6
  8867                           tablat	equ	0xFF5
  8868                           prodh	equ	0xFF4
  8869                           prodl	equ	0xFF3
  8870                           postinc0	equ	0xFEE
  8871                           plusw0	equ	0xFEB
  8872                           fsr0h	equ	0xFEA
  8873                           fsr0l	equ	0xFE9
  8874                           wreg	equ	0xFE8
  8875                           indf1	equ	0xFE7
  8876                           postdec1	equ	0xFE5
  8877                           plusw1	equ	0xFE3
  8878                           fsr1h	equ	0xFE2
  8879                           fsr1l	equ	0xFE1
  8880                           indf2	equ	0xFDF
  8881                           postinc2	equ	0xFDE
  8882                           postdec2	equ	0xFDD
  8883                           plusw2	equ	0xFDB
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8
  8887                           
  8888 ;; *************** function _RouteManagerProcessReceive *****************
  8889 ;; Defined at:
  8890 ;;		line 310 in file "../RouteManager.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  source          2   78[BANK0 ] PTR struct addr_t_def
  8893 ;;		 -> radioReceivedPacket@source(8), 
  8894 ;;  data            2   80[BANK0 ] PTR unsigned char 
  8895 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  8896 ;;  len             1   82[BANK0 ] unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  from            8   87[BANK0 ] struct addr_t_def
  8899 ;;  rcvBeacon       2   95[BANK0 ] PTR struct net_routing_h
  8900 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  8901 ;;  congested       1   86[BANK0 ] unsigned char 
  8902 ;;  res             1    0        enum E180
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      enum E179
  8905 ;; Registers used:
  8906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : F/0
  8909 ;;		On exit  : F/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8912 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;Total ram usage:       19 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:   10
  8919 ;; This function calls:
  8920 ;;		_BeaconManagerTrigger
  8921 ;;		_LE_InsertNeighbor
  8922 ;;		_LE_PinNeighbor
  8923 ;;		_NetworkAddressSizeGet
  8924 ;;		_RouteManagerSetNeighborCongested
  8925 ;;		_RouterEvicted
  8926 ;;		_isInvalidAddress
  8927 ;;		_memcpy
  8928 ;;		_routingTableUpdateEntry
  8929 ;; This function is called by:
  8930 ;;		_radioReceivedPacket
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text20
  8935  004984                     __ptext20:
  8936                           	opt stack 0
  8937  004984                     _RouteManagerProcessReceive:
  8938                           	opt stack 17
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;RouteManager.c: 313: addr_t from;
  8942                           ;RouteManager.c: 314: net_routing_header_t* rcvBeacon;
  8943                           ;RouteManager.c: 315: bool congested;
  8944                           ;RouteManager.c: 316: rcvBeacon=(net_routing_header_t*)data;
  8945                           
  8946                           ; BSR set to: 0
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;incstack = 0
  8950  004984  C0B0  F0BF         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8951  004988  C0B1  F0C0         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;RouteManager.c: 318: if ( (len >= sizeof (net_routing_header_t)) && (rcvBeacon->packett
      +                          ype==PacketRouting) )
  8955  00498C  0E0F               	movlw	15
  8956  00498E  65B2               	cpfsgt	RouteManagerProcessReceive@len& (0+255),b
  8957  004990  0C0F               	retlw	15
  8958                           
  8959                           ; BSR set to: 0
  8960  004992  EE20 F002          	lfsr	2,2
  8961  004996  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8962  004998  26D9               	addwf	fsr2l,f,c
  8963  00499A  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8964  00499C  22DA               	addwfc	fsr2h,f,c
  8965  00499E  0E22               	movlw	34
  8966  0049A0  18DE               	xorwf	postinc2,w,c
  8967  0049A2  A4D8               	btfss	status,2,c
  8968  0049A4  0012               	return	
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;RouteManager.c: 319: {
  8972                           ;RouteManager.c: 321: memcpy(&from,source,NetworkAddressSizeGet());
  8973  0049A6  0EB7               	movlw	low RouteManagerProcessReceive@from
  8974  0049A8  6F62               	movwf	memcpy@d1& (0+255),b
  8975  0049AA  6B63               	clrf	(memcpy@d1+1)& (0+255),b
  8976  0049AC  C0AE  F064         	movff	RouteManagerProcessReceive@source,memcpy@s1
  8977  0049B0  C0AF  F065         	movff	RouteManagerProcessReceive@source+1,memcpy@s1+1
  8978  0049B4  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
  8979  0049B8  6F66               	movwf	memcpy@n& (0+255),b
  8980  0049BA  6B67               	clrf	(memcpy@n+1)& (0+255),b
  8981  0049BC  ECFA  F03A         	call	_memcpy	;wreg free
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;RouteManager.c: 322: rcvBeacon = (net_routing_header_t*) data;
  8985  0049C0  C0B0  F0BF         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  8986  0049C4  C0B1  F0C0         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;RouteManager.c: 324: congested = (rcvBeacon->options.congested==1);
  8990  0049C8  EE20 F003          	lfsr	2,3
  8991  0049CC  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  8992  0049CE  26D9               	addwf	fsr2l,f,c
  8993  0049D0  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  8994  0049D2  22DA               	addwfc	fsr2h,f,c
  8995  0049D4  0E00               	movlw	0
  8996  0049D6  B8DF               	btfsc	indf2,4,c
  8997  0049D8  0E01               	movlw	1
  8998  0049DA  6FB6               	movwf	RouteManagerProcessReceive@congested& (0+255),b
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;RouteManager.c: 331: if( (!isInvalidAddress(rcvBeacon->parent)) && (rcvBeacon->options.
      +                          deviceType!=DeviceSleepingRFD) && (rcvBeacon->options.hasroute==1) )
  9002  0049DC  EE20 F004          	lfsr	2,4
  9003  0049E0  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9004  0049E2  26D9               	addwf	fsr2l,f,c
  9005  0049E4  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9006  0049E6  22DA               	addwfc	fsr2h,f,c
  9007  0049E8  EE00  F079         	lfsr	0,isInvalidAddress@address
  9008  0049EC  0E07               	movlw	7
  9009  0049EE                     u20081:
  9010  0049EE  CFDB FFEB          	movff	plusw2,plusw0
  9011  0049F2  06E8               	decf	wreg,f,c
  9012  0049F4  E2FC               	bc	u20081
  9013  0049F6  EC6E  F03D         	call	_isInvalidAddress	;wreg free
  9014  0049FA  0900               	iorlw	0
  9015  0049FC  E16A               	bnz	l13481
  9016                           
  9017                           ; BSR set to: 0
  9018  0049FE  EE20 F003          	lfsr	2,3
  9019  004A02  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9020  004A04  26D9               	addwf	fsr2l,f,c
  9021  004A06  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9022  004A08  22DA               	addwfc	fsr2h,f,c
  9023  004A0A  50DF               	movf	223,w,c
  9024  004A0C  0B07               	andlw	7
  9025  004A0E  0A02               	xorlw	2
  9026  004A10  E060               	bz	l13481
  9027                           
  9028                           ; BSR set to: 0
  9029  004A12  EE20 F003          	lfsr	2,3
  9030  004A16  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9031  004A18  26D9               	addwf	fsr2l,f,c
  9032  004A1A  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9033  004A1C  22DA               	addwfc	fsr2h,f,c
  9034  004A1E  A6DF               	btfss	indf2,3,c
  9035  004A20  D058               	goto	l13481
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;RouteManager.c: 332: {
  9039                           ;RouteManager.c: 335: if (rcvBeacon->etx == 0)
  9040  004A22  EE20 F00C          	lfsr	2,12
  9041  004A26  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9042  004A28  26D9               	addwf	fsr2l,f,c
  9043  004A2A  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9044  004A2C  22DA               	addwfc	fsr2h,f,c
  9045  004A2E  50DE               	movf	postinc2,w,c
  9046  004A30  10DE               	iorwf	postinc2,w,c
  9047  004A32  E11F               	bnz	l13477
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;RouteManager.c: 336: {
  9051                           ;RouteManager.c: 338: LE_InsertNeighbor(from, rcvBeacon->options.deviceType);
  9052  004A34  EE20  F0B7         	lfsr	2,RouteManagerProcessReceive@from
  9053  004A38  EE00  F09C         	lfsr	0,LE_InsertNeighbor@neighbor
  9054  004A3C  0E07               	movlw	7
  9055  004A3E                     u20131:
  9056  004A3E  CFDB FFEB          	movff	plusw2,plusw0
  9057  004A42  06E8               	decf	wreg,f,c
  9058  004A44  E2FC               	bc	u20131
  9059  004A46  EE20 F003          	lfsr	2,3
  9060  004A4A  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9061  004A4C  26D9               	addwf	fsr2l,f,c
  9062  004A4E  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9063  004A50  22DA               	addwfc	fsr2h,f,c
  9064  004A52  50DF               	movf	223,w,c
  9065  004A54  0B07               	andlw	7
  9066  004A56  6FA4               	movwf	LE_InsertNeighbor@devType& (0+255),b
  9067  004A58  EC98  F02F         	call	_LE_InsertNeighbor	;wreg free
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;RouteManager.c: 339: LE_PinNeighbor(from);
  9071  004A5C  EE20  F0B7         	lfsr	2,RouteManagerProcessReceive@from
  9072  004A60  EE00  F08A         	lfsr	0,LE_PinNeighbor@neighbor
  9073  004A64  0E07               	movlw	7
  9074  004A66                     u20141:
  9075  004A66  CFDB FFEB          	movff	plusw2,plusw0
  9076  004A6A  06E8               	decf	wreg,f,c
  9077  004A6C  E2FC               	bc	u20141
  9078  004A6E  ECF2  F039         	call	_LE_PinNeighbor	;wreg free
  9079  004A72                     l13477:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;RouteManager.c: 340: }
  9083                           ;RouteManager.c: 343: routingTableUpdateEntry(from, rcvBeacon->parent, rcvBeacon->etx);
  9084  004A72  EE20  F0B7         	lfsr	2,RouteManagerProcessReceive@from
  9085  004A76  EE00  F099         	lfsr	0,routingTableUpdateEntry@from
  9086  004A7A  0E07               	movlw	7
  9087  004A7C                     u20151:
  9088  004A7C  CFDB FFEB          	movff	plusw2,plusw0
  9089  004A80  06E8               	decf	wreg,f,c
  9090  004A82  E2FC               	bc	u20151
  9091  004A84  EE20 F004          	lfsr	2,4
  9092  004A88  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9093  004A8A  26D9               	addwf	fsr2l,f,c
  9094  004A8C  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9095  004A8E  22DA               	addwfc	fsr2h,f,c
  9096  004A90  EE00  F0A1         	lfsr	0,routingTableUpdateEntry@parent
  9097  004A94  0E07               	movlw	7
  9098  004A96                     u20161:
  9099  004A96  CFDB FFEB          	movff	plusw2,plusw0
  9100  004A9A  06E8               	decf	wreg,f,c
  9101  004A9C  E2FC               	bc	u20161
  9102  004A9E  EE20 F00C          	lfsr	2,12
  9103  004AA2  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9104  004AA4  26D9               	addwf	fsr2l,f,c
  9105  004AA6  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9106  004AA8  22DA               	addwfc	fsr2h,f,c
  9107  004AAA  CFDE F0A9          	movff	postinc2,routingTableUpdateEntry@etx
  9108  004AAE  CFDD F0AA          	movff	postdec2,routingTableUpdateEntry@etx+1
  9109  004AB2  EC42  F028         	call	_routingTableUpdateEntry	;wreg free
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;RouteManager.c: 344: RouteManagerSetNeighborCongested(from, congested);
  9113  004AB6  EE20  F0B7         	lfsr	2,RouteManagerProcessReceive@from
  9114  004ABA  EE00  F060         	lfsr	0,RouteManagerSetNeighborCongested@n
  9115  004ABE  0E07               	movlw	7
  9116  004AC0                     u20171:
  9117  004AC0  CFDB FFEB          	movff	plusw2,plusw0
  9118  004AC4  06E8               	decf	wreg,f,c
  9119  004AC6  E2FC               	bc	u20171
  9120  004AC8  C0B6  F068         	movff	RouteManagerProcessReceive@congested,RouteManagerSetNeighborCongested@congested
  9121  004ACC  EC5C  F03E         	call	_RouteManagerSetNeighborCongested	;wreg free
  9122                           
  9123                           ;RouteManager.c: 345: }else
  9124  004AD0  D00B               	goto	l13483
  9125  004AD2                     l13481:
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;RouteManager.c: 346: {
  9129                           ;RouteManager.c: 348: RouterEvicted(from);
  9130  004AD2  EE20  F0B7         	lfsr	2,RouteManagerProcessReceive@from
  9131  004AD6  EE00  F08E         	lfsr	0,RouterEvicted@address
  9132  004ADA  0E07               	movlw	7
  9133  004ADC                     u20181:
  9134  004ADC  CFDB FFEB          	movff	plusw2,plusw0
  9135  004AE0  06E8               	decf	wreg,f,c
  9136  004AE2  E2FC               	bc	u20181
  9137  004AE4  ECE0  F02E         	call	_RouterEvicted	;wreg free
  9138  004AE8                     l13483:
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;RouteManager.c: 349: }
  9142                           ;RouteManager.c: 351: if (rcvBeacon->options.pull==1)
  9143  004AE8  EE20 F003          	lfsr	2,3
  9144  004AEC  51BF               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9145  004AEE  26D9               	addwf	fsr2l,f,c
  9146  004AF0  51C0               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9147  004AF2  22DA               	addwfc	fsr2h,f,c
  9148  004AF4  BADF               	btfsc	indf2,5,c
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;RouteManager.c: 352: {
  9152                           ;RouteManager.c: 353: BeaconManagerTrigger();
  9153  004AF6  EC42  F03E         	call	_BeaconManagerTrigger	;wreg free
  9154                           
  9155                           ; BSR set to: 0
  9156                           
  9157                           ; BSR set to: 0
  9158  004AFA  0012               	return		;funcret
  9159  004AFC                     __end_of_RouteManagerProcessReceive:
  9160                           	opt stack 0
  9161                           tblptru	equ	0xFF8
  9162                           tblptrh	equ	0xFF7
  9163                           tblptrl	equ	0xFF6
  9164                           tablat	equ	0xFF5
  9165                           prodh	equ	0xFF4
  9166                           prodl	equ	0xFF3
  9167                           postinc0	equ	0xFEE
  9168                           plusw0	equ	0xFEB
  9169                           fsr0h	equ	0xFEA
  9170                           fsr0l	equ	0xFE9
  9171                           wreg	equ	0xFE8
  9172                           indf1	equ	0xFE7
  9173                           postdec1	equ	0xFE5
  9174                           plusw1	equ	0xFE3
  9175                           fsr1h	equ	0xFE2
  9176                           fsr1l	equ	0xFE1
  9177                           indf2	equ	0xFDF
  9178                           postinc2	equ	0xFDE
  9179                           postdec2	equ	0xFDD
  9180                           plusw2	equ	0xFDB
  9181                           fsr2h	equ	0xFDA
  9182                           fsr2l	equ	0xFD9
  9183                           status	equ	0xFD8
  9184                           
  9185 ;; *************** function _routingTableUpdateEntry *****************
  9186 ;; Defined at:
  9187 ;;		line 247 in file "../RouteManager.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  from            8   57[BANK0 ] struct addr_t_def
  9190 ;;  parent          8   65[BANK0 ] struct addr_t_def
  9191 ;;  etx             2   73[BANK0 ] unsigned int 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  linkEtx         2   75[BANK0 ] unsigned int 
  9194 ;;  idx             1   77[BANK0 ] unsigned char 
  9195 ;;  res             1    0        enum E180
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      enum E180
  9198 ;; Registers used:
  9199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : F/0
  9202 ;;		On exit  : F/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9205 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9209 ;;Total ram usage:       21 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    8
  9212 ;; This function calls:
  9213 ;;		_LELinkQualityGet
  9214 ;;		_passLinkEtxThreshold
  9215 ;;		_routingTableFind
  9216 ;; This function is called by:
  9217 ;;		_RouteManagerProcessReceive
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text21
  9222  005084                     __ptext21:
  9223                           	opt stack 0
  9224  005084                     _routingTableUpdateEntry:
  9225                           	opt stack 18
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;RouteManager.c: 249: uint8_t idx;
  9229                           ;RouteManager.c: 250: error_t res;
  9230                           ;RouteManager.c: 251: uint16_t linkEtx;
  9231                           ;RouteManager.c: 252: linkEtx = LELinkQualityGet(from,0);
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;incstack = 0
  9235  005084  EE20  F099         	lfsr	2,routingTableUpdateEntry@from
  9236  005088  EE00  F08A         	lfsr	0,LELinkQualityGet@address
  9237  00508C  0E07               	movlw	7
  9238  00508E                     u19111:
  9239  00508E  CFDB FFEB          	movff	plusw2,plusw0
  9240  005092  06E8               	decf	wreg,f,c
  9241  005094  E2FC               	bc	u19111
  9242  005096  6B93               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
  9243  005098  6B92               	clrf	LELinkQualityGet@offset& (0+255),b
  9244  00509A  ECE6  F034         	call	_LELinkQualityGet	;wreg free
  9245  00509E  C08A  F0AB         	movff	?_LELinkQualityGet,routingTableUpdateEntry@linkEtx
  9246  0050A2  C08B  F0AC         	movff	?_LELinkQualityGet+1,routingTableUpdateEntry@linkEtx+1
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;RouteManager.c: 254: idx = routingTableFind(from);
  9250  0050A6  EE20  F099         	lfsr	2,routingTableUpdateEntry@from
  9251  0050AA  EE00  F081         	lfsr	0,routingTableFind@neighbor
  9252  0050AE  0E07               	movlw	7
  9253  0050B0                     u19121:
  9254  0050B0  CFDB FFEB          	movff	plusw2,plusw0
  9255  0050B4  06E8               	decf	wreg,f,c
  9256  0050B6  E2FC               	bc	u19121
  9257  0050B8  ECF5  F033         	call	_routingTableFind	;wreg free
  9258  0050BC  6FAD               	movwf	routingTableUpdateEntry@idx& (0+255),b
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;RouteManager.c: 256: {
  9262                           ;RouteManager.c: 258: res=err_FAIL;
  9263  0050BE  0E0A               	movlw	10
  9264  0050C0  19AD               	xorwf	routingTableUpdateEntry@idx& (0+255),w,b
  9265  0050C2  E101               	bnz	l13037
  9266  0050C4  0012               	return	
  9267  0050C6                     l13037:
  9268                           
  9269                           ; BSR set to: 0
  9270  0050C6  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9271  0050C8  1839               	xorwf	_routingTableActive,w,c
  9272  0050CA  103A               	iorwf	_routingTableActive+1,w,c
  9273  0050CC  E149               	bnz	l13051
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;RouteManager.c: 260: {
  9277                           ;RouteManager.c: 262: if (passLinkEtxThreshold(linkEtx))
  9278  0050CE  C0AB  F060         	movff	routingTableUpdateEntry@linkEtx,passLinkEtxThreshold@etx
  9279  0050D2  C0AC  F061         	movff	routingTableUpdateEntry@linkEtx+1,passLinkEtxThreshold@etx+1
  9280  0050D6  ECE4  F03D         	call	_passLinkEtxThreshold	;wreg free
  9281  0050DA  0900               	iorlw	0
  9282  0050DC  B4D8               	btfsc	status,2,c
  9283  0050DE  0012               	return	
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;RouteManager.c: 263: {
  9287                           ;RouteManager.c: 264: routingTable[idx].neighbor = from;
  9288  0050E0  EE20  F099         	lfsr	2,routingTableUpdateEntry@from
  9289  0050E4  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9290  0050E6  0D15               	mullw	21
  9291  0050E8  0E00               	movlw	low _routingTable
  9292  0050EA  24F3               	addwf	prodl,w,c
  9293  0050EC  6EE1               	movwf	fsr1l,c
  9294  0050EE  0E08               	movlw	high _routingTable
  9295  0050F0  20F4               	addwfc	prodh,w,c
  9296  0050F2  6EE2               	movwf	fsr1h,c
  9297  0050F4  0E07               	movlw	7
  9298  0050F6                     u19161:
  9299  0050F6  CFDB FFE3          	movff	plusw2,plusw1
  9300  0050FA  06E8               	decf	wreg,f,c
  9301  0050FC  E2FC               	bc	u19161
  9302                           
  9303                           ;RouteManager.c: 265: routingTable[idx].info.parent = parent;
  9304  0050FE  EE20  F0A1         	lfsr	2,routingTableUpdateEntry@parent
  9305  005102  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9306  005104  0D15               	mullw	21
  9307  005106  0E08               	movlw	low (_routingTable+8)
  9308  005108  24F3               	addwf	prodl,w,c
  9309  00510A  6EE1               	movwf	fsr1l,c
  9310  00510C  0E08               	movlw	high (_routingTable+8)
  9311  00510E  20F4               	addwfc	prodh,w,c
  9312  005110  6EE2               	movwf	fsr1h,c
  9313  005112  0E07               	movlw	7
  9314  005114                     u19171:
  9315  005114  CFDB FFE3          	movff	plusw2,plusw1
  9316  005118  06E8               	decf	wreg,f,c
  9317  00511A  E2FC               	bc	u19171
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;RouteManager.c: 266: routingTable[idx].info.etx = etx;
  9321  00511C  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9322  00511E  0D15               	mullw	21
  9323  005120  0E10               	movlw	low (_routingTable+16)
  9324  005122  24F3               	addwf	prodl,w,c
  9325  005124  6ED9               	movwf	fsr2l,c
  9326  005126  0E08               	movlw	high (_routingTable+16)
  9327  005128  20F4               	addwfc	prodh,w,c
  9328  00512A  6EDA               	movwf	fsr2h,c
  9329  00512C  C0A9  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9330  005130  C0AA  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;RouteManager.c: 267: routingTable[idx].info.haveHeard = 1;
  9334  005134  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9335  005136  0D15               	mullw	21
  9336  005138  0E12               	movlw	low (_routingTable+18)
  9337  00513A  24F3               	addwf	prodl,w,c
  9338  00513C  6ED9               	movwf	fsr2l,c
  9339  00513E  0E08               	movlw	high (_routingTable+18)
  9340  005140  20F4               	addwfc	prodh,w,c
  9341  005142  6EDA               	movwf	fsr2h,c
  9342  005144  0E01               	movlw	1
  9343  005146  6EDF               	movwf	indf2,c
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;RouteManager.c: 268: routingTable[idx].info.congested = 0;
  9347  005148  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9348  00514A  0D15               	mullw	21
  9349  00514C  0E13               	movlw	low (_routingTable+19)
  9350  00514E  24F3               	addwf	prodl,w,c
  9351  005150  6ED9               	movwf	fsr2l,c
  9352  005152  0E08               	movlw	high (_routingTable+19)
  9353  005154  20F4               	addwfc	prodh,w,c
  9354  005156  6EDA               	movwf	fsr2h,c
  9355  005158  6ADF               	clrf	indf2,c
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;RouteManager.c: 269: routingTableActive++;
  9359  00515A  4A39               	infsnz	_routingTableActive,f,c
  9360  00515C  2A3A               	incf	_routingTableActive+1,f,c
  9361  00515E  0C00               	retlw	0
  9362  005160                     l13051:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;RouteManager.c: 272: {
  9366                           ;RouteManager.c: 274: routingTable[idx].neighbor = from;
  9367  005160  EE20  F099         	lfsr	2,routingTableUpdateEntry@from
  9368  005164  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9369  005166  0D15               	mullw	21
  9370  005168  0E00               	movlw	low _routingTable
  9371  00516A  24F3               	addwf	prodl,w,c
  9372  00516C  6EE1               	movwf	fsr1l,c
  9373  00516E  0E08               	movlw	high _routingTable
  9374  005170  20F4               	addwfc	prodh,w,c
  9375  005172  6EE2               	movwf	fsr1h,c
  9376  005174  0E07               	movlw	7
  9377  005176                     u19181:
  9378  005176  CFDB FFE3          	movff	plusw2,plusw1
  9379  00517A  06E8               	decf	wreg,f,c
  9380  00517C  E2FC               	bc	u19181
  9381                           
  9382                           ;RouteManager.c: 275: routingTable[idx].info.parent = parent;
  9383  00517E  EE20  F0A1         	lfsr	2,routingTableUpdateEntry@parent
  9384  005182  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9385  005184  0D15               	mullw	21
  9386  005186  0E08               	movlw	low (_routingTable+8)
  9387  005188  24F3               	addwf	prodl,w,c
  9388  00518A  6EE1               	movwf	fsr1l,c
  9389  00518C  0E08               	movlw	high (_routingTable+8)
  9390  00518E  20F4               	addwfc	prodh,w,c
  9391  005190  6EE2               	movwf	fsr1h,c
  9392  005192  0E07               	movlw	7
  9393  005194                     u19191:
  9394  005194  CFDB FFE3          	movff	plusw2,plusw1
  9395  005198  06E8               	decf	wreg,f,c
  9396  00519A  E2FC               	bc	u19191
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;RouteManager.c: 276: routingTable[idx].info.etx = etx;
  9400  00519C  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9401  00519E  0D15               	mullw	21
  9402  0051A0  0E10               	movlw	low (_routingTable+16)
  9403  0051A2  24F3               	addwf	prodl,w,c
  9404  0051A4  6ED9               	movwf	fsr2l,c
  9405  0051A6  0E08               	movlw	high (_routingTable+16)
  9406  0051A8  20F4               	addwfc	prodh,w,c
  9407  0051AA  6EDA               	movwf	fsr2h,c
  9408  0051AC  C0A9  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9409  0051B0  C0AA  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;RouteManager.c: 277: routingTable[idx].info.haveHeard = 1;
  9413  0051B4  51AD               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9414  0051B6  0D15               	mullw	21
  9415  0051B8  0E12               	movlw	low (_routingTable+18)
  9416  0051BA  24F3               	addwf	prodl,w,c
  9417  0051BC  6ED9               	movwf	fsr2l,c
  9418  0051BE  0E08               	movlw	high (_routingTable+18)
  9419  0051C0  20F4               	addwfc	prodh,w,c
  9420  0051C2  6EDA               	movwf	fsr2h,c
  9421  0051C4  0E01               	movlw	1
  9422  0051C6  6EDF               	movwf	indf2,c
  9423  0051C8  0C01               	retlw	1
  9424  0051CA                     __end_of_routingTableUpdateEntry:
  9425                           	opt stack 0
  9426                           tblptru	equ	0xFF8
  9427                           tblptrh	equ	0xFF7
  9428                           tblptrl	equ	0xFF6
  9429                           tablat	equ	0xFF5
  9430                           prodh	equ	0xFF4
  9431                           prodl	equ	0xFF3
  9432                           postinc0	equ	0xFEE
  9433                           plusw0	equ	0xFEB
  9434                           fsr0h	equ	0xFEA
  9435                           fsr0l	equ	0xFE9
  9436                           wreg	equ	0xFE8
  9437                           indf1	equ	0xFE7
  9438                           postdec1	equ	0xFE5
  9439                           plusw1	equ	0xFE3
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           plusw2	equ	0xFDB
  9446                           fsr2h	equ	0xFDA
  9447                           fsr2l	equ	0xFD9
  9448                           status	equ	0xFD8
  9449                           
  9450 ;; *************** function _RouteManagerSetNeighborCongested *****************
  9451 ;; Defined at:
  9452 ;;		line 294 in file "../RouteManager.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  n               8    0[BANK0 ] struct addr_t_def
  9455 ;;  congested       1    8[BANK0 ] unsigned char 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		None
  9462 ;; Tracked objects:
  9463 ;;		On entry : F/0
  9464 ;;		On exit  : F/0
  9465 ;;		Unchanged: F/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9467 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9470 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9471 ;;Total ram usage:        9 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    4
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_RouteManagerProcessReceive
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text22
  9482  007CB8                     __ptext22:
  9483                           	opt stack 0
  9484  007CB8                     _RouteManagerSetNeighborCongested:
  9485                           	opt stack 22
  9486                           
  9487                           ; BSR set to: 0
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;incstack = 0
  9491  007CB8  0012               	return		;funcret
  9492  007CBA                     __end_of_RouteManagerSetNeighborCongested:
  9493                           	opt stack 0
  9494                           tblptru	equ	0xFF8
  9495                           tblptrh	equ	0xFF7
  9496                           tblptrl	equ	0xFF6
  9497                           tablat	equ	0xFF5
  9498                           prodh	equ	0xFF4
  9499                           prodl	equ	0xFF3
  9500                           postinc0	equ	0xFEE
  9501                           plusw0	equ	0xFEB
  9502                           fsr0h	equ	0xFEA
  9503                           fsr0l	equ	0xFE9
  9504                           wreg	equ	0xFE8
  9505                           indf1	equ	0xFE7
  9506                           postdec1	equ	0xFE5
  9507                           plusw1	equ	0xFE3
  9508                           fsr1h	equ	0xFE2
  9509                           fsr1l	equ	0xFE1
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           plusw2	equ	0xFDB
  9514                           fsr2h	equ	0xFDA
  9515                           fsr2l	equ	0xFD9
  9516                           status	equ	0xFD8
  9517                           
  9518 ;; *************** function _LE_InsertNeighbor *****************
  9519 ;; Defined at:
  9520 ;;		line 240 in file "../LinkEstimator.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;  neighbor        8   60[BANK0 ] struct addr_t_def
  9523 ;;  devType         1   68[BANK0 ] enum E144
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  nidx            1   71[BANK0 ] unsigned char 
  9526 ;;  res             1    0        enum E179
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      enum E180
  9529 ;; Registers used:
  9530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : F/0
  9533 ;;		On exit  : F/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9536 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9539 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9540 ;;Total ram usage:       12 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    9
  9543 ;; This function calls:
  9544 ;;		_RouterEvicted
  9545 ;;		_le_findEmptyNeighborIdx
  9546 ;;		_le_findIdx
  9547 ;;		_le_findWorstNeighborIdx
  9548 ;;		_le_initNeighborIdx
  9549 ;; This function is called by:
  9550 ;;		_RouteManagerProcessReceive
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text23
  9555  005F30                     __ptext23:
  9556                           	opt stack 0
  9557  005F30                     _LE_InsertNeighbor:
  9558                           	opt stack 17
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;LinkEstimator.c: 244: nidx = le_findIdx(neighbor);
  9562                           
  9563                           ; BSR set to: 0
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;incstack = 0
  9567  005F30  EE20  F09C         	lfsr	2,LE_InsertNeighbor@neighbor
  9568  005F34  EE00  F080         	lfsr	0,le_findIdx@ll_addr
  9569  005F38  0E07               	movlw	7
  9570  005F3A                     u19201:
  9571  005F3A  CFDB FFEB          	movff	plusw2,plusw0
  9572  005F3E  06E8               	decf	wreg,f,c
  9573  005F40  E2FC               	bc	u19201
  9574  005F42  EC63  F036         	call	_le_findIdx	;wreg free
  9575  005F46  6FA7               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;LinkEstimator.c: 245: if (nidx != 0xff)
  9579  005F48  29A7               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9580  005F4A  E001               	bz	l13067
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;LinkEstimator.c: 249: }else
  9584  005F4C  0012               	return	
  9585  005F4E                     l13067:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;LinkEstimator.c: 250: {
  9589                           ;LinkEstimator.c: 251: nidx = le_findEmptyNeighborIdx();
  9590  005F4E  EC61  F039         	call	_le_findEmptyNeighborIdx	;wreg free
  9591  005F52  5160               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
  9592  005F54  6FA7               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;LinkEstimator.c: 252: if (nidx != 0xff)
  9596  005F56  29A7               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9597  005F58  E01C               	bz	l13077
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;LinkEstimator.c: 253: {
  9601                           ;LinkEstimator.c: 255: le_initNeighborIdx(nidx, neighbor);
  9602  005F5A  EE20  F09C         	lfsr	2,LE_InsertNeighbor@neighbor
  9603  005F5E  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
  9604  005F62  0E07               	movlw	7
  9605  005F64                     u19231:
  9606  005F64  CFDB FFEB          	movff	plusw2,plusw0
  9607  005F68  06E8               	decf	wreg,f,c
  9608  005F6A  E2FC               	bc	u19231
  9609  005F6C  51A7               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9610  005F6E  ECEF  F032         	call	_le_initNeighborIdx
  9611  005F72                     l13073:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;LinkEstimator.c: 256: neighbor_tbl[nidx].flags|=(devType<<4);
  9615  005F72  C0A4  F0A5         	movff	LE_InsertNeighbor@devType,??_LE_InsertNeighbor
  9616  005F76  3BA5               	swapf	??_LE_InsertNeighbor& (0+255),f,b
  9617  005F78  0EF0               	movlw	240
  9618  005F7A  17A5               	andwf	??_LE_InsertNeighbor& (0+255),f,b
  9619  005F7C  51A7               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9620  005F7E  0D11               	mullw	17
  9621  005F80  0E55               	movlw	low (_neighbor_tbl+11)
  9622  005F82  24F3               	addwf	prodl,w,c
  9623  005F84  6ED9               	movwf	fsr2l,c
  9624  005F86  0E0D               	movlw	high (_neighbor_tbl+11)
  9625  005F88  20F4               	addwfc	prodh,w,c
  9626  005F8A  6EDA               	movwf	fsr2h,c
  9627  005F8C  51A5               	movf	??_LE_InsertNeighbor& (0+255),w,b
  9628  005F8E  12DF               	iorwf	indf2,f,c
  9629  005F90  0012               	return	
  9630  005F92                     l13077:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;LinkEstimator.c: 259: {
  9634                           ;LinkEstimator.c: 260: nidx = le_findWorstNeighborIdx(10);
  9635  005F92  0E0A               	movlw	10
  9636  005F94  ECE5  F028         	call	_le_findWorstNeighborIdx
  9637  005F98  5180               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
  9638  005F9A  6FA7               	movwf	LE_InsertNeighbor@nidx& (0+255),b
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;LinkEstimator.c: 261: if (nidx != 0xff)
  9642  005F9C  29A7               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
  9643  005F9E  B4D8               	btfsc	status,2,c
  9644  005FA0  0012               	return	
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;LinkEstimator.c: 262: {
  9648                           ;LinkEstimator.c: 265: RouterEvicted(neighbor_tbl[nidx].ll_addr);
  9649  005FA2  51A7               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9650  005FA4  0D11               	mullw	17
  9651  005FA6  0E4A               	movlw	low _neighbor_tbl
  9652  005FA8  24F3               	addwf	prodl,w,c
  9653  005FAA  6ED9               	movwf	fsr2l,c
  9654  005FAC  0E0D               	movlw	high _neighbor_tbl
  9655  005FAE  20F4               	addwfc	prodh,w,c
  9656  005FB0  6EDA               	movwf	fsr2h,c
  9657  005FB2  EE00  F08E         	lfsr	0,RouterEvicted@address
  9658  005FB6  0E07               	movlw	7
  9659  005FB8                     u19251:
  9660  005FB8  CFDB FFEB          	movff	plusw2,plusw0
  9661  005FBC  06E8               	decf	wreg,f,c
  9662  005FBE  E2FC               	bc	u19251
  9663  005FC0  ECE0  F02E         	call	_RouterEvicted	;wreg free
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;LinkEstimator.c: 266: le_initNeighborIdx(nidx, neighbor);
  9667  005FC4  EE20  F09C         	lfsr	2,LE_InsertNeighbor@neighbor
  9668  005FC8  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
  9669  005FCC  0E07               	movlw	7
  9670  005FCE                     u19261:
  9671  005FCE  CFDB FFEB          	movff	plusw2,plusw0
  9672  005FD2  06E8               	decf	wreg,f,c
  9673  005FD4  E2FC               	bc	u19261
  9674  005FD6  51A7               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
  9675  005FD8  ECEF  F032         	call	_le_initNeighborIdx
  9676  005FDC  D7CA               	goto	l13073
  9677  005FDE                     __end_of_LE_InsertNeighbor:
  9678                           	opt stack 0
  9679                           tblptru	equ	0xFF8
  9680                           tblptrh	equ	0xFF7
  9681                           tblptrl	equ	0xFF6
  9682                           tablat	equ	0xFF5
  9683                           prodh	equ	0xFF4
  9684                           prodl	equ	0xFF3
  9685                           postinc0	equ	0xFEE
  9686                           plusw0	equ	0xFEB
  9687                           fsr0h	equ	0xFEA
  9688                           fsr0l	equ	0xFE9
  9689                           wreg	equ	0xFE8
  9690                           indf1	equ	0xFE7
  9691                           postdec1	equ	0xFE5
  9692                           plusw1	equ	0xFE3
  9693                           fsr1h	equ	0xFE2
  9694                           fsr1l	equ	0xFE1
  9695                           indf2	equ	0xFDF
  9696                           postinc2	equ	0xFDE
  9697                           postdec2	equ	0xFDD
  9698                           plusw2	equ	0xFDB
  9699                           fsr2h	equ	0xFDA
  9700                           fsr2l	equ	0xFD9
  9701                           status	equ	0xFD8
  9702                           
  9703 ;; *************** function _NetworkSendDiscoverResponse *****************
  9704 ;; Defined at:
  9705 ;;		line 407 in file "../NetworkManager.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  databuff       64   59[BANK0 ] unsigned char [64]
  9710 ;;  address         8  126[BANK0 ] struct addr_t_def
  9711 ;;  size            2  123[BANK0 ] unsigned int 
  9712 ;;  dhdr            1  125[BANK0 ] PTR struct net_data_head
  9713 ;;		 -> NetworkSendDiscoverResponse@databuff(64), 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9718 ;; Tracked objects:
  9719 ;;		On entry : F/0
  9720 ;;		On exit  : F/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9724 ;;      Locals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;Total ram usage:       75 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; Hardware stack levels required when called:    8
  9730 ;; This function calls:
  9731 ;;		_BroadcastManagerDelaySend
  9732 ;;		_NetworkAddressSizeGet
  9733 ;;		_NetworkPrepareSendPacket
  9734 ;;		_isNetworkSecurityEnabled
  9735 ;;		_memset
  9736 ;; This function is called by:
  9737 ;;		_radioReceivedPacket
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text24
  9742  006AB6                     __ptext24:
  9743                           	opt stack 0
  9744  006AB6                     _NetworkSendDiscoverResponse:
  9745                           	opt stack 19
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;NetworkManager.c: 409: addr_t address;
  9749                           ;NetworkManager.c: 410: uint16_t size;
  9750                           ;NetworkManager.c: 411: uint8_t databuff[64];
  9751                           ;NetworkManager.c: 412: net_data_header_t *dhdr=(net_data_header_t*)databuff;
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;incstack = 0
  9755  006AB6  0E9B               	movlw	low NetworkSendDiscoverResponse@databuff
  9756  006AB8  6FDD               	movwf	NetworkSendDiscoverResponse@dhdr& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;NetworkManager.c: 413: memset(address.bytes,0xff,NetworkAddressSizeGet());
  9760  006ABA  0EDE               	movlw	low NetworkSendDiscoverResponse@address
  9761  006ABC  6F60               	movwf	memset@p1& (0+255),b
  9762  006ABE  6B61               	clrf	(memset@p1+1)& (0+255),b
  9763  006AC0  6B63               	clrf	(memset@c+1)& (0+255),b
  9764  006AC2  6962               	setf	memset@c& (0+255),b
  9765  006AC4  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
  9766  006AC8  6F64               	movwf	memset@n& (0+255),b
  9767  006ACA  6B65               	clrf	(memset@n+1)& (0+255),b
  9768  006ACC  EC61  F03C         	call	_memset	;wreg free
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;NetworkManager.c: 414: size=NetworkPrepareSendPacket(address,databuff,PacketScanRespons
      +                          e,(0),0);
  9772  006AD0  EE20  F0DE         	lfsr	2,NetworkSendDiscoverResponse@address
  9773  006AD4  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
  9774  006AD8  0E07               	movlw	7
  9775  006ADA                     u20201:
  9776  006ADA  CFDB FFEB          	movff	plusw2,plusw0
  9777  006ADE  06E8               	decf	wreg,f,c
  9778  006AE0  E2FC               	bc	u20201
  9779  006AE2  0E9B               	movlw	low NetworkSendDiscoverResponse@databuff
  9780  006AE4  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
  9781  006AE6  6B79               	clrf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
  9782  006AE8  0E28               	movlw	40
  9783  006AEA  6F7A               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
  9784  006AEC  6B7B               	clrf	NetworkPrepareSendPacket@data& (0+255),b
  9785  006AEE  6B7C               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
  9786  006AF0  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
  9787  006AF2  6B7D               	clrf	NetworkPrepareSendPacket@size& (0+255),b
  9788  006AF4  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
  9789  006AF8  C070  F0DB         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverResponse@size
  9790  006AFC  C071  F0DC         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverResponse@size+1
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;NetworkManager.c: 415: dhdr->Hops=0;
  9794  006B00  51DD               	movf	NetworkSendDiscoverResponse@dhdr& (0+255),w,b
  9795  006B02  6ED9               	movwf	fsr2l,c
  9796  006B04  6ADA               	clrf	fsr2h,c
  9797  006B06  6ADF               	clrf	indf2,c
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;NetworkManager.c: 416: BroadcastManagerDelaySend(databuff,size,isNetworkSecurityEnabled
      +                          (),1);
  9801  006B08  0E9B               	movlw	low NetworkSendDiscoverResponse@databuff
  9802  006B0A  6F8C               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
  9803  006B0C  6B8D               	clrf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
  9804  006B0E  C0DB  F08E         	movff	NetworkSendDiscoverResponse@size,BroadcastManagerDelaySend@size
  9805  006B12  C0DC  F08F         	movff	NetworkSendDiscoverResponse@size+1,BroadcastManagerDelaySend@size+1
  9806  006B16  EC48  F03E         	call	_isNetworkSecurityEnabled	;wreg free
  9807  006B1A  0100               	movlb	0	; () banked
  9808  006B1C  6F90               	movwf	BroadcastManagerDelaySend@isSecure& (0+255),b
  9809  006B1E  0E01               	movlw	1
  9810  006B20  6F91               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  9811  006B22  EF3C  F023         	goto	_BroadcastManagerDelaySend	;wreg free
  9812  006B26                     __end_of_NetworkSendDiscoverResponse:
  9813                           	opt stack 0
  9814                           tblptru	equ	0xFF8
  9815                           tblptrh	equ	0xFF7
  9816                           tblptrl	equ	0xFF6
  9817                           tablat	equ	0xFF5
  9818                           prodh	equ	0xFF4
  9819                           prodl	equ	0xFF3
  9820                           postinc0	equ	0xFEE
  9821                           plusw0	equ	0xFEB
  9822                           fsr0h	equ	0xFEA
  9823                           fsr0l	equ	0xFE9
  9824                           wreg	equ	0xFE8
  9825                           indf1	equ	0xFE7
  9826                           postdec1	equ	0xFE5
  9827                           plusw1	equ	0xFE3
  9828                           fsr1h	equ	0xFE2
  9829                           fsr1l	equ	0xFE1
  9830                           indf2	equ	0xFDF
  9831                           postinc2	equ	0xFDE
  9832                           postdec2	equ	0xFDD
  9833                           plusw2	equ	0xFDB
  9834                           fsr2h	equ	0xFDA
  9835                           fsr2l	equ	0xFD9
  9836                           status	equ	0xFD8
  9837                           
  9838 ;; *************** function _NetworkManagerProcessIncomingData *****************
  9839 ;; Defined at:
  9840 ;;		line 276 in file "../NetworkManager.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  data            2  137[BANK0 ] PTR unsigned char 
  9843 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  9844 ;;  size            2  139[BANK0 ] unsigned int 
  9845 ;;  isBroadcast     1  141[BANK0 ] unsigned char 
  9846 ;;  isSecure        1  142[BANK0 ] unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  buffer         64   64[BANK1 ] unsigned char [64]
  9849 ;;  dHdr            2  132[BANK1 ] PTR struct net_data_head
  9850 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
  9851 ;;  packetsize      2  129[BANK1 ] unsigned int 
  9852 ;;  isSecurePack    1  131[BANK1 ] unsigned char 
  9853 ;;  isFormed        1  128[BANK1 ] unsigned char 
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : F/1
  9860 ;;		On exit  : E/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9863 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9864 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9866 ;;      Totals:         0       7      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9867 ;;Total ram usage:       77 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:   13
  9870 ;; This function calls:
  9871 ;;		_BeaconManagerTrigger
  9872 ;;		_DeviceManagerGetDeviceData
  9873 ;;		_IsNetworkDevice
  9874 ;;		_NetworkDataArrivedEvent
  9875 ;;		_NetworkGetDeviceType
  9876 ;;		_TMSendDataToRFD
  9877 ;;		_TMSendFormedPacketToRFD
  9878 ;;		_isInvalidAddress
  9879 ;;		_memcpy
  9880 ;; This function is called by:
  9881 ;;		_radioReceivedPacket
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text25
  9886  002F2A                     __ptext25:
  9887                           	opt stack 0
  9888  002F2A                     _NetworkManagerProcessIncomingData:
  9889                           	opt stack 14
  9890                           
  9891                           ; BSR set to: 1
  9892                           ;NetworkManager.c: 278: net_data_header_t *dHdr=(net_data_header_t*)data;
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;incstack = 0
  9896  002F2A  C0E9  F184         	movff	NetworkManagerProcessIncomingData@data,NetworkManagerProcessIncomingData@dHdr
  9897  002F2E  C0EA  F185         	movff	NetworkManagerProcessIncomingData@data+1,NetworkManagerProcessIncomingData@dHdr+1
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;NetworkManager.c: 279: uint16_t packetsize;
  9901                           ;NetworkManager.c: 280: uint8_t buffer[64];
  9902                           ;NetworkManager.c: 281: bool isSecurePacket;
  9903                           ;NetworkManager.c: 282: bool isFormed;
  9904                           ;NetworkManager.c: 284: if(NetworkGetDeviceType()==DeviceCoordinator)
  9905  002F32  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
  9906  002F36  0900               	iorlw	0
  9907  002F38  E001 D0D3          	bnz	l13581
  9908                           
  9909                           ;NetworkManager.c: 285: {
  9910                           ;NetworkManager.c: 286: if(IsNetworkDevice(dHdr->origin,(dHdr->flags & 0x07))==1)
  9911  002F3C  0101               	movlb	1	; () banked
  9912  002F3E  EE20 F00C          	lfsr	2,12
  9913  002F42  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9914  002F44  26D9               	addwf	fsr2l,f,c
  9915  002F46  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9916  002F48  22DA               	addwfc	fsr2h,f,c
  9917  002F4A  EE00  F081         	lfsr	0,IsNetworkDevice@address
  9918  002F4E  0E07               	movlw	7
  9919  002F50                     u20351:
  9920  002F50  CFDB FFEB          	movff	plusw2,plusw0
  9921  002F54  06E8               	decf	wreg,f,c
  9922  002F56  E2FC               	bc	u20351
  9923  002F58  EE20 F003          	lfsr	2,3
  9924  002F5C  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9925  002F5E  26D9               	addwf	fsr2l,f,c
  9926  002F60  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9927  002F62  22DA               	addwfc	fsr2h,f,c
  9928  002F64  50DF               	movf	indf2,w,c
  9929  002F66  0B07               	andlw	7
  9930  002F68  0100               	movlb	0	; () banked
  9931  002F6A  6F89               	movwf	IsNetworkDevice@devType& (0+255),b
  9932  002F6C  ECD3  F020         	call	_IsNetworkDevice	;wreg free
  9933  002F70  06E8               	decf	wreg,f,c
  9934  002F72  E101 D0A3          	bz	l13579
  9935  002F76  0012               	return	
  9936  002F78                     l13555:
  9937                           
  9938                           ; BSR set to: 1
  9939                           ;NetworkManager.c: 293: packetsize=DeviceManagerGetDeviceData(dHdr->origin,buffer,&isSec
      +                          urePacket,&isFormed);
  9940  002F78  EE20 F00C          	lfsr	2,12
  9941  002F7C  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9942  002F7E  26D9               	addwf	fsr2l,f,c
  9943  002F80  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9944  002F82  22DA               	addwfc	fsr2h,f,c
  9945  002F84  EE00  F080         	lfsr	0,DeviceManagerGetDeviceData@address
  9946  002F88  0E07               	movlw	7
  9947  002F8A                     u20371:
  9948  002F8A  CFDB FFEB          	movff	plusw2,plusw0
  9949  002F8E  06E8               	decf	wreg,f,c
  9950  002F90  E2FC               	bc	u20371
  9951  002F92  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9952  002F94  0100               	movlb	0	; () banked
  9953  002F96  6F88               	movwf	DeviceManagerGetDeviceData@data& (0+255),b
  9954  002F98  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
  9955  002F9A  6F89               	movwf	(DeviceManagerGetDeviceData@data+1)& (0+255),b
  9956  002F9C  0E83               	movlw	low NetworkManagerProcessIncomingData@isSecurePacket
  9957  002F9E  6F8A               	movwf	DeviceManagerGetDeviceData@isSecure& (0+255),b
  9958  002FA0  0E01               	movlw	high NetworkManagerProcessIncomingData@isSecurePacket
  9959  002FA2  6F8B               	movwf	(DeviceManagerGetDeviceData@isSecure+1)& (0+255),b
  9960  002FA4  0E80               	movlw	low NetworkManagerProcessIncomingData@isFormed
  9961  002FA6  6F8C               	movwf	DeviceManagerGetDeviceData@isFormed& (0+255),b
  9962  002FA8  0E01               	movlw	high NetworkManagerProcessIncomingData@isFormed
  9963  002FAA  6F8D               	movwf	(DeviceManagerGetDeviceData@isFormed+1)& (0+255),b
  9964  002FAC  EC0E  F03E         	call	_DeviceManagerGetDeviceData	;wreg free
  9965  002FB0  C080  F181         	movff	?_DeviceManagerGetDeviceData,NetworkManagerProcessIncomingData@packetsize
  9966  002FB4  C081  F182         	movff	?_DeviceManagerGetDeviceData+1,NetworkManagerProcessIncomingData@packetsize+1
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;NetworkManager.c: 294: if(packetsize>0)
  9970  002FB8  0101               	movlb	1	; () banked
  9971  002FBA  5181               	movf	NetworkManagerProcessIncomingData@packetsize& (0+255),w,b
  9972  002FBC  1182               	iorwf	(NetworkManagerProcessIncomingData@packetsize+1)& (0+255),w,b
  9973  002FBE  B4D8               	btfsc	status,2,c
  9974  002FC0  0012               	return	
  9975                           
  9976                           ; BSR set to: 1
  9977                           ;NetworkManager.c: 295: {
  9978                           ;NetworkManager.c: 296: if(isFormed==1)
  9979  002FC2  0580               	decf	NetworkManagerProcessIncomingData@isFormed& (0+255),w,b
  9980  002FC4  E11A               	bnz	l13563
  9981                           
  9982                           ; BSR set to: 1
  9983                           ;NetworkManager.c: 297: {
  9984                           ;NetworkManager.c: 298: TMSendFormedPacketToRFD(dHdr->origin, buffer, packetsize, isSecu
      +                          rePacket);
  9985  002FC6  EE20 F00C          	lfsr	2,12
  9986  002FCA  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
  9987  002FCC  26D9               	addwf	fsr2l,f,c
  9988  002FCE  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
  9989  002FD0  22DA               	addwfc	fsr2h,f,c
  9990  002FD2  EE00  F0C0         	lfsr	0,TMSendFormedPacketToRFD@device
  9991  002FD6  0E07               	movlw	7
  9992  002FD8                     u20401:
  9993  002FD8  CFDB FFEB          	movff	plusw2,plusw0
  9994  002FDC  06E8               	decf	wreg,f,c
  9995  002FDE  E2FC               	bc	u20401
  9996  002FE0  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
  9997  002FE2  0100               	movlb	0	; () banked
  9998  002FE4  6FC8               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
  9999  002FE6  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
 10000  002FE8  6FC9               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
 10001  002FEA  C181  F0CA         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendFormedPacketToRFD@size
 10002  002FEE  C182  F0CB         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendFormedPacketToRFD@size+1
 10003  002FF2  C183  F0CC         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendFormedPacketToRFD@isSecure
 10004  002FF6  EF5E  F013         	goto	_TMSendFormedPacketToRFD	;wreg free
 10005  002FFA                     l13563:
 10006                           
 10007                           ; BSR set to: 1
 10008                           ;NetworkManager.c: 300: {
 10009                           ;NetworkManager.c: 301: TMSendDataToRFD(dHdr->origin,PacketData,buffer,packetsize,isSecu
      +                          rePacket);
 10010  002FFA  EE20 F00C          	lfsr	2,12
 10011  002FFE  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10012  003000  26D9               	addwf	fsr2l,f,c
 10013  003002  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10014  003004  22DA               	addwfc	fsr2h,f,c
 10015  003006  EE00  F0DB         	lfsr	0,TMSendDataToRFD@device
 10016  00300A  0E07               	movlw	7
 10017  00300C                     u20411:
 10018  00300C  CFDB FFEB          	movff	plusw2,plusw0
 10019  003010  06E8               	decf	wreg,f,c
 10020  003012  E2FC               	bc	u20411
 10021  003014  0E23               	movlw	35
 10022  003016  0100               	movlb	0	; () banked
 10023  003018  6FE3               	movwf	TMSendDataToRFD@pType& (0+255),b
 10024  00301A  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
 10025  00301C  6FE4               	movwf	TMSendDataToRFD@data& (0+255),b
 10026  00301E  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
 10027  003020  6FE5               	movwf	(TMSendDataToRFD@data+1)& (0+255),b
 10028  003022  C181  F0E6         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendDataToRFD@size
 10029  003026  C182  F0E7         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendDataToRFD@size+1
 10030  00302A  C183  F0E8         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendDataToRFD@isSecure
 10031  00302E  EF31  F036         	goto	_TMSendDataToRFD	;wreg free
 10032  003032                     l13565:
 10033                           
 10034                           ; BSR set to: 1
 10035                           ;NetworkManager.c: 307: TMSendDataToRFD(dHdr->origin,PacketCheckinReply,(0),0, isSecure)
      +                          ;
 10036  003032  EE20 F00C          	lfsr	2,12
 10037  003036  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10038  003038  26D9               	addwf	fsr2l,f,c
 10039  00303A  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10040  00303C  22DA               	addwfc	fsr2h,f,c
 10041  00303E  EE00  F0DB         	lfsr	0,TMSendDataToRFD@device
 10042  003042  0E07               	movlw	7
 10043  003044                     u20421:
 10044  003044  CFDB FFEB          	movff	plusw2,plusw0
 10045  003048  06E8               	decf	wreg,f,c
 10046  00304A  E2FC               	bc	u20421
 10047  00304C  0E25               	movlw	37
 10048  00304E  0100               	movlb	0	; () banked
 10049  003050  6FE3               	movwf	TMSendDataToRFD@pType& (0+255),b
 10050  003052  6BE4               	clrf	TMSendDataToRFD@data& (0+255),b
 10051  003054  6BE5               	clrf	(TMSendDataToRFD@data+1)& (0+255),b
 10052  003056  6BE7               	clrf	(TMSendDataToRFD@size+1)& (0+255),b
 10053  003058  6BE6               	clrf	TMSendDataToRFD@size& (0+255),b
 10054  00305A  C0EE  F0E8         	movff	NetworkManagerProcessIncomingData@isSecure,TMSendDataToRFD@isSecure
 10055  00305E  EF31  F036         	goto	_TMSendDataToRFD	;wreg free
 10056  003062                     l13567:
 10057                           
 10058                           ; BSR set to: 1
 10059                           ;NetworkManager.c: 315: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
 10060  003062  51E4               	movf	_userDataAvailable& (0+255),w,b
 10061  003064  A4D8               	btfss	status,2,c
 10062  003066  0012               	return	
 10063                           
 10064                           ; BSR set to: 1
 10065  003068  0100               	movlb	0	; () banked
 10066  00306A  51EC               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10067  00306C  E104               	bnz	u20440
 10068  00306E  0E1D               	movlw	29
 10069  003070  5DEB               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10070  003072  A0D8               	btfss	status,0,c
 10071  003074  0012               	return	
 10072  003076                     u20440:
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;NetworkManager.c: 316: {
 10076                           ;NetworkManager.c: 317: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
 10077  003076  0E95               	movlw	low _userdata
 10078  003078  6F62               	movwf	memcpy@d1& (0+255),b
 10079  00307A  0E03               	movlw	high _userdata
 10080  00307C  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 10081  00307E  0E1C               	movlw	28
 10082  003080  25E9               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
 10083  003082  6F64               	movwf	memcpy@s1& (0+255),b
 10084  003084  0E00               	movlw	0
 10085  003086  21EA               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
 10086  003088  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 10087  00308A  0EE4               	movlw	228
 10088  00308C  25EB               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10089  00308E  6F66               	movwf	memcpy@n& (0+255),b
 10090  003090  0EFF               	movlw	255
 10091  003092  21EC               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10092  003094  6F67               	movwf	(memcpy@n+1)& (0+255),b
 10093  003096  ECFA  F03A         	call	_memcpy	;wreg free
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;NetworkManager.c: 318: userDataAvailable=1;
 10097  00309A  0E01               	movlw	1
 10098  00309C  0101               	movlb	1	; () banked
 10099  00309E  6FE4               	movwf	_userDataAvailable& (0+255),b
 10100                           
 10101                           ; BSR set to: 1
 10102                           ;NetworkManager.c: 319: NetworkDataArrivedEvent(dHdr->origin,userdata,size-sizeof(net_da
      +                          ta_header_t),isBroadcast);
 10103  0030A0  EE20 F00C          	lfsr	2,12
 10104  0030A4  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10105  0030A6  26D9               	addwf	fsr2l,f,c
 10106  0030A8  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10107  0030AA  22DA               	addwfc	fsr2h,f,c
 10108  0030AC  EE00  F068         	lfsr	0,NetworkDataArrivedEvent@source
 10109  0030B0  0E07               	movlw	7
 10110  0030B2                     u20451:
 10111  0030B2  CFDB FFEB          	movff	plusw2,plusw0
 10112  0030B6  06E8               	decf	wreg,f,c
 10113  0030B8  E2FC               	bc	u20451
 10114  0030BA  D06F               	goto	L33
 10115  0030BC                     l13579:
 10116                           
 10117                           ; BSR set to: 0
 10118  0030BC  0101               	movlb	1	; () banked
 10119  0030BE  EE20 F002          	lfsr	2,2
 10120  0030C2  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10121  0030C4  26D9               	addwf	fsr2l,f,c
 10122  0030C6  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10123  0030C8  22DA               	addwfc	fsr2h,f,c
 10124  0030CA  50DF               	movf	indf2,w,c
 10125                           
 10126                           ; Switch size 1, requested type "speed"
 10127                           ; Number of cases is 4, Range of values is 35 to 41
 10128                           ; switch strategies available:
 10129                           ; Name         Instructions Cycles
 10130                           ; simple_byte           13     7 (average)
 10131                           ;	Chosen strategy is simple_byte
 10132  0030CC  0A23               	xorlw	35	; case 35
 10133  0030CE  E0C9               	bz	l13567
 10134  0030D0  0A07               	xorlw	7	; case 36
 10135  0030D2  E0AF               	bz	l13565
 10136  0030D4  0A01               	xorlw	1	; case 37
 10137  0030D6  B4D8               	btfsc	status,2,c
 10138  0030D8  0012               	return	
 10139  0030DA  0A0C               	xorlw	12	; case 41
 10140  0030DC  E101 D74C          	bz	l13555
 10141                           
 10142                           ;NetworkManager.c: 327: }
 10143                           ;NetworkManager.c: 328: }else
 10144  0030E0  0012               	return	
 10145  0030E2                     l13581:
 10146                           
 10147                           ;NetworkManager.c: 329: {
 10148                           ;NetworkManager.c: 330: if(dHdr->packettype==PacketCheckinReply)
 10149  0030E2  0101               	movlb	1	; () banked
 10150  0030E4  EE20 F002          	lfsr	2,2
 10151  0030E8  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10152  0030EA  26D9               	addwf	fsr2l,f,c
 10153  0030EC  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10154  0030EE  22DA               	addwfc	fsr2h,f,c
 10155  0030F0  0E25               	movlw	37
 10156  0030F2  18DE               	xorwf	postinc2,w,c
 10157  0030F4  E126               	bnz	l13595
 10158                           
 10159                           ; BSR set to: 1
 10160                           ;NetworkManager.c: 331: {
 10161                           ;NetworkManager.c: 332: if( (routeInfo.hasCheckedIn==0) && (isInvalidAddress(routeInfo.p
      +                          arent)==0) )
 10162  0030F6  0102               	movlb	2	; () banked
 10163  0030F8  5192               	movf	(_routeInfo+12)& (0+255),w,b
 10164  0030FA  E112               	bnz	l13591
 10165                           
 10166                           ; BSR set to: 2
 10167  0030FC  EE22  F086         	lfsr	2,_routeInfo
 10168  003100  EE00  F079         	lfsr	0,isInvalidAddress@address
 10169  003104  0E07               	movlw	7
 10170  003106                     u20481:
 10171  003106  CFDB FFEB          	movff	plusw2,plusw0
 10172  00310A  06E8               	decf	wreg,f,c
 10173  00310C  E2FC               	bc	u20481
 10174  00310E  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 10175  003112  0900               	iorlw	0
 10176  003114  E105               	bnz	l13591
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;NetworkManager.c: 333: {
 10180                           ;NetworkManager.c: 335: BeaconManagerTrigger();
 10181  003116  EC42  F03E         	call	_BeaconManagerTrigger	;wreg free
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;NetworkManager.c: 336: routeInfo.hasCheckedIn=1;
 10185  00311A  0E01               	movlw	1
 10186  00311C  0102               	movlb	2	; () banked
 10187  00311E  6F92               	movwf	(_routeInfo+12)& (0+255),b
 10188  003120                     l13591:
 10189                           
 10190                           ;NetworkManager.c: 337: }
 10191                           ;NetworkManager.c: 338: CoordinatorAddr=dHdr->origin;
 10192  003120  0101               	movlb	1	; () banked
 10193  003122  EE20 F00C          	lfsr	2,12
 10194  003126  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10195  003128  26D9               	addwf	fsr2l,f,c
 10196  00312A  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10197  00312C  22DA               	addwfc	fsr2h,f,c
 10198  00312E  EE12  F0A5         	lfsr	1,_CoordinatorAddr
 10199  003132  0E07               	movlw	7
 10200  003134                     u20501:
 10201  003134  CFDB FFE3          	movff	plusw2,plusw1
 10202  003138  06E8               	decf	wreg,f,c
 10203  00313A  E2FC               	bc	u20501
 10204                           
 10205                           ; BSR set to: 1
 10206                           ;NetworkManager.c: 339: nState=netOperating;
 10207  00313C  0E04               	movlw	4
 10208  00313E  6FE2               	movwf	_nState& (0+255),b
 10209                           
 10210                           ;NetworkManager.c: 340: }else
 10211  003140  0C04               	retlw	4
 10212  003142                     l13595:
 10213                           
 10214                           ; BSR set to: 1
 10215                           ;NetworkManager.c: 341: {
 10216                           ;NetworkManager.c: 343: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
 10217  003142  51E4               	movf	_userDataAvailable& (0+255),w,b
 10218  003144  A4D8               	btfss	status,2,c
 10219  003146  0012               	return	
 10220                           
 10221                           ; BSR set to: 1
 10222  003148  0100               	movlb	0	; () banked
 10223  00314A  51EC               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10224  00314C  E104               	bnz	u20520
 10225  00314E  0E1D               	movlw	29
 10226  003150  5DEB               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10227  003152  A0D8               	btfss	status,0,c
 10228  003154  0012               	return	
 10229  003156                     u20520:
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;NetworkManager.c: 344: {
 10233                           ;NetworkManager.c: 345: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
 10234  003156  0E95               	movlw	low _userdata
 10235  003158  6F62               	movwf	memcpy@d1& (0+255),b
 10236  00315A  0E03               	movlw	high _userdata
 10237  00315C  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 10238  00315E  0E1C               	movlw	28
 10239  003160  25E9               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
 10240  003162  6F64               	movwf	memcpy@s1& (0+255),b
 10241  003164  0E00               	movlw	0
 10242  003166  21EA               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
 10243  003168  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 10244  00316A  0EE4               	movlw	228
 10245  00316C  25EB               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10246  00316E  6F66               	movwf	memcpy@n& (0+255),b
 10247  003170  0EFF               	movlw	255
 10248  003172  21EC               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10249  003174  6F67               	movwf	(memcpy@n+1)& (0+255),b
 10250  003176  ECFA  F03A         	call	_memcpy	;wreg free
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;NetworkManager.c: 346: userDataAvailable=1;
 10254  00317A  0E01               	movlw	1
 10255  00317C  0101               	movlb	1	; () banked
 10256  00317E  6FE4               	movwf	_userDataAvailable& (0+255),b
 10257                           
 10258                           ; BSR set to: 1
 10259                           ;NetworkManager.c: 347: NetworkDataArrivedEvent(dHdr->origin,userdata,size-sizeof(net_da
      +                          ta_header_t),isBroadcast);
 10260  003180  EE20 F00C          	lfsr	2,12
 10261  003184  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10262  003186  26D9               	addwf	fsr2l,f,c
 10263  003188  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10264  00318A  22DA               	addwfc	fsr2h,f,c
 10265  00318C  EE00  F068         	lfsr	0,NetworkDataArrivedEvent@source
 10266  003190  0E07               	movlw	7
 10267  003192                     u20531:
 10268  003192  CFDB FFEB          	movff	plusw2,plusw0
 10269  003196  06E8               	decf	wreg,f,c
 10270  003198  E2FC               	bc	u20531
 10271  00319A                     L33:
 10272  00319A  0E95               	movlw	low _userdata
 10273  00319C  0100               	movlb	0	; () banked
 10274  00319E  6F70               	movwf	NetworkDataArrivedEvent@data& (0+255),b
 10275  0031A0  0E03               	movlw	high _userdata
 10276  0031A2  6F71               	movwf	(NetworkDataArrivedEvent@data+1)& (0+255),b
 10277  0031A4  0EE4               	movlw	228
 10278  0031A6  25EB               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10279  0031A8  6F72               	movwf	NetworkDataArrivedEvent@size& (0+255),b
 10280  0031AA  0EFF               	movlw	255
 10281  0031AC  21EC               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10282  0031AE  6F73               	movwf	(NetworkDataArrivedEvent@size+1)& (0+255),b
 10283  0031B0  C0ED  F074         	movff	NetworkManagerProcessIncomingData@isBroadcast,NetworkDataArrivedEvent@isBroadcast
 10284  0031B4  EF27  F037         	goto	_NetworkDataArrivedEvent	;wreg free
 10285  0031B8                     __end_of_NetworkManagerProcessIncomingData:
 10286                           	opt stack 0
 10287                           tblptru	equ	0xFF8
 10288                           tblptrh	equ	0xFF7
 10289                           tblptrl	equ	0xFF6
 10290                           tablat	equ	0xFF5
 10291                           prodh	equ	0xFF4
 10292                           prodl	equ	0xFF3
 10293                           postinc0	equ	0xFEE
 10294                           plusw0	equ	0xFEB
 10295                           fsr0h	equ	0xFEA
 10296                           fsr0l	equ	0xFE9
 10297                           wreg	equ	0xFE8
 10298                           indf1	equ	0xFE7
 10299                           postdec1	equ	0xFE5
 10300                           plusw1	equ	0xFE3
 10301                           fsr1h	equ	0xFE2
 10302                           fsr1l	equ	0xFE1
 10303                           indf2	equ	0xFDF
 10304                           postinc2	equ	0xFDE
 10305                           postdec2	equ	0xFDD
 10306                           plusw2	equ	0xFDB
 10307                           fsr2h	equ	0xFDA
 10308                           fsr2l	equ	0xFD9
 10309                           status	equ	0xFD8
 10310                           
 10311 ;; *************** function _TMSendDataToRFD *****************
 10312 ;; Defined at:
 10313 ;;		line 195 in file "../TransportManager.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  device          8  123[BANK0 ] struct addr_t_def
 10316 ;;  pType           1  131[BANK0 ] enum E232
 10317 ;;  data            2  132[BANK0 ] PTR unsigned char 
 10318 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), NULL(0), TxBuffer(64), 
 10319 ;;  size            2  134[BANK0 ] unsigned int 
 10320 ;;  isSecure        1  136[BANK0 ] unsigned char 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      unsigned char 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : F/0
 10329 ;;		On exit  : F/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10332 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Totals:         0      14      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;Total ram usage:       78 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:   12
 10339 ;; This function calls:
 10340 ;;		_NetworkPrepareSendPacket
 10341 ;;		_TMSendFormedPacketToRFD
 10342 ;; This function is called by:
 10343 ;;		_NetworkUnicastData
 10344 ;;		_NetworkManagerProcessIncomingData
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text26
 10349  006C62                     __ptext26:
 10350                           	opt stack 0
 10351  006C62                     _TMSendDataToRFD:
 10352                           	opt stack 16
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;TransportManager.c: 197: uint8_t databuff[64];
 10356                           ;TransportManager.c: 198: size=NetworkPrepareSendPacket(device,databuff,pType,data,size)
      +                          ;
 10357                           
 10358                           ;incstack = 0
 10359  006C62  EE20  F0DB         	lfsr	2,TMSendDataToRFD@device
 10360  006C66  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
 10361  006C6A  0E07               	movlw	7
 10362  006C6C                     u18781:
 10363  006C6C  CFDB FFEB          	movff	plusw2,plusw0
 10364  006C70  06E8               	decf	wreg,f,c
 10365  006C72  E2FC               	bc	u18781
 10366  006C74  0E00               	movlw	low TMSendDataToRFD@databuff
 10367  006C76  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 10368  006C78  0E01               	movlw	high TMSendDataToRFD@databuff
 10369  006C7A  6F79               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 10370  006C7C  C0E3  F07A         	movff	TMSendDataToRFD@pType,NetworkPrepareSendPacket@pType
 10371  006C80  C0E4  F07B         	movff	TMSendDataToRFD@data,NetworkPrepareSendPacket@data
 10372  006C84  C0E5  F07C         	movff	TMSendDataToRFD@data+1,NetworkPrepareSendPacket@data+1
 10373  006C88  C0E6  F07D         	movff	TMSendDataToRFD@size,NetworkPrepareSendPacket@size
 10374  006C8C  C0E7  F07E         	movff	TMSendDataToRFD@size+1,NetworkPrepareSendPacket@size+1
 10375  006C90  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
 10376  006C94  C070  F0E6         	movff	?_NetworkPrepareSendPacket,TMSendDataToRFD@size
 10377  006C98  C071  F0E7         	movff	?_NetworkPrepareSendPacket+1,TMSendDataToRFD@size+1
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;TransportManager.c: 199: return(TMSendFormedPacketToRFD(device, databuff, size, isSecur
      +                          e));
 10381  006C9C  EE20  F0DB         	lfsr	2,TMSendDataToRFD@device
 10382  006CA0  EE00  F0C0         	lfsr	0,TMSendFormedPacketToRFD@device
 10383  006CA4  0E07               	movlw	7
 10384  006CA6                     u18791:
 10385  006CA6  CFDB FFEB          	movff	plusw2,plusw0
 10386  006CAA  06E8               	decf	wreg,f,c
 10387  006CAC  E2FC               	bc	u18791
 10388  006CAE  0E00               	movlw	low TMSendDataToRFD@databuff
 10389  006CB0  6FC8               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
 10390  006CB2  0E01               	movlw	high TMSendDataToRFD@databuff
 10391  006CB4  6FC9               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
 10392  006CB6  C0E6  F0CA         	movff	TMSendDataToRFD@size,TMSendFormedPacketToRFD@size
 10393  006CBA  C0E7  F0CB         	movff	TMSendDataToRFD@size+1,TMSendFormedPacketToRFD@size+1
 10394  006CBE  C0E8  F0CC         	movff	TMSendDataToRFD@isSecure,TMSendFormedPacketToRFD@isSecure
 10395  006CC2  EF5E  F013         	goto	_TMSendFormedPacketToRFD	;wreg free
 10396  006CC6                     __end_of_TMSendDataToRFD:
 10397                           	opt stack 0
 10398                           tblptru	equ	0xFF8
 10399                           tblptrh	equ	0xFF7
 10400                           tblptrl	equ	0xFF6
 10401                           tablat	equ	0xFF5
 10402                           prodh	equ	0xFF4
 10403                           prodl	equ	0xFF3
 10404                           postinc0	equ	0xFEE
 10405                           plusw0	equ	0xFEB
 10406                           fsr0h	equ	0xFEA
 10407                           fsr0l	equ	0xFE9
 10408                           wreg	equ	0xFE8
 10409                           indf1	equ	0xFE7
 10410                           postdec1	equ	0xFE5
 10411                           plusw1	equ	0xFE3
 10412                           fsr1h	equ	0xFE2
 10413                           fsr1l	equ	0xFE1
 10414                           indf2	equ	0xFDF
 10415                           postinc2	equ	0xFDE
 10416                           postdec2	equ	0xFDD
 10417                           plusw2	equ	0xFDB
 10418                           fsr2h	equ	0xFDA
 10419                           fsr2l	equ	0xFD9
 10420                           status	equ	0xFD8
 10421                           
 10422 ;; *************** function _TMSendFormedPacketToRFD *****************
 10423 ;; Defined at:
 10424 ;;		line 202 in file "../TransportManager.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  device          8   96[BANK0 ] struct addr_t_def
 10427 ;;  data            2  104[BANK0 ] PTR unsigned char 
 10428 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10429 ;;  size            2  106[BANK0 ] unsigned int 
 10430 ;;  isSecure        1  108[BANK0 ] unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  parent          8  115[BANK0 ] struct addr_t_def
 10433 ;;  dhdr            2  113[BANK0 ] PTR struct net_data_head
 10434 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10435 ;;  myaddr          2  110[BANK0 ] PTR struct addr_t_def
 10436 ;;		 -> MyAddress(8), 
 10437 ;;  res             1  112[BANK0 ] unsigned char 
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      unsigned char 
 10440 ;; Registers used:
 10441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : F/0
 10444 ;;		On exit  : F/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10447 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10451 ;;Total ram usage:       27 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:   11
 10454 ;; This function calls:
 10455 ;;		_BroadcastManagerDelaySend
 10456 ;;		_GetRouteAddressOfChild
 10457 ;;		_LE_RemoveNeighborDevice
 10458 ;;		_NetworkGetDeviceType
 10459 ;;		_NetworkGetPANID
 10460 ;;		_NetworkGetParentAddress
 10461 ;;		_NetworkManagerGetMyAddress
 10462 ;;		_TMSendFormedPacketTowardsCoordinator
 10463 ;;		_TunnelManagerGetTunnel
 10464 ;;		_TunnelManagerInvalidateTunnel
 10465 ;;		_isBroadcastAddress
 10466 ;;		_isSameAddress
 10467 ;;		_radioUnicast
 10468 ;; This function is called by:
 10469 ;;		_TMSendDataToRFD
 10470 ;;		_NetworkManagerProcessIncomingData
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           	psect	text27
 10475  0026BC                     __ptext27:
 10476                           	opt stack 0
 10477  0026BC                     _TMSendFormedPacketToRFD:
 10478                           	opt stack 16
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;TransportManager.c: 204: bool res=1;
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;incstack = 0
 10485  0026BC  0E01               	movlw	1
 10486  0026BE  6FD0               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;TransportManager.c: 205: addr_t parent;
 10490                           ;TransportManager.c: 206: addr_t *myaddr=NetworkManagerGetMyAddress();
 10491  0026C0  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
 10492  0026C4  C060  F0CE         	movff	?_NetworkManagerGetMyAddress,TMSendFormedPacketToRFD@myaddr
 10493  0026C8  C061  F0CF         	movff	?_NetworkManagerGetMyAddress+1,TMSendFormedPacketToRFD@myaddr+1
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;TransportManager.c: 207: net_data_header_t *dhdr=(net_data_header_t*)data;
 10497  0026CC  C0C8  F0D1         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketToRFD@dhdr
 10498  0026D0  C0C9  F0D2         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketToRFD@dhdr+1
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;TransportManager.c: 209: parent = TunnelManagerGetTunnel(device);
 10502  0026D4  EE20  F0C0         	lfsr	2,TMSendFormedPacketToRFD@device
 10503  0026D8  EE00  F098         	lfsr	0,TunnelManagerGetTunnel@device
 10504  0026DC  0E07               	movlw	7
 10505  0026DE                     u18331:
 10506  0026DE  CFDB FFEB          	movff	plusw2,plusw0
 10507  0026E2  06E8               	decf	wreg,f,c
 10508  0026E4  E2FC               	bc	u18331
 10509  0026E6  EC7E  F025         	call	_TunnelManagerGetTunnel	;wreg free
 10510  0026EA  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10511  0026EE  0E07               	movlw	7
 10512  0026F0                     u18341:
 10513  0026F0  CFEB FFDB          	movff	plusw0,plusw2
 10514  0026F4  06E8               	decf	wreg,f,c
 10515  0026F6  E2FC               	bc	u18341
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;TransportManager.c: 210: if(isBroadcastAddress(parent)==1)
 10519  0026F8  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10520  0026FC  EE00  F068         	lfsr	0,isBroadcastAddress@address
 10521  002700  0E07               	movlw	7
 10522  002702                     u18351:
 10523  002702  CFDB FFEB          	movff	plusw2,plusw0
 10524  002706  06E8               	decf	wreg,f,c
 10525  002708  E2FC               	bc	u18351
 10526  00270A  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
 10527  00270E  06E8               	decf	wreg,f,c
 10528  002710  E001 D0CE          	bnz	l12847
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;TransportManager.c: 211: {
 10532                           ;TransportManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 10533  002714  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 10534  002718  0900               	iorlw	0
 10535  00271A  E115               	bnz	l12819
 10536                           
 10537                           ;TransportManager.c: 213: {
 10538                           ;TransportManager.c: 214: dhdr->Hops=20;
 10539  00271C  C0D1  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 10540  002720  C0D2  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 10541  002724  0E14               	movlw	20
 10542  002726  6EDF               	movwf	indf2,c
 10543                           
 10544                           ;TransportManager.c: 215: BroadcastManagerDelaySend(data,size,isSecure,0);
 10545  002728  C0C8  F08C         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 10546  00272C  C0C9  F08D         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 10547  002730  C0CA  F08E         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 10548  002734  C0CB  F08F         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 10549  002738  C0CC  F090         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 10550  00273C  0100               	movlb	0	; () banked
 10551  00273E  6B91               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10552  002740  EC3C  F023         	call	_BroadcastManagerDelaySend	;wreg free
 10553                           
 10554                           ;TransportManager.c: 216: }else
 10555  002744  D13F               	goto	l12867
 10556  002746                     l12819:
 10557                           
 10558                           ;TransportManager.c: 217: {
 10559                           ;TransportManager.c: 219: parent=GetRouteAddressOfChild(device);
 10560  002746  EE20  F0C0         	lfsr	2,TMSendFormedPacketToRFD@device
 10561  00274A  EE00  F096         	lfsr	0,GetRouteAddressOfChild@child
 10562  00274E  0E07               	movlw	7
 10563  002750                     u18381:
 10564  002750  CFDB FFEB          	movff	plusw2,plusw0
 10565  002754  06E8               	decf	wreg,f,c
 10566  002756  E2FC               	bc	u18381
 10567  002758  EC63  F032         	call	_GetRouteAddressOfChild	;wreg free
 10568  00275C  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10569  002760  0E07               	movlw	7
 10570  002762                     u18391:
 10571  002762  CFEB FFDB          	movff	plusw0,plusw2
 10572  002766  06E8               	decf	wreg,f,c
 10573  002768  E2FC               	bc	u18391
 10574                           
 10575                           ;TransportManager.c: 220: if(isBroadcastAddress(parent)==0)
 10576  00276A  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10577  00276E  EE00  F068         	lfsr	0,isBroadcastAddress@address
 10578  002772  0E07               	movlw	7
 10579  002774                     u18401:
 10580  002774  CFDB FFEB          	movff	plusw2,plusw0
 10581  002778  06E8               	decf	wreg,f,c
 10582  00277A  E2FC               	bc	u18401
 10583  00277C  EC9B  F03A         	call	_isBroadcastAddress	;wreg free
 10584  002780  0900               	iorlw	0
 10585  002782  E176               	bnz	l12841
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;TransportManager.c: 221: {
 10589                           ;TransportManager.c: 224: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 10590  002784  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10591  002788  EE00  F070         	lfsr	0,isSameAddress@a1
 10592  00278C  0E07               	movlw	7
 10593  00278E                     u18421:
 10594  00278E  CFDB FFEB          	movff	plusw2,plusw0
 10595  002792  06E8               	decf	wreg,f,c
 10596  002794  E2FC               	bc	u18421
 10597  002796  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 10598  00279A  CFE9 FFD9          	movff	fsr0l,fsr2l
 10599  00279E  CFEA FFDA          	movff	fsr0h,fsr2h
 10600  0027A2  EE00  F078         	lfsr	0,isSameAddress@a2
 10601  0027A6  0E07               	movlw	7
 10602  0027A8                     u18431:
 10603  0027A8  CFDB FFEB          	movff	plusw2,plusw0
 10604  0027AC  06E8               	decf	wreg,f,c
 10605  0027AE  E2FC               	bc	u18431
 10606  0027B0  ECC5  F03C         	call	_isSameAddress	;wreg free
 10607  0027B4  0900               	iorlw	0
 10608  0027B6  E014               	bz	l12829
 10609                           
 10610                           ; BSR set to: 0
 10611  0027B8  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 10612  0027BC  0900               	iorlw	0
 10613  0027BE  E010               	bz	l12829
 10614                           
 10615                           ;TransportManager.c: 225: {
 10616                           ;TransportManager.c: 226: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10617  0027C0  C0C8  F083         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10618  0027C4  C0C9  F084         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10619  0027C8  C0CA  F085         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10620  0027CC  C0CB  F086         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10621  0027D0  0E01               	movlw	1
 10622  0027D2  0100               	movlb	0	; () banked
 10623  0027D4  6F87               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10624  0027D6  C0CC  F088         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10625  0027DA  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10626  0027DE  D0B6               	goto	L5
 10627  0027E0                     l12829:
 10628                           
 10629                           ;TransportManager.c: 228: {
 10630                           ;TransportManager.c: 229: res=radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)
      +                          ;
 10631  0027E0  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10632  0027E4  EE00  F09F         	lfsr	0,radioUnicast@dest
 10633  0027E8  0E07               	movlw	7
 10634  0027EA                     u18461:
 10635  0027EA  CFDB FFEB          	movff	plusw2,plusw0
 10636  0027EE  06E8               	decf	wreg,f,c
 10637  0027F0  E2FC               	bc	u18461
 10638  0027F2  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 10639  0027F6  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
 10640  0027FA  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 10641  0027FE  C0C8  F0A9         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 10642  002802  C0C9  F0AA         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 10643  002806  C0CA  F0AB         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 10644  00280A  C0CC  F0AC         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 10645  00280E  ECB4  F037         	call	_radioUnicast	;wreg free
 10646  002812  6FD0               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;TransportManager.c: 230: if(res==0)
 10650  002814  51D0               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10651  002816  E001 D0D5          	bnz	l12867
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;TransportManager.c: 231: {
 10655                           ;TransportManager.c: 232: LE_RemoveNeighborDevice(parent);
 10656  00281A  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10657  00281E  EE00  F09C         	lfsr	0,LE_RemoveNeighborDevice@device
 10658  002822  0E07               	movlw	7
 10659  002824                     u18481:
 10660  002824  CFDB FFEB          	movff	plusw2,plusw0
 10661  002828  06E8               	decf	wreg,f,c
 10662  00282A  E2FC               	bc	u18481
 10663  00282C  EC21  F035         	call	_LE_RemoveNeighborDevice	;wreg free
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;TransportManager.c: 233: if(dhdr->packettype==PacketData)
 10667  002830  EE20 F002          	lfsr	2,2
 10668  002834  51D1               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10669  002836  26D9               	addwf	fsr2l,f,c
 10670  002838  51D2               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10671  00283A  22DA               	addwfc	fsr2h,f,c
 10672  00283C  0E23               	movlw	35
 10673  00283E  18DE               	xorwf	postinc2,w,c
 10674  002840  E108               	bnz	l12839
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;TransportManager.c: 234: {
 10678                           ;TransportManager.c: 235: dhdr->packettype=PacketRoutedData;
 10679  002842  EE20 F002          	lfsr	2,2
 10680  002846  51D1               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10681  002848  26D9               	addwf	fsr2l,f,c
 10682  00284A  51D2               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10683  00284C  22DA               	addwfc	fsr2h,f,c
 10684  00284E  0E26               	movlw	38
 10685  002850  6EDF               	movwf	indf2,c
 10686  002852                     l12839:
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;TransportManager.c: 236: }
 10690                           ;TransportManager.c: 237: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10691  002852  C0C8  F083         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10692  002856  C0C9  F084         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10693  00285A  C0CA  F085         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10694  00285E  C0CB  F086         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10695  002862  0E01               	movlw	1
 10696  002864  6F87               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10697  002866  C0CC  F088         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10698  00286A  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10699  00286E  D06E               	goto	L5
 10700  002870                     l12841:
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;TransportManager.c: 241: {
 10704                           ;TransportManager.c: 242: if(dhdr->packettype==PacketData)
 10705  002870  EE20 F002          	lfsr	2,2
 10706  002874  51D1               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10707  002876  26D9               	addwf	fsr2l,f,c
 10708  002878  51D2               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10709  00287A  22DA               	addwfc	fsr2h,f,c
 10710  00287C  0E23               	movlw	35
 10711  00287E  18DE               	xorwf	postinc2,w,c
 10712  002880  E108               	bnz	l12845
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;TransportManager.c: 243: {
 10716                           ;TransportManager.c: 244: dhdr->packettype=PacketRoutedData;
 10717  002882  EE20 F002          	lfsr	2,2
 10718  002886  51D1               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10719  002888  26D9               	addwf	fsr2l,f,c
 10720  00288A  51D2               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10721  00288C  22DA               	addwfc	fsr2h,f,c
 10722  00288E  0E26               	movlw	38
 10723  002890  6EDF               	movwf	indf2,c
 10724  002892                     l12845:
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;TransportManager.c: 245: }
 10728                           ;TransportManager.c: 246: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
 10729  002892  C0C8  F083         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10730  002896  C0C9  F084         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10731  00289A  C0CA  F085         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10732  00289E  C0CB  F086         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10733  0028A2  0E01               	movlw	1
 10734  0028A4  6F87               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10735  0028A6  C0CC  F088         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10736  0028AA  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;TransportManager.c: 247: }
 10740                           ;TransportManager.c: 248: }
 10741                           ;TransportManager.c: 249: }else
 10742  0028AE  D08A               	goto	l12867
 10743  0028B0                     l12847:
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;TransportManager.c: 250: {
 10747                           ;TransportManager.c: 252: if(isSameAddress(parent,*myaddr))
 10748  0028B0  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10749  0028B4  EE00  F070         	lfsr	0,isSameAddress@a1
 10750  0028B8  0E07               	movlw	7
 10751  0028BA                     u18511:
 10752  0028BA  CFDB FFEB          	movff	plusw2,plusw0
 10753  0028BE  06E8               	decf	wreg,f,c
 10754  0028C0  E2FC               	bc	u18511
 10755  0028C2  C0CE  FFD9         	movff	TMSendFormedPacketToRFD@myaddr,fsr2l
 10756  0028C6  C0CF  FFDA         	movff	TMSendFormedPacketToRFD@myaddr+1,fsr2h
 10757  0028CA  EE00  F078         	lfsr	0,isSameAddress@a2
 10758  0028CE  0E07               	movlw	7
 10759  0028D0                     u18521:
 10760  0028D0  CFDB FFEB          	movff	plusw2,plusw0
 10761  0028D4  06E8               	decf	wreg,f,c
 10762  0028D6  E2FC               	bc	u18521
 10763  0028D8  ECC5  F03C         	call	_isSameAddress	;wreg free
 10764  0028DC  0900               	iorlw	0
 10765  0028DE  E009               	bz	l12851
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;TransportManager.c: 253: {
 10769                           ;TransportManager.c: 254: parent=device;
 10770  0028E0  EE20  F0C0         	lfsr	2,TMSendFormedPacketToRFD@device
 10771  0028E4  EE10  F0D3         	lfsr	1,TMSendFormedPacketToRFD@parent
 10772  0028E8  0E07               	movlw	7
 10773  0028EA                     u18541:
 10774  0028EA  CFDB FFE3          	movff	plusw2,plusw1
 10775  0028EE  06E8               	decf	wreg,f,c
 10776  0028F0  E2FC               	bc	u18541
 10777  0028F2                     l12851:
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;TransportManager.c: 255: }
 10781                           ;TransportManager.c: 256: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 10782  0028F2  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10783  0028F6  EE00  F070         	lfsr	0,isSameAddress@a1
 10784  0028FA  0E07               	movlw	7
 10785  0028FC                     u18551:
 10786  0028FC  CFDB FFEB          	movff	plusw2,plusw0
 10787  002900  06E8               	decf	wreg,f,c
 10788  002902  E2FC               	bc	u18551
 10789  002904  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 10790  002908  CFE9 FFD9          	movff	fsr0l,fsr2l
 10791  00290C  CFEA FFDA          	movff	fsr0h,fsr2h
 10792  002910  EE00  F078         	lfsr	0,isSameAddress@a2
 10793  002914  0E07               	movlw	7
 10794  002916                     u18561:
 10795  002916  CFDB FFEB          	movff	plusw2,plusw0
 10796  00291A  06E8               	decf	wreg,f,c
 10797  00291C  E2FC               	bc	u18561
 10798  00291E  ECC5  F03C         	call	_isSameAddress	;wreg free
 10799  002922  0900               	iorlw	0
 10800  002924  E015               	bz	l12857
 10801                           
 10802                           ; BSR set to: 0
 10803  002926  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 10804  00292A  0900               	iorlw	0
 10805  00292C  E011               	bz	l12857
 10806                           
 10807                           ;TransportManager.c: 257: {
 10808                           ;TransportManager.c: 258: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10809  00292E  C0C8  F083         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10810  002932  C0C9  F084         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10811  002936  C0CA  F085         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10812  00293A  C0CB  F086         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10813  00293E  0E01               	movlw	1
 10814  002940  0100               	movlb	0	; () banked
 10815  002942  6F87               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10816  002944  C0CC  F088         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10817  002948  EC9D  F027         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10818  00294C                     L5:
 10819  00294C  6FD0               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10820                           
 10821                           ;TransportManager.c: 259: }else
 10822  00294E  D03A               	goto	l12867
 10823  002950                     l12857:
 10824                           
 10825                           ;TransportManager.c: 260: {
 10826                           ;TransportManager.c: 261: res=radioUnicast(parent,NetworkGetPANID(),data,size,isSecure);
 10827  002950  EE20  F0D3         	lfsr	2,TMSendFormedPacketToRFD@parent
 10828  002954  EE00  F09F         	lfsr	0,radioUnicast@dest
 10829  002958  0E07               	movlw	7
 10830  00295A                     u18591:
 10831  00295A  CFDB FFEB          	movff	plusw2,plusw0
 10832  00295E  06E8               	decf	wreg,f,c
 10833  002960  E2FC               	bc	u18591
 10834  002962  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 10835  002966  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
 10836  00296A  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 10837  00296E  C0C8  F0A9         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 10838  002972  C0C9  F0AA         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 10839  002976  C0CA  F0AB         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 10840  00297A  C0CC  F0AC         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 10841  00297E  ECB4  F037         	call	_radioUnicast	;wreg free
 10842  002982  6FD0               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;TransportManager.c: 262: if(res==0)
 10846  002984  51D0               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10847  002986  E11E               	bnz	l12867
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;TransportManager.c: 263: {
 10851                           ;TransportManager.c: 264: TunnelManagerInvalidateTunnel(device);
 10852  002988  EE20  F0C0         	lfsr	2,TMSendFormedPacketToRFD@device
 10853  00298C  EE00  F080         	lfsr	0,TunnelManagerInvalidateTunnel@device
 10854  002990  0E07               	movlw	7
 10855  002992                     u18611:
 10856  002992  CFDB FFEB          	movff	plusw2,plusw0
 10857  002996  06E8               	decf	wreg,f,c
 10858  002998  E2FC               	bc	u18611
 10859  00299A  ECE5  F030         	call	_TunnelManagerInvalidateTunnel	;wreg free
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;TransportManager.c: 265: dhdr->Hops=20;
 10863  00299E  C0D1  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 10864  0029A2  C0D2  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 10865  0029A6  0E14               	movlw	20
 10866  0029A8  6EDF               	movwf	indf2,c
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;TransportManager.c: 266: BroadcastManagerDelaySend(data,size,isSecure,0);
 10870  0029AA  C0C8  F08C         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 10871  0029AE  C0C9  F08D         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 10872  0029B2  C0CA  F08E         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 10873  0029B6  C0CB  F08F         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 10874  0029BA  C0CC  F090         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 10875  0029BE  6B91               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10876  0029C0  EC3C  F023         	call	_BroadcastManagerDelaySend	;wreg free
 10877  0029C4                     l12867:
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;TransportManager.c: 267: }
 10881                           ;TransportManager.c: 268: }
 10882                           ;TransportManager.c: 269: }
 10883                           ;TransportManager.c: 270: return(res);
 10884  0029C4  51D0               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10885                           
 10886                           ; BSR set to: 0
 10887  0029C6  0012               	return		;funcret
 10888  0029C8                     __end_of_TMSendFormedPacketToRFD:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           postinc0	equ	0xFEE
 10897                           plusw0	equ	0xFEB
 10898                           fsr0h	equ	0xFEA
 10899                           fsr0l	equ	0xFE9
 10900                           wreg	equ	0xFE8
 10901                           indf1	equ	0xFE7
 10902                           postdec1	equ	0xFE5
 10903                           plusw1	equ	0xFE3
 10904                           fsr1h	equ	0xFE2
 10905                           fsr1l	equ	0xFE1
 10906                           indf2	equ	0xFDF
 10907                           postinc2	equ	0xFDE
 10908                           postdec2	equ	0xFDD
 10909                           plusw2	equ	0xFDB
 10910                           fsr2h	equ	0xFDA
 10911                           fsr2l	equ	0xFD9
 10912                           status	equ	0xFD8
 10913                           
 10914 ;; *************** function _TunnelManagerInvalidateTunnel *****************
 10915 ;; Defined at:
 10916 ;;		line 96 in file "../TunnelManager.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  device          8   32[BANK0 ] struct addr_t_def
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;  addr            8   42[BANK0 ] struct addr_t_def
 10921 ;;  i               2   50[BANK0 ] unsigned int 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : F/0
 10928 ;;		On exit  : F/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10931 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10932 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;Total ram usage:       20 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    6
 10938 ;; This function calls:
 10939 ;;		_NetworkAddressSizeGet
 10940 ;;		_isSameAddress
 10941 ;;		_memcpy
 10942 ;;		_memset
 10943 ;; This function is called by:
 10944 ;;		_radioReceivedPacket
 10945 ;;		_TMSendFormedPacketToRFD
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           	psect	text28
 10950  0061CA                     __ptext28:
 10951                           	opt stack 0
 10952  0061CA                     _TunnelManagerInvalidateTunnel:
 10953                           	opt stack 20
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;TunnelManager.c: 98: uint16_t i;
 10957                           ;TunnelManager.c: 99: addr_t addr;
 10958                           ;TunnelManager.c: 101: memcpy((uint8_t*)&addr,&device,NetworkAddressSizeGet());
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;incstack = 0
 10962  0061CA  0E8A               	movlw	low TunnelManagerInvalidateTunnel@addr
 10963  0061CC  6F62               	movwf	memcpy@d1& (0+255),b
 10964  0061CE  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 10965  0061D0  0E80               	movlw	low TunnelManagerInvalidateTunnel@device
 10966  0061D2  6F64               	movwf	memcpy@s1& (0+255),b
 10967  0061D4  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 10968  0061D6  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 10969  0061DA  6F66               	movwf	memcpy@n& (0+255),b
 10970  0061DC  6B67               	clrf	(memcpy@n+1)& (0+255),b
 10971  0061DE  ECFA  F03A         	call	_memcpy	;wreg free
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;TunnelManager.c: 103: for(i=0;i<10;i++)
 10975  0061E2  6B92               	clrf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10976  0061E4  6B93               	clrf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10977  0061E6                     l12461:
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;TunnelManager.c: 104: {
 10981                           ;TunnelManager.c: 105: if(isSameAddress(addr,tunnels[i].devAddress)==1)
 10982  0061E6  EE20  F08A         	lfsr	2,TunnelManagerInvalidateTunnel@addr
 10983  0061EA  EE00  F070         	lfsr	0,isSameAddress@a1
 10984  0061EE  0E07               	movlw	7
 10985  0061F0                     u17811:
 10986  0061F0  CFDB FFEB          	movff	plusw2,plusw0
 10987  0061F4  06E8               	decf	wreg,f,c
 10988  0061F6  E2FC               	bc	u17811
 10989  0061F8  0E18               	movlw	24
 10990  0061FA  0392               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 10991  0061FC  CFF3 F088          	movff	prodl,??_TunnelManagerInvalidateTunnel
 10992  006200  CFF4 F089          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 10993  006204  0393               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 10994  006206  50F3               	movf	prodl,w,c
 10995  006208  2789               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 10996  00620A  0E08               	movlw	low (_tunnels+8)
 10997  00620C  2588               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 10998  00620E  6ED9               	movwf	fsr2l,c
 10999  006210  0E06               	movlw	high (_tunnels+8)
 11000  006212  2189               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 11001  006214  6EDA               	movwf	fsr2h,c
 11002  006216  EE00  F078         	lfsr	0,isSameAddress@a2
 11003  00621A  0E07               	movlw	7
 11004  00621C                     u17821:
 11005  00621C  CFDB FFEB          	movff	plusw2,plusw0
 11006  006220  06E8               	decf	wreg,f,c
 11007  006222  E2FC               	bc	u17821
 11008  006224  ECC5  F03C         	call	_isSameAddress	;wreg free
 11009  006228  06E8               	decf	wreg,f,c
 11010  00622A  E116               	bnz	l12465
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;TunnelManager.c: 106: {
 11014                           ;TunnelManager.c: 107: memset(&tunnels[i].TxTime,0x00,sizeof(TickMS));
 11015  00622C  0E18               	movlw	24
 11016  00622E  0392               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 11017  006230  CFF3 F088          	movff	prodl,??_TunnelManagerInvalidateTunnel
 11018  006234  CFF4 F089          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 11019  006238  0393               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 11020  00623A  50F3               	movf	prodl,w,c
 11021  00623C  2789               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 11022  00623E  0E00               	movlw	low _tunnels
 11023  006240  2588               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 11024  006242  6F60               	movwf	memset@p1& (0+255),b
 11025  006244  0E06               	movlw	high _tunnels
 11026  006246  2189               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 11027  006248  6F61               	movwf	(memset@p1+1)& (0+255),b
 11028  00624A  6B63               	clrf	(memset@c+1)& (0+255),b
 11029  00624C  6B62               	clrf	memset@c& (0+255),b
 11030  00624E  6B65               	clrf	(memset@n+1)& (0+255),b
 11031  006250  0E08               	movlw	8
 11032  006252  6F64               	movwf	memset@n& (0+255),b
 11033  006254  EC61  F03C         	call	_memset	;wreg free
 11034  006258                     l12465:
 11035                           
 11036                           ; BSR set to: 0
 11037  006258  4B92               	infsnz	TunnelManagerInvalidateTunnel@i& (0+255),f,b
 11038  00625A  2B93               	incf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),f,b
 11039                           
 11040                           ; BSR set to: 0
 11041  00625C  5193               	movf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),w,b
 11042  00625E  E103               	bnz	u17840
 11043  006260  0E0A               	movlw	10
 11044  006262  5D92               	subwf	TunnelManagerInvalidateTunnel@i& (0+255),w,b
 11045  006264  E3C0               	bnc	l12461
 11046  006266                     u17840:
 11047                           
 11048                           ; BSR set to: 0
 11049  006266  0012               	return		;funcret
 11050  006268                     __end_of_TunnelManagerInvalidateTunnel:
 11051                           	opt stack 0
 11052                           tblptru	equ	0xFF8
 11053                           tblptrh	equ	0xFF7
 11054                           tblptrl	equ	0xFF6
 11055                           tablat	equ	0xFF5
 11056                           prodh	equ	0xFF4
 11057                           prodl	equ	0xFF3
 11058                           postinc0	equ	0xFEE
 11059                           plusw0	equ	0xFEB
 11060                           fsr0h	equ	0xFEA
 11061                           fsr0l	equ	0xFE9
 11062                           wreg	equ	0xFE8
 11063                           indf1	equ	0xFE7
 11064                           postdec1	equ	0xFE5
 11065                           plusw1	equ	0xFE3
 11066                           fsr1h	equ	0xFE2
 11067                           fsr1l	equ	0xFE1
 11068                           indf2	equ	0xFDF
 11069                           postinc2	equ	0xFDE
 11070                           postdec2	equ	0xFDD
 11071                           plusw2	equ	0xFDB
 11072                           fsr2h	equ	0xFDA
 11073                           fsr2l	equ	0xFD9
 11074                           status	equ	0xFD8
 11075                           
 11076 ;; *************** function _TunnelManagerGetTunnel *****************
 11077 ;; Defined at:
 11078 ;;		line 70 in file "../TunnelManager.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  device          8   56[BANK0 ] struct addr_t_def
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;  retAddr         8   86[BANK0 ] struct addr_t_def
 11083 ;;  addr            8   78[BANK0 ] struct addr_t_def
 11084 ;;  trec            8   70[BANK0 ] struct TickMS_t_def
 11085 ;;  i               2   94[BANK0 ] unsigned int 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  8   56[BANK0 ] struct addr_t_def
 11088 ;; Registers used:
 11089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : F/0
 11092 ;;		On exit  : F/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11095 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11096 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11097 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11098 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11099 ;;Total ram usage:       40 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:    8
 11102 ;; This function calls:
 11103 ;;		_MSTickGetDiffNow
 11104 ;;		_NetworkAddressSizeGet
 11105 ;;		_isSameAddress
 11106 ;;		_memcpy
 11107 ;;		_memset
 11108 ;; This function is called by:
 11109 ;;		_radioReceivedPacket
 11110 ;;		_TMSendFormedPacketToRFD
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114                           	psect	text29
 11115  004AFC                     __ptext29:
 11116                           	opt stack 0
 11117  004AFC                     _TunnelManagerGetTunnel:
 11118                           	opt stack 18
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;TunnelManager.c: 72: addr_t retAddr;
 11122                           ;TunnelManager.c: 73: uint16_t i;
 11123                           ;TunnelManager.c: 74: TickMS trec;
 11124                           ;TunnelManager.c: 75: addr_t addr;
 11125                           ;TunnelManager.c: 77: memset(&retAddr,0xff,sizeof(retAddr));
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;incstack = 0
 11129  004AFC  0EB6               	movlw	low TunnelManagerGetTunnel@retAddr
 11130  004AFE  6F60               	movwf	memset@p1& (0+255),b
 11131  004B00  6B61               	clrf	(memset@p1+1)& (0+255),b
 11132  004B02  6B63               	clrf	(memset@c+1)& (0+255),b
 11133  004B04  6962               	setf	memset@c& (0+255),b
 11134  004B06  6B65               	clrf	(memset@n+1)& (0+255),b
 11135  004B08  0E08               	movlw	8
 11136  004B0A  6F64               	movwf	memset@n& (0+255),b
 11137  004B0C  EC61  F03C         	call	_memset	;wreg free
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;TunnelManager.c: 78: memcpy((uint8_t*)&addr,(uint8_t*)&device,NetworkAddressSizeGet());
 11141  004B10  0EAE               	movlw	low TunnelManagerGetTunnel@addr
 11142  004B12  6F62               	movwf	memcpy@d1& (0+255),b
 11143  004B14  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 11144  004B16  0E98               	movlw	low TunnelManagerGetTunnel@device
 11145  004B18  6F64               	movwf	memcpy@s1& (0+255),b
 11146  004B1A  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 11147  004B1C  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 11148  004B20  6F66               	movwf	memcpy@n& (0+255),b
 11149  004B22  6B67               	clrf	(memcpy@n+1)& (0+255),b
 11150  004B24  ECFA  F03A         	call	_memcpy	;wreg free
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;TunnelManager.c: 80: for(i=0;i<10;i++)
 11154  004B28  6BBE               	clrf	TunnelManagerGetTunnel@i& (0+255),b
 11155  004B2A  6BBF               	clrf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11156  004B2C                     l12407:
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;TunnelManager.c: 81: {
 11160                           ;TunnelManager.c: 82: if((isSameAddress(addr,tunnels[i].devAddress)==1) && (((tunnels[i]
      +                          .TxTime.msb==0) && (tunnels[i].TxTime.lsb==0))==0))
 11161  004B2C  EE20  F0AE         	lfsr	2,TunnelManagerGetTunnel@addr
 11162  004B30  EE00  F070         	lfsr	0,isSameAddress@a1
 11163  004B34  0E07               	movlw	7
 11164  004B36                     u17601:
 11165  004B36  CFDB FFEB          	movff	plusw2,plusw0
 11166  004B3A  06E8               	decf	wreg,f,c
 11167  004B3C  E2FC               	bc	u17601
 11168  004B3E  0E18               	movlw	24
 11169  004B40  03BE               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11170  004B42  CFF3 F0A0          	movff	prodl,??_TunnelManagerGetTunnel
 11171  004B46  CFF4 F0A1          	movff	prodh,??_TunnelManagerGetTunnel+1
 11172  004B4A  03BF               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11173  004B4C  50F3               	movf	prodl,w,c
 11174  004B4E  27A1               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11175  004B50  0E08               	movlw	low (_tunnels+8)
 11176  004B52  25A0               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11177  004B54  6ED9               	movwf	fsr2l,c
 11178  004B56  0E06               	movlw	high (_tunnels+8)
 11179  004B58  21A1               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11180  004B5A  6EDA               	movwf	fsr2h,c
 11181  004B5C  EE00  F078         	lfsr	0,isSameAddress@a2
 11182  004B60  0E07               	movlw	7
 11183  004B62                     u17611:
 11184  004B62  CFDB FFEB          	movff	plusw2,plusw0
 11185  004B66  06E8               	decf	wreg,f,c
 11186  004B68  E2FC               	bc	u17611
 11187  004B6A  ECC5  F03C         	call	_isSameAddress	;wreg free
 11188  004B6E  06E8               	decf	wreg,f,c
 11189  004B70  E16B               	bnz	l12419
 11190                           
 11191                           ; BSR set to: 0
 11192  004B72  0E18               	movlw	24
 11193  004B74  03BE               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11194  004B76  CFF3 F0A0          	movff	prodl,??_TunnelManagerGetTunnel
 11195  004B7A  CFF4 F0A1          	movff	prodh,??_TunnelManagerGetTunnel+1
 11196  004B7E  03BF               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11197  004B80  50F3               	movf	prodl,w,c
 11198  004B82  27A1               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11199  004B84  0E04               	movlw	low (_tunnels+4)
 11200  004B86  25A0               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11201  004B88  6ED9               	movwf	fsr2l,c
 11202  004B8A  0E06               	movlw	high (_tunnels+4)
 11203  004B8C  21A1               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11204  004B8E  6EDA               	movwf	fsr2h,c
 11205  004B90  50DE               	movf	postinc2,w,c
 11206  004B92  10DE               	iorwf	postinc2,w,c
 11207  004B94  10DE               	iorwf	postinc2,w,c
 11208  004B96  10DE               	iorwf	postinc2,w,c
 11209  004B98  E114               	bnz	l12413
 11210                           
 11211                           ; BSR set to: 0
 11212  004B9A  0E18               	movlw	24
 11213  004B9C  03BE               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11214  004B9E  CFF3 F0A0          	movff	prodl,??_TunnelManagerGetTunnel
 11215  004BA2  CFF4 F0A1          	movff	prodh,??_TunnelManagerGetTunnel+1
 11216  004BA6  03BF               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11217  004BA8  50F3               	movf	prodl,w,c
 11218  004BAA  27A1               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11219  004BAC  0E00               	movlw	low _tunnels
 11220  004BAE  25A0               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11221  004BB0  6ED9               	movwf	fsr2l,c
 11222  004BB2  0E06               	movlw	high _tunnels
 11223  004BB4  21A1               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11224  004BB6  6EDA               	movwf	fsr2h,c
 11225  004BB8  50DE               	movf	postinc2,w,c
 11226  004BBA  10DE               	iorwf	postinc2,w,c
 11227  004BBC  10DE               	iorwf	postinc2,w,c
 11228  004BBE  10DE               	iorwf	postinc2,w,c
 11229  004BC0  E043               	bz	l12419
 11230  004BC2                     l12413:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;TunnelManager.c: 83: {
 11234                           ;TunnelManager.c: 84: trec=tunnels[i].TxTime;
 11235  004BC2  0E18               	movlw	24
 11236  004BC4  03BE               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11237  004BC6  CFF3 F0A0          	movff	prodl,??_TunnelManagerGetTunnel
 11238  004BCA  CFF4 F0A1          	movff	prodh,??_TunnelManagerGetTunnel+1
 11239  004BCE  03BF               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11240  004BD0  50F3               	movf	prodl,w,c
 11241  004BD2  27A1               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11242  004BD4  0E00               	movlw	low _tunnels
 11243  004BD6  25A0               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11244  004BD8  6ED9               	movwf	fsr2l,c
 11245  004BDA  0E06               	movlw	high _tunnels
 11246  004BDC  21A1               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11247  004BDE  6EDA               	movwf	fsr2h,c
 11248  004BE0  EE10  F0A6         	lfsr	1,TunnelManagerGetTunnel@trec
 11249  004BE4  0E07               	movlw	7
 11250  004BE6                     u17651:
 11251  004BE6  CFDB FFE3          	movff	plusw2,plusw1
 11252  004BEA  06E8               	decf	wreg,f,c
 11253  004BEC  E2FC               	bc	u17651
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;TunnelManager.c: 86: if(MSTickGetDiffNow(trec)<tmTimeout)
 11257  004BEE  EE20  F0A6         	lfsr	2,TunnelManagerGetTunnel@trec
 11258  004BF2  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 11259  004BF6  0E07               	movlw	7
 11260  004BF8                     u17661:
 11261  004BF8  CFDB FFEB          	movff	plusw2,plusw0
 11262  004BFC  06E8               	decf	wreg,f,c
 11263  004BFE  E2FC               	bc	u17661
 11264  004C00  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 11265  004C04  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 11266  004C06  E120               	bnz	l12419
 11267  004C08  0E60               	movlw	96
 11268  004C0A  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 11269  004C0C  0E5B               	movlw	91
 11270  004C0E  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 11271  004C10  0E03               	movlw	3
 11272  004C12  597E               	subwfb	(?_MSTickGetDiffNow+2)& (0+255),w,b
 11273  004C14  E219               	bc	l12419
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;TunnelManager.c: 87: {
 11277                           ;TunnelManager.c: 88: memcpy((uint8_t*)&retAddr,(uint8_t*)&tunnels[i].parent,NetworkAddr
      +                          essSizeGet());
 11278  004C16  0EB6               	movlw	low TunnelManagerGetTunnel@retAddr
 11279  004C18  6F62               	movwf	memcpy@d1& (0+255),b
 11280  004C1A  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 11281  004C1C  0E18               	movlw	24
 11282  004C1E  03BE               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11283  004C20  CFF3 F0A0          	movff	prodl,??_TunnelManagerGetTunnel
 11284  004C24  CFF4 F0A1          	movff	prodh,??_TunnelManagerGetTunnel+1
 11285  004C28  03BF               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11286  004C2A  50F3               	movf	prodl,w,c
 11287  004C2C  27A1               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11288  004C2E  0E10               	movlw	low (_tunnels+16)
 11289  004C30  25A0               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11290  004C32  6F64               	movwf	memcpy@s1& (0+255),b
 11291  004C34  0E06               	movlw	high (_tunnels+16)
 11292  004C36  21A1               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11293  004C38  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 11294  004C3A  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 11295  004C3E  6F66               	movwf	memcpy@n& (0+255),b
 11296  004C40  6B67               	clrf	(memcpy@n+1)& (0+255),b
 11297  004C42  ECFA  F03A         	call	_memcpy	;wreg free
 11298                           
 11299                           ;TunnelManager.c: 89: break;
 11300  004C46  D008               	goto	l12423
 11301  004C48                     l12419:
 11302                           
 11303                           ; BSR set to: 0
 11304  004C48  4BBE               	infsnz	TunnelManagerGetTunnel@i& (0+255),f,b
 11305  004C4A  2BBF               	incf	(TunnelManagerGetTunnel@i+1)& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 0
 11308  004C4C  51BF               	movf	(TunnelManagerGetTunnel@i+1)& (0+255),w,b
 11309  004C4E  E104               	bnz	u17680
 11310  004C50  0E0A               	movlw	10
 11311  004C52  5DBE               	subwf	TunnelManagerGetTunnel@i& (0+255),w,b
 11312  004C54  E201 D76A          	bnc	l12407
 11313  004C58                     u17680:
 11314  004C58                     l12423:
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;TunnelManager.c: 90: }
 11318                           ;TunnelManager.c: 91: }
 11319                           ;TunnelManager.c: 92: }
 11320                           ;TunnelManager.c: 93: return(retAddr);
 11321  004C58  EE20  F0B6         	lfsr	2,TunnelManagerGetTunnel@retAddr
 11322  004C5C  EE00  F098         	lfsr	0,?_TunnelManagerGetTunnel
 11323  004C60  0E07               	movlw	7
 11324  004C62                     u17691:
 11325  004C62  CFDB FFEB          	movff	plusw2,plusw0
 11326  004C66  06E8               	decf	wreg,f,c
 11327  004C68  E2FC               	bc	u17691
 11328                           
 11329                           ; BSR set to: 0
 11330  004C6A  0012               	return		;funcret
 11331  004C6C                     __end_of_TunnelManagerGetTunnel:
 11332                           	opt stack 0
 11333                           tblptru	equ	0xFF8
 11334                           tblptrh	equ	0xFF7
 11335                           tblptrl	equ	0xFF6
 11336                           tablat	equ	0xFF5
 11337                           prodh	equ	0xFF4
 11338                           prodl	equ	0xFF3
 11339                           postinc0	equ	0xFEE
 11340                           plusw0	equ	0xFEB
 11341                           fsr0h	equ	0xFEA
 11342                           fsr0l	equ	0xFE9
 11343                           wreg	equ	0xFE8
 11344                           indf1	equ	0xFE7
 11345                           postdec1	equ	0xFE5
 11346                           plusw1	equ	0xFE3
 11347                           fsr1h	equ	0xFE2
 11348                           fsr1l	equ	0xFE1
 11349                           indf2	equ	0xFDF
 11350                           postinc2	equ	0xFDE
 11351                           postdec2	equ	0xFDD
 11352                           plusw2	equ	0xFDB
 11353                           fsr2h	equ	0xFDA
 11354                           fsr2l	equ	0xFD9
 11355                           status	equ	0xFD8
 11356                           
 11357 ;; *************** function _TMSendFormedPacketTowardsCoordinator *****************
 11358 ;; Defined at:
 11359 ;;		line 151 in file "../TransportManager.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  data            2   35[BANK0 ] PTR unsigned char 
 11362 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), RxBuffer.Payload(127), RxBuffer(256)
      +, 
 11363 ;;		 -> TxBuffer(64), 
 11364 ;;  size            2   37[BANK0 ] unsigned int 
 11365 ;;  isFormed        1   39[BANK0 ] unsigned char 
 11366 ;;  isSecure        1   40[BANK0 ] unsigned char 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  i               2   44[BANK0 ] unsigned int 
 11369 ;;  res             1   43[BANK0 ] unsigned char 
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      unsigned char 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : F/0
 11376 ;;		On exit  : F/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11379 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11380 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11383 ;;Total ram usage:       11 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    8
 11386 ;; This function calls:
 11387 ;;		_NetworkHasRoute
 11388 ;;		_memcpy
 11389 ;; This function is called by:
 11390 ;;		_radioReceivedPacket
 11391 ;;		_NetworkUnicastData
 11392 ;;		_TMSendFormedPacketToRFD
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text30
 11397  004F3A                     __ptext30:
 11398                           	opt stack 0
 11399  004F3A                     _TMSendFormedPacketTowardsCoordinator:
 11400                           	opt stack 20
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;TransportManager.c: 153: bool res=0;
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;incstack = 0
 11407  004F3A  6B8B               	clrf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;TransportManager.c: 154: uint16_t i;
 11411                           ;TransportManager.c: 155: if(size>64-1)
 11412  004F3C  5186               	movf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),w,b
 11413  004F3E  E103               	bnz	u17530
 11414  004F40  0E40               	movlw	64
 11415  004F42  5D85               	subwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),w,b
 11416  004F44  E303               	bnc	l12361
 11417  004F46                     u17530:
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;TransportManager.c: 156: {
 11421                           ;TransportManager.c: 157: size=64-1;
 11422  004F46  6B86               	clrf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),b
 11423  004F48  0E3F               	movlw	63
 11424  004F4A  6F85               	movwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),b
 11425  004F4C                     l12361:
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;TransportManager.c: 158: }
 11429                           ;TransportManager.c: 160: for(i=0;i<2;i++)
 11430  004F4C  6B8C               	clrf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11431  004F4E  6B8D               	clrf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11432  004F50                     l12367:
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;TransportManager.c: 161: {
 11436                           ;TransportManager.c: 162: if(TMQ[i].TMQState==TMQIdle)
 11437  004F50  0E4C               	movlw	76
 11438  004F52  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11439  004F54  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11440  004F58  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11441  004F5C  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11442  004F5E  50F3               	movf	prodl,w,c
 11443  004F60  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11444  004F62  0E4B               	movlw	low (_TMQ+75)
 11445  004F64  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11446  004F66  6ED9               	movwf	fsr2l,c
 11447  004F68  0E05               	movlw	high (_TMQ+75)
 11448  004F6A  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11449  004F6C  6EDA               	movwf	fsr2h,c
 11450  004F6E  50DF               	movf	indf2,w,c
 11451  004F70  E007               	bz	l12375
 11452                           
 11453                           ; BSR set to: 0
 11454  004F72  4B8C               	infsnz	TMSendFormedPacketTowardsCoordinator@i& (0+255),f,b
 11455  004F74  2B8D               	incf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),f,b
 11456                           
 11457                           ; BSR set to: 0
 11458  004F76  518D               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 11459  004F78  E103               	bnz	u17550
 11460  004F7A  0E02               	movlw	2
 11461  004F7C  5D8C               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 11462  004F7E  E3E8               	bnc	l12367
 11463  004F80                     u17550:
 11464  004F80                     l12375:
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;TransportManager.c: 165: }
 11468                           ;TransportManager.c: 166: }
 11469                           ;TransportManager.c: 167: if( (i<2) && (NetworkHasRoute()==1) )
 11470  004F80  518D               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 11471  004F82  E17E               	bnz	l12393
 11472  004F84  0E02               	movlw	2
 11473  004F86  5D8C               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 11474  004F88  E27B               	bc	l12393
 11475                           
 11476                           ; BSR set to: 0
 11477  004F8A  EC7A  F03A         	call	_NetworkHasRoute	;wreg free
 11478  004F8E  06E8               	decf	wreg,f,c
 11479  004F90  E177               	bnz	l12393
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;TransportManager.c: 168: {
 11483                           ;TransportManager.c: 169: memcpy(TMQ[i].data,data,size);
 11484  004F92  0E4C               	movlw	76
 11485  004F94  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11486  004F96  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11487  004F9A  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11488  004F9E  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11489  004FA0  50F3               	movf	prodl,w,c
 11490  004FA2  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11491  004FA4  0E00               	movlw	low _TMQ
 11492  004FA6  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11493  004FA8  6F62               	movwf	memcpy@d1& (0+255),b
 11494  004FAA  0E05               	movlw	high _TMQ
 11495  004FAC  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11496  004FAE  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 11497  004FB0  C083  F064         	movff	TMSendFormedPacketTowardsCoordinator@data,memcpy@s1
 11498  004FB4  C084  F065         	movff	TMSendFormedPacketTowardsCoordinator@data+1,memcpy@s1+1
 11499  004FB8  C085  F066         	movff	TMSendFormedPacketTowardsCoordinator@size,memcpy@n
 11500  004FBC  C086  F067         	movff	TMSendFormedPacketTowardsCoordinator@size+1,memcpy@n+1
 11501  004FC0  ECFA  F03A         	call	_memcpy	;wreg free
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;TransportManager.c: 170: TMQ[i].datasize=size;
 11505  004FC4  0E4C               	movlw	76
 11506  004FC6  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11507  004FC8  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11508  004FCC  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11509  004FD0  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11510  004FD2  50F3               	movf	prodl,w,c
 11511  004FD4  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11512  004FD6  0E40               	movlw	low (_TMQ+64)
 11513  004FD8  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11514  004FDA  6ED9               	movwf	fsr2l,c
 11515  004FDC  0E05               	movlw	high (_TMQ+64)
 11516  004FDE  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11517  004FE0  6EDA               	movwf	fsr2h,c
 11518  004FE2  C085  FFDF         	movff	TMSendFormedPacketTowardsCoordinator@size,indf2
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;TransportManager.c: 171: TMQ[i].retryCount=0;
 11522  004FE6  0E4C               	movlw	76
 11523  004FE8  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11524  004FEA  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11525  004FEE  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11526  004FF2  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11527  004FF4  50F3               	movf	prodl,w,c
 11528  004FF6  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11529  004FF8  0E49               	movlw	low (_TMQ+73)
 11530  004FFA  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11531  004FFC  6ED9               	movwf	fsr2l,c
 11532  004FFE  0E05               	movlw	high (_TMQ+73)
 11533  005000  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11534  005002  6EDA               	movwf	fsr2h,c
 11535  005004  6ADF               	clrf	indf2,c
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;TransportManager.c: 172: TMQ[i].TMQState=TMQSend;
 11539  005006  0E4C               	movlw	76
 11540  005008  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11541  00500A  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11542  00500E  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11543  005012  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11544  005014  50F3               	movf	prodl,w,c
 11545  005016  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11546  005018  0E4B               	movlw	low (_TMQ+75)
 11547  00501A  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11548  00501C  6ED9               	movwf	fsr2l,c
 11549  00501E  0E05               	movlw	high (_TMQ+75)
 11550  005020  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11551  005022  6EDA               	movwf	fsr2h,c
 11552  005024  0E01               	movlw	1
 11553  005026  6EDF               	movwf	indf2,c
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;TransportManager.c: 173: TMQ[i].flags.isFormedPacket=isFormed;
 11557  005028  0E4C               	movlw	76
 11558  00502A  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11559  00502C  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11560  005030  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11561  005034  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11562  005036  50F3               	movf	prodl,w,c
 11563  005038  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11564  00503A  0E4A               	movlw	low (_TMQ+74)
 11565  00503C  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11566  00503E  6ED9               	movwf	fsr2l,c
 11567  005040  0E05               	movlw	high (_TMQ+74)
 11568  005042  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11569  005044  6EDA               	movwf	fsr2h,c
 11570  005046  B187               	btfsc	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),0,b
 11571  005048  D002               	bra	u17585
 11572  00504A  90DF               	bcf	indf2,0,c
 11573  00504C  D001               	bra	u17586
 11574  00504E                     u17585:
 11575  00504E  80DF               	bsf	indf2,0,c
 11576  005050                     u17586:
 11577                           
 11578                           ; BSR set to: 5
 11579                           ;TransportManager.c: 174: TMQ[i].flags.isSecure=isSecure;
 11580  005050  0E4C               	movlw	76
 11581  005052  0100               	movlb	0	; () banked
 11582  005054  038C               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11583  005056  CFF3 F089          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11584  00505A  CFF4 F08A          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11585  00505E  038D               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11586  005060  50F3               	movf	prodl,w,c
 11587  005062  278A               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11588  005064  0E4A               	movlw	low (_TMQ+74)
 11589  005066  2589               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11590  005068  6ED9               	movwf	fsr2l,c
 11591  00506A  0E05               	movlw	high (_TMQ+74)
 11592  00506C  218A               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11593  00506E  6EDA               	movwf	fsr2h,c
 11594  005070  B188               	btfsc	TMSendFormedPacketTowardsCoordinator@isSecure& (0+255),0,b
 11595  005072  D002               	bra	u17595
 11596  005074  92DF               	bcf	indf2,1,c
 11597  005076  D001               	bra	u17596
 11598  005078                     u17595:
 11599  005078  82DF               	bsf	indf2,1,c
 11600  00507A                     u17596:
 11601                           
 11602                           ; BSR set to: 5
 11603                           ;TransportManager.c: 175: res=1;
 11604  00507A  0E01               	movlw	1
 11605  00507C  0100               	movlb	0	; () banked
 11606  00507E  6F8B               	movwf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 11607  005080                     l12393:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;TransportManager.c: 176: }
 11611                           ;TransportManager.c: 177: return(res);
 11612  005080  518B               	movf	TMSendFormedPacketTowardsCoordinator@res& (0+255),w,b
 11613                           
 11614                           ; BSR set to: 0
 11615  005082  0012               	return		;funcret
 11616  005084                     __end_of_TMSendFormedPacketTowardsCoordinator:
 11617                           	opt stack 0
 11618                           tblptru	equ	0xFF8
 11619                           tblptrh	equ	0xFF7
 11620                           tblptrl	equ	0xFF6
 11621                           tablat	equ	0xFF5
 11622                           prodh	equ	0xFF4
 11623                           prodl	equ	0xFF3
 11624                           postinc0	equ	0xFEE
 11625                           plusw0	equ	0xFEB
 11626                           fsr0h	equ	0xFEA
 11627                           fsr0l	equ	0xFE9
 11628                           wreg	equ	0xFE8
 11629                           indf1	equ	0xFE7
 11630                           postdec1	equ	0xFE5
 11631                           plusw1	equ	0xFE3
 11632                           fsr1h	equ	0xFE2
 11633                           fsr1l	equ	0xFE1
 11634                           indf2	equ	0xFDF
 11635                           postinc2	equ	0xFDE
 11636                           postdec2	equ	0xFDD
 11637                           plusw2	equ	0xFDB
 11638                           fsr2h	equ	0xFDA
 11639                           fsr2l	equ	0xFD9
 11640                           status	equ	0xFD8
 11641                           
 11642 ;; *************** function _LE_RemoveNeighborDevice *****************
 11643 ;; Defined at:
 11644 ;;		line 519 in file "../LinkEstimator.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  device          8   60[BANK0 ] struct addr_t_def
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  i               2   70[BANK0 ] unsigned int 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11653 ;; Tracked objects:
 11654 ;;		On entry : F/0
 11655 ;;		On exit  : F/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;Total ram usage:       12 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    9
 11665 ;; This function calls:
 11666 ;;		_RouterEvicted
 11667 ;;		_le_findIdx
 11668 ;; This function is called by:
 11669 ;;		_radioReceivedPacket
 11670 ;;		_TMSendFormedPacketToRFD
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           	psect	text31
 11675  006A42                     __ptext31:
 11676                           	opt stack 0
 11677  006A42                     _LE_RemoveNeighborDevice:
 11678                           	opt stack 17
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;LinkEstimator.c: 521: uint16_t i=le_findIdx(device);
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;incstack = 0
 11685  006A42  EE20  F09C         	lfsr	2,LE_RemoveNeighborDevice@device
 11686  006A46  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 11687  006A4A  0E07               	movlw	7
 11688  006A4C                     u17781:
 11689  006A4C  CFDB FFEB          	movff	plusw2,plusw0
 11690  006A50  06E8               	decf	wreg,f,c
 11691  006A52  E2FC               	bc	u17781
 11692  006A54  EC63  F036         	call	_le_findIdx	;wreg free
 11693  006A58  6FA6               	movwf	LE_RemoveNeighborDevice@i& (0+255),b
 11694  006A5A  6BA7               	clrf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;LinkEstimator.c: 522: if(i != 0xff)
 11698  006A5C  29A6               	incf	LE_RemoveNeighborDevice@i& (0+255),w,b
 11699  006A5E  11A7               	iorwf	(LE_RemoveNeighborDevice@i+1)& (0+255),w,b
 11700  006A60  B4D8               	btfsc	status,2,c
 11701  006A62  0012               	return	
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;LinkEstimator.c: 523: {
 11705                           ;LinkEstimator.c: 524: RouterEvicted(neighbor_tbl[i].ll_addr);
 11706  006A64  0E11               	movlw	17
 11707  006A66  03A6               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11708  006A68  CFF3 F0A4          	movff	prodl,??_LE_RemoveNeighborDevice
 11709  006A6C  CFF4 F0A5          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11710  006A70  03A7               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11711  006A72  50F3               	movf	prodl,w,c
 11712  006A74  27A5               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11713  006A76  0E4A               	movlw	low _neighbor_tbl
 11714  006A78  25A4               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11715  006A7A  6ED9               	movwf	fsr2l,c
 11716  006A7C  0E0D               	movlw	high _neighbor_tbl
 11717  006A7E  21A5               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11718  006A80  6EDA               	movwf	fsr2h,c
 11719  006A82  EE00  F08E         	lfsr	0,RouterEvicted@address
 11720  006A86  0E07               	movlw	7
 11721  006A88                     u17801:
 11722  006A88  CFDB FFEB          	movff	plusw2,plusw0
 11723  006A8C  06E8               	decf	wreg,f,c
 11724  006A8E  E2FC               	bc	u17801
 11725  006A90  ECE0  F02E         	call	_RouterEvicted	;wreg free
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;LinkEstimator.c: 525: neighbor_tbl[i].flags=0;
 11729  006A94  0E11               	movlw	17
 11730  006A96  03A6               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11731  006A98  CFF3 F0A4          	movff	prodl,??_LE_RemoveNeighborDevice
 11732  006A9C  CFF4 F0A5          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11733  006AA0  03A7               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11734  006AA2  50F3               	movf	prodl,w,c
 11735  006AA4  27A5               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11736  006AA6  0E55               	movlw	low (_neighbor_tbl+11)
 11737  006AA8  25A4               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11738  006AAA  6ED9               	movwf	fsr2l,c
 11739  006AAC  0E0D               	movlw	high (_neighbor_tbl+11)
 11740  006AAE  21A5               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11741  006AB0  6EDA               	movwf	fsr2h,c
 11742  006AB2  6ADF               	clrf	indf2,c
 11743                           
 11744                           ; BSR set to: 0
 11745  006AB4  0C00               	retlw	0	;funcret
 11746  006AB6                     __end_of_LE_RemoveNeighborDevice:
 11747                           	opt stack 0
 11748                           tblptru	equ	0xFF8
 11749                           tblptrh	equ	0xFF7
 11750                           tblptrl	equ	0xFF6
 11751                           tablat	equ	0xFF5
 11752                           prodh	equ	0xFF4
 11753                           prodl	equ	0xFF3
 11754                           postinc0	equ	0xFEE
 11755                           plusw0	equ	0xFEB
 11756                           fsr0h	equ	0xFEA
 11757                           fsr0l	equ	0xFE9
 11758                           wreg	equ	0xFE8
 11759                           indf1	equ	0xFE7
 11760                           postdec1	equ	0xFE5
 11761                           plusw1	equ	0xFE3
 11762                           fsr1h	equ	0xFE2
 11763                           fsr1l	equ	0xFE1
 11764                           indf2	equ	0xFDF
 11765                           postinc2	equ	0xFDE
 11766                           postdec2	equ	0xFDD
 11767                           plusw2	equ	0xFDB
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function _GetRouteAddressOfChild *****************
 11773 ;; Defined at:
 11774 ;;		line 438 in file "../RouteManager.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  child           8   54[BANK0 ] struct addr_t_def
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;  res             8   62[BANK0 ] struct addr_t_def
 11779 ;;  i               2   70[BANK0 ] unsigned int 
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  8   54[BANK0 ] struct addr_t_def
 11782 ;; Registers used:
 11783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11784 ;; Tracked objects:
 11785 ;;		On entry : 0/1
 11786 ;;		On exit  : 0/0
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11790 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11792 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11793 ;;Total ram usage:       18 bytes
 11794 ;; Hardware stack levels used:    1
 11795 ;; Hardware stack levels required when called:    7
 11796 ;; This function calls:
 11797 ;;		_CoordinatorAddress
 11798 ;;		_LE_GetNeighborDeviceType
 11799 ;;		_RoutingTableFindDeviceOrParent
 11800 ;;		_le_findIdx
 11801 ;; This function is called by:
 11802 ;;		_radioReceivedPacket
 11803 ;;		_TMSendFormedPacketToRFD
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text32
 11808  0064C6                     __ptext32:
 11809                           	opt stack 0
 11810  0064C6                     _GetRouteAddressOfChild:
 11811                           	opt stack 19
 11812                           
 11813                           ;RouteManager.c: 440: uint16_t i;
 11814                           ;RouteManager.c: 441: addr_t res;
 11815                           ;RouteManager.c: 442: i=le_findIdx(child);
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;incstack = 0
 11819  0064C6  EE20  F096         	lfsr	2,GetRouteAddressOfChild@child
 11820  0064CA  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 11821  0064CE  0E07               	movlw	7
 11822  0064D0                     u17701:
 11823  0064D0  CFDB FFEB          	movff	plusw2,plusw0
 11824  0064D4  06E8               	decf	wreg,f,c
 11825  0064D6  E2FC               	bc	u17701
 11826  0064D8  EC63  F036         	call	_le_findIdx	;wreg free
 11827  0064DC  6FA6               	movwf	GetRouteAddressOfChild@i& (0+255),b
 11828  0064DE  6BA7               	clrf	(GetRouteAddressOfChild@i+1)& (0+255),b
 11829                           
 11830                           ; BSR set to: 0
 11831                           ;RouteManager.c: 443: res=child;
 11832  0064E0  EE20  F096         	lfsr	2,GetRouteAddressOfChild@child
 11833  0064E4  EE10  F09E         	lfsr	1,GetRouteAddressOfChild@res
 11834  0064E8  0E07               	movlw	7
 11835  0064EA                     u17711:
 11836  0064EA  CFDB FFE3          	movff	plusw2,plusw1
 11837  0064EE  06E8               	decf	wreg,f,c
 11838  0064F0  E2FC               	bc	u17711
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;RouteManager.c: 444: if(i==0xff)
 11842  0064F2  29A6               	incf	GetRouteAddressOfChild@i& (0+255),w,b
 11843  0064F4  11A7               	iorwf	(GetRouteAddressOfChild@i+1)& (0+255),w,b
 11844  0064F6  E113               	bnz	l12435
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;RouteManager.c: 445: {
 11848                           ;RouteManager.c: 447: res=RoutingTableFindDeviceOrParent(child);
 11849  0064F8  EE20  F096         	lfsr	2,GetRouteAddressOfChild@child
 11850  0064FC  EE00  F080         	lfsr	0,RoutingTableFindDeviceOrParent@address
 11851  006500  0E07               	movlw	7
 11852  006502                     u17731:
 11853  006502  CFDB FFEB          	movff	plusw2,plusw0
 11854  006506  06E8               	decf	wreg,f,c
 11855  006508  E2FC               	bc	u17731
 11856  00650A  EC41  F02C         	call	_RoutingTableFindDeviceOrParent	;wreg free
 11857  00650E  EE20  F09E         	lfsr	2,GetRouteAddressOfChild@res
 11858  006512  0E07               	movlw	7
 11859  006514                     u17741:
 11860  006514  CFEB FFDB          	movff	plusw0,plusw2
 11861  006518  06E8               	decf	wreg,f,c
 11862  00651A  E2FC               	bc	u17741
 11863                           
 11864                           ;RouteManager.c: 448: }else if(LE_GetNeighborDeviceType(i)==DeviceSleepingRFD)
 11865  00651C  D011               	goto	l12439
 11866  00651E                     l12435:
 11867                           
 11868                           ; BSR set to: 0
 11869  00651E  C0A6  F060         	movff	GetRouteAddressOfChild@i,LE_GetNeighborDeviceType@index
 11870  006522  C0A7  F061         	movff	GetRouteAddressOfChild@i+1,LE_GetNeighborDeviceType@index+1
 11871  006526  EC19  F03B         	call	_LE_GetNeighborDeviceType	;wreg free
 11872  00652A  0A02               	xorlw	2
 11873  00652C  E109               	bnz	l12439
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;RouteManager.c: 449: {
 11877                           ;RouteManager.c: 450: res=CoordinatorAddress();
 11878  00652E  ECD0  F03D         	call	_CoordinatorAddress	;wreg free
 11879  006532  EE20  F09E         	lfsr	2,GetRouteAddressOfChild@res
 11880  006536  0E07               	movlw	7
 11881  006538                     u17761:
 11882  006538  CFEB FFDB          	movff	plusw0,plusw2
 11883  00653C  06E8               	decf	wreg,f,c
 11884  00653E  E2FC               	bc	u17761
 11885  006540                     l12439:
 11886                           
 11887                           ;RouteManager.c: 451: }
 11888                           ;RouteManager.c: 452: return(res);
 11889  006540  EE20  F09E         	lfsr	2,GetRouteAddressOfChild@res
 11890  006544  EE00  F096         	lfsr	0,?_GetRouteAddressOfChild
 11891  006548  0E07               	movlw	7
 11892  00654A                     u17771:
 11893  00654A  CFDB FFEB          	movff	plusw2,plusw0
 11894  00654E  06E8               	decf	wreg,f,c
 11895  006550  E2FC               	bc	u17771
 11896  006552  0012               	return		;funcret
 11897  006554                     __end_of_GetRouteAddressOfChild:
 11898                           	opt stack 0
 11899                           tblptru	equ	0xFF8
 11900                           tblptrh	equ	0xFF7
 11901                           tblptrl	equ	0xFF6
 11902                           tablat	equ	0xFF5
 11903                           prodh	equ	0xFF4
 11904                           prodl	equ	0xFF3
 11905                           postinc0	equ	0xFEE
 11906                           plusw0	equ	0xFEB
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           indf1	equ	0xFE7
 11911                           postdec1	equ	0xFE5
 11912                           plusw1	equ	0xFE3
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           indf2	equ	0xFDF
 11916                           postinc2	equ	0xFDE
 11917                           postdec2	equ	0xFDD
 11918                           plusw2	equ	0xFDB
 11919                           fsr2h	equ	0xFDA
 11920                           fsr2l	equ	0xFD9
 11921                           status	equ	0xFD8
 11922                           
 11923 ;; *************** function _RoutingTableFindDeviceOrParent *****************
 11924 ;; Defined at:
 11925 ;;		line 413 in file "../RouteManager.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  address         8   32[BANK0 ] struct addr_t_def
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  res             8   44[BANK0 ] struct addr_t_def
 11930 ;;  entry           2   52[BANK0 ] PTR struct routing_table
 11931 ;;		 -> routingTable(210), 
 11932 ;;  i               2   42[BANK0 ] unsigned int 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  8   32[BANK0 ] struct addr_t_def
 11935 ;; Registers used:
 11936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : F/0
 11939 ;;		On exit  : F/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11942 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11945 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11946 ;;Total ram usage:       22 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:    6
 11949 ;; This function calls:
 11950 ;;		_NetworkAddressSizeGet
 11951 ;;		_isSameAddress
 11952 ;;		_memset
 11953 ;; This function is called by:
 11954 ;;		_GetRouteAddressOfChild
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text33
 11959  005882                     __ptext33:
 11960                           	opt stack 0
 11961  005882                     _RoutingTableFindDeviceOrParent:
 11962                           	opt stack 19
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;RouteManager.c: 415: uint16_t i;
 11966                           ;RouteManager.c: 416: routing_table_entry_t *entry;
 11967                           ;RouteManager.c: 417: addr_t res;
 11968                           ;RouteManager.c: 419: memset(res.bytes,0xff,NetworkAddressSizeGet());
 11969                           
 11970                           ;incstack = 0
 11971  005882  0E8C               	movlw	low RoutingTableFindDeviceOrParent@res
 11972  005884  6F60               	movwf	memset@p1& (0+255),b
 11973  005886  6B61               	clrf	(memset@p1+1)& (0+255),b
 11974  005888  6B63               	clrf	(memset@c+1)& (0+255),b
 11975  00588A  6962               	setf	memset@c& (0+255),b
 11976  00588C  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 11977  005890  6F64               	movwf	memset@n& (0+255),b
 11978  005892  6B65               	clrf	(memset@n+1)& (0+255),b
 11979  005894  EC61  F03C         	call	_memset	;wreg free
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;RouteManager.c: 421: for (i = 0; i < routingTableActive; i++)
 11983  005898  6B8A               	clrf	RoutingTableFindDeviceOrParent@i& (0+255),b
 11984  00589A  6B8B               	clrf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 11985  00589C  D05B               	goto	l12155
 11986  00589E                     l12141:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;RouteManager.c: 422: {
 11990                           ;RouteManager.c: 423: entry = &routingTable[i];
 11991  00589E  0E15               	movlw	21
 11992  0058A0  038A               	mulwf	RoutingTableFindDeviceOrParent@i& (0+255),b
 11993  0058A2  CFF3 F088          	movff	prodl,??_RoutingTableFindDeviceOrParent
 11994  0058A6  CFF4 F089          	movff	prodh,??_RoutingTableFindDeviceOrParent+1
 11995  0058AA  038B               	mulwf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 11996  0058AC  50F3               	movf	prodl,w,c
 11997  0058AE  2789               	addwf	(??_RoutingTableFindDeviceOrParent+1)& (0+255),f,b
 11998  0058B0  0E00               	movlw	low _routingTable
 11999  0058B2  2588               	addwf	??_RoutingTableFindDeviceOrParent& (0+255),w,b
 12000  0058B4  6F94               	movwf	RoutingTableFindDeviceOrParent@entry& (0+255),b
 12001  0058B6  0E08               	movlw	high _routingTable
 12002  0058B8  2189               	addwfc	(??_RoutingTableFindDeviceOrParent+1)& (0+255),w,b
 12003  0058BA  6F95               	movwf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;RouteManager.c: 425: if (isSameAddress(entry->neighbor, address)==1)
 12007  0058BC  C094  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 12008  0058C0  C095  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 12009  0058C4  EE00  F070         	lfsr	0,isSameAddress@a1
 12010  0058C8  0E07               	movlw	7
 12011  0058CA                     u17111:
 12012  0058CA  CFDB FFEB          	movff	plusw2,plusw0
 12013  0058CE  06E8               	decf	wreg,f,c
 12014  0058D0  E2FC               	bc	u17111
 12015  0058D2  EE20  F080         	lfsr	2,RoutingTableFindDeviceOrParent@address
 12016  0058D6  EE00  F078         	lfsr	0,isSameAddress@a2
 12017  0058DA  0E07               	movlw	7
 12018  0058DC                     u17121:
 12019  0058DC  CFDB FFEB          	movff	plusw2,plusw0
 12020  0058E0  06E8               	decf	wreg,f,c
 12021  0058E2  E2FC               	bc	u17121
 12022  0058E4  ECC5  F03C         	call	_isSameAddress	;wreg free
 12023  0058E8  06E8               	decf	wreg,f,c
 12024  0058EA  E10C               	bnz	l12149
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;RouteManager.c: 426: {
 12028                           ;RouteManager.c: 427: res=entry->neighbor;
 12029  0058EC  C094  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 12030  0058F0  C095  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 12031  0058F4  EE10  F08C         	lfsr	1,RoutingTableFindDeviceOrParent@res
 12032  0058F8  0E07               	movlw	7
 12033  0058FA                     u17141:
 12034  0058FA  CFDB FFE3          	movff	plusw2,plusw1
 12035  0058FE  06E8               	decf	wreg,f,c
 12036  005900  E2FC               	bc	u17141
 12037                           
 12038                           ;RouteManager.c: 428: break;
 12039  005902  D02D               	goto	l12157
 12040  005904                     l12149:
 12041                           
 12042                           ; BSR set to: 0
 12043  005904  EE20 F008          	lfsr	2,8
 12044  005908  5194               	movf	RoutingTableFindDeviceOrParent@entry& (0+255),w,b
 12045  00590A  26D9               	addwf	fsr2l,f,c
 12046  00590C  5195               	movf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),w,b
 12047  00590E  22DA               	addwfc	fsr2h,f,c
 12048  005910  EE00  F070         	lfsr	0,isSameAddress@a1
 12049  005914  0E07               	movlw	7
 12050  005916                     u17151:
 12051  005916  CFDB FFEB          	movff	plusw2,plusw0
 12052  00591A  06E8               	decf	wreg,f,c
 12053  00591C  E2FC               	bc	u17151
 12054  00591E  EE20  F080         	lfsr	2,RoutingTableFindDeviceOrParent@address
 12055  005922  EE00  F078         	lfsr	0,isSameAddress@a2
 12056  005926  0E07               	movlw	7
 12057  005928                     u17161:
 12058  005928  CFDB FFEB          	movff	plusw2,plusw0
 12059  00592C  06E8               	decf	wreg,f,c
 12060  00592E  E2FC               	bc	u17161
 12061  005930  ECC5  F03C         	call	_isSameAddress	;wreg free
 12062  005934  06E8               	decf	wreg,f,c
 12063  005936  E10C               	bnz	l12153
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;RouteManager.c: 430: {
 12067                           ;RouteManager.c: 431: res=entry->neighbor;
 12068  005938  C094  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 12069  00593C  C095  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 12070  005940  EE10  F08C         	lfsr	1,RoutingTableFindDeviceOrParent@res
 12071  005944  0E07               	movlw	7
 12072  005946                     u17181:
 12073  005946  CFDB FFE3          	movff	plusw2,plusw1
 12074  00594A  06E8               	decf	wreg,f,c
 12075  00594C  E2FC               	bc	u17181
 12076                           
 12077                           ;RouteManager.c: 432: break;
 12078  00594E  D007               	goto	l12157
 12079  005950                     l12153:
 12080                           
 12081                           ; BSR set to: 0
 12082  005950  4B8A               	infsnz	RoutingTableFindDeviceOrParent@i& (0+255),f,b
 12083  005952  2B8B               	incf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),f,b
 12084  005954                     l12155:
 12085                           
 12086                           ; BSR set to: 0
 12087  005954  5039               	movf	_routingTableActive,w,c
 12088  005956  5D8A               	subwf	RoutingTableFindDeviceOrParent@i& (0+255),w,b
 12089  005958  503A               	movf	_routingTableActive+1,w,c
 12090  00595A  598B               	subwfb	(RoutingTableFindDeviceOrParent@i+1)& (0+255),w,b
 12091  00595C  E3A0               	bnc	l12141
 12092  00595E                     l12157:
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;RouteManager.c: 433: }
 12096                           ;RouteManager.c: 434: }
 12097                           ;RouteManager.c: 435: return(res);
 12098  00595E  EE20  F08C         	lfsr	2,RoutingTableFindDeviceOrParent@res
 12099  005962  EE00  F080         	lfsr	0,?_RoutingTableFindDeviceOrParent
 12100  005966  0E07               	movlw	7
 12101  005968                     u17201:
 12102  005968  CFDB FFEB          	movff	plusw2,plusw0
 12103  00596C  06E8               	decf	wreg,f,c
 12104  00596E  E2FC               	bc	u17201
 12105                           
 12106                           ; BSR set to: 0
 12107  005970  0012               	return		;funcret
 12108  005972                     __end_of_RoutingTableFindDeviceOrParent:
 12109                           	opt stack 0
 12110                           tblptru	equ	0xFF8
 12111                           tblptrh	equ	0xFF7
 12112                           tblptrl	equ	0xFF6
 12113                           tablat	equ	0xFF5
 12114                           prodh	equ	0xFF4
 12115                           prodl	equ	0xFF3
 12116                           postinc0	equ	0xFEE
 12117                           plusw0	equ	0xFEB
 12118                           fsr0h	equ	0xFEA
 12119                           fsr0l	equ	0xFE9
 12120                           wreg	equ	0xFE8
 12121                           indf1	equ	0xFE7
 12122                           postdec1	equ	0xFE5
 12123                           plusw1	equ	0xFE3
 12124                           fsr1h	equ	0xFE2
 12125                           fsr1l	equ	0xFE1
 12126                           indf2	equ	0xFDF
 12127                           postinc2	equ	0xFDE
 12128                           postdec2	equ	0xFDD
 12129                           plusw2	equ	0xFDB
 12130                           fsr2h	equ	0xFDA
 12131                           fsr2l	equ	0xFD9
 12132                           status	equ	0xFD8
 12133                           
 12134 ;; *************** function _LE_GetNeighborDeviceType *****************
 12135 ;; Defined at:
 12136 ;;		line 509 in file "../LinkEstimator.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  index           2    0[BANK0 ] unsigned int 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;  dev             1    5[BANK0 ] enum E144
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      enum E145
 12143 ;; Registers used:
 12144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12145 ;; Tracked objects:
 12146 ;;		On entry : F/0
 12147 ;;		On exit  : F/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12154 ;;Total ram usage:        6 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    4
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_GetRouteAddressOfChild
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text34
 12165  007632                     __ptext34:
 12166                           	opt stack 0
 12167  007632                     _LE_GetNeighborDeviceType:
 12168                           	opt stack 21
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;LinkEstimator.c: 511: DeviceType_t dev=DeviceRFD;
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;incstack = 0
 12175  007632  0E01               	movlw	1
 12176  007634  6F65               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;LinkEstimator.c: 512: if(index<=20)
 12180  007636  5161               	movf	(LE_GetNeighborDeviceType@index+1)& (0+255),w,b
 12181  007638  E118               	bnz	l12187
 12182  00763A  0E15               	movlw	21
 12183  00763C  5D60               	subwf	LE_GetNeighborDeviceType@index& (0+255),w,b
 12184  00763E  E215               	bc	l12187
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;LinkEstimator.c: 513: {
 12188                           ;LinkEstimator.c: 514: dev=(DeviceType_t)((neighbor_tbl[index].flags & 0x70)>>4);
 12189  007640  0E11               	movlw	17
 12190  007642  0360               	mulwf	LE_GetNeighborDeviceType@index& (0+255),b
 12191  007644  CFF3 F062          	movff	prodl,??_LE_GetNeighborDeviceType
 12192  007648  CFF4 F063          	movff	prodh,??_LE_GetNeighborDeviceType+1
 12193  00764C  0361               	mulwf	(LE_GetNeighborDeviceType@index+1)& (0+255),b
 12194  00764E  50F3               	movf	prodl,w,c
 12195  007650  2763               	addwf	(??_LE_GetNeighborDeviceType+1)& (0+255),f,b
 12196  007652  0E55               	movlw	low (_neighbor_tbl+11)
 12197  007654  2562               	addwf	??_LE_GetNeighborDeviceType& (0+255),w,b
 12198  007656  6ED9               	movwf	fsr2l,c
 12199  007658  0E0D               	movlw	high (_neighbor_tbl+11)
 12200  00765A  2163               	addwfc	(??_LE_GetNeighborDeviceType+1)& (0+255),w,b
 12201  00765C  6EDA               	movwf	fsr2h,c
 12202  00765E  50DF               	movf	indf2,w,c
 12203  007660  6F64               	movwf	(??_LE_GetNeighborDeviceType+2)& (0+255),b
 12204  007662  3964               	swapf	(??_LE_GetNeighborDeviceType+2)& (0+255),w,b
 12205  007664  0B0F               	andlw	15
 12206  007666  0B07               	andlw	7
 12207  007668  6F65               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 12208  00766A                     l12187:
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;LinkEstimator.c: 515: }
 12212                           ;LinkEstimator.c: 516: return(dev);
 12213  00766A  5165               	movf	LE_GetNeighborDeviceType@dev& (0+255),w,b
 12214                           
 12215                           ; BSR set to: 0
 12216  00766C  0012               	return		;funcret
 12217  00766E                     __end_of_LE_GetNeighborDeviceType:
 12218                           	opt stack 0
 12219                           tblptru	equ	0xFF8
 12220                           tblptrh	equ	0xFF7
 12221                           tblptrl	equ	0xFF6
 12222                           tablat	equ	0xFF5
 12223                           prodh	equ	0xFF4
 12224                           prodl	equ	0xFF3
 12225                           postinc0	equ	0xFEE
 12226                           plusw0	equ	0xFEB
 12227                           fsr0h	equ	0xFEA
 12228                           fsr0l	equ	0xFE9
 12229                           wreg	equ	0xFE8
 12230                           indf1	equ	0xFE7
 12231                           postdec1	equ	0xFE5
 12232                           plusw1	equ	0xFE3
 12233                           fsr1h	equ	0xFE2
 12234                           fsr1l	equ	0xFE1
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           postdec2	equ	0xFDD
 12238                           plusw2	equ	0xFDB
 12239                           fsr2h	equ	0xFDA
 12240                           fsr2l	equ	0xFD9
 12241                           status	equ	0xFD8
 12242                           
 12243 ;; *************** function _CoordinatorAddress *****************
 12244 ;; Defined at:
 12245 ;;		line 265 in file "../NetworkManager.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;		None
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;		None
 12250 ;; Return value:  Size  Location     Type
 12251 ;;                  8    0[BANK0 ] struct addr_t_def
 12252 ;; Registers used:
 12253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 12254 ;; Tracked objects:
 12255 ;;		On entry : 0/0
 12256 ;;		On exit  : 0/0
 12257 ;;		Unchanged: 0/0
 12258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12263 ;;Total ram usage:        8 bytes
 12264 ;; Hardware stack levels used:    1
 12265 ;; Hardware stack levels required when called:    4
 12266 ;; This function calls:
 12267 ;;		Nothing
 12268 ;; This function is called by:
 12269 ;;		_NetworkUnicastData
 12270 ;;		_GetRouteAddressOfChild
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text35
 12275  007BA0                     __ptext35:
 12276                           	opt stack 0
 12277  007BA0                     _CoordinatorAddress:
 12278                           	opt stack 21
 12279                           
 12280                           ;NetworkManager.c: 267: return(CoordinatorAddr);
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;incstack = 0
 12284  007BA0  EE22  F0A5         	lfsr	2,_CoordinatorAddr
 12285  007BA4  EE00  F060         	lfsr	0,?_CoordinatorAddress
 12286  007BA8  0E07               	movlw	7
 12287  007BAA                     u17011:
 12288  007BAA  CFDB FFEB          	movff	plusw2,plusw0
 12289  007BAE  06E8               	decf	wreg,f,c
 12290  007BB0  E2FC               	bc	u17011
 12291  007BB2  0012               	return		;funcret
 12292  007BB4                     __end_of_CoordinatorAddress:
 12293                           	opt stack 0
 12294                           tblptru	equ	0xFF8
 12295                           tblptrh	equ	0xFF7
 12296                           tblptrl	equ	0xFF6
 12297                           tablat	equ	0xFF5
 12298                           prodh	equ	0xFF4
 12299                           prodl	equ	0xFF3
 12300                           postinc0	equ	0xFEE
 12301                           plusw0	equ	0xFEB
 12302                           fsr0h	equ	0xFEA
 12303                           fsr0l	equ	0xFE9
 12304                           wreg	equ	0xFE8
 12305                           indf1	equ	0xFE7
 12306                           postdec1	equ	0xFE5
 12307                           plusw1	equ	0xFE3
 12308                           fsr1h	equ	0xFE2
 12309                           fsr1l	equ	0xFE1
 12310                           indf2	equ	0xFDF
 12311                           postinc2	equ	0xFDE
 12312                           postdec2	equ	0xFDD
 12313                           plusw2	equ	0xFDB
 12314                           fsr2h	equ	0xFDA
 12315                           fsr2l	equ	0xFD9
 12316                           status	equ	0xFD8
 12317                           
 12318 ;; *************** function _BroadcastManagerDelaySend *****************
 12319 ;; Defined at:
 12320 ;;		line 52 in file "../BroadcastManager.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;  pkt             2   44[BANK0 ] PTR unsigned char 
 12323 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), TMSendDataToRFD@databuff(64), 
 12324 ;;		 -> NetworkBroadcastData@databuff(64), RxBuffer.Payload(127), RxBuffer(256), 
 12325 ;;  size            2   46[BANK0 ] unsigned int 
 12326 ;;  isSecure        1   48[BANK0 ] unsigned char 
 12327 ;;  isInterPan      1   49[BANK0 ] unsigned char 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;  i               2   57[BANK0 ] unsigned int 
 12330 ;;  res             1   56[BANK0 ] unsigned char 
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      unsigned char 
 12333 ;; Registers used:
 12334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12335 ;; Tracked objects:
 12336 ;;		On entry : F/0
 12337 ;;		On exit  : F/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12343 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12344 ;;Total ram usage:       15 bytes
 12345 ;; Hardware stack levels used:    1
 12346 ;; Hardware stack levels required when called:    7
 12347 ;; This function calls:
 12348 ;;		_AddMSToTick
 12349 ;;		_MSTickGet
 12350 ;;		_krnd
 12351 ;;		_memcpy
 12352 ;; This function is called by:
 12353 ;;		_radioReceivedPacket
 12354 ;;		_TMSendFormedPacketToRFD
 12355 ;;		_NetworkSendDiscoverRequest
 12356 ;;		_NetworkSendDiscoverResponse
 12357 ;;		_NetworkBroadcastData
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text36
 12362  004678                     __ptext36:
 12363                           	opt stack 0
 12364  004678                     _BroadcastManagerDelaySend:
 12365                           	opt stack 19
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;BroadcastManager.c: 54: bool res=0;
 12369                           
 12370                           ;incstack = 0
 12371  004678  6B98               	clrf	BroadcastManagerDelaySend@res& (0+255),b
 12372                           
 12373                           ;BroadcastManager.c: 55: uint16_t i;
 12374                           ;BroadcastManager.c: 56: for(i=0;i<6;i++)
 12375  00467A  6B99               	clrf	BroadcastManagerDelaySend@i& (0+255),b
 12376  00467C  6B9A               	clrf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12377  00467E                     l12325:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;BroadcastManager.c: 57: {
 12381                           ;BroadcastManager.c: 58: if(((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==1)
 12382  00467E  0E4A               	movlw	74
 12383  004680  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12384  004682  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12385  004686  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12386  00468A  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12387  00468C  50F3               	movf	prodl,w,c
 12388  00468E  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12389  004690  0ED6               	movlw	low (_RbcQ+4)
 12390  004692  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12391  004694  6ED9               	movwf	fsr2l,c
 12392  004696  0E08               	movlw	high (_RbcQ+4)
 12393  004698  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12394  00469A  6EDA               	movwf	fsr2h,c
 12395  00469C  50DE               	movf	postinc2,w,c
 12396  00469E  10DE               	iorwf	postinc2,w,c
 12397  0046A0  10DE               	iorwf	postinc2,w,c
 12398  0046A2  10DE               	iorwf	postinc2,w,c
 12399  0046A4  E001 D0A3          	bnz	l12347
 12400                           
 12401                           ; BSR set to: 0
 12402  0046A8  0E4A               	movlw	74
 12403  0046AA  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12404  0046AC  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12405  0046B0  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12406  0046B4  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12407  0046B6  50F3               	movf	prodl,w,c
 12408  0046B8  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12409  0046BA  0ED2               	movlw	low _RbcQ
 12410  0046BC  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12411  0046BE  6ED9               	movwf	fsr2l,c
 12412  0046C0  0E08               	movlw	high _RbcQ
 12413  0046C2  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12414  0046C4  6EDA               	movwf	fsr2h,c
 12415  0046C6  50DE               	movf	postinc2,w,c
 12416  0046C8  10DE               	iorwf	postinc2,w,c
 12417  0046CA  10DE               	iorwf	postinc2,w,c
 12418  0046CC  10DE               	iorwf	postinc2,w,c
 12419  0046CE  E001 D08E          	bnz	l12347
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;BroadcastManager.c: 59: {
 12423                           ;BroadcastManager.c: 60: memcpy(RbcQ[i].pkt,pkt,size);
 12424  0046D2  0E4A               	movlw	74
 12425  0046D4  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12426  0046D6  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12427  0046DA  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12428  0046DE  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12429  0046E0  50F3               	movf	prodl,w,c
 12430  0046E2  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12431  0046E4  0EDA               	movlw	low (_RbcQ+8)
 12432  0046E6  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12433  0046E8  6F62               	movwf	memcpy@d1& (0+255),b
 12434  0046EA  0E08               	movlw	high (_RbcQ+8)
 12435  0046EC  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12436  0046EE  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 12437  0046F0  C08C  F064         	movff	BroadcastManagerDelaySend@pkt,memcpy@s1
 12438  0046F4  C08D  F065         	movff	BroadcastManagerDelaySend@pkt+1,memcpy@s1+1
 12439  0046F8  C08E  F066         	movff	BroadcastManagerDelaySend@size,memcpy@n
 12440  0046FC  C08F  F067         	movff	BroadcastManagerDelaySend@size+1,memcpy@n+1
 12441  004700  ECFA  F03A         	call	_memcpy	;wreg free
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;BroadcastManager.c: 61: RbcQ[i].pktSize=size;
 12445  004704  0E4A               	movlw	74
 12446  004706  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12447  004708  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12448  00470C  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12449  004710  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12450  004712  50F3               	movf	prodl,w,c
 12451  004714  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12452  004716  0E1A               	movlw	low (_RbcQ+72)
 12453  004718  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12454  00471A  6ED9               	movwf	fsr2l,c
 12455  00471C  0E09               	movlw	high (_RbcQ+72)
 12456  00471E  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12457  004720  6EDA               	movwf	fsr2h,c
 12458  004722  C08E  FFDF         	movff	BroadcastManagerDelaySend@size,indf2
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;BroadcastManager.c: 62: RbcQ[i].TxTime=AddMSToTick(MSTickGet(),(krnd() & 0x3f));
 12462  004726  EC70  F03B         	call	_MSTickGet	;wreg free
 12463  00472A  CFE9 FFD9          	movff	fsr0l,fsr2l
 12464  00472E  CFEA FFDA          	movff	fsr0h,fsr2h
 12465  004732  EE00  F07C         	lfsr	0,AddMSToTick@tick
 12466  004736  0E07               	movlw	7
 12467  004738                     u17481:
 12468  004738  CFDB FFEB          	movff	plusw2,plusw0
 12469  00473C  06E8               	decf	wreg,f,c
 12470  00473E  E2FC               	bc	u17481
 12471  004740  EC76  F022         	call	_krnd	;wreg free
 12472  004744  0E3F               	movlw	63
 12473  004746  1560               	andwf	?_krnd& (0+255),w,b
 12474  004748  6F84               	movwf	AddMSToTick@ms& (0+255),b
 12475  00474A  6B85               	clrf	(AddMSToTick@ms+1)& (0+255),b
 12476  00474C  6B86               	clrf	(AddMSToTick@ms+2)& (0+255),b
 12477  00474E  6B87               	clrf	(AddMSToTick@ms+3)& (0+255),b
 12478  004750  ECAA  F032         	call	_AddMSToTick	;wreg free
 12479  004754  0E4A               	movlw	74
 12480  004756  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12481  004758  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12482  00475C  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12483  004760  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12484  004762  50F3               	movf	prodl,w,c
 12485  004764  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12486  004766  0ED2               	movlw	low _RbcQ
 12487  004768  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12488  00476A  6ED9               	movwf	fsr2l,c
 12489  00476C  0E08               	movlw	high _RbcQ
 12490  00476E  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12491  004770  6EDA               	movwf	fsr2h,c
 12492  004772  0E07               	movlw	7
 12493  004774                     u17491:
 12494  004774  CFEB FFDB          	movff	plusw0,plusw2
 12495  004778  06E8               	decf	wreg,f,c
 12496  00477A  E2FC               	bc	u17491
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;BroadcastManager.c: 63: RbcQ[i].Flags=0;
 12500  00477C  0E4A               	movlw	74
 12501  00477E  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12502  004780  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12503  004784  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12504  004788  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12505  00478A  50F3               	movf	prodl,w,c
 12506  00478C  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12507  00478E  0E1B               	movlw	low (_RbcQ+73)
 12508  004790  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12509  004792  6ED9               	movwf	fsr2l,c
 12510  004794  0E09               	movlw	high (_RbcQ+73)
 12511  004796  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12512  004798  6EDA               	movwf	fsr2h,c
 12513  00479A  6ADF               	clrf	indf2,c
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;BroadcastManager.c: 64: if(isSecure==1)
 12517  00479C  0590               	decf	BroadcastManagerDelaySend@isSecure& (0+255),w,b
 12518  00479E  E111               	bnz	l12341
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;BroadcastManager.c: 65: {
 12522                           ;BroadcastManager.c: 66: RbcQ[i].Flags|=(1<<0);
 12523  0047A0  0E4A               	movlw	74
 12524  0047A2  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12525  0047A4  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12526  0047A8  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12527  0047AC  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12528  0047AE  50F3               	movf	prodl,w,c
 12529  0047B0  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12530  0047B2  0E1B               	movlw	low (_RbcQ+73)
 12531  0047B4  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12532  0047B6  6ED9               	movwf	fsr2l,c
 12533  0047B8  0E09               	movlw	high (_RbcQ+73)
 12534  0047BA  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12535  0047BC  6EDA               	movwf	fsr2h,c
 12536  0047BE  0E00               	movlw	0
 12537  0047C0  80DB               	bsf	plusw2,0,c
 12538  0047C2                     l12341:
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;BroadcastManager.c: 67: }
 12542                           ;BroadcastManager.c: 68: if(isInterPan==1)
 12543  0047C2  0591               	decf	BroadcastManagerDelaySend@isInterPan& (0+255),w,b
 12544  0047C4  E111               	bnz	l12345
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;BroadcastManager.c: 69: {
 12548                           ;BroadcastManager.c: 70: RbcQ[i].Flags|=(1<<1);
 12549  0047C6  0E4A               	movlw	74
 12550  0047C8  0399               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12551  0047CA  CFF3 F092          	movff	prodl,??_BroadcastManagerDelaySend
 12552  0047CE  CFF4 F093          	movff	prodh,??_BroadcastManagerDelaySend+1
 12553  0047D2  039A               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12554  0047D4  50F3               	movf	prodl,w,c
 12555  0047D6  2793               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12556  0047D8  0E1B               	movlw	low (_RbcQ+73)
 12557  0047DA  2592               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12558  0047DC  6ED9               	movwf	fsr2l,c
 12559  0047DE  0E09               	movlw	high (_RbcQ+73)
 12560  0047E0  2193               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12561  0047E2  6EDA               	movwf	fsr2h,c
 12562  0047E4  0E00               	movlw	0
 12563  0047E6  82DB               	bsf	plusw2,1,c
 12564  0047E8                     l12345:
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;BroadcastManager.c: 71: }
 12568                           ;BroadcastManager.c: 72: res=1;
 12569  0047E8  0E01               	movlw	1
 12570  0047EA  6F98               	movwf	BroadcastManagerDelaySend@res& (0+255),b
 12571                           
 12572                           ;BroadcastManager.c: 73: break;
 12573  0047EC  D008               	goto	l12351
 12574  0047EE                     l12347:
 12575                           
 12576                           ; BSR set to: 0
 12577  0047EE  4B99               	infsnz	BroadcastManagerDelaySend@i& (0+255),f,b
 12578  0047F0  2B9A               	incf	(BroadcastManagerDelaySend@i+1)& (0+255),f,b
 12579                           
 12580                           ; BSR set to: 0
 12581  0047F2  519A               	movf	(BroadcastManagerDelaySend@i+1)& (0+255),w,b
 12582  0047F4  E104               	bnz	u17520
 12583  0047F6  0E06               	movlw	6
 12584  0047F8  5D99               	subwf	BroadcastManagerDelaySend@i& (0+255),w,b
 12585  0047FA  E201 D740          	bnc	l12325
 12586  0047FE                     u17520:
 12587  0047FE                     l12351:
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;BroadcastManager.c: 74: }
 12591                           ;BroadcastManager.c: 75: }
 12592                           ;BroadcastManager.c: 76: return(res);
 12593  0047FE  5198               	movf	BroadcastManagerDelaySend@res& (0+255),w,b
 12594                           
 12595                           ; BSR set to: 0
 12596  004800  0012               	return		;funcret
 12597  004802                     __end_of_BroadcastManagerDelaySend:
 12598                           	opt stack 0
 12599                           tblptru	equ	0xFF8
 12600                           tblptrh	equ	0xFF7
 12601                           tblptrl	equ	0xFF6
 12602                           tablat	equ	0xFF5
 12603                           prodh	equ	0xFF4
 12604                           prodl	equ	0xFF3
 12605                           postinc0	equ	0xFEE
 12606                           plusw0	equ	0xFEB
 12607                           fsr0h	equ	0xFEA
 12608                           fsr0l	equ	0xFE9
 12609                           wreg	equ	0xFE8
 12610                           indf1	equ	0xFE7
 12611                           postdec1	equ	0xFE5
 12612                           plusw1	equ	0xFE3
 12613                           fsr1h	equ	0xFE2
 12614                           fsr1l	equ	0xFE1
 12615                           indf2	equ	0xFDF
 12616                           postinc2	equ	0xFDE
 12617                           postdec2	equ	0xFDD
 12618                           plusw2	equ	0xFDB
 12619                           fsr2h	equ	0xFDA
 12620                           fsr2l	equ	0xFD9
 12621                           status	equ	0xFD8
 12622                           
 12623 ;; *************** function _AddMSToTick *****************
 12624 ;; Defined at:
 12625 ;;		line 57 in file "../TimeTick.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;  tick            8   28[BANK0 ] struct TickMS_t_def
 12628 ;;  ms              4   36[BANK0 ] unsigned long 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;		None
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  8   28[BANK0 ] struct TickMS_t_def
 12633 ;; Registers used:
 12634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 12635 ;; Tracked objects:
 12636 ;;		On entry : F/0
 12637 ;;		On exit  : F/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12640 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12643 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12644 ;;Total ram usage:       16 bytes
 12645 ;; Hardware stack levels used:    1
 12646 ;; Hardware stack levels required when called:    4
 12647 ;; This function calls:
 12648 ;;		Nothing
 12649 ;; This function is called by:
 12650 ;;		_BroadcastManagerDelaySend
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           	psect	text37
 12655  006554                     __ptext37:
 12656                           	opt stack 0
 12657  006554                     _AddMSToTick:
 12658                           	opt stack 21
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;TimeTick.c: 59: if((0xffffffff-tick.lsb)>=ms)
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;incstack = 0
 12665  006554  C07C  F088         	movff	AddMSToTick@tick,??_AddMSToTick
 12666  006558  C07D  F089         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12667  00655C  C07E  F08A         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12668  006560  C07F  F08B         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12669  006564  1F88               	comf	??_AddMSToTick& (0+255),f,b
 12670  006566  1F89               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12671  006568  1F8A               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12672  00656A  1F8B               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12673  00656C  5184               	movf	AddMSToTick@ms& (0+255),w,b
 12674  00656E  5D88               	subwf	??_AddMSToTick& (0+255),w,b
 12675  006570  5185               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12676  006572  5989               	subwfb	(??_AddMSToTick+1)& (0+255),w,b
 12677  006574  5186               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12678  006576  598A               	subwfb	(??_AddMSToTick+2)& (0+255),w,b
 12679  006578  5187               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12680  00657A  598B               	subwfb	(??_AddMSToTick+3)& (0+255),w,b
 12681  00657C  E309               	bnc	l12221
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;TimeTick.c: 60: {
 12685                           ;TimeTick.c: 61: tick.lsb+=ms;
 12686  00657E  5184               	movf	AddMSToTick@ms& (0+255),w,b
 12687  006580  277C               	addwf	AddMSToTick@tick& (0+255),f,b
 12688  006582  5185               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12689  006584  237D               	addwfc	(AddMSToTick@tick+1)& (0+255),f,b
 12690  006586  5186               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12691  006588  237E               	addwfc	(AddMSToTick@tick+2)& (0+255),f,b
 12692  00658A  5187               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12693  00658C  237F               	addwfc	(AddMSToTick@tick+3)& (0+255),f,b
 12694                           
 12695                           ;TimeTick.c: 62: }else
 12696  00658E  D01D               	goto	l12223
 12697  006590                     l12221:
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;TimeTick.c: 63: {
 12701                           ;TimeTick.c: 64: tick.lsb=ms-(0xffffffff-tick.lsb);
 12702  006590  C07C  F088         	movff	AddMSToTick@tick,??_AddMSToTick
 12703  006594  C07D  F089         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12704  006598  C07E  F08A         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12705  00659C  C07F  F08B         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12706  0065A0  1F88               	comf	??_AddMSToTick& (0+255),f,b
 12707  0065A2  1F89               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12708  0065A4  1F8A               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12709  0065A6  1F8B               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12710  0065A8  5188               	movf	??_AddMSToTick& (0+255),w,b
 12711  0065AA  5D84               	subwf	AddMSToTick@ms& (0+255),w,b
 12712  0065AC  6F7C               	movwf	AddMSToTick@tick& (0+255),b
 12713  0065AE  5189               	movf	(??_AddMSToTick+1)& (0+255),w,b
 12714  0065B0  5985               	subwfb	(AddMSToTick@ms+1)& (0+255),w,b
 12715  0065B2  6F7D               	movwf	(AddMSToTick@tick+1)& (0+255),b
 12716  0065B4  518A               	movf	(??_AddMSToTick+2)& (0+255),w,b
 12717  0065B6  5986               	subwfb	(AddMSToTick@ms+2)& (0+255),w,b
 12718  0065B8  6F7E               	movwf	(AddMSToTick@tick+2)& (0+255),b
 12719  0065BA  518B               	movf	(??_AddMSToTick+3)& (0+255),w,b
 12720  0065BC  5987               	subwfb	(AddMSToTick@ms+3)& (0+255),w,b
 12721  0065BE  6F7F               	movwf	(AddMSToTick@tick+3)& (0+255),b
 12722                           
 12723                           ;TimeTick.c: 65: tick.msb++;
 12724  0065C0  2B80               	incf	(AddMSToTick@tick+4)& (0+255),f,b
 12725  0065C2  0E00               	movlw	0
 12726  0065C4  2381               	addwfc	(AddMSToTick@tick+5)& (0+255),f,b
 12727  0065C6  2382               	addwfc	(AddMSToTick@tick+6)& (0+255),f,b
 12728  0065C8  2383               	addwfc	(AddMSToTick@tick+7)& (0+255),f,b
 12729  0065CA                     l12223:
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;TimeTick.c: 66: }
 12733                           ;TimeTick.c: 67: return(tick);
 12734  0065CA  EE20  F07C         	lfsr	2,AddMSToTick@tick
 12735  0065CE  EE00  F07C         	lfsr	0,?_AddMSToTick
 12736  0065D2  0E07               	movlw	7
 12737  0065D4                     u17331:
 12738  0065D4  CFDB FFEB          	movff	plusw2,plusw0
 12739  0065D8  06E8               	decf	wreg,f,c
 12740  0065DA  E2FC               	bc	u17331
 12741                           
 12742                           ; BSR set to: 0
 12743  0065DC  0012               	return		;funcret
 12744  0065DE                     __end_of_AddMSToTick:
 12745                           	opt stack 0
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodh	equ	0xFF4
 12751                           prodl	equ	0xFF3
 12752                           postinc0	equ	0xFEE
 12753                           plusw0	equ	0xFEB
 12754                           fsr0h	equ	0xFEA
 12755                           fsr0l	equ	0xFE9
 12756                           wreg	equ	0xFE8
 12757                           indf1	equ	0xFE7
 12758                           postdec1	equ	0xFE5
 12759                           plusw1	equ	0xFE3
 12760                           fsr1h	equ	0xFE2
 12761                           fsr1l	equ	0xFE1
 12762                           indf2	equ	0xFDF
 12763                           postinc2	equ	0xFDE
 12764                           postdec2	equ	0xFDD
 12765                           plusw2	equ	0xFDB
 12766                           fsr2h	equ	0xFDA
 12767                           fsr2l	equ	0xFD9
 12768                           status	equ	0xFD8
 12769                           
 12770 ;; *************** function _NetworkDataArrivedEvent *****************
 12771 ;; Defined at:
 12772 ;;		line 268 in file "../src/Bridge.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  source          8    8[BANK0 ] struct addr_t_def
 12775 ;;  data            2   16[BANK0 ] PTR unsigned char 
 12776 ;;		 -> userdata(36), 
 12777 ;;  size            2   18[BANK0 ] unsigned int 
 12778 ;;  isBroadcast     1   20[BANK0 ] unsigned char 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  1    wreg      void 
 12783 ;; Registers used:
 12784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12785 ;; Tracked objects:
 12786 ;;		On entry : F/0
 12787 ;;		On exit  : F/1
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12790 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12793 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12794 ;;Total ram usage:       13 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    5
 12797 ;; This function calls:
 12798 ;;		_memset
 12799 ;; This function is called by:
 12800 ;;		_NetworkManagerProcessIncomingData
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	text38
 12805  006E4E                     __ptext38:
 12806                           	opt stack 0
 12807  006E4E                     _NetworkDataArrivedEvent:
 12808                           	opt stack 21
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;Bridge.c: 270: srcAddress=source;
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;incstack = 0
 12815  006E4E  EE20  F068         	lfsr	2,NetworkDataArrivedEvent@source
 12816  006E52  EE12  F0C5         	lfsr	1,_srcAddress
 12817  006E56  0E07               	movlw	7
 12818  006E58                     u18651:
 12819  006E58  CFDB FFE3          	movff	plusw2,plusw1
 12820  006E5C  06E8               	decf	wreg,f,c
 12821  006E5E  E2FC               	bc	u18651
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;Bridge.c: 271: memset(&rxMessage,0x00,sizeof(rxMessage));
 12825  006E60  0E93               	movlw	low _rxMessage
 12826  006E62  6F60               	movwf	memset@p1& (0+255),b
 12827  006E64  0E02               	movlw	high _rxMessage
 12828  006E66  6F61               	movwf	(memset@p1+1)& (0+255),b
 12829  006E68  6B63               	clrf	(memset@c+1)& (0+255),b
 12830  006E6A  6B62               	clrf	memset@c& (0+255),b
 12831  006E6C  6B65               	clrf	(memset@n+1)& (0+255),b
 12832  006E6E  0E0A               	movlw	10
 12833  006E70  6F64               	movwf	memset@n& (0+255),b
 12834  006E72  EC61  F03C         	call	_memset	;wreg free
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;Bridge.c: 272: rxMessage.Payload=data;
 12838  006E76  C070  F298         	movff	NetworkDataArrivedEvent@data,_rxMessage+5
 12839  006E7A  C071  F299         	movff	NetworkDataArrivedEvent@data+1,_rxMessage+6
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;Bridge.c: 273: rxMessage.PayloadSize=size;
 12843  006E7E  C072  F29A         	movff	NetworkDataArrivedEvent@size,_rxMessage+7
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;Bridge.c: 274: rxMessage.SourceAddress=srcAddress.bytes;
 12847  006E82  0EC5               	movlw	low _srcAddress
 12848  006E84  0102               	movlb	2	; () banked
 12849  006E86  6F96               	movwf	(_rxMessage+3)& (0+255),b
 12850  006E88  0E02               	movlw	high _srcAddress
 12851  006E8A  6F97               	movwf	(_rxMessage+4)& (0+255),b
 12852                           
 12853                           ; BSR set to: 2
 12854                           ;Bridge.c: 275: rxMessage.SourcePANID.Val=myPANID;
 12855  006E8C  C05C  F294         	movff	_myPANID,_rxMessage+1
 12856  006E90  C05D  F295         	movff	_myPANID+1,_rxMessage+2
 12857                           
 12858                           ; BSR set to: 2
 12859                           ;Bridge.c: 276: rxMessage.flags.bits.broadcast=isBroadcast;
 12860  006E94  5193               	movf	_rxMessage& (0+255),w,b
 12861  006E96  0100               	movlb	0	; () banked
 12862  006E98  1974               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 12863  006E9A  0BFC               	andlw	-4
 12864  006E9C  1974               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 12865  006E9E  0102               	movlb	2	; () banked
 12866  006EA0  6F93               	movwf	_rxMessage& (0+255),b
 12867                           
 12868                           ; BSR set to: 2
 12869                           ;Bridge.c: 277: rxMessage.flags.bits.srcPrsnt=1;
 12870  006EA2  8D93               	bsf	_rxMessage& (0+255),6,b
 12871                           
 12872                           ; BSR set to: 2
 12873                           ;Bridge.c: 278: UserMessageAvailable=1;
 12874  006EA4  0E01               	movlw	1
 12875  006EA6  0101               	movlb	1	; () banked
 12876  006EA8  6FE0               	movwf	_UserMessageAvailable& (0+255),b
 12877                           
 12878                           ; BSR set to: 1
 12879  006EAA  0C01               	retlw	1	;funcret
 12880  006EAC                     __end_of_NetworkDataArrivedEvent:
 12881                           	opt stack 0
 12882                           tblptru	equ	0xFF8
 12883                           tblptrh	equ	0xFF7
 12884                           tblptrl	equ	0xFF6
 12885                           tablat	equ	0xFF5
 12886                           prodh	equ	0xFF4
 12887                           prodl	equ	0xFF3
 12888                           postinc0	equ	0xFEE
 12889                           plusw0	equ	0xFEB
 12890                           fsr0h	equ	0xFEA
 12891                           fsr0l	equ	0xFE9
 12892                           wreg	equ	0xFE8
 12893                           indf1	equ	0xFE7
 12894                           postdec1	equ	0xFE5
 12895                           plusw1	equ	0xFE3
 12896                           fsr1h	equ	0xFE2
 12897                           fsr1l	equ	0xFE1
 12898                           indf2	equ	0xFDF
 12899                           postinc2	equ	0xFDE
 12900                           postdec2	equ	0xFDD
 12901                           plusw2	equ	0xFDB
 12902                           fsr2h	equ	0xFDA
 12903                           fsr2l	equ	0xFD9
 12904                           status	equ	0xFD8
 12905                           
 12906 ;; *************** function _IsNetworkDevice *****************
 12907 ;; Defined at:
 12908 ;;		line 47 in file "../DeviceManager.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;  address         8   33[BANK0 ] struct addr_t_def
 12911 ;;  devType         1   41[BANK0 ] enum E145
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;  oldest          8   44[BANK0 ] struct TickMS_t_def
 12914 ;;  i               2   55[BANK0 ] unsigned int 
 12915 ;;  empty           2   53[BANK0 ] unsigned int 
 12916 ;;  res             1   52[BANK0 ] unsigned char 
 12917 ;; Return value:  Size  Location     Type
 12918 ;;                  1    wreg      unsigned char 
 12919 ;; Registers used:
 12920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12921 ;; Tracked objects:
 12922 ;;		On entry : F/0
 12923 ;;		On exit  : F/0
 12924 ;;		Unchanged: 0/0
 12925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12926 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12927 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;Total ram usage:       24 bytes
 12931 ;; Hardware stack levels used:    1
 12932 ;; Hardware stack levels required when called:    7
 12933 ;; This function calls:
 12934 ;;		_MSTickGet
 12935 ;;		_NetworkAddressSizeGet
 12936 ;;		_isInvalidAddress
 12937 ;;		_isSameAddress
 12938 ;;		_memcpy
 12939 ;;		_memset
 12940 ;; This function is called by:
 12941 ;;		_radioReceivedPacket
 12942 ;;		_NetworkManagerProcessIncomingData
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           	psect	text39
 12947  0041A6                     __ptext39:
 12948                           	opt stack 0
 12949  0041A6                     _IsNetworkDevice:
 12950                           	opt stack 19
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;DeviceManager.c: 49: uint16_t i;
 12954                           ;DeviceManager.c: 50: uint16_t empty=0xffff;
 12955                           
 12956                           ; BSR set to: 1
 12957                           ;incstack = 0
 12958  0041A6  6995               	setf	IsNetworkDevice@empty& (0+255),b
 12959  0041A8  6996               	setf	(IsNetworkDevice@empty+1)& (0+255),b
 12960                           
 12961                           ;DeviceManager.c: 51: TickMS oldest;
 12962                           ;DeviceManager.c: 52: bool res=0;
 12963  0041AA  6B94               	clrf	IsNetworkDevice@res& (0+255),b
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;DeviceManager.c: 54: memset(&oldest,0x00,sizeof(oldest));
 12967  0041AC  0E8C               	movlw	low IsNetworkDevice@oldest
 12968  0041AE  6F60               	movwf	memset@p1& (0+255),b
 12969  0041B0  6B61               	clrf	(memset@p1+1)& (0+255),b
 12970  0041B2  6B63               	clrf	(memset@c+1)& (0+255),b
 12971  0041B4  6B62               	clrf	memset@c& (0+255),b
 12972  0041B6  6B65               	clrf	(memset@n+1)& (0+255),b
 12973  0041B8  0E08               	movlw	8
 12974  0041BA  6F64               	movwf	memset@n& (0+255),b
 12975  0041BC  EC61  F03C         	call	_memset	;wreg free
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;DeviceManager.c: 56: for(i=0;i<20;i++)
 12979  0041C0  6B97               	clrf	IsNetworkDevice@i& (0+255),b
 12980  0041C2  6B98               	clrf	(IsNetworkDevice@i+1)& (0+255),b
 12981  0041C4                     l12909:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;DeviceManager.c: 57: {
 12985                           ;DeviceManager.c: 58: if(isSameAddress(address,list[i].address)==1)
 12986  0041C4  EE20  F081         	lfsr	2,IsNetworkDevice@address
 12987  0041C8  EE00  F070         	lfsr	0,isSameAddress@a1
 12988  0041CC  0E07               	movlw	7
 12989  0041CE                     u18661:
 12990  0041CE  CFDB FFEB          	movff	plusw2,plusw0
 12991  0041D2  06E8               	decf	wreg,f,c
 12992  0041D4  E2FC               	bc	u18661
 12993  0041D6  0E11               	movlw	17
 12994  0041D8  0397               	mulwf	IsNetworkDevice@i& (0+255),b
 12995  0041DA  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 12996  0041DE  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 12997  0041E2  0398               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 12998  0041E4  50F3               	movf	prodl,w,c
 12999  0041E6  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13000  0041E8  0EF6               	movlw	low _list
 13001  0041EA  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13002  0041EC  6ED9               	movwf	fsr2l,c
 13003  0041EE  0E0B               	movlw	high _list
 13004  0041F0  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13005  0041F2  6EDA               	movwf	fsr2h,c
 13006  0041F4  EE00  F078         	lfsr	0,isSameAddress@a2
 13007  0041F8  0E07               	movlw	7
 13008  0041FA                     u18671:
 13009  0041FA  CFDB FFEB          	movff	plusw2,plusw0
 13010  0041FE  06E8               	decf	wreg,f,c
 13011  004200  E2FC               	bc	u18671
 13012  004202  ECC5  F03C         	call	_isSameAddress	;wreg free
 13013  004206  06E8               	decf	wreg,f,c
 13014  004208  E12A               	bnz	l12919
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;DeviceManager.c: 59: {
 13018                           ;DeviceManager.c: 60: list[i].LastHeard=MSTickGet();
 13019  00420A  EC70  F03B         	call	_MSTickGet	;wreg free
 13020  00420E  0E11               	movlw	17
 13021  004210  0397               	mulwf	IsNetworkDevice@i& (0+255),b
 13022  004212  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13023  004216  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13024  00421A  0398               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13025  00421C  50F3               	movf	prodl,w,c
 13026  00421E  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13027  004220  0EFE               	movlw	low (_list+8)
 13028  004222  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13029  004224  6ED9               	movwf	fsr2l,c
 13030  004226  0E0B               	movlw	high (_list+8)
 13031  004228  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13032  00422A  6EDA               	movwf	fsr2h,c
 13033  00422C  0E07               	movlw	7
 13034  00422E                     u18691:
 13035  00422E  CFEB FFDB          	movff	plusw0,plusw2
 13036  004232  06E8               	decf	wreg,f,c
 13037  004234  E2FC               	bc	u18691
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;DeviceManager.c: 61: list[i].devType=devType;
 13041  004236  0E11               	movlw	17
 13042  004238  0397               	mulwf	IsNetworkDevice@i& (0+255),b
 13043  00423A  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13044  00423E  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13045  004242  0398               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13046  004244  50F3               	movf	prodl,w,c
 13047  004246  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13048  004248  0E06               	movlw	low (_list+16)
 13049  00424A  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13050  00424C  6ED9               	movwf	fsr2l,c
 13051  00424E  0E0C               	movlw	high (_list+16)
 13052  004250  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13053  004252  6EDA               	movwf	fsr2h,c
 13054  004254  C089  FFDF         	movff	IsNetworkDevice@devType,indf2
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;DeviceManager.c: 62: res=1;
 13058  004258  0E01               	movlw	1
 13059  00425A  6F94               	movwf	IsNetworkDevice@res& (0+255),b
 13060                           
 13061                           ;DeviceManager.c: 63: break;
 13062  00425C  D029               	goto	l12929
 13063  00425E                     l12919:
 13064                           
 13065                           ; BSR set to: 0
 13066  00425E  0E11               	movlw	17
 13067  004260  0397               	mulwf	IsNetworkDevice@i& (0+255),b
 13068  004262  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13069  004266  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13070  00426A  0398               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13071  00426C  50F3               	movf	prodl,w,c
 13072  00426E  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13073  004270  0EF6               	movlw	low _list
 13074  004272  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13075  004274  6ED9               	movwf	fsr2l,c
 13076  004276  0E0B               	movlw	high _list
 13077  004278  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13078  00427A  6EDA               	movwf	fsr2h,c
 13079  00427C  EE00  F079         	lfsr	0,isInvalidAddress@address
 13080  004280  0E07               	movlw	7
 13081  004282                     u18701:
 13082  004282  CFDB FFEB          	movff	plusw2,plusw0
 13083  004286  06E8               	decf	wreg,f,c
 13084  004288  E2FC               	bc	u18701
 13085  00428A  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 13086  00428E  0900               	iorlw	0
 13087  004290  E008               	bz	l12925
 13088                           
 13089                           ; BSR set to: 0
 13090  004292  2995               	incf	IsNetworkDevice@empty& (0+255),w,b
 13091  004294  E106               	bnz	l12925
 13092  004296  2996               	incf	(IsNetworkDevice@empty+1)& (0+255),w,b
 13093  004298  E104               	bnz	l12925
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;DeviceManager.c: 65: {
 13097                           ;DeviceManager.c: 66: empty=i;
 13098  00429A  C097  F095         	movff	IsNetworkDevice@i,IsNetworkDevice@empty
 13099  00429E  C098  F096         	movff	IsNetworkDevice@i+1,IsNetworkDevice@empty+1
 13100  0042A2                     l12925:
 13101                           
 13102                           ; BSR set to: 0
 13103  0042A2  4B97               	infsnz	IsNetworkDevice@i& (0+255),f,b
 13104  0042A4  2B98               	incf	(IsNetworkDevice@i+1)& (0+255),f,b
 13105                           
 13106                           ; BSR set to: 0
 13107  0042A6  5198               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 13108  0042A8  E103               	bnz	u18730
 13109  0042AA  0E14               	movlw	20
 13110  0042AC  5D97               	subwf	IsNetworkDevice@i& (0+255),w,b
 13111  0042AE  E38A               	bnc	l12909
 13112  0042B0                     u18730:
 13113  0042B0                     l12929:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;DeviceManager.c: 67: }
 13117                           ;DeviceManager.c: 68: }
 13118                           ;DeviceManager.c: 69: if(i>=20)
 13119  0042B0  5198               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 13120  0042B2  E103               	bnz	u18740
 13121  0042B4  0E14               	movlw	20
 13122  0042B6  5D97               	subwf	IsNetworkDevice@i& (0+255),w,b
 13123  0042B8  E346               	bnc	l12941
 13124  0042BA                     u18740:
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;DeviceManager.c: 70: {
 13128                           ;DeviceManager.c: 72: if(empty<20)
 13129  0042BA  5196               	movf	(IsNetworkDevice@empty+1)& (0+255),w,b
 13130  0042BC  E144               	bnz	l12941
 13131  0042BE  0E14               	movlw	20
 13132  0042C0  5D95               	subwf	IsNetworkDevice@empty& (0+255),w,b
 13133  0042C2  E241               	bc	l12941
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;DeviceManager.c: 73: {
 13137                           ;DeviceManager.c: 74: memcpy(list[empty].address.bytes,address.bytes,NetworkAddressSizeG
      +                          et());
 13138  0042C4  0E11               	movlw	17
 13139  0042C6  0395               	mulwf	IsNetworkDevice@empty& (0+255),b
 13140  0042C8  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13141  0042CC  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13142  0042D0  0396               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13143  0042D2  50F3               	movf	prodl,w,c
 13144  0042D4  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13145  0042D6  0EF6               	movlw	low _list
 13146  0042D8  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13147  0042DA  6F62               	movwf	memcpy@d1& (0+255),b
 13148  0042DC  0E0B               	movlw	high _list
 13149  0042DE  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13150  0042E0  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 13151  0042E2  0E81               	movlw	low IsNetworkDevice@address
 13152  0042E4  6F64               	movwf	memcpy@s1& (0+255),b
 13153  0042E6  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 13154  0042E8  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 13155  0042EC  6F66               	movwf	memcpy@n& (0+255),b
 13156  0042EE  6B67               	clrf	(memcpy@n+1)& (0+255),b
 13157  0042F0  ECFA  F03A         	call	_memcpy	;wreg free
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;DeviceManager.c: 75: list[empty].LastHeard=MSTickGet();
 13161  0042F4  EC70  F03B         	call	_MSTickGet	;wreg free
 13162  0042F8  0E11               	movlw	17
 13163  0042FA  0395               	mulwf	IsNetworkDevice@empty& (0+255),b
 13164  0042FC  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13165  004300  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13166  004304  0396               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13167  004306  50F3               	movf	prodl,w,c
 13168  004308  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13169  00430A  0EFE               	movlw	low (_list+8)
 13170  00430C  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13171  00430E  6ED9               	movwf	fsr2l,c
 13172  004310  0E0B               	movlw	high (_list+8)
 13173  004312  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13174  004314  6EDA               	movwf	fsr2h,c
 13175  004316  0E07               	movlw	7
 13176  004318                     u18761:
 13177  004318  CFEB FFDB          	movff	plusw0,plusw2
 13178  00431C  06E8               	decf	wreg,f,c
 13179  00431E  E2FC               	bc	u18761
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;DeviceManager.c: 76: list[empty].devType=devType;
 13183  004320  0E11               	movlw	17
 13184  004322  0395               	mulwf	IsNetworkDevice@empty& (0+255),b
 13185  004324  CFF3 F08A          	movff	prodl,??_IsNetworkDevice
 13186  004328  CFF4 F08B          	movff	prodh,??_IsNetworkDevice+1
 13187  00432C  0396               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13188  00432E  50F3               	movf	prodl,w,c
 13189  004330  278B               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13190  004332  0E06               	movlw	low (_list+16)
 13191  004334  258A               	addwf	??_IsNetworkDevice& (0+255),w,b
 13192  004336  6ED9               	movwf	fsr2l,c
 13193  004338  0E0C               	movlw	high (_list+16)
 13194  00433A  218B               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13195  00433C  6EDA               	movwf	fsr2h,c
 13196  00433E  C089  FFDF         	movff	IsNetworkDevice@devType,indf2
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;DeviceManager.c: 77: res=1;
 13200  004342  0E01               	movlw	1
 13201  004344  6F94               	movwf	IsNetworkDevice@res& (0+255),b
 13202  004346                     l12941:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;DeviceManager.c: 78: }
 13206                           ;DeviceManager.c: 79: }
 13207                           ;DeviceManager.c: 83: return(res);
 13208  004346  5194               	movf	IsNetworkDevice@res& (0+255),w,b
 13209                           
 13210                           ; BSR set to: 0
 13211  004348  0012               	return		;funcret
 13212  00434A                     __end_of_IsNetworkDevice:
 13213                           	opt stack 0
 13214                           tblptru	equ	0xFF8
 13215                           tblptrh	equ	0xFF7
 13216                           tblptrl	equ	0xFF6
 13217                           tablat	equ	0xFF5
 13218                           prodh	equ	0xFF4
 13219                           prodl	equ	0xFF3
 13220                           postinc0	equ	0xFEE
 13221                           plusw0	equ	0xFEB
 13222                           fsr0h	equ	0xFEA
 13223                           fsr0l	equ	0xFE9
 13224                           wreg	equ	0xFE8
 13225                           indf1	equ	0xFE7
 13226                           postdec1	equ	0xFE5
 13227                           plusw1	equ	0xFE3
 13228                           fsr1h	equ	0xFE2
 13229                           fsr1l	equ	0xFE1
 13230                           indf2	equ	0xFDF
 13231                           postinc2	equ	0xFDE
 13232                           postdec2	equ	0xFDD
 13233                           plusw2	equ	0xFDB
 13234                           fsr2h	equ	0xFDA
 13235                           fsr2l	equ	0xFD9
 13236                           status	equ	0xFD8
 13237                           
 13238 ;; *************** function _DeviceManagerGetDeviceData *****************
 13239 ;; Defined at:
 13240 ;;		line 185 in file "../DeviceManager.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;  address         8   32[BANK0 ] struct addr_t_def
 13243 ;;  data            2   40[BANK0 ] PTR unsigned char 
 13244 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), 
 13245 ;;  isSecure        2   42[BANK0 ] PTR unsigned char 
 13246 ;;		 -> NetworkManagerProcessIncomingData@isSecurePacket(1), 
 13247 ;;  isFormed        2   44[BANK0 ] PTR unsigned char 
 13248 ;;		 -> NetworkManagerProcessIncomingData@isFormed(1), 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;  devBuffer       2    0        PTR struct devDataBuffer
 13251 ;;		 -> NULL(0), 
 13252 ;;  j               2    0        unsigned int 
 13253 ;;  recordLen       2    0        unsigned int 
 13254 ;;  index           2    0        unsigned int 
 13255 ;;  size            2    0        unsigned int 
 13256 ;;  i               2    0        unsigned int 
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  2   32[BANK0 ] unsigned int 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0, cstack
 13261 ;; Tracked objects:
 13262 ;;		On entry : F/0
 13263 ;;		On exit  : F/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13266 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13267 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13269 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13270 ;;Total ram usage:       26 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    6
 13273 ;; This function calls:
 13274 ;;		_NetworkAddressSizeGet
 13275 ;;		_isSameAddress
 13276 ;;		_memcpy
 13277 ;; This function is called by:
 13278 ;;		_NetworkManagerProcessIncomingData
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text40
 13283  007C1C                     __ptext40:
 13284                           	opt stack 0
 13285  007C1C                     _DeviceManagerGetDeviceData:
 13286                           	opt stack 20
 13287                           
 13288                           ; BSR set to: 0
 13289                           
 13290                           ; BSR set to: 0
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;incstack = 0
 13294  007C1C  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;DeviceManager.c: 218: }
 13298                           ;DeviceManager.c: 219: return(size);
 13299                           
 13300                           ; BSR set to: 0
 13301                           
 13302                           ; BSR set to: 0
 13303  007C20  6B80               	clrf	?_DeviceManagerGetDeviceData& (0+255),b
 13304  007C22  6B81               	clrf	(?_DeviceManagerGetDeviceData+1)& (0+255),b
 13305                           
 13306                           ; BSR set to: 0
 13307  007C24  0012               	return		;funcret
 13308  007C26                     __end_of_DeviceManagerGetDeviceData:
 13309                           	opt stack 0
 13310                           tblptru	equ	0xFF8
 13311                           tblptrh	equ	0xFF7
 13312                           tblptrl	equ	0xFF6
 13313                           tablat	equ	0xFF5
 13314                           prodh	equ	0xFF4
 13315                           prodl	equ	0xFF3
 13316                           postinc0	equ	0xFEE
 13317                           plusw0	equ	0xFEB
 13318                           fsr0h	equ	0xFEA
 13319                           fsr0l	equ	0xFE9
 13320                           wreg	equ	0xFE8
 13321                           indf1	equ	0xFE7
 13322                           postdec1	equ	0xFE5
 13323                           plusw1	equ	0xFE3
 13324                           fsr1h	equ	0xFE2
 13325                           fsr1l	equ	0xFE1
 13326                           indf2	equ	0xFDF
 13327                           postinc2	equ	0xFDE
 13328                           postdec2	equ	0xFDD
 13329                           plusw2	equ	0xFDB
 13330                           fsr2h	equ	0xFDA
 13331                           fsr2l	equ	0xFD9
 13332                           status	equ	0xFD8
 13333                           
 13334 ;; *************** function _NetworkDiscoveredEvent *****************
 13335 ;; Defined at:
 13336 ;;		line 385 in file "../src/Bridge.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  PANID           2    0[BANK0 ] unsigned int 
 13339 ;;  rssi            2    2[BANK0 ] unsigned int 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  i               2   10[BANK0 ] unsigned int 
 13342 ;;  empty           2    8[BANK0 ] unsigned int 
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  1    wreg      void 
 13345 ;; Registers used:
 13346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13347 ;; Tracked objects:
 13348 ;;		On entry : F/0
 13349 ;;		On exit  : F/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13353 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13355 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13356 ;;Total ram usage:       12 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:    4
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_radioReceivedPacket
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text41
 13367  00434A                     __ptext41:
 13368                           	opt stack 0
 13369  00434A                     _NetworkDiscoveredEvent:
 13370                           	opt stack 23
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;Bridge.c: 387: uint16_t i;
 13374                           ;Bridge.c: 388: uint16_t empty=0xffff;
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;incstack = 0
 13378  00434A  6968               	setf	NetworkDiscoveredEvent@empty& (0+255),b
 13379  00434C  6969               	setf	(NetworkDiscoveredEvent@empty+1)& (0+255),b
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;Bridge.c: 389: pcnt1++;
 13383  00434E  0102               	movlb	2	; () banked
 13384  004350  4B5C               	infsnz	_pcnt1& (0+255),f,b	;volatile
 13385  004352  2B5D               	incf	(_pcnt1+1)& (0+255),f,b	;volatile
 13386                           
 13387                           ; BSR set to: 2
 13388                           ;Bridge.c: 390: for(i=0;i<5;i++)
 13389  004354  0100               	movlb	0	; () banked
 13390  004356  6B6A               	clrf	NetworkDiscoveredEvent@i& (0+255),b
 13391  004358  6B6B               	clrf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13392  00435A                     l13307:
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;Bridge.c: 391: {
 13396                           ;Bridge.c: 392: if( (ActiveScanResults[i].PANID.Val==PANID) && (ActiveScanResults[i].Cha
      +                          nnel==ActiveScanChannel) )
 13397  00435A  0E05               	movlw	5
 13398  00435C  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13399  00435E  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13400  004362  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13401  004366  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13402  004368  50F3               	movf	prodl,w,c
 13403  00436A  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13404  00436C  0E61               	movlw	low (_ActiveScanResults+1)
 13405  00436E  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13406  004370  6ED9               	movwf	fsr2l,c
 13407  004372  0E02               	movlw	high (_ActiveScanResults+1)
 13408  004374  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13409  004376  6EDA               	movwf	fsr2h,c
 13410  004378  5160               	movf	NetworkDiscoveredEvent@PANID& (0+255),w,b
 13411  00437A  18DE               	xorwf	postinc2,w,c
 13412  00437C  E140               	bnz	l13315
 13413  00437E  5161               	movf	(NetworkDiscoveredEvent@PANID+1)& (0+255),w,b
 13414  004380  18DE               	xorwf	postinc2,w,c
 13415  004382  E13D               	bnz	l13315
 13416                           
 13417                           ; BSR set to: 0
 13418  004384  0E05               	movlw	5
 13419  004386  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13420  004388  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13421  00438C  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13422  004390  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13423  004392  50F3               	movf	prodl,w,c
 13424  004394  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13425  004396  0E60               	movlw	low _ActiveScanResults
 13426  004398  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13427  00439A  6ED9               	movwf	fsr2l,c
 13428  00439C  0E02               	movlw	high _ActiveScanResults
 13429  00439E  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13430  0043A0  6EDA               	movwf	fsr2h,c
 13431  0043A2  0101               	movlb	1	; () banked
 13432  0043A4  51DE               	movf	_ActiveScanChannel& (0+255),w,b
 13433  0043A6  18DE               	xorwf	postinc2,w,c
 13434  0043A8  E12A               	bnz	l13315
 13435                           
 13436                           ; BSR set to: 1
 13437                           ;Bridge.c: 393: {
 13438                           ;Bridge.c: 394: if(ActiveScanResults[i].RSSIValue<rssi)
 13439  0043AA  0E05               	movlw	5
 13440  0043AC  0100               	movlb	0	; () banked
 13441  0043AE  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13442  0043B0  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13443  0043B4  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13444  0043B8  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13445  0043BA  50F3               	movf	prodl,w,c
 13446  0043BC  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13447  0043BE  0E63               	movlw	low (_ActiveScanResults+3)
 13448  0043C0  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13449  0043C2  6ED9               	movwf	fsr2l,c
 13450  0043C4  0E02               	movlw	high (_ActiveScanResults+3)
 13451  0043C6  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13452  0043C8  6EDA               	movwf	fsr2h,c
 13453  0043CA  50DF               	movf	indf2,w,c
 13454  0043CC  6F66               	movwf	(??_NetworkDiscoveredEvent+2)& (0+255),b
 13455  0043CE  6B67               	clrf	(??_NetworkDiscoveredEvent+3)& (0+255),b
 13456  0043D0  5162               	movf	NetworkDiscoveredEvent@rssi& (0+255),w,b
 13457  0043D2  5D66               	subwf	(??_NetworkDiscoveredEvent+2)& (0+255),w,b
 13458  0043D4  5163               	movf	(NetworkDiscoveredEvent@rssi+1)& (0+255),w,b
 13459  0043D6  5967               	subwfb	(??_NetworkDiscoveredEvent+3)& (0+255),w,b
 13460  0043D8  E233               	bc	l13325
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;Bridge.c: 395: {
 13464                           ;Bridge.c: 396: ActiveScanResults[i].RSSIValue=rssi;
 13465  0043DA  0E05               	movlw	5
 13466  0043DC  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13467  0043DE  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13468  0043E2  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13469  0043E6  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13470  0043E8  50F3               	movf	prodl,w,c
 13471  0043EA  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13472  0043EC  0E63               	movlw	low (_ActiveScanResults+3)
 13473  0043EE  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13474  0043F0  6ED9               	movwf	fsr2l,c
 13475  0043F2  0E02               	movlw	high (_ActiveScanResults+3)
 13476  0043F4  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13477  0043F6  6EDA               	movwf	fsr2h,c
 13478  0043F8  C062  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 13479  0043FC  D021               	goto	l13325
 13480  0043FE                     l13315:
 13481                           
 13482                           ;Bridge.c: 399: }
 13483                           ;Bridge.c: 400: if( (ActiveScanResults[i].Flags==0) && (empty==0xffff) )
 13484  0043FE  0E05               	movlw	5
 13485  004400  0100               	movlb	0	; () banked
 13486  004402  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13487  004404  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13488  004408  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13489  00440C  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13490  00440E  50F3               	movf	prodl,w,c
 13491  004410  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13492  004412  0E64               	movlw	low (_ActiveScanResults+4)
 13493  004414  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13494  004416  6ED9               	movwf	fsr2l,c
 13495  004418  0E02               	movlw	high (_ActiveScanResults+4)
 13496  00441A  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13497  00441C  6EDA               	movwf	fsr2h,c
 13498  00441E  50DF               	movf	indf2,w,c
 13499  004420  E108               	bnz	l13321
 13500                           
 13501                           ; BSR set to: 0
 13502  004422  2968               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 13503  004424  E106               	bnz	l13321
 13504  004426  2969               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 13505  004428  E104               	bnz	l13321
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;Bridge.c: 401: {
 13509                           ;Bridge.c: 402: empty=i;
 13510  00442A  C06A  F068         	movff	NetworkDiscoveredEvent@i,NetworkDiscoveredEvent@empty
 13511  00442E  C06B  F069         	movff	NetworkDiscoveredEvent@i+1,NetworkDiscoveredEvent@empty+1
 13512  004432                     l13321:
 13513                           
 13514                           ; BSR set to: 0
 13515  004432  4B6A               	infsnz	NetworkDiscoveredEvent@i& (0+255),f,b
 13516  004434  2B6B               	incf	(NetworkDiscoveredEvent@i+1)& (0+255),f,b
 13517                           
 13518                           ; BSR set to: 0
 13519  004436  516B               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 13520  004438  E103               	bnz	u19730
 13521  00443A  0E05               	movlw	5
 13522  00443C  5D6A               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 13523  00443E  E38D               	bnc	l13307
 13524  004440                     u19730:
 13525  004440                     l13325:
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;Bridge.c: 403: }
 13529                           ;Bridge.c: 404: }
 13530                           ;Bridge.c: 405: if(i>=5)
 13531  004440  516B               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 13532  004442  E104               	bnz	u19740
 13533  004444  0E05               	movlw	5
 13534  004446  5D6A               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 13535  004448  A0D8               	btfss	status,0,c
 13536  00444A  0012               	return	
 13537  00444C                     u19740:
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;Bridge.c: 406: {
 13541                           ;Bridge.c: 407: if(empty!=0xffff)
 13542  00444C  2968               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 13543  00444E  E103               	bnz	u19750
 13544  004450  2969               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 13545  004452  B4D8               	btfsc	status,2,c
 13546  004454  0012               	return	
 13547  004456                     u19750:
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;Bridge.c: 408: {
 13551                           ;Bridge.c: 409: i=empty;
 13552  004456  C068  F06A         	movff	NetworkDiscoveredEvent@empty,NetworkDiscoveredEvent@i
 13553  00445A  C069  F06B         	movff	NetworkDiscoveredEvent@empty+1,NetworkDiscoveredEvent@i+1
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;Bridge.c: 411: ActiveScanResults[i].Flags=1;
 13557  00445E  0E05               	movlw	5
 13558  004460  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13559  004462  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13560  004466  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13561  00446A  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13562  00446C  50F3               	movf	prodl,w,c
 13563  00446E  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13564  004470  0E64               	movlw	low (_ActiveScanResults+4)
 13565  004472  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13566  004474  6ED9               	movwf	fsr2l,c
 13567  004476  0E02               	movlw	high (_ActiveScanResults+4)
 13568  004478  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13569  00447A  6EDA               	movwf	fsr2h,c
 13570  00447C  0E01               	movlw	1
 13571  00447E  6EDF               	movwf	indf2,c
 13572                           
 13573                           ;Bridge.c: 412: ActiveScanResults[i].PANID.Val=PANID;
 13574  004480  0E05               	movlw	5
 13575  004482  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13576  004484  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13577  004488  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13578  00448C  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13579  00448E  50F3               	movf	prodl,w,c
 13580  004490  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13581  004492  0E61               	movlw	low (_ActiveScanResults+1)
 13582  004494  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13583  004496  6ED9               	movwf	fsr2l,c
 13584  004498  0E02               	movlw	high (_ActiveScanResults+1)
 13585  00449A  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13586  00449C  6EDA               	movwf	fsr2h,c
 13587  00449E  C060  FFDE         	movff	NetworkDiscoveredEvent@PANID,postinc2
 13588  0044A2  C061  FFDD         	movff	NetworkDiscoveredEvent@PANID+1,postdec2
 13589                           
 13590                           ;Bridge.c: 413: ActiveScanResults[i].RSSIValue=rssi;
 13591  0044A6  0E05               	movlw	5
 13592  0044A8  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13593  0044AA  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13594  0044AE  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13595  0044B2  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13596  0044B4  50F3               	movf	prodl,w,c
 13597  0044B6  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13598  0044B8  0E63               	movlw	low (_ActiveScanResults+3)
 13599  0044BA  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13600  0044BC  6ED9               	movwf	fsr2l,c
 13601  0044BE  0E02               	movlw	high (_ActiveScanResults+3)
 13602  0044C0  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13603  0044C2  6EDA               	movwf	fsr2h,c
 13604  0044C4  C062  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 13605                           
 13606                           ;Bridge.c: 414: ActiveScanResults[i].Channel=ActiveScanChannel;
 13607  0044C8  0E05               	movlw	5
 13608  0044CA  036A               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13609  0044CC  CFF3 F064          	movff	prodl,??_NetworkDiscoveredEvent
 13610  0044D0  CFF4 F065          	movff	prodh,??_NetworkDiscoveredEvent+1
 13611  0044D4  036B               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13612  0044D6  50F3               	movf	prodl,w,c
 13613  0044D8  2765               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13614  0044DA  0E60               	movlw	low _ActiveScanResults
 13615  0044DC  2564               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13616  0044DE  6ED9               	movwf	fsr2l,c
 13617  0044E0  0E02               	movlw	high _ActiveScanResults
 13618  0044E2  2165               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13619  0044E4  6EDA               	movwf	fsr2h,c
 13620  0044E6  C1DE  FFDF         	movff	_ActiveScanChannel,indf2
 13621                           
 13622                           ; BSR set to: 0
 13623  0044EA  0012               	return		;funcret
 13624  0044EC                     __end_of_NetworkDiscoveredEvent:
 13625                           	opt stack 0
 13626                           tblptru	equ	0xFF8
 13627                           tblptrh	equ	0xFF7
 13628                           tblptrl	equ	0xFF6
 13629                           tablat	equ	0xFF5
 13630                           prodh	equ	0xFF4
 13631                           prodl	equ	0xFF3
 13632                           postinc0	equ	0xFEE
 13633                           plusw0	equ	0xFEB
 13634                           fsr0h	equ	0xFEA
 13635                           fsr0l	equ	0xFE9
 13636                           wreg	equ	0xFE8
 13637                           indf1	equ	0xFE7
 13638                           postdec1	equ	0xFE5
 13639                           plusw1	equ	0xFE3
 13640                           fsr1h	equ	0xFE2
 13641                           fsr1l	equ	0xFE1
 13642                           indf2	equ	0xFDF
 13643                           postinc2	equ	0xFDE
 13644                           postdec2	equ	0xFDD
 13645                           plusw2	equ	0xFDB
 13646                           fsr2h	equ	0xFDA
 13647                           fsr2l	equ	0xFD9
 13648                           status	equ	0xFD8
 13649                           
 13650 ;; *************** function _LE_processReceivedMessage *****************
 13651 ;; Defined at:
 13652 ;;		line 425 in file "../LinkEstimator.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  source          2   61[BANK0 ] PTR struct addr_t_def
 13655 ;;		 -> radioReceivedPacket@source(8), 
 13656 ;;  data            2   63[BANK0 ] PTR unsigned char 
 13657 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
 13658 ;;  len             1   65[BANK0 ] unsigned char 
 13659 ;;  rssi            1   66[BANK0 ] unsigned char 
 13660 ;; Auto vars:     Size  Location     Type
 13661 ;;  ll_addr         8   73[BANK0 ] struct addr_t_def
 13662 ;;  bhdr            2   71[BANK0 ] PTR struct net_routing_h
 13663 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
 13664 ;;  hdr             2   69[BANK0 ] PTR struct linkest_heade
 13665 ;;		 -> RxBuffer.lnk_header(2), RxBuffer(256), 
 13666 ;;  nidx            1   81[BANK0 ] unsigned char 
 13667 ;;  res             1    0        enum E179
 13668 ;;  num_entries     1    0        unsigned char 
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      enum E179
 13671 ;; Registers used:
 13672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13673 ;; Tracked objects:
 13674 ;;		On entry : F/0
 13675 ;;		On exit  : F/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13678 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13679 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;Total ram usage:       21 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:    9
 13685 ;; This function calls:
 13686 ;;		_NetworkAddressSizeGet
 13687 ;;		_RouteManagerShouldInsert
 13688 ;;		_RouterEvicted
 13689 ;;		_le_findEmptyNeighborIdx
 13690 ;;		_le_findIdx
 13691 ;;		_le_findRandomNeighborIdx
 13692 ;;		_le_findWorstNeighborIdx
 13693 ;;		_le_initNeighborIdx
 13694 ;;		_le_updateNeighborEntryIdx
 13695 ;;		_memcpy
 13696 ;; This function is called by:
 13697 ;;		_radioReceivedPacket
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text42
 13702  004C6C                     __ptext42:
 13703                           	opt stack 0
 13704  004C6C                     _LE_processReceivedMessage:
 13705                           	opt stack 18
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;LinkEstimator.c: 428: uint8_t nidx;
 13709                           ;LinkEstimator.c: 429: uint8_t num_entries;
 13710                           ;LinkEstimator.c: 430: net_routing_header_t *bhdr;
 13711                           ;LinkEstimator.c: 431: linkest_header_t* hdr;
 13712                           ;LinkEstimator.c: 432: addr_t ll_addr;
 13713                           ;LinkEstimator.c: 434: bhdr=(net_routing_header_t*)data;
 13714                           
 13715                           ; BSR set to: 0
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;incstack = 0
 13719  004C6C  C09F  F0A7         	movff	LE_processReceivedMessage@data,LE_processReceivedMessage@bhdr
 13720  004C70  C0A0  F0A8         	movff	LE_processReceivedMessage@data+1,LE_processReceivedMessage@bhdr+1
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;LinkEstimator.c: 436: if ( (len >= sizeof (net_routing_header_t)) && (bhdr->packettype=
      +                          =PacketRouting) )
 13724  004C74  0E0F               	movlw	15
 13725  004C76  65A1               	cpfsgt	LE_processReceivedMessage@len& (0+255),b
 13726  004C78  0C0F               	retlw	15
 13727                           
 13728                           ; BSR set to: 0
 13729  004C7A  EE20 F002          	lfsr	2,2
 13730  004C7E  51A7               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13731  004C80  26D9               	addwf	fsr2l,f,c
 13732  004C82  51A8               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13733  004C84  22DA               	addwfc	fsr2h,f,c
 13734  004C86  0E22               	movlw	34
 13735  004C88  18DE               	xorwf	postinc2,w,c
 13736  004C8A  A4D8               	btfss	status,2,c
 13737  004C8C  0012               	return	
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;LinkEstimator.c: 437: {
 13741                           ;LinkEstimator.c: 438: hdr = &bhdr->lnk_header;
 13742  004C8E  0E0E               	movlw	14
 13743  004C90  25A7               	addwf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13744  004C92  6FA5               	movwf	LE_processReceivedMessage@hdr& (0+255),b
 13745  004C94  0E00               	movlw	0
 13746  004C96  21A8               	addwfc	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13747  004C98  6FA6               	movwf	(LE_processReceivedMessage@hdr+1)& (0+255),b
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;LinkEstimator.c: 441: num_entries = hdr->count;
 13751  004C9A  0EA9               	movlw	low LE_processReceivedMessage@ll_addr
 13752  004C9C  6F62               	movwf	memcpy@d1& (0+255),b
 13753  004C9E  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 13754  004CA0  C09D  F064         	movff	LE_processReceivedMessage@source,memcpy@s1
 13755  004CA4  C09E  F065         	movff	LE_processReceivedMessage@source+1,memcpy@s1+1
 13756  004CA8  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 13757  004CAC  6F66               	movwf	memcpy@n& (0+255),b
 13758  004CAE  6B67               	clrf	(memcpy@n+1)& (0+255),b
 13759  004CB0  ECFA  F03A         	call	_memcpy	;wreg free
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;LinkEstimator.c: 457: nidx = le_findIdx(ll_addr);
 13763  004CB4  EE20  F0A9         	lfsr	2,LE_processReceivedMessage@ll_addr
 13764  004CB8  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 13765  004CBC  0E07               	movlw	7
 13766  004CBE                     u19941:
 13767  004CBE  CFDB FFEB          	movff	plusw2,plusw0
 13768  004CC2  06E8               	decf	wreg,f,c
 13769  004CC4  E2FC               	bc	u19941
 13770  004CC6  EC63  F036         	call	_le_findIdx	;wreg free
 13771  004CCA  6FB1               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;LinkEstimator.c: 458: if (nidx != 0xff)
 13775  004CCC  29B1               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13776  004CCE  E001               	bz	l13417
 13777  004CD0  D020               	goto	l13425
 13778  004CD2                     l13417:
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;LinkEstimator.c: 463: {
 13782                           ;LinkEstimator.c: 464: nidx = le_findEmptyNeighborIdx();
 13783  004CD2  EC61  F039         	call	_le_findEmptyNeighborIdx	;wreg free
 13784  004CD6  5160               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
 13785  004CD8  6FB1               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;LinkEstimator.c: 465: if (nidx != 0xff)
 13789  004CDA  29B1               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13790  004CDC  E02C               	bz	l13427
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;LinkEstimator.c: 466: {
 13794                           ;LinkEstimator.c: 468: le_initNeighborIdx(nidx, ll_addr);
 13795  004CDE  EE20  F0A9         	lfsr	2,LE_processReceivedMessage@ll_addr
 13796  004CE2  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
 13797  004CE6  0E07               	movlw	7
 13798  004CE8                     u19971:
 13799  004CE8  CFDB FFEB          	movff	plusw2,plusw0
 13800  004CEC  06E8               	decf	wreg,f,c
 13801  004CEE  E2FC               	bc	u19971
 13802  004CF0  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13803  004CF2  ECEF  F032         	call	_le_initNeighborIdx
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;LinkEstimator.c: 469: neighbor_tbl[nidx].lastseq = hdr->lnkSeqNum;
 13807  004CF6  C0A5  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 13808  004CFA  C0A6  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 13809  004CFE  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13810  004D00  0D11               	mullw	17
 13811  004D02  0E52               	movlw	low (_neighbor_tbl+8)
 13812  004D04  24F3               	addwf	prodl,w,c
 13813  004D06  6EE1               	movwf	fsr1l,c
 13814  004D08  0E0D               	movlw	high (_neighbor_tbl+8)
 13815  004D0A  20F4               	addwfc	prodh,w,c
 13816  004D0C  6EE2               	movwf	fsr1h,c
 13817  004D0E  CFDF FFE7          	movff	indf2,indf1
 13818  004D12                     l13425:
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;LinkEstimator.c: 470: le_updateNeighborEntryIdx(nidx, hdr->lnkSeqNum, bhdr->options.dev
      +                          iceType);
 13822  004D12  C0A5  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 13823  004D16  C0A6  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 13824  004D1A  50DF               	movf	indf2,w,c
 13825  004D1C  6F97               	movwf	le_updateNeighborEntryIdx@seq& (0+255),b
 13826  004D1E  EE20 F003          	lfsr	2,3
 13827  004D22  51A7               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 13828  004D24  26D9               	addwf	fsr2l,f,c
 13829  004D26  51A8               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 13830  004D28  22DA               	addwfc	fsr2h,f,c
 13831  004D2A  50DF               	movf	223,w,c
 13832  004D2C  0B07               	andlw	7
 13833  004D2E  6F98               	movwf	le_updateNeighborEntryIdx@dev& (0+255),b
 13834  004D30  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13835  004D32  EFED  F026         	goto	_le_updateNeighborEntryIdx
 13836  004D36                     l13427:
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;LinkEstimator.c: 472: {
 13840                           ;LinkEstimator.c: 473: nidx = le_findWorstNeighborIdx(EvictETXThreshold);
 13841  004D36  0E41               	movlw	65
 13842  004D38  ECE5  F028         	call	_le_findWorstNeighborIdx
 13843  004D3C  5180               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
 13844  004D3E  6FB1               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;LinkEstimator.c: 474: if (nidx != 0xff)
 13848  004D40  29B1               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13849  004D42  E01B               	bz	l13435
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;LinkEstimator.c: 475: {
 13853                           ;LinkEstimator.c: 478: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 13854  004D44  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13855  004D46  0D11               	mullw	17
 13856  004D48  0E4A               	movlw	low _neighbor_tbl
 13857  004D4A  24F3               	addwf	prodl,w,c
 13858  004D4C  6ED9               	movwf	fsr2l,c
 13859  004D4E  0E0D               	movlw	high _neighbor_tbl
 13860  004D50  20F4               	addwfc	prodh,w,c
 13861  004D52  6EDA               	movwf	fsr2h,c
 13862  004D54  EE00  F08E         	lfsr	0,RouterEvicted@address
 13863  004D58  0E07               	movlw	7
 13864  004D5A                     u19991:
 13865  004D5A  CFDB FFEB          	movff	plusw2,plusw0
 13866  004D5E  06E8               	decf	wreg,f,c
 13867  004D60  E2FC               	bc	u19991
 13868  004D62  ECE0  F02E         	call	_RouterEvicted	;wreg free
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;LinkEstimator.c: 479: le_initNeighborIdx(nidx, ll_addr);
 13872  004D66  EE20  F0A9         	lfsr	2,LE_processReceivedMessage@ll_addr
 13873  004D6A  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
 13874  004D6E  0E07               	movlw	7
 13875  004D70                     u20001:
 13876  004D70  CFDB FFEB          	movff	plusw2,plusw0
 13877  004D74  06E8               	decf	wreg,f,c
 13878  004D76  E2FC               	bc	u20001
 13879  004D78  D02D               	goto	L6
 13880  004D7A                     l13435:
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;LinkEstimator.c: 481: {
 13884                           ;LinkEstimator.c: 488: if (rssi>=rssiThreshold)
 13885  004D7A  0E18               	movlw	24
 13886  004D7C  65A2               	cpfsgt	LE_processReceivedMessage@rssi& (0+255),b
 13887  004D7E  0C18               	retlw	24
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;LinkEstimator.c: 489: {
 13891                           ;LinkEstimator.c: 490: if(RouteManagerShouldInsert(bhdr)==1)
 13892  004D80  C0A7  F081         	movff	LE_processReceivedMessage@bhdr,RouteManagerShouldInsert@hdr
 13893  004D84  C0A8  F082         	movff	LE_processReceivedMessage@bhdr+1,RouteManagerShouldInsert@hdr+1
 13894  004D88  ECB9  F02C         	call	_RouteManagerShouldInsert	;wreg free
 13895  004D8C  06E8               	decf	wreg,f,c
 13896  004D8E  A4D8               	btfss	status,2,c
 13897  004D90  0012               	return	
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;LinkEstimator.c: 491: {
 13901                           ;LinkEstimator.c: 492: nidx = le_findRandomNeighborIdx();
 13902  004D92  EC5F  F01D         	call	_le_findRandomNeighborIdx	;wreg free
 13903  004D96  5180               	movf	?_le_findRandomNeighborIdx& (0+255),w,b
 13904  004D98  6FB1               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;LinkEstimator.c: 493: if (nidx != 0xff)
 13908  004D9A  29B1               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 13909  004D9C  B4D8               	btfsc	status,2,c
 13910  004D9E  0012               	return	
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;LinkEstimator.c: 494: {
 13914                           ;LinkEstimator.c: 495: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 13915  004DA0  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13916  004DA2  0D11               	mullw	17
 13917  004DA4  0E4A               	movlw	low _neighbor_tbl
 13918  004DA6  24F3               	addwf	prodl,w,c
 13919  004DA8  6ED9               	movwf	fsr2l,c
 13920  004DAA  0E0D               	movlw	high _neighbor_tbl
 13921  004DAC  20F4               	addwfc	prodh,w,c
 13922  004DAE  6EDA               	movwf	fsr2h,c
 13923  004DB0  EE00  F08E         	lfsr	0,RouterEvicted@address
 13924  004DB4  0E07               	movlw	7
 13925  004DB6                     u20041:
 13926  004DB6  CFDB FFEB          	movff	plusw2,plusw0
 13927  004DBA  06E8               	decf	wreg,f,c
 13928  004DBC  E2FC               	bc	u20041
 13929  004DBE  ECE0  F02E         	call	_RouterEvicted	;wreg free
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;LinkEstimator.c: 496: le_initNeighborIdx(nidx, ll_addr);
 13933  004DC2  EE20  F0A9         	lfsr	2,LE_processReceivedMessage@ll_addr
 13934  004DC6  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
 13935  004DCA  0E07               	movlw	7
 13936  004DCC                     u20051:
 13937  004DCC  CFDB FFEB          	movff	plusw2,plusw0
 13938  004DD0  06E8               	decf	wreg,f,c
 13939  004DD2  E2FC               	bc	u20051
 13940  004DD4                     L6:
 13941  004DD4  51B1               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 13942  004DD6  EFEF  F032         	goto	_le_initNeighborIdx
 13943  004DDA                     __end_of_LE_processReceivedMessage:
 13944                           	opt stack 0
 13945                           tblptru	equ	0xFF8
 13946                           tblptrh	equ	0xFF7
 13947                           tblptrl	equ	0xFF6
 13948                           tablat	equ	0xFF5
 13949                           prodh	equ	0xFF4
 13950                           prodl	equ	0xFF3
 13951                           postinc0	equ	0xFEE
 13952                           plusw0	equ	0xFEB
 13953                           fsr0h	equ	0xFEA
 13954                           fsr0l	equ	0xFE9
 13955                           wreg	equ	0xFE8
 13956                           indf1	equ	0xFE7
 13957                           postdec1	equ	0xFE5
 13958                           plusw1	equ	0xFE3
 13959                           fsr1h	equ	0xFE2
 13960                           fsr1l	equ	0xFE1
 13961                           indf2	equ	0xFDF
 13962                           postinc2	equ	0xFDE
 13963                           postdec2	equ	0xFDD
 13964                           plusw2	equ	0xFDB
 13965                           fsr2h	equ	0xFDA
 13966                           fsr2l	equ	0xFD9
 13967                           status	equ	0xFD8
 13968                           
 13969 ;; *************** function _le_updateNeighborEntryIdx *****************
 13970 ;; Defined at:
 13971 ;;		line 339 in file "../LinkEstimator.c"
 13972 ;; Parameters:    Size  Location     Type
 13973 ;;  idx             1    wreg     unsigned char 
 13974 ;;  seq             1   55[BANK0 ] unsigned char 
 13975 ;;  dev             1   56[BANK0 ] enum E144
 13976 ;; Auto vars:     Size  Location     Type
 13977 ;;  idx             1   60[BANK0 ] unsigned char 
 13978 ;;  packetGap       1   59[BANK0 ] unsigned char 
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  1    wreg      void 
 13981 ;; Registers used:
 13982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13983 ;; Tracked objects:
 13984 ;;		On entry : F/0
 13985 ;;		On exit  : F/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13992 ;;Total ram usage:        6 bytes
 13993 ;; Hardware stack levels used:    1
 13994 ;; Hardware stack levels required when called:    7
 13995 ;; This function calls:
 13996 ;;		_le_initNeighborIdx
 13997 ;;		_le_updateNeighborTableEst
 13998 ;; This function is called by:
 13999 ;;		_LE_processReceivedMessage
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           	psect	text43
 14004  004DDA                     __ptext43:
 14005                           	opt stack 0
 14006  004DDA                     _le_updateNeighborEntryIdx:
 14007                           	opt stack 19
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;incstack = 0
 14011                           ;le_updateNeighborEntryIdx@idx stored from wreg
 14012  004DDA  6F9C               	movwf	le_updateNeighborEntryIdx@idx& (0+255),b
 14013                           
 14014                           ;LinkEstimator.c: 341: uint8_t packetGap;
 14015                           ;LinkEstimator.c: 343: if (neighbor_tbl[idx].flags & 0x4)
 14016  004DDC  0100               	movlb	0	; () banked
 14017  004DDE  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14018  004DE0  0D11               	mullw	17
 14019  004DE2  0E55               	movlw	low (_neighbor_tbl+11)
 14020  004DE4  24F3               	addwf	prodl,w,c
 14021  004DE6  6ED9               	movwf	fsr2l,c
 14022  004DE8  0E0D               	movlw	high (_neighbor_tbl+11)
 14023  004DEA  20F4               	addwfc	prodh,w,c
 14024  004DEC  6EDA               	movwf	fsr2h,c
 14025  004DEE  A4DF               	btfss	indf2,2,c
 14026  004DF0  D00A               	goto	l1540
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;LinkEstimator.c: 344: {
 14030                           ;LinkEstimator.c: 346: neighbor_tbl[idx].flags &= ~0x4;
 14031  004DF2  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14032  004DF4  0D11               	mullw	17
 14033  004DF6  0E55               	movlw	low (_neighbor_tbl+11)
 14034  004DF8  24F3               	addwf	prodl,w,c
 14035  004DFA  6ED9               	movwf	fsr2l,c
 14036  004DFC  0E0D               	movlw	high (_neighbor_tbl+11)
 14037  004DFE  20F4               	addwfc	prodh,w,c
 14038  004E00  6EDA               	movwf	fsr2h,c
 14039  004E02  0EFB               	movlw	251
 14040  004E04  16DF               	andwf	indf2,f,c
 14041  004E06                     l1540:
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;LinkEstimator.c: 347: }
 14045                           ;LinkEstimator.c: 349: neighbor_tbl[idx].flags|=(dev<<4);
 14046  004E06  C098  F099         	movff	le_updateNeighborEntryIdx@dev,??_le_updateNeighborEntryIdx
 14047  004E0A  3B99               	swapf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14048  004E0C  0EF0               	movlw	240
 14049  004E0E  1799               	andwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14050  004E10  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14051  004E12  0D11               	mullw	17
 14052  004E14  0E55               	movlw	low (_neighbor_tbl+11)
 14053  004E16  24F3               	addwf	prodl,w,c
 14054  004E18  6ED9               	movwf	fsr2l,c
 14055  004E1A  0E0D               	movlw	high (_neighbor_tbl+11)
 14056  004E1C  20F4               	addwfc	prodh,w,c
 14057  004E1E  6EDA               	movwf	fsr2h,c
 14058  004E20  5199               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14059  004E22  12DF               	iorwf	indf2,f,c
 14060                           
 14061                           ;LinkEstimator.c: 351: packetGap = seq - neighbor_tbl[idx].lastseq;
 14062  004E24  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14063  004E26  0D11               	mullw	17
 14064  004E28  0E52               	movlw	low (_neighbor_tbl+8)
 14065  004E2A  24F3               	addwf	prodl,w,c
 14066  004E2C  6ED9               	movwf	fsr2l,c
 14067  004E2E  0E0D               	movlw	high (_neighbor_tbl+8)
 14068  004E30  20F4               	addwfc	prodh,w,c
 14069  004E32  6EDA               	movwf	fsr2h,c
 14070  004E34  50DF               	movf	indf2,w,c
 14071  004E36  6F99               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 14072  004E38  5199               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14073  004E3A  5D97               	subwf	le_updateNeighborEntryIdx@seq& (0+255),w,b
 14074  004E3C  6F9B               	movwf	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14075                           
 14076                           ;LinkEstimator.c: 354: neighbor_tbl[idx].lastseq = seq;
 14077  004E3E  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14078  004E40  0D11               	mullw	17
 14079  004E42  0E52               	movlw	low (_neighbor_tbl+8)
 14080  004E44  24F3               	addwf	prodl,w,c
 14081  004E46  6ED9               	movwf	fsr2l,c
 14082  004E48  0E0D               	movlw	high (_neighbor_tbl+8)
 14083  004E4A  20F4               	addwfc	prodh,w,c
 14084  004E4C  6EDA               	movwf	fsr2h,c
 14085  004E4E  C097  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 14086                           
 14087                           ;LinkEstimator.c: 355: neighbor_tbl[idx].rcvcnt++;
 14088  004E52  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14089  004E54  0D11               	mullw	17
 14090  004E56  0E53               	movlw	low (_neighbor_tbl+9)
 14091  004E58  24F3               	addwf	prodl,w,c
 14092  004E5A  6ED9               	movwf	fsr2l,c
 14093  004E5C  0E0D               	movlw	high (_neighbor_tbl+9)
 14094  004E5E  20F4               	addwfc	prodh,w,c
 14095  004E60  6EDA               	movwf	fsr2h,c
 14096  004E62  2ADF               	incf	indf2,f,c
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;LinkEstimator.c: 356: if (packetGap > 0)
 14100  004E64  519B               	movf	le_updateNeighborEntryIdx@packetGap& (0+255),w,b
 14101  004E66  E00D               	bz	l13177
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;LinkEstimator.c: 357: {
 14105                           ;LinkEstimator.c: 358: neighbor_tbl[idx].failcnt += packetGap - 1;
 14106  004E68  C09B  F099         	movff	le_updateNeighborEntryIdx@packetGap,??_le_updateNeighborEntryIdx
 14107  004E6C  0799               	decf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14108  004E6E  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14109  004E70  0D11               	mullw	17
 14110  004E72  0E54               	movlw	low (_neighbor_tbl+10)
 14111  004E74  24F3               	addwf	prodl,w,c
 14112  004E76  6ED9               	movwf	fsr2l,c
 14113  004E78  0E0D               	movlw	high (_neighbor_tbl+10)
 14114  004E7A  20F4               	addwfc	prodh,w,c
 14115  004E7C  6EDA               	movwf	fsr2h,c
 14116  004E7E  5199               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14117  004E80  26DF               	addwf	indf2,f,c
 14118  004E82                     l13177:
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;LinkEstimator.c: 359: }
 14122                           ;LinkEstimator.c: 361: if (packetGap > 10)
 14123  004E82  0E0A               	movlw	10
 14124  004E84  659B               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14125  004E86  D027               	goto	l13185
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;LinkEstimator.c: 362: {
 14129                           ;LinkEstimator.c: 363: le_initNeighborIdx(idx, neighbor_tbl[idx].ll_addr);
 14130  004E88  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14131  004E8A  0D11               	mullw	17
 14132  004E8C  0E4A               	movlw	low _neighbor_tbl
 14133  004E8E  24F3               	addwf	prodl,w,c
 14134  004E90  6ED9               	movwf	fsr2l,c
 14135  004E92  0E0D               	movlw	high _neighbor_tbl
 14136  004E94  20F4               	addwfc	prodh,w,c
 14137  004E96  6EDA               	movwf	fsr2h,c
 14138  004E98  EE00  F060         	lfsr	0,le_initNeighborIdx@ll_addr
 14139  004E9C  0E07               	movlw	7
 14140  004E9E                     u19451:
 14141  004E9E  CFDB FFEB          	movff	plusw2,plusw0
 14142  004EA2  06E8               	decf	wreg,f,c
 14143  004EA4  E2FC               	bc	u19451
 14144  004EA6  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14145  004EA8  ECEF  F032         	call	_le_initNeighborIdx
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;LinkEstimator.c: 364: neighbor_tbl[idx].lastseq = seq;
 14149  004EAC  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14150  004EAE  0D11               	mullw	17
 14151  004EB0  0E52               	movlw	low (_neighbor_tbl+8)
 14152  004EB2  24F3               	addwf	prodl,w,c
 14153  004EB4  6ED9               	movwf	fsr2l,c
 14154  004EB6  0E0D               	movlw	high (_neighbor_tbl+8)
 14155  004EB8  20F4               	addwfc	prodh,w,c
 14156  004EBA  6EDA               	movwf	fsr2h,c
 14157  004EBC  C097  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;LinkEstimator.c: 365: neighbor_tbl[idx].rcvcnt = 1;
 14161  004EC0  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14162  004EC2  0D11               	mullw	17
 14163  004EC4  0E53               	movlw	low (_neighbor_tbl+9)
 14164  004EC6  24F3               	addwf	prodl,w,c
 14165  004EC8  6ED9               	movwf	fsr2l,c
 14166  004ECA  0E0D               	movlw	high (_neighbor_tbl+9)
 14167  004ECC  20F4               	addwfc	prodh,w,c
 14168  004ECE  6EDA               	movwf	fsr2h,c
 14169  004ED0  0E01               	movlw	1
 14170  004ED2  6EDF               	movwf	indf2,c
 14171                           
 14172                           ;LinkEstimator.c: 366: } else if (((neighbor_tbl[idx].rcvcnt + neighbor_tbl[idx].failcnt
      +                          ) >= 3)
 14173  004ED4  0C01               	retlw	1
 14174  004ED6                     l13185:
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;LinkEstimator.c: 367: || (packetGap >= 3))
 14178  004ED6  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14179  004ED8  0D11               	mullw	17
 14180  004EDA  0E53               	movlw	low (_neighbor_tbl+9)
 14181  004EDC  24F3               	addwf	prodl,w,c
 14182  004EDE  6ED9               	movwf	fsr2l,c
 14183  004EE0  0E0D               	movlw	high (_neighbor_tbl+9)
 14184  004EE2  20F4               	addwfc	prodh,w,c
 14185  004EE4  6EDA               	movwf	fsr2h,c
 14186  004EE6  50DF               	movf	indf2,w,c
 14187  004EE8  6F99               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 14188  004EEA  6B9A               	clrf	(??_le_updateNeighborEntryIdx+1)& (0+255),b
 14189  004EEC  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14190  004EEE  0D11               	mullw	17
 14191  004EF0  0E54               	movlw	low (_neighbor_tbl+10)
 14192  004EF2  24F3               	addwf	prodl,w,c
 14193  004EF4  6ED9               	movwf	fsr2l,c
 14194  004EF6  0E0D               	movlw	high (_neighbor_tbl+10)
 14195  004EF8  20F4               	addwfc	prodh,w,c
 14196  004EFA  6EDA               	movwf	fsr2h,c
 14197  004EFC  50DF               	movf	indf2,w,c
 14198  004EFE  2799               	addwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14199  004F00  0E00               	movlw	0
 14200  004F02  239A               	addwfc	(??_le_updateNeighborEntryIdx+1)& (0+255),f,b
 14201  004F04  BF9A               	btfsc	(??_le_updateNeighborEntryIdx+1)& (0+255),7,b
 14202  004F06  D005               	goto	l13187
 14203  004F08  519A               	movf	(??_le_updateNeighborEntryIdx+1)& (0+255),w,b
 14204  004F0A  E106               	bnz	l13189
 14205  004F0C  0E03               	movlw	3
 14206  004F0E  5D99               	subwf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14207  004F10  E203               	bc	l13189
 14208  004F12                     l13187:
 14209                           
 14210                           ; BSR set to: 0
 14211  004F12  0E02               	movlw	2
 14212  004F14  659B               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14213  004F16  0C02               	retlw	2
 14214  004F18                     l13189:
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;LinkEstimator.c: 368: {
 14218                           ;LinkEstimator.c: 369: le_updateNeighborTableEst(neighbor_tbl[idx].ll_addr);
 14219  004F18  519C               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14220  004F1A  0D11               	mullw	17
 14221  004F1C  0E4A               	movlw	low _neighbor_tbl
 14222  004F1E  24F3               	addwf	prodl,w,c
 14223  004F20  6ED9               	movwf	fsr2l,c
 14224  004F22  0E0D               	movlw	high _neighbor_tbl
 14225  004F24  20F4               	addwfc	prodh,w,c
 14226  004F26  6EDA               	movwf	fsr2h,c
 14227  004F28  EE00  F080         	lfsr	0,le_updateNeighborTableEst@n
 14228  004F2C  0E07               	movlw	7
 14229  004F2E                     u19481:
 14230  004F2E  CFDB FFEB          	movff	plusw2,plusw0
 14231  004F32  06E8               	decf	wreg,f,c
 14232  004F34  E2FC               	bc	u19481
 14233  004F36  EFE4  F014         	goto	_le_updateNeighborTableEst	;wreg free
 14234  004F3A                     __end_of_le_updateNeighborEntryIdx:
 14235                           	opt stack 0
 14236                           tblptru	equ	0xFF8
 14237                           tblptrh	equ	0xFF7
 14238                           tblptrl	equ	0xFF6
 14239                           tablat	equ	0xFF5
 14240                           prodh	equ	0xFF4
 14241                           prodl	equ	0xFF3
 14242                           postinc0	equ	0xFEE
 14243                           plusw0	equ	0xFEB
 14244                           fsr0h	equ	0xFEA
 14245                           fsr0l	equ	0xFE9
 14246                           wreg	equ	0xFE8
 14247                           indf1	equ	0xFE7
 14248                           postdec1	equ	0xFE5
 14249                           plusw1	equ	0xFE3
 14250                           fsr1h	equ	0xFE2
 14251                           fsr1l	equ	0xFE1
 14252                           indf2	equ	0xFDF
 14253                           postinc2	equ	0xFDE
 14254                           postdec2	equ	0xFDD
 14255                           plusw2	equ	0xFDB
 14256                           fsr2h	equ	0xFDA
 14257                           fsr2l	equ	0xFD9
 14258                           status	equ	0xFD8
 14259                           
 14260 ;; *************** function _le_updateNeighborTableEst *****************
 14261 ;; Defined at:
 14262 ;;		line 297 in file "../LinkEstimator.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  n               8   32[BANK0 ] struct addr_t_def
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  ne              2   53[BANK0 ] PTR struct neighbor_tabl
 14267 ;;		 -> neighbor_tbl(340), 
 14268 ;;  newEst          2   50[BANK0 ] unsigned int 
 14269 ;;  i               1   52[BANK0 ] unsigned char 
 14270 ;;  totalPkt        1   49[BANK0 ] unsigned char 
 14271 ;;  minPkt          1    0        unsigned char 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  1    wreg      void 
 14274 ;; Registers used:
 14275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14276 ;; Tracked objects:
 14277 ;;		On entry : F/0
 14278 ;;		On exit  : F/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14281 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;Total ram usage:       23 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:    6
 14288 ;; This function calls:
 14289 ;;		___lldiv
 14290 ;;		___lwdiv
 14291 ;;		_isSameAddress
 14292 ;;		_le_computeETX
 14293 ;;		_le_updateETX
 14294 ;; This function is called by:
 14295 ;;		_le_updateNeighborEntryIdx
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           	psect	text44
 14300  0029C8                     __ptext44:
 14301                           	opt stack 0
 14302  0029C8                     _le_updateNeighborTableEst:
 14303                           	opt stack 19
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;LinkEstimator.c: 306: for (i = 0; i < 20; i++)
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;incstack = 0
 14310  0029C8  6B94               	clrf	le_updateNeighborTableEst@i& (0+255),b
 14311  0029CA                     l12773:
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;LinkEstimator.c: 307: {
 14315                           ;LinkEstimator.c: 308: ne = &neighbor_tbl[i];
 14316  0029CA  5194               	movf	le_updateNeighborTableEst@i& (0+255),w,b
 14317  0029CC  0D11               	mullw	17
 14318  0029CE  0E4A               	movlw	low _neighbor_tbl
 14319  0029D0  24F3               	addwf	prodl,w,c
 14320  0029D2  6F95               	movwf	le_updateNeighborTableEst@ne& (0+255),b
 14321  0029D4  0E0D               	movlw	high _neighbor_tbl
 14322  0029D6  20F4               	addwfc	prodh,w,c
 14323  0029D8  6F96               	movwf	(le_updateNeighborTableEst@ne+1)& (0+255),b
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;LinkEstimator.c: 309: if (isSameAddress(ne->ll_addr, n))
 14327  0029DA  C095  FFD9         	movff	le_updateNeighborTableEst@ne,fsr2l
 14328  0029DE  C096  FFDA         	movff	le_updateNeighborTableEst@ne+1,fsr2h
 14329  0029E2  EE00  F070         	lfsr	0,isSameAddress@a1
 14330  0029E6  0E07               	movlw	7
 14331  0029E8                     u18271:
 14332  0029E8  CFDB FFEB          	movff	plusw2,plusw0
 14333  0029EC  06E8               	decf	wreg,f,c
 14334  0029EE  E2FC               	bc	u18271
 14335  0029F0  EE20  F080         	lfsr	2,le_updateNeighborTableEst@n
 14336  0029F4  EE00  F078         	lfsr	0,isSameAddress@a2
 14337  0029F8  0E07               	movlw	7
 14338  0029FA                     u18281:
 14339  0029FA  CFDB FFEB          	movff	plusw2,plusw0
 14340  0029FE  06E8               	decf	wreg,f,c
 14341  002A00  E2FC               	bc	u18281
 14342  002A02  ECC5  F03C         	call	_isSameAddress	;wreg free
 14343  002A06  0900               	iorlw	0
 14344  002A08  E101 D137          	bz	l12799
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;LinkEstimator.c: 310: {
 14348                           ;LinkEstimator.c: 311: if (ne->flags & 0x1)
 14349  002A0C  EE20 F00B          	lfsr	2,11
 14350  002A10  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14351  002A12  26D9               	addwf	fsr2l,f,c
 14352  002A14  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14353  002A16  22DA               	addwfc	fsr2h,f,c
 14354  002A18  A0DF               	btfss	indf2,0,c
 14355  002A1A  D12F               	goto	l12799
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;LinkEstimator.c: 312: {
 14359                           ;LinkEstimator.c: 314: totalPkt = ne->rcvcnt + ne->failcnt;
 14360  002A1C  EE20 F00A          	lfsr	2,10
 14361  002A20  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14362  002A22  26D9               	addwf	fsr2l,f,c
 14363  002A24  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14364  002A26  22DA               	addwfc	fsr2h,f,c
 14365  002A28  50DF               	movf	indf2,w,c
 14366  002A2A  6F88               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14367  002A2C  EE20 F009          	lfsr	2,9
 14368  002A30  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14369  002A32  26D9               	addwf	fsr2l,f,c
 14370  002A34  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14371  002A36  22DA               	addwfc	fsr2h,f,c
 14372  002A38  50DF               	movf	indf2,w,c
 14373  002A3A  2588               	addwf	??_le_updateNeighborTableEst& (0+255),w,b
 14374  002A3C  6F91               	movwf	le_updateNeighborTableEst@totalPkt& (0+255),b
 14375                           
 14376                           ;LinkEstimator.c: 316: if ((ne->flags & 0x2)==0)
 14377  002A3E  EE20 F00B          	lfsr	2,11
 14378  002A42  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14379  002A44  26D9               	addwf	fsr2l,f,c
 14380  002A46  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14381  002A48  22DA               	addwfc	fsr2h,f,c
 14382  002A4A  B2DF               	btfsc	indf2,1,c
 14383  002A4C  D073               	goto	l12787
 14384                           
 14385                           ; BSR set to: 0
 14386                           ;LinkEstimator.c: 317: {
 14387                           ;LinkEstimator.c: 318: newEst = (250UL * ne->rcvcnt) / totalPkt;
 14388  002A4E  EE20 F009          	lfsr	2,9
 14389  002A52  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14390  002A54  26D9               	addwf	fsr2l,f,c
 14391  002A56  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14392  002A58  22DA               	addwfc	fsr2h,f,c
 14393  002A5A  50DF               	movf	indf2,w,c
 14394  002A5C  6F88               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14395  002A5E  C088  F089         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 14396  002A62  6B8A               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14397  002A64  6B8B               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14398  002A66  6B8C               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14399  002A68  0EFA               	movlw	250
 14400  002A6A  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14401  002A6C  CFF3 F08D          	movff	prodl,??_le_updateNeighborTableEst+5
 14402  002A70  CFF4 F08E          	movff	prodh,??_le_updateNeighborTableEst+6
 14403  002A74  6B8F               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 14404  002A76  6B90               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 14405  002A78  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14406  002A7A  50F3               	movf	prodl,w,c
 14407  002A7C  278E               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14408  002A7E  50F4               	movf	prodh,w,c
 14409  002A80  238F               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14410  002A82  0E00               	movlw	0
 14411  002A84  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14412  002A86  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14413  002A88  50F3               	movf	prodl,w,c
 14414  002A8A  278E               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14415  002A8C  50F4               	movf	prodh,w,c
 14416  002A8E  238F               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14417  002A90  0E00               	movlw	0
 14418  002A92  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14419  002A94  0EFA               	movlw	250
 14420  002A96  038B               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14421  002A98  50F3               	movf	prodl,w,c
 14422  002A9A  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14423  002A9C  50F4               	movf	prodh,w,c
 14424  002A9E  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14425  002AA0  0E00               	movlw	0
 14426  002AA2  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14427  002AA4  50F3               	movf	prodl,w,c
 14428  002AA6  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14429  002AA8  50F4               	movf	prodh,w,c
 14430  002AAA  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14431  002AAC  0E00               	movlw	0
 14432  002AAE  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14433  002AB0  50F3               	movf	prodl,w,c
 14434  002AB2  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14435  002AB4  50F4               	movf	prodh,w,c
 14436  002AB6  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14437  002AB8  0EFA               	movlw	250
 14438  002ABA  038C               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14439  002ABC  50F3               	movf	prodl,w,c
 14440  002ABE  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14441  002AC0  0E00               	movlw	0
 14442  002AC2  038B               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14443  002AC4  50F3               	movf	prodl,w,c
 14444  002AC6  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14445  002AC8  0E00               	movlw	0
 14446  002ACA  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14447  002ACC  50F3               	movf	prodl,w,c
 14448  002ACE  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14449  002AD0  0E00               	movlw	0
 14450  002AD2  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14451  002AD4  50F3               	movf	prodl,w,c
 14452  002AD6  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14453  002AD8  C08D  F060         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 14454  002ADC  C08E  F061         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 14455  002AE0  C08F  F062         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 14456  002AE4  C090  F063         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 14457  002AE8  5191               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 14458  002AEA  6F64               	movwf	___lldiv@divisor& (0+255),b
 14459  002AEC  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 14460  002AEE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 14461  002AF0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 14462  002AF2  ECAB  F034         	call	___lldiv	;wreg free
 14463  002AF6  C060  F092         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 14464  002AFA  C061  F093         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;LinkEstimator.c: 319: ne->inquality = newEst;
 14468  002AFE  EE20 F00C          	lfsr	2,12
 14469  002B02  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14470  002B04  26D9               	addwf	fsr2l,f,c
 14471  002B06  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14472  002B08  22DA               	addwfc	fsr2h,f,c
 14473  002B0A  C092  FFDF         	movff	le_updateNeighborTableEst@newEst,indf2
 14474                           
 14475                           ; BSR set to: 0
 14476                           ;LinkEstimator.c: 320: ne->etx = le_computeETX(ne->inquality);
 14477  002B0E  EE20 F00C          	lfsr	2,12
 14478  002B12  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14479  002B14  26D9               	addwf	fsr2l,f,c
 14480  002B16  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14481  002B18  22DA               	addwfc	fsr2h,f,c
 14482  002B1A  50DF               	movf	indf2,w,c
 14483  002B1C  ECBC  F03A         	call	_le_computeETX
 14484  002B20  EE20 F00D          	lfsr	2,13
 14485  002B24  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14486  002B26  26D9               	addwf	fsr2l,f,c
 14487  002B28  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14488  002B2A  22DA               	addwfc	fsr2h,f,c
 14489  002B2C  C068  FFDE         	movff	?_le_computeETX,postinc2
 14490  002B30  C069  FFDD         	movff	?_le_computeETX+1,postdec2
 14491  002B34                     l12787:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;LinkEstimator.c: 321: }
 14495                           ;LinkEstimator.c: 323: ne->flags |= 0x2;
 14496  002B34  EE20 F00B          	lfsr	2,11
 14497  002B38  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14498  002B3A  26D9               	addwf	fsr2l,f,c
 14499  002B3C  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14500  002B3E  22DA               	addwfc	fsr2h,f,c
 14501  002B40  0E00               	movlw	0
 14502  002B42  82DB               	bsf	plusw2,1,c
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;LinkEstimator.c: 325: newEst = (250UL * ne->rcvcnt) / totalPkt;
 14506  002B44  EE20 F009          	lfsr	2,9
 14507  002B48  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14508  002B4A  26D9               	addwf	fsr2l,f,c
 14509  002B4C  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14510  002B4E  22DA               	addwfc	fsr2h,f,c
 14511  002B50  50DF               	movf	indf2,w,c
 14512  002B52  6F88               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14513  002B54  C088  F089         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 14514  002B58  6B8A               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14515  002B5A  6B8B               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14516  002B5C  6B8C               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14517  002B5E  0EFA               	movlw	250
 14518  002B60  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14519  002B62  CFF3 F08D          	movff	prodl,??_le_updateNeighborTableEst+5
 14520  002B66  CFF4 F08E          	movff	prodh,??_le_updateNeighborTableEst+6
 14521  002B6A  6B8F               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 14522  002B6C  6B90               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 14523  002B6E  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14524  002B70  50F3               	movf	prodl,w,c
 14525  002B72  278E               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14526  002B74  50F4               	movf	prodh,w,c
 14527  002B76  238F               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14528  002B78  0E00               	movlw	0
 14529  002B7A  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14530  002B7C  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14531  002B7E  50F3               	movf	prodl,w,c
 14532  002B80  278E               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14533  002B82  50F4               	movf	prodh,w,c
 14534  002B84  238F               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14535  002B86  0E00               	movlw	0
 14536  002B88  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14537  002B8A  0EFA               	movlw	250
 14538  002B8C  038B               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14539  002B8E  50F3               	movf	prodl,w,c
 14540  002B90  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14541  002B92  50F4               	movf	prodh,w,c
 14542  002B94  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14543  002B96  0E00               	movlw	0
 14544  002B98  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14545  002B9A  50F3               	movf	prodl,w,c
 14546  002B9C  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14547  002B9E  50F4               	movf	prodh,w,c
 14548  002BA0  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14549  002BA2  0E00               	movlw	0
 14550  002BA4  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14551  002BA6  50F3               	movf	prodl,w,c
 14552  002BA8  278F               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14553  002BAA  50F4               	movf	prodh,w,c
 14554  002BAC  2390               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14555  002BAE  0EFA               	movlw	250
 14556  002BB0  038C               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14557  002BB2  50F3               	movf	prodl,w,c
 14558  002BB4  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14559  002BB6  0E00               	movlw	0
 14560  002BB8  038B               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14561  002BBA  50F3               	movf	prodl,w,c
 14562  002BBC  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14563  002BBE  0E00               	movlw	0
 14564  002BC0  038A               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14565  002BC2  50F3               	movf	prodl,w,c
 14566  002BC4  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14567  002BC6  0E00               	movlw	0
 14568  002BC8  0389               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14569  002BCA  50F3               	movf	prodl,w,c
 14570  002BCC  2790               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14571  002BCE  C08D  F060         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 14572  002BD2  C08E  F061         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 14573  002BD6  C08F  F062         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 14574  002BDA  C090  F063         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 14575  002BDE  5191               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 14576  002BE0  6F64               	movwf	___lldiv@divisor& (0+255),b
 14577  002BE2  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 14578  002BE4  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 14579  002BE6  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 14580  002BE8  ECAB  F034         	call	___lldiv	;wreg free
 14581  002BEC  C060  F092         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 14582  002BF0  C061  F093         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;LinkEstimator.c: 327: ne->inquality = (8 * (uint16_t) ne->inquality + (10 - 8) * newEst
      +                          ) / 10;
 14586  002BF4  EE20 F00C          	lfsr	2,12
 14587  002BF8  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14588  002BFA  26D9               	addwf	fsr2l,f,c
 14589  002BFC  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14590  002BFE  22DA               	addwfc	fsr2h,f,c
 14591  002C00  C092  F088         	movff	le_updateNeighborTableEst@newEst,??_le_updateNeighborTableEst
 14592  002C04  C093  F089         	movff	le_updateNeighborTableEst@newEst+1,??_le_updateNeighborTableEst+1
 14593  002C08  90D8               	bcf	status,0,c
 14594  002C0A  3788               	rlcf	??_le_updateNeighborTableEst& (0+255),f,b
 14595  002C0C  3789               	rlcf	(??_le_updateNeighborTableEst+1)& (0+255),f,b
 14596  002C0E  EE10 F00C          	lfsr	1,12
 14597  002C12  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14598  002C14  26E1               	addwf	fsr1l,f,c
 14599  002C16  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14600  002C18  22E2               	addwfc	fsr1h,f,c
 14601  002C1A  50E7               	movf	indf1,w,c
 14602  002C1C  0D08               	mullw	8
 14603  002C1E  5188               	movf	??_le_updateNeighborTableEst& (0+255),w,b
 14604  002C20  24F3               	addwf	prodl,w,c
 14605  002C22  6F60               	movwf	___lwdiv@dividend& (0+255),b
 14606  002C24  5189               	movf	(??_le_updateNeighborTableEst+1)& (0+255),w,b
 14607  002C26  20F4               	addwfc	prodh,w,c
 14608  002C28  6F61               	movwf	(___lwdiv@dividend+1)& (0+255),b
 14609  002C2A  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
 14610  002C2C  0E0A               	movlw	10
 14611  002C2E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 14612  002C30  EC87  F039         	call	___lwdiv	;wreg free
 14613  002C34  5160               	movf	?___lwdiv& (0+255),w,b
 14614  002C36  6EDF               	movwf	indf2,c
 14615                           
 14616                           ; BSR set to: 0
 14617                           ;LinkEstimator.c: 328: ne->rcvcnt = 0;
 14618  002C38  EE20 F009          	lfsr	2,9
 14619  002C3C  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14620  002C3E  26D9               	addwf	fsr2l,f,c
 14621  002C40  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14622  002C42  22DA               	addwfc	fsr2h,f,c
 14623  002C44  6ADF               	clrf	indf2,c
 14624                           
 14625                           ; BSR set to: 0
 14626                           ;LinkEstimator.c: 329: ne->failcnt = 0;
 14627  002C46  EE20 F00A          	lfsr	2,10
 14628  002C4A  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14629  002C4C  26D9               	addwf	fsr2l,f,c
 14630  002C4E  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14631  002C50  22DA               	addwfc	fsr2h,f,c
 14632  002C52  6ADF               	clrf	indf2,c
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;LinkEstimator.c: 330: le_updateETX(ne, le_computeETX(ne->inquality));
 14636  002C54  C095  F06D         	movff	le_updateNeighborTableEst@ne,le_updateETX@ne
 14637  002C58  C096  F06E         	movff	le_updateNeighborTableEst@ne+1,le_updateETX@ne+1
 14638  002C5C  EE20 F00C          	lfsr	2,12
 14639  002C60  5195               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14640  002C62  26D9               	addwf	fsr2l,f,c
 14641  002C64  5196               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14642  002C66  22DA               	addwfc	fsr2h,f,c
 14643  002C68  50DF               	movf	indf2,w,c
 14644  002C6A  ECBC  F03A         	call	_le_computeETX
 14645  002C6E  C068  F06F         	movff	?_le_computeETX,le_updateETX@newEst
 14646  002C72  C069  F070         	movff	?_le_computeETX+1,le_updateETX@newEst+1
 14647  002C76  ECF7  F036         	call	_le_updateETX	;wreg free
 14648  002C7A                     l12799:
 14649                           
 14650                           ; BSR set to: 0
 14651  002C7A  2B94               	incf	le_updateNeighborTableEst@i& (0+255),f,b
 14652                           
 14653                           ; BSR set to: 0
 14654  002C7C  0E13               	movlw	19
 14655  002C7E  6594               	cpfsgt	le_updateNeighborTableEst@i& (0+255),b
 14656  002C80  D6A4               	goto	l12773
 14657  002C82  0C13               	retlw	19
 14658  002C84                     __end_of_le_updateNeighborTableEst:
 14659                           	opt stack 0
 14660                           tblptru	equ	0xFF8
 14661                           tblptrh	equ	0xFF7
 14662                           tblptrl	equ	0xFF6
 14663                           tablat	equ	0xFF5
 14664                           prodh	equ	0xFF4
 14665                           prodl	equ	0xFF3
 14666                           postinc0	equ	0xFEE
 14667                           plusw0	equ	0xFEB
 14668                           fsr0h	equ	0xFEA
 14669                           fsr0l	equ	0xFE9
 14670                           wreg	equ	0xFE8
 14671                           indf1	equ	0xFE7
 14672                           postdec1	equ	0xFE5
 14673                           plusw1	equ	0xFE3
 14674                           fsr1h	equ	0xFE2
 14675                           fsr1l	equ	0xFE1
 14676                           indf2	equ	0xFDF
 14677                           postinc2	equ	0xFDE
 14678                           postdec2	equ	0xFDD
 14679                           plusw2	equ	0xFDB
 14680                           fsr2h	equ	0xFDA
 14681                           fsr2l	equ	0xFD9
 14682                           status	equ	0xFD8
 14683                           
 14684 ;; *************** function _le_updateETX *****************
 14685 ;; Defined at:
 14686 ;;		line 292 in file "../LinkEstimator.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;  ne              2   13[BANK0 ] PTR struct neighbor_tabl
 14689 ;;		 -> neighbor_tbl(340), 
 14690 ;;  newEst          2   15[BANK0 ] unsigned int 
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;		None
 14693 ;; Return value:  Size  Location     Type
 14694 ;;                  1    wreg      void 
 14695 ;; Registers used:
 14696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14697 ;; Tracked objects:
 14698 ;;		On entry : F/0
 14699 ;;		On exit  : F/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14705 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14706 ;;Total ram usage:        8 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    5
 14709 ;; This function calls:
 14710 ;;		___lwdiv
 14711 ;; This function is called by:
 14712 ;;		_le_updateNeighborTableEst
 14713 ;; This function uses a non-reentrant model
 14714 ;;
 14715                           
 14716                           	psect	text45
 14717  006DEE                     __ptext45:
 14718                           	opt stack 0
 14719  006DEE                     _le_updateETX:
 14720                           	opt stack 19
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;LinkEstimator.c: 294: ne->etx = ((uint16_t) 8 * ne->etx + (uint16_t) (10 - 8) * newEst)
      +                           / 10;
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;incstack = 0
 14727  006DEE  C06F  F071         	movff	le_updateETX@newEst,??_le_updateETX
 14728  006DF2  C070  F072         	movff	le_updateETX@newEst+1,??_le_updateETX+1
 14729  006DF6  90D8               	bcf	status,0,c
 14730  006DF8  3771               	rlcf	??_le_updateETX& (0+255),f,b
 14731  006DFA  3772               	rlcf	(??_le_updateETX+1)& (0+255),f,b
 14732  006DFC  EE20 F00D          	lfsr	2,13
 14733  006E00  516D               	movf	le_updateETX@ne& (0+255),w,b
 14734  006E02  26D9               	addwf	fsr2l,f,c
 14735  006E04  516E               	movf	(le_updateETX@ne+1)& (0+255),w,b
 14736  006E06  22DA               	addwfc	fsr2h,f,c
 14737  006E08  CFDE F073          	movff	postinc2,??_le_updateETX+2
 14738  006E0C  CFDD F074          	movff	postdec2,??_le_updateETX+3
 14739  006E10  90D8               	bcf	status,0,c
 14740  006E12  3773               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14741  006E14  3774               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14742  006E16  90D8               	bcf	status,0,c
 14743  006E18  3773               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14744  006E1A  3774               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14745  006E1C  90D8               	bcf	status,0,c
 14746  006E1E  3773               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 14747  006E20  3774               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 14748  006E22  5171               	movf	??_le_updateETX& (0+255),w,b
 14749  006E24  2573               	addwf	(??_le_updateETX+2)& (0+255),w,b
 14750  006E26  6F60               	movwf	___lwdiv@dividend& (0+255),b
 14751  006E28  5172               	movf	(??_le_updateETX+1)& (0+255),w,b
 14752  006E2A  2174               	addwfc	(??_le_updateETX+3)& (0+255),w,b
 14753  006E2C  6F61               	movwf	(___lwdiv@dividend+1)& (0+255),b
 14754  006E2E  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
 14755  006E30  0E0A               	movlw	10
 14756  006E32  6F62               	movwf	___lwdiv@divisor& (0+255),b
 14757  006E34  EC87  F039         	call	___lwdiv	;wreg free
 14758  006E38  EE20 F00D          	lfsr	2,13
 14759  006E3C  516D               	movf	le_updateETX@ne& (0+255),w,b
 14760  006E3E  26D9               	addwf	fsr2l,f,c
 14761  006E40  516E               	movf	(le_updateETX@ne+1)& (0+255),w,b
 14762  006E42  22DA               	addwfc	fsr2h,f,c
 14763  006E44  C060  FFDE         	movff	?___lwdiv,postinc2
 14764  006E48  C061  FFDD         	movff	?___lwdiv+1,postdec2
 14765                           
 14766                           ; BSR set to: 0
 14767  006E4C  0012               	return		;funcret
 14768  006E4E                     __end_of_le_updateETX:
 14769                           	opt stack 0
 14770                           tblptru	equ	0xFF8
 14771                           tblptrh	equ	0xFF7
 14772                           tblptrl	equ	0xFF6
 14773                           tablat	equ	0xFF5
 14774                           prodh	equ	0xFF4
 14775                           prodl	equ	0xFF3
 14776                           postinc0	equ	0xFEE
 14777                           plusw0	equ	0xFEB
 14778                           fsr0h	equ	0xFEA
 14779                           fsr0l	equ	0xFE9
 14780                           wreg	equ	0xFE8
 14781                           indf1	equ	0xFE7
 14782                           postdec1	equ	0xFE5
 14783                           plusw1	equ	0xFE3
 14784                           fsr1h	equ	0xFE2
 14785                           fsr1l	equ	0xFE1
 14786                           indf2	equ	0xFDF
 14787                           postinc2	equ	0xFDE
 14788                           postdec2	equ	0xFDD
 14789                           plusw2	equ	0xFDB
 14790                           fsr2h	equ	0xFDA
 14791                           fsr2l	equ	0xFD9
 14792                           status	equ	0xFD8
 14793                           
 14794 ;; *************** function _le_computeETX *****************
 14795 ;; Defined at:
 14796 ;;		line 278 in file "../LinkEstimator.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  q1              1    wreg     unsigned char 
 14799 ;; Auto vars:     Size  Location     Type
 14800 ;;  q1              1   10[BANK0 ] unsigned char 
 14801 ;;  q               2   11[BANK0 ] unsigned int 
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  2    8[BANK0 ] unsigned int 
 14804 ;; Registers used:
 14805 ;;		wreg, status,2, status,0, cstack
 14806 ;; Tracked objects:
 14807 ;;		On entry : F/0
 14808 ;;		On exit  : F/0
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14812 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14814 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;Total ram usage:        5 bytes
 14816 ;; Hardware stack levels used:    1
 14817 ;; Hardware stack levels required when called:    5
 14818 ;; This function calls:
 14819 ;;		___awdiv
 14820 ;; This function is called by:
 14821 ;;		_le_updateNeighborTableEst
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text46
 14826  007578                     __ptext46:
 14827                           	opt stack 0
 14828  007578                     _le_computeETX:
 14829                           	opt stack 19
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;incstack = 0
 14833                           ;le_computeETX@q1 stored from wreg
 14834  007578  6F6A               	movwf	le_computeETX@q1& (0+255),b
 14835                           
 14836                           ;LinkEstimator.c: 280: uint16_t q=0xffff;
 14837  00757A  0100               	movlb	0	; () banked
 14838  00757C  696B               	setf	le_computeETX@q& (0+255),b
 14839  00757E  696C               	setf	(le_computeETX@q+1)& (0+255),b
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;LinkEstimator.c: 281: if (q1 > 0)
 14843  007580  516A               	movf	le_computeETX@q1& (0+255),w,b
 14844  007582  E014               	bz	l1523
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;LinkEstimator.c: 282: {
 14848                           ;LinkEstimator.c: 283: q = 2500 / q1;
 14849  007584  0E09               	movlw	9
 14850  007586  6F61               	movwf	(___awdiv@dividend+1)& (0+255),b
 14851  007588  0EC4               	movlw	196
 14852  00758A  6F60               	movwf	___awdiv@dividend& (0+255),b
 14853  00758C  C06A  F062         	movff	le_computeETX@q1,___awdiv@divisor
 14854  007590  6B63               	clrf	(___awdiv@divisor+1)& (0+255),b
 14855  007592  EC33  F034         	call	___awdiv	;wreg free
 14856  007596  C060  F06B         	movff	?___awdiv,le_computeETX@q
 14857  00759A  C061  F06C         	movff	?___awdiv+1,le_computeETX@q+1
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;LinkEstimator.c: 284: if (q > 250)
 14861  00759E  516C               	movf	(le_computeETX@q+1)& (0+255),w,b
 14862  0075A0  E103               	bnz	u17860
 14863  0075A2  0EFB               	movlw	251
 14864  0075A4  5D6B               	subwf	le_computeETX@q& (0+255),w,b
 14865  0075A6  E302               	bnc	l1523
 14866  0075A8                     u17860:
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;LinkEstimator.c: 285: {
 14870                           ;LinkEstimator.c: 286: q = 0xffff;
 14871  0075A8  696B               	setf	le_computeETX@q& (0+255),b
 14872  0075AA  696C               	setf	(le_computeETX@q+1)& (0+255),b
 14873  0075AC                     l1523:
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;LinkEstimator.c: 287: }
 14877                           ;LinkEstimator.c: 288: }
 14878                           ;LinkEstimator.c: 289: return(q);
 14879  0075AC  C06B  F068         	movff	le_computeETX@q,?_le_computeETX
 14880  0075B0  C06C  F069         	movff	le_computeETX@q+1,?_le_computeETX+1
 14881                           
 14882                           ; BSR set to: 0
 14883  0075B4  0012               	return		;funcret
 14884  0075B6                     __end_of_le_computeETX:
 14885                           	opt stack 0
 14886                           tblptru	equ	0xFF8
 14887                           tblptrh	equ	0xFF7
 14888                           tblptrl	equ	0xFF6
 14889                           tablat	equ	0xFF5
 14890                           prodh	equ	0xFF4
 14891                           prodl	equ	0xFF3
 14892                           postinc0	equ	0xFEE
 14893                           plusw0	equ	0xFEB
 14894                           fsr0h	equ	0xFEA
 14895                           fsr0l	equ	0xFE9
 14896                           wreg	equ	0xFE8
 14897                           indf1	equ	0xFE7
 14898                           postdec1	equ	0xFE5
 14899                           plusw1	equ	0xFE3
 14900                           fsr1h	equ	0xFE2
 14901                           fsr1l	equ	0xFE1
 14902                           indf2	equ	0xFDF
 14903                           postinc2	equ	0xFDE
 14904                           postdec2	equ	0xFDD
 14905                           plusw2	equ	0xFDB
 14906                           fsr2h	equ	0xFDA
 14907                           fsr2l	equ	0xFD9
 14908                           status	equ	0xFD8
 14909                           
 14910 ;; *************** function ___awdiv *****************
 14911 ;; Defined at:
 14912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  dividend        2    0[BANK0 ] int 
 14915 ;;  divisor         2    2[BANK0 ] int 
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;  quotient        2    6[BANK0 ] int 
 14918 ;;  sign            1    5[BANK0 ] unsigned char 
 14919 ;;  counter         1    4[BANK0 ] unsigned char 
 14920 ;; Return value:  Size  Location     Type
 14921 ;;                  2    0[BANK0 ] int 
 14922 ;; Registers used:
 14923 ;;		wreg, status,2, status,0
 14924 ;; Tracked objects:
 14925 ;;		On entry : F/0
 14926 ;;		On exit  : F/0
 14927 ;;		Unchanged: 0/0
 14928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14930 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14932 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14933 ;;Total ram usage:        8 bytes
 14934 ;; Hardware stack levels used:    1
 14935 ;; Hardware stack levels required when called:    4
 14936 ;; This function calls:
 14937 ;;		Nothing
 14938 ;; This function is called by:
 14939 ;;		_le_computeETX
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text47
 14944  006866                     __ptext47:
 14945                           	opt stack 0
 14946  006866                     ___awdiv:
 14947                           	opt stack 19
 14948                           
 14949                           ; BSR set to: 0
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;incstack = 0
 14953  006866  6B65               	clrf	___awdiv@sign& (0+255),b
 14954                           
 14955                           ; BSR set to: 0
 14956  006868  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14957  00686A  D006               	goto	l12235
 14958                           
 14959                           ; BSR set to: 0
 14960  00686C  6D62               	negf	___awdiv@divisor& (0+255),b
 14961  00686E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14962  006870  B0D8               	btfsc	status,0,c
 14963  006872  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14964                           
 14965                           ; BSR set to: 0
 14966  006874  0E01               	movlw	1
 14967  006876  6F65               	movwf	___awdiv@sign& (0+255),b
 14968  006878                     l12235:
 14969                           
 14970                           ; BSR set to: 0
 14971  006878  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 14972  00687A  D006               	goto	l12241
 14973                           
 14974                           ; BSR set to: 0
 14975  00687C  6D60               	negf	___awdiv@dividend& (0+255),b
 14976  00687E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14977  006880  B0D8               	btfsc	status,0,c
 14978  006882  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14979                           
 14980                           ; BSR set to: 0
 14981  006884  0E01               	movlw	1
 14982  006886  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 14983  006888                     l12241:
 14984                           
 14985                           ; BSR set to: 0
 14986  006888  6B66               	clrf	___awdiv@quotient& (0+255),b
 14987  00688A  6B67               	clrf	(___awdiv@quotient+1)& (0+255),b
 14988                           
 14989                           ; BSR set to: 0
 14990  00688C  5162               	movf	___awdiv@divisor& (0+255),w,b
 14991  00688E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14992  006890  E01B               	bz	l12263
 14993                           
 14994                           ; BSR set to: 0
 14995  006892  0E01               	movlw	1
 14996  006894  6F64               	movwf	___awdiv@counter& (0+255),b
 14997  006896  D004               	goto	l12249
 14998  006898                     l12247:
 14999                           
 15000                           ; BSR set to: 0
 15001  006898  90D8               	bcf	status,0,c
 15002  00689A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 15003  00689C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15004  00689E  2B64               	incf	___awdiv@counter& (0+255),f,b
 15005  0068A0                     l12249:
 15006                           
 15007                           ; BSR set to: 0
 15008  0068A0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15009  0068A2  D7FA               	goto	l12247
 15010  0068A4                     l12251:
 15011                           
 15012                           ; BSR set to: 0
 15013  0068A4  90D8               	bcf	status,0,c
 15014  0068A6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 15015  0068A8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 15016                           
 15017                           ; BSR set to: 0
 15018  0068AA  5162               	movf	___awdiv@divisor& (0+255),w,b
 15019  0068AC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 15020  0068AE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15021  0068B0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15022  0068B2  E305               	bnc	l12259
 15023                           
 15024                           ; BSR set to: 0
 15025  0068B4  5162               	movf	___awdiv@divisor& (0+255),w,b
 15026  0068B6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 15027  0068B8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15028  0068BA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15029                           
 15030                           ; BSR set to: 0
 15031  0068BC  8166               	bsf	___awdiv@quotient& (0+255),0,b
 15032  0068BE                     l12259:
 15033                           
 15034                           ; BSR set to: 0
 15035  0068BE  90D8               	bcf	status,0,c
 15036  0068C0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15037  0068C2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 15038                           
 15039                           ; BSR set to: 0
 15040  0068C4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 15041  0068C6  D7EE               	goto	l12251
 15042  0068C8                     l12263:
 15043                           
 15044                           ; BSR set to: 0
 15045  0068C8  5165               	movf	___awdiv@sign& (0+255),w,b
 15046  0068CA  E004               	bz	l12267
 15047                           
 15048                           ; BSR set to: 0
 15049  0068CC  6D66               	negf	___awdiv@quotient& (0+255),b
 15050  0068CE  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15051  0068D0  B0D8               	btfsc	status,0,c
 15052  0068D2  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15053  0068D4                     l12267:
 15054                           
 15055                           ; BSR set to: 0
 15056  0068D4  C066  F060         	movff	___awdiv@quotient,?___awdiv
 15057  0068D8  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 15058                           
 15059                           ; BSR set to: 0
 15060  0068DC  0012               	return		;funcret
 15061  0068DE                     __end_of___awdiv:
 15062                           	opt stack 0
 15063                           tblptru	equ	0xFF8
 15064                           tblptrh	equ	0xFF7
 15065                           tblptrl	equ	0xFF6
 15066                           tablat	equ	0xFF5
 15067                           prodh	equ	0xFF4
 15068                           prodl	equ	0xFF3
 15069                           postinc0	equ	0xFEE
 15070                           plusw0	equ	0xFEB
 15071                           fsr0h	equ	0xFEA
 15072                           fsr0l	equ	0xFE9
 15073                           wreg	equ	0xFE8
 15074                           indf1	equ	0xFE7
 15075                           postdec1	equ	0xFE5
 15076                           plusw1	equ	0xFE3
 15077                           fsr1h	equ	0xFE2
 15078                           fsr1l	equ	0xFE1
 15079                           indf2	equ	0xFDF
 15080                           postinc2	equ	0xFDE
 15081                           postdec2	equ	0xFDD
 15082                           plusw2	equ	0xFDB
 15083                           fsr2h	equ	0xFDA
 15084                           fsr2l	equ	0xFD9
 15085                           status	equ	0xFD8
 15086                           
 15087 ;; *************** function ___lldiv *****************
 15088 ;; Defined at:
 15089 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  dividend        4    0[BANK0 ] unsigned long 
 15092 ;;  divisor         4    4[BANK0 ] unsigned long 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;  quotient        4    8[BANK0 ] unsigned long 
 15095 ;;  counter         1   12[BANK0 ] unsigned char 
 15096 ;; Return value:  Size  Location     Type
 15097 ;;                  4    0[BANK0 ] unsigned long 
 15098 ;; Registers used:
 15099 ;;		wreg, status,2, status,0
 15100 ;; Tracked objects:
 15101 ;;		On entry : F/0
 15102 ;;		On exit  : F/0
 15103 ;;		Unchanged: 0/0
 15104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15105 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15106 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15108 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15109 ;;Total ram usage:       13 bytes
 15110 ;; Hardware stack levels used:    1
 15111 ;; Hardware stack levels required when called:    4
 15112 ;; This function calls:
 15113 ;;		Nothing
 15114 ;; This function is called by:
 15115 ;;		_le_updateNeighborTableEst
 15116 ;; This function uses a non-reentrant model
 15117 ;;
 15118                           
 15119                           	psect	text48
 15120  006956                     __ptext48:
 15121                           	opt stack 0
 15122  006956                     ___lldiv:
 15123                           	opt stack 20
 15124                           
 15125                           ; BSR set to: 0
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;incstack = 0
 15129  006956  6B68               	clrf	___lldiv@quotient& (0+255),b
 15130  006958  6B69               	clrf	(___lldiv@quotient+1)& (0+255),b
 15131  00695A  6B6A               	clrf	(___lldiv@quotient+2)& (0+255),b
 15132  00695C  6B6B               	clrf	(___lldiv@quotient+3)& (0+255),b
 15133                           
 15134                           ; BSR set to: 0
 15135  00695E  5164               	movf	___lldiv@divisor& (0+255),w,b
 15136  006960  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15137  006962  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15138  006964  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15139  006966  E029               	bz	l2556
 15140                           
 15141                           ; BSR set to: 0
 15142  006968  0E01               	movlw	1
 15143  00696A  6F6C               	movwf	___lldiv@counter& (0+255),b
 15144  00696C  D006               	goto	l12499
 15145  00696E                     l12497:
 15146                           
 15147                           ; BSR set to: 0
 15148  00696E  90D8               	bcf	status,0,c
 15149  006970  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15150  006972  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15151  006974  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15152  006976  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15153  006978  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15154  00697A                     l12499:
 15155                           
 15156                           ; BSR set to: 0
 15157  00697A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15158  00697C  D7F8               	goto	l12497
 15159  00697E                     l12501:
 15160                           
 15161                           ; BSR set to: 0
 15162  00697E  90D8               	bcf	status,0,c
 15163  006980  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15164  006982  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15165  006984  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15166  006986  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15167                           
 15168                           ; BSR set to: 0
 15169  006988  5164               	movf	___lldiv@divisor& (0+255),w,b
 15170  00698A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15171  00698C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15172  00698E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15173  006990  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15174  006992  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15175  006994  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15176  006996  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15177  006998  E309               	bnc	l12509
 15178                           
 15179                           ; BSR set to: 0
 15180  00699A  5164               	movf	___lldiv@divisor& (0+255),w,b
 15181  00699C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15182  00699E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15183  0069A0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15184  0069A2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15185  0069A4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15186  0069A6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15187  0069A8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15188                           
 15189                           ; BSR set to: 0
 15190  0069AA  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15191  0069AC                     l12509:
 15192                           
 15193                           ; BSR set to: 0
 15194  0069AC  90D8               	bcf	status,0,c
 15195  0069AE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15196  0069B0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15197  0069B2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15198  0069B4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15199                           
 15200                           ; BSR set to: 0
 15201  0069B6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15202  0069B8  D7E2               	goto	l12501
 15203  0069BA                     l2556:
 15204                           
 15205                           ; BSR set to: 0
 15206  0069BA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15207  0069BE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15208  0069C2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15209  0069C6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15210                           
 15211                           ; BSR set to: 0
 15212  0069CA  0012               	return		;funcret
 15213  0069CC                     __end_of___lldiv:
 15214                           	opt stack 0
 15215                           tblptru	equ	0xFF8
 15216                           tblptrh	equ	0xFF7
 15217                           tblptrl	equ	0xFF6
 15218                           tablat	equ	0xFF5
 15219                           prodh	equ	0xFF4
 15220                           prodl	equ	0xFF3
 15221                           postinc0	equ	0xFEE
 15222                           plusw0	equ	0xFEB
 15223                           fsr0h	equ	0xFEA
 15224                           fsr0l	equ	0xFE9
 15225                           wreg	equ	0xFE8
 15226                           indf1	equ	0xFE7
 15227                           postdec1	equ	0xFE5
 15228                           plusw1	equ	0xFE3
 15229                           fsr1h	equ	0xFE2
 15230                           fsr1l	equ	0xFE1
 15231                           indf2	equ	0xFDF
 15232                           postinc2	equ	0xFDE
 15233                           postdec2	equ	0xFDD
 15234                           plusw2	equ	0xFDB
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function _le_initNeighborIdx *****************
 15240 ;; Defined at:
 15241 ;;		line 160 in file "../LinkEstimator.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  i               1    wreg     unsigned char 
 15244 ;;  ll_addr         8    0[BANK0 ] struct addr_t_def
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;  i               1    8[BANK0 ] unsigned char 
 15247 ;;  ne              2    9[BANK0 ] PTR struct neighbor_tabl
 15248 ;;		 -> neighbor_tbl(340), 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      void 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15253 ;; Tracked objects:
 15254 ;;		On entry : F/0
 15255 ;;		On exit  : F/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15258 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;Total ram usage:       11 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    4
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_LE_InsertNeighbor
 15269 ;;		_le_updateNeighborEntryIdx
 15270 ;;		_LE_processReceivedMessage
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text49
 15275  0065DE                     __ptext49:
 15276                           	opt stack 0
 15277  0065DE                     _le_initNeighborIdx:
 15278                           	opt stack 21
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;incstack = 0
 15282                           ;le_initNeighborIdx@i stored from wreg
 15283  0065DE  6F68               	movwf	le_initNeighborIdx@i& (0+255),b
 15284                           
 15285                           ;LinkEstimator.c: 162: neighbor_table_entry_t *ne;
 15286                           ;LinkEstimator.c: 163: ne = &neighbor_tbl[i];
 15287  0065E0  0100               	movlb	0	; () banked
 15288  0065E2  5168               	movf	le_initNeighborIdx@i& (0+255),w,b
 15289  0065E4  0D11               	mullw	17
 15290  0065E6  0E4A               	movlw	low _neighbor_tbl
 15291  0065E8  24F3               	addwf	prodl,w,c
 15292  0065EA  6F69               	movwf	le_initNeighborIdx@ne& (0+255),b
 15293  0065EC  0E0D               	movlw	high _neighbor_tbl
 15294  0065EE  20F4               	addwfc	prodh,w,c
 15295  0065F0  6F6A               	movwf	(le_initNeighborIdx@ne+1)& (0+255),b
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;LinkEstimator.c: 164: ne->ll_addr = ll_addr;
 15299  0065F2  EE20  F060         	lfsr	2,le_initNeighborIdx@ll_addr
 15300  0065F6  C069  FFE1         	movff	le_initNeighborIdx@ne,fsr1l
 15301  0065FA  C06A  FFE2         	movff	le_initNeighborIdx@ne+1,fsr1h
 15302  0065FE  0E07               	movlw	7
 15303  006600                     u18151:
 15304  006600  CFDB FFE3          	movff	plusw2,plusw1
 15305  006604  06E8               	decf	wreg,f,c
 15306  006606  E2FC               	bc	u18151
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;LinkEstimator.c: 165: ne->lastseq = 0;
 15310  006608  EE20 F008          	lfsr	2,8
 15311  00660C  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15312  00660E  26D9               	addwf	fsr2l,f,c
 15313  006610  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15314  006612  22DA               	addwfc	fsr2h,f,c
 15315  006614  6ADF               	clrf	indf2,c
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;LinkEstimator.c: 166: ne->rcvcnt = 0;
 15319  006616  EE20 F009          	lfsr	2,9
 15320  00661A  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15321  00661C  26D9               	addwf	fsr2l,f,c
 15322  00661E  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15323  006620  22DA               	addwfc	fsr2h,f,c
 15324  006622  6ADF               	clrf	indf2,c
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;LinkEstimator.c: 167: ne->failcnt = 0;
 15328  006624  EE20 F00A          	lfsr	2,10
 15329  006628  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15330  00662A  26D9               	addwf	fsr2l,f,c
 15331  00662C  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15332  00662E  22DA               	addwfc	fsr2h,f,c
 15333  006630  6ADF               	clrf	indf2,c
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;LinkEstimator.c: 168: ne->flags = (0x4 | 0x1);
 15337  006632  EE20 F00B          	lfsr	2,11
 15338  006636  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15339  006638  26D9               	addwf	fsr2l,f,c
 15340  00663A  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15341  00663C  22DA               	addwfc	fsr2h,f,c
 15342  00663E  0E05               	movlw	5
 15343  006640  6EDF               	movwf	indf2,c
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;LinkEstimator.c: 169: ne->inquality = 0;
 15347  006642  EE20 F00C          	lfsr	2,12
 15348  006646  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15349  006648  26D9               	addwf	fsr2l,f,c
 15350  00664A  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15351  00664C  22DA               	addwfc	fsr2h,f,c
 15352  00664E  6ADF               	clrf	indf2,c
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;LinkEstimator.c: 170: ne->etx = 0;
 15356  006650  EE20 F00D          	lfsr	2,13
 15357  006654  5169               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15358  006656  26D9               	addwf	fsr2l,f,c
 15359  006658  516A               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15360  00665A  22DA               	addwfc	fsr2h,f,c
 15361  00665C  6ADE               	clrf	postinc2,c
 15362  00665E  6ADD               	clrf	postdec2,c
 15363                           
 15364                           ; BSR set to: 0
 15365  006660  0C00               	retlw	0	;funcret
 15366  006662                     __end_of_le_initNeighborIdx:
 15367                           	opt stack 0
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           postinc0	equ	0xFEE
 15375                           plusw0	equ	0xFEB
 15376                           fsr0h	equ	0xFEA
 15377                           fsr0l	equ	0xFE9
 15378                           wreg	equ	0xFE8
 15379                           indf1	equ	0xFE7
 15380                           postdec1	equ	0xFE5
 15381                           plusw1	equ	0xFE3
 15382                           fsr1h	equ	0xFE2
 15383                           fsr1l	equ	0xFE1
 15384                           indf2	equ	0xFDF
 15385                           postinc2	equ	0xFDE
 15386                           postdec2	equ	0xFDD
 15387                           plusw2	equ	0xFDB
 15388                           fsr2h	equ	0xFDA
 15389                           fsr2l	equ	0xFD9
 15390                           status	equ	0xFD8
 15391                           
 15392 ;; *************** function _le_findWorstNeighborIdx *****************
 15393 ;; Defined at:
 15394 ;;		line 173 in file "../LinkEstimator.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;  thresholdETX    1    wreg     unsigned char 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;  thresholdETX    1   36[BANK0 ] unsigned char 
 15399 ;;  i               2   45[BANK0 ] unsigned int 
 15400 ;;  worstETX        2   43[BANK0 ] unsigned int 
 15401 ;;  thisETX         2   41[BANK0 ] unsigned int 
 15402 ;;  res             2   39[BANK0 ] unsigned int 
 15403 ;;  worstNeighbo    2   37[BANK0 ] unsigned int 
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  2   32[BANK0 ] unsigned int 
 15406 ;; Registers used:
 15407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15408 ;; Tracked objects:
 15409 ;;		On entry : F/0
 15410 ;;		On exit  : F/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15414 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;Total ram usage:       15 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; Hardware stack levels required when called:    6
 15420 ;; This function calls:
 15421 ;;		_NetworkGetParentAddress
 15422 ;;		_isSameAddress
 15423 ;; This function is called by:
 15424 ;;		_LE_InsertNeighbor
 15425 ;;		_LE_processReceivedMessage
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text50
 15430  0051CA                     __ptext50:
 15431                           	opt stack 0
 15432  0051CA                     _le_findWorstNeighborIdx:
 15433                           	opt stack 19
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;incstack = 0
 15437                           ;le_findWorstNeighborIdx@thresholdETX stored from wreg
 15438  0051CA  6F84               	movwf	le_findWorstNeighborIdx@thresholdETX& (0+255),b
 15439                           
 15440                           ;LinkEstimator.c: 179: worstNeighborIdx = 0xff;
 15441  0051CC  0100               	movlb	0	; () banked
 15442  0051CE  6B86               	clrf	(le_findWorstNeighborIdx@worstNeighborIdx+1)& (0+255),b
 15443  0051D0  6985               	setf	le_findWorstNeighborIdx@worstNeighborIdx& (0+255),b
 15444                           
 15445                           ; BSR set to: 0
 15446                           ;LinkEstimator.c: 180: worstETX = 0;
 15447  0051D2  6B8B               	clrf	le_findWorstNeighborIdx@worstETX& (0+255),b
 15448  0051D4  6B8C               	clrf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),b
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;LinkEstimator.c: 181: for (i = 0; i < 20; i++)
 15452  0051D6  6B8D               	clrf	le_findWorstNeighborIdx@i& (0+255),b
 15453  0051D8  6B8E               	clrf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15454  0051DA                     l12715:
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;LinkEstimator.c: 182: {
 15458                           ;LinkEstimator.c: 183: if (!(neighbor_tbl[i].flags & 0x1))
 15459  0051DA  0E11               	movlw	17
 15460  0051DC  038D               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15461  0051DE  CFF3 F082          	movff	prodl,??_le_findWorstNeighborIdx
 15462  0051E2  CFF4 F083          	movff	prodh,??_le_findWorstNeighborIdx+1
 15463  0051E6  038E               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15464  0051E8  50F3               	movf	prodl,w,c
 15465  0051EA  2783               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15466  0051EC  0E55               	movlw	low (_neighbor_tbl+11)
 15467  0051EE  2582               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15468  0051F0  6ED9               	movwf	fsr2l,c
 15469  0051F2  0E0D               	movlw	high (_neighbor_tbl+11)
 15470  0051F4  2183               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15471  0051F6  6EDA               	movwf	fsr2h,c
 15472  0051F8  A0DF               	btfss	indf2,0,c
 15473  0051FA  D069               	goto	l12737
 15474                           
 15475                           ; BSR set to: 0
 15476                           ;LinkEstimator.c: 187: }
 15477                           ;LinkEstimator.c: 188: if (!(neighbor_tbl[i].flags & 0x2))
 15478  0051FC  0E11               	movlw	17
 15479  0051FE  038D               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15480  005200  CFF3 F082          	movff	prodl,??_le_findWorstNeighborIdx
 15481  005204  CFF4 F083          	movff	prodh,??_le_findWorstNeighborIdx+1
 15482  005208  038E               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15483  00520A  50F3               	movf	prodl,w,c
 15484  00520C  2783               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15485  00520E  0E55               	movlw	low (_neighbor_tbl+11)
 15486  005210  2582               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15487  005212  6ED9               	movwf	fsr2l,c
 15488  005214  0E0D               	movlw	high (_neighbor_tbl+11)
 15489  005216  2183               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15490  005218  6EDA               	movwf	fsr2h,c
 15491  00521A  A2DF               	btfss	indf2,1,c
 15492  00521C  D058               	goto	l12737
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;LinkEstimator.c: 192: }
 15496                           ;LinkEstimator.c: 193: if (neighbor_tbl[i].flags & 0x8)
 15497  00521E  0E11               	movlw	17
 15498  005220  038D               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15499  005222  CFF3 F082          	movff	prodl,??_le_findWorstNeighborIdx
 15500  005226  CFF4 F083          	movff	prodh,??_le_findWorstNeighborIdx+1
 15501  00522A  038E               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15502  00522C  50F3               	movf	prodl,w,c
 15503  00522E  2783               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15504  005230  0E55               	movlw	low (_neighbor_tbl+11)
 15505  005232  2582               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15506  005234  6ED9               	movwf	fsr2l,c
 15507  005236  0E0D               	movlw	high (_neighbor_tbl+11)
 15508  005238  2183               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15509  00523A  6EDA               	movwf	fsr2h,c
 15510  00523C  B6DF               	btfsc	indf2,3,c
 15511  00523E  D047               	goto	l12737
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;LinkEstimator.c: 197: }
 15515                           ;LinkEstimator.c: 198: if(isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress(
      +                          )) )
 15516  005240  0E11               	movlw	17
 15517  005242  038D               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15518  005244  CFF3 F082          	movff	prodl,??_le_findWorstNeighborIdx
 15519  005248  CFF4 F083          	movff	prodh,??_le_findWorstNeighborIdx+1
 15520  00524C  038E               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15521  00524E  50F3               	movf	prodl,w,c
 15522  005250  2783               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15523  005252  0E4A               	movlw	low _neighbor_tbl
 15524  005254  2582               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15525  005256  6ED9               	movwf	fsr2l,c
 15526  005258  0E0D               	movlw	high _neighbor_tbl
 15527  00525A  2183               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15528  00525C  6EDA               	movwf	fsr2h,c
 15529  00525E  EE00  F070         	lfsr	0,isSameAddress@a1
 15530  005262  0E07               	movlw	7
 15531  005264                     u18191:
 15532  005264  CFDB FFEB          	movff	plusw2,plusw0
 15533  005268  06E8               	decf	wreg,f,c
 15534  00526A  E2FC               	bc	u18191
 15535  00526C  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 15536  005270  CFE9 FFD9          	movff	fsr0l,fsr2l
 15537  005274  CFEA FFDA          	movff	fsr0h,fsr2h
 15538  005278  EE00  F078         	lfsr	0,isSameAddress@a2
 15539  00527C  0E07               	movlw	7
 15540  00527E                     u18201:
 15541  00527E  CFDB FFEB          	movff	plusw2,plusw0
 15542  005282  06E8               	decf	wreg,f,c
 15543  005284  E2FC               	bc	u18201
 15544  005286  ECC5  F03C         	call	_isSameAddress	;wreg free
 15545  00528A  0900               	iorlw	0
 15546  00528C  E120               	bnz	l12737
 15547                           
 15548                           ; BSR set to: 0
 15549                           ;LinkEstimator.c: 201: }
 15550                           ;LinkEstimator.c: 203: thisETX = neighbor_tbl[i].etx;
 15551  00528E  0E11               	movlw	17
 15552  005290  038D               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15553  005292  CFF3 F082          	movff	prodl,??_le_findWorstNeighborIdx
 15554  005296  CFF4 F083          	movff	prodh,??_le_findWorstNeighborIdx+1
 15555  00529A  038E               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15556  00529C  50F3               	movf	prodl,w,c
 15557  00529E  2783               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15558  0052A0  0E57               	movlw	low (_neighbor_tbl+13)
 15559  0052A2  2582               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15560  0052A4  6ED9               	movwf	fsr2l,c
 15561  0052A6  0E0D               	movlw	high (_neighbor_tbl+13)
 15562  0052A8  2183               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15563  0052AA  6EDA               	movwf	fsr2h,c
 15564  0052AC  CFDE F089          	movff	postinc2,le_findWorstNeighborIdx@thisETX
 15565  0052B0  CFDD F08A          	movff	postdec2,le_findWorstNeighborIdx@thisETX+1
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;LinkEstimator.c: 204: if (thisETX >= worstETX)
 15569  0052B4  518B               	movf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 15570  0052B6  5D89               	subwf	le_findWorstNeighborIdx@thisETX& (0+255),w,b
 15571  0052B8  518C               	movf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 15572  0052BA  598A               	subwfb	(le_findWorstNeighborIdx@thisETX+1)& (0+255),w,b
 15573  0052BC  E308               	bnc	l12737
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;LinkEstimator.c: 205: {
 15577                           ;LinkEstimator.c: 206: worstNeighborIdx = i;
 15578  0052BE  C08D  F085         	movff	le_findWorstNeighborIdx@i,le_findWorstNeighborIdx@worstNeighborIdx
 15579  0052C2  C08E  F086         	movff	le_findWorstNeighborIdx@i+1,le_findWorstNeighborIdx@worstNeighborIdx+1
 15580                           
 15581                           ;LinkEstimator.c: 207: worstETX = thisETX;
 15582  0052C6  C089  F08B         	movff	le_findWorstNeighborIdx@thisETX,le_findWorstNeighborIdx@worstETX
 15583  0052CA  C08A  F08C         	movff	le_findWorstNeighborIdx@thisETX+1,le_findWorstNeighborIdx@worstETX+1
 15584  0052CE                     l12737:
 15585                           
 15586                           ; BSR set to: 0
 15587  0052CE  4B8D               	infsnz	le_findWorstNeighborIdx@i& (0+255),f,b
 15588  0052D0  2B8E               	incf	(le_findWorstNeighborIdx@i+1)& (0+255),f,b
 15589                           
 15590                           ; BSR set to: 0
 15591  0052D2  518E               	movf	(le_findWorstNeighborIdx@i+1)& (0+255),w,b
 15592  0052D4  E104               	bnz	u18230
 15593  0052D6  0E14               	movlw	20
 15594  0052D8  5D8D               	subwf	le_findWorstNeighborIdx@i& (0+255),w,b
 15595  0052DA  E201 D77E          	bnc	l12715
 15596  0052DE                     u18230:
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;LinkEstimator.c: 208: }
 15600                           ;LinkEstimator.c: 209: }
 15601                           ;LinkEstimator.c: 211: if (worstETX >= thresholdETX)
 15602  0052DE  5184               	movf	le_findWorstNeighborIdx@thresholdETX& (0+255),w,b
 15603  0052E0  6F82               	movwf	??_le_findWorstNeighborIdx& (0+255),b
 15604  0052E2  6B83               	clrf	(??_le_findWorstNeighborIdx+1)& (0+255),b
 15605  0052E4  5182               	movf	??_le_findWorstNeighborIdx& (0+255),w,b
 15606  0052E6  5D8B               	subwf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 15607  0052E8  5183               	movf	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15608  0052EA  598C               	subwfb	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 15609  0052EC  E305               	bnc	l12745
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;LinkEstimator.c: 212: {
 15613                           ;LinkEstimator.c: 213: res=worstNeighborIdx;
 15614  0052EE  C085  F087         	movff	le_findWorstNeighborIdx@worstNeighborIdx,le_findWorstNeighborIdx@res
 15615  0052F2  C086  F088         	movff	le_findWorstNeighborIdx@worstNeighborIdx+1,le_findWorstNeighborIdx@res+1
 15616                           
 15617                           ;LinkEstimator.c: 214: } else
 15618  0052F6  D003               	goto	l12747
 15619  0052F8                     l12745:
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;LinkEstimator.c: 215: {
 15623                           ;LinkEstimator.c: 216: res=0xff;
 15624  0052F8  0E00               	movlw	0
 15625  0052FA  6B88               	clrf	(le_findWorstNeighborIdx@res+1)& (0+255),b
 15626  0052FC  6987               	setf	le_findWorstNeighborIdx@res& (0+255),b
 15627  0052FE                     l12747:
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;LinkEstimator.c: 217: }
 15631                           ;LinkEstimator.c: 219: return(res);
 15632  0052FE  C087  F080         	movff	le_findWorstNeighborIdx@res,?_le_findWorstNeighborIdx
 15633  005302  C088  F081         	movff	le_findWorstNeighborIdx@res+1,?_le_findWorstNeighborIdx+1
 15634                           
 15635                           ; BSR set to: 0
 15636  005306  0012               	return		;funcret
 15637  005308                     __end_of_le_findWorstNeighborIdx:
 15638                           	opt stack 0
 15639                           tblptru	equ	0xFF8
 15640                           tblptrh	equ	0xFF7
 15641                           tblptrl	equ	0xFF6
 15642                           tablat	equ	0xFF5
 15643                           prodh	equ	0xFF4
 15644                           prodl	equ	0xFF3
 15645                           postinc0	equ	0xFEE
 15646                           plusw0	equ	0xFEB
 15647                           fsr0h	equ	0xFEA
 15648                           fsr0l	equ	0xFE9
 15649                           wreg	equ	0xFE8
 15650                           indf1	equ	0xFE7
 15651                           postdec1	equ	0xFE5
 15652                           plusw1	equ	0xFE3
 15653                           fsr1h	equ	0xFE2
 15654                           fsr1l	equ	0xFE1
 15655                           indf2	equ	0xFDF
 15656                           postinc2	equ	0xFDE
 15657                           postdec2	equ	0xFDD
 15658                           plusw2	equ	0xFDB
 15659                           fsr2h	equ	0xFDA
 15660                           fsr2l	equ	0xFD9
 15661                           status	equ	0xFD8
 15662                           
 15663 ;; *************** function _le_findRandomNeighborIdx *****************
 15664 ;; Defined at:
 15665 ;;		line 373 in file "../LinkEstimator.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;		None
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  i               2   40[BANK0 ] unsigned int 
 15670 ;;  res             2   37[BANK0 ] unsigned int 
 15671 ;;  num_eligible    1   39[BANK0 ] unsigned char 
 15672 ;;  cnt             1   36[BANK0 ] unsigned char 
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  2   32[BANK0 ] unsigned int 
 15675 ;; Registers used:
 15676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : F/0
 15679 ;;		On exit  : F/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;Total ram usage:       10 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:    6
 15689 ;; This function calls:
 15690 ;;		_NetworkGetParentAddress
 15691 ;;		___lwmod
 15692 ;;		_isSameAddress
 15693 ;;		_krnd
 15694 ;; This function is called by:
 15695 ;;		_LE_processReceivedMessage
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text51
 15700  003ABE                     __ptext51:
 15701                           	opt stack 0
 15702  003ABE                     _le_findRandomNeighborIdx:
 15703                           	opt stack 20
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;LinkEstimator.c: 375: uint16_t i;
 15707                           ;LinkEstimator.c: 376: uint16_t res=0xff;
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;incstack = 0
 15711  003ABE  6B86               	clrf	(le_findRandomNeighborIdx@res+1)& (0+255),b
 15712  003AC0  6985               	setf	le_findRandomNeighborIdx@res& (0+255),b
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;LinkEstimator.c: 377: uint8_t cnt;
 15716                           ;LinkEstimator.c: 378: uint8_t num_eligible_eviction;
 15717                           ;LinkEstimator.c: 380: num_eligible_eviction = 0;
 15718  003AC2  6B87               	clrf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),b
 15719                           
 15720                           ; BSR set to: 0
 15721                           ;LinkEstimator.c: 381: for (i = 0; i < 20; i++)
 15722  003AC4  6B88               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 15723  003AC6  6B89               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15724  003AC8                     l13201:
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;LinkEstimator.c: 382: {
 15728                           ;LinkEstimator.c: 383: if (neighbor_tbl[i].flags & 0x1)
 15729  003AC8  0E11               	movlw	17
 15730  003ACA  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15731  003ACC  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15732  003AD0  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15733  003AD4  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15734  003AD6  50F3               	movf	prodl,w,c
 15735  003AD8  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15736  003ADA  0E55               	movlw	low (_neighbor_tbl+11)
 15737  003ADC  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15738  003ADE  6ED9               	movwf	fsr2l,c
 15739  003AE0  0E0D               	movlw	high (_neighbor_tbl+11)
 15740  003AE2  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15741  003AE4  6EDA               	movwf	fsr2h,c
 15742  003AE6  A0DF               	btfss	indf2,0,c
 15743  003AE8  D049               	goto	l1552
 15744                           
 15745                           ; BSR set to: 0
 15746                           ;LinkEstimator.c: 384: {
 15747                           ;LinkEstimator.c: 385: if((isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress
      +                          ()) ) )
 15748  003AEA  0E11               	movlw	17
 15749  003AEC  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15750  003AEE  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15751  003AF2  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15752  003AF6  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15753  003AF8  50F3               	movf	prodl,w,c
 15754  003AFA  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15755  003AFC  0E4A               	movlw	low _neighbor_tbl
 15756  003AFE  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15757  003B00  6ED9               	movwf	fsr2l,c
 15758  003B02  0E0D               	movlw	high _neighbor_tbl
 15759  003B04  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15760  003B06  6EDA               	movwf	fsr2h,c
 15761  003B08  EE00  F070         	lfsr	0,isSameAddress@a1
 15762  003B0C  0E07               	movlw	7
 15763  003B0E                     u19501:
 15764  003B0E  CFDB FFEB          	movff	plusw2,plusw0
 15765  003B12  06E8               	decf	wreg,f,c
 15766  003B14  E2FC               	bc	u19501
 15767  003B16  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 15768  003B1A  CFE9 FFD9          	movff	fsr0l,fsr2l
 15769  003B1E  CFEA FFDA          	movff	fsr0h,fsr2h
 15770  003B22  EE00  F078         	lfsr	0,isSameAddress@a2
 15771  003B26  0E07               	movlw	7
 15772  003B28                     u19511:
 15773  003B28  CFDB FFEB          	movff	plusw2,plusw0
 15774  003B2C  06E8               	decf	wreg,f,c
 15775  003B2E  E2FC               	bc	u19511
 15776  003B30  ECC5  F03C         	call	_isSameAddress	;wreg free
 15777  003B34  0900               	iorlw	0
 15778  003B36  E122               	bnz	l1552
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;LinkEstimator.c: 389: neighbor_tbl[i].flags & 0x2)
 15782  003B38  0E11               	movlw	17
 15783  003B3A  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15784  003B3C  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15785  003B40  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15786  003B44  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15787  003B46  50F3               	movf	prodl,w,c
 15788  003B48  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15789  003B4A  0E55               	movlw	low (_neighbor_tbl+11)
 15790  003B4C  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15791  003B4E  6ED9               	movwf	fsr2l,c
 15792  003B50  0E0D               	movlw	high (_neighbor_tbl+11)
 15793  003B52  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15794  003B54  6EDA               	movwf	fsr2h,c
 15795  003B56  B6DF               	btfsc	indf2,3,c
 15796  003B58  D011               	goto	l1552
 15797                           
 15798                           ; BSR set to: 0
 15799  003B5A  0E11               	movlw	17
 15800  003B5C  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15801  003B5E  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15802  003B62  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15803  003B66  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15804  003B68  50F3               	movf	prodl,w,c
 15805  003B6A  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15806  003B6C  0E55               	movlw	low (_neighbor_tbl+11)
 15807  003B6E  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15808  003B70  6ED9               	movwf	fsr2l,c
 15809  003B72  0E0D               	movlw	high (_neighbor_tbl+11)
 15810  003B74  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15811  003B76  6EDA               	movwf	fsr2h,c
 15812  003B78  A2DF               	btfss	indf2,1,c
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;LinkEstimator.c: 392: {
 15816                           ;LinkEstimator.c: 393: num_eligible_eviction++;
 15817  003B7A  2B87               	incf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),f,b
 15818  003B7C                     l1552:
 15819                           
 15820                           ; BSR set to: 0
 15821  003B7C  4B88               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 15822  003B7E  2B89               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 15823                           
 15824                           ; BSR set to: 0
 15825  003B80  5189               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 15826  003B82  E103               	bnz	u19550
 15827  003B84  0E14               	movlw	20
 15828  003B86  5D88               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 15829  003B88  E39F               	bnc	l13201
 15830  003B8A                     u19550:
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;LinkEstimator.c: 394: }
 15834                           ;LinkEstimator.c: 395: }
 15835                           ;LinkEstimator.c: 396: }
 15836                           ;LinkEstimator.c: 398: if (num_eligible_eviction > 0)
 15837  003B8A  5187               	movf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),w,b
 15838  003B8C  E078               	bz	l1559
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;LinkEstimator.c: 399: {
 15842                           ;LinkEstimator.c: 400: cnt = ((uint16_t)krnd()) % num_eligible_eviction;
 15843  003B8E  EC76  F022         	call	_krnd	;wreg free
 15844  003B92  C060  F06C         	movff	?_krnd,___lwmod@dividend
 15845  003B96  C061  F06D         	movff	?_krnd+1,___lwmod@dividend+1
 15846  003B9A  C087  F06E         	movff	le_findRandomNeighborIdx@num_eligible_eviction,___lwmod@divisor
 15847  003B9E  6B6F               	clrf	(___lwmod@divisor+1)& (0+255),b
 15848  003BA0  ECDB  F03A         	call	___lwmod	;wreg free
 15849  003BA4  516C               	movf	?___lwmod& (0+255),w,b
 15850  003BA6  6F84               	movwf	le_findRandomNeighborIdx@cnt& (0+255),b
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;LinkEstimator.c: 402: for (i = 0; i < 20; i++)
 15854  003BA8  6B88               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 15855  003BAA  6B89               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15856  003BAC                     l13225:
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;LinkEstimator.c: 403: {
 15860                           ;LinkEstimator.c: 404: if ((neighbor_tbl[i].flags & 0x1)>0)
 15861  003BAC  0E11               	movlw	17
 15862  003BAE  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15863  003BB0  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15864  003BB4  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15865  003BB8  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15866  003BBA  50F3               	movf	prodl,w,c
 15867  003BBC  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15868  003BBE  0E55               	movlw	low (_neighbor_tbl+11)
 15869  003BC0  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15870  003BC2  6ED9               	movwf	fsr2l,c
 15871  003BC4  0E0D               	movlw	high (_neighbor_tbl+11)
 15872  003BC6  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15873  003BC8  6EDA               	movwf	fsr2h,c
 15874  003BCA  A0DF               	btfss	indf2,0,c
 15875  003BCC  D051               	goto	l13237
 15876                           
 15877                           ; BSR set to: 0
 15878                           ;LinkEstimator.c: 405: {
 15879                           ;LinkEstimator.c: 406: if ( ((neighbor_tbl[i].flags & 0x8)>0) &&
 15880                           ;LinkEstimator.c: 407: ((neighbor_tbl[i].flags & 0x2)>0) )
 15881  003BCE  0E11               	movlw	17
 15882  003BD0  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15883  003BD2  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15884  003BD6  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15885  003BDA  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15886  003BDC  50F3               	movf	prodl,w,c
 15887  003BDE  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15888  003BE0  0E55               	movlw	low (_neighbor_tbl+11)
 15889  003BE2  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15890  003BE4  6ED9               	movwf	fsr2l,c
 15891  003BE6  0E0D               	movlw	high (_neighbor_tbl+11)
 15892  003BE8  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15893  003BEA  6EDA               	movwf	fsr2h,c
 15894  003BEC  A6DF               	btfss	indf2,3,c
 15895  003BEE  D040               	goto	l13237
 15896                           
 15897                           ; BSR set to: 0
 15898  003BF0  0E11               	movlw	17
 15899  003BF2  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15900  003BF4  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15901  003BF8  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15902  003BFC  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15903  003BFE  50F3               	movf	prodl,w,c
 15904  003C00  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15905  003C02  0E55               	movlw	low (_neighbor_tbl+11)
 15906  003C04  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15907  003C06  6ED9               	movwf	fsr2l,c
 15908  003C08  0E0D               	movlw	high (_neighbor_tbl+11)
 15909  003C0A  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15910  003C0C  6EDA               	movwf	fsr2h,c
 15911  003C0E  A2DF               	btfss	indf2,1,c
 15912  003C10  D02F               	goto	l13237
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;LinkEstimator.c: 408: {
 15916                           ;LinkEstimator.c: 409: if( (isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddres
      +                          s()) )==0)
 15917  003C12  0E11               	movlw	17
 15918  003C14  0388               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 15919  003C16  CFF3 F082          	movff	prodl,??_le_findRandomNeighborIdx
 15920  003C1A  CFF4 F083          	movff	prodh,??_le_findRandomNeighborIdx+1
 15921  003C1E  0389               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 15922  003C20  50F3               	movf	prodl,w,c
 15923  003C22  2783               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 15924  003C24  0E4A               	movlw	low _neighbor_tbl
 15925  003C26  2582               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 15926  003C28  6ED9               	movwf	fsr2l,c
 15927  003C2A  0E0D               	movlw	high _neighbor_tbl
 15928  003C2C  2183               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 15929  003C2E  6EDA               	movwf	fsr2h,c
 15930  003C30  EE00  F070         	lfsr	0,isSameAddress@a1
 15931  003C34  0E07               	movlw	7
 15932  003C36                     u19601:
 15933  003C36  CFDB FFEB          	movff	plusw2,plusw0
 15934  003C3A  06E8               	decf	wreg,f,c
 15935  003C3C  E2FC               	bc	u19601
 15936  003C3E  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 15937  003C42  CFE9 FFD9          	movff	fsr0l,fsr2l
 15938  003C46  CFEA FFDA          	movff	fsr0h,fsr2h
 15939  003C4A  EE00  F078         	lfsr	0,isSameAddress@a2
 15940  003C4E  0E07               	movlw	7
 15941  003C50                     u19611:
 15942  003C50  CFDB FFEB          	movff	plusw2,plusw0
 15943  003C54  06E8               	decf	wreg,f,c
 15944  003C56  E2FC               	bc	u19611
 15945  003C58  ECC5  F03C         	call	_isSameAddress	;wreg free
 15946  003C5C  0900               	iorlw	0
 15947  003C5E  E108               	bnz	l13237
 15948                           
 15949                           ; BSR set to: 0
 15950                           ;LinkEstimator.c: 410: {
 15951                           ;LinkEstimator.c: 411: if (cnt-- == 0)
 15952  003C60  0784               	decf	le_findRandomNeighborIdx@cnt& (0+255),f,b
 15953  003C62  2984               	incf	le_findRandomNeighborIdx@cnt& (0+255),w,b
 15954  003C64  E105               	bnz	l13237
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;LinkEstimator.c: 412: {
 15958                           ;LinkEstimator.c: 413: res=i;
 15959  003C66  C088  F085         	movff	le_findRandomNeighborIdx@i,le_findRandomNeighborIdx@res
 15960  003C6A  C089  F086         	movff	le_findRandomNeighborIdx@i+1,le_findRandomNeighborIdx@res+1
 15961                           
 15962                           ;LinkEstimator.c: 414: break;
 15963  003C6E  D007               	goto	l1559
 15964  003C70                     l13237:
 15965                           
 15966                           ; BSR set to: 0
 15967  003C70  4B88               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 15968  003C72  2B89               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 15969                           
 15970                           ; BSR set to: 0
 15971  003C74  5189               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 15972  003C76  E103               	bnz	u19640
 15973  003C78  0E14               	movlw	20
 15974  003C7A  5D88               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 15975  003C7C  E397               	bnc	l13225
 15976  003C7E                     u19640:
 15977  003C7E                     l1559:
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;LinkEstimator.c: 415: }
 15981                           ;LinkEstimator.c: 416: }
 15982                           ;LinkEstimator.c: 417: }
 15983                           ;LinkEstimator.c: 418: }
 15984                           ;LinkEstimator.c: 419: }
 15985                           ;LinkEstimator.c: 420: }
 15986                           ;LinkEstimator.c: 421: return res;
 15987  003C7E  C085  F080         	movff	le_findRandomNeighborIdx@res,?_le_findRandomNeighborIdx
 15988  003C82  C086  F081         	movff	le_findRandomNeighborIdx@res+1,?_le_findRandomNeighborIdx+1
 15989                           
 15990                           ; BSR set to: 0
 15991  003C86  0012               	return		;funcret
 15992  003C88                     __end_of_le_findRandomNeighborIdx:
 15993                           	opt stack 0
 15994                           tblptru	equ	0xFF8
 15995                           tblptrh	equ	0xFF7
 15996                           tblptrl	equ	0xFF6
 15997                           tablat	equ	0xFF5
 15998                           prodh	equ	0xFF4
 15999                           prodl	equ	0xFF3
 16000                           postinc0	equ	0xFEE
 16001                           plusw0	equ	0xFEB
 16002                           fsr0h	equ	0xFEA
 16003                           fsr0l	equ	0xFE9
 16004                           wreg	equ	0xFE8
 16005                           indf1	equ	0xFE7
 16006                           postdec1	equ	0xFE5
 16007                           plusw1	equ	0xFE3
 16008                           fsr1h	equ	0xFE2
 16009                           fsr1l	equ	0xFE1
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           postdec2	equ	0xFDD
 16013                           plusw2	equ	0xFDB
 16014                           fsr2h	equ	0xFDA
 16015                           fsr2l	equ	0xFD9
 16016                           status	equ	0xFD8
 16017                           
 16018 ;; *************** function _le_findEmptyNeighborIdx *****************
 16019 ;; Defined at:
 16020 ;;		line 222 in file "../LinkEstimator.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;  i               2    6[BANK0 ] unsigned int 
 16025 ;;  res             2    4[BANK0 ] unsigned int 
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  2    0[BANK0 ] unsigned int 
 16028 ;; Registers used:
 16029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16030 ;; Tracked objects:
 16031 ;;		On entry : F/0
 16032 ;;		On exit  : F/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16036 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16038 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16039 ;;Total ram usage:        8 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    4
 16042 ;; This function calls:
 16043 ;;		Nothing
 16044 ;; This function is called by:
 16045 ;;		_LE_InsertNeighbor
 16046 ;;		_LE_processReceivedMessage
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text52
 16051  0072C2                     __ptext52:
 16052                           	opt stack 0
 16053  0072C2                     _le_findEmptyNeighborIdx:
 16054                           	opt stack 21
 16055                           
 16056                           ; BSR set to: 0
 16057                           ;LinkEstimator.c: 224: uint16_t i;
 16058                           ;LinkEstimator.c: 225: uint16_t res=0xff;
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;incstack = 0
 16062  0072C2  6B65               	clrf	(le_findEmptyNeighborIdx@res+1)& (0+255),b
 16063  0072C4  6964               	setf	le_findEmptyNeighborIdx@res& (0+255),b
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;LinkEstimator.c: 226: for (i = 0; i < 20; i++)
 16067  0072C6  6B66               	clrf	le_findEmptyNeighborIdx@i& (0+255),b
 16068  0072C8  6B67               	clrf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 16069  0072CA                     l12759:
 16070                           
 16071                           ; BSR set to: 0
 16072                           ;LinkEstimator.c: 227: {
 16073                           ;LinkEstimator.c: 228: if (neighbor_tbl[i].flags & 0x1)
 16074  0072CA  0E11               	movlw	17
 16075  0072CC  0366               	mulwf	le_findEmptyNeighborIdx@i& (0+255),b
 16076  0072CE  CFF3 F062          	movff	prodl,??_le_findEmptyNeighborIdx
 16077  0072D2  CFF4 F063          	movff	prodh,??_le_findEmptyNeighborIdx+1
 16078  0072D6  0367               	mulwf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 16079  0072D8  50F3               	movf	prodl,w,c
 16080  0072DA  2763               	addwf	(??_le_findEmptyNeighborIdx+1)& (0+255),f,b
 16081  0072DC  0E55               	movlw	low (_neighbor_tbl+11)
 16082  0072DE  2562               	addwf	??_le_findEmptyNeighborIdx& (0+255),w,b
 16083  0072E0  6ED9               	movwf	fsr2l,c
 16084  0072E2  0E0D               	movlw	high (_neighbor_tbl+11)
 16085  0072E4  2163               	addwfc	(??_le_findEmptyNeighborIdx+1)& (0+255),w,b
 16086  0072E6  6EDA               	movwf	fsr2h,c
 16087  0072E8  B0DF               	btfsc	indf2,0,c
 16088  0072EA  D005               	goto	l12763
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;LinkEstimator.c: 231: else
 16092                           ;LinkEstimator.c: 232: {
 16093                           ;LinkEstimator.c: 233: res=i;
 16094  0072EC  C066  F064         	movff	le_findEmptyNeighborIdx@i,le_findEmptyNeighborIdx@res
 16095  0072F0  C067  F065         	movff	le_findEmptyNeighborIdx@i+1,le_findEmptyNeighborIdx@res+1
 16096                           
 16097                           ;LinkEstimator.c: 234: break;
 16098  0072F4  D007               	goto	l1509
 16099  0072F6                     l12763:
 16100                           
 16101                           ; BSR set to: 0
 16102  0072F6  4B66               	infsnz	le_findEmptyNeighborIdx@i& (0+255),f,b
 16103  0072F8  2B67               	incf	(le_findEmptyNeighborIdx@i+1)& (0+255),f,b
 16104                           
 16105                           ; BSR set to: 0
 16106  0072FA  5167               	movf	(le_findEmptyNeighborIdx@i+1)& (0+255),w,b
 16107  0072FC  E103               	bnz	u18260
 16108  0072FE  0E14               	movlw	20
 16109  007300  5D66               	subwf	le_findEmptyNeighborIdx@i& (0+255),w,b
 16110  007302  E3E3               	bnc	l12759
 16111  007304                     u18260:
 16112  007304                     l1509:
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;LinkEstimator.c: 235: }
 16116                           ;LinkEstimator.c: 236: }
 16117                           ;LinkEstimator.c: 237: return res;
 16118  007304  C064  F060         	movff	le_findEmptyNeighborIdx@res,?_le_findEmptyNeighborIdx
 16119  007308  C065  F061         	movff	le_findEmptyNeighborIdx@res+1,?_le_findEmptyNeighborIdx+1
 16120                           
 16121                           ; BSR set to: 0
 16122  00730C  0012               	return		;funcret
 16123  00730E                     __end_of_le_findEmptyNeighborIdx:
 16124                           	opt stack 0
 16125                           tblptru	equ	0xFF8
 16126                           tblptrh	equ	0xFF7
 16127                           tblptrl	equ	0xFF6
 16128                           tablat	equ	0xFF5
 16129                           prodh	equ	0xFF4
 16130                           prodl	equ	0xFF3
 16131                           postinc0	equ	0xFEE
 16132                           plusw0	equ	0xFEB
 16133                           fsr0h	equ	0xFEA
 16134                           fsr0l	equ	0xFE9
 16135                           wreg	equ	0xFE8
 16136                           indf1	equ	0xFE7
 16137                           postdec1	equ	0xFE5
 16138                           plusw1	equ	0xFE3
 16139                           fsr1h	equ	0xFE2
 16140                           fsr1l	equ	0xFE1
 16141                           indf2	equ	0xFDF
 16142                           postinc2	equ	0xFDE
 16143                           postdec2	equ	0xFDD
 16144                           plusw2	equ	0xFDB
 16145                           fsr2h	equ	0xFDA
 16146                           fsr2l	equ	0xFD9
 16147                           status	equ	0xFD8
 16148                           
 16149 ;; *************** function _RouteManagerShouldInsert *****************
 16150 ;; Defined at:
 16151 ;;		line 371 in file "../RouteManager.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;  hdr             2   33[BANK0 ] PTR struct net_routing_h
 16154 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;  rcvBeacon       2   46[BANK0 ] PTR struct net_routing_h
 16157 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), 
 16158 ;;  i               2   43[BANK0 ] int 
 16159 ;;  entry           2   41[BANK0 ] PTR struct routing_table
 16160 ;;		 -> routingTable(210), 
 16161 ;;  neighEtx        2   39[BANK0 ] unsigned int 
 16162 ;;  pathEtx         2   37[BANK0 ] unsigned int 
 16163 ;;  found           1   45[BANK0 ] unsigned char 
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      unsigned char 
 16166 ;; Registers used:
 16167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16168 ;; Tracked objects:
 16169 ;;		On entry : F/0
 16170 ;;		On exit  : F/0
 16171 ;;		Unchanged: 0/0
 16172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16174 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;Total ram usage:       15 bytes
 16178 ;; Hardware stack levels used:    1
 16179 ;; Hardware stack levels required when called:    7
 16180 ;; This function calls:
 16181 ;;		_NetworkGetParentAddress
 16182 ;;		_isInvalidAddress
 16183 ;;		_isSameAddress
 16184 ;; This function is called by:
 16185 ;;		_LE_processReceivedMessage
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189                           	psect	text53
 16190  005972                     __ptext53:
 16191                           	opt stack 0
 16192  005972                     _RouteManagerShouldInsert:
 16193                           	opt stack 19
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;RouteManager.c: 373: bool found = 0;
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;incstack = 0
 16200  005972  6B8D               	clrf	RouteManagerShouldInsert@found& (0+255),b
 16201                           
 16202                           ; BSR set to: 0
 16203                           ;RouteManager.c: 374: uint16_t pathEtx;
 16204                           ;RouteManager.c: 375: uint16_t neighEtx;
 16205                           ;RouteManager.c: 376: int i;
 16206                           ;RouteManager.c: 377: routing_table_entry_t* entry;
 16207                           ;RouteManager.c: 378: net_routing_header_t* rcvBeacon=hdr;
 16208  005974  C081  F08E         	movff	RouteManagerShouldInsert@hdr,RouteManagerShouldInsert@rcvBeacon
 16209  005978  C082  F08F         	movff	RouteManagerShouldInsert@hdr+1,RouteManagerShouldInsert@rcvBeacon+1
 16210                           
 16211                           ; BSR set to: 0
 16212                           ;RouteManager.c: 382: if (isInvalidAddress(rcvBeacon->parent)==0)
 16213  00597C  EE20 F004          	lfsr	2,4
 16214  005980  518E               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16215  005982  26D9               	addwf	fsr2l,f,c
 16216  005984  518F               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16217  005986  22DA               	addwfc	fsr2h,f,c
 16218  005988  EE00  F079         	lfsr	0,isInvalidAddress@address
 16219  00598C  0E07               	movlw	7
 16220  00598E                     u19271:
 16221  00598E  CFDB FFEB          	movff	plusw2,plusw0
 16222  005992  06E8               	decf	wreg,f,c
 16223  005994  E2FC               	bc	u19271
 16224  005996  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 16225  00599A  0900               	iorlw	0
 16226  00599C  E160               	bnz	l13119
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;RouteManager.c: 383: {
 16230                           ;RouteManager.c: 385: if (rcvBeacon->etx == 0)
 16231  00599E  EE20 F00C          	lfsr	2,12
 16232  0059A2  518E               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16233  0059A4  26D9               	addwf	fsr2l,f,c
 16234  0059A6  518F               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16235  0059A8  22DA               	addwfc	fsr2h,f,c
 16236  0059AA  50DE               	movf	postinc2,w,c
 16237  0059AC  10DE               	iorwf	postinc2,w,c
 16238  0059AE  E103               	bnz	l13101
 16239                           
 16240                           ; BSR set to: 0
 16241                           ;RouteManager.c: 386: {
 16242                           ;RouteManager.c: 387: found=1;
 16243  0059B0  0E01               	movlw	1
 16244  0059B2  6F8D               	movwf	RouteManagerShouldInsert@found& (0+255),b
 16245                           
 16246                           ;RouteManager.c: 388: }else
 16247  0059B4  D054               	goto	l13119
 16248  0059B6                     l13101:
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;RouteManager.c: 389: {
 16252                           ;RouteManager.c: 390: pathEtx = rcvBeacon->etx;
 16253  0059B6  EE20 F00C          	lfsr	2,12
 16254  0059BA  518E               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16255  0059BC  26D9               	addwf	fsr2l,f,c
 16256  0059BE  518F               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16257  0059C0  22DA               	addwfc	fsr2h,f,c
 16258  0059C2  CFDE F085          	movff	postinc2,RouteManagerShouldInsert@pathEtx
 16259  0059C6  CFDD F086          	movff	postdec2,RouteManagerShouldInsert@pathEtx+1
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;RouteManager.c: 393: for (i = 0; i < routingTableActive && !found; i++)
 16263  0059CA  6B8B               	clrf	RouteManagerShouldInsert@i& (0+255),b
 16264  0059CC  6B8C               	clrf	(RouteManagerShouldInsert@i+1)& (0+255),b
 16265  0059CE  D03F               	goto	l13115
 16266  0059D0                     l13105:
 16267                           
 16268                           ; BSR set to: 0
 16269                           ;RouteManager.c: 394: {
 16270                           ;RouteManager.c: 395: entry = &routingTable[i];
 16271  0059D0  0E15               	movlw	21
 16272  0059D2  038B               	mulwf	RouteManagerShouldInsert@i& (0+255),b
 16273  0059D4  CFF3 F083          	movff	prodl,??_RouteManagerShouldInsert
 16274  0059D8  CFF4 F084          	movff	prodh,??_RouteManagerShouldInsert+1
 16275  0059DC  038C               	mulwf	(RouteManagerShouldInsert@i+1)& (0+255),b
 16276  0059DE  50F3               	movf	prodl,w,c
 16277  0059E0  2784               	addwf	(??_RouteManagerShouldInsert+1)& (0+255),f,b
 16278  0059E2  0E00               	movlw	low _routingTable
 16279  0059E4  2583               	addwf	??_RouteManagerShouldInsert& (0+255),w,b
 16280  0059E6  6F89               	movwf	RouteManagerShouldInsert@entry& (0+255),b
 16281  0059E8  0E08               	movlw	high _routingTable
 16282  0059EA  2184               	addwfc	(??_RouteManagerShouldInsert+1)& (0+255),w,b
 16283  0059EC  6F8A               	movwf	(RouteManagerShouldInsert@entry+1)& (0+255),b
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;RouteManager.c: 397: if (isSameAddress(entry->neighbor, NetworkGetParentAddress())==0)
 16287  0059EE  C089  FFD9         	movff	RouteManagerShouldInsert@entry,fsr2l
 16288  0059F2  C08A  FFDA         	movff	RouteManagerShouldInsert@entry+1,fsr2h
 16289  0059F6  EE00  F070         	lfsr	0,isSameAddress@a1
 16290  0059FA  0E07               	movlw	7
 16291  0059FC                     u19301:
 16292  0059FC  CFDB FFEB          	movff	plusw2,plusw0
 16293  005A00  06E8               	decf	wreg,f,c
 16294  005A02  E2FC               	bc	u19301
 16295  005A04  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 16296  005A08  CFE9 FFD9          	movff	fsr0l,fsr2l
 16297  005A0C  CFEA FFDA          	movff	fsr0h,fsr2h
 16298  005A10  EE00  F078         	lfsr	0,isSameAddress@a2
 16299  005A14  0E07               	movlw	7
 16300  005A16                     u19311:
 16301  005A16  CFDB FFEB          	movff	plusw2,plusw0
 16302  005A1A  06E8               	decf	wreg,f,c
 16303  005A1C  E2FC               	bc	u19311
 16304  005A1E  ECC5  F03C         	call	_isSameAddress	;wreg free
 16305  005A22  0900               	iorlw	0
 16306  005A24  E112               	bnz	l13113
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;RouteManager.c: 398: {
 16310                           ;RouteManager.c: 399: neighEtx = entry->info.etx;
 16311  005A26  EE20 F010          	lfsr	2,16
 16312  005A2A  5189               	movf	RouteManagerShouldInsert@entry& (0+255),w,b
 16313  005A2C  26D9               	addwf	fsr2l,f,c
 16314  005A2E  518A               	movf	(RouteManagerShouldInsert@entry+1)& (0+255),w,b
 16315  005A30  22DA               	addwfc	fsr2h,f,c
 16316  005A32  CFDE F087          	movff	postinc2,RouteManagerShouldInsert@neighEtx
 16317  005A36  CFDD F088          	movff	postdec2,RouteManagerShouldInsert@neighEtx+1
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;RouteManager.c: 400: found |= (pathEtx < neighEtx);
 16321  005A3A  5187               	movf	RouteManagerShouldInsert@neighEtx& (0+255),w,b
 16322  005A3C  5D85               	subwf	RouteManagerShouldInsert@pathEtx& (0+255),w,b
 16323  005A3E  5188               	movf	(RouteManagerShouldInsert@neighEtx+1)& (0+255),w,b
 16324  005A40  5986               	subwfb	(RouteManagerShouldInsert@pathEtx+1)& (0+255),w,b
 16325  005A42  0E01               	movlw	1
 16326  005A44  B0D8               	btfsc	status,0,c
 16327  005A46  0E00               	movlw	0
 16328  005A48  138D               	iorwf	RouteManagerShouldInsert@found& (0+255),f,b
 16329  005A4A                     l13113:
 16330                           
 16331                           ; BSR set to: 0
 16332  005A4A  4B8B               	infsnz	RouteManagerShouldInsert@i& (0+255),f,b
 16333  005A4C  2B8C               	incf	(RouteManagerShouldInsert@i+1)& (0+255),f,b
 16334  005A4E                     l13115:
 16335                           
 16336                           ; BSR set to: 0
 16337  005A4E  5039               	movf	_routingTableActive,w,c
 16338  005A50  5D8B               	subwf	RouteManagerShouldInsert@i& (0+255),w,b
 16339  005A52  503A               	movf	_routingTableActive+1,w,c
 16340  005A54  598C               	subwfb	(RouteManagerShouldInsert@i+1)& (0+255),w,b
 16341  005A56  E203               	bc	l13119
 16342                           
 16343                           ; BSR set to: 0
 16344  005A58  518D               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 16345  005A5A  E101               	bnz	l13119
 16346  005A5C  D7B9               	goto	l13105
 16347  005A5E                     l13119:
 16348                           
 16349                           ; BSR set to: 0
 16350                           ;RouteManager.c: 401: }
 16351                           ;RouteManager.c: 402: }
 16352                           ;RouteManager.c: 403: }
 16353                           ;RouteManager.c: 404: }
 16354                           ;RouteManager.c: 405: return found;
 16355  005A5E  518D               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 16356                           
 16357                           ; BSR set to: 0
 16358  005A60  0012               	return		;funcret
 16359  005A62                     __end_of_RouteManagerShouldInsert:
 16360                           	opt stack 0
 16361                           tblptru	equ	0xFF8
 16362                           tblptrh	equ	0xFF7
 16363                           tblptrl	equ	0xFF6
 16364                           tablat	equ	0xFF5
 16365                           prodh	equ	0xFF4
 16366                           prodl	equ	0xFF3
 16367                           postinc0	equ	0xFEE
 16368                           plusw0	equ	0xFEB
 16369                           fsr0h	equ	0xFEA
 16370                           fsr0l	equ	0xFE9
 16371                           wreg	equ	0xFE8
 16372                           indf1	equ	0xFE7
 16373                           postdec1	equ	0xFE5
 16374                           plusw1	equ	0xFE3
 16375                           fsr1h	equ	0xFE2
 16376                           fsr1l	equ	0xFE1
 16377                           indf2	equ	0xFDF
 16378                           postinc2	equ	0xFDE
 16379                           postdec2	equ	0xFDD
 16380                           plusw2	equ	0xFDB
 16381                           fsr2h	equ	0xFDA
 16382                           fsr2l	equ	0xFD9
 16383                           status	equ	0xFD8
 16384                           
 16385 ;; *************** function _DeviceManagerGetDeviceType *****************
 16386 ;; Defined at:
 16387 ;;		line 106 in file "../DeviceManager.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;  address         8   32[BANK0 ] struct addr_t_def
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;  i               2   43[BANK0 ] unsigned int 
 16392 ;;  dev             1   42[BANK0 ] enum E145
 16393 ;; Return value:  Size  Location     Type
 16394 ;;                  1    wreg      enum E144
 16395 ;; Registers used:
 16396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16397 ;; Tracked objects:
 16398 ;;		On entry : E/0
 16399 ;;		On exit  : F/0
 16400 ;;		Unchanged: 0/0
 16401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16402 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16403 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16405 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16406 ;;Total ram usage:       13 bytes
 16407 ;; Hardware stack levels used:    1
 16408 ;; Hardware stack levels required when called:    6
 16409 ;; This function calls:
 16410 ;;		_isSameAddress
 16411 ;; This function is called by:
 16412 ;;		_radioReceivedPacket
 16413 ;;		_NetworkUnicastData
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text54
 16418  006662                     __ptext54:
 16419                           	opt stack 0
 16420  006662                     _DeviceManagerGetDeviceType:
 16421                           	opt stack 22
 16422                           
 16423                           ;DeviceManager.c: 108: uint16_t i;
 16424                           ;DeviceManager.c: 109: DeviceType_t dev=DeviceRFD;
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;incstack = 0
 16428  006662  0E01               	movlw	1
 16429  006664  0100               	movlb	0	; () banked
 16430  006666  6F8A               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;DeviceManager.c: 110: for(i=0;i<20;i++)
 16434  006668  6B8B               	clrf	DeviceManagerGetDeviceType@i& (0+255),b
 16435  00666A  6B8C               	clrf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16436  00666C                     l13613:
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;DeviceManager.c: 111: {
 16440                           ;DeviceManager.c: 112: if(isSameAddress(address,list[i].address)==1)
 16441  00666C  EE20  F080         	lfsr	2,DeviceManagerGetDeviceType@address
 16442  006670  EE00  F070         	lfsr	0,isSameAddress@a1
 16443  006674  0E07               	movlw	7
 16444  006676                     u20541:
 16445  006676  CFDB FFEB          	movff	plusw2,plusw0
 16446  00667A  06E8               	decf	wreg,f,c
 16447  00667C  E2FC               	bc	u20541
 16448  00667E  0E11               	movlw	17
 16449  006680  038B               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 16450  006682  CFF3 F088          	movff	prodl,??_DeviceManagerGetDeviceType
 16451  006686  CFF4 F089          	movff	prodh,??_DeviceManagerGetDeviceType+1
 16452  00668A  038C               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16453  00668C  50F3               	movf	prodl,w,c
 16454  00668E  2789               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 16455  006690  0EF6               	movlw	low _list
 16456  006692  2588               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 16457  006694  6ED9               	movwf	fsr2l,c
 16458  006696  0E0B               	movlw	high _list
 16459  006698  2189               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 16460  00669A  6EDA               	movwf	fsr2h,c
 16461  00669C  EE00  F078         	lfsr	0,isSameAddress@a2
 16462  0066A0  0E07               	movlw	7
 16463  0066A2                     u20551:
 16464  0066A2  CFDB FFEB          	movff	plusw2,plusw0
 16465  0066A6  06E8               	decf	wreg,f,c
 16466  0066A8  E2FC               	bc	u20551
 16467  0066AA  ECC5  F03C         	call	_isSameAddress	;wreg free
 16468  0066AE  06E8               	decf	wreg,f,c
 16469  0066B0  E111               	bnz	l13617
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;DeviceManager.c: 113: {
 16473                           ;DeviceManager.c: 114: dev=list[i].devType;
 16474  0066B2  0E11               	movlw	17
 16475  0066B4  038B               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 16476  0066B6  CFF3 F088          	movff	prodl,??_DeviceManagerGetDeviceType
 16477  0066BA  CFF4 F089          	movff	prodh,??_DeviceManagerGetDeviceType+1
 16478  0066BE  038C               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16479  0066C0  50F3               	movf	prodl,w,c
 16480  0066C2  2789               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 16481  0066C4  0E06               	movlw	low (_list+16)
 16482  0066C6  2588               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 16483  0066C8  6ED9               	movwf	fsr2l,c
 16484  0066CA  0E0C               	movlw	high (_list+16)
 16485  0066CC  2189               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 16486  0066CE  6EDA               	movwf	fsr2h,c
 16487  0066D0  50DF               	movf	indf2,w,c
 16488  0066D2  6F8A               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 16489  0066D4                     l13617:
 16490                           
 16491                           ; BSR set to: 0
 16492  0066D4  4B8B               	infsnz	DeviceManagerGetDeviceType@i& (0+255),f,b
 16493  0066D6  2B8C               	incf	(DeviceManagerGetDeviceType@i+1)& (0+255),f,b
 16494                           
 16495                           ; BSR set to: 0
 16496  0066D8  518C               	movf	(DeviceManagerGetDeviceType@i+1)& (0+255),w,b
 16497  0066DA  E103               	bnz	u20570
 16498  0066DC  0E14               	movlw	20
 16499  0066DE  5D8B               	subwf	DeviceManagerGetDeviceType@i& (0+255),w,b
 16500  0066E0  E3C5               	bnc	l13613
 16501  0066E2                     u20570:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;DeviceManager.c: 115: }
 16505                           ;DeviceManager.c: 116: }
 16506                           ;DeviceManager.c: 117: return(dev);
 16507  0066E2  518A               	movf	DeviceManagerGetDeviceType@dev& (0+255),w,b
 16508                           
 16509                           ; BSR set to: 0
 16510  0066E4  0012               	return		;funcret
 16511  0066E6                     __end_of_DeviceManagerGetDeviceType:
 16512                           	opt stack 0
 16513                           tblptru	equ	0xFF8
 16514                           tblptrh	equ	0xFF7
 16515                           tblptrl	equ	0xFF6
 16516                           tablat	equ	0xFF5
 16517                           prodh	equ	0xFF4
 16518                           prodl	equ	0xFF3
 16519                           postinc0	equ	0xFEE
 16520                           plusw0	equ	0xFEB
 16521                           fsr0h	equ	0xFEA
 16522                           fsr0l	equ	0xFE9
 16523                           wreg	equ	0xFE8
 16524                           indf1	equ	0xFE7
 16525                           postdec1	equ	0xFE5
 16526                           plusw1	equ	0xFE3
 16527                           fsr1h	equ	0xFE2
 16528                           fsr1l	equ	0xFE1
 16529                           indf2	equ	0xFDF
 16530                           postinc2	equ	0xFDE
 16531                           postdec2	equ	0xFDD
 16532                           plusw2	equ	0xFDB
 16533                           fsr2h	equ	0xFDA
 16534                           fsr2l	equ	0xFD9
 16535                           status	equ	0xFD8
 16536                           
 16537 ;; *************** function _DeviceManagerBufferDeviceData *****************
 16538 ;; Defined at:
 16539 ;;		line 120 in file "../DeviceManager.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;  address         8   12[BANK0 ] struct addr_t_def
 16542 ;;  data            2   20[BANK0 ] PTR unsigned char 
 16543 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), TxBuffer(64), 
 16544 ;;  size            2   22[BANK0 ] unsigned int 
 16545 ;;  isSecure        1   24[BANK0 ] unsigned char 
 16546 ;;  isFormed        1   25[BANK0 ] unsigned char 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;  devBuffer       2    0        PTR struct devDataBuffer
 16549 ;;		 -> NULL(0), 
 16550 ;;  i               2    0        unsigned int 
 16551 ;;  empty           2   31[BANK0 ] unsigned int 
 16552 ;;  recordLen       2    0        unsigned int 
 16553 ;;  index           2    0        unsigned int 
 16554 ;;  res             1    0        unsigned char 
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      unsigned char 
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, status,0, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : F/0
 16561 ;;		On exit  : F/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16564 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16568 ;;Total ram usage:       25 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:    5
 16571 ;; This function calls:
 16572 ;;		_NetworkAddressSizeGet
 16573 ;;		_memcpy
 16574 ;; This function is called by:
 16575 ;;		_radioReceivedPacket
 16576 ;;		_NetworkUnicastData
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           
 16580                           	psect	text55
 16581  007C26                     __ptext55:
 16582                           	opt stack 0
 16583  007C26                     _DeviceManagerBufferDeviceData:
 16584                           	opt stack 23
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;DeviceManager.c: 123: uint16_t i;
 16588                           ;DeviceManager.c: 124: uint16_t empty=0xffff;
 16589                           
 16590                           ; BSR set to: 0
 16591                           ;incstack = 0
 16592  007C26  697F               	setf	DeviceManagerBufferDeviceData@empty& (0+255),b
 16593  007C28  6980               	setf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),b
 16594                           
 16595                           ; BSR set to: 0
 16596  007C2A  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 16597                           
 16598                           ; BSR set to: 0
 16599                           
 16600                           ; BSR set to: 0
 16601                           ;DeviceManager.c: 178: }
 16602                           ;DeviceManager.c: 179: }
 16603                           ;DeviceManager.c: 180: }
 16604                           ;DeviceManager.c: 181: }
 16605                           ;DeviceManager.c: 182: return(res);
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;DeviceManager.c: 129: if(devBuffers!=(0))
 16609  007C2E  0C00               	retlw	0	;funcret
 16610  007C30                     __end_of_DeviceManagerBufferDeviceData:
 16611                           	opt stack 0
 16612                           tblptru	equ	0xFF8
 16613                           tblptrh	equ	0xFF7
 16614                           tblptrl	equ	0xFF6
 16615                           tablat	equ	0xFF5
 16616                           prodh	equ	0xFF4
 16617                           prodl	equ	0xFF3
 16618                           postinc0	equ	0xFEE
 16619                           plusw0	equ	0xFEB
 16620                           fsr0h	equ	0xFEA
 16621                           fsr0l	equ	0xFE9
 16622                           wreg	equ	0xFE8
 16623                           indf1	equ	0xFE7
 16624                           postdec1	equ	0xFE5
 16625                           plusw1	equ	0xFE3
 16626                           fsr1h	equ	0xFE2
 16627                           fsr1l	equ	0xFE1
 16628                           indf2	equ	0xFDF
 16629                           postinc2	equ	0xFDE
 16630                           postdec2	equ	0xFDD
 16631                           plusw2	equ	0xFDB
 16632                           fsr2h	equ	0xFDA
 16633                           fsr2l	equ	0xFD9
 16634                           status	equ	0xFD8
 16635                           
 16636 ;; *************** function _BlinkRedLED *****************
 16637 ;; Defined at:
 16638 ;;		line 584 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;		None
 16641 ;; Auto vars:     Size  Location     Type
 16642 ;;		None
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  1    wreg      void 
 16645 ;; Registers used:
 16646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16647 ;; Tracked objects:
 16648 ;;		On entry : F/1
 16649 ;;		On exit  : F/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;Total ram usage:        0 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:    5
 16659 ;; This function calls:
 16660 ;;		_LEDCommand
 16661 ;; This function is called by:
 16662 ;;		_radioReceivedPacket
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           	psect	text56
 16667  007BD6                     __ptext56:
 16668                           	opt stack 0
 16669  007BD6                     _BlinkRedLED:
 16670                           	opt stack 22
 16671                           
 16672                           ; BSR set to: 1
 16673                           ;system.c: 586: LEDCommand(LEDRed,lCMD_Blink);
 16674                           
 16675                           ; BSR set to: 0
 16676                           ;incstack = 0
 16677  007BD6  0E03               	movlw	3
 16678  007BD8  0100               	movlb	0	; () banked
 16679  007BDA  6F60               	movwf	LEDCommand@cmd& (0+255),b
 16680  007BDC  0E02               	movlw	2
 16681  007BDE  EFBF  F03B         	goto	_LEDCommand
 16682  007BE2                     __end_of_BlinkRedLED:
 16683                           	opt stack 0
 16684                           tblptru	equ	0xFF8
 16685                           tblptrh	equ	0xFF7
 16686                           tblptrl	equ	0xFF6
 16687                           tablat	equ	0xFF5
 16688                           prodh	equ	0xFF4
 16689                           prodl	equ	0xFF3
 16690                           postinc0	equ	0xFEE
 16691                           plusw0	equ	0xFEB
 16692                           fsr0h	equ	0xFEA
 16693                           fsr0l	equ	0xFE9
 16694                           wreg	equ	0xFE8
 16695                           indf1	equ	0xFE7
 16696                           postdec1	equ	0xFE5
 16697                           plusw1	equ	0xFE3
 16698                           fsr1h	equ	0xFE2
 16699                           fsr1l	equ	0xFE1
 16700                           indf2	equ	0xFDF
 16701                           postinc2	equ	0xFDE
 16702                           postdec2	equ	0xFDD
 16703                           plusw2	equ	0xFDB
 16704                           fsr2h	equ	0xFDA
 16705                           fsr2l	equ	0xFD9
 16706                           status	equ	0xFD8
 16707                           
 16708 ;; *************** function _LEDCommand *****************
 16709 ;; Defined at:
 16710 ;;		line 576 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;  led             1    wreg     enum E8051
 16713 ;;  cmd             1    0[BANK0 ] enum E8057
 16714 ;; Auto vars:     Size  Location     Type
 16715 ;;  led             1    2[BANK0 ] enum E8051
 16716 ;; Return value:  Size  Location     Type
 16717 ;;                  1    wreg      void 
 16718 ;; Registers used:
 16719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16720 ;; Tracked objects:
 16721 ;;		On entry : F/0
 16722 ;;		On exit  : F/0
 16723 ;;		Unchanged: 0/0
 16724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16725 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16728 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16729 ;;Total ram usage:        3 bytes
 16730 ;; Hardware stack levels used:    1
 16731 ;; Hardware stack levels required when called:    4
 16732 ;; This function calls:
 16733 ;;		Nothing
 16734 ;; This function is called by:
 16735 ;;		_BlinkRedLED
 16736 ;;		_main
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           	psect	text57
 16741  00777E                     __ptext57:
 16742                           	opt stack 0
 16743  00777E                     _LEDCommand:
 16744                           	opt stack 22
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;incstack = 0
 16748                           ;LEDCommand@led stored from wreg
 16749  00777E  6F62               	movwf	LEDCommand@led& (0+255),b
 16750                           
 16751                           ;system.c: 578: if( (LEDCmd[led]!=lCMD_On) && (LEDCmd[led]!=lCMD_Off) )
 16752  007780  0100               	movlb	0	; () banked
 16753  007782  5162               	movf	LEDCommand@led& (0+255),w,b
 16754  007784  0F36               	addlw	low _LEDCmd
 16755  007786  6ED9               	movwf	fsr2l,c
 16756  007788  6ADA               	clrf	fsr2h,c
 16757  00778A  0E02               	movlw	2
 16758  00778C  18DE               	xorwf	postinc2,w,c
 16759  00778E  B4D8               	btfsc	status,2,c
 16760  007790  0012               	return	
 16761                           
 16762                           ; BSR set to: 0
 16763  007792  5162               	movf	LEDCommand@led& (0+255),w,b
 16764  007794  0F36               	addlw	low _LEDCmd
 16765  007796  6ED9               	movwf	fsr2l,c
 16766  007798  6ADA               	clrf	fsr2h,c
 16767  00779A  04DE               	decf	postinc2,w,c
 16768  00779C  B4D8               	btfsc	status,2,c
 16769  00779E  0012               	return	
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;system.c: 579: {
 16773                           ;system.c: 580: LEDCmd[led]=cmd;
 16774  0077A0  5162               	movf	LEDCommand@led& (0+255),w,b
 16775  0077A2  0F36               	addlw	low _LEDCmd
 16776  0077A4  6ED9               	movwf	fsr2l,c
 16777  0077A6  6ADA               	clrf	fsr2h,c
 16778  0077A8  C060  FFDF         	movff	LEDCommand@cmd,indf2
 16779                           
 16780                           ; BSR set to: 0
 16781  0077AC  0012               	return		;funcret
 16782  0077AE                     __end_of_LEDCommand:
 16783                           	opt stack 0
 16784                           tblptru	equ	0xFF8
 16785                           tblptrh	equ	0xFF7
 16786                           tblptrl	equ	0xFF6
 16787                           tablat	equ	0xFF5
 16788                           prodh	equ	0xFF4
 16789                           prodl	equ	0xFF3
 16790                           postinc0	equ	0xFEE
 16791                           plusw0	equ	0xFEB
 16792                           fsr0h	equ	0xFEA
 16793                           fsr0l	equ	0xFE9
 16794                           wreg	equ	0xFE8
 16795                           indf1	equ	0xFE7
 16796                           postdec1	equ	0xFE5
 16797                           plusw1	equ	0xFE3
 16798                           fsr1h	equ	0xFE2
 16799                           fsr1l	equ	0xFE1
 16800                           indf2	equ	0xFDF
 16801                           postinc2	equ	0xFDE
 16802                           postdec2	equ	0xFDD
 16803                           plusw2	equ	0xFDB
 16804                           fsr2h	equ	0xFDA
 16805                           fsr2l	equ	0xFD9
 16806                           status	equ	0xFD8
 16807                           
 16808 ;; *************** function _TimeTickISR *****************
 16809 ;; Defined at:
 16810 ;;		line 10 in file "../TimeTick.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;		None
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;		None
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0
 16819 ;; Tracked objects:
 16820 ;;		On entry : F/0
 16821 ;;		On exit  : F/2
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;Total ram usage:        0 bytes
 16829 ;; Hardware stack levels used:    1
 16830 ;; Hardware stack levels required when called:    4
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_MiApp_MessageAvailable
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text58
 16839  00774C                     __ptext58:
 16840                           	opt stack 0
 16841  00774C                     _TimeTickISR:
 16842                           	opt stack 24
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;TimeTick.c: 15: if(Tick_MS.lsb<0xffffffff)
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;incstack = 0
 16849  00774C  0102               	movlb	2	; () banked
 16850  00774E  29B5               	incf	_Tick_MS& (0+255),w,b
 16851  007750  E106               	bnz	u20950
 16852  007752  29B6               	incf	(_Tick_MS+1)& (0+255),w,b
 16853  007754  E104               	bnz	u20950
 16854  007756  29B7               	incf	(_Tick_MS+2)& (0+255),w,b
 16855  007758  E102               	bnz	u20950
 16856  00775A  29B8               	incf	(_Tick_MS+3)& (0+255),w,b
 16857  00775C  E006               	bz	l2176
 16858  00775E                     u20950:
 16859                           
 16860                           ; BSR set to: 2
 16861                           ;TimeTick.c: 16: {
 16862                           ;TimeTick.c: 17: Tick_MS.lsb++;
 16863  00775E  2BB5               	incf	_Tick_MS& (0+255),f,b
 16864  007760  0E00               	movlw	0
 16865  007762  23B6               	addwfc	(_Tick_MS+1)& (0+255),f,b
 16866  007764  23B7               	addwfc	(_Tick_MS+2)& (0+255),f,b
 16867  007766  23B8               	addwfc	(_Tick_MS+3)& (0+255),f,b
 16868                           
 16869                           ;TimeTick.c: 18: }
 16870  007768  0C00               	retlw	0
 16871  00776A                     l2176:
 16872                           
 16873                           ; BSR set to: 2
 16874                           ;TimeTick.c: 19: else
 16875                           ;TimeTick.c: 20: {
 16876                           ;TimeTick.c: 21: Tick_MS.lsb=0;
 16877  00776A  6BB5               	clrf	_Tick_MS& (0+255),b
 16878  00776C  6BB6               	clrf	(_Tick_MS+1)& (0+255),b
 16879  00776E  6BB7               	clrf	(_Tick_MS+2)& (0+255),b
 16880  007770  6BB8               	clrf	(_Tick_MS+3)& (0+255),b
 16881                           
 16882                           ; BSR set to: 2
 16883                           ;TimeTick.c: 22: Tick_MS.msb++;
 16884  007772  2BB9               	incf	(_Tick_MS+4)& (0+255),f,b
 16885  007774  0E00               	movlw	0
 16886  007776  23BA               	addwfc	(_Tick_MS+5)& (0+255),f,b
 16887  007778  23BB               	addwfc	(_Tick_MS+6)& (0+255),f,b
 16888  00777A  23BC               	addwfc	(_Tick_MS+7)& (0+255),f,b
 16889                           
 16890                           ; BSR set to: 2
 16891  00777C  0C00               	retlw	0	;funcret
 16892  00777E                     __end_of_TimeTickISR:
 16893                           	opt stack 0
 16894                           tblptru	equ	0xFF8
 16895                           tblptrh	equ	0xFF7
 16896                           tblptrl	equ	0xFF6
 16897                           tablat	equ	0xFF5
 16898                           prodh	equ	0xFF4
 16899                           prodl	equ	0xFF3
 16900                           postinc0	equ	0xFEE
 16901                           plusw0	equ	0xFEB
 16902                           fsr0h	equ	0xFEA
 16903                           fsr0l	equ	0xFE9
 16904                           wreg	equ	0xFE8
 16905                           indf1	equ	0xFE7
 16906                           postdec1	equ	0xFE5
 16907                           plusw1	equ	0xFE3
 16908                           fsr1h	equ	0xFE2
 16909                           fsr1l	equ	0xFE1
 16910                           indf2	equ	0xFDF
 16911                           postinc2	equ	0xFDE
 16912                           postdec2	equ	0xFDD
 16913                           plusw2	equ	0xFDB
 16914                           fsr2h	equ	0xFDA
 16915                           fsr2l	equ	0xFD9
 16916                           status	equ	0xFD8
 16917                           
 16918 ;; *************** function _NetworkManagerTask *****************
 16919 ;; Defined at:
 16920 ;;		line 53 in file "../NetworkManager.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;		None
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;  data           37    0[BANK1 ] unsigned char [37]
 16925 ;;  sz              2   37[BANK1 ] unsigned int 
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16930 ;; Tracked objects:
 16931 ;;		On entry : D/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16936 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16938 ;;      Totals:         0       4      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;Total ram usage:       43 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:   13
 16942 ;; This function calls:
 16943 ;;		_BeaconManagerTask
 16944 ;;		_BroadcastManagerTask
 16945 ;;		_CoordinatorGenericAddress
 16946 ;;		_MSTickGet
 16947 ;;		_MSTickGetDiffNow
 16948 ;;		_MiApp_IsNetworkBusy
 16949 ;;		_NetworkGetDeviceType
 16950 ;;		_NetworkGetPANID
 16951 ;;		_NetworkGetParentAddress
 16952 ;;		_NetworkPrepareSendPacket
 16953 ;;		_RMRoutingTableCount
 16954 ;;		_RouteManagerPerformUpdate
 16955 ;;		_RouteManagerTask
 16956 ;;		_RouterEvicted
 16957 ;;		_TransportManagerTask
 16958 ;;		_isInvalidAddress
 16959 ;;		_isNetworkSecurityEnabled
 16960 ;;		_krnd
 16961 ;;		_radioUnicast
 16962 ;; This function is called by:
 16963 ;;		_MiApp_MessageAvailable
 16964 ;; This function uses a non-reentrant model
 16965 ;;
 16966                           
 16967                           	psect	text59
 16968  002398                     __ptext59:
 16969                           	opt stack 0
 16970  002398                     _NetworkManagerTask:
 16971                           	opt stack 15
 16972                           
 16973                           ;NetworkManager.c: 55: static TickMS tStart;
 16974                           ;NetworkManager.c: 56: static SPAN delay;
 16975                           ;NetworkManager.c: 57: uint8_t data[sizeof(net_data_header_t)+8+1];
 16976                           ;NetworkManager.c: 58: uint16_t sz;
 16977                           ;NetworkManager.c: 60: BeaconManagerTask();
 16978                           
 16979                           ; BSR set to: 2
 16980                           ;incstack = 0
 16981  002398  ECA3  F02D         	call	_BeaconManagerTask	;wreg free
 16982                           
 16983                           ;NetworkManager.c: 61: RouteManagerTask();
 16984  00239C  ECAC  F039         	call	_RouteManagerTask	;wreg free
 16985                           
 16986                           ;NetworkManager.c: 62: BroadcastManagerTask();
 16987  0023A0  EC67  F01C         	call	_BroadcastManagerTask	;wreg free
 16988                           
 16989                           ;NetworkManager.c: 63: TransportManagerTask();
 16990  0023A4  ECC5  F00A         	call	_TransportManagerTask	;wreg free
 16991                           
 16992                           ;NetworkManager.c: 65: switch(nState)
 16993  0023A8  D173               	goto	l13937
 16994  0023AA                     l13855:
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;NetworkManager.c: 68: if(NetworkGetDeviceType()==DeviceCoordinator)
 16998  0023AA  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 16999  0023AE  0900               	iorlw	0
 17000  0023B0  E104               	bnz	l13859
 17001                           
 17002                           ;NetworkManager.c: 69: {
 17003                           ;NetworkManager.c: 70: nState=netOperating;
 17004  0023B2  0E04               	movlw	4
 17005  0023B4  0101               	movlb	1	; () banked
 17006  0023B6  6FE2               	movwf	_nState& (0+255),b
 17007                           
 17008                           ;NetworkManager.c: 71: }else
 17009  0023B8  0C04               	retlw	4
 17010  0023BA                     l13859:
 17011                           
 17012                           ;NetworkManager.c: 72: {
 17013                           ;NetworkManager.c: 73: nState=netWaitRoutes;
 17014  0023BA  0E01               	movlw	1
 17015  0023BC  0101               	movlb	1	; () banked
 17016  0023BE  6FE2               	movwf	_nState& (0+255),b
 17017  0023C0  0C01               	retlw	1
 17018  0023C2                     l13861:
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;NetworkManager.c: 78: if(NetworkGetDeviceType()!=DeviceCoordinator)
 17022  0023C2  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 17023  0023C6  0900               	iorlw	0
 17024  0023C8  B4D8               	btfsc	status,2,c
 17025  0023CA  0012               	return	
 17026                           
 17027                           ;NetworkManager.c: 79: {
 17028                           ;NetworkManager.c: 80: if( (NetworkGetDeviceType()!=DeviceCoordinator) && isInvalidAddre
      +                          ss(NetworkGetParentAddress()) )
 17029  0023CC  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 17030  0023D0  0900               	iorlw	0
 17031  0023D2  E011               	bz	l13869
 17032  0023D4  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17033  0023D8  CFE9 FFD9          	movff	fsr0l,fsr2l
 17034  0023DC  CFEA FFDA          	movff	fsr0h,fsr2h
 17035  0023E0  EE00  F079         	lfsr	0,isInvalidAddress@address
 17036  0023E4  0E07               	movlw	7
 17037  0023E6                     u20991:
 17038  0023E6  CFDB FFEB          	movff	plusw2,plusw0
 17039  0023EA  06E8               	decf	wreg,f,c
 17040  0023EC  E2FC               	bc	u20991
 17041  0023EE  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 17042  0023F2  0900               	iorlw	0
 17043  0023F4  E1E2               	bnz	l13859
 17044  0023F6                     l13869:
 17045  0023F6  0102               	movlb	2	; () banked
 17046  0023F8  5192               	movf	(_routeInfo+12)& (0+255),w,b
 17047  0023FA  A4D8               	btfss	status,2,c
 17048  0023FC  0012               	return	
 17049  0023FE                     l13871:
 17050                           
 17051                           ;NetworkManager.c: 84: {
 17052                           ;NetworkManager.c: 85: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 17053  0023FE  EC76  F022         	call	_krnd	;wreg free
 17054  002402  5160               	movf	?_krnd& (0+255),w,b
 17055  002404  6FF6               	movwf	??_NetworkManagerTask& (0+255),b
 17056  002406  0E03               	movlw	3
 17057  002408  1561               	andwf	(?_krnd+1)& (0+255),w,b
 17058  00240A  6FF7               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 17059  00240C  6BF8               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 17060  00240E  6BF9               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 17061  002410  0EE8               	movlw	232
 17062  002412  25F6               	addwf	??_NetworkManagerTask& (0+255),w,b
 17063  002414  0102               	movlb	2	; () banked
 17064  002416  6F38               	movwf	NetworkManagerTask@delay& (0+255),b
 17065  002418  0E03               	movlw	3
 17066  00241A  0100               	movlb	0	; () banked
 17067  00241C  21F7               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 17068  00241E  0102               	movlb	2	; () banked
 17069  002420  6F39               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 17070  002422  0E00               	movlw	0
 17071  002424  0100               	movlb	0	; () banked
 17072  002426  21F8               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 17073  002428  0102               	movlb	2	; () banked
 17074  00242A  6F3A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 17075  00242C  0E00               	movlw	0
 17076  00242E  0100               	movlb	0	; () banked
 17077  002430  21F9               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 17078  002432  0102               	movlb	2	; () banked
 17079  002434  6F3B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 17080                           
 17081                           ; BSR set to: 2
 17082                           ;NetworkManager.c: 86: tStart=MSTickGet();
 17083  002436  EC70  F03B         	call	_MSTickGet	;wreg free
 17084  00243A  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17085  00243E  0E07               	movlw	7
 17086  002440                     u21021:
 17087  002440  CFEB FFDB          	movff	plusw0,plusw2
 17088  002444  06E8               	decf	wreg,f,c
 17089  002446  E2FC               	bc	u21021
 17090  002448                     l13875:
 17091                           
 17092                           ;NetworkManager.c: 87: nState=netDelayBeforeCheckin;
 17093  002448  0E05               	movlw	5
 17094  00244A  0101               	movlb	1	; () banked
 17095  00244C  6FE2               	movwf	_nState& (0+255),b
 17096  00244E  0C05               	retlw	5
 17097  002450                     l13877:
 17098                           
 17099                           ; BSR set to: 1
 17100                           ;NetworkManager.c: 93: if(RMRoutingTableCount()>0)
 17101  002450  EC18  F03E         	call	_RMRoutingTableCount	;wreg free
 17102  002454  0100               	movlb	0	; () banked
 17103  002456  5160               	movf	?_RMRoutingTableCount& (0+255),w,b
 17104  002458  1161               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 17105  00245A  B4D8               	btfsc	status,2,c
 17106  00245C  0012               	return	
 17107                           
 17108                           ; BSR set to: 0
 17109                           ;NetworkManager.c: 94: {
 17110                           ;NetworkManager.c: 95: tStart=MSTickGet();
 17111  00245E  EC70  F03B         	call	_MSTickGet	;wreg free
 17112  002462  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17113  002466  0E07               	movlw	7
 17114  002468                     u21041:
 17115  002468  CFEB FFDB          	movff	plusw0,plusw2
 17116  00246C  06E8               	decf	wreg,f,c
 17117  00246E  E2FC               	bc	u21041
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;NetworkManager.c: 96: nState=netWaitBeforeRouteUpdates;
 17121  002470  0E02               	movlw	2
 17122  002472  0101               	movlb	1	; () banked
 17123  002474  6FE2               	movwf	_nState& (0+255),b
 17124  002476  0C02               	retlw	2
 17125  002478                     l13883:
 17126                           
 17127                           ; BSR set to: 1
 17128                           ;NetworkManager.c: 101: if(MSTickGetDiffNow(tStart)>((SPAN)2000))
 17129  002478  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17130  00247C  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 17131  002480  0E07               	movlw	7
 17132  002482                     u21051:
 17133  002482  CFDB FFEB          	movff	plusw2,plusw0
 17134  002486  06E8               	decf	wreg,f,c
 17135  002488  E2FC               	bc	u21051
 17136  00248A  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 17137  00248E  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17138  002490  117E               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17139  002492  E107               	bnz	u21060
 17140  002494  0ED1               	movlw	209
 17141  002496  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17142  002498  0E07               	movlw	7
 17143  00249A  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17144  00249C  E202 EF18  F03E    	bnc	_RMRoutingTableCount
 17145  0024A2                     u21060:
 17146                           
 17147                           ; BSR set to: 0
 17148                           ;NetworkManager.c: 102: {
 17149                           ;NetworkManager.c: 103: RouteManagerPerformUpdate();
 17150  0024A2  EC37  F010         	call	_RouteManagerPerformUpdate	;wreg free
 17151  0024A6                     l13887:
 17152                           
 17153                           ;NetworkManager.c: 104: nState=netWaitParent;
 17154  0024A6  0E03               	movlw	3
 17155  0024A8  0101               	movlb	1	; () banked
 17156  0024AA  6FE2               	movwf	_nState& (0+255),b
 17157                           
 17158                           ;NetworkManager.c: 105: }else if(RMRoutingTableCount()>2)
 17159  0024AC  0C03               	retlw	3
 17160  0024AE                     l13891:
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;NetworkManager.c: 113: if(isInvalidAddress(NetworkGetParentAddress())==0)
 17164  0024AE  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17165  0024B2  CFE9 FFD9          	movff	fsr0l,fsr2l
 17166  0024B6  CFEA FFDA          	movff	fsr0h,fsr2h
 17167  0024BA  EE00  F079         	lfsr	0,isInvalidAddress@address
 17168  0024BE  0E07               	movlw	7
 17169  0024C0                     u21071:
 17170  0024C0  CFDB FFEB          	movff	plusw2,plusw0
 17171  0024C4  06E8               	decf	wreg,f,c
 17172  0024C6  E2FC               	bc	u21071
 17173  0024C8  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 17174  0024CC  0900               	iorlw	0
 17175  0024CE  E126               	bnz	l13899
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;NetworkManager.c: 114: {
 17179                           ;NetworkManager.c: 115: tStart=MSTickGet();
 17180  0024D0  EC70  F03B         	call	_MSTickGet	;wreg free
 17181  0024D4  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17182  0024D8  0E07               	movlw	7
 17183  0024DA                     u21091:
 17184  0024DA  CFEB FFDB          	movff	plusw0,plusw2
 17185  0024DE  06E8               	decf	wreg,f,c
 17186  0024E0  E2FC               	bc	u21091
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;NetworkManager.c: 117: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 17190  0024E2  EC76  F022         	call	_krnd	;wreg free
 17191  0024E6  5160               	movf	?_krnd& (0+255),w,b
 17192  0024E8  6FF6               	movwf	??_NetworkManagerTask& (0+255),b
 17193  0024EA  0E03               	movlw	3
 17194  0024EC  1561               	andwf	(?_krnd+1)& (0+255),w,b
 17195  0024EE  6FF7               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 17196  0024F0  6BF8               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 17197  0024F2  6BF9               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 17198  0024F4  0EE8               	movlw	232
 17199  0024F6  25F6               	addwf	??_NetworkManagerTask& (0+255),w,b
 17200  0024F8  0102               	movlb	2	; () banked
 17201  0024FA  6F38               	movwf	NetworkManagerTask@delay& (0+255),b
 17202  0024FC  0E03               	movlw	3
 17203  0024FE  0100               	movlb	0	; () banked
 17204  002500  21F7               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 17205  002502  0102               	movlb	2	; () banked
 17206  002504  6F39               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 17207  002506  0E00               	movlw	0
 17208  002508  0100               	movlb	0	; () banked
 17209  00250A  21F8               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 17210  00250C  0102               	movlb	2	; () banked
 17211  00250E  6F3A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 17212  002510  0E00               	movlw	0
 17213  002512  0100               	movlb	0	; () banked
 17214  002514  21F9               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 17215  002516  0102               	movlb	2	; () banked
 17216  002518  6F3B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 17217  00251A  D796               	goto	l13875
 17218  00251C                     l13899:
 17219                           
 17220                           ; BSR set to: 0
 17221  00251C  EC18  F03E         	call	_RMRoutingTableCount	;wreg free
 17222  002520  0100               	movlb	0	; () banked
 17223  002522  5160               	movf	?_RMRoutingTableCount& (0+255),w,b
 17224  002524  1161               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 17225  002526  E101 D748          	bz	l13859
 17226  00252A  0012               	return	
 17227  00252C                     l13903:
 17228                           
 17229                           ; BSR set to: 1
 17230                           ;NetworkManager.c: 126: if(isInvalidAddress(NetworkGetParentAddress())==1)
 17231  00252C  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17232  002530  CFE9 FFD9          	movff	fsr0l,fsr2l
 17233  002534  CFEA FFDA          	movff	fsr0h,fsr2h
 17234  002538  EE00  F079         	lfsr	0,isInvalidAddress@address
 17235  00253C  0E07               	movlw	7
 17236  00253E                     u21111:
 17237  00253E  CFDB FFEB          	movff	plusw2,plusw0
 17238  002542  06E8               	decf	wreg,f,c
 17239  002544  E2FC               	bc	u21111
 17240  002546  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 17241  00254A  06E8               	decf	wreg,f,c
 17242  00254C  E0AC               	bz	l13887
 17243                           
 17244                           ; BSR set to: 0
 17245  00254E  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17246  002552  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 17247  002556  0E07               	movlw	7
 17248  002558                     u21131:
 17249  002558  CFDB FFEB          	movff	plusw2,plusw0
 17250  00255C  06E8               	decf	wreg,f,c
 17251  00255E  E2FC               	bc	u21131
 17252  002560  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 17253  002564  517C               	movf	?_MSTickGetDiffNow& (0+255),w,b
 17254  002566  0102               	movlb	2	; () banked
 17255  002568  5D38               	subwf	NetworkManagerTask@delay& (0+255),w,b
 17256  00256A  0100               	movlb	0	; () banked
 17257  00256C  517D               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17258  00256E  0102               	movlb	2	; () banked
 17259  002570  5939               	subwfb	(NetworkManagerTask@delay+1)& (0+255),w,b
 17260  002572  0100               	movlb	0	; () banked
 17261  002574  517E               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17262  002576  0102               	movlb	2	; () banked
 17263  002578  593A               	subwfb	(NetworkManagerTask@delay+2)& (0+255),w,b
 17264  00257A  0100               	movlb	0	; () banked
 17265  00257C  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17266  00257E  0102               	movlb	2	; () banked
 17267  002580  593B               	subwfb	(NetworkManagerTask@delay+3)& (0+255),w,b
 17268  002582  B0D8               	btfsc	status,0,c
 17269  002584  0012               	return	
 17270                           
 17271                           ; BSR set to: 2
 17272  002586  EC5F  F03E         	call	_MiApp_IsNetworkBusy	;wreg free
 17273  00258A  0900               	iorlw	0
 17274  00258C  A4D8               	btfss	status,2,c
 17275  00258E  0012               	return	
 17276                           
 17277                           ; BSR set to: 2
 17278                           ;NetworkManager.c: 130: {
 17279                           ;NetworkManager.c: 131: nst--;
 17280  002590  0101               	movlb	1	; () banked
 17281  002592  07E3               	decf	_nst& (0+255),f,b	;volatile
 17282                           
 17283                           ; BSR set to: 1
 17284                           ;NetworkManager.c: 132: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketCheckin,(0),0);
 17285  002594  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
 17286  002598  CFE9 FFD9          	movff	fsr0l,fsr2l
 17287  00259C  CFEA FFDA          	movff	fsr0h,fsr2h
 17288  0025A0  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
 17289  0025A4  0E07               	movlw	7
 17290  0025A6                     u21161:
 17291  0025A6  CFDB FFEB          	movff	plusw2,plusw0
 17292  0025AA  06E8               	decf	wreg,f,c
 17293  0025AC  E2FC               	bc	u21161
 17294  0025AE  0E00               	movlw	low NetworkManagerTask@data
 17295  0025B0  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 17296  0025B2  0E01               	movlw	high NetworkManagerTask@data
 17297  0025B4  6F79               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 17298  0025B6  0E24               	movlw	36
 17299  0025B8  6F7A               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 17300  0025BA  6B7B               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 17301  0025BC  6B7C               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 17302  0025BE  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 17303  0025C0  6B7D               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 17304  0025C2  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
 17305  0025C6  C070  F125         	movff	?_NetworkPrepareSendPacket,NetworkManagerTask@sz
 17306  0025CA  C071  F126         	movff	?_NetworkPrepareSendPacket+1,NetworkManagerTask@sz+1
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;NetworkManager.c: 133: data[sz++]=NetworkGetDeviceType();
 17310  0025CE  0E00               	movlw	low NetworkManagerTask@data
 17311  0025D0  0101               	movlb	1	; () banked
 17312  0025D2  2525               	addwf	NetworkManagerTask@sz& (0+255),w,b
 17313  0025D4  6ED9               	movwf	fsr2l,c
 17314  0025D6  0E01               	movlw	high NetworkManagerTask@data
 17315  0025D8  2126               	addwfc	(NetworkManagerTask@sz+1)& (0+255),w,b
 17316  0025DA  6EDA               	movwf	fsr2h,c
 17317  0025DC  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 17318  0025E0  6EDF               	movwf	indf2,c
 17319  0025E2  0101               	movlb	1	; () banked
 17320  0025E4  4B25               	infsnz	NetworkManagerTask@sz& (0+255),f,b
 17321  0025E6  2B26               	incf	(NetworkManagerTask@sz+1)& (0+255),f,b
 17322                           
 17323                           ; BSR set to: 1
 17324                           ;NetworkManager.c: 135: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 17325  0025E8  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17326  0025EC  CFE9 FFD9          	movff	fsr0l,fsr2l
 17327  0025F0  CFEA FFDA          	movff	fsr0h,fsr2h
 17328  0025F4  EE00  F09F         	lfsr	0,radioUnicast@dest
 17329  0025F8  0E07               	movlw	7
 17330  0025FA                     u21171:
 17331  0025FA  CFDB FFEB          	movff	plusw2,plusw0
 17332  0025FE  06E8               	decf	wreg,f,c
 17333  002600  E2FC               	bc	u21171
 17334  002602  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 17335  002606  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
 17336  00260A  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 17337  00260E  0E00               	movlw	low NetworkManagerTask@data
 17338  002610  0100               	movlb	0	; () banked
 17339  002612  6FA9               	movwf	radioUnicast@data& (0+255),b
 17340  002614  0E01               	movlw	high NetworkManagerTask@data
 17341  002616  6FAA               	movwf	(radioUnicast@data+1)& (0+255),b
 17342  002618  C125  F0AB         	movff	NetworkManagerTask@sz,radioUnicast@datasize
 17343  00261C  EC48  F03E         	call	_isNetworkSecurityEnabled	;wreg free
 17344  002620  0100               	movlb	0	; () banked
 17345  002622  6FAC               	movwf	radioUnicast@isSecure& (0+255),b
 17346  002624  ECB4  F037         	call	_radioUnicast	;wreg free
 17347  002628  0900               	iorlw	0
 17348  00262A  E10F               	bnz	l13923
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;NetworkManager.c: 136: {
 17352                           ;NetworkManager.c: 137: RouterEvicted(NetworkGetParentAddress());
 17353  00262C  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17354  002630  CFE9 FFD9          	movff	fsr0l,fsr2l
 17355  002634  CFEA FFDA          	movff	fsr0h,fsr2h
 17356  002638  EE00  F08E         	lfsr	0,RouterEvicted@address
 17357  00263C  0E07               	movlw	7
 17358  00263E                     u21191:
 17359  00263E  CFDB FFEB          	movff	plusw2,plusw0
 17360  002642  06E8               	decf	wreg,f,c
 17361  002644  E2FC               	bc	u21191
 17362  002646  ECE0  F02E         	call	_RouterEvicted	;wreg free
 17363  00264A                     l13923:
 17364                           
 17365                           ; BSR set to: 0
 17366                           ;NetworkManager.c: 138: }
 17367                           ;NetworkManager.c: 139: nState=netWaitReply;
 17368  00264A  0E06               	movlw	6
 17369  00264C  0101               	movlb	1	; () banked
 17370  00264E  6FE2               	movwf	_nState& (0+255),b
 17371                           
 17372                           ; BSR set to: 1
 17373                           ;NetworkManager.c: 140: tStart=MSTickGet();
 17374  002650  EC70  F03B         	call	_MSTickGet	;wreg free
 17375  002654  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17376  002658  0E07               	movlw	7
 17377  00265A                     u21201:
 17378  00265A  CFEB FFDB          	movff	plusw0,plusw2
 17379  00265E  06E8               	decf	wreg,f,c
 17380  002660  E2FC               	bc	u21201
 17381  002662  0012               	return	
 17382  002664                     l13927:
 17383                           
 17384                           ; BSR set to: 1
 17385                           ;NetworkManager.c: 145: if(MSTickGetDiffNow(tStart)>((SPAN)1*1000ULL))
 17386  002664  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17387  002668  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 17388  00266C  0E07               	movlw	7
 17389  00266E                     u21211:
 17390  00266E  CFDB FFEB          	movff	plusw2,plusw0
 17391  002672  06E8               	decf	wreg,f,c
 17392  002674  E2FC               	bc	u21211
 17393  002676  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 17394  00267A  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17395  00267C  117E               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17396  00267E  E107               	bnz	u21220
 17397  002680  0EE9               	movlw	233
 17398  002682  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17399  002684  0E03               	movlw	3
 17400  002686  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17401  002688  E301 D6B9          	bc	l13871
 17402  00268C  0012               	return	
 17403  00268E                     u21220:
 17404  00268E  D6B7               	goto	l13871
 17405  002690                     l13937:
 17406                           
 17407                           ; BSR set to: 0
 17408  002690  0101               	movlb	1	; () banked
 17409  002692  51E2               	movf	_nState& (0+255),w,b
 17410                           
 17411                           ; Switch size 1, requested type "speed"
 17412                           ; Number of cases is 7, Range of values is 0 to 6
 17413                           ; switch strategies available:
 17414                           ; Name         Instructions Cycles
 17415                           ; simple_byte           22    12 (average)
 17416                           ;	Chosen strategy is simple_byte
 17417  002694  E101 D689          	bz	l13855
 17418  002698  0A01               	xorlw	1	; case 1
 17419  00269A  E101 D6D9          	bz	l13877
 17420  00269E  0A03               	xorlw	3	; case 2
 17421  0026A0  E101 D6EA          	bz	l13883
 17422  0026A4  0A01               	xorlw	1	; case 3
 17423  0026A6  E101 D702          	bz	l13891
 17424  0026AA  0A07               	xorlw	7	; case 4
 17425  0026AC  E101 D689          	bz	l13861
 17426  0026B0  0A01               	xorlw	1	; case 5
 17427  0026B2  E101 D73B          	bz	l13903
 17428  0026B6  0A03               	xorlw	3	; case 6
 17429  0026B8  E0D5               	bz	l13927
 17430  0026BA  0012               	return		;funcret
 17431  0026BC                     __end_of_NetworkManagerTask:
 17432                           	opt stack 0
 17433                           tblptru	equ	0xFF8
 17434                           tblptrh	equ	0xFF7
 17435                           tblptrl	equ	0xFF6
 17436                           tablat	equ	0xFF5
 17437                           prodh	equ	0xFF4
 17438                           prodl	equ	0xFF3
 17439                           postinc0	equ	0xFEE
 17440                           plusw0	equ	0xFEB
 17441                           fsr0h	equ	0xFEA
 17442                           fsr0l	equ	0xFE9
 17443                           wreg	equ	0xFE8
 17444                           indf1	equ	0xFE7
 17445                           postdec1	equ	0xFE5
 17446                           plusw1	equ	0xFE3
 17447                           fsr1h	equ	0xFE2
 17448                           fsr1l	equ	0xFE1
 17449                           indf2	equ	0xFDF
 17450                           postinc2	equ	0xFDE
 17451                           postdec2	equ	0xFDD
 17452                           plusw2	equ	0xFDB
 17453                           fsr2h	equ	0xFDA
 17454                           fsr2l	equ	0xFD9
 17455                           status	equ	0xFD8
 17456                           
 17457 ;; *************** function _TransportManagerTask *****************
 17458 ;; Defined at:
 17459 ;;		line 59 in file "../TransportManager.c"
 17460 ;; Parameters:    Size  Location     Type
 17461 ;;		None
 17462 ;; Auto vars:     Size  Location     Type
 17463 ;;  databuff       64   82[BANK0 ] unsigned char [64]
 17464 ;;  i               2  148[BANK0 ] unsigned int 
 17465 ;;  sz              2  146[BANK0 ] unsigned int 
 17466 ;; Return value:  Size  Location     Type
 17467 ;;                  1    wreg      void 
 17468 ;; Registers used:
 17469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17470 ;; Tracked objects:
 17471 ;;		On entry : F/0
 17472 ;;		On exit  : F/0
 17473 ;;		Unchanged: 0/0
 17474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17476 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17477 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17478 ;;      Totals:         0      72       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17479 ;;Total ram usage:       72 bytes
 17480 ;; Hardware stack levels used:    1
 17481 ;; Hardware stack levels required when called:   11
 17482 ;; This function calls:
 17483 ;;		_CoordinatorGenericAddress
 17484 ;;		_MSTickGet
 17485 ;;		_MSTickGetDiffNow
 17486 ;;		_NetworkGetPANID
 17487 ;;		_NetworkGetParentAddress
 17488 ;;		_NetworkHasRoute
 17489 ;;		_NetworkPrepareSendPacket
 17490 ;;		_RouterEvicted
 17491 ;;		_memcpy
 17492 ;;		_radioUnicast
 17493 ;; This function is called by:
 17494 ;;		_NetworkManagerTask
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           
 17498                           	psect	text60
 17499  00158A                     __ptext60:
 17500                           	opt stack 0
 17501  00158A                     _TransportManagerTask:
 17502                           	opt stack 16
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;TransportManager.c: 61: uint8_t databuff[64];
 17506                           ;TransportManager.c: 62: uint16_t i;
 17507                           ;TransportManager.c: 63: uint16_t sz;
 17508                           ;TransportManager.c: 64: switch(TMState)
 17509                           
 17510                           ;incstack = 0
 17511  00158A  D04A               	goto	l13771
 17512  00158C                     l13745:
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;TransportManager.c: 67: TMState=TMWaitRoute;
 17516  00158C  0E01               	movlw	1
 17517  00158E  D005               	goto	L7
 17518  001590                     l13747:
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;TransportManager.c: 71: if(NetworkHasRoute()==1)
 17522  001590  EC7A  F03A         	call	_NetworkHasRoute	;wreg free
 17523  001594  06E8               	decf	wreg,f,c
 17524  001596  E14A               	bnz	l13773
 17525                           
 17526                           ; BSR set to: 0
 17527                           ;TransportManager.c: 72: {
 17528                           ;TransportManager.c: 73: TMState=TMOperating;
 17529  001598  0E02               	movlw	2
 17530  00159A                     L7:
 17531  00159A  6E45               	movwf	_TMState,c
 17532  00159C  D047               	goto	l13773
 17533  00159E                     l13751:
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;TransportManager.c: 78: if(NetworkHasRoute()==0)
 17537  00159E  EC7A  F03A         	call	_NetworkHasRoute	;wreg free
 17538  0015A2  0900               	iorlw	0
 17539  0015A4  E143               	bnz	l13773
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;TransportManager.c: 79: {
 17543                           ;TransportManager.c: 80: for(i=0;i<2;i++)
 17544  0015A6  6BF4               	clrf	TransportManagerTask@i& (0+255),b
 17545  0015A8  6BF5               	clrf	(TransportManagerTask@i+1)& (0+255),b
 17546  0015AA                     l13759:
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;TransportManager.c: 81: {
 17550                           ;TransportManager.c: 82: if(TMQ[i].TMQState!=TMQIdle)
 17551  0015AA  0E4C               	movlw	76
 17552  0015AC  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17553  0015AE  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17554  0015B2  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17555  0015B6  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17556  0015B8  50F3               	movf	prodl,w,c
 17557  0015BA  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17558  0015BC  0E4B               	movlw	low (_TMQ+75)
 17559  0015BE  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17560  0015C0  6ED9               	movwf	fsr2l,c
 17561  0015C2  0E05               	movlw	high (_TMQ+75)
 17562  0015C4  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17563  0015C6  6EDA               	movwf	fsr2h,c
 17564  0015C8  50DF               	movf	indf2,w,c
 17565  0015CA  E022               	bz	l13763
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;TransportManager.c: 83: {
 17569                           ;TransportManager.c: 84: TMQ[i].TMQState=TMQSend;
 17570  0015CC  0E4C               	movlw	76
 17571  0015CE  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17572  0015D0  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17573  0015D4  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17574  0015D8  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17575  0015DA  50F3               	movf	prodl,w,c
 17576  0015DC  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17577  0015DE  0E4B               	movlw	low (_TMQ+75)
 17578  0015E0  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17579  0015E2  6ED9               	movwf	fsr2l,c
 17580  0015E4  0E05               	movlw	high (_TMQ+75)
 17581  0015E6  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17582  0015E8  6EDA               	movwf	fsr2h,c
 17583  0015EA  0E01               	movlw	1
 17584  0015EC  6EDF               	movwf	indf2,c
 17585                           
 17586                           ;TransportManager.c: 85: TMQ[i].retryCount=0;
 17587  0015EE  0E4C               	movlw	76
 17588  0015F0  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17589  0015F2  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17590  0015F6  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17591  0015FA  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17592  0015FC  50F3               	movf	prodl,w,c
 17593  0015FE  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17594  001600  0E49               	movlw	low (_TMQ+73)
 17595  001602  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17596  001604  6ED9               	movwf	fsr2l,c
 17597  001606  0E05               	movlw	high (_TMQ+73)
 17598  001608  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17599  00160A  6EDA               	movwf	fsr2h,c
 17600  00160C  0E00               	movlw	0
 17601  00160E  6EDF               	movwf	indf2,c
 17602  001610                     l13763:
 17603                           
 17604                           ; BSR set to: 0
 17605  001610  4BF4               	infsnz	TransportManagerTask@i& (0+255),f,b
 17606  001612  2BF5               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 17607                           
 17608                           ; BSR set to: 0
 17609  001614  51F5               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 17610  001616  E1BA               	bnz	l13745
 17611  001618  0E02               	movlw	2
 17612  00161A  5DF4               	subwf	TransportManagerTask@i& (0+255),w,b
 17613  00161C  E2B7               	bc	l13745
 17614  00161E  D7C5               	goto	l13759
 17615  001620                     l13771:
 17616                           
 17617                           ; BSR set to: 0
 17618  001620  5045               	movf	_TMState,w,c
 17619                           
 17620                           ; Switch size 1, requested type "speed"
 17621                           ; Number of cases is 3, Range of values is 0 to 2
 17622                           ; switch strategies available:
 17623                           ; Name         Instructions Cycles
 17624                           ; simple_byte           10     6 (average)
 17625                           ;	Chosen strategy is simple_byte
 17626  001622  E0B4               	bz	l13745
 17627  001624  0A01               	xorlw	1	; case 1
 17628  001626  E0B4               	bz	l13747
 17629  001628  0A03               	xorlw	3	; case 2
 17630  00162A  E0B9               	bz	l13751
 17631  00162C                     l13773:
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;TransportManager.c: 93: if(TMState==TMOperating)
 17635  00162C  0E02               	movlw	2
 17636  00162E  1845               	xorwf	_TMState,w,c
 17637  001630  A4D8               	btfss	status,2,c
 17638  001632  0012               	return	
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;TransportManager.c: 94: {
 17642                           ;TransportManager.c: 95: for(i=0;i<2;i++)
 17643  001634  6BF4               	clrf	TransportManagerTask@i& (0+255),b
 17644  001636  6BF5               	clrf	(TransportManagerTask@i+1)& (0+255),b
 17645  001638  D184               	goto	l13815
 17646  00163A                     l13781:
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;TransportManager.c: 103: if(TMQ[i].datasize>0)
 17650  00163A  0E4C               	movlw	76
 17651  00163C  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17652  00163E  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17653  001642  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17654  001646  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17655  001648  50F3               	movf	prodl,w,c
 17656  00164A  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17657  00164C  0E40               	movlw	low (_TMQ+64)
 17658  00164E  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17659  001650  6ED9               	movwf	fsr2l,c
 17660  001652  0E05               	movlw	high (_TMQ+64)
 17661  001654  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17662  001656  6EDA               	movwf	fsr2h,c
 17663  001658  50DF               	movf	indf2,w,c
 17664  00165A  E101 D189          	bz	l13817
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;TransportManager.c: 104: {
 17668                           ;TransportManager.c: 105: if(TMQ[i].flags.isFormedPacket==0)
 17669  00165E  0E4C               	movlw	76
 17670  001660  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17671  001662  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17672  001666  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17673  00166A  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17674  00166C  50F3               	movf	prodl,w,c
 17675  00166E  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17676  001670  0E4A               	movlw	low (_TMQ+74)
 17677  001672  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17678  001674  6ED9               	movwf	fsr2l,c
 17679  001676  0E05               	movlw	high (_TMQ+74)
 17680  001678  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17681  00167A  6EDA               	movwf	fsr2h,c
 17682  00167C  0105               	movlb	5	; () banked
 17683  00167E  B0DF               	btfsc	indf2,0,c
 17684  001680  D03A               	goto	l13787
 17685                           
 17686                           ; BSR set to: 5
 17687                           ;TransportManager.c: 106: {
 17688                           ;TransportManager.c: 107: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),databu
      +                          ff,PacketData,TMQ[i].data,TMQ[i].datasize);
 17689  001682  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
 17690  001686  CFE9 FFD9          	movff	fsr0l,fsr2l
 17691  00168A  CFEA FFDA          	movff	fsr0h,fsr2h
 17692  00168E  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
 17693  001692  0E07               	movlw	7
 17694  001694                     u20841:
 17695  001694  CFDB FFEB          	movff	plusw2,plusw0
 17696  001698  06E8               	decf	wreg,f,c
 17697  00169A  E2FC               	bc	u20841
 17698  00169C  0EB2               	movlw	low TransportManagerTask@databuff
 17699  00169E  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 17700  0016A0  6B79               	clrf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 17701  0016A2  0E23               	movlw	35
 17702  0016A4  6F7A               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 17703  0016A6  0E4C               	movlw	76
 17704  0016A8  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17705  0016AA  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17706  0016AE  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17707  0016B2  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17708  0016B4  50F3               	movf	prodl,w,c
 17709  0016B6  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17710  0016B8  0E00               	movlw	low _TMQ
 17711  0016BA  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17712  0016BC  6F7B               	movwf	NetworkPrepareSendPacket@data& (0+255),b
 17713  0016BE  0E05               	movlw	high _TMQ
 17714  0016C0  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17715  0016C2  6F7C               	movwf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 17716  0016C4  0E4C               	movlw	76
 17717  0016C6  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17718  0016C8  CFF3 F0B0          	movff	prodl,??_TransportManagerTask+2
 17719  0016CC  CFF4 F0B1          	movff	prodh,??_TransportManagerTask+3
 17720  0016D0  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17721  0016D2  50F3               	movf	prodl,w,c
 17722  0016D4  27B1               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 17723  0016D6  0E40               	movlw	low (_TMQ+64)
 17724  0016D8  25B0               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 17725  0016DA  6ED9               	movwf	fsr2l,c
 17726  0016DC  0E05               	movlw	high (_TMQ+64)
 17727  0016DE  21B1               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 17728  0016E0  6EDA               	movwf	fsr2h,c
 17729  0016E2  50DF               	movf	indf2,w,c
 17730  0016E4  6F7D               	movwf	NetworkPrepareSendPacket@size& (0+255),b
 17731  0016E6  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 17732  0016E8  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
 17733  0016EC  C070  F0F2         	movff	?_NetworkPrepareSendPacket,TransportManagerTask@sz
 17734  0016F0  C071  F0F3         	movff	?_NetworkPrepareSendPacket+1,TransportManagerTask@sz+1
 17735                           
 17736                           ;TransportManager.c: 108: }else
 17737  0016F4  D039               	goto	l13791
 17738  0016F6                     l13787:
 17739                           
 17740                           ; BSR set to: 5
 17741                           ;TransportManager.c: 109: {
 17742                           ;TransportManager.c: 110: memcpy(databuff,TMQ[i].data,TMQ[i].datasize);
 17743  0016F6  0EB2               	movlw	low TransportManagerTask@databuff
 17744  0016F8  0100               	movlb	0	; () banked
 17745  0016FA  6F62               	movwf	memcpy@d1& (0+255),b
 17746  0016FC  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 17747  0016FE  0E4C               	movlw	76
 17748  001700  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17749  001702  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17750  001706  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17751  00170A  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17752  00170C  50F3               	movf	prodl,w,c
 17753  00170E  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17754  001710  0E00               	movlw	low _TMQ
 17755  001712  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17756  001714  6F64               	movwf	memcpy@s1& (0+255),b
 17757  001716  0E05               	movlw	high _TMQ
 17758  001718  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17759  00171A  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 17760  00171C  0E4C               	movlw	76
 17761  00171E  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17762  001720  CFF3 F0B0          	movff	prodl,??_TransportManagerTask+2
 17763  001724  CFF4 F0B1          	movff	prodh,??_TransportManagerTask+3
 17764  001728  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17765  00172A  50F3               	movf	prodl,w,c
 17766  00172C  27B1               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 17767  00172E  0E40               	movlw	low (_TMQ+64)
 17768  001730  25B0               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 17769  001732  6ED9               	movwf	fsr2l,c
 17770  001734  0E05               	movlw	high (_TMQ+64)
 17771  001736  21B1               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 17772  001738  6EDA               	movwf	fsr2h,c
 17773  00173A  50DF               	movf	indf2,w,c
 17774  00173C  6F66               	movwf	memcpy@n& (0+255),b
 17775  00173E  6B67               	clrf	(memcpy@n+1)& (0+255),b
 17776  001740  ECFA  F03A         	call	_memcpy	;wreg free
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;TransportManager.c: 111: sz=TMQ[i].datasize;
 17780  001744  0E4C               	movlw	76
 17781  001746  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17782  001748  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17783  00174C  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17784  001750  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17785  001752  50F3               	movf	prodl,w,c
 17786  001754  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17787  001756  0E40               	movlw	low (_TMQ+64)
 17788  001758  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17789  00175A  6ED9               	movwf	fsr2l,c
 17790  00175C  0E05               	movlw	high (_TMQ+64)
 17791  00175E  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17792  001760  6EDA               	movwf	fsr2h,c
 17793  001762  50DF               	movf	indf2,w,c
 17794  001764  6FF2               	movwf	TransportManagerTask@sz& (0+255),b
 17795  001766  6BF3               	clrf	(TransportManagerTask@sz+1)& (0+255),b
 17796  001768                     l13791:
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;TransportManager.c: 112: }
 17800                           ;TransportManager.c: 113: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),da
      +                          tabuff,sz, TMQ[i].flags.isSecure)==1)
 17801  001768  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17802  00176C  CFE9 FFD9          	movff	fsr0l,fsr2l
 17803  001770  CFEA FFDA          	movff	fsr0h,fsr2h
 17804  001774  EE00  F09F         	lfsr	0,radioUnicast@dest
 17805  001778  0E07               	movlw	7
 17806  00177A                     u20851:
 17807  00177A  CFDB FFEB          	movff	plusw2,plusw0
 17808  00177E  06E8               	decf	wreg,f,c
 17809  001780  E2FC               	bc	u20851
 17810  001782  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 17811  001786  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
 17812  00178A  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 17813  00178E  0EB2               	movlw	low TransportManagerTask@databuff
 17814  001790  0100               	movlb	0	; () banked
 17815  001792  6FA9               	movwf	radioUnicast@data& (0+255),b
 17816  001794  6BAA               	clrf	(radioUnicast@data+1)& (0+255),b
 17817  001796  C0F2  F0AB         	movff	TransportManagerTask@sz,radioUnicast@datasize
 17818  00179A  0E4C               	movlw	76
 17819  00179C  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17820  00179E  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17821  0017A2  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17822  0017A6  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17823  0017A8  50F3               	movf	prodl,w,c
 17824  0017AA  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17825  0017AC  0E4A               	movlw	low (_TMQ+74)
 17826  0017AE  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17827  0017B0  6ED9               	movwf	fsr2l,c
 17828  0017B2  0E05               	movlw	high (_TMQ+74)
 17829  0017B4  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17830  0017B6  6EDA               	movwf	fsr2h,c
 17831  0017B8  0E00               	movlw	0
 17832  0017BA  B2DF               	btfsc	indf2,1,c
 17833  0017BC  0E01               	movlw	1
 17834  0017BE  6FAC               	movwf	radioUnicast@isSecure& (0+255),b
 17835  0017C0  ECB4  F037         	call	_radioUnicast	;wreg free
 17836  0017C4  06E8               	decf	wreg,f,c
 17837  0017C6  E111               	bnz	l13795
 17838  0017C8                     l13793:
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;TransportManager.c: 114: {
 17842                           ;TransportManager.c: 116: TMQ[i].TMQState=TMQIdle;
 17843  0017C8  0E4C               	movlw	76
 17844  0017CA  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17845  0017CC  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17846  0017D0  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17847  0017D4  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17848  0017D6  50F3               	movf	prodl,w,c
 17849  0017D8  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17850  0017DA  0E4B               	movlw	low (_TMQ+75)
 17851  0017DC  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17852  0017DE  6ED9               	movwf	fsr2l,c
 17853  0017E0  0E05               	movlw	high (_TMQ+75)
 17854  0017E2  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17855  0017E4  6EDA               	movwf	fsr2h,c
 17856  0017E6  0E00               	movlw	0
 17857  0017E8  D0AA               	goto	L9
 17858  0017EA                     l13795:
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;TransportManager.c: 118: {
 17862                           ;TransportManager.c: 120: TMQ[i].tick=MSTickGet();
 17863  0017EA  EC70  F03B         	call	_MSTickGet	;wreg free
 17864  0017EE  0E4C               	movlw	76
 17865  0017F0  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17866  0017F2  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17867  0017F6  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17868  0017FA  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17869  0017FC  50F3               	movf	prodl,w,c
 17870  0017FE  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17871  001800  0E41               	movlw	low (_TMQ+65)
 17872  001802  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17873  001804  6ED9               	movwf	fsr2l,c
 17874  001806  0E05               	movlw	high (_TMQ+65)
 17875  001808  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17876  00180A  6EDA               	movwf	fsr2h,c
 17877  00180C  0E07               	movlw	7
 17878  00180E                     u20871:
 17879  00180E  CFEB FFDB          	movff	plusw0,plusw2
 17880  001812  06E8               	decf	wreg,f,c
 17881  001814  E2FC               	bc	u20871
 17882                           
 17883                           ; BSR set to: 0
 17884                           ;TransportManager.c: 121: TMQ[i].retryCount++;
 17885  001816  0E4C               	movlw	76
 17886  001818  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17887  00181A  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17888  00181E  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17889  001822  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17890  001824  50F3               	movf	prodl,w,c
 17891  001826  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17892  001828  0E49               	movlw	low (_TMQ+73)
 17893  00182A  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17894  00182C  6ED9               	movwf	fsr2l,c
 17895  00182E  0E05               	movlw	high (_TMQ+73)
 17896  001830  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17897  001832  6EDA               	movwf	fsr2h,c
 17898  001834  2ADF               	incf	indf2,f,c
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;TransportManager.c: 122: if(TMQ[i].retryCount<3)
 17902  001836  0E4C               	movlw	76
 17903  001838  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17904  00183A  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17905  00183E  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17906  001842  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17907  001844  50F3               	movf	prodl,w,c
 17908  001846  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17909  001848  0E49               	movlw	low (_TMQ+73)
 17910  00184A  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17911  00184C  6ED9               	movwf	fsr2l,c
 17912  00184E  0E05               	movlw	high (_TMQ+73)
 17913  001850  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17914  001852  6EDA               	movwf	fsr2h,c
 17915  001854  0E03               	movlw	3
 17916  001856  60DF               	cpfslt	indf2,c
 17917  001858  D011               	goto	l13803
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;TransportManager.c: 123: {
 17921                           ;TransportManager.c: 124: TMQ[i].TMQState=TMQWaitRetry;
 17922  00185A  0E4C               	movlw	76
 17923  00185C  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17924  00185E  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17925  001862  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17926  001866  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17927  001868  50F3               	movf	prodl,w,c
 17928  00186A  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17929  00186C  0E4B               	movlw	low (_TMQ+75)
 17930  00186E  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17931  001870  6ED9               	movwf	fsr2l,c
 17932  001872  0E05               	movlw	high (_TMQ+75)
 17933  001874  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17934  001876  6EDA               	movwf	fsr2h,c
 17935  001878  0E02               	movlw	2
 17936  00187A  D061               	goto	L9
 17937  00187C                     l13803:
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;TransportManager.c: 126: {
 17941                           ;TransportManager.c: 128: TMQ[i].TMQState=TMQWaitRetry;
 17942  00187C  0E4C               	movlw	76
 17943  00187E  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17944  001880  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17945  001884  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17946  001888  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17947  00188A  50F3               	movf	prodl,w,c
 17948  00188C  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17949  00188E  0E4B               	movlw	low (_TMQ+75)
 17950  001890  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17951  001892  6ED9               	movwf	fsr2l,c
 17952  001894  0E05               	movlw	high (_TMQ+75)
 17953  001896  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17954  001898  6EDA               	movwf	fsr2h,c
 17955  00189A  0E02               	movlw	2
 17956  00189C  6EDF               	movwf	indf2,c
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;TransportManager.c: 129: RouterEvicted(NetworkGetParentAddress());
 17960  00189E  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 17961  0018A2  CFE9 FFD9          	movff	fsr0l,fsr2l
 17962  0018A6  CFEA FFDA          	movff	fsr0h,fsr2h
 17963  0018AA  EE00  F08E         	lfsr	0,RouterEvicted@address
 17964  0018AE  0E07               	movlw	7
 17965  0018B0                     u20891:
 17966  0018B0  CFDB FFEB          	movff	plusw2,plusw0
 17967  0018B4  06E8               	decf	wreg,f,c
 17968  0018B6  E2FC               	bc	u20891
 17969  0018B8  ECE0  F02E         	call	_RouterEvicted	;wreg free
 17970  0018BC  D059               	goto	l13817
 17971  0018BE                     l13807:
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;TransportManager.c: 136: if(MSTickGetDiffNow(TMQ[i].tick)>((SPAN)4000))
 17975  0018BE  0E4C               	movlw	76
 17976  0018C0  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 17977  0018C2  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 17978  0018C6  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 17979  0018CA  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 17980  0018CC  50F3               	movf	prodl,w,c
 17981  0018CE  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 17982  0018D0  0E41               	movlw	low (_TMQ+65)
 17983  0018D2  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 17984  0018D4  6ED9               	movwf	fsr2l,c
 17985  0018D6  0E05               	movlw	high (_TMQ+65)
 17986  0018D8  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 17987  0018DA  6EDA               	movwf	fsr2h,c
 17988  0018DC  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 17989  0018E0  0E07               	movlw	7
 17990  0018E2                     u20901:
 17991  0018E2  CFDB FFEB          	movff	plusw2,plusw0
 17992  0018E6  06E8               	decf	wreg,f,c
 17993  0018E8  E2FC               	bc	u20901
 17994  0018EA  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 17995  0018EE  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17996  0018F0  117E               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17997  0018F2  E105               	bnz	u20910
 17998  0018F4  0EA1               	movlw	161
 17999  0018F6  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 18000  0018F8  0E0F               	movlw	15
 18001  0018FA  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 18002  0018FC  E339               	bnc	l13817
 18003  0018FE                     u20910:
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;TransportManager.c: 137: {
 18007                           ;TransportManager.c: 138: TMQ[i].retryCount++;
 18008  0018FE  0E4C               	movlw	76
 18009  001900  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 18010  001902  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 18011  001906  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 18012  00190A  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18013  00190C  50F3               	movf	prodl,w,c
 18014  00190E  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18015  001910  0E49               	movlw	low (_TMQ+73)
 18016  001912  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 18017  001914  6ED9               	movwf	fsr2l,c
 18018  001916  0E05               	movlw	high (_TMQ+73)
 18019  001918  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18020  00191A  6EDA               	movwf	fsr2h,c
 18021  00191C  2ADF               	incf	indf2,f,c
 18022                           
 18023                           ;TransportManager.c: 139: TMQ[i].TMQState=TMQSend;
 18024  00191E  0E4C               	movlw	76
 18025  001920  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 18026  001922  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 18027  001926  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 18028  00192A  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18029  00192C  50F3               	movf	prodl,w,c
 18030  00192E  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18031  001930  0E4B               	movlw	low (_TMQ+75)
 18032  001932  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 18033  001934  6ED9               	movwf	fsr2l,c
 18034  001936  0E05               	movlw	high (_TMQ+75)
 18035  001938  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18036  00193A  6EDA               	movwf	fsr2h,c
 18037  00193C  0E01               	movlw	1
 18038  00193E                     L9:
 18039  00193E  6EDF               	movwf	indf2,c
 18040  001940  D017               	goto	l13817
 18041  001942                     l13815:
 18042                           
 18043                           ; BSR set to: 0
 18044  001942  0E4C               	movlw	76
 18045  001944  03F4               	mulwf	TransportManagerTask@i& (0+255),b
 18046  001946  CFF3 F0AE          	movff	prodl,??_TransportManagerTask
 18047  00194A  CFF4 F0AF          	movff	prodh,??_TransportManagerTask+1
 18048  00194E  03F5               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18049  001950  50F3               	movf	prodl,w,c
 18050  001952  27AF               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18051  001954  0E4B               	movlw	low (_TMQ+75)
 18052  001956  25AE               	addwf	??_TransportManagerTask& (0+255),w,b
 18053  001958  6ED9               	movwf	fsr2l,c
 18054  00195A  0E05               	movlw	high (_TMQ+75)
 18055  00195C  21AF               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18056  00195E  6EDA               	movwf	fsr2h,c
 18057  001960  50DF               	movf	indf2,w,c
 18058                           
 18059                           ; Switch size 1, requested type "speed"
 18060                           ; Number of cases is 3, Range of values is 0 to 2
 18061                           ; switch strategies available:
 18062                           ; Name         Instructions Cycles
 18063                           ; simple_byte           10     6 (average)
 18064                           ;	Chosen strategy is simple_byte
 18065  001962  E006               	bz	l13817
 18066  001964  0A01               	xorlw	1	; case 1
 18067  001966  E101 D668          	bz	l13781
 18068  00196A  0A03               	xorlw	3	; case 2
 18069  00196C  E0A8               	bz	l13807
 18070  00196E  D72C               	goto	l13793
 18071  001970                     l13817:
 18072                           
 18073                           ; BSR set to: 0
 18074  001970  4BF4               	infsnz	TransportManagerTask@i& (0+255),f,b
 18075  001972  2BF5               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 18076                           
 18077                           ; BSR set to: 0
 18078  001974  51F5               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 18079  001976  E103               	bnz	u20920
 18080  001978  0E02               	movlw	2
 18081  00197A  5DF4               	subwf	TransportManagerTask@i& (0+255),w,b
 18082  00197C  E3E2               	bnc	l13815
 18083  00197E                     u20920:
 18084                           
 18085                           ; BSR set to: 0
 18086  00197E  0012               	return		;funcret
 18087  001980                     __end_of_TransportManagerTask:
 18088                           	opt stack 0
 18089                           tblptru	equ	0xFF8
 18090                           tblptrh	equ	0xFF7
 18091                           tblptrl	equ	0xFF6
 18092                           tablat	equ	0xFF5
 18093                           prodh	equ	0xFF4
 18094                           prodl	equ	0xFF3
 18095                           postinc0	equ	0xFEE
 18096                           plusw0	equ	0xFEB
 18097                           fsr0h	equ	0xFEA
 18098                           fsr0l	equ	0xFE9
 18099                           wreg	equ	0xFE8
 18100                           indf1	equ	0xFE7
 18101                           postdec1	equ	0xFE5
 18102                           plusw1	equ	0xFE3
 18103                           fsr1h	equ	0xFE2
 18104                           fsr1l	equ	0xFE1
 18105                           indf2	equ	0xFDF
 18106                           postinc2	equ	0xFDE
 18107                           postdec2	equ	0xFDD
 18108                           plusw2	equ	0xFDB
 18109                           fsr2h	equ	0xFDA
 18110                           fsr2l	equ	0xFD9
 18111                           status	equ	0xFD8
 18112                           
 18113 ;; *************** function _RouteManagerTask *****************
 18114 ;; Defined at:
 18115 ;;		line 36 in file "../RouteManager.c"
 18116 ;; Parameters:    Size  Location     Type
 18117 ;;		None
 18118 ;; Auto vars:     Size  Location     Type
 18119 ;;		None
 18120 ;; Return value:  Size  Location     Type
 18121 ;;                  1    wreg      void 
 18122 ;; Registers used:
 18123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18124 ;; Tracked objects:
 18125 ;;		On entry : D/0
 18126 ;;		On exit  : F/0
 18127 ;;		Unchanged: 0/0
 18128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18133 ;;Total ram usage:        0 bytes
 18134 ;; Hardware stack levels used:    1
 18135 ;; Hardware stack levels required when called:   11
 18136 ;; This function calls:
 18137 ;;		_MSTickGet
 18138 ;;		_MSTickGetDiffNow
 18139 ;;		_RouteManagerPerformUpdate
 18140 ;; This function is called by:
 18141 ;;		_NetworkManagerTask
 18142 ;; This function uses a non-reentrant model
 18143 ;;
 18144                           
 18145                           	psect	text61
 18146  007358                     __ptext61:
 18147                           	opt stack 0
 18148  007358                     _RouteManagerTask:
 18149                           	opt stack 16
 18150                           
 18151                           ;RouteManager.c: 38: if( (RouteMgrUpdateRequired==1) || (MSTickGetDiffNow(tRouteMgr)>((S
      +                          PAN)50*1000ULL)) )
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;incstack = 0
 18155  007358  0444               	decf	_RouteMgrUpdateRequired,w,c
 18156  00735A  E014               	bz	l13673
 18157  00735C  EE22  F01C         	lfsr	2,_tRouteMgr
 18158  007360  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 18159  007364  0E07               	movlw	7
 18160  007366                     u20591:
 18161  007366  CFDB FFEB          	movff	plusw2,plusw0
 18162  00736A  06E8               	decf	wreg,f,c
 18163  00736C  E2FC               	bc	u20591
 18164  00736E  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 18165  007372  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 18166  007374  117E               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 18167  007376  E106               	bnz	u20600
 18168  007378  0E51               	movlw	81
 18169  00737A  5D7C               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 18170  00737C  0EC3               	movlw	195
 18171  00737E  597D               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 18172  007380  A0D8               	btfss	status,0,c
 18173  007382  0012               	return	
 18174  007384                     u20600:
 18175  007384                     l13673:
 18176                           
 18177                           ;RouteManager.c: 39: {
 18178                           ;RouteManager.c: 40: RouteManagerPerformUpdate();
 18179  007384  EC37  F010         	call	_RouteManagerPerformUpdate	;wreg free
 18180                           
 18181                           ;RouteManager.c: 41: RouteMgrUpdateRequired=0;
 18182  007388  6A44               	clrf	_RouteMgrUpdateRequired,c
 18183                           
 18184                           ;RouteManager.c: 42: tRouteMgr=MSTickGet();
 18185  00738A  EC70  F03B         	call	_MSTickGet	;wreg free
 18186  00738E  EE22  F01C         	lfsr	2,_tRouteMgr
 18187  007392  0E07               	movlw	7
 18188  007394                     u20611:
 18189  007394  CFEB FFDB          	movff	plusw0,plusw2
 18190  007398  06E8               	decf	wreg,f,c
 18191  00739A  E2FC               	bc	u20611
 18192                           
 18193                           ; BSR set to: 0
 18194  00739C  0012               	return		;funcret
 18195  00739E                     __end_of_RouteManagerTask:
 18196                           	opt stack 0
 18197                           tblptru	equ	0xFF8
 18198                           tblptrh	equ	0xFF7
 18199                           tblptrl	equ	0xFF6
 18200                           tablat	equ	0xFF5
 18201                           prodh	equ	0xFF4
 18202                           prodl	equ	0xFF3
 18203                           postinc0	equ	0xFEE
 18204                           plusw0	equ	0xFEB
 18205                           fsr0h	equ	0xFEA
 18206                           fsr0l	equ	0xFE9
 18207                           wreg	equ	0xFE8
 18208                           indf1	equ	0xFE7
 18209                           postdec1	equ	0xFE5
 18210                           plusw1	equ	0xFE3
 18211                           fsr1h	equ	0xFE2
 18212                           fsr1l	equ	0xFE1
 18213                           indf2	equ	0xFDF
 18214                           postinc2	equ	0xFDE
 18215                           postdec2	equ	0xFDD
 18216                           plusw2	equ	0xFDB
 18217                           fsr2h	equ	0xFDA
 18218                           fsr2l	equ	0xFD9
 18219                           status	equ	0xFD8
 18220                           
 18221 ;; *************** function _RouteManagerPerformUpdate *****************
 18222 ;; Defined at:
 18223 ;;		line 46 in file "../RouteManager.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;		None
 18226 ;; Auto vars:     Size  Location     Type
 18227 ;;  r               2   73[BANK0 ] PTR struct route_info_t_
 18228 ;;		 -> routeInfo(13), 
 18229 ;;  entry           2   71[BANK0 ] PTR struct routing_table
 18230 ;;		 -> routingTable(210), 
 18231 ;;  minEtx          2   69[BANK0 ] unsigned int 
 18232 ;;  best            2   67[BANK0 ] PTR struct routing_table
 18233 ;;		 -> routingTable(210), NULL(0), 
 18234 ;;  currentEtx      2   65[BANK0 ] unsigned int 
 18235 ;;  pathEtx         2   63[BANK0 ] unsigned int 
 18236 ;;  i               2   61[BANK0 ] unsigned int 
 18237 ;;  linkEtx         2   59[BANK0 ] unsigned int 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      void 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : D/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18248 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;Total ram usage:       18 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:   10
 18254 ;; This function calls:
 18255 ;;		_BeaconManagerTrigger
 18256 ;;		_LELinkQualityGet
 18257 ;;		_LE_ClearDLQ
 18258 ;;		_LE_PinNeighbor
 18259 ;;		_LE_UnpinNeighbor
 18260 ;;		_NetworkGetDeviceType
 18261 ;;		_NetworkGetMyRouteInfo
 18262 ;;		_NetworkManagerGetMyAddress
 18263 ;;		_TransportManagerNoRoute
 18264 ;;		_TransportManagerRouteFound
 18265 ;;		_isInvalidAddress
 18266 ;;		_isSameAddress
 18267 ;;		_passLinkEtxThreshold
 18268 ;; This function is called by:
 18269 ;;		_RouteManagerTask
 18270 ;;		_NetworkManagerTask
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           
 18274                           	psect	text62
 18275  00206E                     __ptext62:
 18276                           	opt stack 0
 18277  00206E                     _RouteManagerPerformUpdate:
 18278                           	opt stack 16
 18279                           
 18280                           ;RouteManager.c: 48: uint16_t i;
 18281                           ;RouteManager.c: 49: routing_table_entry_t* entry;
 18282                           ;RouteManager.c: 50: routing_table_entry_t* best;
 18283                           ;RouteManager.c: 51: uint16_t minEtx;
 18284                           ;RouteManager.c: 52: uint16_t currentEtx;
 18285                           ;RouteManager.c: 53: uint16_t linkEtx, pathEtx;
 18286                           ;RouteManager.c: 54: route_info_t *r=NetworkGetMyRouteInfo();
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;incstack = 0
 18290  00206E  ECF1  F03D         	call	_NetworkGetMyRouteInfo	;wreg free
 18291  002072  C060  F0A9         	movff	?_NetworkGetMyRouteInfo,RouteManagerPerformUpdate@r
 18292  002076  C061  F0AA         	movff	?_NetworkGetMyRouteInfo+1,RouteManagerPerformUpdate@r+1
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;RouteManager.c: 56: if(NetworkGetDeviceType()!=DeviceCoordinator)
 18296  00207A  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 18297  00207E  0900               	iorlw	0
 18298  002080  B4D8               	btfsc	status,2,c
 18299  002082  0012               	return	
 18300                           
 18301                           ;RouteManager.c: 57: {
 18302                           ;RouteManager.c: 58: best = (0);
 18303  002084  0100               	movlb	0	; () banked
 18304  002086  6BA3               	clrf	RouteManagerPerformUpdate@best& (0+255),b
 18305  002088  6BA4               	clrf	(RouteManagerPerformUpdate@best+1)& (0+255),b
 18306                           
 18307                           ;RouteManager.c: 60: minEtx = 0xffff;
 18308  00208A  69A5               	setf	RouteManagerPerformUpdate@minEtx& (0+255),b
 18309  00208C  69A6               	setf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),b
 18310                           
 18311                           ;RouteManager.c: 62: currentEtx = 0xffff;
 18312  00208E  69A1               	setf	RouteManagerPerformUpdate@currentEtx& (0+255),b
 18313  002090  69A2               	setf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),b
 18314                           
 18315                           ;RouteManager.c: 65: for (i = 0; i < routingTableActive; i++)
 18316  002092  6B9D               	clrf	RouteManagerPerformUpdate@i& (0+255),b
 18317  002094  6B9E               	clrf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 18318  002096  D0CA               	goto	l12989
 18319  002098                     l12963:
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;RouteManager.c: 66: {
 18323                           ;RouteManager.c: 67: entry = &routingTable[i];
 18324  002098  0E15               	movlw	21
 18325  00209A  039D               	mulwf	RouteManagerPerformUpdate@i& (0+255),b
 18326  00209C  CFF3 F099          	movff	prodl,??_RouteManagerPerformUpdate
 18327  0020A0  CFF4 F09A          	movff	prodh,??_RouteManagerPerformUpdate+1
 18328  0020A4  039E               	mulwf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 18329  0020A6  50F3               	movf	prodl,w,c
 18330  0020A8  279A               	addwf	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 18331  0020AA  0E00               	movlw	low _routingTable
 18332  0020AC  2599               	addwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18333  0020AE  6FA7               	movwf	RouteManagerPerformUpdate@entry& (0+255),b
 18334  0020B0  0E08               	movlw	high _routingTable
 18335  0020B2  219A               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18336  0020B4  6FA8               	movwf	(RouteManagerPerformUpdate@entry+1)& (0+255),b
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;RouteManager.c: 70: if (isInvalidAddress(entry->info.parent) || (isSameAddress(entry->i
      +                          nfo.parent, *NetworkManagerGetMyAddress())))
 18340  0020B6  EE20 F008          	lfsr	2,8
 18341  0020BA  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18342  0020BC  26D9               	addwf	fsr2l,f,c
 18343  0020BE  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18344  0020C0  22DA               	addwfc	fsr2h,f,c
 18345  0020C2  EE00  F079         	lfsr	0,isInvalidAddress@address
 18346  0020C6  0E07               	movlw	7
 18347  0020C8                     u18811:
 18348  0020C8  CFDB FFEB          	movff	plusw2,plusw0
 18349  0020CC  06E8               	decf	wreg,f,c
 18350  0020CE  E2FC               	bc	u18811
 18351  0020D0  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 18352  0020D4  0900               	iorlw	0
 18353  0020D6  E001 D0A7          	bnz	l12987
 18354                           
 18355                           ; BSR set to: 0
 18356  0020DA  EE20 F008          	lfsr	2,8
 18357  0020DE  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18358  0020E0  26D9               	addwf	fsr2l,f,c
 18359  0020E2  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18360  0020E4  22DA               	addwfc	fsr2h,f,c
 18361  0020E6  EE00  F070         	lfsr	0,isSameAddress@a1
 18362  0020EA  0E07               	movlw	7
 18363  0020EC                     u18831:
 18364  0020EC  CFDB FFEB          	movff	plusw2,plusw0
 18365  0020F0  06E8               	decf	wreg,f,c
 18366  0020F2  E2FC               	bc	u18831
 18367  0020F4  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
 18368  0020F8  C060  FFD9         	movff	?_NetworkManagerGetMyAddress,fsr2l
 18369  0020FC  C061  FFDA         	movff	?_NetworkManagerGetMyAddress+1,fsr2h
 18370  002100  EE00  F078         	lfsr	0,isSameAddress@a2
 18371  002104  0E07               	movlw	7
 18372  002106                     u18841:
 18373  002106  CFDB FFEB          	movff	plusw2,plusw0
 18374  00210A  06E8               	decf	wreg,f,c
 18375  00210C  E2FC               	bc	u18841
 18376  00210E  ECC5  F03C         	call	_isSameAddress	;wreg free
 18377  002112  0900               	iorlw	0
 18378  002114  E001 D088          	bnz	l12987
 18379                           
 18380                           ; BSR set to: 0
 18381                           ;RouteManager.c: 74: {
 18382                           ;RouteManager.c: 75: linkEtx = LELinkQualityGet(entry->neighbor,0);
 18383  002118  C0A7  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18384  00211C  C0A8  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18385  002120  EE00  F08A         	lfsr	0,LELinkQualityGet@address
 18386  002124  0E07               	movlw	7
 18387  002126                     u18861:
 18388  002126  CFDB FFEB          	movff	plusw2,plusw0
 18389  00212A  06E8               	decf	wreg,f,c
 18390  00212C  E2FC               	bc	u18861
 18391  00212E  6B93               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
 18392  002130  6B92               	clrf	LELinkQualityGet@offset& (0+255),b
 18393  002132  ECE6  F034         	call	_LELinkQualityGet	;wreg free
 18394  002136  C08A  F09B         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@linkEtx
 18395  00213A  C08B  F09C         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@linkEtx+1
 18396                           
 18397                           ;RouteManager.c: 76: pathEtx = LELinkQualityGet(entry->neighbor,entry->info.etx);
 18398  00213E  C0A7  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18399  002142  C0A8  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18400  002146  EE00  F08A         	lfsr	0,LELinkQualityGet@address
 18401  00214A  0E07               	movlw	7
 18402  00214C                     u18871:
 18403  00214C  CFDB FFEB          	movff	plusw2,plusw0
 18404  002150  06E8               	decf	wreg,f,c
 18405  002152  E2FC               	bc	u18871
 18406  002154  EE20 F010          	lfsr	2,16
 18407  002158  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18408  00215A  26D9               	addwf	fsr2l,f,c
 18409  00215C  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18410  00215E  22DA               	addwfc	fsr2h,f,c
 18411  002160  CFDE F092          	movff	postinc2,LELinkQualityGet@offset
 18412  002164  CFDD F093          	movff	postdec2,LELinkQualityGet@offset+1
 18413  002168  ECE6  F034         	call	_LELinkQualityGet	;wreg free
 18414  00216C  C08A  F09F         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@pathEtx
 18415  002170  C08B  F0A0         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@pathEtx+1
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;RouteManager.c: 78: if (isSameAddress(entry->neighbor, r->parent))
 18419  002174  C0A7  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 18420  002178  C0A8  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 18421  00217C  EE00  F070         	lfsr	0,isSameAddress@a1
 18422  002180  0E07               	movlw	7
 18423  002182                     u18881:
 18424  002182  CFDB FFEB          	movff	plusw2,plusw0
 18425  002186  06E8               	decf	wreg,f,c
 18426  002188  E2FC               	bc	u18881
 18427  00218A  C0A9  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18428  00218E  C0AA  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18429  002192  EE00  F078         	lfsr	0,isSameAddress@a2
 18430  002196  0E07               	movlw	7
 18431  002198                     u18891:
 18432  002198  CFDB FFEB          	movff	plusw2,plusw0
 18433  00219C  06E8               	decf	wreg,f,c
 18434  00219E  E2FC               	bc	u18891
 18435  0021A0  ECC5  F03C         	call	_isSameAddress	;wreg free
 18436  0021A4  0900               	iorlw	0
 18437  0021A6  E023               	bz	l12977
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;RouteManager.c: 79: {
 18441                           ;RouteManager.c: 80: currentEtx = pathEtx;
 18442  0021A8  C09F  F0A1         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@currentEtx
 18443  0021AC  C0A0  F0A2         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@currentEtx+1
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;RouteManager.c: 82: r->etx = entry->info.etx;
 18447  0021B0  EE20 F010          	lfsr	2,16
 18448  0021B4  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18449  0021B6  26D9               	addwf	fsr2l,f,c
 18450  0021B8  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18451  0021BA  22DA               	addwfc	fsr2h,f,c
 18452  0021BC  EE10 F008          	lfsr	1,8
 18453  0021C0  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18454  0021C2  26E1               	addwf	fsr1l,f,c
 18455  0021C4  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18456  0021C6  22E2               	addwfc	fsr1h,f,c
 18457  0021C8  CFDE FFE6          	movff	postinc2,postinc1
 18458  0021CC  CFDD FFE5          	movff	postdec2,postdec1
 18459                           
 18460                           ;RouteManager.c: 83: r->congested = entry->info.congested;
 18461  0021D0  EE20 F013          	lfsr	2,19
 18462  0021D4  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18463  0021D6  26D9               	addwf	fsr2l,f,c
 18464  0021D8  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18465  0021DA  22DA               	addwfc	fsr2h,f,c
 18466  0021DC  EE10 F00B          	lfsr	1,11
 18467  0021E0  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18468  0021E2  26E1               	addwf	fsr1l,f,c
 18469  0021E4  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18470  0021E6  22E2               	addwfc	fsr1h,f,c
 18471  0021E8  CFDF FFE7          	movff	indf2,indf1
 18472                           
 18473                           ;RouteManager.c: 84: }else if((entry->info.congested) || (passLinkEtxThreshold(linkEtx)=
      +                          =0) )
 18474  0021EC  D01D               	goto	l12987
 18475  0021EE                     l12977:
 18476                           
 18477                           ; BSR set to: 0
 18478  0021EE  EE20 F013          	lfsr	2,19
 18479  0021F2  51A7               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 18480  0021F4  26D9               	addwf	fsr2l,f,c
 18481  0021F6  51A8               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 18482  0021F8  22DA               	addwfc	fsr2h,f,c
 18483  0021FA  50DF               	movf	indf2,w,c
 18484  0021FC  E115               	bnz	l12987
 18485                           
 18486                           ; BSR set to: 0
 18487  0021FE  C09B  F060         	movff	RouteManagerPerformUpdate@linkEtx,passLinkEtxThreshold@etx
 18488  002202  C09C  F061         	movff	RouteManagerPerformUpdate@linkEtx+1,passLinkEtxThreshold@etx+1
 18489  002206  ECE4  F03D         	call	_passLinkEtxThreshold	;wreg free
 18490  00220A  0900               	iorlw	0
 18491  00220C  E00D               	bz	l12987
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;RouteManager.c: 88: {
 18495                           ;RouteManager.c: 113: if (pathEtx < minEtx)
 18496  00220E  51A5               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18497  002210  5D9F               	subwf	RouteManagerPerformUpdate@pathEtx& (0+255),w,b
 18498  002212  51A6               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18499  002214  59A0               	subwfb	(RouteManagerPerformUpdate@pathEtx+1)& (0+255),w,b
 18500  002216  E208               	bc	l12987
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;RouteManager.c: 115: {
 18504                           ;RouteManager.c: 116: minEtx = pathEtx;
 18505  002218  C09F  F0A5         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@minEtx
 18506  00221C  C0A0  F0A6         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@minEtx+1
 18507                           
 18508                           ; BSR set to: 0
 18509                           ;RouteManager.c: 117: best = entry;
 18510  002220  C0A7  F0A3         	movff	RouteManagerPerformUpdate@entry,RouteManagerPerformUpdate@best
 18511  002224  C0A8  F0A4         	movff	RouteManagerPerformUpdate@entry+1,RouteManagerPerformUpdate@best+1
 18512  002228                     l12987:
 18513                           
 18514                           ; BSR set to: 0
 18515  002228  4B9D               	infsnz	RouteManagerPerformUpdate@i& (0+255),f,b
 18516  00222A  2B9E               	incf	(RouteManagerPerformUpdate@i+1)& (0+255),f,b
 18517  00222C                     l12989:
 18518                           
 18519                           ; BSR set to: 0
 18520  00222C  5039               	movf	_routingTableActive,w,c
 18521  00222E  5D9D               	subwf	RouteManagerPerformUpdate@i& (0+255),w,b
 18522  002230  503A               	movf	_routingTableActive+1,w,c
 18523  002232  599E               	subwfb	(RouteManagerPerformUpdate@i+1)& (0+255),w,b
 18524  002234  E201 D730          	bnc	l12963
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;RouteManager.c: 118: }
 18528                           ;RouteManager.c: 119: }
 18529                           ;RouteManager.c: 120: }
 18530                           ;RouteManager.c: 121: }
 18531                           ;RouteManager.c: 136: if (minEtx != 0xffff)
 18532  002238  29A5               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18533  00223A  E103               	bnz	u18950
 18534  00223C  29A6               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18535  00223E  E101 D089          	bz	l13013
 18536  002242                     u18950:
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;RouteManager.c: 137: {
 18540                           ;RouteManager.c: 138: if (currentEtx == 0xffff ||
 18541                           ;RouteManager.c: 139: ((1 == r->congested) && (minEtx < (r->etx + 10))) ||
 18542                           ;RouteManager.c: 140: ((minEtx + ParentSwitchThreshold) < currentEtx) )
 18543  002242  29A1               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18544  002244  E102               	bnz	u18960
 18545  002246  29A2               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18546  002248  E026               	bz	l13001
 18547  00224A                     u18960:
 18548                           
 18549                           ; BSR set to: 0
 18550  00224A  EE20 F00B          	lfsr	2,11
 18551  00224E  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18552  002250  26D9               	addwf	fsr2l,f,c
 18553  002252  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18554  002254  22DA               	addwfc	fsr2h,f,c
 18555  002256  04DE               	decf	postinc2,w,c
 18556  002258  E113               	bnz	l12999
 18557                           
 18558                           ; BSR set to: 0
 18559  00225A  EE20 F008          	lfsr	2,8
 18560  00225E  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18561  002260  26D9               	addwf	fsr2l,f,c
 18562  002262  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18563  002264  22DA               	addwfc	fsr2h,f,c
 18564  002266  CFDE F099          	movff	postinc2,??_RouteManagerPerformUpdate
 18565  00226A  CFDD F09A          	movff	postdec2,??_RouteManagerPerformUpdate+1
 18566  00226E  0E0A               	movlw	10
 18567  002270  2799               	addwf	??_RouteManagerPerformUpdate& (0+255),f,b
 18568  002272  0E00               	movlw	0
 18569  002274  239A               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 18570  002276  5199               	movf	??_RouteManagerPerformUpdate& (0+255),w,b
 18571  002278  5DA5               	subwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18572  00227A  519A               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18573  00227C  59A6               	subwfb	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18574  00227E  E30B               	bnc	l13001
 18575  002280                     l12999:
 18576                           
 18577                           ; BSR set to: 0
 18578  002280  0E0F               	movlw	15
 18579  002282  25A5               	addwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18580  002284  6F99               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 18581  002286  0E00               	movlw	0
 18582  002288  21A6               	addwfc	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18583  00228A  6F9A               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 18584  00228C  51A1               	movf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18585  00228E  5D99               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18586  002290  51A2               	movf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18587  002292  599A               	subwfb	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18588  002294  E25F               	bc	l13013
 18589  002296                     l13001:
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;RouteManager.c: 141: {
 18593                           ;RouteManager.c: 148: LE_UnpinNeighbor(r->parent);
 18594  002296  C0A9  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18595  00229A  C0AA  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18596  00229E  EE00  F08A         	lfsr	0,LE_UnpinNeighbor@neighbor
 18597  0022A2  0E07               	movlw	7
 18598  0022A4                     u19001:
 18599  0022A4  CFDB FFEB          	movff	plusw2,plusw0
 18600  0022A8  06E8               	decf	wreg,f,c
 18601  0022AA  E2FC               	bc	u19001
 18602  0022AC  ECCF  F039         	call	_LE_UnpinNeighbor	;wreg free
 18603                           
 18604                           ;RouteManager.c: 149: LE_PinNeighbor(best->neighbor);
 18605  0022B0  C0A3  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18606  0022B4  C0A4  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18607  0022B8  EE00  F08A         	lfsr	0,LE_PinNeighbor@neighbor
 18608  0022BC  0E07               	movlw	7
 18609  0022BE                     u19011:
 18610  0022BE  CFDB FFEB          	movff	plusw2,plusw0
 18611  0022C2  06E8               	decf	wreg,f,c
 18612  0022C4  E2FC               	bc	u19011
 18613  0022C6  ECF2  F039         	call	_LE_PinNeighbor	;wreg free
 18614                           
 18615                           ;RouteManager.c: 150: LE_ClearDLQ(best->neighbor);
 18616  0022CA  C0A3  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18617  0022CE  C0A4  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18618  0022D2  EE00  F08A         	lfsr	0,LE_ClearDLQ@neighbor
 18619  0022D6  0E07               	movlw	7
 18620  0022D8                     u19021:
 18621  0022D8  CFDB FFEB          	movff	plusw2,plusw0
 18622  0022DC  06E8               	decf	wreg,f,c
 18623  0022DE  E2FC               	bc	u19021
 18624  0022E0  EC56  F037         	call	_LE_ClearDLQ	;wreg free
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;RouteManager.c: 152: r->parent = best->neighbor;
 18628  0022E4  C0A3  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 18629  0022E8  C0A4  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 18630  0022EC  C0A9  FFE1         	movff	RouteManagerPerformUpdate@r,fsr1l
 18631  0022F0  C0AA  FFE2         	movff	RouteManagerPerformUpdate@r+1,fsr1h
 18632  0022F4  0E07               	movlw	7
 18633  0022F6                     u19031:
 18634  0022F6  CFDB FFE3          	movff	plusw2,plusw1
 18635  0022FA  06E8               	decf	wreg,f,c
 18636  0022FC  E2FC               	bc	u19031
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;RouteManager.c: 153: r->etx = best->info.etx;
 18640  0022FE  EE20 F010          	lfsr	2,16
 18641  002302  51A3               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 18642  002304  26D9               	addwf	fsr2l,f,c
 18643  002306  51A4               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 18644  002308  22DA               	addwfc	fsr2h,f,c
 18645  00230A  EE10 F008          	lfsr	1,8
 18646  00230E  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18647  002310  26E1               	addwf	fsr1l,f,c
 18648  002312  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18649  002314  22E2               	addwfc	fsr1h,f,c
 18650  002316  CFDE FFE6          	movff	postinc2,postinc1
 18651  00231A  CFDD FFE5          	movff	postdec2,postdec1
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;RouteManager.c: 154: r->congested = best->info.congested;
 18655  00231E  EE20 F013          	lfsr	2,19
 18656  002322  51A3               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 18657  002324  26D9               	addwf	fsr2l,f,c
 18658  002326  51A4               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 18659  002328  22DA               	addwfc	fsr2h,f,c
 18660  00232A  EE10 F00B          	lfsr	1,11
 18661  00232E  51A9               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 18662  002330  26E1               	addwf	fsr1l,f,c
 18663  002332  51AA               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 18664  002334  22E2               	addwfc	fsr1h,f,c
 18665  002336  CFDF FFE7          	movff	indf2,indf1
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;RouteManager.c: 155: if (currentEtx - minEtx > 20)
 18669  00233A  51A5               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18670  00233C  5DA1               	subwf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18671  00233E  6F99               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 18672  002340  51A6               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18673  002342  59A2               	subwfb	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18674  002344  6F9A               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 18675  002346  519A               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 18676  002348  E103               	bnz	u19040
 18677  00234A  0E15               	movlw	21
 18678  00234C  5D99               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 18679  00234E  E302               	bnc	l13013
 18680  002350                     u19040:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;RouteManager.c: 156: {
 18684                           ;RouteManager.c: 157: BeaconManagerTrigger();
 18685  002350  EC42  F03E         	call	_BeaconManagerTrigger	;wreg free
 18686  002354                     l13013:
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;RouteManager.c: 158: }
 18690                           ;RouteManager.c: 159: }
 18691                           ;RouteManager.c: 160: }
 18692                           ;RouteManager.c: 165: if (justEvictedParent && isInvalidAddress(r->parent))
 18693  002354  5048               	movf	_justEvictedParent,w,c
 18694  002356  E012               	bz	l13019
 18695                           
 18696                           ; BSR set to: 0
 18697  002358  C0A9  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 18698  00235C  C0AA  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 18699  002360  EE00  F079         	lfsr	0,isInvalidAddress@address
 18700  002364  0E07               	movlw	7
 18701  002366                     u19061:
 18702  002366  CFDB FFEB          	movff	plusw2,plusw0
 18703  00236A  06E8               	decf	wreg,f,c
 18704  00236C  E2FC               	bc	u19061
 18705  00236E  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 18706  002372  0900               	iorlw	0
 18707  002374  E003               	bz	l13019
 18708                           
 18709                           ; BSR set to: 0
 18710                           ;RouteManager.c: 166: {
 18711                           ;RouteManager.c: 171: TransportManagerNoRoute();
 18712  002376  EC5E  F03E         	call	_TransportManagerNoRoute	;wreg free
 18713                           
 18714                           ;RouteManager.c: 172: }else if (!justEvictedParent && currentEtx == 0xffff && minEtx != 
      +                          0xffff)
 18715  00237A  D00C               	goto	l13027
 18716  00237C                     l13019:
 18717                           
 18718                           ; BSR set to: 0
 18719  00237C  5048               	movf	_justEvictedParent,w,c
 18720  00237E  E10A               	bnz	l13027
 18721                           
 18722                           ; BSR set to: 0
 18723  002380  29A1               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 18724  002382  E108               	bnz	l13027
 18725  002384  29A2               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 18726  002386  E106               	bnz	l13027
 18727                           
 18728                           ; BSR set to: 0
 18729  002388  29A5               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 18730  00238A  E102               	bnz	u19100
 18731  00238C  29A6               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 18732  00238E  E002               	bz	l13027
 18733  002390                     u19100:
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;RouteManager.c: 173: {
 18737                           ;RouteManager.c: 178: TransportManagerRouteFound();
 18738  002390  EC5D  F03E         	call	_TransportManagerRouteFound	;wreg free
 18739  002394                     l13027:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;RouteManager.c: 179: }
 18743                           ;RouteManager.c: 180: justEvictedParent = 0;
 18744  002394  6A48               	clrf	_justEvictedParent,c
 18745  002396  0012               	return		;funcret
 18746  002398                     __end_of_RouteManagerPerformUpdate:
 18747                           	opt stack 0
 18748                           tblptru	equ	0xFF8
 18749                           tblptrh	equ	0xFF7
 18750                           tblptrl	equ	0xFF6
 18751                           tablat	equ	0xFF5
 18752                           prodh	equ	0xFF4
 18753                           prodl	equ	0xFF3
 18754                           postinc0	equ	0xFEE
 18755                           plusw0	equ	0xFEB
 18756                           fsr0h	equ	0xFEA
 18757                           fsr0l	equ	0xFE9
 18758                           wreg	equ	0xFE8
 18759                           indf1	equ	0xFE7
 18760                           postinc1	equ	0xFE6
 18761                           postdec1	equ	0xFE5
 18762                           plusw1	equ	0xFE3
 18763                           fsr1h	equ	0xFE2
 18764                           fsr1l	equ	0xFE1
 18765                           indf2	equ	0xFDF
 18766                           postinc2	equ	0xFDE
 18767                           postdec2	equ	0xFDD
 18768                           plusw2	equ	0xFDB
 18769                           fsr2h	equ	0xFDA
 18770                           fsr2l	equ	0xFD9
 18771                           status	equ	0xFD8
 18772                           
 18773 ;; *************** function _passLinkEtxThreshold *****************
 18774 ;; Defined at:
 18775 ;;		line 190 in file "../RouteManager.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;  etx             2    0[BANK0 ] unsigned int 
 18778 ;; Auto vars:     Size  Location     Type
 18779 ;;		None
 18780 ;; Return value:  Size  Location     Type
 18781 ;;                  1    wreg      unsigned char 
 18782 ;; Registers used:
 18783 ;;		wreg, status,2, status,0
 18784 ;; Tracked objects:
 18785 ;;		On entry : F/0
 18786 ;;		On exit  : F/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18793 ;;Total ram usage:        2 bytes
 18794 ;; Hardware stack levels used:    1
 18795 ;; Hardware stack levels required when called:    4
 18796 ;; This function calls:
 18797 ;;		Nothing
 18798 ;; This function is called by:
 18799 ;;		_RouteManagerPerformUpdate
 18800 ;;		_routingTableUpdateEntry
 18801 ;; This function uses a non-reentrant model
 18802 ;;
 18803                           
 18804                           	psect	text63
 18805  007BC8                     __ptext63:
 18806                           	opt stack 0
 18807  007BC8                     _passLinkEtxThreshold:
 18808                           	opt stack 21
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;RouteManager.c: 192: return (etx < rmETXThreshold);
 18812                           
 18813                           ;incstack = 0
 18814  007BC8  5161               	movf	(passLinkEtxThreshold@etx+1)& (0+255),w,b
 18815  007BCA  E104               	bnz	u18020
 18816  007BCC  0E32               	movlw	50
 18817  007BCE  5D60               	subwf	passLinkEtxThreshold@etx& (0+255),w,b
 18818  007BD0  A0D8               	btfss	status,0,c
 18819  007BD2  0C01               	retlw	1
 18820  007BD4                     u18020:
 18821                           
 18822                           ; BSR set to: 0
 18823  007BD4  0C00               	retlw	0	;funcret
 18824  007BD6                     __end_of_passLinkEtxThreshold:
 18825                           	opt stack 0
 18826                           tblptru	equ	0xFF8
 18827                           tblptrh	equ	0xFF7
 18828                           tblptrl	equ	0xFF6
 18829                           tablat	equ	0xFF5
 18830                           prodh	equ	0xFF4
 18831                           prodl	equ	0xFF3
 18832                           postinc0	equ	0xFEE
 18833                           plusw0	equ	0xFEB
 18834                           fsr0h	equ	0xFEA
 18835                           fsr0l	equ	0xFE9
 18836                           wreg	equ	0xFE8
 18837                           indf1	equ	0xFE7
 18838                           postinc1	equ	0xFE6
 18839                           postdec1	equ	0xFE5
 18840                           plusw1	equ	0xFE3
 18841                           fsr1h	equ	0xFE2
 18842                           fsr1l	equ	0xFE1
 18843                           indf2	equ	0xFDF
 18844                           postinc2	equ	0xFDE
 18845                           postdec2	equ	0xFDD
 18846                           plusw2	equ	0xFDB
 18847                           fsr2h	equ	0xFDA
 18848                           fsr2l	equ	0xFD9
 18849                           status	equ	0xFD8
 18850                           
 18851 ;; *************** function _TransportManagerRouteFound *****************
 18852 ;; Defined at:
 18853 ;;		line 278 in file "../TransportManager.c"
 18854 ;; Parameters:    Size  Location     Type
 18855 ;;		None
 18856 ;; Auto vars:     Size  Location     Type
 18857 ;;		None
 18858 ;; Return value:  Size  Location     Type
 18859 ;;                  1    wreg      void 
 18860 ;; Registers used:
 18861 ;;		None
 18862 ;; Tracked objects:
 18863 ;;		On entry : F/0
 18864 ;;		On exit  : F/0
 18865 ;;		Unchanged: F/0
 18866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18871 ;;Total ram usage:        0 bytes
 18872 ;; Hardware stack levels used:    1
 18873 ;; Hardware stack levels required when called:    4
 18874 ;; This function calls:
 18875 ;;		Nothing
 18876 ;; This function is called by:
 18877 ;;		_RouteManagerPerformUpdate
 18878 ;; This function uses a non-reentrant model
 18879 ;;
 18880                           
 18881                           	psect	text64
 18882  007CBA                     __ptext64:
 18883                           	opt stack 0
 18884  007CBA                     _TransportManagerRouteFound:
 18885                           	opt stack 21
 18886                           
 18887                           ; BSR set to: 0
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;incstack = 0
 18891  007CBA  0012               	return		;funcret
 18892  007CBC                     __end_of_TransportManagerRouteFound:
 18893                           	opt stack 0
 18894                           tblptru	equ	0xFF8
 18895                           tblptrh	equ	0xFF7
 18896                           tblptrl	equ	0xFF6
 18897                           tablat	equ	0xFF5
 18898                           prodh	equ	0xFF4
 18899                           prodl	equ	0xFF3
 18900                           postinc0	equ	0xFEE
 18901                           plusw0	equ	0xFEB
 18902                           fsr0h	equ	0xFEA
 18903                           fsr0l	equ	0xFE9
 18904                           wreg	equ	0xFE8
 18905                           indf1	equ	0xFE7
 18906                           postinc1	equ	0xFE6
 18907                           postdec1	equ	0xFE5
 18908                           plusw1	equ	0xFE3
 18909                           fsr1h	equ	0xFE2
 18910                           fsr1l	equ	0xFE1
 18911                           indf2	equ	0xFDF
 18912                           postinc2	equ	0xFDE
 18913                           postdec2	equ	0xFDD
 18914                           plusw2	equ	0xFDB
 18915                           fsr2h	equ	0xFDA
 18916                           fsr2l	equ	0xFD9
 18917                           status	equ	0xFD8
 18918                           
 18919 ;; *************** function _TransportManagerNoRoute *****************
 18920 ;; Defined at:
 18921 ;;		line 273 in file "../TransportManager.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;		None
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;		None
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      void 
 18928 ;; Registers used:
 18929 ;;		None
 18930 ;; Tracked objects:
 18931 ;;		On entry : F/0
 18932 ;;		On exit  : F/0
 18933 ;;		Unchanged: F/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;Total ram usage:        0 bytes
 18940 ;; Hardware stack levels used:    1
 18941 ;; Hardware stack levels required when called:    4
 18942 ;; This function calls:
 18943 ;;		Nothing
 18944 ;; This function is called by:
 18945 ;;		_RouteManagerPerformUpdate
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text65
 18950  007CBC                     __ptext65:
 18951                           	opt stack 0
 18952  007CBC                     _TransportManagerNoRoute:
 18953                           	opt stack 21
 18954                           
 18955                           ; BSR set to: 0
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;incstack = 0
 18959  007CBC  0012               	return		;funcret
 18960  007CBE                     __end_of_TransportManagerNoRoute:
 18961                           	opt stack 0
 18962                           tblptru	equ	0xFF8
 18963                           tblptrh	equ	0xFF7
 18964                           tblptrl	equ	0xFF6
 18965                           tablat	equ	0xFF5
 18966                           prodh	equ	0xFF4
 18967                           prodl	equ	0xFF3
 18968                           postinc0	equ	0xFEE
 18969                           plusw0	equ	0xFEB
 18970                           fsr0h	equ	0xFEA
 18971                           fsr0l	equ	0xFE9
 18972                           wreg	equ	0xFE8
 18973                           indf1	equ	0xFE7
 18974                           postinc1	equ	0xFE6
 18975                           postdec1	equ	0xFE5
 18976                           plusw1	equ	0xFE3
 18977                           fsr1h	equ	0xFE2
 18978                           fsr1l	equ	0xFE1
 18979                           indf2	equ	0xFDF
 18980                           postinc2	equ	0xFDE
 18981                           postdec2	equ	0xFDD
 18982                           plusw2	equ	0xFDB
 18983                           fsr2h	equ	0xFDA
 18984                           fsr2l	equ	0xFD9
 18985                           status	equ	0xFD8
 18986                           
 18987 ;; *************** function _LE_UnpinNeighbor *****************
 18988 ;; Defined at:
 18989 ;;		line 133 in file "../LinkEstimator.c"
 18990 ;; Parameters:    Size  Location     Type
 18991 ;;  neighbor        8   42[BANK0 ] struct addr_t_def
 18992 ;; Auto vars:     Size  Location     Type
 18993 ;;  nidx            2   53[BANK0 ] unsigned int 
 18994 ;;  res             1    0        enum E179
 18995 ;; Return value:  Size  Location     Type
 18996 ;;                  1    wreg      enum E180
 18997 ;; Registers used:
 18998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18999 ;; Tracked objects:
 19000 ;;		On entry : F/0
 19001 ;;		On exit  : F/0
 19002 ;;		Unchanged: 0/0
 19003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19008 ;;Total ram usage:       13 bytes
 19009 ;; Hardware stack levels used:    1
 19010 ;; Hardware stack levels required when called:    7
 19011 ;; This function calls:
 19012 ;;		_le_findIdx
 19013 ;; This function is called by:
 19014 ;;		_RouteManagerPerformUpdate
 19015 ;; This function uses a non-reentrant model
 19016 ;;
 19017                           
 19018                           	psect	text66
 19019  00739E                     __ptext66:
 19020                           	opt stack 0
 19021  00739E                     _LE_UnpinNeighbor:
 19022                           	opt stack 18
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;LinkEstimator.c: 135: uint16_t nidx = le_findIdx(neighbor);
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;incstack = 0
 19029  00739E  EE20  F08A         	lfsr	2,LE_UnpinNeighbor@neighbor
 19030  0073A2  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 19031  0073A6  0E07               	movlw	7
 19032  0073A8                     u18041:
 19033  0073A8  CFDB FFEB          	movff	plusw2,plusw0
 19034  0073AC  06E8               	decf	wreg,f,c
 19035  0073AE  E2FC               	bc	u18041
 19036  0073B0  EC63  F036         	call	_le_findIdx	;wreg free
 19037  0073B4  6F95               	movwf	LE_UnpinNeighbor@nidx& (0+255),b
 19038  0073B6  6B96               	clrf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 19039                           
 19040                           ; BSR set to: 0
 19041                           ;LinkEstimator.c: 137: if (nidx != 0xff)
 19042                           
 19043                           ; BSR set to: 0
 19044  0073B8  2995               	incf	LE_UnpinNeighbor@nidx& (0+255),w,b
 19045  0073BA  1196               	iorwf	(LE_UnpinNeighbor@nidx+1)& (0+255),w,b
 19046  0073BC  B4D8               	btfsc	status,2,c
 19047  0073BE  0012               	return	
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;LinkEstimator.c: 138: {
 19051                           ;LinkEstimator.c: 139: neighbor_tbl[nidx].flags &= ~0x8;
 19052  0073C0  0E11               	movlw	17
 19053  0073C2  0395               	mulwf	LE_UnpinNeighbor@nidx& (0+255),b
 19054  0073C4  CFF3 F092          	movff	prodl,??_LE_UnpinNeighbor
 19055  0073C8  CFF4 F093          	movff	prodh,??_LE_UnpinNeighbor+1
 19056  0073CC  0396               	mulwf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 19057  0073CE  50F3               	movf	prodl,w,c
 19058  0073D0  2793               	addwf	(??_LE_UnpinNeighbor+1)& (0+255),f,b
 19059  0073D2  0E55               	movlw	low (_neighbor_tbl+11)
 19060  0073D4  2592               	addwf	??_LE_UnpinNeighbor& (0+255),w,b
 19061  0073D6  6ED9               	movwf	fsr2l,c
 19062  0073D8  0E0D               	movlw	high (_neighbor_tbl+11)
 19063  0073DA  2193               	addwfc	(??_LE_UnpinNeighbor+1)& (0+255),w,b
 19064  0073DC  6EDA               	movwf	fsr2h,c
 19065  0073DE  0EF7               	movlw	247
 19066  0073E0  16DF               	andwf	indf2,f,c
 19067                           
 19068                           ; BSR set to: 0
 19069                           
 19070                           ; BSR set to: 0
 19071  0073E2  0CF7               	retlw	247	;funcret
 19072  0073E4                     __end_of_LE_UnpinNeighbor:
 19073                           	opt stack 0
 19074                           tblptru	equ	0xFF8
 19075                           tblptrh	equ	0xFF7
 19076                           tblptrl	equ	0xFF6
 19077                           tablat	equ	0xFF5
 19078                           prodh	equ	0xFF4
 19079                           prodl	equ	0xFF3
 19080                           postinc0	equ	0xFEE
 19081                           plusw0	equ	0xFEB
 19082                           fsr0h	equ	0xFEA
 19083                           fsr0l	equ	0xFE9
 19084                           wreg	equ	0xFE8
 19085                           indf1	equ	0xFE7
 19086                           postinc1	equ	0xFE6
 19087                           postdec1	equ	0xFE5
 19088                           plusw1	equ	0xFE3
 19089                           fsr1h	equ	0xFE2
 19090                           fsr1l	equ	0xFE1
 19091                           indf2	equ	0xFDF
 19092                           postinc2	equ	0xFDE
 19093                           postdec2	equ	0xFDD
 19094                           plusw2	equ	0xFDB
 19095                           fsr2h	equ	0xFDA
 19096                           fsr2l	equ	0xFD9
 19097                           status	equ	0xFD8
 19098                           
 19099 ;; *************** function _LE_PinNeighbor *****************
 19100 ;; Defined at:
 19101 ;;		line 120 in file "../LinkEstimator.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  neighbor        8   42[BANK0 ] struct addr_t_def
 19104 ;; Auto vars:     Size  Location     Type
 19105 ;;  nidx            2   53[BANK0 ] unsigned int 
 19106 ;;  res             1    0        enum E179
 19107 ;; Return value:  Size  Location     Type
 19108 ;;                  1    wreg      enum E180
 19109 ;; Registers used:
 19110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19111 ;; Tracked objects:
 19112 ;;		On entry : F/0
 19113 ;;		On exit  : F/0
 19114 ;;		Unchanged: 0/0
 19115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19116 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19117 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;Total ram usage:       13 bytes
 19121 ;; Hardware stack levels used:    1
 19122 ;; Hardware stack levels required when called:    7
 19123 ;; This function calls:
 19124 ;;		_le_findIdx
 19125 ;; This function is called by:
 19126 ;;		_RouteManagerPerformUpdate
 19127 ;;		_RouteManagerProcessReceive
 19128 ;; This function uses a non-reentrant model
 19129 ;;
 19130                           
 19131                           	psect	text67
 19132  0073E4                     __ptext67:
 19133                           	opt stack 0
 19134  0073E4                     _LE_PinNeighbor:
 19135                           	opt stack 19
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;LinkEstimator.c: 122: uint16_t nidx = le_findIdx(neighbor);
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;incstack = 0
 19142  0073E4  EE20  F08A         	lfsr	2,LE_PinNeighbor@neighbor
 19143  0073E8  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 19144  0073EC  0E07               	movlw	7
 19145  0073EE                     u18061:
 19146  0073EE  CFDB FFEB          	movff	plusw2,plusw0
 19147  0073F2  06E8               	decf	wreg,f,c
 19148  0073F4  E2FC               	bc	u18061
 19149  0073F6  EC63  F036         	call	_le_findIdx	;wreg free
 19150  0073FA  6F95               	movwf	LE_PinNeighbor@nidx& (0+255),b
 19151  0073FC  6B96               	clrf	(LE_PinNeighbor@nidx+1)& (0+255),b
 19152                           
 19153                           ; BSR set to: 0
 19154                           ;LinkEstimator.c: 124: if (nidx != 0xff)
 19155                           
 19156                           ; BSR set to: 0
 19157  0073FE  2995               	incf	LE_PinNeighbor@nidx& (0+255),w,b
 19158  007400  1196               	iorwf	(LE_PinNeighbor@nidx+1)& (0+255),w,b
 19159  007402  B4D8               	btfsc	status,2,c
 19160  007404  0012               	return	
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;LinkEstimator.c: 125: {
 19164                           ;LinkEstimator.c: 126: neighbor_tbl[nidx].flags |= 0x8;
 19165  007406  0E11               	movlw	17
 19166  007408  0395               	mulwf	LE_PinNeighbor@nidx& (0+255),b
 19167  00740A  CFF3 F092          	movff	prodl,??_LE_PinNeighbor
 19168  00740E  CFF4 F093          	movff	prodh,??_LE_PinNeighbor+1
 19169  007412  0396               	mulwf	(LE_PinNeighbor@nidx+1)& (0+255),b
 19170  007414  50F3               	movf	prodl,w,c
 19171  007416  2793               	addwf	(??_LE_PinNeighbor+1)& (0+255),f,b
 19172  007418  0E55               	movlw	low (_neighbor_tbl+11)
 19173  00741A  2592               	addwf	??_LE_PinNeighbor& (0+255),w,b
 19174  00741C  6ED9               	movwf	fsr2l,c
 19175  00741E  0E0D               	movlw	high (_neighbor_tbl+11)
 19176  007420  2193               	addwfc	(??_LE_PinNeighbor+1)& (0+255),w,b
 19177  007422  6EDA               	movwf	fsr2h,c
 19178  007424  0E00               	movlw	0
 19179  007426  86DB               	bsf	plusw2,3,c
 19180                           
 19181                           ; BSR set to: 0
 19182  007428  0C00               	retlw	0	;funcret
 19183  00742A                     __end_of_LE_PinNeighbor:
 19184                           	opt stack 0
 19185                           tblptru	equ	0xFF8
 19186                           tblptrh	equ	0xFF7
 19187                           tblptrl	equ	0xFF6
 19188                           tablat	equ	0xFF5
 19189                           prodh	equ	0xFF4
 19190                           prodl	equ	0xFF3
 19191                           postinc0	equ	0xFEE
 19192                           plusw0	equ	0xFEB
 19193                           fsr0h	equ	0xFEA
 19194                           fsr0l	equ	0xFE9
 19195                           wreg	equ	0xFE8
 19196                           indf1	equ	0xFE7
 19197                           postinc1	equ	0xFE6
 19198                           postdec1	equ	0xFE5
 19199                           plusw1	equ	0xFE3
 19200                           fsr1h	equ	0xFE2
 19201                           fsr1l	equ	0xFE1
 19202                           indf2	equ	0xFDF
 19203                           postinc2	equ	0xFDE
 19204                           postdec2	equ	0xFDD
 19205                           plusw2	equ	0xFDB
 19206                           fsr2h	equ	0xFDA
 19207                           fsr2l	equ	0xFD9
 19208                           status	equ	0xFD8
 19209                           
 19210 ;; *************** function _LE_ClearDLQ *****************
 19211 ;; Defined at:
 19212 ;;		line 145 in file "../LinkEstimator.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  neighbor        8   42[BANK0 ] struct addr_t_def
 19215 ;; Auto vars:     Size  Location     Type
 19216 ;;  nidx            2   55[BANK0 ] unsigned int 
 19217 ;;  ne              2   53[BANK0 ] PTR struct neighbor_tabl
 19218 ;;		 -> neighbor_tbl(340), 
 19219 ;;  res             1    0        enum E179
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      enum E180
 19222 ;; Registers used:
 19223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19224 ;; Tracked objects:
 19225 ;;		On entry : F/0
 19226 ;;		On exit  : F/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19232 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19233 ;;Total ram usage:       15 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:    7
 19236 ;; This function calls:
 19237 ;;		_le_findIdx
 19238 ;; This function is called by:
 19239 ;;		_RouteManagerPerformUpdate
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           	psect	text68
 19244  006EAC                     __ptext68:
 19245                           	opt stack 0
 19246  006EAC                     _LE_ClearDLQ:
 19247                           	opt stack 18
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;LinkEstimator.c: 149: uint16_t nidx = le_findIdx(neighbor);
 19251                           
 19252                           ; BSR set to: 0
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;incstack = 0
 19256  006EAC  EE20  F08A         	lfsr	2,LE_ClearDLQ@neighbor
 19257  006EB0  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 19258  006EB4  0E07               	movlw	7
 19259  006EB6                     u18081:
 19260  006EB6  CFDB FFEB          	movff	plusw2,plusw0
 19261  006EBA  06E8               	decf	wreg,f,c
 19262  006EBC  E2FC               	bc	u18081
 19263  006EBE  EC63  F036         	call	_le_findIdx	;wreg free
 19264  006EC2  6F97               	movwf	LE_ClearDLQ@nidx& (0+255),b
 19265  006EC4  6B98               	clrf	(LE_ClearDLQ@nidx+1)& (0+255),b
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;LinkEstimator.c: 150: if (nidx != 0xff)
 19269  006EC6  2997               	incf	LE_ClearDLQ@nidx& (0+255),w,b
 19270  006EC8  1198               	iorwf	(LE_ClearDLQ@nidx+1)& (0+255),w,b
 19271  006ECA  B4D8               	btfsc	status,2,c
 19272  006ECC  0012               	return	
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;LinkEstimator.c: 151: {
 19276                           ;LinkEstimator.c: 152: ne = &neighbor_tbl[nidx];
 19277  006ECE  0E11               	movlw	17
 19278  006ED0  0397               	mulwf	LE_ClearDLQ@nidx& (0+255),b
 19279  006ED2  CFF3 F092          	movff	prodl,??_LE_ClearDLQ
 19280  006ED6  CFF4 F093          	movff	prodh,??_LE_ClearDLQ+1
 19281  006EDA  0398               	mulwf	(LE_ClearDLQ@nidx+1)& (0+255),b
 19282  006EDC  50F3               	movf	prodl,w,c
 19283  006EDE  2793               	addwf	(??_LE_ClearDLQ+1)& (0+255),f,b
 19284  006EE0  0E4A               	movlw	low _neighbor_tbl
 19285  006EE2  2592               	addwf	??_LE_ClearDLQ& (0+255),w,b
 19286  006EE4  6F95               	movwf	LE_ClearDLQ@ne& (0+255),b
 19287  006EE6  0E0D               	movlw	high _neighbor_tbl
 19288  006EE8  2193               	addwfc	(??_LE_ClearDLQ+1)& (0+255),w,b
 19289  006EEA  6F96               	movwf	(LE_ClearDLQ@ne+1)& (0+255),b
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;LinkEstimator.c: 153: ne->data_total = 0;
 19293  006EEC  EE20 F010          	lfsr	2,16
 19294  006EF0  5195               	movf	LE_ClearDLQ@ne& (0+255),w,b
 19295  006EF2  26D9               	addwf	fsr2l,f,c
 19296  006EF4  5196               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 19297  006EF6  22DA               	addwfc	fsr2h,f,c
 19298  006EF8  6ADF               	clrf	indf2,c
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;LinkEstimator.c: 154: ne->data_success = 0;
 19302  006EFA  EE20 F00F          	lfsr	2,15
 19303  006EFE  5195               	movf	LE_ClearDLQ@ne& (0+255),w,b
 19304  006F00  26D9               	addwf	fsr2l,f,c
 19305  006F02  5196               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 19306  006F04  22DA               	addwfc	fsr2h,f,c
 19307  006F06  6ADF               	clrf	indf2,c
 19308                           
 19309                           ; BSR set to: 0
 19310                           
 19311                           ; BSR set to: 0
 19312  006F08  0C00               	retlw	0	;funcret
 19313  006F0A                     __end_of_LE_ClearDLQ:
 19314                           	opt stack 0
 19315                           tblptru	equ	0xFF8
 19316                           tblptrh	equ	0xFF7
 19317                           tblptrl	equ	0xFF6
 19318                           tablat	equ	0xFF5
 19319                           prodh	equ	0xFF4
 19320                           prodl	equ	0xFF3
 19321                           postinc0	equ	0xFEE
 19322                           plusw0	equ	0xFEB
 19323                           fsr0h	equ	0xFEA
 19324                           fsr0l	equ	0xFE9
 19325                           wreg	equ	0xFE8
 19326                           indf1	equ	0xFE7
 19327                           postinc1	equ	0xFE6
 19328                           postdec1	equ	0xFE5
 19329                           plusw1	equ	0xFE3
 19330                           fsr1h	equ	0xFE2
 19331                           fsr1l	equ	0xFE1
 19332                           indf2	equ	0xFDF
 19333                           postinc2	equ	0xFDE
 19334                           postdec2	equ	0xFDD
 19335                           plusw2	equ	0xFDB
 19336                           fsr2h	equ	0xFDA
 19337                           fsr2l	equ	0xFD9
 19338                           status	equ	0xFD8
 19339                           
 19340 ;; *************** function _BeaconManagerTrigger *****************
 19341 ;; Defined at:
 19342 ;;		line 152 in file "../BeaconManager.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;		None
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;		None
 19347 ;; Return value:  Size  Location     Type
 19348 ;;                  1    wreg      void 
 19349 ;; Registers used:
 19350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19351 ;; Tracked objects:
 19352 ;;		On entry : F/0
 19353 ;;		On exit  : F/0
 19354 ;;		Unchanged: 0/0
 19355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;Total ram usage:        0 bytes
 19361 ;; Hardware stack levels used:    1
 19362 ;; Hardware stack levels required when called:    9
 19363 ;; This function calls:
 19364 ;;		_netResetInterval
 19365 ;; This function is called by:
 19366 ;;		_RouteManagerPerformUpdate
 19367 ;;		_RouteManagerProcessReceive
 19368 ;;		_NetworkManagerProcessIncomingData
 19369 ;; This function uses a non-reentrant model
 19370 ;;
 19371                           
 19372                           	psect	text69
 19373  007C84                     __ptext69:
 19374                           	opt stack 0
 19375  007C84                     _BeaconManagerTrigger:
 19376                           	opt stack 17
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;BeaconManager.c: 154: netResetInterval();
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;incstack = 0
 19383  007C84  EF8F  F03D         	goto	_netResetInterval	;wreg free
 19384  007C88                     __end_of_BeaconManagerTrigger:
 19385                           	opt stack 0
 19386                           tblptru	equ	0xFF8
 19387                           tblptrh	equ	0xFF7
 19388                           tblptrl	equ	0xFF6
 19389                           tablat	equ	0xFF5
 19390                           prodh	equ	0xFF4
 19391                           prodl	equ	0xFF3
 19392                           postinc0	equ	0xFEE
 19393                           plusw0	equ	0xFEB
 19394                           fsr0h	equ	0xFEA
 19395                           fsr0l	equ	0xFE9
 19396                           wreg	equ	0xFE8
 19397                           indf1	equ	0xFE7
 19398                           postinc1	equ	0xFE6
 19399                           postdec1	equ	0xFE5
 19400                           plusw1	equ	0xFE3
 19401                           fsr1h	equ	0xFE2
 19402                           fsr1l	equ	0xFE1
 19403                           indf2	equ	0xFDF
 19404                           postinc2	equ	0xFDE
 19405                           postdec2	equ	0xFDD
 19406                           plusw2	equ	0xFDB
 19407                           fsr2h	equ	0xFDA
 19408                           fsr2l	equ	0xFD9
 19409                           status	equ	0xFD8
 19410                           
 19411 ;; *************** function _RMRoutingTableCount *****************
 19412 ;; Defined at:
 19413 ;;		line 408 in file "../RouteManager.c"
 19414 ;; Parameters:    Size  Location     Type
 19415 ;;		None
 19416 ;; Auto vars:     Size  Location     Type
 19417 ;;		None
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  2    0[BANK0 ] unsigned int 
 19420 ;; Registers used:
 19421 ;;		None
 19422 ;; Tracked objects:
 19423 ;;		On entry : C/1
 19424 ;;		On exit  : C/0
 19425 ;;		Unchanged: C/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19431 ;;Total ram usage:        2 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:    4
 19434 ;; This function calls:
 19435 ;;		Nothing
 19436 ;; This function is called by:
 19437 ;;		_NetworkManagerTask
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           	psect	text70
 19442  007C30                     __ptext70:
 19443                           	opt stack 0
 19444  007C30                     _RMRoutingTableCount:
 19445                           	opt stack 23
 19446                           
 19447                           ;RouteManager.c: 410: return(routingTableActive);
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;incstack = 0
 19451  007C30  C039  F060         	movff	_routingTableActive,?_RMRoutingTableCount
 19452  007C34  C03A  F061         	movff	_routingTableActive+1,?_RMRoutingTableCount+1
 19453  007C38  0012               	return		;funcret
 19454  007C3A                     __end_of_RMRoutingTableCount:
 19455                           	opt stack 0
 19456                           tblptru	equ	0xFF8
 19457                           tblptrh	equ	0xFF7
 19458                           tblptrl	equ	0xFF6
 19459                           tablat	equ	0xFF5
 19460                           prodh	equ	0xFF4
 19461                           prodl	equ	0xFF3
 19462                           postinc0	equ	0xFEE
 19463                           plusw0	equ	0xFEB
 19464                           fsr0h	equ	0xFEA
 19465                           fsr0l	equ	0xFE9
 19466                           wreg	equ	0xFE8
 19467                           indf1	equ	0xFE7
 19468                           postinc1	equ	0xFE6
 19469                           postdec1	equ	0xFE5
 19470                           plusw1	equ	0xFE3
 19471                           fsr1h	equ	0xFE2
 19472                           fsr1l	equ	0xFE1
 19473                           indf2	equ	0xFDF
 19474                           postinc2	equ	0xFDE
 19475                           postdec2	equ	0xFDD
 19476                           plusw2	equ	0xFDB
 19477                           fsr2h	equ	0xFDA
 19478                           fsr2l	equ	0xFD9
 19479                           status	equ	0xFD8
 19480                           
 19481 ;; *************** function _MiApp_IsNetworkBusy *****************
 19482 ;; Defined at:
 19483 ;;		line 157 in file "../BeaconManager.c"
 19484 ;; Parameters:    Size  Location     Type
 19485 ;;		None
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;		None
 19488 ;; Return value:  Size  Location     Type
 19489 ;;                  1    wreg      unsigned char 
 19490 ;; Registers used:
 19491 ;;		wreg
 19492 ;; Tracked objects:
 19493 ;;		On entry : F/2
 19494 ;;		On exit  : F/2
 19495 ;;		Unchanged: F/0
 19496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19501 ;;Total ram usage:        0 bytes
 19502 ;; Hardware stack levels used:    1
 19503 ;; Hardware stack levels required when called:    4
 19504 ;; This function calls:
 19505 ;;		Nothing
 19506 ;; This function is called by:
 19507 ;;		_NetworkManagerTask
 19508 ;; This function uses a non-reentrant model
 19509 ;;
 19510                           
 19511                           	psect	text71
 19512  007CBE                     __ptext71:
 19513                           	opt stack 0
 19514  007CBE                     _MiApp_IsNetworkBusy:
 19515                           	opt stack 23
 19516                           
 19517                           ; BSR set to: 2
 19518                           
 19519                           ; BSR set to: 2
 19520                           ;BeaconManager.c: 159: return(0);
 19521                           
 19522                           ;incstack = 0
 19523  007CBE  0C00               	retlw	0	;funcret
 19524  007CC0                     __end_of_MiApp_IsNetworkBusy:
 19525                           	opt stack 0
 19526                           tblptru	equ	0xFF8
 19527                           tblptrh	equ	0xFF7
 19528                           tblptrl	equ	0xFF6
 19529                           tablat	equ	0xFF5
 19530                           prodh	equ	0xFF4
 19531                           prodl	equ	0xFF3
 19532                           postinc0	equ	0xFEE
 19533                           plusw0	equ	0xFEB
 19534                           fsr0h	equ	0xFEA
 19535                           fsr0l	equ	0xFE9
 19536                           wreg	equ	0xFE8
 19537                           indf1	equ	0xFE7
 19538                           postinc1	equ	0xFE6
 19539                           postdec1	equ	0xFE5
 19540                           plusw1	equ	0xFE3
 19541                           fsr1h	equ	0xFE2
 19542                           fsr1l	equ	0xFE1
 19543                           indf2	equ	0xFDF
 19544                           postinc2	equ	0xFDE
 19545                           postdec2	equ	0xFDD
 19546                           plusw2	equ	0xFDB
 19547                           fsr2h	equ	0xFDA
 19548                           fsr2l	equ	0xFD9
 19549                           status	equ	0xFD8
 19550                           
 19551 ;; *************** function _BroadcastManagerTask *****************
 19552 ;; Defined at:
 19553 ;;		line 29 in file "../BroadcastManager.c"
 19554 ;; Parameters:    Size  Location     Type
 19555 ;;		None
 19556 ;; Auto vars:     Size  Location     Type
 19557 ;;  i               2   82[BANK0 ] unsigned int 
 19558 ;;  PANID           2   80[BANK0 ] unsigned int 
 19559 ;; Return value:  Size  Location     Type
 19560 ;;                  1    wreg      void 
 19561 ;; Registers used:
 19562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19563 ;; Tracked objects:
 19564 ;;		On entry : F/0
 19565 ;;		On exit  : F/0
 19566 ;;		Unchanged: 0/0
 19567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19569 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19570 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19571 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19572 ;;Total ram usage:       14 bytes
 19573 ;; Hardware stack levels used:    1
 19574 ;; Hardware stack levels required when called:   11
 19575 ;; This function calls:
 19576 ;;		_MSTickGet
 19577 ;;		_NetworkGetPANID
 19578 ;;		_memset
 19579 ;;		_radioBroadcast
 19580 ;; This function is called by:
 19581 ;;		_NetworkManagerTask
 19582 ;; This function uses a non-reentrant model
 19583 ;;
 19584                           
 19585                           	psect	text72
 19586  0038CE                     __ptext72:
 19587                           	opt stack 0
 19588  0038CE                     _BroadcastManagerTask:
 19589                           	opt stack 16
 19590                           
 19591                           ; BSR set to: 0
 19592                           ;BroadcastManager.c: 31: uint16_t i;
 19593                           ;BroadcastManager.c: 32: uint16_t PANID;
 19594                           ;BroadcastManager.c: 34: for(i=0;i<6;i++)
 19595                           
 19596                           ; BSR set to: 2
 19597                           ;incstack = 0
 19598  0038CE  6BB2               	clrf	BroadcastManagerTask@i& (0+255),b
 19599  0038D0  6BB3               	clrf	(BroadcastManagerTask@i+1)& (0+255),b
 19600  0038D2                     l13719:
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;BroadcastManager.c: 35: {
 19604                           ;BroadcastManager.c: 36: if( (((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==0) &
      +                          & ((MSTickGet().msb>RbcQ[i].TxTime.msb) || ((MSTickGet().msb==RbcQ[i].TxTime.msb) && (MS
      +                          TickGet().lsb>=RbcQ[i].TxTime.lsb) ) ) )
 19605  0038D2  0E4A               	movlw	74
 19606  0038D4  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19607  0038D6  CFF3 F0A6          	movff	prodl,??_BroadcastManagerTask
 19608  0038DA  CFF4 F0A7          	movff	prodh,??_BroadcastManagerTask+1
 19609  0038DE  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19610  0038E0  50F3               	movf	prodl,w,c
 19611  0038E2  27A7               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19612  0038E4  0ED6               	movlw	low (_RbcQ+4)
 19613  0038E6  25A6               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19614  0038E8  6ED9               	movwf	fsr2l,c
 19615  0038EA  0E08               	movlw	high (_RbcQ+4)
 19616  0038EC  21A7               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19617  0038EE  6EDA               	movwf	fsr2h,c
 19618  0038F0  50DE               	movf	postinc2,w,c
 19619  0038F2  10DE               	iorwf	postinc2,w,c
 19620  0038F4  10DE               	iorwf	postinc2,w,c
 19621  0038F6  10DE               	iorwf	postinc2,w,c
 19622  0038F8  E115               	bnz	l13723
 19623                           
 19624                           ; BSR set to: 0
 19625  0038FA  0E4A               	movlw	74
 19626  0038FC  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19627  0038FE  CFF3 F0A6          	movff	prodl,??_BroadcastManagerTask
 19628  003902  CFF4 F0A7          	movff	prodh,??_BroadcastManagerTask+1
 19629  003906  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19630  003908  50F3               	movf	prodl,w,c
 19631  00390A  27A7               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19632  00390C  0ED2               	movlw	low _RbcQ
 19633  00390E  25A6               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19634  003910  6ED9               	movwf	fsr2l,c
 19635  003912  0E08               	movlw	high _RbcQ
 19636  003914  21A7               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19637  003916  6EDA               	movwf	fsr2h,c
 19638  003918  50DE               	movf	postinc2,w,c
 19639  00391A  10DE               	iorwf	postinc2,w,c
 19640  00391C  10DE               	iorwf	postinc2,w,c
 19641  00391E  10DE               	iorwf	postinc2,w,c
 19642  003920  E101 D0C4          	bz	l13739
 19643  003924                     l13723:
 19644                           
 19645                           ; BSR set to: 0
 19646  003924  EC70  F03B         	call	_MSTickGet	;wreg free
 19647  003928  0E04               	movlw	4
 19648  00392A  26E9               	addwf	fsr0l,f,c
 19649  00392C  0E00               	movlw	0
 19650  00392E  22EA               	addwfc	fsr0h,f,c
 19651  003930  0E4A               	movlw	74
 19652  003932  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19653  003934  CFF3 F0AA          	movff	prodl,??_BroadcastManagerTask+4
 19654  003938  CFF4 F0AB          	movff	prodh,??_BroadcastManagerTask+5
 19655  00393C  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19656  00393E  50F3               	movf	prodl,w,c
 19657  003940  27AB               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19658  003942  0ED6               	movlw	low (_RbcQ+4)
 19659  003944  25AA               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19660  003946  6ED9               	movwf	fsr2l,c
 19661  003948  0E08               	movlw	high (_RbcQ+4)
 19662  00394A  21AB               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19663  00394C  6EDA               	movwf	fsr2h,c
 19664  00394E  50EE               	movf	postinc0,w,c
 19665  003950  5CDE               	subwf	postinc2,w,c
 19666  003952  50EE               	movf	postinc0,w,c
 19667  003954  58DE               	subwfb	postinc2,w,c
 19668  003956  50EE               	movf	postinc0,w,c
 19669  003958  58DE               	subwfb	postinc2,w,c
 19670  00395A  50EE               	movf	postinc0,w,c
 19671  00395C  58DE               	subwfb	postinc2,w,c
 19672  00395E  E33C               	bnc	l13729
 19673                           
 19674                           ; BSR set to: 0
 19675  003960  EC70  F03B         	call	_MSTickGet	;wreg free
 19676  003964  0E04               	movlw	4
 19677  003966  26E9               	addwf	fsr0l,f,c
 19678  003968  0E00               	movlw	0
 19679  00396A  22EA               	addwfc	fsr0h,f,c
 19680  00396C  0E4A               	movlw	74
 19681  00396E  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19682  003970  CFF3 F0AA          	movff	prodl,??_BroadcastManagerTask+4
 19683  003974  CFF4 F0AB          	movff	prodh,??_BroadcastManagerTask+5
 19684  003978  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19685  00397A  50F3               	movf	prodl,w,c
 19686  00397C  27AB               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19687  00397E  0ED6               	movlw	low (_RbcQ+4)
 19688  003980  25AA               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19689  003982  6ED9               	movwf	fsr2l,c
 19690  003984  0E08               	movlw	high (_RbcQ+4)
 19691  003986  21AB               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19692  003988  6EDA               	movwf	fsr2h,c
 19693  00398A  50DE               	movf	postinc2,w,c
 19694  00398C  18EE               	xorwf	postinc0,w,c
 19695  00398E  E109               	bnz	u20711
 19696  003990  50DE               	movf	postinc2,w,c
 19697  003992  18EE               	xorwf	postinc0,w,c
 19698  003994  E106               	bnz	u20711
 19699  003996  50DE               	movf	postinc2,w,c
 19700  003998  18EE               	xorwf	postinc0,w,c
 19701  00399A  E103               	bnz	u20711
 19702  00399C  50DE               	movf	postinc2,w,c
 19703  00399E  18EE               	xorwf	postinc0,w,c
 19704  0039A0  A4D8               	btfss	status,2,c
 19705  0039A2                     u20711:
 19706  0039A2  D084               	goto	l13739
 19707                           
 19708                           ; BSR set to: 0
 19709  0039A4  EC70  F03B         	call	_MSTickGet	;wreg free
 19710  0039A8  0E4A               	movlw	74
 19711  0039AA  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19712  0039AC  CFF3 F0AA          	movff	prodl,??_BroadcastManagerTask+4
 19713  0039B0  CFF4 F0AB          	movff	prodh,??_BroadcastManagerTask+5
 19714  0039B4  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19715  0039B6  50F3               	movf	prodl,w,c
 19716  0039B8  27AB               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19717  0039BA  0ED2               	movlw	low _RbcQ
 19718  0039BC  25AA               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19719  0039BE  6ED9               	movwf	fsr2l,c
 19720  0039C0  0E08               	movlw	high _RbcQ
 19721  0039C2  21AB               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19722  0039C4  6EDA               	movwf	fsr2h,c
 19723  0039C6  50DE               	movf	postinc2,w,c
 19724  0039C8  5CEE               	subwf	postinc0,w,c
 19725  0039CA  50DE               	movf	postinc2,w,c
 19726  0039CC  58EE               	subwfb	postinc0,w,c
 19727  0039CE  50DE               	movf	postinc2,w,c
 19728  0039D0  58EE               	subwfb	postinc0,w,c
 19729  0039D2  50DE               	movf	postinc2,w,c
 19730  0039D4  58EE               	subwfb	postinc0,w,c
 19731  0039D6  E36A               	bnc	l13739
 19732  0039D8                     l13729:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;BroadcastManager.c: 37: {
 19736                           ;BroadcastManager.c: 39: if((RbcQ[i].Flags & (1<<1))>0)
 19737  0039D8  0E4A               	movlw	74
 19738  0039DA  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19739  0039DC  CFF3 F0A6          	movff	prodl,??_BroadcastManagerTask
 19740  0039E0  CFF4 F0A7          	movff	prodh,??_BroadcastManagerTask+1
 19741  0039E4  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19742  0039E6  50F3               	movf	prodl,w,c
 19743  0039E8  27A7               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19744  0039EA  0E1B               	movlw	low (_RbcQ+73)
 19745  0039EC  25A6               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19746  0039EE  6ED9               	movwf	fsr2l,c
 19747  0039F0  0E09               	movlw	high (_RbcQ+73)
 19748  0039F2  21A7               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19749  0039F4  6EDA               	movwf	fsr2h,c
 19750  0039F6  A2DF               	btfss	indf2,1,c
 19751  0039F8  D003               	goto	l13733
 19752                           
 19753                           ; BSR set to: 0
 19754                           ;BroadcastManager.c: 40: {
 19755                           ;BroadcastManager.c: 41: PANID=0xffff;
 19756  0039FA  69B0               	setf	BroadcastManagerTask@PANID& (0+255),b
 19757  0039FC  69B1               	setf	(BroadcastManagerTask@PANID+1)& (0+255),b
 19758                           
 19759                           ;BroadcastManager.c: 42: }else
 19760  0039FE  D006               	goto	l13735
 19761  003A00                     l13733:
 19762                           
 19763                           ; BSR set to: 0
 19764                           ;BroadcastManager.c: 43: {
 19765                           ;BroadcastManager.c: 44: PANID=NetworkGetPANID();
 19766  003A00  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 19767  003A04  C060  F0B0         	movff	?_NetworkGetPANID,BroadcastManagerTask@PANID
 19768  003A08  C061  F0B1         	movff	?_NetworkGetPANID+1,BroadcastManagerTask@PANID+1
 19769  003A0C                     l13735:
 19770                           
 19771                           ;BroadcastManager.c: 45: }
 19772                           ;BroadcastManager.c: 46: radioBroadcast(RbcQ[i].pkt,RbcQ[i].pktSize,PANID,(RbcQ[i].Flags
      +                           & (1<<0))>0);
 19773  003A0C  0E4A               	movlw	74
 19774  003A0E  0100               	movlb	0	; () banked
 19775  003A10  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19776  003A12  CFF3 F0A6          	movff	prodl,??_BroadcastManagerTask
 19777  003A16  CFF4 F0A7          	movff	prodh,??_BroadcastManagerTask+1
 19778  003A1A  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19779  003A1C  50F3               	movf	prodl,w,c
 19780  003A1E  27A7               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19781  003A20  0EDA               	movlw	low (_RbcQ+8)
 19782  003A22  25A6               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19783  003A24  6F9F               	movwf	radioBroadcast@data& (0+255),b
 19784  003A26  0E08               	movlw	high (_RbcQ+8)
 19785  003A28  21A7               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19786  003A2A  6FA0               	movwf	(radioBroadcast@data+1)& (0+255),b
 19787  003A2C  0E4A               	movlw	74
 19788  003A2E  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19789  003A30  CFF3 F0A8          	movff	prodl,??_BroadcastManagerTask+2
 19790  003A34  CFF4 F0A9          	movff	prodh,??_BroadcastManagerTask+3
 19791  003A38  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19792  003A3A  50F3               	movf	prodl,w,c
 19793  003A3C  27A9               	addwf	(??_BroadcastManagerTask+3)& (0+255),f,b
 19794  003A3E  0E1A               	movlw	low (_RbcQ+72)
 19795  003A40  25A8               	addwf	(??_BroadcastManagerTask+2)& (0+255),w,b
 19796  003A42  6ED9               	movwf	fsr2l,c
 19797  003A44  0E09               	movlw	high (_RbcQ+72)
 19798  003A46  21A9               	addwfc	(??_BroadcastManagerTask+3)& (0+255),w,b
 19799  003A48  6EDA               	movwf	fsr2h,c
 19800  003A4A  50DF               	movf	indf2,w,c
 19801  003A4C  6FA1               	movwf	radioBroadcast@datasize& (0+255),b
 19802  003A4E  C0B0  F0A2         	movff	BroadcastManagerTask@PANID,radioBroadcast@PANID
 19803  003A52  C0B1  F0A3         	movff	BroadcastManagerTask@PANID+1,radioBroadcast@PANID+1
 19804  003A56  0E4A               	movlw	74
 19805  003A58  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19806  003A5A  CFF3 F0AA          	movff	prodl,??_BroadcastManagerTask+4
 19807  003A5E  CFF4 F0AB          	movff	prodh,??_BroadcastManagerTask+5
 19808  003A62  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19809  003A64  50F3               	movf	prodl,w,c
 19810  003A66  27AB               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 19811  003A68  0E1B               	movlw	low (_RbcQ+73)
 19812  003A6A  25AA               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 19813  003A6C  6ED9               	movwf	fsr2l,c
 19814  003A6E  0E09               	movlw	high (_RbcQ+73)
 19815  003A70  21AB               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 19816  003A72  6EDA               	movwf	fsr2h,c
 19817  003A74  0E01               	movlw	1
 19818  003A76  A0DF               	btfss	indf2,0,c
 19819  003A78  0E00               	movlw	0
 19820  003A7A  6FA4               	movwf	radioBroadcast@isSecure& (0+255),b
 19821  003A7C  EC85  F037         	call	_radioBroadcast	;wreg free
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;BroadcastManager.c: 47: memset(&RbcQ[i].TxTime,0x00,sizeof(TickMS));
 19825  003A80  0E4A               	movlw	74
 19826  003A82  03B2               	mulwf	BroadcastManagerTask@i& (0+255),b
 19827  003A84  CFF3 F0A6          	movff	prodl,??_BroadcastManagerTask
 19828  003A88  CFF4 F0A7          	movff	prodh,??_BroadcastManagerTask+1
 19829  003A8C  03B3               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 19830  003A8E  50F3               	movf	prodl,w,c
 19831  003A90  27A7               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 19832  003A92  0ED2               	movlw	low _RbcQ
 19833  003A94  25A6               	addwf	??_BroadcastManagerTask& (0+255),w,b
 19834  003A96  6F60               	movwf	memset@p1& (0+255),b
 19835  003A98  0E08               	movlw	high _RbcQ
 19836  003A9A  21A7               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 19837  003A9C  6F61               	movwf	(memset@p1+1)& (0+255),b
 19838  003A9E  6B63               	clrf	(memset@c+1)& (0+255),b
 19839  003AA0  6B62               	clrf	memset@c& (0+255),b
 19840  003AA2  6B65               	clrf	(memset@n+1)& (0+255),b
 19841  003AA4  0E08               	movlw	8
 19842  003AA6  6F64               	movwf	memset@n& (0+255),b
 19843  003AA8  EC61  F03C         	call	_memset	;wreg free
 19844  003AAC                     l13739:
 19845                           
 19846                           ; BSR set to: 0
 19847  003AAC  4BB2               	infsnz	BroadcastManagerTask@i& (0+255),f,b
 19848  003AAE  2BB3               	incf	(BroadcastManagerTask@i+1)& (0+255),f,b
 19849                           
 19850                           ; BSR set to: 0
 19851  003AB0  51B3               	movf	(BroadcastManagerTask@i+1)& (0+255),w,b
 19852  003AB2  E104               	bnz	u20760
 19853  003AB4  0E06               	movlw	6
 19854  003AB6  5DB2               	subwf	BroadcastManagerTask@i& (0+255),w,b
 19855  003AB8  E201 D70B          	bnc	l13719
 19856  003ABC                     u20760:
 19857                           
 19858                           ; BSR set to: 0
 19859  003ABC  0012               	return		;funcret
 19860  003ABE                     __end_of_BroadcastManagerTask:
 19861                           	opt stack 0
 19862                           tblptru	equ	0xFF8
 19863                           tblptrh	equ	0xFF7
 19864                           tblptrl	equ	0xFF6
 19865                           tablat	equ	0xFF5
 19866                           prodh	equ	0xFF4
 19867                           prodl	equ	0xFF3
 19868                           postinc0	equ	0xFEE
 19869                           plusw0	equ	0xFEB
 19870                           fsr0h	equ	0xFEA
 19871                           fsr0l	equ	0xFE9
 19872                           wreg	equ	0xFE8
 19873                           indf1	equ	0xFE7
 19874                           postinc1	equ	0xFE6
 19875                           postdec1	equ	0xFE5
 19876                           plusw1	equ	0xFE3
 19877                           fsr1h	equ	0xFE2
 19878                           fsr1l	equ	0xFE1
 19879                           indf2	equ	0xFDF
 19880                           postinc2	equ	0xFDE
 19881                           postdec2	equ	0xFDD
 19882                           plusw2	equ	0xFDB
 19883                           fsr2h	equ	0xFDA
 19884                           fsr2l	equ	0xFD9
 19885                           status	equ	0xFD8
 19886                           
 19887 ;; *************** function _BeaconManagerTask *****************
 19888 ;; Defined at:
 19889 ;;		line 46 in file "../BeaconManager.c"
 19890 ;; Parameters:    Size  Location     Type
 19891 ;;		None
 19892 ;; Auto vars:     Size  Location     Type
 19893 ;;		None
 19894 ;; Return value:  Size  Location     Type
 19895 ;;                  1    wreg      void 
 19896 ;; Registers used:
 19897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19898 ;; Tracked objects:
 19899 ;;		On entry : D/0
 19900 ;;		On exit  : D/0
 19901 ;;		Unchanged: 0/0
 19902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19907 ;;Total ram usage:        0 bytes
 19908 ;; Hardware stack levels used:    1
 19909 ;; Hardware stack levels required when called:   12
 19910 ;; This function calls:
 19911 ;;		_MSTickGet
 19912 ;;		_MSTickGetDiffNow
 19913 ;;		_netDecayInterval
 19914 ;;		_networkSendBeacon
 19915 ;; This function is called by:
 19916 ;;		_NetworkManagerTask
 19917 ;; This function uses a non-reentrant model
 19918 ;;
 19919                           
 19920                           	psect	text73
 19921  005B46                     __ptext73:
 19922                           	opt stack 0
 19923  005B46                     _BeaconManagerTask:
 19924                           	opt stack 15
 19925                           
 19926                           ;BeaconManager.c: 48: switch(BMState)
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;incstack = 0
 19930  005B46  D066               	goto	l13707
 19931  005B48                     l13683:
 19932                           
 19933                           ;BeaconManager.c: 51: BMState=BM_Idle;
 19934  005B48  0E01               	movlw	1
 19935  005B4A  6E3F               	movwf	_BMState,c
 19936                           
 19937                           ;BeaconManager.c: 52: break;
 19938  005B4C  0C01               	retlw	1
 19939  005B4E                     l13685:
 19940                           
 19941                           ;BeaconManager.c: 58: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 19942  005B4E  EE22  F014         	lfsr	2,_tInterval
 19943  005B52  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 19944  005B56  0E07               	movlw	7
 19945  005B58                     u20621:
 19946  005B58  CFDB FFEB          	movff	plusw2,plusw0
 19947  005B5C  06E8               	decf	wreg,f,c
 19948  005B5E  E2FC               	bc	u20621
 19949  005B60  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 19950  005B64  517C               	movf	?_MSTickGetDiffNow& (0+255),w,b
 19951  005B66  0102               	movlb	2	; () banked
 19952  005B68  5D4C               	subwf	_intervalDelay& (0+255),w,b
 19953  005B6A  0100               	movlb	0	; () banked
 19954  005B6C  517D               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19955  005B6E  0102               	movlb	2	; () banked
 19956  005B70  594D               	subwfb	(_intervalDelay+1)& (0+255),w,b
 19957  005B72  0100               	movlb	0	; () banked
 19958  005B74  517E               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19959  005B76  0102               	movlb	2	; () banked
 19960  005B78  594E               	subwfb	(_intervalDelay+2)& (0+255),w,b
 19961  005B7A  0100               	movlb	0	; () banked
 19962  005B7C  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19963  005B7E  0102               	movlb	2	; () banked
 19964  005B80  594F               	subwfb	(_intervalDelay+3)& (0+255),w,b
 19965  005B82  B0D8               	btfsc	status,0,c
 19966  005B84  0012               	return	
 19967                           
 19968                           ; BSR set to: 2
 19969                           ;BeaconManager.c: 59: {
 19970                           ;BeaconManager.c: 62: networkSendBeacon();
 19971  005B86  EC4A  F01B         	call	_networkSendBeacon	;wreg free
 19972                           
 19973                           ; BSR set to: 0
 19974                           ;BeaconManager.c: 63: intervalDelay=(currentInterval-intervalDelay);
 19975  005B8A  0102               	movlb	2	; () banked
 19976  005B8C  514C               	movf	_intervalDelay& (0+255),w,b
 19977  005B8E  5D44               	subwf	_currentInterval& (0+255),w,b
 19978  005B90  6F4C               	movwf	_intervalDelay& (0+255),b
 19979  005B92  514D               	movf	(_intervalDelay+1)& (0+255),w,b
 19980  005B94  5945               	subwfb	(_currentInterval+1)& (0+255),w,b
 19981  005B96  6F4D               	movwf	(_intervalDelay+1)& (0+255),b
 19982  005B98  514E               	movf	(_intervalDelay+2)& (0+255),w,b
 19983  005B9A  5946               	subwfb	(_currentInterval+2)& (0+255),w,b
 19984  005B9C  6F4E               	movwf	(_intervalDelay+2)& (0+255),b
 19985  005B9E  514F               	movf	(_intervalDelay+3)& (0+255),w,b
 19986  005BA0  5947               	subwfb	(_currentInterval+3)& (0+255),w,b
 19987  005BA2  6F4F               	movwf	(_intervalDelay+3)& (0+255),b
 19988                           
 19989                           ; BSR set to: 2
 19990                           ;BeaconManager.c: 64: tInterval=MSTickGet();
 19991  005BA4  EC70  F03B         	call	_MSTickGet	;wreg free
 19992  005BA8  EE22  F014         	lfsr	2,_tInterval
 19993  005BAC  0E07               	movlw	7
 19994  005BAE                     u20641:
 19995  005BAE  CFEB FFDB          	movff	plusw0,plusw2
 19996  005BB2  06E8               	decf	wreg,f,c
 19997  005BB4  E2FC               	bc	u20641
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;BeaconManager.c: 65: BMState=BM_WaitRemaining;
 20001  005BB6  0E03               	movlw	3
 20002  005BB8  6E3F               	movwf	_BMState,c
 20003  005BBA  0C03               	retlw	3
 20004  005BBC                     l13695:
 20005                           
 20006                           ;BeaconManager.c: 70: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 20007  005BBC  EE22  F014         	lfsr	2,_tInterval
 20008  005BC0  EE00  F07C         	lfsr	0,MSTickGetDiffNow@tick
 20009  005BC4  0E07               	movlw	7
 20010  005BC6                     u20651:
 20011  005BC6  CFDB FFEB          	movff	plusw2,plusw0
 20012  005BCA  06E8               	decf	wreg,f,c
 20013  005BCC  E2FC               	bc	u20651
 20014  005BCE  ECB5  F033         	call	_MSTickGetDiffNow	;wreg free
 20015  005BD2  517C               	movf	?_MSTickGetDiffNow& (0+255),w,b
 20016  005BD4  0102               	movlb	2	; () banked
 20017  005BD6  5D4C               	subwf	_intervalDelay& (0+255),w,b
 20018  005BD8  0100               	movlb	0	; () banked
 20019  005BDA  517D               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 20020  005BDC  0102               	movlb	2	; () banked
 20021  005BDE  594D               	subwfb	(_intervalDelay+1)& (0+255),w,b
 20022  005BE0  0100               	movlb	0	; () banked
 20023  005BE2  517E               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 20024  005BE4  0102               	movlb	2	; () banked
 20025  005BE6  594E               	subwfb	(_intervalDelay+2)& (0+255),w,b
 20026  005BE8  0100               	movlb	0	; () banked
 20027  005BEA  517F               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 20028  005BEC  0102               	movlb	2	; () banked
 20029  005BEE  594F               	subwfb	(_intervalDelay+3)& (0+255),w,b
 20030  005BF0  B0D8               	btfsc	status,0,c
 20031  005BF2  0012               	return	
 20032                           
 20033                           ; BSR set to: 2
 20034                           ;BeaconManager.c: 71: {
 20035                           ;BeaconManager.c: 74: networkSendBeacon();
 20036  005BF4  EC4A  F01B         	call	_networkSendBeacon	;wreg free
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;BeaconManager.c: 75: netDecayInterval();
 20040  005BF8  EC55  F03B         	call	_netDecayInterval	;wreg free
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;BeaconManager.c: 76: tInterval=MSTickGet();
 20044  005BFC  EC70  F03B         	call	_MSTickGet	;wreg free
 20045  005C00  EE22  F014         	lfsr	2,_tInterval
 20046  005C04  0E07               	movlw	7
 20047  005C06                     u20671:
 20048  005C06  CFEB FFDB          	movff	plusw0,plusw2
 20049  005C0A  06E8               	decf	wreg,f,c
 20050  005C0C  E2FC               	bc	u20671
 20051                           
 20052                           ; BSR set to: 0
 20053                           ;BeaconManager.c: 77: BMState=BM_WaitInitial;
 20054  005C0E  0E02               	movlw	2
 20055  005C10  6E3F               	movwf	_BMState,c
 20056  005C12  0C02               	retlw	2
 20057  005C14                     l13707:
 20058  005C14  503F               	movf	_BMState,w,c
 20059                           
 20060                           ; Switch size 1, requested type "speed"
 20061                           ; Number of cases is 4, Range of values is 0 to 3
 20062                           ; switch strategies available:
 20063                           ; Name         Instructions Cycles
 20064                           ; simple_byte           13     7 (average)
 20065                           ;	Chosen strategy is simple_byte
 20066  005C16  E098               	bz	l13683
 20067  005C18  0A01               	xorlw	1	; case 1
 20068  005C1A  B4D8               	btfsc	status,2,c
 20069  005C1C  0012               	return	
 20070  005C1E  0A03               	xorlw	3	; case 2
 20071  005C20  E096               	bz	l13685
 20072  005C22  0A01               	xorlw	1	; case 3
 20073  005C24  E0CB               	bz	l13695
 20074  005C26  0012               	return		;funcret
 20075  005C28                     __end_of_BeaconManagerTask:
 20076                           	opt stack 0
 20077                           tblptru	equ	0xFF8
 20078                           tblptrh	equ	0xFF7
 20079                           tblptrl	equ	0xFF6
 20080                           tablat	equ	0xFF5
 20081                           prodh	equ	0xFF4
 20082                           prodl	equ	0xFF3
 20083                           postinc0	equ	0xFEE
 20084                           plusw0	equ	0xFEB
 20085                           fsr0h	equ	0xFEA
 20086                           fsr0l	equ	0xFE9
 20087                           wreg	equ	0xFE8
 20088                           indf1	equ	0xFE7
 20089                           postinc1	equ	0xFE6
 20090                           postdec1	equ	0xFE5
 20091                           plusw1	equ	0xFE3
 20092                           fsr1h	equ	0xFE2
 20093                           fsr1l	equ	0xFE1
 20094                           indf2	equ	0xFDF
 20095                           postinc2	equ	0xFDE
 20096                           postdec2	equ	0xFDD
 20097                           plusw2	equ	0xFDB
 20098                           fsr2h	equ	0xFDA
 20099                           fsr2l	equ	0xFD9
 20100                           status	equ	0xFD8
 20101                           
 20102 ;; *************** function _networkSendBeacon *****************
 20103 ;; Defined at:
 20104 ;;		line 86 in file "../BeaconManager.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;		None
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;  parent          8    0        struct addr_t_def
 20109 ;;  hdr             2   84[BANK0 ] PTR struct net_routing_h
 20110 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(84), 
 20111 ;;  r               2   82[BANK0 ] PTR struct route_info_t_
 20112 ;;		 -> routeInfo(13), 
 20113 ;;  bt              2   80[BANK0 ] unsigned int 
 20114 ;;  adr             2   78[BANK0 ] PTR struct addr_t_def
 20115 ;;		 -> MyAddress(8), 
 20116 ;;  last            2   76[BANK0 ] PTR unsigned char 
 20117 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(84), 
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  1    wreg      void 
 20120 ;; Registers used:
 20121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20122 ;; Tracked objects:
 20123 ;;		On entry : F/2
 20124 ;;		On exit  : F/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20128 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20129 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20130 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20131 ;;Total ram usage:       16 bytes
 20132 ;; Hardware stack levels used:    1
 20133 ;; Hardware stack levels required when called:   11
 20134 ;; This function calls:
 20135 ;;		_LEAppendNeighborInfo
 20136 ;;		_LELinkQualityGet
 20137 ;;		_NetworkAddressSizeGet
 20138 ;;		_NetworkGetDeviceType
 20139 ;;		_NetworkGetMyRouteInfo
 20140 ;;		_NetworkGetPANID
 20141 ;;		_NetworkHasRoute
 20142 ;;		_NetworkManagerGetMyAddress
 20143 ;;		_isInvalidAddress
 20144 ;;		_isNetworkSecurityEnabled
 20145 ;;		_memcpy
 20146 ;;		_memset
 20147 ;;		_radioBroadcast
 20148 ;; This function is called by:
 20149 ;;		_BeaconManagerTask
 20150 ;; This function uses a non-reentrant model
 20151 ;;
 20152                           
 20153                           	psect	text74
 20154  003694                     __ptext74:
 20155                           	opt stack 0
 20156  003694                     _networkSendBeacon:
 20157                           	opt stack 15
 20158                           
 20159                           ; BSR set to: 2
 20160                           ;BeaconManager.c: 88: net_routing_header_t *hdr;
 20161                           ;BeaconManager.c: 89: route_info_t *r=NetworkGetMyRouteInfo();
 20162                           
 20163                           ;incstack = 0
 20164  003694  ECF1  F03D         	call	_NetworkGetMyRouteInfo	;wreg free
 20165  003698  C060  F0B2         	movff	?_NetworkGetMyRouteInfo,networkSendBeacon@r
 20166  00369C  C061  F0B3         	movff	?_NetworkGetMyRouteInfo+1,networkSendBeacon@r+1
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;BeaconManager.c: 90: uint8_t* last;
 20170                           ;BeaconManager.c: 91: addr_t parent;
 20171                           ;BeaconManager.c: 93: memset(&beaconMessageBuffer,0x00,sizeof(beaconMessageBuffer));
 20172  0036A0  0E00               	movlw	low _beaconMessageBuffer
 20173  0036A2  6F60               	movwf	memset@p1& (0+255),b
 20174  0036A4  0E07               	movlw	high _beaconMessageBuffer
 20175  0036A6  6F61               	movwf	(memset@p1+1)& (0+255),b
 20176  0036A8  6B63               	clrf	(memset@c+1)& (0+255),b
 20177  0036AA  6B62               	clrf	memset@c& (0+255),b
 20178  0036AC  6B65               	clrf	(memset@n+1)& (0+255),b
 20179  0036AE  0E54               	movlw	84
 20180  0036B0  6F64               	movwf	memset@n& (0+255),b
 20181  0036B2  EC61  F03C         	call	_memset	;wreg free
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;BeaconManager.c: 95: hdr=(net_routing_header_t*)beaconMessageBuffer.data;
 20185  0036B6  0E00               	movlw	low _beaconMessageBuffer
 20186  0036B8  6FB4               	movwf	networkSendBeacon@hdr& (0+255),b
 20187  0036BA  0E07               	movlw	high _beaconMessageBuffer
 20188  0036BC  6FB5               	movwf	(networkSendBeacon@hdr+1)& (0+255),b
 20189                           
 20190                           ;BeaconManager.c: 96: hdr->packettype=PacketRouting;
 20191  0036BE  EE20 F002          	lfsr	2,2
 20192  0036C2  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20193  0036C4  26D9               	addwf	fsr2l,f,c
 20194  0036C6  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20195  0036C8  22DA               	addwfc	fsr2h,f,c
 20196  0036CA  0E22               	movlw	34
 20197  0036CC  6EDF               	movwf	indf2,c
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;BeaconManager.c: 97: hdr->options.deviceType=NetworkGetDeviceType();
 20201  0036CE  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 20202  0036D2  0100               	movlb	0	; () banked
 20203  0036D4  6FA6               	movwf	??_networkSendBeacon& (0+255),b
 20204  0036D6  EE20 F003          	lfsr	2,3
 20205  0036DA  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20206  0036DC  26D9               	addwf	fsr2l,f,c
 20207  0036DE  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20208  0036E0  22DA               	addwfc	fsr2h,f,c
 20209  0036E2  50DF               	movf	223,w,c
 20210  0036E4  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20211  0036E6  0BF8               	andlw	-8
 20212  0036E8  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20213  0036EA  6EDF               	movwf	223,c
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;BeaconManager.c: 98: hdr->options.hasroute=NetworkHasRoute();
 20217  0036EC  EC7A  F03A         	call	_NetworkHasRoute	;wreg free
 20218  0036F0  6FA6               	movwf	??_networkSendBeacon& (0+255),b
 20219  0036F2  EE20 F003          	lfsr	2,3
 20220  0036F6  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20221  0036F8  26D9               	addwf	fsr2l,f,c
 20222  0036FA  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20223  0036FC  22DA               	addwfc	fsr2h,f,c
 20224  0036FE  47A6               	rlncf	??_networkSendBeacon& (0+255),f,b
 20225  003700  47A6               	rlncf	??_networkSendBeacon& (0+255),f,b
 20226  003702  47A6               	rlncf	??_networkSendBeacon& (0+255),f,b
 20227  003704  50DF               	movf	223,w,c
 20228  003706  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20229  003708  0BF7               	andlw	-9
 20230  00370A  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20231  00370C  6EDF               	movwf	223,c
 20232                           
 20233                           ; BSR set to: 0
 20234                           ;BeaconManager.c: 99: hdr->options.congested=r->congested;
 20235  00370E  EE20 F00B          	lfsr	2,11
 20236  003712  51B2               	movf	networkSendBeacon@r& (0+255),w,b
 20237  003714  26D9               	addwf	fsr2l,f,c
 20238  003716  51B3               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20239  003718  22DA               	addwfc	fsr2h,f,c
 20240  00371A  50DF               	movf	indf2,w,c
 20241  00371C  6FA6               	movwf	??_networkSendBeacon& (0+255),b
 20242  00371E  EE20 F003          	lfsr	2,3
 20243  003722  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20244  003724  26D9               	addwf	fsr2l,f,c
 20245  003726  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20246  003728  22DA               	addwfc	fsr2h,f,c
 20247  00372A  3BA6               	swapf	??_networkSendBeacon& (0+255),f,b
 20248  00372C  50DF               	movf	223,w,c
 20249  00372E  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20250  003730  0BEF               	andlw	-17
 20251  003732  19A6               	xorwf	??_networkSendBeacon& (0+255),w,b
 20252  003734  6EDF               	movwf	223,c
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;BeaconManager.c: 100: hdr->sequenceNumber=netSequenceNumber++;
 20256  003736  EE20 F001          	lfsr	2,1
 20257  00373A  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20258  00373C  26D9               	addwf	fsr2l,f,c
 20259  00373E  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20260  003740  22DA               	addwfc	fsr2h,f,c
 20261  003742  C04A  FFDF         	movff	_netSequenceNumber,indf2
 20262                           
 20263                           ; BSR set to: 0
 20264  003746  2A4A               	incf	_netSequenceNumber,f,c
 20265                           
 20266                           ; BSR set to: 0
 20267                           ;BeaconManager.c: 101: memcpy(hdr->parent.bytes,r->parent.bytes,NetworkAddressSizeGet())
      +                          ;
 20268  003748  0E04               	movlw	4
 20269  00374A  25B4               	addwf	networkSendBeacon@hdr& (0+255),w,b
 20270  00374C  6F62               	movwf	memcpy@d1& (0+255),b
 20271  00374E  0E00               	movlw	0
 20272  003750  21B5               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 20273  003752  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 20274  003754  C0B2  F064         	movff	networkSendBeacon@r,memcpy@s1
 20275  003758  C0B3  F065         	movff	networkSendBeacon@r+1,memcpy@s1+1
 20276  00375C  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 20277  003760  6F66               	movwf	memcpy@n& (0+255),b
 20278  003762  6B67               	clrf	(memcpy@n+1)& (0+255),b
 20279  003764  ECFA  F03A         	call	_memcpy	;wreg free
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;BeaconManager.c: 103: if(NetworkGetDeviceType()==DeviceCoordinator)
 20283  003768  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 20284  00376C  0900               	iorlw	0
 20285  00376E  E112               	bnz	l13145
 20286                           
 20287                           ;BeaconManager.c: 104: {
 20288                           ;BeaconManager.c: 105: hdr->etx=r->etx;
 20289  003770  0100               	movlb	0	; () banked
 20290  003772  EE20 F008          	lfsr	2,8
 20291  003776  51B2               	movf	networkSendBeacon@r& (0+255),w,b
 20292  003778  26D9               	addwf	fsr2l,f,c
 20293  00377A  51B3               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20294  00377C  22DA               	addwfc	fsr2h,f,c
 20295  00377E  EE10 F00C          	lfsr	1,12
 20296  003782  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20297  003784  26E1               	addwf	fsr1l,f,c
 20298  003786  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20299  003788  22E2               	addwfc	fsr1h,f,c
 20300  00378A  CFDE FFE6          	movff	postinc2,postinc1
 20301  00378E  CFDD FFE5          	movff	postdec2,postdec1
 20302                           
 20303                           ;BeaconManager.c: 106: }else if(isInvalidAddress(r->parent))
 20304  003792  D040               	goto	l13151
 20305  003794                     l13145:
 20306  003794  C0B2  FFD9         	movff	networkSendBeacon@r,fsr2l
 20307  003798  C0B3  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 20308  00379C  EE00  F079         	lfsr	0,isInvalidAddress@address
 20309  0037A0  0E07               	movlw	7
 20310  0037A2                     u19381:
 20311  0037A2  CFDB FFEB          	movff	plusw2,plusw0
 20312  0037A6  06E8               	decf	wreg,f,c
 20313  0037A8  E2FC               	bc	u19381
 20314  0037AA  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 20315  0037AE  0900               	iorlw	0
 20316  0037B0  E010               	bz	l13149
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;BeaconManager.c: 107: {
 20320                           ;BeaconManager.c: 108: hdr->etx=0xffff;
 20321  0037B2  EE20 F00C          	lfsr	2,12
 20322  0037B6  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20323  0037B8  26D9               	addwf	fsr2l,f,c
 20324  0037BA  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20325  0037BC  22DA               	addwfc	fsr2h,f,c
 20326  0037BE  68DE               	setf	postinc2,c
 20327  0037C0  68DD               	setf	postdec2,c
 20328                           
 20329                           ;BeaconManager.c: 109: hdr->options.pull=1;
 20330  0037C2  EE20 F003          	lfsr	2,3
 20331  0037C6  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20332  0037C8  26D9               	addwf	fsr2l,f,c
 20333  0037CA  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20334  0037CC  22DA               	addwfc	fsr2h,f,c
 20335  0037CE  8ADF               	bsf	indf2,5,c
 20336                           
 20337                           ;BeaconManager.c: 110: }else
 20338  0037D0  D021               	goto	l13151
 20339  0037D2                     l13149:
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;BeaconManager.c: 111: {
 20343                           ;BeaconManager.c: 112: hdr->etx=LELinkQualityGet(r->parent,r->etx);
 20344  0037D2  C0B2  FFD9         	movff	networkSendBeacon@r,fsr2l
 20345  0037D6  C0B3  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 20346  0037DA  EE00  F08A         	lfsr	0,LELinkQualityGet@address
 20347  0037DE  0E07               	movlw	7
 20348  0037E0                     u19401:
 20349  0037E0  CFDB FFEB          	movff	plusw2,plusw0
 20350  0037E4  06E8               	decf	wreg,f,c
 20351  0037E6  E2FC               	bc	u19401
 20352  0037E8  EE20 F008          	lfsr	2,8
 20353  0037EC  51B2               	movf	networkSendBeacon@r& (0+255),w,b
 20354  0037EE  26D9               	addwf	fsr2l,f,c
 20355  0037F0  51B3               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 20356  0037F2  22DA               	addwfc	fsr2h,f,c
 20357  0037F4  CFDE F092          	movff	postinc2,LELinkQualityGet@offset
 20358  0037F8  CFDD F093          	movff	postdec2,LELinkQualityGet@offset+1
 20359  0037FC  ECE6  F034         	call	_LELinkQualityGet	;wreg free
 20360  003800  EE20 F00C          	lfsr	2,12
 20361  003804  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20362  003806  26D9               	addwf	fsr2l,f,c
 20363  003808  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20364  00380A  22DA               	addwfc	fsr2h,f,c
 20365  00380C  C08A  FFDE         	movff	?_LELinkQualityGet,postinc2
 20366  003810  C08B  FFDD         	movff	?_LELinkQualityGet+1,postdec2
 20367  003814                     l13151:
 20368                           
 20369                           ; BSR set to: 0
 20370                           ;BeaconManager.c: 113: }
 20371                           ;BeaconManager.c: 115: uint16_t bt;
 20372                           ;BeaconManager.c: 116: addr_t *adr=NetworkManagerGetMyAddress();
 20373  003814  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
 20374  003818  C060  F0AE         	movff	?_NetworkManagerGetMyAddress,networkSendBeacon@adr
 20375  00381C  C061  F0AF         	movff	?_NetworkManagerGetMyAddress+1,networkSendBeacon@adr+1
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;BeaconManager.c: 117: memcpy(&bt,adr->bytes,2);
 20379  003820  0EB0               	movlw	low networkSendBeacon@bt
 20380  003822  6F62               	movwf	memcpy@d1& (0+255),b
 20381  003824  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 20382  003826  C0AE  F064         	movff	networkSendBeacon@adr,memcpy@s1
 20383  00382A  C0AF  F065         	movff	networkSendBeacon@adr+1,memcpy@s1+1
 20384  00382E  6B67               	clrf	(memcpy@n+1)& (0+255),b
 20385  003830  0E02               	movlw	2
 20386  003832  6F66               	movwf	memcpy@n& (0+255),b
 20387  003834  ECFA  F03A         	call	_memcpy	;wreg free
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;BeaconManager.c: 118: hdr->etx=hdr->etx ^ ( ((uint16_t)(~bt)) + (uint16_t)0x3497 );
 20391  003838  EE20 F00C          	lfsr	2,12
 20392  00383C  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20393  00383E  26D9               	addwf	fsr2l,f,c
 20394  003840  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20395  003842  22DA               	addwfc	fsr2h,f,c
 20396  003844  CFDE F0A6          	movff	postinc2,??_networkSendBeacon
 20397  003848  CFDD F0A7          	movff	postdec2,??_networkSendBeacon+1
 20398  00384C  0E97               	movlw	151
 20399  00384E  6FA8               	movwf	(??_networkSendBeacon+2)& (0+255),b
 20400  003850  0E34               	movlw	52
 20401  003852  6FA9               	movwf	(??_networkSendBeacon+3)& (0+255),b
 20402  003854  1DB0               	comf	networkSendBeacon@bt& (0+255),w,b
 20403  003856  6FAA               	movwf	(??_networkSendBeacon+4)& (0+255),b
 20404  003858  1DB1               	comf	(networkSendBeacon@bt+1)& (0+255),w,b
 20405  00385A  6FAB               	movwf	(??_networkSendBeacon+5)& (0+255),b
 20406  00385C  51A8               	movf	(??_networkSendBeacon+2)& (0+255),w,b
 20407  00385E  27AA               	addwf	(??_networkSendBeacon+4)& (0+255),f,b
 20408  003860  51A9               	movf	(??_networkSendBeacon+3)& (0+255),w,b
 20409  003862  23AB               	addwfc	(??_networkSendBeacon+5)& (0+255),f,b
 20410  003864  51A6               	movf	??_networkSendBeacon& (0+255),w,b
 20411  003866  1BAA               	xorwf	(??_networkSendBeacon+4)& (0+255),f,b
 20412  003868  51A7               	movf	(??_networkSendBeacon+1)& (0+255),w,b
 20413  00386A  1BAB               	xorwf	(??_networkSendBeacon+5)& (0+255),f,b
 20414  00386C  EE20 F00C          	lfsr	2,12
 20415  003870  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20416  003872  26D9               	addwf	fsr2l,f,c
 20417  003874  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20418  003876  22DA               	addwfc	fsr2h,f,c
 20419  003878  C0AA  FFDE         	movff	??_networkSendBeacon+4,postinc2
 20420  00387C  C0AB  FFDD         	movff	??_networkSendBeacon+5,postdec2
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;BeaconManager.c: 120: last=LEAppendNeighborInfo((uint8_t*)&hdr->lnk_header,64-(uint32_t
      +                          )((uint8_t*)hdr-(uint8_t*)beaconMessageBuffer.data)-sizeof(net_routing_header_t)-14);
 20424  003880  0E0E               	movlw	14
 20425  003882  25B4               	addwf	networkSendBeacon@hdr& (0+255),w,b
 20426  003884  6F71               	movwf	LEAppendNeighborInfo@data& (0+255),b
 20427  003886  0E00               	movlw	0
 20428  003888  21B5               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 20429  00388A  6F72               	movwf	(LEAppendNeighborInfo@data+1)& (0+255),b
 20430  00388C  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20431  00388E  0822               	sublw	low (_beaconMessageBuffer+34)
 20432  003890  6F73               	movwf	LEAppendNeighborInfo@size& (0+255),b
 20433  003892  51B5               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 20434  003894  A0D8               	btfss	status,0,c
 20435  003896  2AE8               	incf	wreg,f,c
 20436  003898  0807               	sublw	high (_beaconMessageBuffer+34)
 20437  00389A  6F74               	movwf	(LEAppendNeighborInfo@size+1)& (0+255),b
 20438  00389C  EC01  F024         	call	_LEAppendNeighborInfo	;wreg free
 20439  0038A0  C071  F0AC         	movff	?_LEAppendNeighborInfo,networkSendBeacon@last
 20440  0038A4  C072  F0AD         	movff	?_LEAppendNeighborInfo+1,networkSendBeacon@last+1
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;BeaconManager.c: 122: radioBroadcast(beaconMessageBuffer.data,(uint16_t)(last-(uint8_t*
      +                          )hdr),NetworkGetPANID(),isNetworkSecurityEnabled());
 20444  0038A8  0E00               	movlw	low _beaconMessageBuffer
 20445  0038AA  6F9F               	movwf	radioBroadcast@data& (0+255),b
 20446  0038AC  0E07               	movlw	high _beaconMessageBuffer
 20447  0038AE  6FA0               	movwf	(radioBroadcast@data+1)& (0+255),b
 20448  0038B0  51B4               	movf	networkSendBeacon@hdr& (0+255),w,b
 20449  0038B2  5DAC               	subwf	networkSendBeacon@last& (0+255),w,b
 20450  0038B4  6FA1               	movwf	radioBroadcast@datasize& (0+255),b
 20451  0038B6  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 20452  0038BA  C060  F0A2         	movff	?_NetworkGetPANID,radioBroadcast@PANID
 20453  0038BE  C061  F0A3         	movff	?_NetworkGetPANID+1,radioBroadcast@PANID+1
 20454  0038C2  EC48  F03E         	call	_isNetworkSecurityEnabled	;wreg free
 20455  0038C6  0100               	movlb	0	; () banked
 20456  0038C8  6FA4               	movwf	radioBroadcast@isSecure& (0+255),b
 20457  0038CA  EF85  F037         	goto	_radioBroadcast	;wreg free
 20458  0038CE                     __end_of_networkSendBeacon:
 20459                           	opt stack 0
 20460                           tblptru	equ	0xFF8
 20461                           tblptrh	equ	0xFF7
 20462                           tblptrl	equ	0xFF6
 20463                           tablat	equ	0xFF5
 20464                           prodh	equ	0xFF4
 20465                           prodl	equ	0xFF3
 20466                           postinc0	equ	0xFEE
 20467                           plusw0	equ	0xFEB
 20468                           fsr0h	equ	0xFEA
 20469                           fsr0l	equ	0xFE9
 20470                           wreg	equ	0xFE8
 20471                           indf1	equ	0xFE7
 20472                           postinc1	equ	0xFE6
 20473                           postdec1	equ	0xFE5
 20474                           plusw1	equ	0xFE3
 20475                           fsr1h	equ	0xFE2
 20476                           fsr1l	equ	0xFE1
 20477                           indf2	equ	0xFDF
 20478                           postinc2	equ	0xFDE
 20479                           postdec2	equ	0xFDD
 20480                           plusw2	equ	0xFDB
 20481                           fsr2h	equ	0xFDA
 20482                           fsr2l	equ	0xFD9
 20483                           status	equ	0xFD8
 20484                           
 20485 ;; *************** function _radioBroadcast *****************
 20486 ;; Defined at:
 20487 ;;		line 110 in file "../src/Bridge.c"
 20488 ;; Parameters:    Size  Location     Type
 20489 ;;  data            2   63[BANK0 ] PTR unsigned char 
 20490 ;;		 -> RbcQ(444), beaconMessageBuffer(84), 
 20491 ;;  datasize        1   65[BANK0 ] unsigned char 
 20492 ;;  PANID           2   66[BANK0 ] unsigned int 
 20493 ;;  isSecure        1   68[BANK0 ] unsigned char 
 20494 ;; Auto vars:     Size  Location     Type
 20495 ;;  i               1   69[BANK0 ] unsigned char 
 20496 ;; Return value:  Size  Location     Type
 20497 ;;                  1    wreg      unsigned char 
 20498 ;; Registers used:
 20499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20500 ;; Tracked objects:
 20501 ;;		On entry : F/0
 20502 ;;		On exit  : F/0
 20503 ;;		Unchanged: 0/0
 20504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20505 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20508 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20509 ;;Total ram usage:        7 bytes
 20510 ;; Hardware stack levels used:    1
 20511 ;; Hardware stack levels required when called:   10
 20512 ;; This function calls:
 20513 ;;		_SendPacket
 20514 ;;		_memset
 20515 ;; This function is called by:
 20516 ;;		_networkSendBeacon
 20517 ;;		_BroadcastManagerTask
 20518 ;; This function uses a non-reentrant model
 20519 ;;
 20520                           
 20521                           	psect	text75
 20522  006F0A                     __ptext75:
 20523                           	opt stack 0
 20524  006F0A                     _radioBroadcast:
 20525                           	opt stack 16
 20526                           
 20527                           ; BSR set to: 0
 20528                           ;Bridge.c: 112: static addr_t addr;
 20529                           ;Bridge.c: 113: uint8_t i;
 20530                           ;Bridge.c: 120: memset(addr.bytes,0xff,sizeof(addr));
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;incstack = 0
 20534  006F0A  0ECD               	movlw	low radioBroadcast@addr
 20535  006F0C  6F60               	movwf	memset@p1& (0+255),b
 20536  006F0E  0E02               	movlw	high radioBroadcast@addr
 20537  006F10  6F61               	movwf	(memset@p1+1)& (0+255),b
 20538  006F12  6B63               	clrf	(memset@c+1)& (0+255),b
 20539  006F14  6962               	setf	memset@c& (0+255),b
 20540  006F16  6B65               	clrf	(memset@n+1)& (0+255),b
 20541  006F18  0E08               	movlw	8
 20542  006F1A  6F64               	movwf	memset@n& (0+255),b
 20543  006F1C  EC61  F03C         	call	_memset	;wreg free
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;Bridge.c: 121: TxIndex=0;
 20547  006F20  6A46               	clrf	_TxIndex,c
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;Bridge.c: 122: for(i=0;i<datasize;i++)
 20551  006F22  6BA5               	clrf	radioBroadcast@i& (0+255),b
 20552  006F24  D010               	goto	l12541
 20553  006F26                     l12535:
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;Bridge.c: 123: {
 20557                           ;Bridge.c: 124: TxBuff[TxIndex++]=data[i];
 20558  006F26  51A5               	movf	radioBroadcast@i& (0+255),w,b
 20559  006F28  259F               	addwf	radioBroadcast@data& (0+255),w,b
 20560  006F2A  6ED9               	movwf	fsr2l,c
 20561  006F2C  0E00               	movlw	0
 20562  006F2E  21A0               	addwfc	(radioBroadcast@data+1)& (0+255),w,b
 20563  006F30  6EDA               	movwf	fsr2h,c
 20564  006F32  0E98               	movlw	low _TxBuff
 20565  006F34  2446               	addwf	_TxIndex,w,c
 20566  006F36  6EE1               	movwf	fsr1l,c
 20567  006F38  6AE2               	clrf	fsr1h,c
 20568  006F3A  0E05               	movlw	high _TxBuff
 20569  006F3C  22E2               	addwfc	fsr1h,f,c
 20570  006F3E  CFDF FFE7          	movff	indf2,indf1
 20571                           
 20572                           ; BSR set to: 0
 20573  006F42  2A46               	incf	_TxIndex,f,c
 20574                           
 20575                           ; BSR set to: 0
 20576  006F44  2BA5               	incf	radioBroadcast@i& (0+255),f,b
 20577  006F46                     l12541:
 20578                           
 20579                           ; BSR set to: 0
 20580  006F46  51A1               	movf	radioBroadcast@datasize& (0+255),w,b
 20581  006F48  5DA5               	subwf	radioBroadcast@i& (0+255),w,b
 20582  006F4A  E3ED               	bnc	l12535
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;Bridge.c: 125: }
 20586                           ;Bridge.c: 126: return SendPacket(1,addr.bytes,PANID,0,isSecure);
 20587                           ;	Return value of _radioBroadcast is never used
 20588  006F4C  0ECD               	movlw	low radioBroadcast@addr
 20589  006F4E  6F8F               	movwf	SendPacket@DestinationAddress& (0+255),b
 20590  006F50  0E02               	movlw	high radioBroadcast@addr
 20591  006F52  6F90               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 20592  006F54  C0A2  F091         	movff	radioBroadcast@PANID,SendPacket@destinationPANID
 20593  006F58  C0A3  F092         	movff	radioBroadcast@PANID+1,SendPacket@destinationPANID+1
 20594  006F5C  6B93               	clrf	SendPacket@isCommand& (0+255),b
 20595  006F5E  C0A4  F094         	movff	radioBroadcast@isSecure,SendPacket@SecurityEnabled
 20596  006F62  0E01               	movlw	1
 20597  006F64  EF34  F031         	goto	_SendPacket
 20598  006F68                     __end_of_radioBroadcast:
 20599                           	opt stack 0
 20600                           tblptru	equ	0xFF8
 20601                           tblptrh	equ	0xFF7
 20602                           tblptrl	equ	0xFF6
 20603                           tablat	equ	0xFF5
 20604                           prodh	equ	0xFF4
 20605                           prodl	equ	0xFF3
 20606                           postinc0	equ	0xFEE
 20607                           plusw0	equ	0xFEB
 20608                           fsr0h	equ	0xFEA
 20609                           fsr0l	equ	0xFE9
 20610                           wreg	equ	0xFE8
 20611                           indf1	equ	0xFE7
 20612                           postinc1	equ	0xFE6
 20613                           postdec1	equ	0xFE5
 20614                           plusw1	equ	0xFE3
 20615                           fsr1h	equ	0xFE2
 20616                           fsr1l	equ	0xFE1
 20617                           indf2	equ	0xFDF
 20618                           postinc2	equ	0xFDE
 20619                           postdec2	equ	0xFDD
 20620                           plusw2	equ	0xFDB
 20621                           fsr2h	equ	0xFDA
 20622                           fsr2l	equ	0xFD9
 20623                           status	equ	0xFD8
 20624                           
 20625 ;; *************** function _LELinkQualityGet *****************
 20626 ;; Defined at:
 20627 ;;		line 70 in file "../LinkEstimator.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;  address         8   42[BANK0 ] struct addr_t_def
 20630 ;;  offset          2   50[BANK0 ] unsigned int 
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;  res             2   54[BANK0 ] unsigned int 
 20633 ;;  idx             1   56[BANK0 ] unsigned char 
 20634 ;; Return value:  Size  Location     Type
 20635 ;;                  2   42[BANK0 ] unsigned int 
 20636 ;; Registers used:
 20637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20638 ;; Tracked objects:
 20639 ;;		On entry : F/0
 20640 ;;		On exit  : F/0
 20641 ;;		Unchanged: 0/0
 20642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20643 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20644 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20646 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20647 ;;Total ram usage:       15 bytes
 20648 ;; Hardware stack levels used:    1
 20649 ;; Hardware stack levels required when called:    7
 20650 ;; This function calls:
 20651 ;;		_le_findIdx
 20652 ;; This function is called by:
 20653 ;;		_RouteManagerPerformUpdate
 20654 ;;		_routingTableUpdateEntry
 20655 ;;		_networkSendBeacon
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           	psect	text76
 20660  0069CC                     __ptext76:
 20661                           	opt stack 0
 20662  0069CC                     _LELinkQualityGet:
 20663                           	opt stack 18
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;LinkEstimator.c: 72: uint8_t idx;
 20667                           ;LinkEstimator.c: 73: uint16_t res=0xffff;
 20668                           
 20669                           ; BSR set to: 0
 20670                           ;incstack = 0
 20671  0069CC  6996               	setf	LELinkQualityGet@res& (0+255),b
 20672  0069CE  6997               	setf	(LELinkQualityGet@res+1)& (0+255),b
 20673                           
 20674                           ; BSR set to: 0
 20675                           ;LinkEstimator.c: 74: idx = le_findIdx(address);
 20676  0069D0  EE20  F08A         	lfsr	2,LELinkQualityGet@address
 20677  0069D4  EE00  F080         	lfsr	0,le_findIdx@ll_addr
 20678  0069D8  0E07               	movlw	7
 20679  0069DA                     u17981:
 20680  0069DA  CFDB FFEB          	movff	plusw2,plusw0
 20681  0069DE  06E8               	decf	wreg,f,c
 20682  0069E0  E2FC               	bc	u17981
 20683  0069E2  EC63  F036         	call	_le_findIdx	;wreg free
 20684  0069E6  6F98               	movwf	LELinkQualityGet@idx& (0+255),b
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;LinkEstimator.c: 75: if ( (idx != 0xff) && ((neighbor_tbl[idx].flags & 0x2)>0) )
 20688  0069E8  2998               	incf	LELinkQualityGet@idx& (0+255),w,b
 20689  0069EA  E026               	bz	l12589
 20690                           
 20691                           ; BSR set to: 0
 20692  0069EC  5198               	movf	LELinkQualityGet@idx& (0+255),w,b
 20693  0069EE  0D11               	mullw	17
 20694  0069F0  0E55               	movlw	low (_neighbor_tbl+11)
 20695  0069F2  24F3               	addwf	prodl,w,c
 20696  0069F4  6ED9               	movwf	fsr2l,c
 20697  0069F6  0E0D               	movlw	high (_neighbor_tbl+11)
 20698  0069F8  20F4               	addwfc	prodh,w,c
 20699  0069FA  6EDA               	movwf	fsr2h,c
 20700  0069FC  A2DF               	btfss	indf2,1,c
 20701  0069FE  D01C               	goto	l12589
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;LinkEstimator.c: 76: {
 20705                           ;LinkEstimator.c: 77: res=neighbor_tbl[idx].etx;
 20706  006A00  5198               	movf	LELinkQualityGet@idx& (0+255),w,b
 20707  006A02  0D11               	mullw	17
 20708  006A04  0E57               	movlw	low (_neighbor_tbl+13)
 20709  006A06  24F3               	addwf	prodl,w,c
 20710  006A08  6ED9               	movwf	fsr2l,c
 20711  006A0A  0E0D               	movlw	high (_neighbor_tbl+13)
 20712  006A0C  20F4               	addwfc	prodh,w,c
 20713  006A0E  6EDA               	movwf	fsr2h,c
 20714  006A10  CFDE F096          	movff	postinc2,LELinkQualityGet@res
 20715  006A14  CFDD F097          	movff	postdec2,LELinkQualityGet@res+1
 20716                           
 20717                           ; BSR set to: 0
 20718                           ;LinkEstimator.c: 78: if((0xffff-res)<offset)
 20719  006A18  1D96               	comf	LELinkQualityGet@res& (0+255),w,b
 20720  006A1A  6F94               	movwf	??_LELinkQualityGet& (0+255),b
 20721  006A1C  1D97               	comf	(LELinkQualityGet@res+1)& (0+255),w,b
 20722  006A1E  6F95               	movwf	(??_LELinkQualityGet+1)& (0+255),b
 20723  006A20  5192               	movf	LELinkQualityGet@offset& (0+255),w,b
 20724  006A22  5D94               	subwf	??_LELinkQualityGet& (0+255),w,b
 20725  006A24  5193               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 20726  006A26  5995               	subwfb	(??_LELinkQualityGet+1)& (0+255),w,b
 20727  006A28  E203               	bc	l12587
 20728                           
 20729                           ; BSR set to: 0
 20730                           ;LinkEstimator.c: 79: {
 20731                           ;LinkEstimator.c: 80: res=0xffff;
 20732  006A2A  6996               	setf	LELinkQualityGet@res& (0+255),b
 20733  006A2C  6997               	setf	(LELinkQualityGet@res+1)& (0+255),b
 20734                           
 20735                           ;LinkEstimator.c: 81: }else
 20736  006A2E  D004               	goto	l12589
 20737  006A30                     l12587:
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;LinkEstimator.c: 82: {
 20741                           ;LinkEstimator.c: 83: res+=offset;
 20742  006A30  5192               	movf	LELinkQualityGet@offset& (0+255),w,b
 20743  006A32  2796               	addwf	LELinkQualityGet@res& (0+255),f,b
 20744  006A34  5193               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 20745  006A36  2397               	addwfc	(LELinkQualityGet@res+1)& (0+255),f,b
 20746  006A38                     l12589:
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;LinkEstimator.c: 84: }
 20750                           ;LinkEstimator.c: 85: }
 20751                           ;LinkEstimator.c: 86: return(res);
 20752  006A38  C096  F08A         	movff	LELinkQualityGet@res,?_LELinkQualityGet
 20753  006A3C  C097  F08B         	movff	LELinkQualityGet@res+1,?_LELinkQualityGet+1
 20754                           
 20755                           ; BSR set to: 0
 20756  006A40  0012               	return		;funcret
 20757  006A42                     __end_of_LELinkQualityGet:
 20758                           	opt stack 0
 20759                           tblptru	equ	0xFF8
 20760                           tblptrh	equ	0xFF7
 20761                           tblptrl	equ	0xFF6
 20762                           tablat	equ	0xFF5
 20763                           prodh	equ	0xFF4
 20764                           prodl	equ	0xFF3
 20765                           postinc0	equ	0xFEE
 20766                           plusw0	equ	0xFEB
 20767                           fsr0h	equ	0xFEA
 20768                           fsr0l	equ	0xFE9
 20769                           wreg	equ	0xFE8
 20770                           indf1	equ	0xFE7
 20771                           postinc1	equ	0xFE6
 20772                           postdec1	equ	0xFE5
 20773                           plusw1	equ	0xFE3
 20774                           fsr1h	equ	0xFE2
 20775                           fsr1l	equ	0xFE1
 20776                           indf2	equ	0xFDF
 20777                           postinc2	equ	0xFDE
 20778                           postdec2	equ	0xFDD
 20779                           plusw2	equ	0xFDB
 20780                           fsr2h	equ	0xFDA
 20781                           fsr2l	equ	0xFD9
 20782                           status	equ	0xFD8
 20783                           
 20784 ;; *************** function _le_findIdx *****************
 20785 ;; Defined at:
 20786 ;;		line 52 in file "../LinkEstimator.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;  ll_addr         8   32[BANK0 ] struct addr_t_def
 20789 ;; Auto vars:     Size  Location     Type
 20790 ;;  i               1   41[BANK0 ] unsigned char 
 20791 ;;  res             1   40[BANK0 ] unsigned char 
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  1    wreg      unsigned char 
 20794 ;; Registers used:
 20795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : F/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20801 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20804 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20805 ;;Total ram usage:       10 bytes
 20806 ;; Hardware stack levels used:    1
 20807 ;; Hardware stack levels required when called:    6
 20808 ;; This function calls:
 20809 ;;		_isSameAddress
 20810 ;; This function is called by:
 20811 ;;		_GetRouteAddressOfChild
 20812 ;;		_LELinkQualityGet
 20813 ;;		_LE_PinNeighbor
 20814 ;;		_LE_UnpinNeighbor
 20815 ;;		_LE_ClearDLQ
 20816 ;;		_LE_InsertNeighbor
 20817 ;;		_LE_processReceivedMessage
 20818 ;;		_LE_RemoveNeighborDevice
 20819 ;; This function uses a non-reentrant model
 20820 ;;
 20821                           
 20822                           	psect	text77
 20823  006CC6                     __ptext77:
 20824                           	opt stack 0
 20825  006CC6                     _le_findIdx:
 20826                           	opt stack 19
 20827                           
 20828                           ;LinkEstimator.c: 54: uint8_t i;
 20829                           ;LinkEstimator.c: 55: uint8_t res=0xff;
 20830                           
 20831                           ; BSR set to: 0
 20832                           ;incstack = 0
 20833  006CC6  0100               	movlb	0	; () banked
 20834  006CC8  6988               	setf	le_findIdx@res& (0+255),b
 20835                           
 20836                           ;LinkEstimator.c: 56: for (i = 0; i < 20; i++)
 20837  006CCA  6B89               	clrf	le_findIdx@i& (0+255),b
 20838  006CCC                     l12167:
 20839                           
 20840                           ; BSR set to: 0
 20841                           ;LinkEstimator.c: 57: {
 20842                           ;LinkEstimator.c: 58: if (neighbor_tbl[i].flags & 0x1)
 20843  006CCC  5189               	movf	le_findIdx@i& (0+255),w,b
 20844  006CCE  0D11               	mullw	17
 20845  006CD0  0E55               	movlw	low (_neighbor_tbl+11)
 20846  006CD2  24F3               	addwf	prodl,w,c
 20847  006CD4  6ED9               	movwf	fsr2l,c
 20848  006CD6  0E0D               	movlw	high (_neighbor_tbl+11)
 20849  006CD8  20F4               	addwfc	prodh,w,c
 20850  006CDA  6EDA               	movwf	fsr2h,c
 20851  006CDC  A0DF               	btfss	indf2,0,c
 20852  006CDE  D01F               	goto	l12173
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;LinkEstimator.c: 59: {
 20856                           ;LinkEstimator.c: 60: if (isSameAddress(neighbor_tbl[i].ll_addr, ll_addr))
 20857  006CE0  5189               	movf	le_findIdx@i& (0+255),w,b
 20858  006CE2  0D11               	mullw	17
 20859  006CE4  0E4A               	movlw	low _neighbor_tbl
 20860  006CE6  24F3               	addwf	prodl,w,c
 20861  006CE8  6ED9               	movwf	fsr2l,c
 20862  006CEA  0E0D               	movlw	high _neighbor_tbl
 20863  006CEC  20F4               	addwfc	prodh,w,c
 20864  006CEE  6EDA               	movwf	fsr2h,c
 20865  006CF0  EE00  F070         	lfsr	0,isSameAddress@a1
 20866  006CF4  0E07               	movlw	7
 20867  006CF6                     u17221:
 20868  006CF6  CFDB FFEB          	movff	plusw2,plusw0
 20869  006CFA  06E8               	decf	wreg,f,c
 20870  006CFC  E2FC               	bc	u17221
 20871  006CFE  EE20  F080         	lfsr	2,le_findIdx@ll_addr
 20872  006D02  EE00  F078         	lfsr	0,isSameAddress@a2
 20873  006D06  0E07               	movlw	7
 20874  006D08                     u17231:
 20875  006D08  CFDB FFEB          	movff	plusw2,plusw0
 20876  006D0C  06E8               	decf	wreg,f,c
 20877  006D0E  E2FC               	bc	u17231
 20878  006D10  ECC5  F03C         	call	_isSameAddress	;wreg free
 20879  006D14  0900               	iorlw	0
 20880  006D16  E003               	bz	l12173
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;LinkEstimator.c: 61: {
 20884                           ;LinkEstimator.c: 62: res=i;
 20885  006D18  C089  F088         	movff	le_findIdx@i,le_findIdx@res
 20886                           
 20887                           ;LinkEstimator.c: 63: break;
 20888  006D1C  D004               	goto	l12177
 20889  006D1E                     l12173:
 20890                           
 20891                           ; BSR set to: 0
 20892  006D1E  2B89               	incf	le_findIdx@i& (0+255),f,b
 20893                           
 20894                           ; BSR set to: 0
 20895  006D20  0E13               	movlw	19
 20896  006D22  6589               	cpfsgt	le_findIdx@i& (0+255),b
 20897  006D24  D7D3               	goto	l12167
 20898  006D26                     l12177:
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;LinkEstimator.c: 64: }
 20902                           ;LinkEstimator.c: 65: }
 20903                           ;LinkEstimator.c: 66: }
 20904                           ;LinkEstimator.c: 67: return res;
 20905  006D26  5188               	movf	le_findIdx@res& (0+255),w,b
 20906                           
 20907                           ; BSR set to: 0
 20908  006D28  0012               	return		;funcret
 20909  006D2A                     __end_of_le_findIdx:
 20910                           	opt stack 0
 20911                           tblptru	equ	0xFF8
 20912                           tblptrh	equ	0xFF7
 20913                           tblptrl	equ	0xFF6
 20914                           tablat	equ	0xFF5
 20915                           prodh	equ	0xFF4
 20916                           prodl	equ	0xFF3
 20917                           postinc0	equ	0xFEE
 20918                           plusw0	equ	0xFEB
 20919                           fsr0h	equ	0xFEA
 20920                           fsr0l	equ	0xFE9
 20921                           wreg	equ	0xFE8
 20922                           indf1	equ	0xFE7
 20923                           postinc1	equ	0xFE6
 20924                           postdec1	equ	0xFE5
 20925                           plusw1	equ	0xFE3
 20926                           fsr1h	equ	0xFE2
 20927                           fsr1l	equ	0xFE1
 20928                           indf2	equ	0xFDF
 20929                           postinc2	equ	0xFDE
 20930                           postdec2	equ	0xFDD
 20931                           plusw2	equ	0xFDB
 20932                           fsr2h	equ	0xFDA
 20933                           fsr2l	equ	0xFD9
 20934                           status	equ	0xFD8
 20935                           
 20936 ;; *************** function _LEAppendNeighborInfo *****************
 20937 ;; Defined at:
 20938 ;;		line 89 in file "../LinkEstimator.c"
 20939 ;; Parameters:    Size  Location     Type
 20940 ;;  data            2   17[BANK0 ] PTR unsigned char 
 20941 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(84), 
 20942 ;;  size            2   19[BANK0 ] unsigned int 
 20943 ;; Auto vars:     Size  Location     Type
 20944 ;;  k               2   33[BANK0 ] unsigned int 
 20945 ;;  j               2   31[BANK0 ] unsigned int 
 20946 ;;  i               2   29[BANK0 ] unsigned int 
 20947 ;;  count           2   27[BANK0 ] unsigned int 
 20948 ;;  newPrevSentI    2   25[BANK0 ] unsigned int 
 20949 ;;  cnt             2   23[BANK0 ] unsigned int 
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  2   17[BANK0 ] PTR unsigned char 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20954 ;; Tracked objects:
 20955 ;;		On entry : F/0
 20956 ;;		On exit  : F/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20963 ;;Total ram usage:       18 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; Hardware stack levels required when called:    5
 20966 ;; This function calls:
 20967 ;;		_NetworkAddressSizeGet
 20968 ;;		___lwdiv
 20969 ;;		___lwmod
 20970 ;;		_memcpy
 20971 ;; This function is called by:
 20972 ;;		_networkSendBeacon
 20973 ;; This function uses a non-reentrant model
 20974 ;;
 20975                           
 20976                           	psect	text78
 20977  004802                     __ptext78:
 20978                           	opt stack 0
 20979  004802                     _LEAppendNeighborInfo:
 20980                           	opt stack 20
 20981                           
 20982                           ; BSR set to: 0
 20983                           ;LinkEstimator.c: 91: uint16_t i,j,k,cnt;
 20984                           ;LinkEstimator.c: 92: uint16_t count=size/sizeof(neighbor_stat_entry_t);
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;incstack = 0
 20988  004802  C073  F060         	movff	LEAppendNeighborInfo@size,___lwdiv@dividend
 20989  004806  C074  F061         	movff	LEAppendNeighborInfo@size+1,___lwdiv@dividend+1
 20990  00480A  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
 20991  00480C  0E09               	movlw	9
 20992  00480E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 20993  004810  EC87  F039         	call	___lwdiv	;wreg free
 20994  004814  C060  F07B         	movff	?___lwdiv,LEAppendNeighborInfo@count
 20995  004818  C061  F07C         	movff	?___lwdiv+1,LEAppendNeighborInfo@count+1
 20996                           
 20997                           ; BSR set to: 0
 20998                           ;LinkEstimator.c: 93: uint16_t newPrevSentIdx=0;
 20999  00481C  6B79               	clrf	LEAppendNeighborInfo@newPrevSentIdx& (0+255),b
 21000  00481E  6B7A               	clrf	(LEAppendNeighborInfo@newPrevSentIdx+1)& (0+255),b
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;LinkEstimator.c: 94: if(count>5)
 21004  004820  517C               	movf	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 21005  004822  E103               	bnz	u18100
 21006  004824  0E06               	movlw	6
 21007  004826  5D7B               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 21008  004828  E303               	bnc	l1473
 21009  00482A                     u18100:
 21010                           
 21011                           ; BSR set to: 0
 21012                           ;LinkEstimator.c: 95: {
 21013                           ;LinkEstimator.c: 96: count=5;
 21014  00482A  6B7C               	clrf	(LEAppendNeighborInfo@count+1)& (0+255),b
 21015  00482C  0E05               	movlw	5
 21016  00482E  6F7B               	movwf	LEAppendNeighborInfo@count& (0+255),b
 21017  004830                     l1473:
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;LinkEstimator.c: 97: }
 21021                           ;LinkEstimator.c: 98: j=2;
 21022  004830  6B80               	clrf	(LEAppendNeighborInfo@j+1)& (0+255),b
 21023  004832  0E02               	movlw	2
 21024  004834  6F7F               	movwf	LEAppendNeighborInfo@j& (0+255),b
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;LinkEstimator.c: 99: cnt=0;
 21028  004836  6B77               	clrf	LEAppendNeighborInfo@cnt& (0+255),b
 21029  004838  6B78               	clrf	(LEAppendNeighborInfo@cnt+1)& (0+255),b
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;LinkEstimator.c: 100: for(i=0;i<20;i++)
 21033  00483A  6B7D               	clrf	LEAppendNeighborInfo@i& (0+255),b
 21034  00483C  6B7E               	clrf	(LEAppendNeighborInfo@i+1)& (0+255),b
 21035  00483E                     l12653:
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;LinkEstimator.c: 101: {
 21039                           ;LinkEstimator.c: 102: cnt++;
 21040  00483E  4B77               	infsnz	LEAppendNeighborInfo@cnt& (0+255),f,b
 21041  004840  2B78               	incf	(LEAppendNeighborInfo@cnt+1)& (0+255),f,b
 21042                           
 21043                           ; BSR set to: 0
 21044                           ;LinkEstimator.c: 103: k = (prevSentIdx + i + 1) % 20;
 21045  004842  517D               	movf	LEAppendNeighborInfo@i& (0+255),w,b
 21046  004844  0102               	movlb	2	; () banked
 21047  004846  255E               	addwf	_prevSentIdx& (0+255),w,b
 21048  004848  0100               	movlb	0	; () banked
 21049  00484A  6F75               	movwf	??_LEAppendNeighborInfo& (0+255),b
 21050  00484C  517E               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 21051  00484E  0102               	movlb	2	; () banked
 21052  004850  215F               	addwfc	(_prevSentIdx+1)& (0+255),w,b
 21053  004852  0100               	movlb	0	; () banked
 21054  004854  6F76               	movwf	(??_LEAppendNeighborInfo+1)& (0+255),b
 21055  004856  2975               	incf	??_LEAppendNeighborInfo& (0+255),w,b
 21056  004858  6F6C               	movwf	___lwmod@dividend& (0+255),b
 21057  00485A  0E00               	movlw	0
 21058  00485C  2176               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 21059  00485E  6F6D               	movwf	(___lwmod@dividend+1)& (0+255),b
 21060  004860  6B6F               	clrf	(___lwmod@divisor+1)& (0+255),b
 21061  004862  0E14               	movlw	20
 21062  004864  6F6E               	movwf	___lwmod@divisor& (0+255),b
 21063  004866  ECDB  F03A         	call	___lwmod	;wreg free
 21064  00486A  C06C  F081         	movff	?___lwmod,LEAppendNeighborInfo@k
 21065  00486E  C06D  F082         	movff	?___lwmod+1,LEAppendNeighborInfo@k+1
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;LinkEstimator.c: 104: if ((neighbor_tbl[k].flags & 0x1) && (neighbor_tbl[k].flags & 0x2
      +                          ) && (cnt<=count))
 21069  004872  0E11               	movlw	17
 21070  004874  0381               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 21071  004876  CFF3 F075          	movff	prodl,??_LEAppendNeighborInfo
 21072  00487A  CFF4 F076          	movff	prodh,??_LEAppendNeighborInfo+1
 21073  00487E  0382               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 21074  004880  50F3               	movf	prodl,w,c
 21075  004882  2776               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 21076  004884  0E55               	movlw	low (_neighbor_tbl+11)
 21077  004886  2575               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 21078  004888  6ED9               	movwf	fsr2l,c
 21079  00488A  0E0D               	movlw	high (_neighbor_tbl+11)
 21080  00488C  2176               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 21081  00488E  6EDA               	movwf	fsr2h,c
 21082  004890  A0DF               	btfss	indf2,0,c
 21083  004892  D053               	goto	l12673
 21084                           
 21085                           ; BSR set to: 0
 21086  004894  0E11               	movlw	17
 21087  004896  0381               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 21088  004898  CFF3 F075          	movff	prodl,??_LEAppendNeighborInfo
 21089  00489C  CFF4 F076          	movff	prodh,??_LEAppendNeighborInfo+1
 21090  0048A0  0382               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 21091  0048A2  50F3               	movf	prodl,w,c
 21092  0048A4  2776               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 21093  0048A6  0E55               	movlw	low (_neighbor_tbl+11)
 21094  0048A8  2575               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 21095  0048AA  6ED9               	movwf	fsr2l,c
 21096  0048AC  0E0D               	movlw	high (_neighbor_tbl+11)
 21097  0048AE  2176               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 21098  0048B0  6EDA               	movwf	fsr2h,c
 21099  0048B2  A2DF               	btfss	indf2,1,c
 21100  0048B4  D042               	goto	l12673
 21101                           
 21102                           ; BSR set to: 0
 21103  0048B6  5177               	movf	LEAppendNeighborInfo@cnt& (0+255),w,b
 21104  0048B8  5D7B               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 21105  0048BA  5178               	movf	(LEAppendNeighborInfo@cnt+1)& (0+255),w,b
 21106  0048BC  597C               	subwfb	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 21107  0048BE  E33D               	bnc	l12673
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;LinkEstimator.c: 105: {
 21111                           ;LinkEstimator.c: 106: memcpy(&data[j],neighbor_tbl[k].ll_addr.bytes, NetworkAddressSize
      +                          Get());
 21112  0048C0  517F               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 21113  0048C2  2571               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 21114  0048C4  6F62               	movwf	memcpy@d1& (0+255),b
 21115  0048C6  5180               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 21116  0048C8  2172               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 21117  0048CA  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 21118  0048CC  0E11               	movlw	17
 21119  0048CE  0381               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 21120  0048D0  CFF3 F075          	movff	prodl,??_LEAppendNeighborInfo
 21121  0048D4  CFF4 F076          	movff	prodh,??_LEAppendNeighborInfo+1
 21122  0048D8  0382               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 21123  0048DA  50F3               	movf	prodl,w,c
 21124  0048DC  2776               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 21125  0048DE  0E4A               	movlw	low _neighbor_tbl
 21126  0048E0  2575               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 21127  0048E2  6F64               	movwf	memcpy@s1& (0+255),b
 21128  0048E4  0E0D               	movlw	high _neighbor_tbl
 21129  0048E6  2176               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 21130  0048E8  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 21131  0048EA  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 21132  0048EE  6F66               	movwf	memcpy@n& (0+255),b
 21133  0048F0  6B67               	clrf	(memcpy@n+1)& (0+255),b
 21134  0048F2  ECFA  F03A         	call	_memcpy	;wreg free
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;LinkEstimator.c: 107: j+=NetworkAddressSizeGet();
 21138  0048F6  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 21139  0048FA  277F               	addwf	LEAppendNeighborInfo@j& (0+255),f,b
 21140  0048FC  0E00               	movlw	0
 21141  0048FE  2380               	addwfc	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 21142                           
 21143                           ; BSR set to: 0
 21144                           ;LinkEstimator.c: 108: data[j]=neighbor_tbl[k].inquality;
 21145  004900  0E11               	movlw	17
 21146  004902  0381               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 21147  004904  CFF3 F075          	movff	prodl,??_LEAppendNeighborInfo
 21148  004908  CFF4 F076          	movff	prodh,??_LEAppendNeighborInfo+1
 21149  00490C  0382               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 21150  00490E  50F3               	movf	prodl,w,c
 21151  004910  2776               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 21152  004912  0E56               	movlw	low (_neighbor_tbl+12)
 21153  004914  2575               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 21154  004916  6ED9               	movwf	fsr2l,c
 21155  004918  0E0D               	movlw	high (_neighbor_tbl+12)
 21156  00491A  2176               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 21157  00491C  6EDA               	movwf	fsr2h,c
 21158  00491E  517F               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 21159  004920  2571               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 21160  004922  6EE1               	movwf	fsr1l,c
 21161  004924  5180               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 21162  004926  2172               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 21163  004928  6EE2               	movwf	fsr1h,c
 21164  00492A  CFDF FFE7          	movff	indf2,indf1
 21165                           
 21166                           ; BSR set to: 0
 21167                           ;LinkEstimator.c: 109: j+=1;
 21168  00492E  4B7F               	infsnz	LEAppendNeighborInfo@j& (0+255),f,b
 21169  004930  2B80               	incf	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;LinkEstimator.c: 110: newPrevSentIdx = k;
 21173  004932  C081  F079         	movff	LEAppendNeighborInfo@k,LEAppendNeighborInfo@newPrevSentIdx
 21174  004936  C082  F07A         	movff	LEAppendNeighborInfo@k+1,LEAppendNeighborInfo@newPrevSentIdx+1
 21175  00493A                     l12673:
 21176                           
 21177                           ; BSR set to: 0
 21178  00493A  4B7D               	infsnz	LEAppendNeighborInfo@i& (0+255),f,b
 21179  00493C  2B7E               	incf	(LEAppendNeighborInfo@i+1)& (0+255),f,b
 21180  00493E  517E               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 21181  004940  E104               	bnz	u18140
 21182  004942  0E14               	movlw	20
 21183  004944  5D7D               	subwf	LEAppendNeighborInfo@i& (0+255),w,b
 21184  004946  E201 D77A          	bnc	l12653
 21185  00494A                     u18140:
 21186                           
 21187                           ; BSR set to: 0
 21188                           ;LinkEstimator.c: 111: }
 21189                           ;LinkEstimator.c: 112: }
 21190                           ;LinkEstimator.c: 113: prevSentIdx = newPrevSentIdx;
 21191  00494A  C079  F25E         	movff	LEAppendNeighborInfo@newPrevSentIdx,_prevSentIdx
 21192  00494E  C07A  F25F         	movff	LEAppendNeighborInfo@newPrevSentIdx+1,_prevSentIdx+1
 21193                           
 21194                           ; BSR set to: 0
 21195                           ;LinkEstimator.c: 115: data[0]=linkEstSeq++;
 21196  004952  C071  FFD9         	movff	LEAppendNeighborInfo@data,fsr2l
 21197  004956  C072  FFDA         	movff	LEAppendNeighborInfo@data+1,fsr2h
 21198  00495A  C25A  FFDF         	movff	_linkEstSeq,indf2
 21199                           
 21200                           ; BSR set to: 0
 21201  00495E  0102               	movlb	2	; () banked
 21202  004960  4B5A               	infsnz	_linkEstSeq& (0+255),f,b
 21203  004962  2B5B               	incf	(_linkEstSeq+1)& (0+255),f,b
 21204                           
 21205                           ; BSR set to: 2
 21206                           ;LinkEstimator.c: 116: data[1]=k;
 21207  004964  0100               	movlb	0	; () banked
 21208  004966  EE20 F001          	lfsr	2,1
 21209  00496A  5171               	movf	LEAppendNeighborInfo@data& (0+255),w,b
 21210  00496C  26D9               	addwf	fsr2l,f,c
 21211  00496E  5172               	movf	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 21212  004970  22DA               	addwfc	fsr2h,f,c
 21213  004972  C081  FFDF         	movff	LEAppendNeighborInfo@k,indf2
 21214                           
 21215                           ; BSR set to: 0
 21216                           ;LinkEstimator.c: 117: return(&data[j]);
 21217  004976  517F               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 21218  004978  2571               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 21219  00497A  6F71               	movwf	?_LEAppendNeighborInfo& (0+255),b
 21220  00497C  5180               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 21221  00497E  2172               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 21222  004980  6F72               	movwf	(?_LEAppendNeighborInfo+1)& (0+255),b
 21223                           
 21224                           ; BSR set to: 0
 21225  004982  0012               	return		;funcret
 21226  004984                     __end_of_LEAppendNeighborInfo:
 21227                           	opt stack 0
 21228                           tblptru	equ	0xFF8
 21229                           tblptrh	equ	0xFF7
 21230                           tblptrl	equ	0xFF6
 21231                           tablat	equ	0xFF5
 21232                           prodh	equ	0xFF4
 21233                           prodl	equ	0xFF3
 21234                           postinc0	equ	0xFEE
 21235                           plusw0	equ	0xFEB
 21236                           fsr0h	equ	0xFEA
 21237                           fsr0l	equ	0xFE9
 21238                           wreg	equ	0xFE8
 21239                           indf1	equ	0xFE7
 21240                           postinc1	equ	0xFE6
 21241                           postdec1	equ	0xFE5
 21242                           plusw1	equ	0xFE3
 21243                           fsr1h	equ	0xFE2
 21244                           fsr1l	equ	0xFE1
 21245                           indf2	equ	0xFDF
 21246                           postinc2	equ	0xFDE
 21247                           postdec2	equ	0xFDD
 21248                           plusw2	equ	0xFDB
 21249                           fsr2h	equ	0xFDA
 21250                           fsr2l	equ	0xFD9
 21251                           status	equ	0xFD8
 21252                           
 21253 ;; *************** function ___lwmod *****************
 21254 ;; Defined at:
 21255 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 21256 ;; Parameters:    Size  Location     Type
 21257 ;;  dividend        2   12[BANK0 ] unsigned int 
 21258 ;;  divisor         2   14[BANK0 ] unsigned int 
 21259 ;; Auto vars:     Size  Location     Type
 21260 ;;  counter         1   16[BANK0 ] unsigned char 
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  2   12[BANK0 ] unsigned int 
 21263 ;; Registers used:
 21264 ;;		wreg, status,2, status,0
 21265 ;; Tracked objects:
 21266 ;;		On entry : F/0
 21267 ;;		On exit  : F/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21273 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;Total ram usage:        5 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:    4
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_LEAppendNeighborInfo
 21281 ;;		_le_findRandomNeighborIdx
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           	psect	text79
 21286  0075B6                     __ptext79:
 21287                           	opt stack 0
 21288  0075B6                     ___lwmod:
 21289                           	opt stack 21
 21290                           
 21291                           ; BSR set to: 0
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;incstack = 0
 21295  0075B6  516E               	movf	___lwmod@divisor& (0+255),w,b
 21296  0075B8  116F               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21297  0075BA  E017               	bz	l2619
 21298                           
 21299                           ; BSR set to: 0
 21300  0075BC  0E01               	movlw	1
 21301  0075BE  6F70               	movwf	___lwmod@counter& (0+255),b
 21302  0075C0  D004               	goto	l12519
 21303  0075C2                     l12517:
 21304                           
 21305                           ; BSR set to: 0
 21306  0075C2  90D8               	bcf	status,0,c
 21307  0075C4  376E               	rlcf	___lwmod@divisor& (0+255),f,b
 21308  0075C6  376F               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21309  0075C8  2B70               	incf	___lwmod@counter& (0+255),f,b
 21310  0075CA                     l12519:
 21311                           
 21312                           ; BSR set to: 0
 21313  0075CA  AF6F               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21314  0075CC  D7FA               	goto	l12517
 21315  0075CE                     l12521:
 21316                           
 21317                           ; BSR set to: 0
 21318  0075CE  516E               	movf	___lwmod@divisor& (0+255),w,b
 21319  0075D0  5D6C               	subwf	___lwmod@dividend& (0+255),w,b
 21320  0075D2  516F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21321  0075D4  596D               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21322  0075D6  E304               	bnc	l12525
 21323                           
 21324                           ; BSR set to: 0
 21325  0075D8  516E               	movf	___lwmod@divisor& (0+255),w,b
 21326  0075DA  5F6C               	subwf	___lwmod@dividend& (0+255),f,b
 21327  0075DC  516F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21328  0075DE  5B6D               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21329  0075E0                     l12525:
 21330                           
 21331                           ; BSR set to: 0
 21332  0075E0  90D8               	bcf	status,0,c
 21333  0075E2  336F               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21334  0075E4  336E               	rrcf	___lwmod@divisor& (0+255),f,b
 21335                           
 21336                           ; BSR set to: 0
 21337  0075E6  2F70               	decfsz	___lwmod@counter& (0+255),f,b
 21338  0075E8  D7F2               	goto	l12521
 21339  0075EA                     l2619:
 21340                           
 21341                           ; BSR set to: 0
 21342  0075EA  C06C  F06C         	movff	___lwmod@dividend,?___lwmod
 21343  0075EE  C06D  F06D         	movff	___lwmod@dividend+1,?___lwmod+1
 21344                           
 21345                           ; BSR set to: 0
 21346  0075F2  0012               	return		;funcret
 21347  0075F4                     __end_of___lwmod:
 21348                           	opt stack 0
 21349                           tblptru	equ	0xFF8
 21350                           tblptrh	equ	0xFF7
 21351                           tblptrl	equ	0xFF6
 21352                           tablat	equ	0xFF5
 21353                           prodh	equ	0xFF4
 21354                           prodl	equ	0xFF3
 21355                           postinc0	equ	0xFEE
 21356                           plusw0	equ	0xFEB
 21357                           fsr0h	equ	0xFEA
 21358                           fsr0l	equ	0xFE9
 21359                           wreg	equ	0xFE8
 21360                           indf1	equ	0xFE7
 21361                           postinc1	equ	0xFE6
 21362                           postdec1	equ	0xFE5
 21363                           plusw1	equ	0xFE3
 21364                           fsr1h	equ	0xFE2
 21365                           fsr1l	equ	0xFE1
 21366                           indf2	equ	0xFDF
 21367                           postinc2	equ	0xFDE
 21368                           postdec2	equ	0xFDD
 21369                           plusw2	equ	0xFDB
 21370                           fsr2h	equ	0xFDA
 21371                           fsr2l	equ	0xFD9
 21372                           status	equ	0xFD8
 21373                           
 21374 ;; *************** function ___lwdiv *****************
 21375 ;; Defined at:
 21376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;  dividend        2    0[BANK0 ] unsigned int 
 21379 ;;  divisor         2    2[BANK0 ] unsigned int 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;  quotient        2    5[BANK0 ] unsigned int 
 21382 ;;  counter         1    4[BANK0 ] unsigned char 
 21383 ;; Return value:  Size  Location     Type
 21384 ;;                  2    0[BANK0 ] unsigned int 
 21385 ;; Registers used:
 21386 ;;		wreg, status,2, status,0
 21387 ;; Tracked objects:
 21388 ;;		On entry : F/0
 21389 ;;		On exit  : F/0
 21390 ;;		Unchanged: 0/0
 21391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21392 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21393 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21395 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;Total ram usage:        7 bytes
 21397 ;; Hardware stack levels used:    1
 21398 ;; Hardware stack levels required when called:    4
 21399 ;; This function calls:
 21400 ;;		Nothing
 21401 ;; This function is called by:
 21402 ;;		_sprintf
 21403 ;;		_LEAppendNeighborInfo
 21404 ;;		_le_updateETX
 21405 ;;		_le_updateNeighborTableEst
 21406 ;; This function uses a non-reentrant model
 21407 ;;
 21408                           
 21409                           	psect	text80
 21410  00730E                     __ptext80:
 21411                           	opt stack 0
 21412  00730E                     ___lwdiv:
 21413                           	opt stack 25
 21414                           
 21415                           ; BSR set to: 0
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;incstack = 0
 21419  00730E  6B65               	clrf	___lwdiv@quotient& (0+255),b
 21420  007310  6B66               	clrf	(___lwdiv@quotient+1)& (0+255),b
 21421                           
 21422                           ; BSR set to: 0
 21423  007312  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21424  007314  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21425  007316  E01B               	bz	l2609
 21426                           
 21427                           ; BSR set to: 0
 21428  007318  0E01               	movlw	1
 21429  00731A  6F64               	movwf	___lwdiv@counter& (0+255),b
 21430  00731C  D004               	goto	l12279
 21431  00731E                     l12277:
 21432                           
 21433                           ; BSR set to: 0
 21434  00731E  90D8               	bcf	status,0,c
 21435  007320  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21436  007322  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21437  007324  2B64               	incf	___lwdiv@counter& (0+255),f,b
 21438  007326                     l12279:
 21439                           
 21440                           ; BSR set to: 0
 21441  007326  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21442  007328  D7FA               	goto	l12277
 21443  00732A                     l12281:
 21444                           
 21445                           ; BSR set to: 0
 21446  00732A  90D8               	bcf	status,0,c
 21447  00732C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 21448  00732E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21449                           
 21450                           ; BSR set to: 0
 21451  007330  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21452  007332  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21453  007334  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21454  007336  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21455  007338  E305               	bnc	l12289
 21456                           
 21457                           ; BSR set to: 0
 21458  00733A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21459  00733C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21460  00733E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21461  007340  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21462                           
 21463                           ; BSR set to: 0
 21464  007342  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 21465  007344                     l12289:
 21466                           
 21467                           ; BSR set to: 0
 21468  007344  90D8               	bcf	status,0,c
 21469  007346  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21470  007348  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21471                           
 21472                           ; BSR set to: 0
 21473  00734A  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 21474  00734C  D7EE               	goto	l12281
 21475  00734E                     l2609:
 21476                           
 21477                           ; BSR set to: 0
 21478  00734E  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 21479  007352  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21480                           
 21481                           ; BSR set to: 0
 21482  007356  0012               	return		;funcret
 21483  007358                     __end_of___lwdiv:
 21484                           	opt stack 0
 21485                           tblptru	equ	0xFF8
 21486                           tblptrh	equ	0xFF7
 21487                           tblptrl	equ	0xFF6
 21488                           tablat	equ	0xFF5
 21489                           prodh	equ	0xFF4
 21490                           prodl	equ	0xFF3
 21491                           postinc0	equ	0xFEE
 21492                           plusw0	equ	0xFEB
 21493                           fsr0h	equ	0xFEA
 21494                           fsr0l	equ	0xFE9
 21495                           wreg	equ	0xFE8
 21496                           indf1	equ	0xFE7
 21497                           postinc1	equ	0xFE6
 21498                           postdec1	equ	0xFE5
 21499                           plusw1	equ	0xFE3
 21500                           fsr1h	equ	0xFE2
 21501                           fsr1l	equ	0xFE1
 21502                           indf2	equ	0xFDF
 21503                           postinc2	equ	0xFDE
 21504                           postdec2	equ	0xFDD
 21505                           plusw2	equ	0xFDB
 21506                           fsr2h	equ	0xFDA
 21507                           fsr2l	equ	0xFD9
 21508                           status	equ	0xFD8
 21509                           
 21510 ;; *************** function _netDecayInterval *****************
 21511 ;; Defined at:
 21512 ;;		line 142 in file "../BeaconManager.c"
 21513 ;; Parameters:    Size  Location     Type
 21514 ;;		None
 21515 ;; Auto vars:     Size  Location     Type
 21516 ;;		None
 21517 ;; Return value:  Size  Location     Type
 21518 ;;                  1    wreg      void 
 21519 ;; Registers used:
 21520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21521 ;; Tracked objects:
 21522 ;;		On entry : F/0
 21523 ;;		On exit  : F/0
 21524 ;;		Unchanged: 0/0
 21525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21530 ;;Total ram usage:        0 bytes
 21531 ;; Hardware stack levels used:    1
 21532 ;; Hardware stack levels required when called:    8
 21533 ;; This function calls:
 21534 ;;		_netChooseAdvertiseTime
 21535 ;; This function is called by:
 21536 ;;		_BeaconManagerTask
 21537 ;; This function uses a non-reentrant model
 21538 ;;
 21539                           
 21540                           	psect	text81
 21541  0076AA                     __ptext81:
 21542                           	opt stack 0
 21543  0076AA                     _netDecayInterval:
 21544                           	opt stack 18
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;BeaconManager.c: 144: currentInterval <<=1;
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;incstack = 0
 21551  0076AA  0102               	movlb	2	; () banked
 21552  0076AC  90D8               	bcf	status,0,c
 21553  0076AE  3744               	rlcf	_currentInterval& (0+255),f,b
 21554  0076B0  3745               	rlcf	(_currentInterval+1)& (0+255),f,b
 21555  0076B2  3746               	rlcf	(_currentInterval+2)& (0+255),f,b
 21556  0076B4  3747               	rlcf	(_currentInterval+3)& (0+255),f,b
 21557                           
 21558                           ; BSR set to: 2
 21559                           ;BeaconManager.c: 145: if (currentInterval > ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5))
 21560  0076B6  0E81               	movlw	129
 21561  0076B8  5D44               	subwf	_currentInterval& (0+255),w,b
 21562  0076BA  0EA8               	movlw	168
 21563  0076BC  5945               	subwfb	(_currentInterval+1)& (0+255),w,b
 21564  0076BE  0E12               	movlw	18
 21565  0076C0  5946               	subwfb	(_currentInterval+2)& (0+255),w,b
 21566  0076C2  0E01               	movlw	1
 21567  0076C4  5947               	subwfb	(_currentInterval+3)& (0+255),w,b
 21568  0076C6  E202 EF6F  F034    	bnc	_netChooseAdvertiseTime
 21569                           
 21570                           ; BSR set to: 2
 21571                           ;BeaconManager.c: 146: {
 21572                           ;BeaconManager.c: 147: currentInterval = ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5);
 21573  0076CC  0E80               	movlw	128
 21574  0076CE  6F44               	movwf	_currentInterval& (0+255),b
 21575  0076D0  0EA8               	movlw	168
 21576  0076D2  6F45               	movwf	(_currentInterval+1)& (0+255),b
 21577  0076D4  0E12               	movlw	18
 21578  0076D6  6F46               	movwf	(_currentInterval+2)& (0+255),b
 21579  0076D8  0E01               	movlw	1
 21580  0076DA  6F47               	movwf	(_currentInterval+3)& (0+255),b
 21581                           
 21582                           ; BSR set to: 2
 21583                           ;BeaconManager.c: 148: }
 21584                           ;BeaconManager.c: 149: netChooseAdvertiseTime();
 21585  0076DC  EF6F  F034         	goto	_netChooseAdvertiseTime	;wreg free
 21586  0076E0                     __end_of_netDecayInterval:
 21587                           	opt stack 0
 21588                           tblptru	equ	0xFF8
 21589                           tblptrh	equ	0xFF7
 21590                           tblptrl	equ	0xFF6
 21591                           tablat	equ	0xFF5
 21592                           prodh	equ	0xFF4
 21593                           prodl	equ	0xFF3
 21594                           postinc0	equ	0xFEE
 21595                           plusw0	equ	0xFEB
 21596                           fsr0h	equ	0xFEA
 21597                           fsr0l	equ	0xFE9
 21598                           wreg	equ	0xFE8
 21599                           indf1	equ	0xFE7
 21600                           postinc1	equ	0xFE6
 21601                           postdec1	equ	0xFE5
 21602                           plusw1	equ	0xFE3
 21603                           fsr1h	equ	0xFE2
 21604                           fsr1l	equ	0xFE1
 21605                           indf2	equ	0xFDF
 21606                           postinc2	equ	0xFDE
 21607                           postdec2	equ	0xFDD
 21608                           plusw2	equ	0xFDB
 21609                           fsr2h	equ	0xFDA
 21610                           fsr2l	equ	0xFD9
 21611                           status	equ	0xFD8
 21612                           
 21613 ;; *************** function _MSTickGetDiffNow *****************
 21614 ;; Defined at:
 21615 ;;		line 28 in file "../TimeTick.c"
 21616 ;; Parameters:    Size  Location     Type
 21617 ;;  tick            8   28[BANK0 ] struct TickMS_t_def
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;  tdiff           8   48[BANK0 ] struct TickMS_t_def
 21620 ;;  tNow            8   40[BANK0 ] struct TickMS_t_def
 21621 ;;  diff            4   36[BANK0 ] unsigned long 
 21622 ;; Return value:  Size  Location     Type
 21623 ;;                  4   28[BANK0 ] unsigned long 
 21624 ;; Registers used:
 21625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21626 ;; Tracked objects:
 21627 ;;		On entry : C/0
 21628 ;;		On exit  : F/0
 21629 ;;		Unchanged: 0/0
 21630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21631 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21632 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21634 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21635 ;;Total ram usage:       28 bytes
 21636 ;; Hardware stack levels used:    1
 21637 ;; Hardware stack levels required when called:    7
 21638 ;; This function calls:
 21639 ;;		_MSTickGet
 21640 ;; This function is called by:
 21641 ;;		_RouteManagerTask
 21642 ;;		_BeaconManagerTask
 21643 ;;		_TunnelManagerGetTunnel
 21644 ;;		_isKnownPacket
 21645 ;;		_TransportManagerTask
 21646 ;;		_NetworkManagerTask
 21647 ;; This function uses a non-reentrant model
 21648 ;;
 21649                           
 21650                           	psect	text82
 21651  00676A                     __ptext82:
 21652                           	opt stack 0
 21653  00676A                     _MSTickGetDiffNow:
 21654                           	opt stack 18
 21655                           
 21656                           ;TimeTick.c: 31: TickMS tdiff;
 21657                           ;TimeTick.c: 32: TickMS tNow=MSTickGet();
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;incstack = 0
 21661  00676A  EC70  F03B         	call	_MSTickGet	;wreg free
 21662  00676E  EE20  F088         	lfsr	2,MSTickGetDiffNow@tNow
 21663  006772  0E07               	movlw	7
 21664  006774                     u17021:
 21665  006774  CFEB FFDB          	movff	plusw0,plusw2
 21666  006778  06E8               	decf	wreg,f,c
 21667  00677A  E2FC               	bc	u17021
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;TimeTick.c: 33: tdiff.msb=tNow.msb-tick.msb;
 21671  00677C  5180               	movf	(MSTickGetDiffNow@tick+4)& (0+255),w,b
 21672  00677E  5D8C               	subwf	(MSTickGetDiffNow@tNow+4)& (0+255),w,b
 21673  006780  6F94               	movwf	(MSTickGetDiffNow@tdiff+4)& (0+255),b
 21674  006782  5181               	movf	(MSTickGetDiffNow@tick+5)& (0+255),w,b
 21675  006784  598D               	subwfb	(MSTickGetDiffNow@tNow+5)& (0+255),w,b
 21676  006786  6F95               	movwf	(MSTickGetDiffNow@tdiff+5)& (0+255),b
 21677  006788  5182               	movf	(MSTickGetDiffNow@tick+6)& (0+255),w,b
 21678  00678A  598E               	subwfb	(MSTickGetDiffNow@tNow+6)& (0+255),w,b
 21679  00678C  6F96               	movwf	(MSTickGetDiffNow@tdiff+6)& (0+255),b
 21680  00678E  5183               	movf	(MSTickGetDiffNow@tick+7)& (0+255),w,b
 21681  006790  598F               	subwfb	(MSTickGetDiffNow@tNow+7)& (0+255),w,b
 21682  006792  6F97               	movwf	(MSTickGetDiffNow@tdiff+7)& (0+255),b
 21683                           
 21684                           ; BSR set to: 0
 21685                           ;TimeTick.c: 34: tdiff.lsb=tNow.lsb-tick.lsb;
 21686  006794  517C               	movf	MSTickGetDiffNow@tick& (0+255),w,b
 21687  006796  5D88               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 21688  006798  6F90               	movwf	MSTickGetDiffNow@tdiff& (0+255),b
 21689  00679A  517D               	movf	(MSTickGetDiffNow@tick+1)& (0+255),w,b
 21690  00679C  5989               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 21691  00679E  6F91               	movwf	(MSTickGetDiffNow@tdiff+1)& (0+255),b
 21692  0067A0  517E               	movf	(MSTickGetDiffNow@tick+2)& (0+255),w,b
 21693  0067A2  598A               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 21694  0067A4  6F92               	movwf	(MSTickGetDiffNow@tdiff+2)& (0+255),b
 21695  0067A6  517F               	movf	(MSTickGetDiffNow@tick+3)& (0+255),w,b
 21696  0067A8  598B               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 21697  0067AA  6F93               	movwf	(MSTickGetDiffNow@tdiff+3)& (0+255),b
 21698                           
 21699                           ; BSR set to: 0
 21700                           ;TimeTick.c: 35: if(tdiff.lsb>tNow.lsb)
 21701  0067AC  5190               	movf	MSTickGetDiffNow@tdiff& (0+255),w,b
 21702  0067AE  5D88               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 21703  0067B0  5191               	movf	(MSTickGetDiffNow@tdiff+1)& (0+255),w,b
 21704  0067B2  5989               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 21705  0067B4  5192               	movf	(MSTickGetDiffNow@tdiff+2)& (0+255),w,b
 21706  0067B6  598A               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 21707  0067B8  5193               	movf	(MSTickGetDiffNow@tdiff+3)& (0+255),w,b
 21708  0067BA  598B               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 21709  0067BC  E205               	bc	l12107
 21710                           
 21711                           ; BSR set to: 0
 21712                           ;TimeTick.c: 36: {
 21713                           ;TimeTick.c: 37: tdiff.msb--;
 21714  0067BE  0794               	decf	(MSTickGetDiffNow@tdiff+4)& (0+255),f,b
 21715  0067C0  0E00               	movlw	0
 21716  0067C2  5B95               	subwfb	(MSTickGetDiffNow@tdiff+5)& (0+255),f,b
 21717  0067C4  5B96               	subwfb	(MSTickGetDiffNow@tdiff+6)& (0+255),f,b
 21718  0067C6  5B97               	subwfb	(MSTickGetDiffNow@tdiff+7)& (0+255),f,b
 21719  0067C8                     l12107:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;TimeTick.c: 38: }
 21723                           ;TimeTick.c: 39: diff=tdiff.lsb;
 21724  0067C8  C090  F084         	movff	MSTickGetDiffNow@tdiff,MSTickGetDiffNow@diff
 21725  0067CC  C091  F085         	movff	MSTickGetDiffNow@tdiff+1,MSTickGetDiffNow@diff+1
 21726  0067D0  C092  F086         	movff	MSTickGetDiffNow@tdiff+2,MSTickGetDiffNow@diff+2
 21727  0067D4  C093  F087         	movff	MSTickGetDiffNow@tdiff+3,MSTickGetDiffNow@diff+3
 21728                           
 21729                           ; BSR set to: 0
 21730                           ;TimeTick.c: 41: return(diff);
 21731  0067D8  C084  F07C         	movff	MSTickGetDiffNow@diff,?_MSTickGetDiffNow
 21732  0067DC  C085  F07D         	movff	MSTickGetDiffNow@diff+1,?_MSTickGetDiffNow+1
 21733  0067E0  C086  F07E         	movff	MSTickGetDiffNow@diff+2,?_MSTickGetDiffNow+2
 21734  0067E4  C087  F07F         	movff	MSTickGetDiffNow@diff+3,?_MSTickGetDiffNow+3
 21735                           
 21736                           ; BSR set to: 0
 21737  0067E8  0012               	return		;funcret
 21738  0067EA                     __end_of_MSTickGetDiffNow:
 21739                           	opt stack 0
 21740                           tblptru	equ	0xFF8
 21741                           tblptrh	equ	0xFF7
 21742                           tblptrl	equ	0xFF6
 21743                           tablat	equ	0xFF5
 21744                           prodh	equ	0xFF4
 21745                           prodl	equ	0xFF3
 21746                           postinc0	equ	0xFEE
 21747                           plusw0	equ	0xFEB
 21748                           fsr0h	equ	0xFEA
 21749                           fsr0l	equ	0xFE9
 21750                           wreg	equ	0xFE8
 21751                           indf1	equ	0xFE7
 21752                           postinc1	equ	0xFE6
 21753                           postdec1	equ	0xFE5
 21754                           plusw1	equ	0xFE3
 21755                           fsr1h	equ	0xFE2
 21756                           fsr1l	equ	0xFE1
 21757                           indf2	equ	0xFDF
 21758                           postinc2	equ	0xFDE
 21759                           postdec2	equ	0xFDD
 21760                           plusw2	equ	0xFDB
 21761                           fsr2h	equ	0xFDA
 21762                           fsr2l	equ	0xFD9
 21763                           status	equ	0xFD8
 21764                           
 21765 ;; *************** function _MiMAC_ReceivedPacket *****************
 21766 ;; Defined at:
 21767 ;;		line 433 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 21768 ;; Parameters:    Size  Location     Type
 21769 ;;		None
 21770 ;; Auto vars:     Size  Location     Type
 21771 ;;  bIntraPAN       1   19[BANK0 ] unsigned char 
 21772 ;;  addrMode        1   17[BANK0 ] unsigned char 
 21773 ;;  i               1   18[BANK0 ] unsigned char 
 21774 ;; Return value:  Size  Location     Type
 21775 ;;                  1    wreg      unsigned char 
 21776 ;; Registers used:
 21777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21778 ;; Tracked objects:
 21779 ;;		On entry : 0/0
 21780 ;;		On exit  : 0/0
 21781 ;;		Unchanged: 0/0
 21782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21784 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21785 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21787 ;;Total ram usage:        8 bytes
 21788 ;; Hardware stack levels used:    1
 21789 ;; Hardware stack levels required when called:    5
 21790 ;; This function calls:
 21791 ;;		_MiMAC_DiscardPacket
 21792 ;;		_memcpy
 21793 ;; This function is called by:
 21794 ;;		_MiApp_MessageAvailable
 21795 ;; This function uses a non-reentrant model
 21796 ;;
 21797                           
 21798                           	psect	text83
 21799  000C3C                     __ptext83:
 21800                           	opt stack 0
 21801  000C3C                     _MiMAC_ReceivedPacket:
 21802                           	opt stack 23
 21803                           
 21804                           ;drv_mrf_miwi_mesh_24j40.c: 435: uint8_t i;
 21805                           ;drv_mrf_miwi_mesh_24j40.c: 438: if(PORTBbits.RB0 == 0)
 21806                           
 21807                           ; BSR set to: 0
 21808                           ;incstack = 0
 21809  000C3C  A081               	btfss	3969,0,c	;volatile
 21810                           
 21811                           ;drv_mrf_miwi_mesh_24j40.c: 439: {
 21812                           ;drv_mrf_miwi_mesh_24j40.c: 440: INTCONbits.INT0IF = 1;
 21813  000C3E  82F2               	bsf	intcon,1,c	;volatile
 21814                           
 21815                           ;drv_mrf_miwi_mesh_24j40.c: 441: }
 21816                           ;drv_mrf_miwi_mesh_24j40.c: 446: if(MRF24J40Status.bits.TX_BUSY)
 21817  000C40  A042               	btfss	_MRF24J40Status,0,c	;volatile
 21818  000C42  D00C               	goto	l13949
 21819                           
 21820                           ;drv_mrf_miwi_mesh_24j40.c: 447: {
 21821                           ;drv_mrf_miwi_mesh_24j40.c: 448: if(failureCounter >= ((uint16_t)0x20 * 4))
 21822  000C44  0101               	movlb	1	; () banked
 21823  000C46  51DD               	movf	(_failureCounter+1)& (0+255),w,b	;volatile
 21824  000C48  E103               	bnz	u21250
 21825  000C4A  0E80               	movlw	128
 21826  000C4C  5DDC               	subwf	_failureCounter& (0+255),w,b	;volatile
 21827  000C4E  E304               	bnc	l13947
 21828  000C50                     u21250:
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;drv_mrf_miwi_mesh_24j40.c: 449: {
 21832                           ;drv_mrf_miwi_mesh_24j40.c: 450: failureCounter = 0;
 21833  000C50  6BDC               	clrf	_failureCounter& (0+255),b	;volatile
 21834  000C52  6BDD               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 21835                           
 21836                           ;drv_mrf_miwi_mesh_24j40.c: 451: MRF24J40Status.bits.TX_BUSY = 0;
 21837  000C54  9042               	bcf	_MRF24J40Status,0,c	;volatile
 21838                           
 21839                           ;drv_mrf_miwi_mesh_24j40.c: 452: }
 21840  000C56  D002               	goto	l13949
 21841  000C58                     l13947:
 21842                           
 21843                           ; BSR set to: 1
 21844                           ;drv_mrf_miwi_mesh_24j40.c: 453: else
 21845                           ;drv_mrf_miwi_mesh_24j40.c: 454: {
 21846                           ;drv_mrf_miwi_mesh_24j40.c: 455: failureCounter++;
 21847  000C58  4BDC               	infsnz	_failureCounter& (0+255),f,b	;volatile
 21848  000C5A  2BDD               	incf	(_failureCounter+1)& (0+255),f,b	;volatile
 21849  000C5C                     l13949:
 21850                           
 21851                           ;drv_mrf_miwi_mesh_24j40.c: 456: }
 21852                           ;drv_mrf_miwi_mesh_24j40.c: 457: }
 21853                           ;drv_mrf_miwi_mesh_24j40.c: 459: BankIndex = 0xFF;
 21854  000C5C  6859               	setf	_BankIndex,c
 21855                           
 21856                           ;drv_mrf_miwi_mesh_24j40.c: 460: for(i = 0; i < 2; i++)
 21857  000C5E  0100               	movlb	0	; () banked
 21858  000C60  6B72               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 21859  000C62                     l13957:
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;drv_mrf_miwi_mesh_24j40.c: 461: {
 21863                           ;drv_mrf_miwi_mesh_24j40.c: 462: if( RxBuffer[i].PayloadLen > 0 )
 21864  000C62  5172               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 21865  000C64  0D80               	mullw	128
 21866  000C66  0E00               	movlw	low _RxBuffer
 21867  000C68  24F3               	addwf	prodl,w,c
 21868  000C6A  6ED9               	movwf	fsr2l,c
 21869  000C6C  0E04               	movlw	high _RxBuffer
 21870  000C6E  20F4               	addwfc	prodh,w,c
 21871  000C70  6EDA               	movwf	fsr2h,c
 21872  000C72  50DF               	movf	indf2,w,c
 21873  000C74  E003               	bz	l13961
 21874                           
 21875                           ; BSR set to: 0
 21876                           ;drv_mrf_miwi_mesh_24j40.c: 463: {
 21877                           ;drv_mrf_miwi_mesh_24j40.c: 464: BankIndex = i;
 21878  000C76  C072  F059         	movff	MiMAC_ReceivedPacket@i,_BankIndex
 21879                           
 21880                           ;drv_mrf_miwi_mesh_24j40.c: 465: break;
 21881  000C7A  D004               	goto	l13965
 21882  000C7C                     l13961:
 21883                           
 21884                           ; BSR set to: 0
 21885  000C7C  2B72               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 21886                           
 21887                           ; BSR set to: 0
 21888  000C7E  0E01               	movlw	1
 21889  000C80  6572               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 21890  000C82  D7EF               	goto	l13957
 21891  000C84                     l13965:
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;drv_mrf_miwi_mesh_24j40.c: 466: }
 21895                           ;drv_mrf_miwi_mesh_24j40.c: 467: }
 21896                           ;drv_mrf_miwi_mesh_24j40.c: 470: if( BankIndex < 2 )
 21897  000C84  0E02               	movlw	2
 21898  000C86  6059               	cpfslt	_BankIndex,c
 21899  000C88  0C00               	retlw	0
 21900                           
 21901                           ; BSR set to: 0
 21902                           ;drv_mrf_miwi_mesh_24j40.c: 471: {
 21903                           ;drv_mrf_miwi_mesh_24j40.c: 472: uint8_t addrMode;
 21904                           ;drv_mrf_miwi_mesh_24j40.c: 474: bool bIntraPAN = 1;
 21905  000C8A  0E01               	movlw	1
 21906  000C8C  6F73               	movwf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),b
 21907                           
 21908                           ; BSR set to: 0
 21909                           ;drv_mrf_miwi_mesh_24j40.c: 476: if( (RxBuffer[BankIndex].Payload[0] & 0x40) == 0 )
 21910  000C8E  5059               	movf	_BankIndex,w,c
 21911  000C90  0D80               	mullw	128
 21912  000C92  0E01               	movlw	low (_RxBuffer+1)
 21913  000C94  24F3               	addwf	prodl,w,c
 21914  000C96  6ED9               	movwf	fsr2l,c
 21915  000C98  0E04               	movlw	high (_RxBuffer+1)
 21916  000C9A  20F4               	addwfc	prodh,w,c
 21917  000C9C  6EDA               	movwf	fsr2h,c
 21918  000C9E  BCDF               	btfsc	indf2,6,c
 21919  000CA0  D002               	goto	l764
 21920                           
 21921                           ; BSR set to: 4
 21922                           ;drv_mrf_miwi_mesh_24j40.c: 477: {
 21923                           ;drv_mrf_miwi_mesh_24j40.c: 478: bIntraPAN = 0;
 21924  000CA2  0100               	movlb	0	; () banked
 21925  000CA4  6B73               	clrf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),b
 21926  000CA6                     l764:
 21927                           
 21928                           ;drv_mrf_miwi_mesh_24j40.c: 479: }
 21929                           ;drv_mrf_miwi_mesh_24j40.c: 481: MACRxPacket.flags.Val = 0;
 21930  000CA6  0102               	movlb	2	; () banked
 21931  000CA8  6B79               	clrf	_MACRxPacket& (0+255),b
 21932                           
 21933                           ;drv_mrf_miwi_mesh_24j40.c: 482: MACRxPacket.altSourceAddress = 0;
 21934  000CAA  6B81               	clrf	(_MACRxPacket+8)& (0+255),b
 21935                           
 21936                           ; BSR set to: 2
 21937                           ;drv_mrf_miwi_mesh_24j40.c: 485: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
 21938  000CAC  5059               	movf	_BankIndex,w,c
 21939  000CAE  0D80               	mullw	128
 21940  000CB0  0E02               	movlw	low (_RxBuffer+2)
 21941  000CB2  24F3               	addwf	prodl,w,c
 21942  000CB4  6ED9               	movwf	fsr2l,c
 21943  000CB6  0E04               	movlw	high (_RxBuffer+2)
 21944  000CB8  20F4               	addwfc	prodh,w,c
 21945  000CBA  6EDA               	movwf	fsr2h,c
 21946  000CBC  50DF               	movf	indf2,w,c
 21947  000CBE  0BCC               	andlw	204
 21948  000CC0  0100               	movlb	0	; () banked
 21949  000CC2  6F71               	movwf	MiMAC_ReceivedPacket@addrMode& (0+255),b
 21950                           
 21951                           ;drv_mrf_miwi_mesh_24j40.c: 486: switch(addrMode)
 21952  000CC4  D1B5               	goto	l14077
 21953  000CC6                     l13975:
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;drv_mrf_miwi_mesh_24j40.c: 490: if( RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[
      +                          BankIndex].Payload[6] == 0xFF )
 21957  000CC6  5059               	movf	_BankIndex,w,c
 21958  000CC8  0D80               	mullw	128
 21959  000CCA  0E06               	movlw	low (_RxBuffer+6)
 21960  000CCC  24F3               	addwf	prodl,w,c
 21961  000CCE  6ED9               	movwf	fsr2l,c
 21962  000CD0  0E04               	movlw	high (_RxBuffer+6)
 21963  000CD2  20F4               	addwfc	prodh,w,c
 21964  000CD4  6EDA               	movwf	fsr2h,c
 21965  000CD6  28DE               	incf	postinc2,w,c
 21966  000CD8  E10C               	bnz	l767
 21967                           
 21968                           ; BSR set to: 0
 21969  000CDA  5059               	movf	_BankIndex,w,c
 21970  000CDC  0D80               	mullw	128
 21971  000CDE  0E07               	movlw	low (_RxBuffer+7)
 21972  000CE0  24F3               	addwf	prodl,w,c
 21973  000CE2  6ED9               	movwf	fsr2l,c
 21974  000CE4  0E04               	movlw	high (_RxBuffer+7)
 21975  000CE6  20F4               	addwfc	prodh,w,c
 21976  000CE8  6EDA               	movwf	fsr2h,c
 21977  000CEA  28DE               	incf	postinc2,w,c
 21978  000CEC  E102               	bnz	l767
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;drv_mrf_miwi_mesh_24j40.c: 491: {
 21982                           ;drv_mrf_miwi_mesh_24j40.c: 492: MACRxPacket.flags.bits.broadcast = 1;
 21983  000CEE  0102               	movlb	2	; () banked
 21984  000CF0  8579               	bsf	_MACRxPacket& (0+255),2,b
 21985  000CF2                     l767:
 21986                           
 21987                           ;drv_mrf_miwi_mesh_24j40.c: 493: }
 21988                           ;drv_mrf_miwi_mesh_24j40.c: 494: MACRxPacket.flags.bits.sourcePrsnt = 1;
 21989  000CF2  0102               	movlb	2	; () banked
 21990  000CF4  8F79               	bsf	_MACRxPacket& (0+255),7,b
 21991                           
 21992                           ; BSR set to: 2
 21993                           ;drv_mrf_miwi_mesh_24j40.c: 497: if( bIntraPAN )
 21994  000CF6  0100               	movlb	0	; () banked
 21995  000CF8  5173               	movf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),w,b
 21996  000CFA  E02C               	bz	l13991
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;drv_mrf_miwi_mesh_24j40.c: 499: {
 22000                           ;drv_mrf_miwi_mesh_24j40.c: 501: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[3],2);
 22001  000CFC  0E82               	movlw	low (_MACRxPacket+9)
 22002  000CFE  6F62               	movwf	memcpy@d1& (0+255),b
 22003  000D00  0E02               	movlw	high (_MACRxPacket+9)
 22004  000D02  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22005  000D04  5059               	movf	_BankIndex,w,c
 22006  000D06  0D80               	mullw	128
 22007  000D08  0E04               	movlw	low (_RxBuffer+4)
 22008  000D0A  24F3               	addwf	prodl,w,c
 22009  000D0C  6F64               	movwf	memcpy@s1& (0+255),b
 22010  000D0E  0E04               	movlw	high (_RxBuffer+4)
 22011  000D10  20F4               	addwfc	prodh,w,c
 22012  000D12  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22013  000D14  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22014  000D16  0E02               	movlw	2
 22015  000D18  6F66               	movwf	memcpy@n& (0+255),b
 22016  000D1A  ECFA  F03A         	call	_memcpy	;wreg free
 22017                           
 22018                           ; BSR set to: 0
 22019                           ;drv_mrf_miwi_mesh_24j40.c: 504: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[7]);
 22020  000D1E  5059               	movf	_BankIndex,w,c
 22021  000D20  0D80               	mullw	128
 22022  000D22  0E08               	movlw	low (_RxBuffer+8)
 22023  000D24  24F3               	addwf	prodl,w,c
 22024  000D26  0102               	movlb	2	; () banked
 22025  000D28  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22026  000D2A  0E04               	movlw	high (_RxBuffer+8)
 22027  000D2C  20F4               	addwfc	prodh,w,c
 22028  000D2E  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22029                           
 22030                           ; BSR set to: 2
 22031                           ;drv_mrf_miwi_mesh_24j40.c: 506: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 19;
 22032  000D30  5059               	movf	_BankIndex,w,c
 22033  000D32  0D80               	mullw	128
 22034  000D34  0E00               	movlw	low _RxBuffer
 22035  000D36  24F3               	addwf	prodl,w,c
 22036  000D38  6ED9               	movwf	fsr2l,c
 22037  000D3A  0E04               	movlw	high _RxBuffer
 22038  000D3C  20F4               	addwfc	prodh,w,c
 22039  000D3E  6EDA               	movwf	fsr2h,c
 22040  000D40  50DF               	movf	indf2,w,c
 22041  000D42  0FED               	addlw	237
 22042  000D44  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22043                           
 22044                           ; BSR set to: 2
 22045                           ;drv_mrf_miwi_mesh_24j40.c: 507: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]
      +                          );
 22046  000D46  5059               	movf	_BankIndex,w,c
 22047  000D48  0D80               	mullw	128
 22048  000D4A  0E10               	movlw	low (_RxBuffer+16)
 22049  000D4C  24F3               	addwf	prodl,w,c
 22050  000D4E  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22051  000D50  0E04               	movlw	high (_RxBuffer+16)
 22052  000D52  D12F               	goto	L15
 22053  000D54                     l13991:
 22054                           
 22055                           ; BSR set to: 0
 22056                           ;drv_mrf_miwi_mesh_24j40.c: 510: else
 22057                           ;drv_mrf_miwi_mesh_24j40.c: 511: {
 22058                           ;drv_mrf_miwi_mesh_24j40.c: 512: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[7],2);
 22059  000D54  0E82               	movlw	low (_MACRxPacket+9)
 22060  000D56  6F62               	movwf	memcpy@d1& (0+255),b
 22061  000D58  0E02               	movlw	high (_MACRxPacket+9)
 22062  000D5A  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22063  000D5C  5059               	movf	_BankIndex,w,c
 22064  000D5E  0D80               	mullw	128
 22065  000D60  0E08               	movlw	low (_RxBuffer+8)
 22066  000D62  24F3               	addwf	prodl,w,c
 22067  000D64  6F64               	movwf	memcpy@s1& (0+255),b
 22068  000D66  0E04               	movlw	high (_RxBuffer+8)
 22069  000D68  20F4               	addwfc	prodh,w,c
 22070  000D6A  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22071  000D6C  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22072  000D6E  0E02               	movlw	2
 22073  000D70  6F66               	movwf	memcpy@n& (0+255),b
 22074  000D72  ECFA  F03A         	call	_memcpy	;wreg free
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;drv_mrf_miwi_mesh_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[9]);
 22078  000D76  5059               	movf	_BankIndex,w,c
 22079  000D78  0D80               	mullw	128
 22080  000D7A  0E0A               	movlw	low (_RxBuffer+10)
 22081  000D7C  24F3               	addwf	prodl,w,c
 22082  000D7E  0102               	movlb	2	; () banked
 22083  000D80  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22084  000D82  0E04               	movlw	high (_RxBuffer+10)
 22085  000D84  20F4               	addwfc	prodh,w,c
 22086  000D86  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22087                           
 22088                           ; BSR set to: 2
 22089                           ;drv_mrf_miwi_mesh_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 21;
 22090  000D88  5059               	movf	_BankIndex,w,c
 22091  000D8A  0D80               	mullw	128
 22092  000D8C  0E00               	movlw	low _RxBuffer
 22093  000D8E  24F3               	addwf	prodl,w,c
 22094  000D90  6ED9               	movwf	fsr2l,c
 22095  000D92  0E04               	movlw	high _RxBuffer
 22096  000D94  20F4               	addwfc	prodh,w,c
 22097  000D96  6EDA               	movwf	fsr2h,c
 22098  000D98  50DF               	movf	indf2,w,c
 22099  000D9A  0FEB               	addlw	235
 22100  000D9C  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22101                           
 22102                           ; BSR set to: 2
 22103                           ;drv_mrf_miwi_mesh_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]
      +                          );
 22104  000D9E  5059               	movf	_BankIndex,w,c
 22105  000DA0  0D80               	mullw	128
 22106  000DA2  0E12               	movlw	low (_RxBuffer+18)
 22107  000DA4  24F3               	addwf	prodl,w,c
 22108  000DA6  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22109  000DA8  0E04               	movlw	high (_RxBuffer+18)
 22110  000DAA  D103               	goto	L15
 22111  000DAC                     l771:
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;drv_mrf_miwi_mesh_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
 22115  000DAC  0102               	movlb	2	; () banked
 22116  000DAE  8F79               	bsf	_MACRxPacket& (0+255),7,b
 22117                           
 22118                           ; BSR set to: 2
 22119                           ;drv_mrf_miwi_mesh_24j40.c: 526: if( bIntraPAN )
 22120  000DB0  0100               	movlb	0	; () banked
 22121  000DB2  5173               	movf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),w,b
 22122  000DB4  E02C               	bz	l14009
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;drv_mrf_miwi_mesh_24j40.c: 528: {
 22126                           ;drv_mrf_miwi_mesh_24j40.c: 531: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[3],2);
 22127  000DB6  0E82               	movlw	low (_MACRxPacket+9)
 22128  000DB8  6F62               	movwf	memcpy@d1& (0+255),b
 22129  000DBA  0E02               	movlw	high (_MACRxPacket+9)
 22130  000DBC  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22131  000DBE  5059               	movf	_BankIndex,w,c
 22132  000DC0  0D80               	mullw	128
 22133  000DC2  0E04               	movlw	low (_RxBuffer+4)
 22134  000DC4  24F3               	addwf	prodl,w,c
 22135  000DC6  6F64               	movwf	memcpy@s1& (0+255),b
 22136  000DC8  0E04               	movlw	high (_RxBuffer+4)
 22137  000DCA  20F4               	addwfc	prodh,w,c
 22138  000DCC  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22139  000DCE  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22140  000DD0  0E02               	movlw	2
 22141  000DD2  6F66               	movwf	memcpy@n& (0+255),b
 22142  000DD4  ECFA  F03A         	call	_memcpy	;wreg free
 22143                           
 22144                           ; BSR set to: 0
 22145                           ;drv_mrf_miwi_mesh_24j40.c: 535: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[13]);
 22146  000DD8  5059               	movf	_BankIndex,w,c
 22147  000DDA  0D80               	mullw	128
 22148  000DDC  0E0E               	movlw	low (_RxBuffer+14)
 22149  000DDE  24F3               	addwf	prodl,w,c
 22150  000DE0  0102               	movlb	2	; () banked
 22151  000DE2  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22152  000DE4  0E04               	movlw	high (_RxBuffer+14)
 22153  000DE6  20F4               	addwfc	prodh,w,c
 22154  000DE8  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22155                           
 22156                           ; BSR set to: 2
 22157                           ;drv_mrf_miwi_mesh_24j40.c: 536: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 25;
 22158  000DEA  5059               	movf	_BankIndex,w,c
 22159  000DEC  0D80               	mullw	128
 22160  000DEE  0E00               	movlw	low _RxBuffer
 22161  000DF0  24F3               	addwf	prodl,w,c
 22162  000DF2  6ED9               	movwf	fsr2l,c
 22163  000DF4  0E04               	movlw	high _RxBuffer
 22164  000DF6  20F4               	addwfc	prodh,w,c
 22165  000DF8  6EDA               	movwf	fsr2h,c
 22166  000DFA  50DF               	movf	indf2,w,c
 22167  000DFC  0FE7               	addlw	231
 22168  000DFE  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22169                           
 22170                           ; BSR set to: 2
 22171                           ;drv_mrf_miwi_mesh_24j40.c: 537: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]
      +                          );
 22172  000E00  5059               	movf	_BankIndex,w,c
 22173  000E02  0D80               	mullw	128
 22174  000E04  0E16               	movlw	low (_RxBuffer+22)
 22175  000E06  24F3               	addwf	prodl,w,c
 22176  000E08  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22177  000E0A  0E04               	movlw	high (_RxBuffer+22)
 22178  000E0C  D0D2               	goto	L15
 22179  000E0E                     l14009:
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;drv_mrf_miwi_mesh_24j40.c: 540: else
 22183                           ;drv_mrf_miwi_mesh_24j40.c: 541: {
 22184                           ;drv_mrf_miwi_mesh_24j40.c: 542: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[13],2);
 22185  000E0E  0E82               	movlw	low (_MACRxPacket+9)
 22186  000E10  6F62               	movwf	memcpy@d1& (0+255),b
 22187  000E12  0E02               	movlw	high (_MACRxPacket+9)
 22188  000E14  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22189  000E16  5059               	movf	_BankIndex,w,c
 22190  000E18  0D80               	mullw	128
 22191  000E1A  0E0E               	movlw	low (_RxBuffer+14)
 22192  000E1C  24F3               	addwf	prodl,w,c
 22193  000E1E  6F64               	movwf	memcpy@s1& (0+255),b
 22194  000E20  0E04               	movlw	high (_RxBuffer+14)
 22195  000E22  20F4               	addwfc	prodh,w,c
 22196  000E24  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22197  000E26  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22198  000E28  0E02               	movlw	2
 22199  000E2A  6F66               	movwf	memcpy@n& (0+255),b
 22200  000E2C  ECFA  F03A         	call	_memcpy	;wreg free
 22201                           
 22202                           ; BSR set to: 0
 22203                           ;drv_mrf_miwi_mesh_24j40.c: 546: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[15]);
 22204  000E30  5059               	movf	_BankIndex,w,c
 22205  000E32  0D80               	mullw	128
 22206  000E34  0E10               	movlw	low (_RxBuffer+16)
 22207  000E36  24F3               	addwf	prodl,w,c
 22208  000E38  0102               	movlb	2	; () banked
 22209  000E3A  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22210  000E3C  0E04               	movlw	high (_RxBuffer+16)
 22211  000E3E  20F4               	addwfc	prodh,w,c
 22212  000E40  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22213                           
 22214                           ; BSR set to: 2
 22215                           ;drv_mrf_miwi_mesh_24j40.c: 547: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 27;
 22216  000E42  5059               	movf	_BankIndex,w,c
 22217  000E44  0D80               	mullw	128
 22218  000E46  0E00               	movlw	low _RxBuffer
 22219  000E48  24F3               	addwf	prodl,w,c
 22220  000E4A  6ED9               	movwf	fsr2l,c
 22221  000E4C  0E04               	movlw	high _RxBuffer
 22222  000E4E  20F4               	addwfc	prodh,w,c
 22223  000E50  6EDA               	movwf	fsr2h,c
 22224  000E52  50DF               	movf	indf2,w,c
 22225  000E54  0FE5               	addlw	229
 22226  000E56  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22227                           
 22228                           ; BSR set to: 2
 22229                           ;drv_mrf_miwi_mesh_24j40.c: 548: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]
      +                          );
 22230  000E58  5059               	movf	_BankIndex,w,c
 22231  000E5A  0D80               	mullw	128
 22232  000E5C  0E18               	movlw	low (_RxBuffer+24)
 22233  000E5E  24F3               	addwf	prodl,w,c
 22234  000E60  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22235  000E62  0E04               	movlw	high (_RxBuffer+24)
 22236  000E64  D0A6               	goto	L15
 22237  000E66                     l774:
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;drv_mrf_miwi_mesh_24j40.c: 554: {
 22241                           ;drv_mrf_miwi_mesh_24j40.c: 555: MACRxPacket.flags.bits.broadcast = 1;
 22242  000E66  0102               	movlb	2	; () banked
 22243  000E68  8579               	bsf	_MACRxPacket& (0+255),2,b
 22244                           
 22245                           ;drv_mrf_miwi_mesh_24j40.c: 556: MACRxPacket.flags.bits.sourcePrsnt = 1;
 22246  000E6A  8F79               	bsf	_MACRxPacket& (0+255),7,b
 22247                           
 22248                           ; BSR set to: 2
 22249                           ;drv_mrf_miwi_mesh_24j40.c: 557: MACRxPacket.altSourceAddress = 1;
 22250  000E6C  0E01               	movlw	1
 22251  000E6E  6F81               	movwf	(_MACRxPacket+8)& (0+255),b
 22252                           
 22253                           ; BSR set to: 2
 22254                           ;drv_mrf_miwi_mesh_24j40.c: 558: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[3],2);
 22255  000E70  0E82               	movlw	low (_MACRxPacket+9)
 22256  000E72  0100               	movlb	0	; () banked
 22257  000E74  6F62               	movwf	memcpy@d1& (0+255),b
 22258  000E76  0E02               	movlw	high (_MACRxPacket+9)
 22259  000E78  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22260  000E7A  5059               	movf	_BankIndex,w,c
 22261  000E7C  0D80               	mullw	128
 22262  000E7E  0E04               	movlw	low (_RxBuffer+4)
 22263  000E80  24F3               	addwf	prodl,w,c
 22264  000E82  6F64               	movwf	memcpy@s1& (0+255),b
 22265  000E84  0E04               	movlw	high (_RxBuffer+4)
 22266  000E86  20F4               	addwfc	prodh,w,c
 22267  000E88  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22268  000E8A  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22269  000E8C  0E02               	movlw	2
 22270  000E8E  6F66               	movwf	memcpy@n& (0+255),b
 22271  000E90  ECFA  F03A         	call	_memcpy	;wreg free
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;drv_mrf_miwi_mesh_24j40.c: 562: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[5]);
 22275  000E94  5059               	movf	_BankIndex,w,c
 22276  000E96  0D80               	mullw	128
 22277  000E98  0E06               	movlw	low (_RxBuffer+6)
 22278  000E9A  24F3               	addwf	prodl,w,c
 22279  000E9C  0102               	movlb	2	; () banked
 22280  000E9E  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22281  000EA0  0E04               	movlw	high (_RxBuffer+6)
 22282  000EA2  20F4               	addwfc	prodh,w,c
 22283  000EA4  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22284                           
 22285                           ; BSR set to: 2
 22286                           ;drv_mrf_miwi_mesh_24j40.c: 563: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 11;
 22287  000EA6  5059               	movf	_BankIndex,w,c
 22288  000EA8  0D80               	mullw	128
 22289  000EAA  0E00               	movlw	low _RxBuffer
 22290  000EAC  24F3               	addwf	prodl,w,c
 22291  000EAE  6ED9               	movwf	fsr2l,c
 22292  000EB0  0E04               	movlw	high _RxBuffer
 22293  000EB2  20F4               	addwfc	prodh,w,c
 22294  000EB4  6EDA               	movwf	fsr2h,c
 22295  000EB6  50DF               	movf	indf2,w,c
 22296  000EB8  0FF5               	addlw	245
 22297  000EBA  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22298                           
 22299                           ; BSR set to: 2
 22300                           ;drv_mrf_miwi_mesh_24j40.c: 564: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7])
      +                          ;
 22301  000EBC  5059               	movf	_BankIndex,w,c
 22302  000EBE  0D80               	mullw	128
 22303  000EC0  0E08               	movlw	low (_RxBuffer+8)
 22304  000EC2  24F3               	addwf	prodl,w,c
 22305  000EC4  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22306  000EC6  0E04               	movlw	high (_RxBuffer+8)
 22307  000EC8  D074               	goto	L15
 22308  000ECA                     l14027:
 22309                           
 22310                           ; BSR set to: 0
 22311                           ;drv_mrf_miwi_mesh_24j40.c: 569: {
 22312                           ;drv_mrf_miwi_mesh_24j40.c: 570: if( RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[
      +                          BankIndex].Payload[6] == 0xFF )
 22313  000ECA  5059               	movf	_BankIndex,w,c
 22314  000ECC  0D80               	mullw	128
 22315  000ECE  0E06               	movlw	low (_RxBuffer+6)
 22316  000ED0  24F3               	addwf	prodl,w,c
 22317  000ED2  6ED9               	movwf	fsr2l,c
 22318  000ED4  0E04               	movlw	high (_RxBuffer+6)
 22319  000ED6  20F4               	addwfc	prodh,w,c
 22320  000ED8  6EDA               	movwf	fsr2h,c
 22321  000EDA  28DE               	incf	postinc2,w,c
 22322  000EDC  E10C               	bnz	l776
 22323                           
 22324                           ; BSR set to: 0
 22325  000EDE  5059               	movf	_BankIndex,w,c
 22326  000EE0  0D80               	mullw	128
 22327  000EE2  0E07               	movlw	low (_RxBuffer+7)
 22328  000EE4  24F3               	addwf	prodl,w,c
 22329  000EE6  6ED9               	movwf	fsr2l,c
 22330  000EE8  0E04               	movlw	high (_RxBuffer+7)
 22331  000EEA  20F4               	addwfc	prodh,w,c
 22332  000EEC  6EDA               	movwf	fsr2h,c
 22333  000EEE  28DE               	incf	postinc2,w,c
 22334  000EF0  E102               	bnz	l776
 22335                           
 22336                           ; BSR set to: 0
 22337                           ;drv_mrf_miwi_mesh_24j40.c: 571: {
 22338                           ;drv_mrf_miwi_mesh_24j40.c: 572: MACRxPacket.flags.bits.broadcast = 1;
 22339  000EF2  0102               	movlb	2	; () banked
 22340  000EF4  8579               	bsf	_MACRxPacket& (0+255),2,b
 22341  000EF6                     l776:
 22342                           
 22343                           ;drv_mrf_miwi_mesh_24j40.c: 573: }
 22344                           ;drv_mrf_miwi_mesh_24j40.c: 574: MACRxPacket.flags.bits.sourcePrsnt = 1;
 22345  000EF6  0102               	movlb	2	; () banked
 22346  000EF8  8F79               	bsf	_MACRxPacket& (0+255),7,b
 22347                           
 22348                           ; BSR set to: 2
 22349                           ;drv_mrf_miwi_mesh_24j40.c: 575: MACRxPacket.altSourceAddress = 1;
 22350  000EFA  0E01               	movlw	1
 22351  000EFC  6F81               	movwf	(_MACRxPacket+8)& (0+255),b
 22352                           
 22353                           ;drv_mrf_miwi_mesh_24j40.c: 577: if( bIntraPAN == 0 )
 22354  000EFE  0100               	movlb	0	; () banked
 22355  000F00  5173               	movf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),w,b
 22356  000F02  E12C               	bnz	l14043
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;drv_mrf_miwi_mesh_24j40.c: 578: {
 22360                           ;drv_mrf_miwi_mesh_24j40.c: 579: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[7],2);
 22361  000F04  0E82               	movlw	low (_MACRxPacket+9)
 22362  000F06  6F62               	movwf	memcpy@d1& (0+255),b
 22363  000F08  0E02               	movlw	high (_MACRxPacket+9)
 22364  000F0A  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22365  000F0C  5059               	movf	_BankIndex,w,c
 22366  000F0E  0D80               	mullw	128
 22367  000F10  0E08               	movlw	low (_RxBuffer+8)
 22368  000F12  24F3               	addwf	prodl,w,c
 22369  000F14  6F64               	movwf	memcpy@s1& (0+255),b
 22370  000F16  0E04               	movlw	high (_RxBuffer+8)
 22371  000F18  20F4               	addwfc	prodh,w,c
 22372  000F1A  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22373  000F1C  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22374  000F1E  0E02               	movlw	2
 22375  000F20  6F66               	movwf	memcpy@n& (0+255),b
 22376  000F22  ECFA  F03A         	call	_memcpy	;wreg free
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;drv_mrf_miwi_mesh_24j40.c: 583: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[9]);
 22380  000F26  5059               	movf	_BankIndex,w,c
 22381  000F28  0D80               	mullw	128
 22382  000F2A  0E0A               	movlw	low (_RxBuffer+10)
 22383  000F2C  24F3               	addwf	prodl,w,c
 22384  000F2E  0102               	movlb	2	; () banked
 22385  000F30  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22386  000F32  0E04               	movlw	high (_RxBuffer+10)
 22387  000F34  20F4               	addwfc	prodh,w,c
 22388  000F36  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22389                           
 22390                           ; BSR set to: 2
 22391                           ;drv_mrf_miwi_mesh_24j40.c: 584: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 15;
 22392  000F38  5059               	movf	_BankIndex,w,c
 22393  000F3A  0D80               	mullw	128
 22394  000F3C  0E00               	movlw	low _RxBuffer
 22395  000F3E  24F3               	addwf	prodl,w,c
 22396  000F40  6ED9               	movwf	fsr2l,c
 22397  000F42  0E04               	movlw	high _RxBuffer
 22398  000F44  20F4               	addwfc	prodh,w,c
 22399  000F46  6EDA               	movwf	fsr2h,c
 22400  000F48  50DF               	movf	indf2,w,c
 22401  000F4A  0FF1               	addlw	241
 22402  000F4C  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22403                           
 22404                           ; BSR set to: 2
 22405                           ;drv_mrf_miwi_mesh_24j40.c: 585: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]
      +                          );
 22406  000F4E  5059               	movf	_BankIndex,w,c
 22407  000F50  0D80               	mullw	128
 22408  000F52  0E0C               	movlw	low (_RxBuffer+12)
 22409  000F54  24F3               	addwf	prodl,w,c
 22410  000F56  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22411  000F58  0E04               	movlw	high (_RxBuffer+12)
 22412  000F5A  D02B               	goto	L15
 22413  000F5C                     l14043:
 22414                           
 22415                           ; BSR set to: 0
 22416                           ;drv_mrf_miwi_mesh_24j40.c: 587: else
 22417                           ;drv_mrf_miwi_mesh_24j40.c: 589: {
 22418                           ;drv_mrf_miwi_mesh_24j40.c: 590: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[3],2);
 22419  000F5C  0E82               	movlw	low (_MACRxPacket+9)
 22420  000F5E  6F62               	movwf	memcpy@d1& (0+255),b
 22421  000F60  0E02               	movlw	high (_MACRxPacket+9)
 22422  000F62  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22423  000F64  5059               	movf	_BankIndex,w,c
 22424  000F66  0D80               	mullw	128
 22425  000F68  0E04               	movlw	low (_RxBuffer+4)
 22426  000F6A  24F3               	addwf	prodl,w,c
 22427  000F6C  6F64               	movwf	memcpy@s1& (0+255),b
 22428  000F6E  0E04               	movlw	high (_RxBuffer+4)
 22429  000F70  20F4               	addwfc	prodh,w,c
 22430  000F72  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22431  000F74  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22432  000F76  0E02               	movlw	2
 22433  000F78  6F66               	movwf	memcpy@n& (0+255),b
 22434  000F7A  ECFA  F03A         	call	_memcpy	;wreg free
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;drv_mrf_miwi_mesh_24j40.c: 594: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[7]);
 22438  000F7E  5059               	movf	_BankIndex,w,c
 22439  000F80  0D80               	mullw	128
 22440  000F82  0E08               	movlw	low (_RxBuffer+8)
 22441  000F84  24F3               	addwf	prodl,w,c
 22442  000F86  0102               	movlb	2	; () banked
 22443  000F88  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22444  000F8A  0E04               	movlw	high (_RxBuffer+8)
 22445  000F8C  20F4               	addwfc	prodh,w,c
 22446  000F8E  6F7B               	movwf	(_MACRxPacket+2)& (0+255),b
 22447                           
 22448                           ; BSR set to: 2
 22449                           ;drv_mrf_miwi_mesh_24j40.c: 595: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen
      +                           - 13;
 22450  000F90  5059               	movf	_BankIndex,w,c
 22451  000F92  0D80               	mullw	128
 22452  000F94  0E00               	movlw	low _RxBuffer
 22453  000F96  24F3               	addwf	prodl,w,c
 22454  000F98  6ED9               	movwf	fsr2l,c
 22455  000F9A  0E04               	movlw	high _RxBuffer
 22456  000F9C  20F4               	addwfc	prodh,w,c
 22457  000F9E  6EDA               	movwf	fsr2h,c
 22458  000FA0  50DF               	movf	indf2,w,c
 22459  000FA2  0FF3               	addlw	243
 22460  000FA4  6F7E               	movwf	(_MACRxPacket+5)& (0+255),b
 22461                           
 22462                           ; BSR set to: 2
 22463                           ;drv_mrf_miwi_mesh_24j40.c: 596: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9])
      +                          ;
 22464  000FA6  5059               	movf	_BankIndex,w,c
 22465  000FA8  0D80               	mullw	128
 22466  000FAA  0E0A               	movlw	low (_RxBuffer+10)
 22467  000FAC  24F3               	addwf	prodl,w,c
 22468  000FAE  6F7C               	movwf	(_MACRxPacket+3)& (0+255),b
 22469  000FB0  0E04               	movlw	high (_RxBuffer+10)
 22470  000FB2                     L15:
 22471  000FB2  20F4               	addwfc	prodh,w,c
 22472  000FB4  6F7D               	movwf	(_MACRxPacket+4)& (0+255),b
 22473  000FB6  D04E               	goto	l14079
 22474  000FB8                     l779:
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;drv_mrf_miwi_mesh_24j40.c: 602: {
 22478                           ;drv_mrf_miwi_mesh_24j40.c: 603: MACRxPacket.flags.bits.sourcePrsnt = 1;
 22479  000FB8  0102               	movlb	2	; () banked
 22480  000FBA  8F79               	bsf	_MACRxPacket& (0+255),7,b
 22481                           
 22482                           ; BSR set to: 2
 22483                           ;drv_mrf_miwi_mesh_24j40.c: 604: MACRxPacket.altSourceAddress = 1;
 22484  000FBC  0E01               	movlw	1
 22485  000FBE  6F81               	movwf	(_MACRxPacket+8)& (0+255),b
 22486                           
 22487                           ;drv_mrf_miwi_mesh_24j40.c: 606: if( bIntraPAN )
 22488  000FC0  0100               	movlb	0	; () banked
 22489  000FC2  5173               	movf	MiMAC_ReceivedPacket@bIntraPAN& (0+255),w,b
 22490  000FC4  E019               	bz	l14061
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;drv_mrf_miwi_mesh_24j40.c: 608: {
 22494                           ;drv_mrf_miwi_mesh_24j40.c: 610: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[3],2);
 22495  000FC6  0E82               	movlw	low (_MACRxPacket+9)
 22496  000FC8  6F62               	movwf	memcpy@d1& (0+255),b
 22497  000FCA  0E02               	movlw	high (_MACRxPacket+9)
 22498  000FCC  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22499  000FCE  5059               	movf	_BankIndex,w,c
 22500  000FD0  0D80               	mullw	128
 22501  000FD2  0E04               	movlw	low (_RxBuffer+4)
 22502  000FD4  24F3               	addwf	prodl,w,c
 22503  000FD6  6F64               	movwf	memcpy@s1& (0+255),b
 22504  000FD8  0E04               	movlw	high (_RxBuffer+4)
 22505  000FDA  20F4               	addwfc	prodh,w,c
 22506  000FDC  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22507  000FDE  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22508  000FE0  0E02               	movlw	2
 22509  000FE2  6F66               	movwf	memcpy@n& (0+255),b
 22510  000FE4  ECFA  F03A         	call	_memcpy	;wreg free
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;drv_mrf_miwi_mesh_24j40.c: 614: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[12]);
 22514  000FE8  5059               	movf	_BankIndex,w,c
 22515  000FEA  0D80               	mullw	128
 22516  000FEC  0E0D               	movlw	low (_RxBuffer+13)
 22517  000FEE  24F3               	addwf	prodl,w,c
 22518  000FF0  0102               	movlb	2	; () banked
 22519  000FF2  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22520  000FF4  0E04               	movlw	high (_RxBuffer+13)
 22521  000FF6  D69A               	goto	L16
 22522  000FF8                     l14061:
 22523                           
 22524                           ; BSR set to: 0
 22525                           ;drv_mrf_miwi_mesh_24j40.c: 620: else
 22526                           ;drv_mrf_miwi_mesh_24j40.c: 621: {
 22527                           ;drv_mrf_miwi_mesh_24j40.c: 622: memcpy(&MACRxPacket.SourcePANID,&RxBuffer[BankIndex].Pa
      +                          yload[12],2);
 22528  000FF8  0E82               	movlw	low (_MACRxPacket+9)
 22529  000FFA  6F62               	movwf	memcpy@d1& (0+255),b
 22530  000FFC  0E02               	movlw	high (_MACRxPacket+9)
 22531  000FFE  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 22532  001000  5059               	movf	_BankIndex,w,c
 22533  001002  0D80               	mullw	128
 22534  001004  0E0D               	movlw	low (_RxBuffer+13)
 22535  001006  24F3               	addwf	prodl,w,c
 22536  001008  6F64               	movwf	memcpy@s1& (0+255),b
 22537  00100A  0E04               	movlw	high (_RxBuffer+13)
 22538  00100C  20F4               	addwfc	prodh,w,c
 22539  00100E  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 22540  001010  6B67               	clrf	(memcpy@n+1)& (0+255),b
 22541  001012  0E02               	movlw	2
 22542  001014  6F66               	movwf	memcpy@n& (0+255),b
 22543  001016  ECFA  F03A         	call	_memcpy	;wreg free
 22544                           
 22545                           ; BSR set to: 0
 22546                           ;drv_mrf_miwi_mesh_24j40.c: 626: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Paylo
      +                          ad[14]);
 22547  00101A  5059               	movf	_BankIndex,w,c
 22548  00101C  0D80               	mullw	128
 22549  00101E  0E0F               	movlw	low (_RxBuffer+15)
 22550  001020  24F3               	addwf	prodl,w,c
 22551  001022  0102               	movlb	2	; () banked
 22552  001024  6F7A               	movwf	(_MACRxPacket+1)& (0+255),b
 22553  001026  0E04               	movlw	high (_RxBuffer+15)
 22554  001028  D6AD               	goto	L17
 22555  00102A                     l14069:
 22556                           
 22557                           ; BSR set to: 0
 22558                           ;drv_mrf_miwi_mesh_24j40.c: 639: MiMAC_DiscardPacket();
 22559  00102A  EC23  F03D         	call	_MiMAC_DiscardPacket	;wreg free
 22560                           
 22561                           ;drv_mrf_miwi_mesh_24j40.c: 640: return 0;
 22562  00102E  0C00               	retlw	0
 22563  001030                     l14077:
 22564                           
 22565                           ; BSR set to: 0
 22566  001030  5171               	movf	MiMAC_ReceivedPacket@addrMode& (0+255),w,b
 22567                           
 22568                           ; Switch size 1, requested type "speed"
 22569                           ; Number of cases is 6, Range of values is 8 to 204
 22570                           ; switch strategies available:
 22571                           ; Name         Instructions Cycles
 22572                           ; simple_byte           19    10 (average)
 22573                           ;	Chosen strategy is simple_byte
 22574  001032  0A08               	xorlw	8	; case 8
 22575  001034  E0FA               	bz	l14069
 22576  001036  0A88               	xorlw	136	; case 128
 22577  001038  E101 D715          	bz	l774
 22578  00103C  0A08               	xorlw	8	; case 136
 22579  00103E  E101 D744          	bz	l14027
 22580  001042  0A04               	xorlw	4	; case 140
 22581  001044  E0B9               	bz	l779
 22582  001046  0A44               	xorlw	68	; case 200
 22583  001048  E101 D63D          	bz	l13975
 22584  00104C  0A04               	xorlw	4	; case 204
 22585  00104E  E101 D6AD          	bz	l771
 22586  001052  D7EB               	goto	l14069
 22587  001054                     l14079:
 22588                           
 22589                           ; BSR set to: 2
 22590                           ;drv_mrf_miwi_mesh_24j40.c: 644: if( RxBuffer[BankIndex].Payload[0] & 0x08 )
 22591  001054  5059               	movf	_BankIndex,w,c
 22592  001056  0D80               	mullw	128
 22593  001058  0E01               	movlw	low (_RxBuffer+1)
 22594  00105A  24F3               	addwf	prodl,w,c
 22595  00105C  6ED9               	movwf	fsr2l,c
 22596  00105E  0E04               	movlw	high (_RxBuffer+1)
 22597  001060  20F4               	addwfc	prodh,w,c
 22598  001062  6EDA               	movwf	fsr2h,c
 22599  001064  A6DF               	btfss	indf2,3,c
 22600  001066  D034               	goto	l14113
 22601  001068  D00A               	goto	l14093
 22602  00106A                     l14083:
 22603                           
 22604                           ; BSR set to: 4
 22605                           ;drv_mrf_miwi_mesh_24j40.c: 651: case 0x05:
 22606                           ;drv_mrf_miwi_mesh_24j40.c: 652: MACRxPacket.PayloadLen -= 21;
 22607  00106A  0E15               	movlw	21
 22608  00106C  D005               	goto	L20
 22609  00106E                     l14085:
 22610                           
 22611                           ; BSR set to: 4
 22612                           ;drv_mrf_miwi_mesh_24j40.c: 655: case 0x06:
 22613                           ;drv_mrf_miwi_mesh_24j40.c: 656: MACRxPacket.PayloadLen -= 13;
 22614  00106E  0E0D               	movlw	13
 22615  001070  D003               	goto	L20
 22616  001072                     l14087:
 22617                           
 22618                           ; BSR set to: 4
 22619                           ;drv_mrf_miwi_mesh_24j40.c: 659: case 0x07:
 22620                           ;drv_mrf_miwi_mesh_24j40.c: 660: MACRxPacket.PayloadLen -= 9;
 22621  001072  0E09               	movlw	9
 22622  001074  D001               	goto	L20
 22623  001076                     l14089:
 22624                           
 22625                           ; BSR set to: 4
 22626                           ;drv_mrf_miwi_mesh_24j40.c: 663: MACRxPacket.PayloadLen -= 5;
 22627  001076  0E05               	movlw	5
 22628  001078                     L20:
 22629  001078  0102               	movlb	2	; () banked
 22630  00107A  5F7E               	subwf	(_MACRxPacket+5)& (0+255),f,b
 22631                           
 22632                           ;drv_mrf_miwi_mesh_24j40.c: 664: break;
 22633  00107C  D014               	goto	l14095
 22634  00107E                     l14093:
 22635                           
 22636                           ; BSR set to: 4
 22637  00107E  0E9F               	movlw	low _mySecurityLevel
 22638  001080  6EF6               	movwf	tblptrl,c
 22639  001082                     	if	1	;There is more than 1 active tblptr byte
 22640  001082  0EFF               	movlw	high _mySecurityLevel
 22641  001084  6EF7               	movwf	tblptrh,c
 22642  001086                     	endif
 22643  001086                     	if	0	;There are less than 3 active tblptr bytes
 22644  001086                     	endif
 22645  001086  0008               	tblrd		*
 22646  001088  50F5               	movf	tablat,w,c
 22647                           
 22648                           ; Switch size 1, requested type "speed"
 22649                           ; Number of cases is 7, Range of values is 1 to 7
 22650                           ; switch strategies available:
 22651                           ; Name         Instructions Cycles
 22652                           ; simple_byte           22    12 (average)
 22653                           ;	Chosen strategy is simple_byte
 22654  00108A  0A01               	xorlw	1	; case 1
 22655  00108C  E0F4               	bz	l14089
 22656  00108E  0A03               	xorlw	3	; case 2
 22657  001090  E0EC               	bz	l14083
 22658  001092  0A01               	xorlw	1	; case 3
 22659  001094  E0EC               	bz	l14085
 22660  001096  0A07               	xorlw	7	; case 4
 22661  001098  E0EC               	bz	l14087
 22662  00109A  0A01               	xorlw	1	; case 5
 22663  00109C  E0E6               	bz	l14083
 22664  00109E  0A03               	xorlw	3	; case 6
 22665  0010A0  E0E6               	bz	l14085
 22666  0010A2  0A01               	xorlw	1	; case 7
 22667  0010A4  E0E6               	bz	l14087
 22668  0010A6                     l14095:
 22669                           
 22670                           ;drv_mrf_miwi_mesh_24j40.c: 669: MACRxPacket.Payload = &(MACRxPacket.Payload[5]);
 22671  0010A6  0E05               	movlw	5
 22672  0010A8  0102               	movlb	2	; () banked
 22673  0010AA  277C               	addwf	(_MACRxPacket+3)& (0+255),f,b
 22674  0010AC  0E00               	movlw	0
 22675  0010AE  237D               	addwfc	(_MACRxPacket+4)& (0+255),f,b
 22676                           
 22677                           ; BSR set to: 2
 22678                           ;drv_mrf_miwi_mesh_24j40.c: 670: MACRxPacket.flags.bits.secEn = 1;
 22679  0010B0  8779               	bsf	_MACRxPacket& (0+255),3,b
 22680  0010B2  D00E               	goto	l14113
 22681  0010B4                     l14099:
 22682                           
 22683                           ; BSR set to: 0
 22684                           ;drv_mrf_miwi_mesh_24j40.c: 686: MACRxPacket.flags.bits.packetType = 0x00;
 22685  0010B4  0EFC               	movlw	-4
 22686  0010B6  0102               	movlb	2	; () banked
 22687  0010B8  1779               	andwf	_MACRxPacket& (0+255),f,b
 22688                           
 22689                           ;drv_mrf_miwi_mesh_24j40.c: 687: break;
 22690  0010BA  D020               	goto	l14115
 22691  0010BC                     l14101:
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;drv_mrf_miwi_mesh_24j40.c: 689: MACRxPacket.flags.bits.packetType = 0x01;
 22695  0010BC  0102               	movlb	2	; () banked
 22696  0010BE  5179               	movf	_MACRxPacket& (0+255),w,b
 22697  0010C0  0BFC               	andlw	-4
 22698  0010C2  0901               	iorlw	1
 22699  0010C4  6F79               	movwf	_MACRxPacket& (0+255),b
 22700                           
 22701                           ;drv_mrf_miwi_mesh_24j40.c: 690: break;
 22702  0010C6  D01A               	goto	l14115
 22703  0010C8                     l14103:
 22704                           
 22705                           ; BSR set to: 0
 22706                           ;drv_mrf_miwi_mesh_24j40.c: 693: MACRxPacket.flags.bits.packetType = 0x03;
 22707  0010C8  0E03               	movlw	3
 22708  0010CA  0102               	movlb	2	; () banked
 22709  0010CC  1379               	iorwf	_MACRxPacket& (0+255),f,b
 22710                           
 22711                           ;drv_mrf_miwi_mesh_24j40.c: 694: break;
 22712  0010CE  D016               	goto	l14115
 22713  0010D0                     l14113:
 22714  0010D0  5059               	movf	_BankIndex,w,c
 22715  0010D2  0D80               	mullw	128
 22716  0010D4  0E01               	movlw	low (_RxBuffer+1)
 22717  0010D6  24F3               	addwf	prodl,w,c
 22718  0010D8  6ED9               	movwf	fsr2l,c
 22719  0010DA  0E04               	movlw	high (_RxBuffer+1)
 22720  0010DC  20F4               	addwfc	prodh,w,c
 22721  0010DE  6EDA               	movwf	fsr2h,c
 22722  0010E0  50DF               	movf	indf2,w,c
 22723  0010E2  0B07               	andlw	7
 22724  0010E4  0100               	movlb	0	; () banked
 22725  0010E6  6F6C               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 22726  0010E8  6B6D               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 22727                           
 22728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22729                           ; Switch size 1, requested type "speed"
 22730                           ; Number of cases is 1, Range of values is 0 to 0
 22731                           ; switch strategies available:
 22732                           ; Name         Instructions Cycles
 22733                           ; simple_byte            4     3 (average)
 22734                           ;	Chosen strategy is simple_byte
 22735  0010EA  516D               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 22736  0010EC  E19E               	bnz	l14069
 22737                           
 22738                           ; BSR set to: 0
 22739                           ; Switch size 1, requested type "speed"
 22740                           ; Number of cases is 3, Range of values is 0 to 3
 22741                           ; switch strategies available:
 22742                           ; Name         Instructions Cycles
 22743                           ; simple_byte           10     6 (average)
 22744                           ;	Chosen strategy is simple_byte
 22745  0010EE  516C               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 22746  0010F0  E0EB               	bz	l14103
 22747  0010F2  0A01               	xorlw	1	; case 1
 22748  0010F4  E0DF               	bz	l14099
 22749  0010F6  0A02               	xorlw	2	; case 3
 22750  0010F8  E0E1               	bz	l14101
 22751  0010FA  D797               	goto	l14069
 22752  0010FC                     l14115:
 22753                           
 22754                           ; BSR set to: 2
 22755                           ;drv_mrf_miwi_mesh_24j40.c: 700: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBu
      +                          ffer[BankIndex].PayloadLen-2];
 22756  0010FC  5059               	movf	_BankIndex,w,c
 22757  0010FE  0D80               	mullw	128
 22758  001100  0E00               	movlw	low _RxBuffer
 22759  001102  24F3               	addwf	prodl,w,c
 22760  001104  6ED9               	movwf	fsr2l,c
 22761  001106  0E04               	movlw	high _RxBuffer
 22762  001108  20F4               	addwfc	prodh,w,c
 22763  00110A  6EDA               	movwf	fsr2h,c
 22764  00110C  50DF               	movf	indf2,w,c
 22765  00110E  0100               	movlb	0	; () banked
 22766  001110  6F6C               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 22767  001112  5059               	movf	_BankIndex,w,c
 22768  001114  0D80               	mullw	128
 22769  001116  696D               	setf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 22770  001118  696E               	setf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 22771  00111A  0E00               	movlw	low _RxBuffer
 22772  00111C  6F6F               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),b
 22773  00111E  0E04               	movlw	high _RxBuffer
 22774  001120  6F70               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 22775  001122  516D               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 22776  001124  276F               	addwf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 22777  001126  516E               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 22778  001128  2370               	addwfc	(??_MiMAC_ReceivedPacket+4)& (0+255),f,b
 22779  00112A  50F3               	movf	prodl,w,c
 22780  00112C  276F               	addwf	(??_MiMAC_ReceivedPacket+3)& (0+255),f,b
 22781  00112E  50F4               	movf	prodh,w,c
 22782  001130  2370               	addwfc	(??_MiMAC_ReceivedPacket+4)& (0+255),f,b
 22783  001132  516C               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 22784  001134  256F               	addwf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 22785  001136  6ED9               	movwf	fsr2l,c
 22786  001138  0E00               	movlw	0
 22787  00113A  2170               	addwfc	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 22788  00113C  6EDA               	movwf	fsr2h,c
 22789  00113E  50DF               	movf	indf2,w,c
 22790  001140  0102               	movlb	2	; () banked
 22791  001142  6F80               	movwf	(_MACRxPacket+7)& (0+255),b
 22792                           
 22793                           ;drv_mrf_miwi_mesh_24j40.c: 701: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxB
      +                          uffer[BankIndex].PayloadLen-1];
 22794  001144  5059               	movf	_BankIndex,w,c
 22795  001146  0D80               	mullw	128
 22796  001148  0E00               	movlw	low _RxBuffer
 22797  00114A  24F3               	addwf	prodl,w,c
 22798  00114C  6ED9               	movwf	fsr2l,c
 22799  00114E  0E04               	movlw	high _RxBuffer
 22800  001150  20F4               	addwfc	prodh,w,c
 22801  001152  6EDA               	movwf	fsr2h,c
 22802  001154  50DF               	movf	indf2,w,c
 22803  001156  0100               	movlb	0	; () banked
 22804  001158  6F6C               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 22805  00115A  5059               	movf	_BankIndex,w,c
 22806  00115C  0D80               	mullw	128
 22807  00115E  0E00               	movlw	low _RxBuffer
 22808  001160  6F6D               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 22809  001162  0E04               	movlw	high _RxBuffer
 22810  001164  6F6E               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),b
 22811  001166  50F3               	movf	prodl,w,c
 22812  001168  276D               	addwf	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 22813  00116A  50F4               	movf	prodh,w,c
 22814  00116C  236E               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),f,b
 22815  00116E  516C               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 22816  001170  256D               	addwf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 22817  001172  6ED9               	movwf	fsr2l,c
 22818  001174  0E00               	movlw	0
 22819  001176  216E               	addwfc	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 22820  001178  6EDA               	movwf	fsr2h,c
 22821  00117A  50DF               	movf	indf2,w,c
 22822  00117C  0102               	movlb	2	; () banked
 22823  00117E  6F7F               	movwf	(_MACRxPacket+6)& (0+255),b
 22824                           
 22825                           ; BSR set to: 2
 22826                           ;drv_mrf_miwi_mesh_24j40.c: 704: return 1;
 22827  001180  0C01               	retlw	1	;funcret
 22828  001182                     __end_of_MiMAC_ReceivedPacket:
 22829                           	opt stack 0
 22830                           tblptru	equ	0xFF8
 22831                           tblptrh	equ	0xFF7
 22832                           tblptrl	equ	0xFF6
 22833                           tablat	equ	0xFF5
 22834                           prodh	equ	0xFF4
 22835                           prodl	equ	0xFF3
 22836                           intcon	equ	0xFF2
 22837                           postinc0	equ	0xFEE
 22838                           plusw0	equ	0xFEB
 22839                           fsr0h	equ	0xFEA
 22840                           fsr0l	equ	0xFE9
 22841                           wreg	equ	0xFE8
 22842                           indf1	equ	0xFE7
 22843                           postinc1	equ	0xFE6
 22844                           postdec1	equ	0xFE5
 22845                           plusw1	equ	0xFE3
 22846                           fsr1h	equ	0xFE2
 22847                           fsr1l	equ	0xFE1
 22848                           indf2	equ	0xFDF
 22849                           postinc2	equ	0xFDE
 22850                           postdec2	equ	0xFDD
 22851                           plusw2	equ	0xFDB
 22852                           fsr2h	equ	0xFDA
 22853                           fsr2l	equ	0xFD9
 22854                           status	equ	0xFD8
 22855                           
 22856 ;; *************** function _MiMAC_DiscardPacket *****************
 22857 ;; Defined at:
 22858 ;;		line 745 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 22859 ;; Parameters:    Size  Location     Type
 22860 ;;		None
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;		None
 22863 ;; Return value:  Size  Location     Type
 22864 ;;                  1    wreg      void 
 22865 ;; Registers used:
 22866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22867 ;; Tracked objects:
 22868 ;;		On entry : 0/0
 22869 ;;		On exit  : 0/0
 22870 ;;		Unchanged: 0/0
 22871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;Total ram usage:        0 bytes
 22877 ;; Hardware stack levels used:    1
 22878 ;; Hardware stack levels required when called:    4
 22879 ;; This function calls:
 22880 ;;		Nothing
 22881 ;; This function is called by:
 22882 ;;		_radioDiscardPacket
 22883 ;;		_MiMAC_ReceivedPacket
 22884 ;; This function uses a non-reentrant model
 22885 ;;
 22886                           
 22887                           	psect	text84
 22888  007A46                     __ptext84:
 22889                           	opt stack 0
 22890  007A46                     _MiMAC_DiscardPacket:
 22891                           	opt stack 22
 22892                           
 22893                           ;drv_mrf_miwi_mesh_24j40.c: 749: if( BankIndex < 2 )
 22894                           
 22895                           ;incstack = 0
 22896  007A46  0E02               	movlw	2
 22897  007A48  6059               	cpfslt	_BankIndex,c
 22898  007A4A  0C02               	retlw	2
 22899                           
 22900                           ;drv_mrf_miwi_mesh_24j40.c: 750: {
 22901                           ;drv_mrf_miwi_mesh_24j40.c: 751: RxBuffer[BankIndex].PayloadLen = 0;
 22902  007A4C  5059               	movf	_BankIndex,w,c
 22903  007A4E  0D80               	mullw	128
 22904  007A50  0E00               	movlw	low _RxBuffer
 22905  007A52  24F3               	addwf	prodl,w,c
 22906  007A54  6ED9               	movwf	fsr2l,c
 22907  007A56  0E04               	movlw	high _RxBuffer
 22908  007A58  20F4               	addwfc	prodh,w,c
 22909  007A5A  6EDA               	movwf	fsr2h,c
 22910  007A5C  6ADF               	clrf	indf2,c
 22911  007A5E  0C00               	retlw	0	;funcret
 22912  007A60                     __end_of_MiMAC_DiscardPacket:
 22913                           	opt stack 0
 22914                           tblptru	equ	0xFF8
 22915                           tblptrh	equ	0xFF7
 22916                           tblptrl	equ	0xFF6
 22917                           tablat	equ	0xFF5
 22918                           prodh	equ	0xFF4
 22919                           prodl	equ	0xFF3
 22920                           intcon	equ	0xFF2
 22921                           postinc0	equ	0xFEE
 22922                           plusw0	equ	0xFEB
 22923                           fsr0h	equ	0xFEA
 22924                           fsr0l	equ	0xFE9
 22925                           wreg	equ	0xFE8
 22926                           indf1	equ	0xFE7
 22927                           postinc1	equ	0xFE6
 22928                           postdec1	equ	0xFE5
 22929                           plusw1	equ	0xFE3
 22930                           fsr1h	equ	0xFE2
 22931                           fsr1l	equ	0xFE1
 22932                           indf2	equ	0xFDF
 22933                           postinc2	equ	0xFDE
 22934                           postdec2	equ	0xFDD
 22935                           plusw2	equ	0xFDB
 22936                           fsr2h	equ	0xFDA
 22937                           fsr2l	equ	0xFD9
 22938                           status	equ	0xFD8
 22939                           
 22940 ;; *************** function _AddNodeToNetworkTable *****************
 22941 ;; Defined at:
 22942 ;;		line 291 in file "../src/Bridge.c"
 22943 ;; Parameters:    Size  Location     Type
 22944 ;;  address         8   32[BANK0 ] struct addr_t_def
 22945 ;;  PANID           2   40[BANK0 ] unsigned int 
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;  i               2   48[BANK0 ] unsigned int 
 22948 ;;  ind             2   46[BANK0 ] unsigned int 
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  2   32[BANK0 ] unsigned int 
 22951 ;; Registers used:
 22952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22953 ;; Tracked objects:
 22954 ;;		On entry : F/0
 22955 ;;		On exit  : F/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22958 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22961 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22962 ;;Total ram usage:       18 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:    6
 22965 ;; This function calls:
 22966 ;;		_isSameAddress
 22967 ;;		_memcpy
 22968 ;;		_memset
 22969 ;; This function is called by:
 22970 ;;		_MiApp_MessageAvailable
 22971 ;; This function uses a non-reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text85
 22975  003C88                     __ptext85:
 22976                           	opt stack 0
 22977  003C88                     _AddNodeToNetworkTable:
 22978                           	opt stack 22
 22979                           
 22980                           ; BSR set to: 0
 22981                           ;Bridge.c: 293: uint16_t i;
 22982                           ;Bridge.c: 294: uint16_t ind=0xffff;
 22983                           
 22984                           ;incstack = 0
 22985  003C88  698E               	setf	AddNodeToNetworkTable@ind& (0+255),b
 22986  003C8A  698F               	setf	(AddNodeToNetworkTable@ind+1)& (0+255),b
 22987                           
 22988                           ;Bridge.c: 295: for(i=0;i<5;i++)
 22989  003C8C  6B90               	clrf	AddNodeToNetworkTable@i& (0+255),b
 22990  003C8E  6B91               	clrf	(AddNodeToNetworkTable@i+1)& (0+255),b
 22991  003C90                     l14315:
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;Bridge.c: 296: {
 22995                           ;Bridge.c: 297: if( (isSameAddress(ConnectionTable[i].Address,address)==1)
 22996                           ;Bridge.c: 298: && (ConnectionTable[i].PANID.Val == PANID)
 22997                           ;Bridge.c: 299: && (ConnectionTable[i].status.bits.isValid==1) )
 22998  003C90  0E11               	movlw	17
 22999  003C92  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23000  003C94  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23001  003C98  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23002  003C9C  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23003  003C9E  50F3               	movf	prodl,w,c
 23004  003CA0  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23005  003CA2  0E08               	movlw	low (_ConnectionTable+8)
 23006  003CA4  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23007  003CA6  6ED9               	movwf	fsr2l,c
 23008  003CA8  0E03               	movlw	high (_ConnectionTable+8)
 23009  003CAA  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23010  003CAC  6EDA               	movwf	fsr2h,c
 23011  003CAE  EE00  F070         	lfsr	0,isSameAddress@a1
 23012  003CB2  0E07               	movlw	7
 23013  003CB4                     u22171:
 23014  003CB4  CFDB FFEB          	movff	plusw2,plusw0
 23015  003CB8  06E8               	decf	wreg,f,c
 23016  003CBA  E2FC               	bc	u22171
 23017  003CBC  EE20  F080         	lfsr	2,AddNodeToNetworkTable@address
 23018  003CC0  EE00  F078         	lfsr	0,isSameAddress@a2
 23019  003CC4  0E07               	movlw	7
 23020  003CC6                     u22181:
 23021  003CC6  CFDB FFEB          	movff	plusw2,plusw0
 23022  003CCA  06E8               	decf	wreg,f,c
 23023  003CCC  E2FC               	bc	u22181
 23024  003CCE  ECC5  F03C         	call	_isSameAddress	;wreg free
 23025  003CD2  06E8               	decf	wreg,f,c
 23026  003CD4  E126               	bnz	l14325
 23027                           
 23028                           ; BSR set to: 0
 23029  003CD6  0E11               	movlw	17
 23030  003CD8  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23031  003CDA  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23032  003CDE  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23033  003CE2  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23034  003CE4  50F3               	movf	prodl,w,c
 23035  003CE6  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23036  003CE8  0E04               	movlw	low (_ConnectionTable+4)
 23037  003CEA  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23038  003CEC  6ED9               	movwf	fsr2l,c
 23039  003CEE  0E03               	movlw	high (_ConnectionTable+4)
 23040  003CF0  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23041  003CF2  6EDA               	movwf	fsr2h,c
 23042  003CF4  5188               	movf	AddNodeToNetworkTable@PANID& (0+255),w,b
 23043  003CF6  18DE               	xorwf	postinc2,w,c
 23044  003CF8  E114               	bnz	l14325
 23045  003CFA  5189               	movf	(AddNodeToNetworkTable@PANID+1)& (0+255),w,b
 23046  003CFC  18DE               	xorwf	postinc2,w,c
 23047  003CFE  E111               	bnz	l14325
 23048                           
 23049                           ; BSR set to: 0
 23050  003D00  0E11               	movlw	17
 23051  003D02  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23052  003D04  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23053  003D08  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23054  003D0C  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23055  003D0E  50F3               	movf	prodl,w,c
 23056  003D10  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23057  003D12  0E10               	movlw	low (_ConnectionTable+16)
 23058  003D14  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23059  003D16  6ED9               	movwf	fsr2l,c
 23060  003D18  0E03               	movlw	high (_ConnectionTable+16)
 23061  003D1A  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23062  003D1C  6EDA               	movwf	fsr2h,c
 23063  003D1E  BEDF               	btfsc	indf2,7,c
 23064  003D20  D022               	goto	l14335
 23065  003D22                     l14325:
 23066  003D22  0E11               	movlw	17
 23067  003D24  0100               	movlb	0	; () banked
 23068  003D26  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23069  003D28  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23070  003D2C  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23071  003D30  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23072  003D32  50F3               	movf	prodl,w,c
 23073  003D34  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23074  003D36  0E10               	movlw	low (_ConnectionTable+16)
 23075  003D38  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23076  003D3A  6ED9               	movwf	fsr2l,c
 23077  003D3C  0E03               	movlw	high (_ConnectionTable+16)
 23078  003D3E  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23079  003D40  6EDA               	movwf	fsr2h,c
 23080  003D42  BEDF               	btfsc	indf2,7,c
 23081  003D44  D008               	goto	l14331
 23082                           
 23083                           ; BSR set to: 3
 23084  003D46  298E               	incf	AddNodeToNetworkTable@ind& (0+255),w,b
 23085  003D48  E106               	bnz	l14331
 23086  003D4A  298F               	incf	(AddNodeToNetworkTable@ind+1)& (0+255),w,b
 23087  003D4C  E104               	bnz	l14331
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;Bridge.c: 303: {
 23091                           ;Bridge.c: 304: ind=i;
 23092  003D4E  C090  F08E         	movff	AddNodeToNetworkTable@i,AddNodeToNetworkTable@ind
 23093  003D52  C091  F08F         	movff	AddNodeToNetworkTable@i+1,AddNodeToNetworkTable@ind+1
 23094  003D56                     l14331:
 23095  003D56  0100               	movlb	0	; () banked
 23096  003D58  4B90               	infsnz	AddNodeToNetworkTable@i& (0+255),f,b
 23097  003D5A  2B91               	incf	(AddNodeToNetworkTable@i+1)& (0+255),f,b
 23098                           
 23099                           ; BSR set to: 0
 23100  003D5C  5191               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 23101  003D5E  E103               	bnz	u22240
 23102  003D60  0E05               	movlw	5
 23103  003D62  5D90               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 23104  003D64  E395               	bnc	l14315
 23105  003D66                     u22240:
 23106  003D66                     l14335:
 23107                           
 23108                           ;Bridge.c: 305: }
 23109                           ;Bridge.c: 306: }
 23110                           ;Bridge.c: 307: if(i>=5)
 23111  003D66  0100               	movlb	0	; () banked
 23112  003D68  5191               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 23113  003D6A  E104               	bnz	u22250
 23114  003D6C  0E05               	movlw	5
 23115  003D6E  5D90               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 23116  003D70  A0D8               	btfss	status,0,c
 23117  003D72  0012               	return	
 23118  003D74                     u22250:
 23119                           
 23120                           ; BSR set to: 0
 23121                           ;Bridge.c: 308: {
 23122                           ;Bridge.c: 309: i=ind;
 23123  003D74  C08E  F090         	movff	AddNodeToNetworkTable@ind,AddNodeToNetworkTable@i
 23124  003D78  C08F  F091         	movff	AddNodeToNetworkTable@ind+1,AddNodeToNetworkTable@i+1
 23125                           
 23126                           ; BSR set to: 0
 23127                           ;Bridge.c: 310: if(i!=0xffff)
 23128  003D7C  2990               	incf	AddNodeToNetworkTable@i& (0+255),w,b
 23129  003D7E  E103               	bnz	u22260
 23130  003D80  2991               	incf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 23131  003D82  B4D8               	btfsc	status,2,c
 23132  003D84  0012               	return	
 23133  003D86                     u22260:
 23134                           
 23135                           ; BSR set to: 0
 23136                           ;Bridge.c: 311: {
 23137                           ;Bridge.c: 312: memset(&ConnectionTable[i],0x00,sizeof(CONNECTION_ENTRY));
 23138  003D86  0E11               	movlw	17
 23139  003D88  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23140  003D8A  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23141  003D8E  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23142  003D92  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23143  003D94  50F3               	movf	prodl,w,c
 23144  003D96  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23145  003D98  0E00               	movlw	low _ConnectionTable
 23146  003D9A  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23147  003D9C  6F60               	movwf	memset@p1& (0+255),b
 23148  003D9E  0E03               	movlw	high _ConnectionTable
 23149  003DA0  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23150  003DA2  6F61               	movwf	(memset@p1+1)& (0+255),b
 23151  003DA4  6B63               	clrf	(memset@c+1)& (0+255),b
 23152  003DA6  6B62               	clrf	memset@c& (0+255),b
 23153  003DA8  6B65               	clrf	(memset@n+1)& (0+255),b
 23154  003DAA  0E11               	movlw	17
 23155  003DAC  6F64               	movwf	memset@n& (0+255),b
 23156  003DAE  EC61  F03C         	call	_memset	;wreg free
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;Bridge.c: 313: memcpy(ConnectionTable[i].Address.bytes,address.bytes,sizeof(address));
 23160  003DB2  0E11               	movlw	17
 23161  003DB4  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23162  003DB6  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23163  003DBA  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23164  003DBE  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23165  003DC0  50F3               	movf	prodl,w,c
 23166  003DC2  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23167  003DC4  0E08               	movlw	low (_ConnectionTable+8)
 23168  003DC6  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23169  003DC8  6F62               	movwf	memcpy@d1& (0+255),b
 23170  003DCA  0E03               	movlw	high (_ConnectionTable+8)
 23171  003DCC  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23172  003DCE  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 23173  003DD0  0E80               	movlw	low AddNodeToNetworkTable@address
 23174  003DD2  6F64               	movwf	memcpy@s1& (0+255),b
 23175  003DD4  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 23176  003DD6  6B67               	clrf	(memcpy@n+1)& (0+255),b
 23177  003DD8  0E08               	movlw	8
 23178  003DDA  6F66               	movwf	memcpy@n& (0+255),b
 23179  003DDC  ECFA  F03A         	call	_memcpy	;wreg free
 23180                           
 23181                           ; BSR set to: 0
 23182                           ;Bridge.c: 314: ConnectionTable[i].PANID.Val=PANID;
 23183  003DE0  0E11               	movlw	17
 23184  003DE2  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23185  003DE4  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23186  003DE8  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23187  003DEC  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23188  003DEE  50F3               	movf	prodl,w,c
 23189  003DF0  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23190  003DF2  0E04               	movlw	low (_ConnectionTable+4)
 23191  003DF4  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23192  003DF6  6ED9               	movwf	fsr2l,c
 23193  003DF8  0E03               	movlw	high (_ConnectionTable+4)
 23194  003DFA  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23195  003DFC  6EDA               	movwf	fsr2h,c
 23196  003DFE  C088  FFDE         	movff	AddNodeToNetworkTable@PANID,postinc2
 23197  003E02  C089  FFDD         	movff	AddNodeToNetworkTable@PANID+1,postdec2
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;Bridge.c: 315: ConnectionTable[i].status.bits.isValid=1;
 23201  003E06  0E11               	movlw	17
 23202  003E08  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23203  003E0A  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23204  003E0E  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23205  003E12  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23206  003E14  50F3               	movf	prodl,w,c
 23207  003E16  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23208  003E18  0E10               	movlw	low (_ConnectionTable+16)
 23209  003E1A  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23210  003E1C  6ED9               	movwf	fsr2l,c
 23211  003E1E  0E03               	movlw	high (_ConnectionTable+16)
 23212  003E20  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23213  003E22  6EDA               	movwf	fsr2h,c
 23214  003E24  8EDF               	bsf	indf2,7,c
 23215                           
 23216                           ; BSR set to: 3
 23217                           ;Bridge.c: 317: ConnectionTable[i].IncomingFrameCounter=0;
 23218  003E26  0E11               	movlw	17
 23219  003E28  0100               	movlb	0	; () banked
 23220  003E2A  0390               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 23221  003E2C  CFF3 F08A          	movff	prodl,??_AddNodeToNetworkTable
 23222  003E30  CFF4 F08B          	movff	prodh,??_AddNodeToNetworkTable+1
 23223  003E34  0391               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 23224  003E36  50F3               	movf	prodl,w,c
 23225  003E38  278B               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 23226  003E3A  0E00               	movlw	low _ConnectionTable
 23227  003E3C  258A               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 23228  003E3E  6ED9               	movwf	fsr2l,c
 23229  003E40  0E03               	movlw	high _ConnectionTable
 23230  003E42  218B               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 23231  003E44  6EDA               	movwf	fsr2h,c
 23232  003E46  6ADE               	clrf	postinc2,c
 23233  003E48  6ADE               	clrf	postinc2,c
 23234  003E4A  6ADE               	clrf	postinc2,c
 23235  003E4C  6ADD               	clrf	postdec2,c
 23236                           
 23237                           ; BSR set to: 0
 23238  003E4E  0012               	return		;funcret
 23239  003E50                     __end_of_AddNodeToNetworkTable:
 23240                           	opt stack 0
 23241                           tblptru	equ	0xFF8
 23242                           tblptrh	equ	0xFF7
 23243                           tblptrl	equ	0xFF6
 23244                           tablat	equ	0xFF5
 23245                           prodh	equ	0xFF4
 23246                           prodl	equ	0xFF3
 23247                           intcon	equ	0xFF2
 23248                           postinc0	equ	0xFEE
 23249                           plusw0	equ	0xFEB
 23250                           fsr0h	equ	0xFEA
 23251                           fsr0l	equ	0xFE9
 23252                           wreg	equ	0xFE8
 23253                           indf1	equ	0xFE7
 23254                           postinc1	equ	0xFE6
 23255                           postdec1	equ	0xFE5
 23256                           plusw1	equ	0xFE3
 23257                           fsr1h	equ	0xFE2
 23258                           fsr1l	equ	0xFE1
 23259                           indf2	equ	0xFDF
 23260                           postinc2	equ	0xFDE
 23261                           postdec2	equ	0xFDD
 23262                           plusw2	equ	0xFDB
 23263                           fsr2h	equ	0xFDA
 23264                           fsr2l	equ	0xFD9
 23265                           status	equ	0xFD8
 23266                           
 23267 ;; *************** function _MiApp_DiscardMessage *****************
 23268 ;; Defined at:
 23269 ;;		line 262 in file "../src/Bridge.c"
 23270 ;; Parameters:    Size  Location     Type
 23271 ;;		None
 23272 ;; Auto vars:     Size  Location     Type
 23273 ;;		None
 23274 ;; Return value:  Size  Location     Type
 23275 ;;                  1    wreg      void 
 23276 ;; Registers used:
 23277 ;;		cstack
 23278 ;; Tracked objects:
 23279 ;;		On entry : E/1
 23280 ;;		On exit  : F/1
 23281 ;;		Unchanged: 0/0
 23282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23287 ;;Total ram usage:        0 bytes
 23288 ;; Hardware stack levels used:    1
 23289 ;; Hardware stack levels required when called:    5
 23290 ;; This function calls:
 23291 ;;		_NetworkReleaseUserData
 23292 ;; This function is called by:
 23293 ;;		_main
 23294 ;;		_MiApp_SearchConnection
 23295 ;; This function uses a non-reentrant model
 23296 ;;
 23297                           
 23298                           	psect	text86
 23299  007C6C                     __ptext86:
 23300                           	opt stack 0
 23301  007C6C                     _MiApp_DiscardMessage:
 23302                           	opt stack 24
 23303                           
 23304                           ;Bridge.c: 264: UserMessageAvailable=0;
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;incstack = 0
 23308  007C6C  0101               	movlb	1	; () banked
 23309  007C6E  6BE0               	clrf	_UserMessageAvailable& (0+255),b
 23310                           
 23311                           ; BSR set to: 1
 23312                           ;Bridge.c: 265: NetworkReleaseUserData();
 23313  007C70  EF44  F03E         	goto	_NetworkReleaseUserData	;wreg free
 23314  007C74                     __end_of_MiApp_DiscardMessage:
 23315                           	opt stack 0
 23316                           tblptru	equ	0xFF8
 23317                           tblptrh	equ	0xFF7
 23318                           tblptrl	equ	0xFF6
 23319                           tablat	equ	0xFF5
 23320                           prodh	equ	0xFF4
 23321                           prodl	equ	0xFF3
 23322                           intcon	equ	0xFF2
 23323                           postinc0	equ	0xFEE
 23324                           plusw0	equ	0xFEB
 23325                           fsr0h	equ	0xFEA
 23326                           fsr0l	equ	0xFE9
 23327                           wreg	equ	0xFE8
 23328                           indf1	equ	0xFE7
 23329                           postinc1	equ	0xFE6
 23330                           postdec1	equ	0xFE5
 23331                           plusw1	equ	0xFE3
 23332                           fsr1h	equ	0xFE2
 23333                           fsr1l	equ	0xFE1
 23334                           indf2	equ	0xFDF
 23335                           postinc2	equ	0xFDE
 23336                           postdec2	equ	0xFDD
 23337                           plusw2	equ	0xFDB
 23338                           fsr2h	equ	0xFDA
 23339                           fsr2l	equ	0xFD9
 23340                           status	equ	0xFD8
 23341                           
 23342 ;; *************** function _NetworkReleaseUserData *****************
 23343 ;; Defined at:
 23344 ;;		line 353 in file "../NetworkManager.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;		None
 23347 ;; Auto vars:     Size  Location     Type
 23348 ;;		None
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  1    wreg      void 
 23351 ;; Registers used:
 23352 ;;		None
 23353 ;; Tracked objects:
 23354 ;;		On entry : F/1
 23355 ;;		On exit  : F/1
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23362 ;;Total ram usage:        0 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:    4
 23365 ;; This function calls:
 23366 ;;		Nothing
 23367 ;; This function is called by:
 23368 ;;		_MiApp_DiscardMessage
 23369 ;; This function uses a non-reentrant model
 23370 ;;
 23371                           
 23372                           	psect	text87
 23373  007C88                     __ptext87:
 23374                           	opt stack 0
 23375  007C88                     _NetworkReleaseUserData:
 23376                           	opt stack 24
 23377                           
 23378                           ; BSR set to: 1
 23379                           ;NetworkManager.c: 355: userDataAvailable=0;
 23380                           
 23381                           ; BSR set to: 1
 23382                           ;incstack = 0
 23383  007C88  6BE4               	clrf	_userDataAvailable& (0+255),b
 23384                           
 23385                           ; BSR set to: 1
 23386  007C8A  0012               	return		;funcret
 23387  007C8C                     __end_of_NetworkReleaseUserData:
 23388                           	opt stack 0
 23389                           tblptru	equ	0xFF8
 23390                           tblptrh	equ	0xFF7
 23391                           tblptrl	equ	0xFF6
 23392                           tablat	equ	0xFF5
 23393                           prodh	equ	0xFF4
 23394                           prodl	equ	0xFF3
 23395                           intcon	equ	0xFF2
 23396                           postinc0	equ	0xFEE
 23397                           plusw0	equ	0xFEB
 23398                           fsr0h	equ	0xFEA
 23399                           fsr0l	equ	0xFE9
 23400                           wreg	equ	0xFE8
 23401                           indf1	equ	0xFE7
 23402                           postinc1	equ	0xFE6
 23403                           postdec1	equ	0xFE5
 23404                           plusw1	equ	0xFE3
 23405                           fsr1h	equ	0xFE2
 23406                           fsr1l	equ	0xFE1
 23407                           indf2	equ	0xFDF
 23408                           postinc2	equ	0xFDE
 23409                           postdec2	equ	0xFDD
 23410                           plusw2	equ	0xFDB
 23411                           fsr2h	equ	0xFDA
 23412                           fsr2l	equ	0xFD9
 23413                           status	equ	0xFD8
 23414                           
 23415 ;; *************** function _MiApp_RequestData *****************
 23416 ;; Defined at:
 23417 ;;		line 432 in file "../src/Bridge.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;		None
 23420 ;; Auto vars:     Size  Location     Type
 23421 ;;		None
 23422 ;; Return value:  Size  Location     Type
 23423 ;;                  1    wreg      void 
 23424 ;; Registers used:
 23425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23426 ;; Tracked objects:
 23427 ;;		On entry : 0/0
 23428 ;;		On exit  : F/0
 23429 ;;		Unchanged: 0/0
 23430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23435 ;;Total ram usage:        0 bytes
 23436 ;; Hardware stack levels used:    1
 23437 ;; Hardware stack levels required when called:   12
 23438 ;; This function calls:
 23439 ;;		_NetworkIssueDataRequest
 23440 ;; This function is called by:
 23441 ;;		_main
 23442 ;; This function uses a non-reentrant model
 23443 ;;
 23444                           
 23445                           	psect	text88
 23446  007C8C                     __ptext88:
 23447                           	opt stack 0
 23448  007C8C                     _MiApp_RequestData:
 23449                           	opt stack 18
 23450                           
 23451                           ;Bridge.c: 434: NetworkIssueDataRequest();
 23452                           
 23453                           ; BSR set to: 1
 23454                           ;incstack = 0
 23455  007C8C  EF83  F031         	goto	_NetworkIssueDataRequest	;wreg free
 23456  007C90                     __end_of_MiApp_RequestData:
 23457                           	opt stack 0
 23458                           tblptru	equ	0xFF8
 23459                           tblptrh	equ	0xFF7
 23460                           tblptrl	equ	0xFF6
 23461                           tablat	equ	0xFF5
 23462                           prodh	equ	0xFF4
 23463                           prodl	equ	0xFF3
 23464                           intcon	equ	0xFF2
 23465                           postinc0	equ	0xFEE
 23466                           plusw0	equ	0xFEB
 23467                           fsr0h	equ	0xFEA
 23468                           fsr0l	equ	0xFE9
 23469                           wreg	equ	0xFE8
 23470                           indf1	equ	0xFE7
 23471                           postinc1	equ	0xFE6
 23472                           postdec1	equ	0xFE5
 23473                           plusw1	equ	0xFE3
 23474                           fsr1h	equ	0xFE2
 23475                           fsr1l	equ	0xFE1
 23476                           indf2	equ	0xFDF
 23477                           postinc2	equ	0xFDE
 23478                           postdec2	equ	0xFDD
 23479                           plusw2	equ	0xFDB
 23480                           fsr2h	equ	0xFDA
 23481                           fsr2l	equ	0xFD9
 23482                           status	equ	0xFD8
 23483                           
 23484 ;; *************** function _NetworkIssueDataRequest *****************
 23485 ;; Defined at:
 23486 ;;		line 419 in file "../NetworkManager.c"
 23487 ;; Parameters:    Size  Location     Type
 23488 ;;		None
 23489 ;; Auto vars:     Size  Location     Type
 23490 ;;  data           28   78[BANK0 ] unsigned char [28]
 23491 ;;  sz              2  106[BANK0 ] unsigned int 
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1    wreg      void 
 23494 ;; Registers used:
 23495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23496 ;; Tracked objects:
 23497 ;;		On entry : 0/0
 23498 ;;		On exit  : F/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23502 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23504 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23505 ;;Total ram usage:       30 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; Hardware stack levels required when called:   11
 23508 ;; This function calls:
 23509 ;;		_CoordinatorGenericAddress
 23510 ;;		_NetworkGetPANID
 23511 ;;		_NetworkGetParentAddress
 23512 ;;		_NetworkPrepareSendPacket
 23513 ;;		_RouterEvicted
 23514 ;;		_isNetworkSecurityEnabled
 23515 ;;		_radioUnicast
 23516 ;; This function is called by:
 23517 ;;		_MiApp_RequestData
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text89
 23522  006306                     __ptext89:
 23523                           	opt stack 0
 23524  006306                     _NetworkIssueDataRequest:
 23525                           	opt stack 18
 23526                           
 23527                           ;NetworkManager.c: 421: uint16_t sz;
 23528                           ;NetworkManager.c: 422: uint8_t data[sizeof(net_data_header_t)];
 23529                           ;NetworkManager.c: 423: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketRFDRequestData,(0),0);
 23530                           
 23531                           ; BSR set to: 0
 23532                           ;incstack = 0
 23533  006306  EC06  F03C         	call	_CoordinatorGenericAddress	;wreg free
 23534  00630A  CFE9 FFD9          	movff	fsr0l,fsr2l
 23535  00630E  CFEA FFDA          	movff	fsr0h,fsr2h
 23536  006312  EE00  F070         	lfsr	0,NetworkPrepareSendPacket@address
 23537  006316  0E07               	movlw	7
 23538  006318                     u22641:
 23539  006318  CFDB FFEB          	movff	plusw2,plusw0
 23540  00631C  06E8               	decf	wreg,f,c
 23541  00631E  E2FC               	bc	u22641
 23542  006320  0EAE               	movlw	low NetworkIssueDataRequest@data
 23543  006322  6F78               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 23544  006324  6B79               	clrf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 23545  006326  0E29               	movlw	41
 23546  006328  6F7A               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 23547  00632A  6B7B               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 23548  00632C  6B7C               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 23549  00632E  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 23550  006330  6B7D               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 23551  006332  EC31  F02D         	call	_NetworkPrepareSendPacket	;wreg free
 23552  006336  C070  F0CA         	movff	?_NetworkPrepareSendPacket,NetworkIssueDataRequest@sz
 23553  00633A  C071  F0CB         	movff	?_NetworkPrepareSendPacket+1,NetworkIssueDataRequest@sz+1
 23554                           
 23555                           ; BSR set to: 0
 23556                           ;NetworkManager.c: 424: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 23557  00633E  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 23558  006342  CFE9 FFD9          	movff	fsr0l,fsr2l
 23559  006346  CFEA FFDA          	movff	fsr0h,fsr2h
 23560  00634A  EE00  F09F         	lfsr	0,radioUnicast@dest
 23561  00634E  0E07               	movlw	7
 23562  006350                     u22651:
 23563  006350  CFDB FFEB          	movff	plusw2,plusw0
 23564  006354  06E8               	decf	wreg,f,c
 23565  006356  E2FC               	bc	u22651
 23566  006358  EC1D  F03E         	call	_NetworkGetPANID	;wreg free
 23567  00635C  C060  F0A7         	movff	?_NetworkGetPANID,radioUnicast@PANID
 23568  006360  C061  F0A8         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 23569  006364  0EAE               	movlw	low NetworkIssueDataRequest@data
 23570  006366  0100               	movlb	0	; () banked
 23571  006368  6FA9               	movwf	radioUnicast@data& (0+255),b
 23572  00636A  6BAA               	clrf	(radioUnicast@data+1)& (0+255),b
 23573  00636C  C0CA  F0AB         	movff	NetworkIssueDataRequest@sz,radioUnicast@datasize
 23574  006370  EC48  F03E         	call	_isNetworkSecurityEnabled	;wreg free
 23575  006374  0100               	movlb	0	; () banked
 23576  006376  6FAC               	movwf	radioUnicast@isSecure& (0+255),b
 23577  006378  ECB4  F037         	call	_radioUnicast	;wreg free
 23578  00637C  0900               	iorlw	0
 23579  00637E  A4D8               	btfss	status,2,c
 23580  006380  0012               	return	
 23581                           
 23582                           ; BSR set to: 0
 23583                           ;NetworkManager.c: 425: {
 23584                           ;NetworkManager.c: 426: RouterEvicted(NetworkGetParentAddress());
 23585  006382  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 23586  006386  CFE9 FFD9          	movff	fsr0l,fsr2l
 23587  00638A  CFEA FFDA          	movff	fsr0h,fsr2h
 23588  00638E  EE00  F08E         	lfsr	0,RouterEvicted@address
 23589  006392  0E07               	movlw	7
 23590  006394                     u22671:
 23591  006394  CFDB FFEB          	movff	plusw2,plusw0
 23592  006398  06E8               	decf	wreg,f,c
 23593  00639A  E2FC               	bc	u22671
 23594  00639C  EFE0  F02E         	goto	_RouterEvicted	;wreg free
 23595  0063A0                     __end_of_NetworkIssueDataRequest:
 23596                           	opt stack 0
 23597                           tblptru	equ	0xFF8
 23598                           tblptrh	equ	0xFF7
 23599                           tblptrl	equ	0xFF6
 23600                           tablat	equ	0xFF5
 23601                           prodh	equ	0xFF4
 23602                           prodl	equ	0xFF3
 23603                           intcon	equ	0xFF2
 23604                           postinc0	equ	0xFEE
 23605                           plusw0	equ	0xFEB
 23606                           fsr0h	equ	0xFEA
 23607                           fsr0l	equ	0xFE9
 23608                           wreg	equ	0xFE8
 23609                           indf1	equ	0xFE7
 23610                           postinc1	equ	0xFE6
 23611                           postdec1	equ	0xFE5
 23612                           plusw1	equ	0xFE3
 23613                           fsr1h	equ	0xFE2
 23614                           fsr1l	equ	0xFE1
 23615                           indf2	equ	0xFDF
 23616                           postinc2	equ	0xFDE
 23617                           postdec2	equ	0xFDD
 23618                           plusw2	equ	0xFDB
 23619                           fsr2h	equ	0xFDA
 23620                           fsr2l	equ	0xFD9
 23621                           status	equ	0xFD8
 23622                           
 23623 ;; *************** function _radioUnicast *****************
 23624 ;; Defined at:
 23625 ;;		line 129 in file "../src/Bridge.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  dest            8   63[BANK0 ] struct addr_t_def
 23628 ;;  PANID           2   71[BANK0 ] unsigned int 
 23629 ;;  data            2   73[BANK0 ] PTR unsigned char 
 23630 ;;		 -> NetworkIssueDataRequest@data(28), NetworkManagerProcessIncomingData@buffer(64), NetworkManagerTask@data(37), TMS
      +endDataToRFD@databuff(64), 
 23631 ;;		 -> TransportManagerTask@databuff(64), RxBuffer.Payload(127), RxBuffer(256), 
 23632 ;;  datasize        1   75[BANK0 ] unsigned char 
 23633 ;;  isSecure        1   76[BANK0 ] unsigned char 
 23634 ;; Auto vars:     Size  Location     Type
 23635 ;;  i               1   77[BANK0 ] unsigned char 
 23636 ;; Return value:  Size  Location     Type
 23637 ;;                  1    wreg      unsigned char 
 23638 ;; Registers used:
 23639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23640 ;; Tracked objects:
 23641 ;;		On entry : 0/0
 23642 ;;		On exit  : F/0
 23643 ;;		Unchanged: 0/0
 23644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23645 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23648 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23649 ;;Total ram usage:       15 bytes
 23650 ;; Hardware stack levels used:    1
 23651 ;; Hardware stack levels required when called:   10
 23652 ;; This function calls:
 23653 ;;		_SendPacket
 23654 ;; This function is called by:
 23655 ;;		_radioReceivedPacket
 23656 ;;		_TransportManagerTask
 23657 ;;		_TMSendFormedPacketToRFD
 23658 ;;		_NetworkManagerTask
 23659 ;;		_NetworkIssueDataRequest
 23660 ;; This function uses a non-reentrant model
 23661 ;;
 23662                           
 23663                           	psect	text90
 23664  006F68                     __ptext90:
 23665                           	opt stack 0
 23666  006F68                     _radioUnicast:
 23667                           	opt stack 16
 23668                           
 23669                           ;Bridge.c: 131: static addr_t addr;
 23670                           ;Bridge.c: 132: uint8_t i;
 23671                           ;Bridge.c: 133: addr=dest;
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;incstack = 0
 23675  006F68  EE20  F09F         	lfsr	2,radioUnicast@dest
 23676  006F6C  EE12  F0D5         	lfsr	1,radioUnicast@addr
 23677  006F70  0E07               	movlw	7
 23678  006F72                     u17431:
 23679  006F72  CFDB FFE3          	movff	plusw2,plusw1
 23680  006F76  06E8               	decf	wreg,f,c
 23681  006F78  E2FC               	bc	u17431
 23682                           
 23683                           ;Bridge.c: 134: TxIndex=0;
 23684  006F7A  6A46               	clrf	_TxIndex,c
 23685                           
 23686                           ;Bridge.c: 135: for(i=0;i<datasize;i++)
 23687  006F7C  0100               	movlb	0	; () banked
 23688  006F7E  6BAD               	clrf	radioUnicast@i& (0+255),b
 23689  006F80  D010               	goto	l12305
 23690  006F82                     l12299:
 23691                           
 23692                           ; BSR set to: 0
 23693                           ;Bridge.c: 136: {
 23694                           ;Bridge.c: 137: TxBuff[TxIndex++]=data[i];
 23695  006F82  51AD               	movf	radioUnicast@i& (0+255),w,b
 23696  006F84  25A9               	addwf	radioUnicast@data& (0+255),w,b
 23697  006F86  6ED9               	movwf	fsr2l,c
 23698  006F88  0E00               	movlw	0
 23699  006F8A  21AA               	addwfc	(radioUnicast@data+1)& (0+255),w,b
 23700  006F8C  6EDA               	movwf	fsr2h,c
 23701  006F8E  0E98               	movlw	low _TxBuff
 23702  006F90  2446               	addwf	_TxIndex,w,c
 23703  006F92  6EE1               	movwf	fsr1l,c
 23704  006F94  6AE2               	clrf	fsr1h,c
 23705  006F96  0E05               	movlw	high _TxBuff
 23706  006F98  22E2               	addwfc	fsr1h,f,c
 23707  006F9A  CFDF FFE7          	movff	indf2,indf1
 23708                           
 23709                           ; BSR set to: 0
 23710  006F9E  2A46               	incf	_TxIndex,f,c
 23711                           
 23712                           ; BSR set to: 0
 23713  006FA0  2BAD               	incf	radioUnicast@i& (0+255),f,b
 23714  006FA2                     l12305:
 23715                           
 23716                           ; BSR set to: 0
 23717  006FA2  51AB               	movf	radioUnicast@datasize& (0+255),w,b
 23718  006FA4  5DAD               	subwf	radioUnicast@i& (0+255),w,b
 23719  006FA6  E3ED               	bnc	l12299
 23720                           
 23721                           ; BSR set to: 0
 23722                           ;Bridge.c: 138: }
 23723                           ;Bridge.c: 139: return SendPacket(0,addr.bytes,PANID,0,isSecure);
 23724  006FA8  0ED5               	movlw	low radioUnicast@addr
 23725  006FAA  6F8F               	movwf	SendPacket@DestinationAddress& (0+255),b
 23726  006FAC  0E02               	movlw	high radioUnicast@addr
 23727  006FAE  6F90               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 23728  006FB0  C0A7  F091         	movff	radioUnicast@PANID,SendPacket@destinationPANID
 23729  006FB4  C0A8  F092         	movff	radioUnicast@PANID+1,SendPacket@destinationPANID+1
 23730  006FB8  0E00               	movlw	0
 23731  006FBA  6B93               	clrf	SendPacket@isCommand& (0+255),b
 23732  006FBC  C0AC  F094         	movff	radioUnicast@isSecure,SendPacket@SecurityEnabled
 23733  006FC0  EF34  F031         	goto	_SendPacket
 23734  006FC4                     __end_of_radioUnicast:
 23735                           	opt stack 0
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           postinc0	equ	0xFEE
 23744                           plusw0	equ	0xFEB
 23745                           fsr0h	equ	0xFEA
 23746                           fsr0l	equ	0xFE9
 23747                           wreg	equ	0xFE8
 23748                           indf1	equ	0xFE7
 23749                           postinc1	equ	0xFE6
 23750                           postdec1	equ	0xFE5
 23751                           plusw1	equ	0xFE3
 23752                           fsr1h	equ	0xFE2
 23753                           fsr1l	equ	0xFE1
 23754                           indf2	equ	0xFDF
 23755                           postinc2	equ	0xFDE
 23756                           postdec2	equ	0xFDD
 23757                           plusw2	equ	0xFDB
 23758                           fsr2h	equ	0xFDA
 23759                           fsr2l	equ	0xFD9
 23760                           status	equ	0xFD8
 23761                           
 23762 ;; *************** function _SendPacket *****************
 23763 ;; Defined at:
 23764 ;;		line 67 in file "../src/Bridge.c"
 23765 ;; Parameters:    Size  Location     Type
 23766 ;;  Broadcast       1    wreg     unsigned char 
 23767 ;;  DestinationA    2   47[BANK0 ] PTR unsigned char 
 23768 ;;		 -> radioUnicast@addr(8), radioBroadcast@addr(8), 
 23769 ;;  destinationP    2   49[BANK0 ] unsigned int 
 23770 ;;  isCommand       1   51[BANK0 ] unsigned char 
 23771 ;;  SecurityEnab    1   52[BANK0 ] unsigned char 
 23772 ;; Auto vars:     Size  Location     Type
 23773 ;;  Broadcast       1   55[BANK0 ] unsigned char 
 23774 ;;  tParam          7   56[BANK0 ] struct .
 23775 ;;  status          1   54[BANK0 ] unsigned char 
 23776 ;; Return value:  Size  Location     Type
 23777 ;;                  1    wreg      unsigned char 
 23778 ;; Registers used:
 23779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23780 ;; Tracked objects:
 23781 ;;		On entry : F/0
 23782 ;;		On exit  : F/0
 23783 ;;		Unchanged: 0/0
 23784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23785 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23786 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23788 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23789 ;;Total ram usage:       16 bytes
 23790 ;; Hardware stack levels used:    1
 23791 ;; Hardware stack levels required when called:    9
 23792 ;; This function calls:
 23793 ;;		_MiMAC_SendPacket
 23794 ;; This function is called by:
 23795 ;;		_radioBroadcast
 23796 ;;		_radioUnicast
 23797 ;; This function uses a non-reentrant model
 23798 ;;
 23799                           
 23800                           	psect	text91
 23801  006268                     __ptext91:
 23802                           	opt stack 0
 23803  006268                     _SendPacket:
 23804                           	opt stack 16
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;incstack = 0
 23808                           ;SendPacket@Broadcast stored from wreg
 23809  006268  6F97               	movwf	SendPacket@Broadcast& (0+255),b
 23810                           
 23811                           ;Bridge.c: 69: MAC_TRANS_PARAM tParam;
 23812                           ;Bridge.c: 70: bool status;
 23813                           ;Bridge.c: 72: tParam.flags.Val = 0;
 23814  00626A  0100               	movlb	0	; () banked
 23815  00626C  6B98               	clrf	SendPacket@tParam& (0+255),b
 23816                           
 23817                           ; BSR set to: 0
 23818                           ;Bridge.c: 73: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 23819  00626E  5193               	movf	SendPacket@isCommand& (0+255),w,b
 23820  006270  E003               	bz	u16920
 23821  006272  6B95               	clrf	??_SendPacket& (0+255),b
 23822  006274  2B95               	incf	??_SendPacket& (0+255),f,b
 23823  006276  D002               	goto	u16938
 23824  006278                     u16920:
 23825  006278  0100               	movlb	0	; () banked
 23826  00627A  6B95               	clrf	??_SendPacket& (0+255),b
 23827  00627C                     u16938:
 23828  00627C  5198               	movf	SendPacket@tParam& (0+255),w,b
 23829  00627E  1995               	xorwf	??_SendPacket& (0+255),w,b
 23830  006280  0BFC               	andlw	-4
 23831  006282  1995               	xorwf	??_SendPacket& (0+255),w,b
 23832  006284  6F98               	movwf	SendPacket@tParam& (0+255),b
 23833                           
 23834                           ;Bridge.c: 74: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 23835  006286  5197               	movf	SendPacket@Broadcast& (0+255),w,b
 23836  006288  E103               	bnz	u16940
 23837  00628A  6B95               	clrf	??_SendPacket& (0+255),b
 23838  00628C  2B95               	incf	??_SendPacket& (0+255),f,b
 23839  00628E  D002               	goto	u16958
 23840  006290                     u16940:
 23841  006290  0100               	movlb	0	; () banked
 23842  006292  6B95               	clrf	??_SendPacket& (0+255),b
 23843  006294                     u16958:
 23844  006294  3B95               	swapf	??_SendPacket& (0+255),f,b
 23845  006296  4795               	rlncf	??_SendPacket& (0+255),f,b
 23846  006298  5198               	movf	SendPacket@tParam& (0+255),w,b
 23847  00629A  1995               	xorwf	??_SendPacket& (0+255),w,b
 23848  00629C  0BDF               	andlw	-33
 23849  00629E  1995               	xorwf	??_SendPacket& (0+255),w,b
 23850  0062A0  6F98               	movwf	SendPacket@tParam& (0+255),b
 23851                           
 23852                           ; BSR set to: 0
 23853                           ;Bridge.c: 75: tParam.flags.bits.broadcast = Broadcast;
 23854  0062A2  B197               	btfsc	SendPacket@Broadcast& (0+255),0,b
 23855  0062A4  D002               	bra	u16965
 23856  0062A6  9598               	bcf	SendPacket@tParam& (0+255),2,b
 23857  0062A8  D002               	bra	u16966
 23858  0062AA                     u16965:
 23859  0062AA  0100               	movlb	0	; () banked
 23860  0062AC  8598               	bsf	SendPacket@tParam& (0+255),2,b
 23861  0062AE                     u16966:
 23862                           
 23863                           ; BSR set to: 0
 23864                           ;Bridge.c: 76: tParam.flags.bits.secEn = SecurityEnabled;
 23865  0062AE  B194               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 23866  0062B0  D002               	bra	u16975
 23867  0062B2  9798               	bcf	SendPacket@tParam& (0+255),3,b
 23868  0062B4  D002               	bra	u16976
 23869  0062B6                     u16975:
 23870  0062B6  0100               	movlb	0	; () banked
 23871  0062B8  8798               	bsf	SendPacket@tParam& (0+255),3,b
 23872  0062BA                     u16976:
 23873                           
 23874                           ; BSR set to: 0
 23875                           ;Bridge.c: 78: tParam.altSrcAddr = 0;
 23876  0062BA  6B9C               	clrf	(SendPacket@tParam+4)& (0+255),b
 23877                           
 23878                           ; BSR set to: 0
 23879                           ;Bridge.c: 79: tParam.altDestAddr = (Broadcast) ? 1 : 0;
 23880  0062BC  5197               	movf	SendPacket@Broadcast& (0+255),w,b
 23881  0062BE  0E01               	movlw	1
 23882  0062C0  B4D8               	btfsc	status,2,c
 23883  0062C2  0E00               	movlw	0
 23884  0062C4  6F9B               	movwf	(SendPacket@tParam+3)& (0+255),b
 23885                           
 23886                           ; BSR set to: 0
 23887                           ;Bridge.c: 85: tParam.flags.bits.destPrsnt = 1;
 23888  0062C6  8D98               	bsf	SendPacket@tParam& (0+255),6,b
 23889                           
 23890                           ; BSR set to: 0
 23891                           ;Bridge.c: 98: tParam.flags.bits.sourcePrsnt = 1;
 23892  0062C8  8F98               	bsf	SendPacket@tParam& (0+255),7,b
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;Bridge.c: 101: tParam.DestAddress = DestinationAddress;
 23896  0062CA  C08F  F099         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 23897  0062CE  C090  F09A         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 23898                           
 23899                           ; BSR set to: 0
 23900                           ;Bridge.c: 102: tParam.DestPANID.Val = destinationPANID;
 23901  0062D2  C091  F09D         	movff	SendPacket@destinationPANID,SendPacket@tParam+5
 23902  0062D6  C092  F09E         	movff	SendPacket@destinationPANID+1,SendPacket@tParam+6
 23903                           
 23904                           ; BSR set to: 0
 23905                           ;Bridge.c: 104: status = MiMAC_SendPacket(tParam, TxBuff, TxIndex);
 23906  0062DA  EE20  F098         	lfsr	2,SendPacket@tParam
 23907  0062DE  EE00  F074         	lfsr	0,MiMAC_SendPacket@transParam
 23908  0062E2  0E06               	movlw	6
 23909  0062E4                     u17001:
 23910  0062E4  CFDB FFEB          	movff	plusw2,plusw0
 23911  0062E8  06E8               	decf	wreg,f,c
 23912  0062EA  E2FC               	bc	u17001
 23913  0062EC  0E98               	movlw	low _TxBuff
 23914  0062EE  6F7B               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 23915  0062F0  0E05               	movlw	high _TxBuff
 23916  0062F2  6F7C               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 23917  0062F4  C046  F07D         	movff	_TxIndex,MiMAC_SendPacket@MACPayloadLen
 23918  0062F8  ECC1  F008         	call	_MiMAC_SendPacket	;wreg free
 23919  0062FC  0100               	movlb	0	; () banked
 23920  0062FE  6F96               	movwf	SendPacket@status& (0+255),b
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;Bridge.c: 105: TxIndex = 0;
 23924  006300  6A46               	clrf	_TxIndex,c
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;Bridge.c: 107: return status;
 23928  006302  5196               	movf	SendPacket@status& (0+255),w,b
 23929                           
 23930                           ; BSR set to: 0
 23931  006304  0012               	return		;funcret
 23932  006306                     __end_of_SendPacket:
 23933                           	opt stack 0
 23934                           tblptru	equ	0xFF8
 23935                           tblptrh	equ	0xFF7
 23936                           tblptrl	equ	0xFF6
 23937                           tablat	equ	0xFF5
 23938                           prodh	equ	0xFF4
 23939                           prodl	equ	0xFF3
 23940                           intcon	equ	0xFF2
 23941                           postinc0	equ	0xFEE
 23942                           plusw0	equ	0xFEB
 23943                           fsr0h	equ	0xFEA
 23944                           fsr0l	equ	0xFE9
 23945                           wreg	equ	0xFE8
 23946                           indf1	equ	0xFE7
 23947                           postinc1	equ	0xFE6
 23948                           postdec1	equ	0xFE5
 23949                           plusw1	equ	0xFE3
 23950                           fsr1h	equ	0xFE2
 23951                           fsr1l	equ	0xFE1
 23952                           indf2	equ	0xFDF
 23953                           postinc2	equ	0xFDE
 23954                           postdec2	equ	0xFDD
 23955                           plusw2	equ	0xFDB
 23956                           fsr2h	equ	0xFDA
 23957                           fsr2l	equ	0xFD9
 23958                           status	equ	0xFD8
 23959                           
 23960 ;; *************** function _MiMAC_SendPacket *****************
 23961 ;; Defined at:
 23962 ;;		line 789 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  transParam      7   20[BANK0 ] struct .
 23965 ;;  MACPayload      2   27[BANK0 ] PTR unsigned char 
 23966 ;;		 -> TxBuff(64), 
 23967 ;;  MACPayloadLe    1   29[BANK0 ] unsigned char 
 23968 ;; Auto vars:     Size  Location     Type
 23969 ;;  t2              4   39[BANK0 ] struct MIWI_TICK_t
 23970 ;;  t1              4   35[BANK0 ] struct MIWI_TICK_t
 23971 ;;  loc             1   46[BANK0 ] unsigned char 
 23972 ;;  i               1   45[BANK0 ] unsigned char 
 23973 ;;  headerLength    1   44[BANK0 ] unsigned char 
 23974 ;;  IntraPAN        1   43[BANK0 ] unsigned char 
 23975 ;; Return value:  Size  Location     Type
 23976 ;;                  1    wreg      unsigned char 
 23977 ;; Registers used:
 23978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23979 ;; Tracked objects:
 23980 ;;		On entry : F/0
 23981 ;;		On exit  : 0/0
 23982 ;;		Unchanged: 0/0
 23983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23984 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23985 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23986 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23987 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23988 ;;Total ram usage:       27 bytes
 23989 ;; Hardware stack levels used:    1
 23990 ;; Hardware stack levels required when called:    8
 23991 ;; This function calls:
 23992 ;;		_InitMRF24J40
 23993 ;;		_MiMAC_SetAltAddress
 23994 ;;		_MiWi_TickGetMs
 23995 ;;		_PHYSetLongRAMAddr
 23996 ;;		_PHYSetShortRAMAddr
 23997 ;; This function is called by:
 23998 ;;		_SendPacket
 23999 ;; This function uses a non-reentrant model
 24000 ;;
 24001                           
 24002                           	psect	text92
 24003  001182                     __ptext92:
 24004                           	opt stack 0
 24005  001182                     _MiMAC_SendPacket:
 24006                           	opt stack 16
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;drv_mrf_miwi_mesh_24j40.c: 793: uint8_t headerLength;
 24010                           ;drv_mrf_miwi_mesh_24j40.c: 794: uint8_t loc = 0;
 24011                           
 24012                           ; BSR set to: 0
 24013                           ;incstack = 0
 24014  001182  6B8E               	clrf	MiMAC_SendPacket@loc& (0+255),b
 24015                           
 24016                           ;drv_mrf_miwi_mesh_24j40.c: 795: uint8_t i = 0;
 24017  001184  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24018                           
 24019                           ;drv_mrf_miwi_mesh_24j40.c: 797: bool IntraPAN;
 24020                           ;drv_mrf_miwi_mesh_24j40.c: 799: MIWI_TICK t1, t2;
 24021                           ;drv_mrf_miwi_mesh_24j40.c: 802: if( transParam.flags.bits.broadcast )
 24022  001186  A574               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 24023  001188  D002               	goto	l11729
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;drv_mrf_miwi_mesh_24j40.c: 803: {
 24027                           ;drv_mrf_miwi_mesh_24j40.c: 804: transParam.altDestAddr = 1;
 24028  00118A  0E01               	movlw	1
 24029  00118C  6F77               	movwf	(MiMAC_SendPacket@transParam+3)& (0+255),b
 24030  00118E                     l11729:
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;drv_mrf_miwi_mesh_24j40.c: 805: }
 24034                           ;drv_mrf_miwi_mesh_24j40.c: 807: if( transParam.flags.bits.secEn )
 24035  00118E  B774               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;drv_mrf_miwi_mesh_24j40.c: 808: {
 24039                           ;drv_mrf_miwi_mesh_24j40.c: 809: transParam.altSrcAddr = 0;
 24040  001190  6B78               	clrf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 24041                           
 24042                           ; BSR set to: 0
 24043                           ;drv_mrf_miwi_mesh_24j40.c: 810: }
 24044                           ;drv_mrf_miwi_mesh_24j40.c: 836: if( transParam.flags.bits.packetType == 0x01 )
 24045  001192  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 24046  001194  0B03               	andlw	3
 24047  001196  06E8               	decf	wreg,f,c
 24048  001198  E102               	bnz	l11737
 24049                           
 24050                           ; BSR set to: 0
 24051                           ;drv_mrf_miwi_mesh_24j40.c: 837: {
 24052                           ;drv_mrf_miwi_mesh_24j40.c: 838: i = 0x03;
 24053  00119A  0E03               	movlw	3
 24054  00119C  D004               	goto	L21
 24055  00119E                     l11737:
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;drv_mrf_miwi_mesh_24j40.c: 840: else if( transParam.flags.bits.packetType == 0x00)
 24059  00119E  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 24060  0011A0  0B03               	andlw	3
 24061  0011A2  E102               	bnz	l11741
 24062                           
 24063                           ; BSR set to: 0
 24064                           ;drv_mrf_miwi_mesh_24j40.c: 841: {
 24065                           ;drv_mrf_miwi_mesh_24j40.c: 842: i = 0x01;
 24066  0011A4  0E01               	movlw	1
 24067  0011A6                     L21:
 24068  0011A6  6F8D               	movwf	MiMAC_SendPacket@i& (0+255),b
 24069  0011A8                     l11741:
 24070                           
 24071                           ; BSR set to: 0
 24072                           ;drv_mrf_miwi_mesh_24j40.c: 843: }
 24073                           ;drv_mrf_miwi_mesh_24j40.c: 848: if( (transParam.DestPANID.Val == MAC_PANID) && (MAC_PAN
      +                          ID != 0xFFFF) )
 24074  0011A8  5051               	movf	_MAC_PANID,w,c
 24075  0011AA  1979               	xorwf	(MiMAC_SendPacket@transParam+5)& (0+255),w,b
 24076  0011AC  E10D               	bnz	l11751
 24077  0011AE  5052               	movf	_MAC_PANID+1,w,c
 24078  0011B0  197A               	xorwf	(MiMAC_SendPacket@transParam+6)& (0+255),w,b
 24079  0011B2  E10A               	bnz	l11751
 24080                           
 24081                           ; BSR set to: 0
 24082  0011B4  2851               	incf	_MAC_PANID,w,c
 24083  0011B6  E102               	bnz	u16440
 24084  0011B8  2852               	incf	_MAC_PANID+1,w,c
 24085  0011BA  E006               	bz	l11751
 24086  0011BC                     u16440:
 24087                           
 24088                           ; BSR set to: 0
 24089                           ;drv_mrf_miwi_mesh_24j40.c: 850: {
 24090                           ;drv_mrf_miwi_mesh_24j40.c: 851: headerLength = 5;
 24091  0011BC  0E05               	movlw	5
 24092  0011BE  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 24093                           
 24094                           ; BSR set to: 0
 24095                           ;drv_mrf_miwi_mesh_24j40.c: 852: i |= 0x40;
 24096  0011C0  8D8D               	bsf	MiMAC_SendPacket@i& (0+255),6,b
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;drv_mrf_miwi_mesh_24j40.c: 854: IntraPAN = 1;
 24100  0011C2  0E01               	movlw	1
 24101  0011C4  6F8B               	movwf	MiMAC_SendPacket@IntraPAN& (0+255),b
 24102                           
 24103                           ;drv_mrf_miwi_mesh_24j40.c: 856: }
 24104  0011C6  D003               	goto	l814
 24105  0011C8                     l11751:
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;drv_mrf_miwi_mesh_24j40.c: 859: else
 24109                           ;drv_mrf_miwi_mesh_24j40.c: 860: {
 24110                           ;drv_mrf_miwi_mesh_24j40.c: 861: headerLength = 7;
 24111  0011C8  0E07               	movlw	7
 24112  0011CA  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 24113                           
 24114                           ; BSR set to: 0
 24115                           ;drv_mrf_miwi_mesh_24j40.c: 862: IntraPAN = 0;
 24116  0011CC  6B8B               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 24117  0011CE                     l814:
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;drv_mrf_miwi_mesh_24j40.c: 863: }
 24121                           ;drv_mrf_miwi_mesh_24j40.c: 866: if( transParam.altDestAddr )
 24122  0011CE  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 24123                           
 24124                           ; BSR set to: 0
 24125                           ;drv_mrf_miwi_mesh_24j40.c: 867: {
 24126                           ;drv_mrf_miwi_mesh_24j40.c: 868: headerLength += 2;
 24127  0011D0  0E02               	movlw	2
 24128  0011D2  B4D8               	btfsc	status,2,c
 24129                           
 24130                           ; BSR set to: 0
 24131                           ;drv_mrf_miwi_mesh_24j40.c: 870: else
 24132                           ;drv_mrf_miwi_mesh_24j40.c: 871: {
 24133                           ;drv_mrf_miwi_mesh_24j40.c: 872: headerLength += 8;
 24134  0011D4  0E08               	movlw	8
 24135                           
 24136                           ;drv_mrf_miwi_mesh_24j40.c: 869: }
 24137  0011D6  278C               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 24138                           
 24139                           ; BSR set to: 0
 24140                           ;drv_mrf_miwi_mesh_24j40.c: 873: }
 24141                           ;drv_mrf_miwi_mesh_24j40.c: 875: if( transParam.altSrcAddr )
 24142  0011D8  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 24143                           
 24144                           ; BSR set to: 0
 24145                           ;drv_mrf_miwi_mesh_24j40.c: 876: {
 24146                           ;drv_mrf_miwi_mesh_24j40.c: 877: headerLength += 2;
 24147  0011DA  0E02               	movlw	2
 24148  0011DC  B4D8               	btfsc	status,2,c
 24149                           
 24150                           ; BSR set to: 0
 24151                           ;drv_mrf_miwi_mesh_24j40.c: 879: else
 24152                           ;drv_mrf_miwi_mesh_24j40.c: 880: {
 24153                           ;drv_mrf_miwi_mesh_24j40.c: 881: headerLength += 8;
 24154  0011DE  0E08               	movlw	8
 24155                           
 24156                           ;drv_mrf_miwi_mesh_24j40.c: 878: }
 24157  0011E0  278C               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;drv_mrf_miwi_mesh_24j40.c: 882: }
 24161                           ;drv_mrf_miwi_mesh_24j40.c: 885: if( transParam.flags.bits.secEn )
 24162  0011E2  B774               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
 24163                           
 24164                           ; BSR set to: 0
 24165                           ;drv_mrf_miwi_mesh_24j40.c: 886: {
 24166                           ;drv_mrf_miwi_mesh_24j40.c: 887: i |= 0x08;
 24167  0011E4  878D               	bsf	MiMAC_SendPacket@i& (0+255),3,b
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;drv_mrf_miwi_mesh_24j40.c: 888: }
 24171                           ;drv_mrf_miwi_mesh_24j40.c: 891: if( transParam.flags.bits.ackReq && transParam.flags.bi
      +                          ts.broadcast == 0 )
 24172  0011E6  BB74               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 24173                           
 24174                           ; BSR set to: 0
 24175  0011E8  B574               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 24176  0011EA  D001               	goto	l11775
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;drv_mrf_miwi_mesh_24j40.c: 892: {
 24180                           ;drv_mrf_miwi_mesh_24j40.c: 893: i |= 0x20;
 24181  0011EC  8B8D               	bsf	MiMAC_SendPacket@i& (0+255),5,b
 24182  0011EE                     l11775:
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;drv_mrf_miwi_mesh_24j40.c: 894: }
 24186                           ;drv_mrf_miwi_mesh_24j40.c: 897: if( transParam.flags.bits.packetType == 0x03)
 24187  0011EE  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 24188  0011F0  0B03               	andlw	3
 24189  0011F2  0A03               	xorlw	3
 24190  0011F4  E107               	bnz	l11785
 24191                           
 24192                           ; BSR set to: 0
 24193                           ;drv_mrf_miwi_mesh_24j40.c: 898: {
 24194                           ;drv_mrf_miwi_mesh_24j40.c: 899: i = 0x00;
 24195  0011F6  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24196                           
 24197                           ; BSR set to: 0
 24198                           ;drv_mrf_miwi_mesh_24j40.c: 900: headerLength = 7;
 24199  0011F8  0E07               	movlw	7
 24200  0011FA  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 24201                           
 24202                           ; BSR set to: 0
 24203                           ;drv_mrf_miwi_mesh_24j40.c: 902: IntraPAN = 0;
 24204  0011FC  6B8B               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 24205                           
 24206                           ;drv_mrf_miwi_mesh_24j40.c: 904: transParam.altSrcAddr = 1;
 24207  0011FE  0E01               	movlw	1
 24208  001200  6F78               	movwf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;drv_mrf_miwi_mesh_24j40.c: 905: transParam.flags.bits.ackReq = 0;
 24212  001202  9B74               	bcf	MiMAC_SendPacket@transParam& (0+255),5,b
 24213  001204                     l11785:
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;drv_mrf_miwi_mesh_24j40.c: 906: }
 24217                           ;drv_mrf_miwi_mesh_24j40.c: 909: PHYSetLongRAMAddr(loc++, headerLength);
 24218  001204  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24219  001206  6B62               	clrf	PHYSetLongRAMAddr@address& (0+255),b
 24220  001208  C08C  F064         	movff	MiMAC_SendPacket@headerLength,PHYSetLongRAMAddr@value
 24221  00120C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24222  001210  0100               	movlb	0	; () banked
 24223  001212  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;drv_mrf_miwi_mesh_24j40.c: 912: if( transParam.flags.bits.secEn )
 24227  001214  A774               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 24228  001216  D00C               	goto	l11795
 24229                           
 24230                           ; BSR set to: 0
 24231                           ;drv_mrf_miwi_mesh_24j40.c: 913: {
 24232                           ;drv_mrf_miwi_mesh_24j40.c: 914: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen +
      +                           5);
 24233  001218  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24234  00121C  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24235  00121E  518C               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
 24236  001220  257D               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 24237  001222  0F05               	addlw	5
 24238  001224  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24239  001226  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24240  00122A                     l11793:
 24241  00122A  0100               	movlb	0	; () banked
 24242  00122C  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24243                           
 24244                           ;drv_mrf_miwi_mesh_24j40.c: 915: }
 24245  00122E  D009               	goto	l11799
 24246  001230                     l11795:
 24247                           
 24248                           ; BSR set to: 0
 24249                           ;drv_mrf_miwi_mesh_24j40.c: 916: else
 24250                           ;drv_mrf_miwi_mesh_24j40.c: 918: {
 24251                           ;drv_mrf_miwi_mesh_24j40.c: 919: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 24252  001230  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24253  001234  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24254  001236  518C               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
 24255  001238  257D               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 24256  00123A  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24257  00123C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24258  001240  D7F4               	goto	l11793
 24259  001242                     l11799:
 24260                           
 24261                           ; BSR set to: 0
 24262                           ;drv_mrf_miwi_mesh_24j40.c: 920: }
 24263                           ;drv_mrf_miwi_mesh_24j40.c: 923: PHYSetLongRAMAddr(loc++, i);
 24264  001242  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24265  001246  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24266  001248  C08D  F064         	movff	MiMAC_SendPacket@i,PHYSetLongRAMAddr@value
 24267  00124C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24268  001250  0100               	movlb	0	; () banked
 24269  001252  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24270                           
 24271                           ; BSR set to: 0
 24272                           ;drv_mrf_miwi_mesh_24j40.c: 926: if( transParam.flags.bits.packetType == 0x03 )
 24273  001254  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 24274  001256  0B03               	andlw	3
 24275  001258  0A03               	xorlw	3
 24276  00125A  E112               	bnz	l11809
 24277                           
 24278                           ; BSR set to: 0
 24279                           ;drv_mrf_miwi_mesh_24j40.c: 927: {
 24280                           ;drv_mrf_miwi_mesh_24j40.c: 928: PHYSetLongRAMAddr(loc++, 0x80);
 24281  00125C  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24282  001260  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24283  001262  0E80               	movlw	128
 24284  001264  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24285  001266  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24286  00126A  0100               	movlb	0	; () banked
 24287  00126C  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24288                           
 24289                           ; BSR set to: 0
 24290                           ;drv_mrf_miwi_mesh_24j40.c: 930: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 24291  00126E  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24292  001272  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24293  001274  C040  F064         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 24294  001278  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24295  00127C  2A40               	incf	_IEEESeqNum,f,c
 24296  00127E  D077               	goto	L25
 24297  001280                     l11809:
 24298                           
 24299                           ; BSR set to: 0
 24300                           ;drv_mrf_miwi_mesh_24j40.c: 932: else
 24301                           ;drv_mrf_miwi_mesh_24j40.c: 933: {
 24302                           ;drv_mrf_miwi_mesh_24j40.c: 934: if( transParam.altDestAddr && transParam.altSrcAddr )
 24303  001280  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 24304  001282  E00C               	bz	l11817
 24305                           
 24306                           ; BSR set to: 0
 24307  001284  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 24308  001286  E00A               	bz	l11817
 24309                           
 24310                           ; BSR set to: 0
 24311                           ;drv_mrf_miwi_mesh_24j40.c: 935: {
 24312                           ;drv_mrf_miwi_mesh_24j40.c: 936: PHYSetLongRAMAddr(loc++, 0x88);
 24313  001288  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24314  00128C  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24315  00128E  0E88               	movlw	136
 24316  001290  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24317  001292  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24318  001296                     l11815:
 24319  001296  0100               	movlb	0	; () banked
 24320  001298  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24321                           
 24322                           ;drv_mrf_miwi_mesh_24j40.c: 937: }
 24323  00129A  D020               	goto	l11837
 24324  00129C                     l11817:
 24325                           
 24326                           ; BSR set to: 0
 24327                           ;drv_mrf_miwi_mesh_24j40.c: 938: else if( transParam.altDestAddr && transParam.altSrcAdd
      +                          r == 0 )
 24328  00129C  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 24329  00129E  E00A               	bz	l11825
 24330                           
 24331                           ; BSR set to: 0
 24332  0012A0  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 24333  0012A2  E108               	bnz	l11825
 24334                           
 24335                           ; BSR set to: 0
 24336                           ;drv_mrf_miwi_mesh_24j40.c: 939: {
 24337                           ;drv_mrf_miwi_mesh_24j40.c: 940: PHYSetLongRAMAddr(loc++, 0xC8);
 24338  0012A4  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24339  0012A8  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24340  0012AA  0EC8               	movlw	200
 24341  0012AC  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24342  0012AE  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24343  0012B2  D7F1               	goto	l11815
 24344  0012B4                     l11825:
 24345                           
 24346                           ; BSR set to: 0
 24347                           ;drv_mrf_miwi_mesh_24j40.c: 942: else if( transParam.altDestAddr == 0 && transParam.altS
      +                          rcAddr == 1 )
 24348  0012B4  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 24349  0012B6  E10A               	bnz	l11833
 24350                           
 24351                           ; BSR set to: 0
 24352  0012B8  0578               	decf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 24353  0012BA  E108               	bnz	l11833
 24354                           
 24355                           ; BSR set to: 0
 24356                           ;drv_mrf_miwi_mesh_24j40.c: 943: {
 24357                           ;drv_mrf_miwi_mesh_24j40.c: 944: PHYSetLongRAMAddr(loc++, 0x8C);
 24358  0012BC  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24359  0012C0  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24360  0012C2  0E8C               	movlw	140
 24361  0012C4  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24362  0012C6  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24363  0012CA  D7E5               	goto	l11815
 24364  0012CC                     l11833:
 24365                           
 24366                           ; BSR set to: 0
 24367                           ;drv_mrf_miwi_mesh_24j40.c: 946: else
 24368                           ;drv_mrf_miwi_mesh_24j40.c: 947: {
 24369                           ;drv_mrf_miwi_mesh_24j40.c: 948: PHYSetLongRAMAddr(loc++, 0xCC);
 24370  0012CC  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24371  0012D0  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24372  0012D2  0ECC               	movlw	204
 24373  0012D4  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24374  0012D6  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24375  0012DA  D7DD               	goto	l11815
 24376  0012DC                     l11837:
 24377                           
 24378                           ; BSR set to: 0
 24379                           ;drv_mrf_miwi_mesh_24j40.c: 949: }
 24380                           ;drv_mrf_miwi_mesh_24j40.c: 952: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 24381  0012DC  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24382  0012E0  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24383  0012E2  C040  F064         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 24384  0012E6  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24385  0012EA  2A40               	incf	_IEEESeqNum,f,c
 24386  0012EC  0100               	movlb	0	; () banked
 24387  0012EE  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;drv_mrf_miwi_mesh_24j40.c: 955: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 24391  0012F0  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24392  0012F4  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24393  0012F6  C079  F064         	movff	MiMAC_SendPacket@transParam+5,PHYSetLongRAMAddr@value
 24394  0012FA  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24395  0012FE  0100               	movlb	0	; () banked
 24396  001300  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24397                           
 24398                           ;drv_mrf_miwi_mesh_24j40.c: 956: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 24399  001302  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24400  001306  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24401  001308  C07A  F064         	movff	MiMAC_SendPacket@transParam+6,PHYSetLongRAMAddr@value
 24402  00130C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24403  001310  0100               	movlb	0	; () banked
 24404  001312  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24405                           
 24406                           ; BSR set to: 0
 24407                           ;drv_mrf_miwi_mesh_24j40.c: 959: if( transParam.flags.bits.broadcast )
 24408  001314  A574               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 24409  001316  D00F               	goto	l11853
 24410                           
 24411                           ; BSR set to: 0
 24412                           ;drv_mrf_miwi_mesh_24j40.c: 960: {
 24413                           ;drv_mrf_miwi_mesh_24j40.c: 961: PHYSetLongRAMAddr(loc++, 0xFF);
 24414  001318  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24415  00131C  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24416  00131E  6964               	setf	PHYSetLongRAMAddr@value& (0+255),b
 24417  001320  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24418  001324  0100               	movlb	0	; () banked
 24419  001326  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24420                           
 24421                           ; BSR set to: 0
 24422                           ;drv_mrf_miwi_mesh_24j40.c: 962: PHYSetLongRAMAddr(loc++, 0xFF);
 24423  001328  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24424  00132C  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24425  00132E  6964               	setf	PHYSetLongRAMAddr@value& (0+255),b
 24426  001330  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24427  001334  D01C               	goto	L25
 24428  001336                     l11853:
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;drv_mrf_miwi_mesh_24j40.c: 964: else
 24432                           ;drv_mrf_miwi_mesh_24j40.c: 965: {
 24433                           ;drv_mrf_miwi_mesh_24j40.c: 966: if( transParam.altDestAddr )
 24434  001336  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 24435  001338  E01D               	bz	l834
 24436                           
 24437                           ; BSR set to: 0
 24438                           ;drv_mrf_miwi_mesh_24j40.c: 967: {
 24439                           ;drv_mrf_miwi_mesh_24j40.c: 968: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 24440  00133A  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24441  00133E  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24442  001340  C075  FFD9         	movff	MiMAC_SendPacket@transParam+1,fsr2l
 24443  001344  C076  FFDA         	movff	MiMAC_SendPacket@transParam+2,fsr2h
 24444  001348  50DF               	movf	indf2,w,c
 24445  00134A  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24446  00134C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24447  001350  0100               	movlb	0	; () banked
 24448  001352  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24449                           
 24450                           ; BSR set to: 0
 24451                           ;drv_mrf_miwi_mesh_24j40.c: 969: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 24452  001354  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24453  001358  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24454  00135A  EE20 F001          	lfsr	2,1
 24455  00135E  5175               	movf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 24456  001360  26D9               	addwf	fsr2l,f,c
 24457  001362  5176               	movf	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 24458  001364  22DA               	addwfc	fsr2h,f,c
 24459  001366  50DF               	movf	indf2,w,c
 24460  001368  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24461  00136A  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24462  00136E                     L25:
 24463  00136E  0100               	movlb	0	; () banked
 24464  001370  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24465                           
 24466                           ;drv_mrf_miwi_mesh_24j40.c: 970: }
 24467  001372  D014               	goto	l11873
 24468  001374                     l834:
 24469                           
 24470                           ; BSR set to: 0
 24471                           ;drv_mrf_miwi_mesh_24j40.c: 971: else
 24472                           ;drv_mrf_miwi_mesh_24j40.c: 972: {
 24473                           ;drv_mrf_miwi_mesh_24j40.c: 973: for(i = 0; i < 8; i++)
 24474  001374  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24475  001376                     l11865:
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;drv_mrf_miwi_mesh_24j40.c: 974: {
 24479                           ;drv_mrf_miwi_mesh_24j40.c: 975: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 24480  001376  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24481  00137A  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24482  00137C  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 24483  00137E  2575               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 24484  001380  6ED9               	movwf	fsr2l,c
 24485  001382  0E00               	movlw	0
 24486  001384  2176               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 24487  001386  6EDA               	movwf	fsr2h,c
 24488  001388  50DF               	movf	indf2,w,c
 24489  00138A  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24490  00138C  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24491  001390  0100               	movlb	0	; () banked
 24492  001392  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24493                           
 24494                           ; BSR set to: 0
 24495  001394  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 24496                           
 24497                           ; BSR set to: 0
 24498  001396  0E07               	movlw	7
 24499  001398  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 24500  00139A  D7ED               	goto	l11865
 24501  00139C                     l11873:
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;drv_mrf_miwi_mesh_24j40.c: 976: }
 24505                           ;drv_mrf_miwi_mesh_24j40.c: 977: }
 24506                           ;drv_mrf_miwi_mesh_24j40.c: 978: }
 24507                           ;drv_mrf_miwi_mesh_24j40.c: 979: }
 24508                           ;drv_mrf_miwi_mesh_24j40.c: 983: if( IntraPAN == 0 )
 24509  00139C  518B               	movf	MiMAC_SendPacket@IntraPAN& (0+255),w,b
 24510  00139E  E112               	bnz	l11881
 24511                           
 24512                           ; BSR set to: 0
 24513                           ;drv_mrf_miwi_mesh_24j40.c: 984: {
 24514                           ;drv_mrf_miwi_mesh_24j40.c: 985: PHYSetLongRAMAddr(loc++, ((MAC_PANID>>0)&0xff));
 24515  0013A0  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24516  0013A4  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24517  0013A6  C051  F064         	movff	_MAC_PANID,PHYSetLongRAMAddr@value
 24518  0013AA  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24519  0013AE  0100               	movlb	0	; () banked
 24520  0013B0  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24521                           
 24522                           ; BSR set to: 0
 24523                           ;drv_mrf_miwi_mesh_24j40.c: 986: PHYSetLongRAMAddr(loc++, ((MAC_PANID>>8)&0xff));
 24524  0013B2  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24525  0013B6  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24526  0013B8  C052  F064         	movff	_MAC_PANID+1,PHYSetLongRAMAddr@value
 24527  0013BC  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24528  0013C0  0100               	movlb	0	; () banked
 24529  0013C2  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24530  0013C4                     l11881:
 24531                           
 24532                           ; BSR set to: 0
 24533                           ;drv_mrf_miwi_mesh_24j40.c: 987: }
 24534                           ;drv_mrf_miwi_mesh_24j40.c: 991: if( transParam.altSrcAddr )
 24535  0013C4  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 24536  0013C6  E013               	bz	l839
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;drv_mrf_miwi_mesh_24j40.c: 992: {
 24540                           ;drv_mrf_miwi_mesh_24j40.c: 993: PHYSetLongRAMAddr(loc++, ((myNetworkAddress>>0)&0xff));
 24541  0013C8  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24542  0013CC  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24543  0013CE  C053  F064         	movff	_myNetworkAddress,PHYSetLongRAMAddr@value
 24544  0013D2  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24545  0013D6  0100               	movlb	0	; () banked
 24546  0013D8  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;drv_mrf_miwi_mesh_24j40.c: 994: PHYSetLongRAMAddr(loc++, ((myNetworkAddress>>8)&0xff));
 24550  0013DA  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24551  0013DE  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24552  0013E0  C054  F064         	movff	_myNetworkAddress+1,PHYSetLongRAMAddr@value
 24553  0013E4  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24554  0013E8  0100               	movlb	0	; () banked
 24555  0013EA  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24556                           
 24557                           ;drv_mrf_miwi_mesh_24j40.c: 995: }
 24558  0013EC  D016               	goto	l840
 24559  0013EE                     l839:
 24560                           
 24561                           ; BSR set to: 0
 24562                           ;drv_mrf_miwi_mesh_24j40.c: 996: else
 24563                           ;drv_mrf_miwi_mesh_24j40.c: 997: {
 24564                           ;drv_mrf_miwi_mesh_24j40.c: 998: for(i = 0; i < 8; i++)
 24565  0013EE  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24566  0013F0                     l11893:
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;drv_mrf_miwi_mesh_24j40.c: 999: {
 24570                           ;drv_mrf_miwi_mesh_24j40.c: 1000: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 24571  0013F0  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24572  0013F4  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24573  0013F6  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 24574  0013F8  0102               	movlb	2	; () banked
 24575  0013FA  2558               	addwf	(_MACInitParams+1)& (0+255),w,b
 24576  0013FC  6ED9               	movwf	fsr2l,c
 24577  0013FE  0E00               	movlw	0
 24578  001400  2159               	addwfc	(_MACInitParams+2)& (0+255),w,b
 24579  001402  6EDA               	movwf	fsr2h,c
 24580  001404  50DF               	movf	indf2,w,c
 24581  001406  0100               	movlb	0	; () banked
 24582  001408  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24583  00140A  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24584  00140E  0100               	movlb	0	; () banked
 24585  001410  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24586                           
 24587                           ; BSR set to: 0
 24588  001412  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 24589                           
 24590                           ; BSR set to: 0
 24591  001414  0E07               	movlw	7
 24592  001416  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 24593  001418  D7EB               	goto	l11893
 24594  00141A                     l840:
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;drv_mrf_miwi_mesh_24j40.c: 1001: }
 24598                           ;drv_mrf_miwi_mesh_24j40.c: 1002: }
 24599                           ;drv_mrf_miwi_mesh_24j40.c: 1005: if( transParam.flags.bits.secEn )
 24600  00141A  A774               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 24601  00141C  D053               	goto	l11935
 24602                           
 24603                           ; BSR set to: 0
 24604                           ;drv_mrf_miwi_mesh_24j40.c: 1006: {
 24605                           ;drv_mrf_miwi_mesh_24j40.c: 1008: for(i = 0; i < 4; i++)
 24606  00141E  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24607  001420                     l11907:
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;drv_mrf_miwi_mesh_24j40.c: 1009: {
 24611                           ;drv_mrf_miwi_mesh_24j40.c: 1010: PHYSetLongRAMAddr(loc++, ((OutgoingFrameCounter>>(i<<3
      +                          ))&0xff) );
 24612  001420  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24613  001424  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24614  001426  C08D  F07E         	movff	MiMAC_SendPacket@i,??_MiMAC_SendPacket
 24615  00142A  90D8               	bcf	status,0,c
 24616  00142C  377E               	rlcf	??_MiMAC_SendPacket& (0+255),f,b
 24617  00142E  90D8               	bcf	status,0,c
 24618  001430  377E               	rlcf	??_MiMAC_SendPacket& (0+255),f,b
 24619  001432  90D8               	bcf	status,0,c
 24620  001434  377E               	rlcf	??_MiMAC_SendPacket& (0+255),f,b
 24621  001436  517E               	movf	??_MiMAC_SendPacket& (0+255),w,b
 24622  001438  C23C  F07F         	movff	_OutgoingFrameCounter,??_MiMAC_SendPacket+1
 24623  00143C  C23D  F080         	movff	_OutgoingFrameCounter+1,??_MiMAC_SendPacket+2
 24624  001440  C23E  F081         	movff	_OutgoingFrameCounter+2,??_MiMAC_SendPacket+3
 24625  001444  C23F  F082         	movff	_OutgoingFrameCounter+3,??_MiMAC_SendPacket+4
 24626  001448  2AE8               	incf	wreg,f,c
 24627  00144A  D005               	goto	u16660
 24628  00144C                     u16665:
 24629  00144C  90D8               	bcf	status,0,c
 24630  00144E  3382               	rrcf	(??_MiMAC_SendPacket+4)& (0+255),f,b
 24631  001450  3381               	rrcf	(??_MiMAC_SendPacket+3)& (0+255),f,b
 24632  001452  3380               	rrcf	(??_MiMAC_SendPacket+2)& (0+255),f,b
 24633  001454  337F               	rrcf	(??_MiMAC_SendPacket+1)& (0+255),f,b
 24634  001456                     u16660:
 24635  001456  2EE8               	decfsz	wreg,f,c
 24636  001458  D7F9               	goto	u16665
 24637  00145A  517F               	movf	(??_MiMAC_SendPacket+1)& (0+255),w,b
 24638  00145C  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24639  00145E  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24640  001462  0100               	movlb	0	; () banked
 24641  001464  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24642                           
 24643                           ; BSR set to: 0
 24644  001466  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 24645                           
 24646                           ; BSR set to: 0
 24647  001468  0E03               	movlw	3
 24648  00146A  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 24649  00146C  D7D9               	goto	l11907
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;drv_mrf_miwi_mesh_24j40.c: 1011: }
 24653                           ;drv_mrf_miwi_mesh_24j40.c: 1012: OutgoingFrameCounter++;
 24654  00146E  0102               	movlb	2	; () banked
 24655  001470  2B3C               	incf	_OutgoingFrameCounter& (0+255),f,b
 24656  001472  0E00               	movlw	0
 24657  001474  233D               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 24658  001476  233E               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 24659  001478  233F               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 24660                           
 24661                           ; BSR set to: 2
 24662                           ;drv_mrf_miwi_mesh_24j40.c: 1020: PHYSetLongRAMAddr(loc++, myKeySequenceNumber);
 24663  00147A  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24664  00147E  0100               	movlb	0	; () banked
 24665  001480  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24666  001482  6B64               	clrf	PHYSetLongRAMAddr@value& (0+255),b
 24667  001484  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24668  001488  0100               	movlb	0	; () banked
 24669  00148A  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;drv_mrf_miwi_mesh_24j40.c: 1023: for(i = 0; i < 16; i++)
 24673  00148C  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24674  00148E                     l11927:
 24675                           
 24676                           ; BSR set to: 0
 24677                           ;drv_mrf_miwi_mesh_24j40.c: 1024: {
 24678                           ;drv_mrf_miwi_mesh_24j40.c: 1025: PHYSetLongRAMAddr(0x280 + i, mySecurityKey[i]);
 24679  00148E  0E80               	movlw	128
 24680  001490  258D               	addwf	MiMAC_SendPacket@i& (0+255),w,b
 24681  001492  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 24682  001494  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24683  001496  0E02               	movlw	2
 24684  001498  2363               	addwfc	(PHYSetLongRAMAddr@address+1)& (0+255),f,b
 24685  00149A  0E7F               	movlw	low _mySecurityKey
 24686  00149C  258D               	addwf	MiMAC_SendPacket@i& (0+255),w,b
 24687  00149E  6EF6               	movwf	tblptrl,c
 24688  0014A0  6AF7               	clrf	tblptrh,c
 24689  0014A2  0EFF               	movlw	high _mySecurityKey
 24690  0014A4  22F7               	addwfc	tblptrh,f,c
 24691  0014A6                     	if	0	;There are less than 3 active tblptr bytes
 24692  0014A6                     	endif
 24693  0014A6  0008               	tblrd		*
 24694  0014A8  CFF5 F064          	movff	tablat,PHYSetLongRAMAddr@value
 24695  0014AC  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24696  0014B0  0100               	movlb	0	; () banked
 24697  0014B2  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 24698                           
 24699                           ; BSR set to: 0
 24700  0014B4  0E0F               	movlw	15
 24701  0014B6  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 24702  0014B8  D7EA               	goto	l11927
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;drv_mrf_miwi_mesh_24j40.c: 1026: }
 24706                           ;drv_mrf_miwi_mesh_24j40.c: 1029: PHYSetShortRAMAddr((0x59), mySecurityLevel);
 24707  0014BA  0E04               	movlw	4
 24708  0014BC  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 24709  0014BE  0E59               	movlw	89
 24710  0014C0  EC34  F03C         	call	_PHYSetShortRAMAddr
 24711  0014C4                     l11935:
 24712                           
 24713                           ;drv_mrf_miwi_mesh_24j40.c: 1030: }
 24714                           ;drv_mrf_miwi_mesh_24j40.c: 1035: for(i = 0; i < MACPayloadLen; i++)
 24715  0014C4  0100               	movlb	0	; () banked
 24716  0014C6  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 24717  0014C8  D010               	goto	l11943
 24718  0014CA                     l11937:
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;drv_mrf_miwi_mesh_24j40.c: 1036: {
 24722                           ;drv_mrf_miwi_mesh_24j40.c: 1037: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 24723  0014CA  C08E  F062         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 24724  0014CE  6B63               	clrf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 24725  0014D0  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 24726  0014D2  257B               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 24727  0014D4  6ED9               	movwf	fsr2l,c
 24728  0014D6  0E00               	movlw	0
 24729  0014D8  217C               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 24730  0014DA  6EDA               	movwf	fsr2h,c
 24731  0014DC  50DF               	movf	indf2,w,c
 24732  0014DE  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 24733  0014E0  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 24734  0014E4  0100               	movlb	0	; () banked
 24735  0014E6  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 24736                           
 24737                           ; BSR set to: 0
 24738  0014E8  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 24739  0014EA                     l11943:
 24740                           
 24741                           ; BSR set to: 0
 24742  0014EA  517D               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 24743  0014EC  5D8D               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 24744  0014EE  E3ED               	bnc	l11937
 24745                           
 24746                           ; BSR set to: 0
 24747                           ;drv_mrf_miwi_mesh_24j40.c: 1038: }
 24748                           ;drv_mrf_miwi_mesh_24j40.c: 1040: MRF24J40Status.bits.TX_BUSY = 1;
 24749  0014F0  8042               	bsf	_MRF24J40Status,0,c	;volatile
 24750                           
 24751                           ;drv_mrf_miwi_mesh_24j40.c: 1043: if( transParam.flags.bits.ackReq && transParam.flags.b
      +                          its.broadcast == 0 )
 24752  0014F2  BB74               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 24753                           
 24754                           ; BSR set to: 0
 24755  0014F4  B574               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 24756  0014F6  D004               	goto	l11951
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;drv_mrf_miwi_mesh_24j40.c: 1044: {
 24760                           ;drv_mrf_miwi_mesh_24j40.c: 1045: i = 0x05;
 24761  0014F8  0E05               	movlw	5
 24762  0014FA  6F8D               	movwf	MiMAC_SendPacket@i& (0+255),b
 24763                           
 24764                           ; BSR set to: 0
 24765                           ;drv_mrf_miwi_mesh_24j40.c: 1047: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 24766  0014FC  8242               	bsf	_MRF24J40Status,1,c	;volatile
 24767                           
 24768                           ;drv_mrf_miwi_mesh_24j40.c: 1049: }
 24769  0014FE  D003               	goto	l11955
 24770  001500                     l11951:
 24771                           
 24772                           ; BSR set to: 0
 24773                           ;drv_mrf_miwi_mesh_24j40.c: 1050: else
 24774                           ;drv_mrf_miwi_mesh_24j40.c: 1051: {
 24775                           ;drv_mrf_miwi_mesh_24j40.c: 1052: i = 0x01;
 24776  001500  0E01               	movlw	1
 24777  001502  6F8D               	movwf	MiMAC_SendPacket@i& (0+255),b
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;drv_mrf_miwi_mesh_24j40.c: 1054: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 24781  001504  9242               	bcf	_MRF24J40Status,1,c	;volatile
 24782  001506                     l11955:
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;drv_mrf_miwi_mesh_24j40.c: 1056: }
 24786                           ;drv_mrf_miwi_mesh_24j40.c: 1058: if( transParam.flags.bits.secEn )
 24787  001506  B774               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;drv_mrf_miwi_mesh_24j40.c: 1059: {
 24791                           ;drv_mrf_miwi_mesh_24j40.c: 1060: i |= 0x02;
 24792  001508  838D               	bsf	MiMAC_SendPacket@i& (0+255),1,b
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;drv_mrf_miwi_mesh_24j40.c: 1061: }
 24796                           ;drv_mrf_miwi_mesh_24j40.c: 1065: PHYSetShortRAMAddr((0x37), i);
 24797  00150A  C08D  F062         	movff	MiMAC_SendPacket@i,PHYSetShortRAMAddr@value
 24798  00150E  0E37               	movlw	55
 24799  001510  EC34  F03C         	call	_PHYSetShortRAMAddr
 24800                           
 24801                           ;drv_mrf_miwi_mesh_24j40.c: 1068: t1 = MiWi_TickGetMs();
 24802  001514  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 24803  001518  C06C  F083         	movff	?_MiWi_TickGetMs,MiMAC_SendPacket@t1
 24804  00151C  C06D  F084         	movff	?_MiWi_TickGetMs+1,MiMAC_SendPacket@t1+1
 24805  001520  C06E  F085         	movff	?_MiWi_TickGetMs+2,MiMAC_SendPacket@t1+2
 24806  001524  C06F  F086         	movff	?_MiWi_TickGetMs+3,MiMAC_SendPacket@t1+3
 24807  001528                     l11963:
 24808                           
 24809                           ; BSR set to: 0
 24810                           ;drv_mrf_miwi_mesh_24j40.c: 1070: {
 24811                           ;drv_mrf_miwi_mesh_24j40.c: 1071: if( PORTBbits.RB0 == 0 )
 24812  001528  A081               	btfss	3969,0,c	;volatile
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;drv_mrf_miwi_mesh_24j40.c: 1072: {
 24816                           ;drv_mrf_miwi_mesh_24j40.c: 1073: INTCONbits.INT0IF = 1;
 24817  00152A  82F2               	bsf	intcon,1,c	;volatile
 24818                           
 24819                           ; BSR set to: 0
 24820                           ;drv_mrf_miwi_mesh_24j40.c: 1074: }
 24821                           ;drv_mrf_miwi_mesh_24j40.c: 1075: if( MRF24J40Status.bits.TX_BUSY == 0 )
 24822  00152C  B042               	btfsc	_MRF24J40Status,0,c	;volatile
 24823  00152E  D004               	goto	l11975
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;drv_mrf_miwi_mesh_24j40.c: 1076: {
 24827                           ;drv_mrf_miwi_mesh_24j40.c: 1077: if( MRF24J40Status.bits.TX_FAIL )
 24828  001530  A442               	btfss	_MRF24J40Status,2,c	;volatile
 24829  001532  0C01               	retlw	1
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;drv_mrf_miwi_mesh_24j40.c: 1078: {
 24833                           ;drv_mrf_miwi_mesh_24j40.c: 1079: MRF24J40Status.bits.TX_FAIL = 0;
 24834  001534  9442               	bcf	_MRF24J40Status,2,c	;volatile
 24835                           
 24836                           ;drv_mrf_miwi_mesh_24j40.c: 1080: return 0;
 24837  001536  0C00               	retlw	0
 24838  001538                     l11975:
 24839                           
 24840                           ; BSR set to: 0
 24841                           ;drv_mrf_miwi_mesh_24j40.c: 1083: }
 24842                           ;drv_mrf_miwi_mesh_24j40.c: 1084: t2 = MiWi_TickGetMs();
 24843  001538  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 24844  00153C  C06C  F087         	movff	?_MiWi_TickGetMs,MiMAC_SendPacket@t2
 24845  001540  C06D  F088         	movff	?_MiWi_TickGetMs+1,MiMAC_SendPacket@t2+1
 24846  001544  C06E  F089         	movff	?_MiWi_TickGetMs+2,MiMAC_SendPacket@t2+2
 24847  001548  C06F  F08A         	movff	?_MiWi_TickGetMs+3,MiMAC_SendPacket@t2+3
 24848                           
 24849                           ; BSR set to: 0
 24850                           ;drv_mrf_miwi_mesh_24j40.c: 1085: if( (t2.Val - t1.Val) > 40 )
 24851  00154C  5183               	movf	MiMAC_SendPacket@t1& (0+255),w,b
 24852  00154E  5D87               	subwf	MiMAC_SendPacket@t2& (0+255),w,b
 24853  001550  6F7E               	movwf	??_MiMAC_SendPacket& (0+255),b
 24854  001552  5184               	movf	(MiMAC_SendPacket@t1+1)& (0+255),w,b
 24855  001554  5988               	subwfb	(MiMAC_SendPacket@t2+1)& (0+255),w,b
 24856  001556  6F7F               	movwf	(??_MiMAC_SendPacket+1)& (0+255),b
 24857  001558  5185               	movf	(MiMAC_SendPacket@t1+2)& (0+255),w,b
 24858  00155A  5989               	subwfb	(MiMAC_SendPacket@t2+2)& (0+255),w,b
 24859  00155C  6F80               	movwf	(??_MiMAC_SendPacket+2)& (0+255),b
 24860  00155E  5186               	movf	(MiMAC_SendPacket@t1+3)& (0+255),w,b
 24861  001560  598A               	subwfb	(MiMAC_SendPacket@t2+3)& (0+255),w,b
 24862  001562  6F81               	movwf	(??_MiMAC_SendPacket+3)& (0+255),b
 24863  001564  5181               	movf	(??_MiMAC_SendPacket+3)& (0+255),w,b
 24864  001566  1180               	iorwf	(??_MiMAC_SendPacket+2)& (0+255),w,b
 24865  001568  117F               	iorwf	(??_MiMAC_SendPacket+1)& (0+255),w,b
 24866  00156A  E103               	bnz	u16760
 24867  00156C  0E29               	movlw	41
 24868  00156E  5D7E               	subwf	??_MiMAC_SendPacket& (0+255),w,b
 24869  001570  E3DB               	bnc	l11963
 24870  001572                     u16760:
 24871                           
 24872                           ; BSR set to: 0
 24873                           ;drv_mrf_miwi_mesh_24j40.c: 1086: {
 24874                           ;drv_mrf_miwi_mesh_24j40.c: 1087: InitMRF24J40();
 24875  001572  ECFF  F01F         	call	_InitMRF24J40	;wreg free
 24876                           
 24877                           ;drv_mrf_miwi_mesh_24j40.c: 1088: MiMAC_SetAltAddress((uint8_t*)&myNetworkAddress, (uint
      +                          8_t*)&MAC_PANID);
 24878  001576  0E53               	movlw	low _myNetworkAddress
 24879  001578  0100               	movlb	0	; () banked
 24880  00157A  6F6C               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 24881  00157C  6B6D               	clrf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 24882  00157E  0E51               	movlw	low _MAC_PANID
 24883  001580  6F6E               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 24884  001582  EC91  F038         	call	_MiMAC_SetAltAddress	;wreg free
 24885                           
 24886                           ;drv_mrf_miwi_mesh_24j40.c: 1089: MRF24J40Status.bits.TX_BUSY = 0;
 24887  001586  9042               	bcf	_MRF24J40Status,0,c	;volatile
 24888  001588  0C00               	retlw	0
 24889  00158A                     __end_of_MiMAC_SendPacket:
 24890                           	opt stack 0
 24891                           tblptru	equ	0xFF8
 24892                           tblptrh	equ	0xFF7
 24893                           tblptrl	equ	0xFF6
 24894                           tablat	equ	0xFF5
 24895                           prodh	equ	0xFF4
 24896                           prodl	equ	0xFF3
 24897                           intcon	equ	0xFF2
 24898                           postinc0	equ	0xFEE
 24899                           plusw0	equ	0xFEB
 24900                           fsr0h	equ	0xFEA
 24901                           fsr0l	equ	0xFE9
 24902                           wreg	equ	0xFE8
 24903                           indf1	equ	0xFE7
 24904                           postinc1	equ	0xFE6
 24905                           postdec1	equ	0xFE5
 24906                           plusw1	equ	0xFE3
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           indf2	equ	0xFDF
 24910                           postinc2	equ	0xFDE
 24911                           postdec2	equ	0xFDD
 24912                           plusw2	equ	0xFDB
 24913                           fsr2h	equ	0xFDA
 24914                           fsr2l	equ	0xFD9
 24915                           status	equ	0xFD8
 24916                           
 24917 ;; *************** function _isNetworkSecurityEnabled *****************
 24918 ;; Defined at:
 24919 ;;		line 385 in file "../NetworkManager.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;		None
 24922 ;; Auto vars:     Size  Location     Type
 24923 ;;		None
 24924 ;; Return value:  Size  Location     Type
 24925 ;;                  1    wreg      unsigned char 
 24926 ;; Registers used:
 24927 ;;		wreg, status,2
 24928 ;; Tracked objects:
 24929 ;;		On entry : 0/0
 24930 ;;		On exit  : 0/0
 24931 ;;		Unchanged: 0/0
 24932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24937 ;;Total ram usage:        0 bytes
 24938 ;; Hardware stack levels used:    1
 24939 ;; Hardware stack levels required when called:    4
 24940 ;; This function calls:
 24941 ;;		Nothing
 24942 ;; This function is called by:
 24943 ;;		_networkSendBeacon
 24944 ;;		_NetworkManagerTask
 24945 ;;		_NetworkSendDiscoverResponse
 24946 ;;		_NetworkIssueDataRequest
 24947 ;; This function uses a non-reentrant model
 24948 ;;
 24949                           
 24950                           	psect	text93
 24951  007C90                     __ptext93:
 24952                           	opt stack 0
 24953  007C90                     _isNetworkSecurityEnabled:
 24954                           	opt stack 22
 24955                           
 24956                           ;NetworkManager.c: 387: return(isNetworkTrafficSecure);
 24957                           
 24958                           ;incstack = 0
 24959  007C90  5047               	movf	_isNetworkTrafficSecure,w,c
 24960  007C92  0012               	return		;funcret
 24961  007C94                     __end_of_isNetworkSecurityEnabled:
 24962                           	opt stack 0
 24963                           tblptru	equ	0xFF8
 24964                           tblptrh	equ	0xFF7
 24965                           tblptrl	equ	0xFF6
 24966                           tablat	equ	0xFF5
 24967                           prodh	equ	0xFF4
 24968                           prodl	equ	0xFF3
 24969                           intcon	equ	0xFF2
 24970                           postinc0	equ	0xFEE
 24971                           plusw0	equ	0xFEB
 24972                           fsr0h	equ	0xFEA
 24973                           fsr0l	equ	0xFE9
 24974                           wreg	equ	0xFE8
 24975                           indf1	equ	0xFE7
 24976                           postinc1	equ	0xFE6
 24977                           postdec1	equ	0xFE5
 24978                           plusw1	equ	0xFE3
 24979                           fsr1h	equ	0xFE2
 24980                           fsr1l	equ	0xFE1
 24981                           indf2	equ	0xFDF
 24982                           postinc2	equ	0xFDE
 24983                           postdec2	equ	0xFDD
 24984                           plusw2	equ	0xFDB
 24985                           fsr2h	equ	0xFDA
 24986                           fsr2l	equ	0xFD9
 24987                           status	equ	0xFD8
 24988                           
 24989 ;; *************** function _RouterEvicted *****************
 24990 ;; Defined at:
 24991 ;;		line 223 in file "../RouteManager.c"
 24992 ;; Parameters:    Size  Location     Type
 24993 ;;  address         8   46[BANK0 ] struct addr_t_def
 24994 ;; Auto vars:     Size  Location     Type
 24995 ;;  r               2   56[BANK0 ] PTR struct route_info_t_
 24996 ;;		 -> routeInfo(13), 
 24997 ;;  i               1   59[BANK0 ] unsigned char 
 24998 ;;  idx             1   58[BANK0 ] unsigned char 
 24999 ;; Return value:  Size  Location     Type
 25000 ;;                  1    wreg      void 
 25001 ;; Registers used:
 25002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25003 ;; Tracked objects:
 25004 ;;		On entry : 0/0
 25005 ;;		On exit  : F/0
 25006 ;;		Unchanged: 0/0
 25007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25008 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25012 ;;Total ram usage:       14 bytes
 25013 ;; Hardware stack levels used:    1
 25014 ;; Hardware stack levels required when called:    8
 25015 ;; This function calls:
 25016 ;;		_NetworkGetMyRouteInfo
 25017 ;;		_RouteManagerRequestUpdate
 25018 ;;		_isSameAddress
 25019 ;;		_routeInfoInit
 25020 ;;		_routingTableFind
 25021 ;; This function is called by:
 25022 ;;		_RouteManagerProcessReceive
 25023 ;;		_LE_InsertNeighbor
 25024 ;;		_LE_processReceivedMessage
 25025 ;;		_LE_RemoveNeighborDevice
 25026 ;;		_TransportManagerTask
 25027 ;;		_NetworkManagerTask
 25028 ;;		_NetworkIssueDataRequest
 25029 ;; This function uses a non-reentrant model
 25030 ;;
 25031                           
 25032                           	psect	text94
 25033  005DC0                     __ptext94:
 25034                           	opt stack 0
 25035  005DC0                     _RouterEvicted:
 25036                           	opt stack 17
 25037                           
 25038                           ;RouteManager.c: 225: uint8_t idx, i;
 25039                           ;RouteManager.c: 226: route_info_t *r=NetworkGetMyRouteInfo();
 25040                           
 25041                           ;incstack = 0
 25042  005DC0  ECF1  F03D         	call	_NetworkGetMyRouteInfo	;wreg free
 25043  005DC4  C060  F098         	movff	?_NetworkGetMyRouteInfo,RouterEvicted@r
 25044  005DC8  C061  F099         	movff	?_NetworkGetMyRouteInfo+1,RouterEvicted@r+1
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;RouteManager.c: 227: idx = routingTableFind(address);
 25048  005DCC  EE20  F08E         	lfsr	2,RouterEvicted@address
 25049  005DD0  EE00  F081         	lfsr	0,routingTableFind@neighbor
 25050  005DD4  0E07               	movlw	7
 25051  005DD6                     u17041:
 25052  005DD6  CFDB FFEB          	movff	plusw2,plusw0
 25053  005DDA  06E8               	decf	wreg,f,c
 25054  005DDC  E2FC               	bc	u17041
 25055  005DDE  ECF5  F033         	call	_routingTableFind	;wreg free
 25056  005DE2  6F9A               	movwf	RouterEvicted@idx& (0+255),b
 25057                           
 25058                           ; BSR set to: 0
 25059                           ;RouteManager.c: 229: if (idx != routingTableActive)
 25060  005DE4  519A               	movf	RouterEvicted@idx& (0+255),w,b
 25061  005DE6  1839               	xorwf	_routingTableActive,w,c
 25062  005DE8  103A               	iorwf	_routingTableActive+1,w,c
 25063  005DEA  E024               	bz	l12129
 25064                           
 25065                           ; BSR set to: 0
 25066                           ;RouteManager.c: 230: {
 25067                           ;RouteManager.c: 231: routingTableActive--;
 25068  005DEC  0639               	decf	_routingTableActive,f,c
 25069  005DEE  A0D8               	btfss	status,0,c
 25070  005DF0  063A               	decf	_routingTableActive+1,f,c
 25071                           
 25072                           ; BSR set to: 0
 25073                           ;RouteManager.c: 232: for (i = idx; i < routingTableActive; i++)
 25074  005DF2  C09A  F09B         	movff	RouterEvicted@idx,RouterEvicted@i
 25075  005DF6  D016               	goto	l12127
 25076  005DF8                     l12123:
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;RouteManager.c: 233: {
 25080                           ;RouteManager.c: 234: routingTable[i] = routingTable[i + 1];
 25081  005DF8  519B               	movf	RouterEvicted@i& (0+255),w,b
 25082  005DFA  0D15               	mullw	21
 25083  005DFC  0E15               	movlw	low (_routingTable+21)
 25084  005DFE  24F3               	addwf	prodl,w,c
 25085  005E00  6ED9               	movwf	fsr2l,c
 25086  005E02  0E08               	movlw	high (_routingTable+21)
 25087  005E04  20F4               	addwfc	prodh,w,c
 25088  005E06  6EDA               	movwf	fsr2h,c
 25089  005E08  519B               	movf	RouterEvicted@i& (0+255),w,b
 25090  005E0A  0D15               	mullw	21
 25091  005E0C  0E00               	movlw	low _routingTable
 25092  005E0E  24F3               	addwf	prodl,w,c
 25093  005E10  6EE1               	movwf	fsr1l,c
 25094  005E12  0E08               	movlw	high _routingTable
 25095  005E14  20F4               	addwfc	prodh,w,c
 25096  005E16  6EE2               	movwf	fsr1h,c
 25097  005E18  0E14               	movlw	20
 25098  005E1A                     u17061:
 25099  005E1A  CFDB FFE3          	movff	plusw2,plusw1
 25100  005E1E  06E8               	decf	wreg,f,c
 25101  005E20  E2FC               	bc	u17061
 25102                           
 25103                           ; BSR set to: 0
 25104  005E22  2B9B               	incf	RouterEvicted@i& (0+255),f,b
 25105  005E24                     l12127:
 25106                           
 25107                           ; BSR set to: 0
 25108  005E24  519B               	movf	RouterEvicted@i& (0+255),w,b
 25109  005E26  6F96               	movwf	??_RouterEvicted& (0+255),b
 25110  005E28  6B97               	clrf	(??_RouterEvicted+1)& (0+255),b
 25111  005E2A  5039               	movf	_routingTableActive,w,c
 25112  005E2C  5D96               	subwf	??_RouterEvicted& (0+255),w,b
 25113  005E2E  503A               	movf	_routingTableActive+1,w,c
 25114  005E30  5997               	subwfb	(??_RouterEvicted+1)& (0+255),w,b
 25115  005E32  E3E2               	bnc	l12123
 25116  005E34                     l12129:
 25117                           
 25118                           ; BSR set to: 0
 25119                           ;RouteManager.c: 235: }
 25120                           ;RouteManager.c: 236: }
 25121                           ;RouteManager.c: 238: if (isSameAddress(r->parent, address))
 25122  005E34  C098  FFD9         	movff	RouterEvicted@r,fsr2l
 25123  005E38  C099  FFDA         	movff	RouterEvicted@r+1,fsr2h
 25124  005E3C  EE00  F070         	lfsr	0,isSameAddress@a1
 25125  005E40  0E07               	movlw	7
 25126  005E42                     u17081:
 25127  005E42  CFDB FFEB          	movff	plusw2,plusw0
 25128  005E46  06E8               	decf	wreg,f,c
 25129  005E48  E2FC               	bc	u17081
 25130  005E4A  EE20  F08E         	lfsr	2,RouterEvicted@address
 25131  005E4E  EE00  F078         	lfsr	0,isSameAddress@a2
 25132  005E52  0E07               	movlw	7
 25133  005E54                     u17091:
 25134  005E54  CFDB FFEB          	movff	plusw2,plusw0
 25135  005E58  06E8               	decf	wreg,f,c
 25136  005E5A  E2FC               	bc	u17091
 25137  005E5C  ECC5  F03C         	call	_isSameAddress	;wreg free
 25138  005E60  0900               	iorlw	0
 25139  005E62  B4D8               	btfsc	status,2,c
 25140  005E64  0012               	return	
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;RouteManager.c: 239: {
 25144                           ;RouteManager.c: 240: routeInfoInit(r);
 25145  005E66  C098  F068         	movff	RouterEvicted@r,routeInfoInit@ri
 25146  005E6A  C099  F069         	movff	RouterEvicted@r+1,routeInfoInit@ri+1
 25147  005E6E  ECE7  F038         	call	_routeInfoInit	;wreg free
 25148                           
 25149                           ; BSR set to: 0
 25150                           ;RouteManager.c: 241: justEvictedParent = 1;
 25151  005E72  0E01               	movlw	1
 25152  005E74  6E48               	movwf	_justEvictedParent,c
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;RouteManager.c: 242: RouteManagerRequestUpdate();
 25156  005E76  EF3A  F03E         	goto	_RouteManagerRequestUpdate	;wreg free
 25157  005E7A                     __end_of_RouterEvicted:
 25158                           	opt stack 0
 25159                           tblptru	equ	0xFF8
 25160                           tblptrh	equ	0xFF7
 25161                           tblptrl	equ	0xFF6
 25162                           tablat	equ	0xFF5
 25163                           prodh	equ	0xFF4
 25164                           prodl	equ	0xFF3
 25165                           intcon	equ	0xFF2
 25166                           postinc0	equ	0xFEE
 25167                           plusw0	equ	0xFEB
 25168                           fsr0h	equ	0xFEA
 25169                           fsr0l	equ	0xFE9
 25170                           wreg	equ	0xFE8
 25171                           indf1	equ	0xFE7
 25172                           postinc1	equ	0xFE6
 25173                           postdec1	equ	0xFE5
 25174                           plusw1	equ	0xFE3
 25175                           fsr1h	equ	0xFE2
 25176                           fsr1l	equ	0xFE1
 25177                           indf2	equ	0xFDF
 25178                           postinc2	equ	0xFDE
 25179                           postdec2	equ	0xFDD
 25180                           plusw2	equ	0xFDB
 25181                           fsr2h	equ	0xFDA
 25182                           fsr2l	equ	0xFD9
 25183                           status	equ	0xFD8
 25184                           
 25185 ;; *************** function _routingTableFind *****************
 25186 ;; Defined at:
 25187 ;;		line 204 in file "../RouteManager.c"
 25188 ;; Parameters:    Size  Location     Type
 25189 ;;  neighbor        8   33[BANK0 ] struct addr_t_def
 25190 ;; Auto vars:     Size  Location     Type
 25191 ;;  res             2   43[BANK0 ] unsigned int 
 25192 ;;  i               1   45[BANK0 ] unsigned char 
 25193 ;; Return value:  Size  Location     Type
 25194 ;;                  1    wreg      unsigned char 
 25195 ;; Registers used:
 25196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25197 ;; Tracked objects:
 25198 ;;		On entry : F/0
 25199 ;;		On exit  : F/0
 25200 ;;		Unchanged: 0/0
 25201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25202 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25203 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25205 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25206 ;;Total ram usage:       13 bytes
 25207 ;; Hardware stack levels used:    1
 25208 ;; Hardware stack levels required when called:    7
 25209 ;; This function calls:
 25210 ;;		_isInvalidAddress
 25211 ;;		_isSameAddress
 25212 ;; This function is called by:
 25213 ;;		_RouterEvicted
 25214 ;;		_routingTableUpdateEntry
 25215 ;; This function uses a non-reentrant model
 25216 ;;
 25217                           
 25218                           	psect	text95
 25219  0067EA                     __ptext95:
 25220                           	opt stack 0
 25221  0067EA                     _routingTableFind:
 25222                           	opt stack 17
 25223                           
 25224                           ; BSR set to: 0
 25225                           ;RouteManager.c: 208: if (isInvalidAddress(neighbor))
 25226                           
 25227                           ; BSR set to: 0
 25228                           
 25229                           ; BSR set to: 0
 25230                           ;incstack = 0
 25231  0067EA  EE20  F081         	lfsr	2,routingTableFind@neighbor
 25232  0067EE  EE00  F079         	lfsr	0,isInvalidAddress@address
 25233  0067F2  0E07               	movlw	7
 25234  0067F4                     u16831:
 25235  0067F4  CFDB FFEB          	movff	plusw2,plusw0
 25236  0067F8  06E8               	decf	wreg,f,c
 25237  0067FA  E2FC               	bc	u16831
 25238  0067FC  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 25239  006800  0900               	iorlw	0
 25240  006802  E005               	bz	l1276
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;RouteManager.c: 209: {
 25244                           ;RouteManager.c: 210: res=routingTableActive;
 25245  006804  C039  F08B         	movff	_routingTableActive,routingTableFind@res
 25246  006808  C03A  F08C         	movff	_routingTableActive+1,routingTableFind@res+1
 25247                           
 25248                           ;RouteManager.c: 211: }else
 25249  00680C  D02A               	goto	l12043
 25250  00680E                     l1276:
 25251                           
 25252                           ; BSR set to: 0
 25253                           ;RouteManager.c: 212: {
 25254                           ;RouteManager.c: 213: for (i = 0; i < routingTableActive; i++)
 25255  00680E  6B8D               	clrf	routingTableFind@i& (0+255),b
 25256  006810  D01D               	goto	l12041
 25257  006812                     l12035:
 25258                           
 25259                           ; BSR set to: 0
 25260                           ;RouteManager.c: 214: {
 25261                           ;RouteManager.c: 215: if (isSameAddress(routingTable[i].neighbor, neighbor))
 25262  006812  518D               	movf	routingTableFind@i& (0+255),w,b
 25263  006814  0D15               	mullw	21
 25264  006816  0E00               	movlw	low _routingTable
 25265  006818  24F3               	addwf	prodl,w,c
 25266  00681A  6ED9               	movwf	fsr2l,c
 25267  00681C  0E08               	movlw	high _routingTable
 25268  00681E  20F4               	addwfc	prodh,w,c
 25269  006820  6EDA               	movwf	fsr2h,c
 25270  006822  EE00  F070         	lfsr	0,isSameAddress@a1
 25271  006826  0E07               	movlw	7
 25272  006828                     u16851:
 25273  006828  CFDB FFEB          	movff	plusw2,plusw0
 25274  00682C  06E8               	decf	wreg,f,c
 25275  00682E  E2FC               	bc	u16851
 25276  006830  EE20  F081         	lfsr	2,routingTableFind@neighbor
 25277  006834  EE00  F078         	lfsr	0,isSameAddress@a2
 25278  006838  0E07               	movlw	7
 25279  00683A                     u16861:
 25280  00683A  CFDB FFEB          	movff	plusw2,plusw0
 25281  00683E  06E8               	decf	wreg,f,c
 25282  006840  E2FC               	bc	u16861
 25283  006842  ECC5  F03C         	call	_isSameAddress	;wreg free
 25284  006846  0900               	iorlw	0
 25285  006848  E109               	bnz	l1281
 25286                           
 25287                           ; BSR set to: 0
 25288  00684A  2B8D               	incf	routingTableFind@i& (0+255),f,b
 25289  00684C                     l12041:
 25290                           
 25291                           ; BSR set to: 0
 25292  00684C  518D               	movf	routingTableFind@i& (0+255),w,b
 25293  00684E  6F89               	movwf	??_routingTableFind& (0+255),b
 25294  006850  6B8A               	clrf	(??_routingTableFind+1)& (0+255),b
 25295  006852  5039               	movf	_routingTableActive,w,c
 25296  006854  5D89               	subwf	??_routingTableFind& (0+255),w,b
 25297  006856  503A               	movf	_routingTableActive+1,w,c
 25298  006858  598A               	subwfb	(??_routingTableFind+1)& (0+255),w,b
 25299  00685A  E3DB               	bnc	l12035
 25300  00685C                     l1281:
 25301                           
 25302                           ; BSR set to: 0
 25303                           ;RouteManager.c: 217: }
 25304                           ;RouteManager.c: 218: res=i;
 25305  00685C  C08D  F08B         	movff	routingTableFind@i,routingTableFind@res
 25306  006860  6B8C               	clrf	(routingTableFind@res+1)& (0+255),b
 25307  006862                     l12043:
 25308                           
 25309                           ; BSR set to: 0
 25310                           ;RouteManager.c: 219: }
 25311                           ;RouteManager.c: 220: return res;
 25312  006862  518B               	movf	routingTableFind@res& (0+255),w,b
 25313                           
 25314                           ; BSR set to: 0
 25315  006864  0012               	return		;funcret
 25316  006866                     __end_of_routingTableFind:
 25317                           	opt stack 0
 25318                           tblptru	equ	0xFF8
 25319                           tblptrh	equ	0xFF7
 25320                           tblptrl	equ	0xFF6
 25321                           tablat	equ	0xFF5
 25322                           prodh	equ	0xFF4
 25323                           prodl	equ	0xFF3
 25324                           intcon	equ	0xFF2
 25325                           postinc0	equ	0xFEE
 25326                           plusw0	equ	0xFEB
 25327                           fsr0h	equ	0xFEA
 25328                           fsr0l	equ	0xFE9
 25329                           wreg	equ	0xFE8
 25330                           indf1	equ	0xFE7
 25331                           postinc1	equ	0xFE6
 25332                           postdec1	equ	0xFE5
 25333                           plusw1	equ	0xFE3
 25334                           fsr1h	equ	0xFE2
 25335                           fsr1l	equ	0xFE1
 25336                           indf2	equ	0xFDF
 25337                           postinc2	equ	0xFDE
 25338                           postdec2	equ	0xFDD
 25339                           plusw2	equ	0xFDB
 25340                           fsr2h	equ	0xFDA
 25341                           fsr2l	equ	0xFD9
 25342                           status	equ	0xFD8
 25343                           
 25344 ;; *************** function _isSameAddress *****************
 25345 ;; Defined at:
 25346 ;;		line 245 in file "../NetworkManager.c"
 25347 ;; Parameters:    Size  Location     Type
 25348 ;;  a1              8   16[BANK0 ] struct addr_t_def
 25349 ;;  a2              8   24[BANK0 ] struct addr_t_def
 25350 ;; Auto vars:     Size  Location     Type
 25351 ;;		None
 25352 ;; Return value:  Size  Location     Type
 25353 ;;                  1    wreg      unsigned char 
 25354 ;; Registers used:
 25355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25356 ;; Tracked objects:
 25357 ;;		On entry : 0/0
 25358 ;;		On exit  : F/0
 25359 ;;		Unchanged: 0/0
 25360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25361 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25364 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25365 ;;Total ram usage:       16 bytes
 25366 ;; Hardware stack levels used:    1
 25367 ;; Hardware stack levels required when called:    5
 25368 ;; This function calls:
 25369 ;;		_NetworkAddressSizeGet
 25370 ;;		_memcmp
 25371 ;; This function is called by:
 25372 ;;		_AddNodeToNetworkTable
 25373 ;;		_radioReceivedPacket
 25374 ;;		_NetworkUnicastData
 25375 ;;		_RouteManagerPerformUpdate
 25376 ;;		_routingTableFind
 25377 ;;		_RouterEvicted
 25378 ;;		_RouteManagerShouldInsert
 25379 ;;		_RoutingTableFindDeviceOrParent
 25380 ;;		_le_findIdx
 25381 ;;		_le_findWorstNeighborIdx
 25382 ;;		_le_updateNeighborTableEst
 25383 ;;		_le_findRandomNeighborIdx
 25384 ;;		_TunnelManagerSetTunnel
 25385 ;;		_TunnelManagerGetTunnel
 25386 ;;		_TunnelManagerInvalidateTunnel
 25387 ;;		_TMSendFormedPacketToRFD
 25388 ;;		_IsNetworkDevice
 25389 ;;		_DeviceManagerGetDeviceType
 25390 ;;		_DeviceManagerGetDeviceData
 25391 ;; This function uses a non-reentrant model
 25392 ;;
 25393                           
 25394                           	psect	text96
 25395  00798A                     __ptext96:
 25396                           	opt stack 0
 25397  00798A                     _isSameAddress:
 25398                           	opt stack 23
 25399                           
 25400                           ;NetworkManager.c: 247: return !memcmp(a1.bytes, a2.bytes, NetworkAddressSizeGet());
 25401                           
 25402                           ; BSR set to: 0
 25403                           ;incstack = 0
 25404  00798A  0E70               	movlw	low isSameAddress@a1
 25405  00798C  0100               	movlb	0	; () banked
 25406  00798E  6F60               	movwf	memcmp@s1& (0+255),b
 25407  007990  6B61               	clrf	(memcmp@s1+1)& (0+255),b
 25408  007992  0E78               	movlw	low isSameAddress@a2
 25409  007994  6F62               	movwf	memcmp@s2& (0+255),b
 25410  007996  6B63               	clrf	(memcmp@s2+1)& (0+255),b
 25411  007998  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 25412  00799C  6F64               	movwf	memcmp@n& (0+255),b
 25413  00799E  6B65               	clrf	(memcmp@n+1)& (0+255),b
 25414  0079A0  EC3B  F038         	call	_memcmp	;wreg free
 25415  0079A4  5160               	movf	?_memcmp& (0+255),w,b
 25416  0079A6  1161               	iorwf	(?_memcmp+1)& (0+255),w,b
 25417  0079A8  B4D8               	btfsc	status,2,c
 25418  0079AA  0C01               	retlw	1
 25419                           
 25420                           ; BSR set to: 0
 25421  0079AC  0C00               	retlw	0	;funcret
 25422  0079AE                     __end_of_isSameAddress:
 25423                           	opt stack 0
 25424                           tblptru	equ	0xFF8
 25425                           tblptrh	equ	0xFF7
 25426                           tblptrl	equ	0xFF6
 25427                           tablat	equ	0xFF5
 25428                           prodh	equ	0xFF4
 25429                           prodl	equ	0xFF3
 25430                           intcon	equ	0xFF2
 25431                           postinc0	equ	0xFEE
 25432                           plusw0	equ	0xFEB
 25433                           fsr0h	equ	0xFEA
 25434                           fsr0l	equ	0xFE9
 25435                           wreg	equ	0xFE8
 25436                           indf1	equ	0xFE7
 25437                           postinc1	equ	0xFE6
 25438                           postdec1	equ	0xFE5
 25439                           plusw1	equ	0xFE3
 25440                           fsr1h	equ	0xFE2
 25441                           fsr1l	equ	0xFE1
 25442                           indf2	equ	0xFDF
 25443                           postinc2	equ	0xFDE
 25444                           postdec2	equ	0xFDD
 25445                           plusw2	equ	0xFDB
 25446                           fsr2h	equ	0xFDA
 25447                           fsr2l	equ	0xFD9
 25448                           status	equ	0xFD8
 25449                           
 25450 ;; *************** function _routeInfoInit *****************
 25451 ;; Defined at:
 25452 ;;		line 195 in file "../RouteManager.c"
 25453 ;; Parameters:    Size  Location     Type
 25454 ;;  ri              2    8[BANK0 ] PTR struct route_info_t_
 25455 ;;		 -> routeInfo(13), 
 25456 ;; Auto vars:     Size  Location     Type
 25457 ;;		None
 25458 ;; Return value:  Size  Location     Type
 25459 ;;                  1    wreg      void 
 25460 ;; Registers used:
 25461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25462 ;; Tracked objects:
 25463 ;;		On entry : F/0
 25464 ;;		On exit  : F/0
 25465 ;;		Unchanged: 0/0
 25466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25471 ;;Total ram usage:        2 bytes
 25472 ;; Hardware stack levels used:    1
 25473 ;; Hardware stack levels required when called:    5
 25474 ;; This function calls:
 25475 ;;		_NetworkAddressSizeGet
 25476 ;;		_memset
 25477 ;; This function is called by:
 25478 ;;		_RouterEvicted
 25479 ;; This function uses a non-reentrant model
 25480 ;;
 25481                           
 25482                           	psect	text97
 25483  0071CE                     __ptext97:
 25484                           	opt stack 0
 25485  0071CE                     _routeInfoInit:
 25486                           	opt stack 19
 25487                           
 25488                           ; BSR set to: 0
 25489                           ;RouteManager.c: 197: memset(&ri->parent, 0xFF, NetworkAddressSizeGet());
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;incstack = 0
 25493  0071CE  C068  F060         	movff	routeInfoInit@ri,memset@p1
 25494  0071D2  C069  F061         	movff	routeInfoInit@ri+1,memset@p1+1
 25495  0071D6  6B63               	clrf	(memset@c+1)& (0+255),b
 25496  0071D8  6962               	setf	memset@c& (0+255),b
 25497  0071DA  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 25498  0071DE  6F64               	movwf	memset@n& (0+255),b
 25499  0071E0  6B65               	clrf	(memset@n+1)& (0+255),b
 25500  0071E2  EC61  F03C         	call	_memset	;wreg free
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;RouteManager.c: 198: ri->etx = 0;
 25504  0071E6  EE20 F008          	lfsr	2,8
 25505  0071EA  5168               	movf	routeInfoInit@ri& (0+255),w,b
 25506  0071EC  26D9               	addwf	fsr2l,f,c
 25507  0071EE  5169               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25508  0071F0  22DA               	addwfc	fsr2h,f,c
 25509  0071F2  6ADE               	clrf	postinc2,c
 25510  0071F4  6ADD               	clrf	postdec2,c
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;RouteManager.c: 199: ri->haveHeard = 0;
 25514  0071F6  EE20 F00A          	lfsr	2,10
 25515  0071FA  5168               	movf	routeInfoInit@ri& (0+255),w,b
 25516  0071FC  26D9               	addwf	fsr2l,f,c
 25517  0071FE  5169               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25518  007200  22DA               	addwfc	fsr2h,f,c
 25519  007202  6ADF               	clrf	indf2,c
 25520                           
 25521                           ; BSR set to: 0
 25522                           ;RouteManager.c: 200: ri->congested = 0;
 25523  007204  EE20 F00B          	lfsr	2,11
 25524  007208  5168               	movf	routeInfoInit@ri& (0+255),w,b
 25525  00720A  26D9               	addwf	fsr2l,f,c
 25526  00720C  5169               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25527  00720E  22DA               	addwfc	fsr2h,f,c
 25528  007210  6ADF               	clrf	indf2,c
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;RouteManager.c: 201: ri->hasCheckedIn=0;
 25532  007212  EE20 F00C          	lfsr	2,12
 25533  007216  5168               	movf	routeInfoInit@ri& (0+255),w,b
 25534  007218  26D9               	addwf	fsr2l,f,c
 25535  00721A  5169               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 25536  00721C  22DA               	addwfc	fsr2h,f,c
 25537  00721E  6ADF               	clrf	indf2,c
 25538                           
 25539                           ; BSR set to: 0
 25540  007220  0C00               	retlw	0	;funcret
 25541  007222                     __end_of_routeInfoInit:
 25542                           	opt stack 0
 25543                           tblptru	equ	0xFF8
 25544                           tblptrh	equ	0xFF7
 25545                           tblptrl	equ	0xFF6
 25546                           tablat	equ	0xFF5
 25547                           prodh	equ	0xFF4
 25548                           prodl	equ	0xFF3
 25549                           intcon	equ	0xFF2
 25550                           postinc0	equ	0xFEE
 25551                           plusw0	equ	0xFEB
 25552                           fsr0h	equ	0xFEA
 25553                           fsr0l	equ	0xFE9
 25554                           wreg	equ	0xFE8
 25555                           indf1	equ	0xFE7
 25556                           postinc1	equ	0xFE6
 25557                           postdec1	equ	0xFE5
 25558                           plusw1	equ	0xFE3
 25559                           fsr1h	equ	0xFE2
 25560                           fsr1l	equ	0xFE1
 25561                           indf2	equ	0xFDF
 25562                           postinc2	equ	0xFDE
 25563                           postdec2	equ	0xFDD
 25564                           plusw2	equ	0xFDB
 25565                           fsr2h	equ	0xFDA
 25566                           fsr2l	equ	0xFD9
 25567                           status	equ	0xFD8
 25568                           
 25569 ;; *************** function _RouteManagerRequestUpdate *****************
 25570 ;; Defined at:
 25571 ;;		line 185 in file "../RouteManager.c"
 25572 ;; Parameters:    Size  Location     Type
 25573 ;;		None
 25574 ;; Auto vars:     Size  Location     Type
 25575 ;;		None
 25576 ;; Return value:  Size  Location     Type
 25577 ;;                  1    wreg      void 
 25578 ;; Registers used:
 25579 ;;		wreg, status,2
 25580 ;; Tracked objects:
 25581 ;;		On entry : F/0
 25582 ;;		On exit  : F/0
 25583 ;;		Unchanged: F/0
 25584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25589 ;;Total ram usage:        0 bytes
 25590 ;; Hardware stack levels used:    1
 25591 ;; Hardware stack levels required when called:    4
 25592 ;; This function calls:
 25593 ;;		Nothing
 25594 ;; This function is called by:
 25595 ;;		_RouterEvicted
 25596 ;; This function uses a non-reentrant model
 25597 ;;
 25598                           
 25599                           	psect	text98
 25600  007C74                     __ptext98:
 25601                           	opt stack 0
 25602  007C74                     _RouteManagerRequestUpdate:
 25603                           	opt stack 20
 25604                           
 25605                           ; BSR set to: 0
 25606                           ;RouteManager.c: 187: RouteMgrUpdateRequired=1;
 25607                           
 25608                           ; BSR set to: 0
 25609                           ;incstack = 0
 25610  007C74  0E01               	movlw	1
 25611  007C76  6E44               	movwf	_RouteMgrUpdateRequired,c
 25612                           
 25613                           ; BSR set to: 0
 25614  007C78  0C01               	retlw	1	;funcret
 25615  007C7A                     __end_of_RouteManagerRequestUpdate:
 25616                           	opt stack 0
 25617                           tblptru	equ	0xFF8
 25618                           tblptrh	equ	0xFF7
 25619                           tblptrl	equ	0xFF6
 25620                           tablat	equ	0xFF5
 25621                           prodh	equ	0xFF4
 25622                           prodl	equ	0xFF3
 25623                           intcon	equ	0xFF2
 25624                           postinc0	equ	0xFEE
 25625                           plusw0	equ	0xFEB
 25626                           fsr0h	equ	0xFEA
 25627                           fsr0l	equ	0xFE9
 25628                           wreg	equ	0xFE8
 25629                           indf1	equ	0xFE7
 25630                           postinc1	equ	0xFE6
 25631                           postdec1	equ	0xFE5
 25632                           plusw1	equ	0xFE3
 25633                           fsr1h	equ	0xFE2
 25634                           fsr1l	equ	0xFE1
 25635                           indf2	equ	0xFDF
 25636                           postinc2	equ	0xFDE
 25637                           postdec2	equ	0xFDD
 25638                           plusw2	equ	0xFDB
 25639                           fsr2h	equ	0xFDA
 25640                           fsr2l	equ	0xFD9
 25641                           status	equ	0xFD8
 25642                           
 25643 ;; *************** function _NetworkGetMyRouteInfo *****************
 25644 ;; Defined at:
 25645 ;;		line 240 in file "../NetworkManager.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;		None
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  2    0[BANK0 ] PTR struct route_info_t_
 25652 ;; Registers used:
 25653 ;;		wreg, status,2, status,0
 25654 ;; Tracked objects:
 25655 ;;		On entry : 0/0
 25656 ;;		On exit  : F/0
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25663 ;;Total ram usage:        2 bytes
 25664 ;; Hardware stack levels used:    1
 25665 ;; Hardware stack levels required when called:    4
 25666 ;; This function calls:
 25667 ;;		Nothing
 25668 ;; This function is called by:
 25669 ;;		_RouteManagerPerformUpdate
 25670 ;;		_RouterEvicted
 25671 ;;		_networkSendBeacon
 25672 ;; This function uses a non-reentrant model
 25673 ;;
 25674                           
 25675                           	psect	text99
 25676  007BE2                     __ptext99:
 25677                           	opt stack 0
 25678  007BE2                     _NetworkGetMyRouteInfo:
 25679                           	opt stack 20
 25680                           
 25681                           ;NetworkManager.c: 242: return(&routeInfo);
 25682                           
 25683                           ; BSR set to: 0
 25684                           ;incstack = 0
 25685  007BE2  0E86               	movlw	low _routeInfo
 25686  007BE4  0100               	movlb	0	; () banked
 25687  007BE6  6F60               	movwf	?_NetworkGetMyRouteInfo& (0+255),b
 25688  007BE8  0E02               	movlw	high _routeInfo
 25689  007BEA  6F61               	movwf	(?_NetworkGetMyRouteInfo+1)& (0+255),b
 25690                           
 25691                           ; BSR set to: 0
 25692  007BEC  0012               	return		;funcret
 25693  007BEE                     __end_of_NetworkGetMyRouteInfo:
 25694                           	opt stack 0
 25695                           tblptru	equ	0xFF8
 25696                           tblptrh	equ	0xFF7
 25697                           tblptrl	equ	0xFF6
 25698                           tablat	equ	0xFF5
 25699                           prodh	equ	0xFF4
 25700                           prodl	equ	0xFF3
 25701                           intcon	equ	0xFF2
 25702                           postinc0	equ	0xFEE
 25703                           plusw0	equ	0xFEB
 25704                           fsr0h	equ	0xFEA
 25705                           fsr0l	equ	0xFE9
 25706                           wreg	equ	0xFE8
 25707                           indf1	equ	0xFE7
 25708                           postinc1	equ	0xFE6
 25709                           postdec1	equ	0xFE5
 25710                           plusw1	equ	0xFE3
 25711                           fsr1h	equ	0xFE2
 25712                           fsr1l	equ	0xFE1
 25713                           indf2	equ	0xFDF
 25714                           postinc2	equ	0xFDE
 25715                           postdec2	equ	0xFDD
 25716                           plusw2	equ	0xFDB
 25717                           fsr2h	equ	0xFDA
 25718                           fsr2l	equ	0xFD9
 25719                           status	equ	0xFD8
 25720                           
 25721 ;; *************** function _NetworkPrepareSendPacket *****************
 25722 ;; Defined at:
 25723 ;;		line 358 in file "../NetworkManager.c"
 25724 ;; Parameters:    Size  Location     Type
 25725 ;;  address         8   16[BANK0 ] struct addr_t_def
 25726 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
 25727 ;;		 -> NetworkIssueDataRequest@data(28), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(37), 
 25728 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 25729 ;;  pType           1   26[BANK0 ] enum E200
 25730 ;;  data            2   27[BANK0 ] PTR unsigned char 
 25731 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMQ(152), NULL(0), TxBuffer(64), 
 25732 ;;  size            2   29[BANK0 ] unsigned int 
 25733 ;; Auto vars:     Size  Location     Type
 25734 ;;  nHdr            2   31[BANK0 ] PTR struct net_data_head
 25735 ;;		 -> NetworkIssueDataRequest@data(28), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(37), 
 25736 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 25737 ;; Return value:  Size  Location     Type
 25738 ;;                  2   16[BANK0 ] unsigned int 
 25739 ;; Registers used:
 25740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25741 ;; Tracked objects:
 25742 ;;		On entry : F/0
 25743 ;;		On exit  : F/0
 25744 ;;		Unchanged: 0/0
 25745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25746 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25749 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25750 ;;Total ram usage:       17 bytes
 25751 ;; Hardware stack levels used:    1
 25752 ;; Hardware stack levels required when called:    5
 25753 ;; This function calls:
 25754 ;;		_NetworkAddressSizeGet
 25755 ;;		_NetworkGetDeviceType
 25756 ;;		_NetworkGetParentAddress
 25757 ;;		_NetworkManagerGetMyAddress
 25758 ;;		_NetworkSequence
 25759 ;;		_memcpy
 25760 ;; This function is called by:
 25761 ;;		_TransportManagerTask
 25762 ;;		_TMSendDataToRFD
 25763 ;;		_NetworkManagerTask
 25764 ;;		_NetworkSendDiscoverRequest
 25765 ;;		_NetworkSendDiscoverResponse
 25766 ;;		_NetworkIssueDataRequest
 25767 ;;		_NetworkBroadcastData
 25768 ;; This function uses a non-reentrant model
 25769 ;;
 25770                           
 25771                           	psect	text100
 25772  005A62                     __ptext100:
 25773                           	opt stack 0
 25774  005A62                     _NetworkPrepareSendPacket:
 25775                           	opt stack 22
 25776                           
 25777                           ; BSR set to: 0
 25778                           ;NetworkManager.c: 360: net_data_header_t *nHdr;
 25779                           ;NetworkManager.c: 361: nHdr=(net_data_header_t*)buffer;
 25780                           
 25781                           ; BSR set to: 0
 25782                           ;incstack = 0
 25783  005A62  C078  F07F         	movff	NetworkPrepareSendPacket@buffer,NetworkPrepareSendPacket@nHdr
 25784  005A66  C079  F080         	movff	NetworkPrepareSendPacket@buffer+1,NetworkPrepareSendPacket@nHdr+1
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;NetworkManager.c: 363: nHdr->Hops=0;
 25788  005A6A  C07F  FFD9         	movff	NetworkPrepareSendPacket@nHdr,fsr2l
 25789  005A6E  C080  FFDA         	movff	NetworkPrepareSendPacket@nHdr+1,fsr2h
 25790  005A72  6ADF               	clrf	indf2,c
 25791                           
 25792                           ; BSR set to: 0
 25793                           ;NetworkManager.c: 364: nHdr->flags=(NetworkGetDeviceType() & 0x07);
 25794  005A74  EE20 F003          	lfsr	2,3
 25795  005A78  517F               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25796  005A7A  26D9               	addwf	fsr2l,f,c
 25797  005A7C  5180               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25798  005A7E  22DA               	addwfc	fsr2h,f,c
 25799  005A80  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 25800  005A84  0B07               	andlw	7
 25801  005A86  6EDF               	movwf	indf2,c
 25802                           
 25803                           ;NetworkManager.c: 365: memcpy(&nHdr->origin,NetworkManagerGetMyAddress(),NetworkAddress
      +                          SizeGet());
 25804  005A88  0E0C               	movlw	12
 25805  005A8A  0100               	movlb	0	; () banked
 25806  005A8C  257F               	addwf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25807  005A8E  6F62               	movwf	memcpy@d1& (0+255),b
 25808  005A90  0E00               	movlw	0
 25809  005A92  2180               	addwfc	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25810  005A94  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 25811  005A96  ECF7  F03D         	call	_NetworkManagerGetMyAddress	;wreg free
 25812  005A9A  C060  F064         	movff	?_NetworkManagerGetMyAddress,memcpy@s1
 25813  005A9E  C061  F065         	movff	?_NetworkManagerGetMyAddress+1,memcpy@s1+1
 25814  005AA2  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 25815  005AA6  6F66               	movwf	memcpy@n& (0+255),b
 25816  005AA8  6B67               	clrf	(memcpy@n+1)& (0+255),b
 25817  005AAA  ECFA  F03A         	call	_memcpy	;wreg free
 25818                           
 25819                           ; BSR set to: 0
 25820                           ;NetworkManager.c: 366: nHdr->target=address;
 25821  005AAE  EE20  F070         	lfsr	2,NetworkPrepareSendPacket@address
 25822  005AB2  EE10 F004          	lfsr	1,4
 25823  005AB6  517F               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25824  005AB8  26E1               	addwf	fsr1l,f,c
 25825  005ABA  5180               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25826  005ABC  22E2               	addwfc	fsr1h,f,c
 25827  005ABE  0E07               	movlw	7
 25828  005AC0                     u17941:
 25829  005AC0  CFDB FFE3          	movff	plusw2,plusw1
 25830  005AC4  06E8               	decf	wreg,f,c
 25831  005AC6  E2FC               	bc	u17941
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;NetworkManager.c: 367: nHdr->sequenceNumber=NetworkSequence();
 25835  005AC8  EE20 F001          	lfsr	2,1
 25836  005ACC  517F               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25837  005ACE  26D9               	addwf	fsr2l,f,c
 25838  005AD0  5180               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25839  005AD2  22DA               	addwfc	fsr2h,f,c
 25840  005AD4  EC3D  F03E         	call	_NetworkSequence	;wreg free
 25841  005AD8  6EDF               	movwf	indf2,c
 25842                           
 25843                           ; BSR set to: 0
 25844                           ;NetworkManager.c: 368: nHdr->packettype=pType;
 25845  005ADA  EE20 F002          	lfsr	2,2
 25846  005ADE  517F               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25847  005AE0  26D9               	addwf	fsr2l,f,c
 25848  005AE2  5180               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25849  005AE4  22DA               	addwfc	fsr2h,f,c
 25850  005AE6  C07A  FFDF         	movff	NetworkPrepareSendPacket@pType,indf2
 25851                           
 25852                           ; BSR set to: 0
 25853                           ;NetworkManager.c: 369: nHdr->parent=NetworkGetParentAddress();
 25854  005AEA  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 25855  005AEE  0100               	movlb	0	; () banked
 25856  005AF0  EE20 F014          	lfsr	2,20
 25857  005AF4  517F               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 25858  005AF6  26D9               	addwf	fsr2l,f,c
 25859  005AF8  5180               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 25860  005AFA  22DA               	addwfc	fsr2h,f,c
 25861  005AFC  0E07               	movlw	7
 25862  005AFE                     u17951:
 25863  005AFE  CFEB FFDB          	movff	plusw0,plusw2
 25864  005B02  06E8               	decf	wreg,f,c
 25865  005B04  E2FC               	bc	u17951
 25866                           
 25867                           ; BSR set to: 0
 25868                           ;NetworkManager.c: 370: if((data!=(0)) && (size>0))
 25869  005B06  517B               	movf	NetworkPrepareSendPacket@data& (0+255),w,b
 25870  005B08  117C               	iorwf	(NetworkPrepareSendPacket@data+1)& (0+255),w,b
 25871  005B0A  E014               	bz	l2042
 25872                           
 25873                           ; BSR set to: 0
 25874  005B0C  517D               	movf	NetworkPrepareSendPacket@size& (0+255),w,b
 25875  005B0E  117E               	iorwf	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 25876  005B10  E011               	bz	l2042
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;NetworkManager.c: 371: {
 25880                           ;NetworkManager.c: 372: memcpy(&buffer[sizeof(net_data_header_t)],data,size);
 25881  005B12  0E1C               	movlw	28
 25882  005B14  2578               	addwf	NetworkPrepareSendPacket@buffer& (0+255),w,b
 25883  005B16  6F62               	movwf	memcpy@d1& (0+255),b
 25884  005B18  0E00               	movlw	0
 25885  005B1A  2179               	addwfc	(NetworkPrepareSendPacket@buffer+1)& (0+255),w,b
 25886  005B1C  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 25887  005B1E  C07B  F064         	movff	NetworkPrepareSendPacket@data,memcpy@s1
 25888  005B22  C07C  F065         	movff	NetworkPrepareSendPacket@data+1,memcpy@s1+1
 25889  005B26  C07D  F066         	movff	NetworkPrepareSendPacket@size,memcpy@n
 25890  005B2A  C07E  F067         	movff	NetworkPrepareSendPacket@size+1,memcpy@n+1
 25891  005B2E  ECFA  F03A         	call	_memcpy	;wreg free
 25892                           
 25893                           ;NetworkManager.c: 373: }else
 25894  005B32  D002               	goto	l12569
 25895  005B34                     l2042:
 25896                           
 25897                           ; BSR set to: 0
 25898                           ;NetworkManager.c: 374: {
 25899                           ;NetworkManager.c: 375: size=0;
 25900  005B34  6B7D               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 25901  005B36  6B7E               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 25902  005B38                     l12569:
 25903                           
 25904                           ; BSR set to: 0
 25905                           ;NetworkManager.c: 376: }
 25906                           ;NetworkManager.c: 377: return(size+sizeof(net_data_header_t));
 25907  005B38  0E1C               	movlw	28
 25908  005B3A  257D               	addwf	NetworkPrepareSendPacket@size& (0+255),w,b
 25909  005B3C  6F70               	movwf	?_NetworkPrepareSendPacket& (0+255),b
 25910  005B3E  0E00               	movlw	0
 25911  005B40  217E               	addwfc	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 25912  005B42  6F71               	movwf	(?_NetworkPrepareSendPacket+1)& (0+255),b
 25913                           
 25914                           ; BSR set to: 0
 25915  005B44  0012               	return		;funcret
 25916  005B46                     __end_of_NetworkPrepareSendPacket:
 25917                           	opt stack 0
 25918                           tblptru	equ	0xFF8
 25919                           tblptrh	equ	0xFF7
 25920                           tblptrl	equ	0xFF6
 25921                           tablat	equ	0xFF5
 25922                           prodh	equ	0xFF4
 25923                           prodl	equ	0xFF3
 25924                           intcon	equ	0xFF2
 25925                           postinc0	equ	0xFEE
 25926                           plusw0	equ	0xFEB
 25927                           fsr0h	equ	0xFEA
 25928                           fsr0l	equ	0xFE9
 25929                           wreg	equ	0xFE8
 25930                           indf1	equ	0xFE7
 25931                           postinc1	equ	0xFE6
 25932                           postdec1	equ	0xFE5
 25933                           plusw1	equ	0xFE3
 25934                           fsr1h	equ	0xFE2
 25935                           fsr1l	equ	0xFE1
 25936                           indf2	equ	0xFDF
 25937                           postinc2	equ	0xFDE
 25938                           postdec2	equ	0xFDD
 25939                           plusw2	equ	0xFDB
 25940                           fsr2h	equ	0xFDA
 25941                           fsr2l	equ	0xFD9
 25942                           status	equ	0xFD8
 25943                           
 25944 ;; *************** function _NetworkSequence *****************
 25945 ;; Defined at:
 25946 ;;		line 270 in file "../NetworkManager.c"
 25947 ;; Parameters:    Size  Location     Type
 25948 ;;		None
 25949 ;; Auto vars:     Size  Location     Type
 25950 ;;		None
 25951 ;; Return value:  Size  Location     Type
 25952 ;;                  1    wreg      unsigned char 
 25953 ;; Registers used:
 25954 ;;		wreg, status,2, status,0
 25955 ;; Tracked objects:
 25956 ;;		On entry : F/0
 25957 ;;		On exit  : F/0
 25958 ;;		Unchanged: F/0
 25959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25964 ;;Total ram usage:        0 bytes
 25965 ;; Hardware stack levels used:    1
 25966 ;; Hardware stack levels required when called:    4
 25967 ;; This function calls:
 25968 ;;		Nothing
 25969 ;; This function is called by:
 25970 ;;		_NetworkPrepareSendPacket
 25971 ;; This function uses a non-reentrant model
 25972 ;;
 25973                           
 25974                           	psect	text101
 25975  007C7A                     __ptext101:
 25976                           	opt stack 0
 25977  007C7A                     _NetworkSequence:
 25978                           	opt stack 22
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;NetworkManager.c: 272: return(NetSeq++);
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;incstack = 0
 25985  007C7A  2A43               	incf	_NetSeq,f,c
 25986  007C7C  0443               	decf	_NetSeq,w,c
 25987                           
 25988                           ; BSR set to: 0
 25989  007C7E  0012               	return		;funcret
 25990  007C80                     __end_of_NetworkSequence:
 25991                           	opt stack 0
 25992                           tblptru	equ	0xFF8
 25993                           tblptrh	equ	0xFF7
 25994                           tblptrl	equ	0xFF6
 25995                           tablat	equ	0xFF5
 25996                           prodh	equ	0xFF4
 25997                           prodl	equ	0xFF3
 25998                           intcon	equ	0xFF2
 25999                           postinc0	equ	0xFEE
 26000                           plusw0	equ	0xFEB
 26001                           fsr0h	equ	0xFEA
 26002                           fsr0l	equ	0xFE9
 26003                           wreg	equ	0xFE8
 26004                           indf1	equ	0xFE7
 26005                           postinc1	equ	0xFE6
 26006                           postdec1	equ	0xFE5
 26007                           plusw1	equ	0xFE3
 26008                           fsr1h	equ	0xFE2
 26009                           fsr1l	equ	0xFE1
 26010                           indf2	equ	0xFDF
 26011                           postinc2	equ	0xFDE
 26012                           postdec2	equ	0xFDD
 26013                           plusw2	equ	0xFDB
 26014                           fsr2h	equ	0xFDA
 26015                           fsr2l	equ	0xFD9
 26016                           status	equ	0xFD8
 26017                           
 26018 ;; *************** function _NetworkManagerGetMyAddress *****************
 26019 ;; Defined at:
 26020 ;;		line 235 in file "../NetworkManager.c"
 26021 ;; Parameters:    Size  Location     Type
 26022 ;;		None
 26023 ;; Auto vars:     Size  Location     Type
 26024 ;;		None
 26025 ;; Return value:  Size  Location     Type
 26026 ;;                  2    0[BANK0 ] PTR struct addr_t_def
 26027 ;; Registers used:
 26028 ;;		wreg, status,2, status,0
 26029 ;; Tracked objects:
 26030 ;;		On entry : E/0
 26031 ;;		On exit  : F/0
 26032 ;;		Unchanged: 0/0
 26033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26038 ;;Total ram usage:        2 bytes
 26039 ;; Hardware stack levels used:    1
 26040 ;; Hardware stack levels required when called:    4
 26041 ;; This function calls:
 26042 ;;		Nothing
 26043 ;; This function is called by:
 26044 ;;		_radioReceivedPacket
 26045 ;;		_NetworkUnicastData
 26046 ;;		_RouteManagerPerformUpdate
 26047 ;;		_networkSendBeacon
 26048 ;;		_TMSendFormedPacketToRFD
 26049 ;;		_NetworkPrepareSendPacket
 26050 ;; This function uses a non-reentrant model
 26051 ;;
 26052                           
 26053                           	psect	text102
 26054  007BEE                     __ptext102:
 26055                           	opt stack 0
 26056  007BEE                     _NetworkManagerGetMyAddress:
 26057                           	opt stack 22
 26058                           
 26059                           ;NetworkManager.c: 237: return (&MyAddress);
 26060                           
 26061                           ; BSR set to: 0
 26062                           ;incstack = 0
 26063  007BEE  0EEB               	movlw	low _MyAddress
 26064  007BF0  0100               	movlb	0	; () banked
 26065  007BF2  6F60               	movwf	?_NetworkManagerGetMyAddress& (0+255),b
 26066  007BF4  0E02               	movlw	high _MyAddress
 26067  007BF6  6F61               	movwf	(?_NetworkManagerGetMyAddress+1)& (0+255),b
 26068                           
 26069                           ; BSR set to: 0
 26070  007BF8  0012               	return		;funcret
 26071  007BFA                     __end_of_NetworkManagerGetMyAddress:
 26072                           	opt stack 0
 26073                           tblptru	equ	0xFF8
 26074                           tblptrh	equ	0xFF7
 26075                           tblptrl	equ	0xFF6
 26076                           tablat	equ	0xFF5
 26077                           prodh	equ	0xFF4
 26078                           prodl	equ	0xFF3
 26079                           intcon	equ	0xFF2
 26080                           postinc0	equ	0xFEE
 26081                           plusw0	equ	0xFEB
 26082                           fsr0h	equ	0xFEA
 26083                           fsr0l	equ	0xFE9
 26084                           wreg	equ	0xFE8
 26085                           indf1	equ	0xFE7
 26086                           postinc1	equ	0xFE6
 26087                           postdec1	equ	0xFE5
 26088                           plusw1	equ	0xFE3
 26089                           fsr1h	equ	0xFE2
 26090                           fsr1l	equ	0xFE1
 26091                           indf2	equ	0xFDF
 26092                           postinc2	equ	0xFDE
 26093                           postdec2	equ	0xFDD
 26094                           plusw2	equ	0xFDB
 26095                           fsr2h	equ	0xFDA
 26096                           fsr2l	equ	0xFD9
 26097                           status	equ	0xFD8
 26098                           
 26099 ;; *************** function _NetworkGetPANID *****************
 26100 ;; Defined at:
 26101 ;;		line 390 in file "../NetworkManager.c"
 26102 ;; Parameters:    Size  Location     Type
 26103 ;;		None
 26104 ;; Auto vars:     Size  Location     Type
 26105 ;;		None
 26106 ;; Return value:  Size  Location     Type
 26107 ;;                  2    0[BANK0 ] unsigned int 
 26108 ;; Registers used:
 26109 ;;		None
 26110 ;; Tracked objects:
 26111 ;;		On entry : 0/0
 26112 ;;		On exit  : 0/0
 26113 ;;		Unchanged: 0/0
 26114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26119 ;;Total ram usage:        2 bytes
 26120 ;; Hardware stack levels used:    1
 26121 ;; Hardware stack levels required when called:    4
 26122 ;; This function calls:
 26123 ;;		Nothing
 26124 ;; This function is called by:
 26125 ;;		_radioReceivedPacket
 26126 ;;		_networkSendBeacon
 26127 ;;		_BroadcastManagerTask
 26128 ;;		_TransportManagerTask
 26129 ;;		_TMSendFormedPacketToRFD
 26130 ;;		_NetworkManagerTask
 26131 ;;		_NetworkIssueDataRequest
 26132 ;; This function uses a non-reentrant model
 26133 ;;
 26134                           
 26135                           	psect	text103
 26136  007C3A                     __ptext103:
 26137                           	opt stack 0
 26138  007C3A                     _NetworkGetPANID:
 26139                           	opt stack 22
 26140                           
 26141                           ;NetworkManager.c: 392: return(DEVPanID);
 26142                           
 26143                           ; BSR set to: 0
 26144                           ;incstack = 0
 26145  007C3A  C2E9  F060         	movff	_DEVPanID,?_NetworkGetPANID
 26146  007C3E  C2EA  F061         	movff	_DEVPanID+1,?_NetworkGetPANID+1
 26147  007C42  0012               	return		;funcret
 26148  007C44                     __end_of_NetworkGetPANID:
 26149                           	opt stack 0
 26150                           tblptru	equ	0xFF8
 26151                           tblptrh	equ	0xFF7
 26152                           tblptrl	equ	0xFF6
 26153                           tablat	equ	0xFF5
 26154                           prodh	equ	0xFF4
 26155                           prodl	equ	0xFF3
 26156                           intcon	equ	0xFF2
 26157                           postinc0	equ	0xFEE
 26158                           plusw0	equ	0xFEB
 26159                           fsr0h	equ	0xFEA
 26160                           fsr0l	equ	0xFE9
 26161                           wreg	equ	0xFE8
 26162                           indf1	equ	0xFE7
 26163                           postinc1	equ	0xFE6
 26164                           postdec1	equ	0xFE5
 26165                           plusw1	equ	0xFE3
 26166                           fsr1h	equ	0xFE2
 26167                           fsr1l	equ	0xFE1
 26168                           indf2	equ	0xFDF
 26169                           postinc2	equ	0xFDE
 26170                           postdec2	equ	0xFDD
 26171                           plusw2	equ	0xFDB
 26172                           fsr2h	equ	0xFDA
 26173                           fsr2l	equ	0xFD9
 26174                           status	equ	0xFD8
 26175                           
 26176 ;; *************** function _CoordinatorGenericAddress *****************
 26177 ;; Defined at:
 26178 ;;		line 255 in file "../NetworkManager.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;		None
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;		None
 26183 ;; Return value:  Size  Location     Type
 26184 ;;                  8    8[BANK0 ] struct addr_t_def
 26185 ;; Registers used:
 26186 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 26187 ;; Tracked objects:
 26188 ;;		On entry : 0/0
 26189 ;;		On exit  : F/0
 26190 ;;		Unchanged: 0/0
 26191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26195 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26196 ;;Total ram usage:        8 bytes
 26197 ;; Hardware stack levels used:    1
 26198 ;; Hardware stack levels required when called:    5
 26199 ;; This function calls:
 26200 ;;		_NetworkAddressSizeGet
 26201 ;;		_memset
 26202 ;; This function is called by:
 26203 ;;		_radioReceivedPacket
 26204 ;;		_NetworkUnicastData
 26205 ;;		_TransportManagerTask
 26206 ;;		_NetworkManagerTask
 26207 ;;		_NetworkIssueDataRequest
 26208 ;; This function uses a non-reentrant model
 26209 ;;
 26210                           
 26211                           	psect	text104
 26212  00780C                     __ptext104:
 26213                           	opt stack 0
 26214  00780C                     _CoordinatorGenericAddress:
 26215                           	opt stack 23
 26216                           
 26217                           ;NetworkManager.c: 257: static addr_t address;
 26218                           ;NetworkManager.c: 261: memset(address.bytes,0x00,NetworkAddressSizeGet());
 26219                           
 26220                           ;incstack = 0
 26221  00780C  0E9D               	movlw	low CoordinatorGenericAddress@address
 26222  00780E  0100               	movlb	0	; () banked
 26223  007810  6F60               	movwf	memset@p1& (0+255),b
 26224  007812  0E02               	movlw	high CoordinatorGenericAddress@address
 26225  007814  6F61               	movwf	(memset@p1+1)& (0+255),b
 26226  007816  6B63               	clrf	(memset@c+1)& (0+255),b
 26227  007818  6B62               	clrf	memset@c& (0+255),b
 26228  00781A  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 26229  00781E  6F64               	movwf	memset@n& (0+255),b
 26230  007820  6B65               	clrf	(memset@n+1)& (0+255),b
 26231  007822  EC61  F03C         	call	_memset	;wreg free
 26232                           
 26233                           ; BSR set to: 0
 26234                           ;NetworkManager.c: 262: return(address);
 26235  007826  EE22  F09D         	lfsr	2,CoordinatorGenericAddress@address
 26236  00782A  EE00  F068         	lfsr	0,?_CoordinatorGenericAddress
 26237  00782E  0E07               	movlw	7
 26238  007830                     u18771:
 26239  007830  CFDB FFEB          	movff	plusw2,plusw0
 26240  007834  06E8               	decf	wreg,f,c
 26241  007836  E2FC               	bc	u18771
 26242                           
 26243                           ; BSR set to: 0
 26244  007838  0012               	return		;funcret
 26245  00783A                     __end_of_CoordinatorGenericAddress:
 26246                           	opt stack 0
 26247                           tblptru	equ	0xFF8
 26248                           tblptrh	equ	0xFF7
 26249                           tblptrl	equ	0xFF6
 26250                           tablat	equ	0xFF5
 26251                           prodh	equ	0xFF4
 26252                           prodl	equ	0xFF3
 26253                           intcon	equ	0xFF2
 26254                           postinc0	equ	0xFEE
 26255                           plusw0	equ	0xFEB
 26256                           fsr0h	equ	0xFEA
 26257                           fsr0l	equ	0xFE9
 26258                           wreg	equ	0xFE8
 26259                           indf1	equ	0xFE7
 26260                           postinc1	equ	0xFE6
 26261                           postdec1	equ	0xFE5
 26262                           plusw1	equ	0xFE3
 26263                           fsr1h	equ	0xFE2
 26264                           fsr1l	equ	0xFE1
 26265                           indf2	equ	0xFDF
 26266                           postinc2	equ	0xFDE
 26267                           postdec2	equ	0xFDD
 26268                           plusw2	equ	0xFDB
 26269                           fsr2h	equ	0xFDA
 26270                           fsr2l	equ	0xFD9
 26271                           status	equ	0xFD8
 26272                           
 26273 ;; *************** function _MiApp_ProtocolInit *****************
 26274 ;; Defined at:
 26275 ;;		line 148 in file "../src/Bridge.c"
 26276 ;; Parameters:    Size  Location     Type
 26277 ;;  bNetworkFree    1    wreg     unsigned char 
 26278 ;; Auto vars:     Size  Location     Type
 26279 ;;  bNetworkFree    1    0[COMRAM] unsigned char 
 26280 ;;  initValue       3   35[BANK0 ] struct .
 26281 ;;  res             1    0        unsigned char 
 26282 ;; Return value:  Size  Location     Type
 26283 ;;                  1    wreg      unsigned char 
 26284 ;; Registers used:
 26285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26286 ;; Tracked objects:
 26287 ;;		On entry : 0/0
 26288 ;;		On exit  : 0/0
 26289 ;;		Unchanged: 0/0
 26290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26292 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26294 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26295 ;;Total ram usage:        4 bytes
 26296 ;; Hardware stack levels used:    1
 26297 ;; Hardware stack levels required when called:    9
 26298 ;; This function calls:
 26299 ;;		_MiApp_SetAddressPan
 26300 ;;		_MiMAC_Init
 26301 ;;		_MiMAC_SetAltAddress
 26302 ;;		_NetworkSetDeviceType
 26303 ;;		_memset
 26304 ;; This function is called by:
 26305 ;;		_main
 26306 ;; This function uses a non-reentrant model
 26307 ;;
 26308                           
 26309                           	psect	text105
 26310  006B92                     __ptext105:
 26311                           	opt stack 0
 26312  006B92                     _MiApp_ProtocolInit:
 26313                           	opt stack 21
 26314                           
 26315                           ;Bridge.c: 150: bool res;
 26316                           ;Bridge.c: 151: MACINIT_PARAM initValue;
 26317                           ;Bridge.c: 152: initValue.PAddress = (uint8_t *) myLongAddress;
 26318                           
 26319                           ; BSR set to: 0
 26320                           ;incstack = 0
 26321  006B92  0EF3               	movlw	low _myLongAddress
 26322  006B94  0100               	movlb	0	; () banked
 26323  006B96  6F84               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
 26324  006B98  0E02               	movlw	high _myLongAddress
 26325  006B9A  6F85               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;Bridge.c: 153: initValue.actionFlags.bits.CCAEnable = 1;
 26329  006B9C  8383               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
 26330                           
 26331                           ; BSR set to: 0
 26332                           ;Bridge.c: 154: initValue.actionFlags.bits.PAddrLength = 8;
 26333  006B9E  5183               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
 26334  006BA0  0B87               	andlw	-121
 26335  006BA2  0940               	iorlw	64
 26336  006BA4  6F83               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;Bridge.c: 155: initValue.actionFlags.bits.RepeaterMode = 0;
 26340  006BA6  9183               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
 26341                           
 26342                           ; BSR set to: 0
 26343                           ;Bridge.c: 157: memset(ConnectionTable,0x00,sizeof(ConnectionTable));
 26344  006BA8  0E00               	movlw	low _ConnectionTable
 26345  006BAA  6F60               	movwf	memset@p1& (0+255),b
 26346  006BAC  0E03               	movlw	high _ConnectionTable
 26347  006BAE  6F61               	movwf	(memset@p1+1)& (0+255),b
 26348  006BB0  6B63               	clrf	(memset@c+1)& (0+255),b
 26349  006BB2  6B62               	clrf	memset@c& (0+255),b
 26350  006BB4  6B65               	clrf	(memset@n+1)& (0+255),b
 26351  006BB6  0E55               	movlw	85
 26352  006BB8  6F64               	movwf	memset@n& (0+255),b
 26353  006BBA  EC61  F03C         	call	_memset	;wreg free
 26354                           
 26355                           ; BSR set to: 0
 26356                           ;Bridge.c: 160: MiMAC_SetAltAddress(myLongAddress,(uint8_t*)&myPANID);
 26357  006BBE  0EF3               	movlw	low _myLongAddress
 26358  006BC0  6F6C               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 26359  006BC2  0E02               	movlw	high _myLongAddress
 26360  006BC4  6F6D               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 26361  006BC6  0E5C               	movlw	low _myPANID
 26362  006BC8  6F6E               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 26363  006BCA  EC91  F038         	call	_MiMAC_SetAltAddress	;wreg free
 26364  006BCE  C083  F074         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
 26365  006BD2  C084  F075         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
 26366  006BD6  C085  F076         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
 26367  006BDA  EC73  F033         	call	_MiMAC_Init	;wreg free
 26368                           
 26369                           ; BSR set to: 0
 26370                           ;Bridge.c: 163: MiApp_SetAddressPan(myLongAddress, myPANID);
 26371  006BDE  0EF3               	movlw	low _myLongAddress
 26372  006BE0  6F76               	movwf	MiApp_SetAddressPan@address& (0+255),b
 26373  006BE2  0E02               	movlw	high _myLongAddress
 26374  006BE4  6F77               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
 26375  006BE6  C05C  F078         	movff	_myPANID,MiApp_SetAddressPan@panid
 26376  006BEA  C05D  F079         	movff	_myPANID+1,MiApp_SetAddressPan@panid+1
 26377  006BEE  ECFD  F035         	call	_MiApp_SetAddressPan	;wreg free
 26378                           
 26379                           ;Bridge.c: 164: NetworkSetDeviceType(myDeviceType);
 26380  006BF2  0101               	movlb	1	; () banked
 26381  006BF4  51E5               	movf	_myDeviceType& (0+255),w,b
 26382  006BF6  EF22  F03E         	goto	_NetworkSetDeviceType
 26383  006BFA                     __end_of_MiApp_ProtocolInit:
 26384                           	opt stack 0
 26385                           tblptru	equ	0xFF8
 26386                           tblptrh	equ	0xFF7
 26387                           tblptrl	equ	0xFF6
 26388                           tablat	equ	0xFF5
 26389                           prodh	equ	0xFF4
 26390                           prodl	equ	0xFF3
 26391                           intcon	equ	0xFF2
 26392                           postinc0	equ	0xFEE
 26393                           plusw0	equ	0xFEB
 26394                           fsr0h	equ	0xFEA
 26395                           fsr0l	equ	0xFE9
 26396                           wreg	equ	0xFE8
 26397                           indf1	equ	0xFE7
 26398                           postinc1	equ	0xFE6
 26399                           postdec1	equ	0xFE5
 26400                           plusw1	equ	0xFE3
 26401                           fsr1h	equ	0xFE2
 26402                           fsr1l	equ	0xFE1
 26403                           indf2	equ	0xFDF
 26404                           postinc2	equ	0xFDE
 26405                           postdec2	equ	0xFDD
 26406                           plusw2	equ	0xFDB
 26407                           fsr2h	equ	0xFDA
 26408                           fsr2l	equ	0xFD9
 26409                           status	equ	0xFD8
 26410                           
 26411 ;; *************** function _NetworkSetDeviceType *****************
 26412 ;; Defined at:
 26413 ;;		line 441 in file "../NetworkManager.c"
 26414 ;; Parameters:    Size  Location     Type
 26415 ;;  dev             1    wreg     enum E145
 26416 ;; Auto vars:     Size  Location     Type
 26417 ;;  dev             1    0[BANK0 ] enum E145
 26418 ;; Return value:  Size  Location     Type
 26419 ;;                  1    wreg      void 
 26420 ;; Registers used:
 26421 ;;		wreg
 26422 ;; Tracked objects:
 26423 ;;		On entry : F/1
 26424 ;;		On exit  : 0/0
 26425 ;;		Unchanged: 0/0
 26426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26430 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26431 ;;Total ram usage:        1 bytes
 26432 ;; Hardware stack levels used:    1
 26433 ;; Hardware stack levels required when called:    4
 26434 ;; This function calls:
 26435 ;;		Nothing
 26436 ;; This function is called by:
 26437 ;;		_MiApp_ProtocolInit
 26438 ;; This function uses a non-reentrant model
 26439 ;;
 26440                           
 26441                           	psect	text106
 26442  007C44                     __ptext106:
 26443                           	opt stack 0
 26444  007C44                     _NetworkSetDeviceType:
 26445                           	opt stack 25
 26446                           
 26447                           ;incstack = 0
 26448                           ;NetworkSetDeviceType@dev stored from wreg
 26449  007C44  0100               	movlb	0	; () banked
 26450  007C46  6F60               	movwf	NetworkSetDeviceType@dev& (0+255),b
 26451                           
 26452                           ;NetworkManager.c: 443: DeviceType=dev;
 26453  007C48  C060  F05A         	movff	NetworkSetDeviceType@dev,_DeviceType
 26454  007C4C  0012               	return		;funcret
 26455  007C4E                     __end_of_NetworkSetDeviceType:
 26456                           	opt stack 0
 26457                           tblptru	equ	0xFF8
 26458                           tblptrh	equ	0xFF7
 26459                           tblptrl	equ	0xFF6
 26460                           tablat	equ	0xFF5
 26461                           prodh	equ	0xFF4
 26462                           prodl	equ	0xFF3
 26463                           intcon	equ	0xFF2
 26464                           postinc0	equ	0xFEE
 26465                           plusw0	equ	0xFEB
 26466                           fsr0h	equ	0xFEA
 26467                           fsr0l	equ	0xFE9
 26468                           wreg	equ	0xFE8
 26469                           indf1	equ	0xFE7
 26470                           postinc1	equ	0xFE6
 26471                           postdec1	equ	0xFE5
 26472                           plusw1	equ	0xFE3
 26473                           fsr1h	equ	0xFE2
 26474                           fsr1l	equ	0xFE1
 26475                           indf2	equ	0xFDF
 26476                           postinc2	equ	0xFDE
 26477                           postdec2	equ	0xFDD
 26478                           plusw2	equ	0xFDB
 26479                           fsr2h	equ	0xFDA
 26480                           fsr2l	equ	0xFD9
 26481                           status	equ	0xFD8
 26482                           
 26483 ;; *************** function _MiMAC_Init *****************
 26484 ;; Defined at:
 26485 ;;		line 1547 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 26486 ;; Parameters:    Size  Location     Type
 26487 ;;  initValue       3   20[BANK0 ] struct .
 26488 ;; Auto vars:     Size  Location     Type
 26489 ;;  seed            2   23[BANK0 ] unsigned int 
 26490 ;;  i               1   25[BANK0 ] unsigned char 
 26491 ;; Return value:  Size  Location     Type
 26492 ;;                  1    wreg      unsigned char 
 26493 ;; Registers used:
 26494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26495 ;; Tracked objects:
 26496 ;;		On entry : 0/0
 26497 ;;		On exit  : F/0
 26498 ;;		Unchanged: 0/0
 26499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26504 ;;Total ram usage:        6 bytes
 26505 ;; Hardware stack levels used:    1
 26506 ;; Hardware stack levels required when called:    8
 26507 ;; This function calls:
 26508 ;;		_DelayMs
 26509 ;;		_InitMRF24J40
 26510 ;;		_MiMAC_ChannelAssessment
 26511 ;;		_krnd
 26512 ;;		_krndInit
 26513 ;; This function is called by:
 26514 ;;		_MiApp_ProtocolInit
 26515 ;; This function uses a non-reentrant model
 26516 ;;
 26517                           
 26518                           	psect	text107
 26519  0066E6                     __ptext107:
 26520                           	opt stack 0
 26521  0066E6                     _MiMAC_Init:
 26522                           	opt stack 21
 26523                           
 26524                           ;drv_mrf_miwi_mesh_24j40.c: 1549: uint8_t i;
 26525                           ;drv_mrf_miwi_mesh_24j40.c: 1551: MACInitParams = initValue;
 26526                           
 26527                           ;incstack = 0
 26528  0066E6  C074  F257         	movff	MiMAC_Init@initValue,_MACInitParams
 26529  0066EA  C075  F258         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
 26530  0066EE  C076  F259         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
 26531                           
 26532                           ;drv_mrf_miwi_mesh_24j40.c: 1553: IEEESeqNum = TMR1;
 26533  0066F2  CFCE F040          	movff	4046,_IEEESeqNum	;volatile
 26534                           
 26535                           ;drv_mrf_miwi_mesh_24j40.c: 1555: MACCurrentChannel = 11;
 26536  0066F6  0E0B               	movlw	11
 26537  0066F8  6E41               	movwf	_MACCurrentChannel,c
 26538                           
 26539                           ;drv_mrf_miwi_mesh_24j40.c: 1557: InitMRF24J40();
 26540  0066FA  ECFF  F01F         	call	_InitMRF24J40	;wreg free
 26541                           
 26542                           ;drv_mrf_miwi_mesh_24j40.c: 1559: MRF24J40Status.Val = 0;
 26543  0066FE  6A42               	clrf	_MRF24J40Status,c	;volatile
 26544                           
 26545                           ;drv_mrf_miwi_mesh_24j40.c: 1561: for(i = 0; i < 2; i++)
 26546  006700  0100               	movlb	0	; () banked
 26547  006702  6B79               	clrf	MiMAC_Init@i& (0+255),b
 26548  006704                     l14501:
 26549                           
 26550                           ; BSR set to: 0
 26551                           ;drv_mrf_miwi_mesh_24j40.c: 1562: {
 26552                           ;drv_mrf_miwi_mesh_24j40.c: 1563: RxBuffer[i].PayloadLen = 0;
 26553  006704  5179               	movf	MiMAC_Init@i& (0+255),w,b
 26554  006706  0D80               	mullw	128
 26555  006708  0E00               	movlw	low _RxBuffer
 26556  00670A  24F3               	addwf	prodl,w,c
 26557  00670C  6ED9               	movwf	fsr2l,c
 26558  00670E  0E04               	movlw	high _RxBuffer
 26559  006710  20F4               	addwfc	prodh,w,c
 26560  006712  6EDA               	movwf	fsr2h,c
 26561  006714  6ADF               	clrf	indf2,c
 26562                           
 26563                           ; BSR set to: 0
 26564  006716  2B79               	incf	MiMAC_Init@i& (0+255),f,b
 26565                           
 26566                           ; BSR set to: 0
 26567  006718  0E01               	movlw	1
 26568  00671A  6579               	cpfsgt	MiMAC_Init@i& (0+255),b
 26569  00671C  D7F3               	goto	l14501
 26570                           
 26571                           ; BSR set to: 0
 26572                           ;drv_mrf_miwi_mesh_24j40.c: 1564: }
 26573                           ;drv_mrf_miwi_mesh_24j40.c: 1580: OutgoingFrameCounter = 1;
 26574  00671E  0102               	movlb	2	; () banked
 26575  006720  6F3C               	movwf	_OutgoingFrameCounter& (0+255),b
 26576  006722  6B3D               	clrf	(_OutgoingFrameCounter+1)& (0+255),b
 26577  006724  6B3E               	clrf	(_OutgoingFrameCounter+2)& (0+255),b
 26578  006726  6B3F               	clrf	(_OutgoingFrameCounter+3)& (0+255),b
 26579                           
 26580                           ; BSR set to: 2
 26581                           ;drv_mrf_miwi_mesh_24j40.c: 1584: uint16_t seed=0;
 26582  006728  0100               	movlb	0	; () banked
 26583  00672A  6B77               	clrf	MiMAC_Init@seed& (0+255),b
 26584  00672C  6B78               	clrf	(MiMAC_Init@seed+1)& (0+255),b
 26585                           
 26586                           ; BSR set to: 0
 26587                           ;drv_mrf_miwi_mesh_24j40.c: 1585: for(i=0;i<16;i++)
 26588  00672E  6B79               	clrf	MiMAC_Init@i& (0+255),b
 26589  006730                     l14517:
 26590                           
 26591                           ; BSR set to: 0
 26592                           ;drv_mrf_miwi_mesh_24j40.c: 1586: {
 26593                           ;drv_mrf_miwi_mesh_24j40.c: 1587: seed<<=1;
 26594  006730  90D8               	bcf	status,0,c
 26595  006732  3777               	rlcf	MiMAC_Init@seed& (0+255),f,b
 26596  006734  3778               	rlcf	(MiMAC_Init@seed+1)& (0+255),f,b
 26597                           
 26598                           ; BSR set to: 0
 26599                           ;drv_mrf_miwi_mesh_24j40.c: 1588: seed|=((MiMAC_ChannelAssessment(0x00)) & 0x01);
 26600  006736  EC37  F03B         	call	_MiMAC_ChannelAssessment
 26601  00673A  0B01               	andlw	1
 26602  00673C  1377               	iorwf	MiMAC_Init@seed& (0+255),f,b
 26603                           
 26604                           ; BSR set to: 0
 26605                           ;drv_mrf_miwi_mesh_24j40.c: 1590: DelayMs(10);
 26606  00673E  0E0A               	movlw	10
 26607  006740  6F68               	movwf	DelayMs@ms& (0+255),b
 26608  006742  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 26609  006744  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 26610  006746  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 26611  006748  ECD0  F031         	call	_DelayMs	;wreg free
 26612                           
 26613                           ; BSR set to: 0
 26614  00674C  2B79               	incf	MiMAC_Init@i& (0+255),f,b
 26615                           
 26616                           ; BSR set to: 0
 26617  00674E  0E0F               	movlw	15
 26618  006750  6579               	cpfsgt	MiMAC_Init@i& (0+255),b
 26619  006752  D7EE               	goto	l14517
 26620                           
 26621                           ; BSR set to: 0
 26622                           ;drv_mrf_miwi_mesh_24j40.c: 1591: }
 26623                           ;drv_mrf_miwi_mesh_24j40.c: 1593: krndInit(seed);
 26624  006754  C077  F060         	movff	MiMAC_Init@seed,krndInit@value
 26625  006758  C078  F061         	movff	MiMAC_Init@seed+1,krndInit@value+1
 26626  00675C  EC7F  F02E         	call	_krndInit	;wreg free
 26627                           
 26628                           ;drv_mrf_miwi_mesh_24j40.c: 1594: IEEESeqNum = krnd();
 26629  006760  EC76  F022         	call	_krnd	;wreg free
 26630  006764  5160               	movf	?_krnd& (0+255),w,b
 26631  006766  6E40               	movwf	_IEEESeqNum,c
 26632                           
 26633                           ; BSR set to: 0
 26634                           
 26635                           ; BSR set to: 0
 26636                           ;drv_mrf_miwi_mesh_24j40.c: 1596: return 1;
 26637  006768  0C01               	retlw	1	;funcret
 26638  00676A                     __end_of_MiMAC_Init:
 26639                           	opt stack 0
 26640                           tblptru	equ	0xFF8
 26641                           tblptrh	equ	0xFF7
 26642                           tblptrl	equ	0xFF6
 26643                           tablat	equ	0xFF5
 26644                           prodh	equ	0xFF4
 26645                           prodl	equ	0xFF3
 26646                           intcon	equ	0xFF2
 26647                           postinc0	equ	0xFEE
 26648                           plusw0	equ	0xFEB
 26649                           fsr0h	equ	0xFEA
 26650                           fsr0l	equ	0xFE9
 26651                           wreg	equ	0xFE8
 26652                           indf1	equ	0xFE7
 26653                           postinc1	equ	0xFE6
 26654                           postdec1	equ	0xFE5
 26655                           plusw1	equ	0xFE3
 26656                           fsr1h	equ	0xFE2
 26657                           fsr1l	equ	0xFE1
 26658                           indf2	equ	0xFDF
 26659                           postinc2	equ	0xFDE
 26660                           postdec2	equ	0xFDD
 26661                           plusw2	equ	0xFDB
 26662                           fsr2h	equ	0xFDA
 26663                           fsr2l	equ	0xFD9
 26664                           status	equ	0xFD8
 26665                           
 26666 ;; *************** function _krndInit *****************
 26667 ;; Defined at:
 26668 ;;		line 7 in file "../krnd.c"
 26669 ;; Parameters:    Size  Location     Type
 26670 ;;  value           2    0[BANK0 ] unsigned int 
 26671 ;; Auto vars:     Size  Location     Type
 26672 ;;		None
 26673 ;; Return value:  Size  Location     Type
 26674 ;;                  1    wreg      void 
 26675 ;; Registers used:
 26676 ;;		wreg, status,2, status,0
 26677 ;; Tracked objects:
 26678 ;;		On entry : F/0
 26679 ;;		On exit  : F/2
 26680 ;;		Unchanged: 0/0
 26681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26685 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26686 ;;Total ram usage:        6 bytes
 26687 ;; Hardware stack levels used:    1
 26688 ;; Hardware stack levels required when called:    4
 26689 ;; This function calls:
 26690 ;;		Nothing
 26691 ;; This function is called by:
 26692 ;;		_MiMAC_Init
 26693 ;; This function uses a non-reentrant model
 26694 ;;
 26695                           
 26696                           	psect	text108
 26697  005CFE                     __ptext108:
 26698                           	opt stack 0
 26699  005CFE                     _krndInit:
 26700                           	opt stack 24
 26701                           
 26702                           ; BSR set to: 0
 26703                           ;krnd.c: 9: x|=(value<<0);
 26704                           
 26705                           ; BSR set to: 0
 26706                           ;incstack = 0
 26707  005CFE  5160               	movf	krndInit@value& (0+255),w,b
 26708  005D00  6F62               	movwf	??_krndInit& (0+255),b
 26709  005D02  5161               	movf	(krndInit@value+1)& (0+255),w,b
 26710  005D04  6F63               	movwf	(??_krndInit+1)& (0+255),b
 26711  005D06  6B64               	clrf	(??_krndInit+2)& (0+255),b
 26712  005D08  6B65               	clrf	(??_krndInit+3)& (0+255),b
 26713  005D0A  5162               	movf	??_krndInit& (0+255),w,b
 26714  005D0C  0102               	movlb	2	; () banked
 26715  005D0E  13E1               	iorwf	_x& (0+255),f,b
 26716  005D10  0100               	movlb	0	; () banked
 26717  005D12  5163               	movf	(??_krndInit+1)& (0+255),w,b
 26718  005D14  0102               	movlb	2	; () banked
 26719  005D16  13E2               	iorwf	(_x+1)& (0+255),f,b
 26720  005D18  0100               	movlb	0	; () banked
 26721  005D1A  5164               	movf	(??_krndInit+2)& (0+255),w,b
 26722  005D1C  0102               	movlb	2	; () banked
 26723  005D1E  13E3               	iorwf	(_x+2)& (0+255),f,b
 26724  005D20  0100               	movlb	0	; () banked
 26725  005D22  5165               	movf	(??_krndInit+3)& (0+255),w,b
 26726  005D24  0102               	movlb	2	; () banked
 26727  005D26  13E4               	iorwf	(_x+3)& (0+255),f,b
 26728                           
 26729                           ;krnd.c: 10: y|=(((uint32_t)value)<<16);
 26730  005D28  0100               	movlb	0	; () banked
 26731  005D2A  5160               	movf	krndInit@value& (0+255),w,b
 26732  005D2C  6F62               	movwf	??_krndInit& (0+255),b
 26733  005D2E  5161               	movf	(krndInit@value+1)& (0+255),w,b
 26734  005D30  6F63               	movwf	(??_krndInit+1)& (0+255),b
 26735  005D32  6B64               	clrf	(??_krndInit+2)& (0+255),b
 26736  005D34  6B65               	clrf	(??_krndInit+3)& (0+255),b
 26737  005D36  C063  F065         	movff	??_krndInit+1,??_krndInit+3
 26738  005D3A  C062  F064         	movff	??_krndInit,??_krndInit+2
 26739  005D3E  6B63               	clrf	(??_krndInit+1)& (0+255),b
 26740  005D40  6B62               	clrf	??_krndInit& (0+255),b
 26741  005D42  5162               	movf	??_krndInit& (0+255),w,b
 26742  005D44  1255               	iorwf	_y,f,c
 26743  005D46  5163               	movf	(??_krndInit+1)& (0+255),w,b
 26744  005D48  1256               	iorwf	_y+1,f,c
 26745  005D4A  5164               	movf	(??_krndInit+2)& (0+255),w,b
 26746  005D4C  1257               	iorwf	_y+2,f,c
 26747  005D4E  5165               	movf	(??_krndInit+3)& (0+255),w,b
 26748  005D50  1258               	iorwf	_y+3,f,c
 26749                           
 26750                           ;krnd.c: 11: z|=(((uint32_t)value)<<24);
 26751  005D52  5160               	movf	krndInit@value& (0+255),w,b
 26752  005D54  6F62               	movwf	??_krndInit& (0+255),b
 26753  005D56  5161               	movf	(krndInit@value+1)& (0+255),w,b
 26754  005D58  6F63               	movwf	(??_krndInit+1)& (0+255),b
 26755  005D5A  6B64               	clrf	(??_krndInit+2)& (0+255),b
 26756  005D5C  6B65               	clrf	(??_krndInit+3)& (0+255),b
 26757  005D5E  C062  F065         	movff	??_krndInit,??_krndInit+3
 26758  005D62  6B64               	clrf	(??_krndInit+2)& (0+255),b
 26759  005D64  6B63               	clrf	(??_krndInit+1)& (0+255),b
 26760  005D66  6B62               	clrf	??_krndInit& (0+255),b
 26761  005D68  5162               	movf	??_krndInit& (0+255),w,b
 26762  005D6A  0102               	movlb	2	; () banked
 26763  005D6C  13E5               	iorwf	_z& (0+255),f,b
 26764  005D6E  0100               	movlb	0	; () banked
 26765  005D70  5163               	movf	(??_krndInit+1)& (0+255),w,b
 26766  005D72  0102               	movlb	2	; () banked
 26767  005D74  13E6               	iorwf	(_z+1)& (0+255),f,b
 26768  005D76  0100               	movlb	0	; () banked
 26769  005D78  5164               	movf	(??_krndInit+2)& (0+255),w,b
 26770  005D7A  0102               	movlb	2	; () banked
 26771  005D7C  13E7               	iorwf	(_z+2)& (0+255),f,b
 26772  005D7E  0100               	movlb	0	; () banked
 26773  005D80  5165               	movf	(??_krndInit+3)& (0+255),w,b
 26774  005D82  0102               	movlb	2	; () banked
 26775  005D84  13E8               	iorwf	(_z+3)& (0+255),f,b
 26776                           
 26777                           ;krnd.c: 12: w&=(value);
 26778  005D86  0100               	movlb	0	; () banked
 26779  005D88  5160               	movf	krndInit@value& (0+255),w,b
 26780  005D8A  6F62               	movwf	??_krndInit& (0+255),b
 26781  005D8C  5161               	movf	(krndInit@value+1)& (0+255),w,b
 26782  005D8E  6F63               	movwf	(??_krndInit+1)& (0+255),b
 26783  005D90  6B64               	clrf	(??_krndInit+2)& (0+255),b
 26784  005D92  6B65               	clrf	(??_krndInit+3)& (0+255),b
 26785  005D94  5162               	movf	??_krndInit& (0+255),w,b
 26786  005D96  0102               	movlb	2	; () banked
 26787  005D98  17DD               	andwf	_w& (0+255),f,b
 26788  005D9A  0100               	movlb	0	; () banked
 26789  005D9C  5163               	movf	(??_krndInit+1)& (0+255),w,b
 26790  005D9E  0102               	movlb	2	; () banked
 26791  005DA0  17DE               	andwf	(_w+1)& (0+255),f,b
 26792  005DA2  0100               	movlb	0	; () banked
 26793  005DA4  5164               	movf	(??_krndInit+2)& (0+255),w,b
 26794  005DA6  0102               	movlb	2	; () banked
 26795  005DA8  17DF               	andwf	(_w+2)& (0+255),f,b
 26796  005DAA  0100               	movlb	0	; () banked
 26797  005DAC  5165               	movf	(??_krndInit+3)& (0+255),w,b
 26798  005DAE  0102               	movlb	2	; () banked
 26799  005DB0  17E0               	andwf	(_w+3)& (0+255),f,b
 26800                           
 26801                           ; BSR set to: 2
 26802                           ;krnd.c: 13: c=value;
 26803  005DB2  C060  F240         	movff	krndInit@value,_c
 26804  005DB6  C061  F241         	movff	krndInit@value+1,_c+1
 26805  005DBA  6B42               	clrf	(_c+2)& (0+255),b
 26806  005DBC  6B43               	clrf	(_c+3)& (0+255),b
 26807                           
 26808                           ; BSR set to: 2
 26809  005DBE  0012               	return		;funcret
 26810  005DC0                     __end_of_krndInit:
 26811                           	opt stack 0
 26812                           tblptru	equ	0xFF8
 26813                           tblptrh	equ	0xFF7
 26814                           tblptrl	equ	0xFF6
 26815                           tablat	equ	0xFF5
 26816                           prodh	equ	0xFF4
 26817                           prodl	equ	0xFF3
 26818                           intcon	equ	0xFF2
 26819                           postinc0	equ	0xFEE
 26820                           plusw0	equ	0xFEB
 26821                           fsr0h	equ	0xFEA
 26822                           fsr0l	equ	0xFE9
 26823                           wreg	equ	0xFE8
 26824                           indf1	equ	0xFE7
 26825                           postinc1	equ	0xFE6
 26826                           postdec1	equ	0xFE5
 26827                           plusw1	equ	0xFE3
 26828                           fsr1h	equ	0xFE2
 26829                           fsr1l	equ	0xFE1
 26830                           indf2	equ	0xFDF
 26831                           postinc2	equ	0xFDE
 26832                           postdec2	equ	0xFDD
 26833                           plusw2	equ	0xFDB
 26834                           fsr2h	equ	0xFDA
 26835                           fsr2l	equ	0xFD9
 26836                           status	equ	0xFD8
 26837                           
 26838 ;; *************** function _MiMAC_ChannelAssessment *****************
 26839 ;; Defined at:
 26840 ;;		line 1134 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 26841 ;; Parameters:    Size  Location     Type
 26842 ;;  AssessmentMo    1    wreg     unsigned char 
 26843 ;; Auto vars:     Size  Location     Type
 26844 ;;  AssessmentMo    1    0[COMRAM] unsigned char 
 26845 ;;  RSSIcheck       1    8[BANK0 ] unsigned char 
 26846 ;; Return value:  Size  Location     Type
 26847 ;;                  1    wreg      unsigned char 
 26848 ;; Registers used:
 26849 ;;		wreg, status,2, status,0, cstack
 26850 ;; Tracked objects:
 26851 ;;		On entry : F/0
 26852 ;;		On exit  : F/0
 26853 ;;		Unchanged: 0/0
 26854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26859 ;;Total ram usage:        1 bytes
 26860 ;; Hardware stack levels used:    1
 26861 ;; Hardware stack levels required when called:    7
 26862 ;; This function calls:
 26863 ;;		_PHYGetLongRAMAddr
 26864 ;;		_PHYGetShortRAMAddr
 26865 ;;		_PHYSetShortRAMAddr
 26866 ;; This function is called by:
 26867 ;;		_MiMAC_Init
 26868 ;; This function uses a non-reentrant model
 26869 ;;
 26870                           
 26871                           	psect	text109
 26872  00766E                     __ptext109:
 26873                           	opt stack 0
 26874  00766E                     _MiMAC_ChannelAssessment:
 26875                           	opt stack 21
 26876                           
 26877                           ; BSR set to: 0
 26878                           ;drv_mrf_miwi_mesh_24j40.c: 1136: uint8_t RSSIcheck;
 26879                           ;drv_mrf_miwi_mesh_24j40.c: 1150: PHYSetShortRAMAddr((0x7D), 0x80);
 26880                           
 26881                           ; BSR set to: 2
 26882                           ;incstack = 0
 26883  00766E  0E80               	movlw	128
 26884  007670  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 26885  007672  0E7D               	movlw	125
 26886  007674  EC34  F03C         	call	_PHYSetShortRAMAddr
 26887                           
 26888                           ;drv_mrf_miwi_mesh_24j40.c: 1153: RSSIcheck = PHYGetShortRAMAddr ((0x7C));
 26889  007678  0E7C               	movlw	124
 26890  00767A  ECD7  F03B         	call	_PHYGetShortRAMAddr
 26891  00767E  D003               	goto	L26
 26892  007680                     l14357:
 26893                           
 26894                           ; BSR set to: 0
 26895                           ;drv_mrf_miwi_mesh_24j40.c: 1155: {
 26896                           ;drv_mrf_miwi_mesh_24j40.c: 1156: RSSIcheck = PHYGetShortRAMAddr ((0x7C));
 26897  007680  0E7C               	movlw	124
 26898  007682  ECD7  F03B         	call	_PHYGetShortRAMAddr
 26899  007686                     L26:
 26900  007686  6F68               	movwf	MiMAC_ChannelAssessment@RSSIcheck& (0+255),b
 26901                           
 26902                           ; BSR set to: 0
 26903  007688  A168               	btfss	MiMAC_ChannelAssessment@RSSIcheck& (0+255),0,b
 26904  00768A  D7FA               	goto	l14357
 26905                           
 26906                           ; BSR set to: 0
 26907                           ;drv_mrf_miwi_mesh_24j40.c: 1157: }
 26908                           ;drv_mrf_miwi_mesh_24j40.c: 1160: RSSIcheck = PHYGetLongRAMAddr(0x210);
 26909  00768C  0E02               	movlw	2
 26910  00768E  6F63               	movwf	(PHYGetLongRAMAddr@address+1)& (0+255),b
 26911  007690  0E10               	movlw	16
 26912  007692  6F62               	movwf	PHYGetLongRAMAddr@address& (0+255),b
 26913  007694  EC10  F038         	call	_PHYGetLongRAMAddr	;wreg free
 26914  007698  6F68               	movwf	MiMAC_ChannelAssessment@RSSIcheck& (0+255),b
 26915                           
 26916                           ; BSR set to: 0
 26917                           ;drv_mrf_miwi_mesh_24j40.c: 1164: PHYSetShortRAMAddr((0x7D), 0x40);
 26918  00769A  0E40               	movlw	64
 26919  00769C  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 26920  00769E  0E7D               	movlw	125
 26921  0076A0  EC34  F03C         	call	_PHYSetShortRAMAddr
 26922                           
 26923                           ;drv_mrf_miwi_mesh_24j40.c: 1177: return RSSIcheck;
 26924  0076A4  0100               	movlb	0	; () banked
 26925  0076A6  5168               	movf	MiMAC_ChannelAssessment@RSSIcheck& (0+255),w,b
 26926                           
 26927                           ; BSR set to: 0
 26928  0076A8  0012               	return		;funcret
 26929  0076AA                     __end_of_MiMAC_ChannelAssessment:
 26930                           	opt stack 0
 26931                           tblptru	equ	0xFF8
 26932                           tblptrh	equ	0xFF7
 26933                           tblptrl	equ	0xFF6
 26934                           tablat	equ	0xFF5
 26935                           prodh	equ	0xFF4
 26936                           prodl	equ	0xFF3
 26937                           intcon	equ	0xFF2
 26938                           postinc0	equ	0xFEE
 26939                           plusw0	equ	0xFEB
 26940                           fsr0h	equ	0xFEA
 26941                           fsr0l	equ	0xFE9
 26942                           wreg	equ	0xFE8
 26943                           indf1	equ	0xFE7
 26944                           postinc1	equ	0xFE6
 26945                           postdec1	equ	0xFE5
 26946                           plusw1	equ	0xFE3
 26947                           fsr1h	equ	0xFE2
 26948                           fsr1l	equ	0xFE1
 26949                           indf2	equ	0xFDF
 26950                           postinc2	equ	0xFDE
 26951                           postdec2	equ	0xFDD
 26952                           plusw2	equ	0xFDB
 26953                           fsr2h	equ	0xFDA
 26954                           fsr2l	equ	0xFD9
 26955                           status	equ	0xFD8
 26956                           
 26957 ;; *************** function _InitMRF24J40 *****************
 26958 ;; Defined at:
 26959 ;;		line 267 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 26960 ;; Parameters:    Size  Location     Type
 26961 ;;		None
 26962 ;; Auto vars:     Size  Location     Type
 26963 ;;  j               2   12[BANK0 ] unsigned int 
 26964 ;;  i               1   11[BANK0 ] unsigned char 
 26965 ;; Return value:  Size  Location     Type
 26966 ;;                  1    wreg      void 
 26967 ;; Registers used:
 26968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26969 ;; Tracked objects:
 26970 ;;		On entry : 0/0
 26971 ;;		On exit  : 0/0
 26972 ;;		Unchanged: 0/0
 26973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26975 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26976 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26977 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26978 ;;Total ram usage:        4 bytes
 26979 ;; Hardware stack levels used:    1
 26980 ;; Hardware stack levels required when called:    7
 26981 ;; This function calls:
 26982 ;;		_MiMAC_SetChannel
 26983 ;;		_PHYGetLongRAMAddr
 26984 ;;		_PHYGetShortRAMAddr
 26985 ;;		_PHYSetLongRAMAddr
 26986 ;;		_PHYSetShortRAMAddr
 26987 ;; This function is called by:
 26988 ;;		_MiMAC_SendPacket
 26989 ;;		_MiMAC_PowerState
 26990 ;;		_MiMAC_Init
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text110
 26995  003FFE                     __ptext110:
 26996                           	opt stack 0
 26997  003FFE                     _InitMRF24J40:
 26998                           	opt stack 16
 26999                           
 27000                           ;drv_mrf_miwi_mesh_24j40.c: 269: uint8_t i;
 27001                           ;drv_mrf_miwi_mesh_24j40.c: 270: uint16_t j;
 27002                           ;drv_mrf_miwi_mesh_24j40.c: 273: LATDbits.LATD0 = 0;
 27003                           
 27004                           ; BSR set to: 0
 27005                           ;incstack = 0
 27006  003FFE  908C               	bcf	3980,0,c	;volatile
 27007                           
 27008                           ;drv_mrf_miwi_mesh_24j40.c: 274: for(j=0;j<(uint16_t)300;j++){}
 27009  004000  0100               	movlb	0	; () banked
 27010  004002  6B6C               	clrf	InitMRF24J40@j& (0+255),b
 27011  004004  6B6D               	clrf	(InitMRF24J40@j+1)& (0+255),b
 27012  004006                     l11659:
 27013                           
 27014                           ; BSR set to: 0
 27015  004006  4B6C               	infsnz	InitMRF24J40@j& (0+255),f,b
 27016  004008  2B6D               	incf	(InitMRF24J40@j+1)& (0+255),f,b
 27017                           
 27018                           ; BSR set to: 0
 27019  00400A  0E2C               	movlw	44
 27020  00400C  5D6C               	subwf	InitMRF24J40@j& (0+255),w,b
 27021  00400E  0E01               	movlw	1
 27022  004010  596D               	subwfb	(InitMRF24J40@j+1)& (0+255),w,b
 27023  004012  E3F9               	bnc	l11659
 27024                           
 27025                           ; BSR set to: 0
 27026                           ;drv_mrf_miwi_mesh_24j40.c: 276: LATDbits.LATD0 = 1;
 27027  004014  808C               	bsf	3980,0,c	;volatile
 27028                           
 27029                           ;drv_mrf_miwi_mesh_24j40.c: 277: for(j=0;j<(uint16_t)300;j++){}
 27030  004016  6B6C               	clrf	InitMRF24J40@j& (0+255),b
 27031  004018  6B6D               	clrf	(InitMRF24J40@j+1)& (0+255),b
 27032  00401A                     l11667:
 27033                           
 27034                           ; BSR set to: 0
 27035  00401A  4B6C               	infsnz	InitMRF24J40@j& (0+255),f,b
 27036  00401C  2B6D               	incf	(InitMRF24J40@j+1)& (0+255),f,b
 27037                           
 27038                           ; BSR set to: 0
 27039  00401E  0E2C               	movlw	44
 27040  004020  5D6C               	subwf	InitMRF24J40@j& (0+255),w,b
 27041  004022  0E01               	movlw	1
 27042  004024  596D               	subwfb	(InitMRF24J40@j+1)& (0+255),w,b
 27043  004026  E3F9               	bnc	l11667
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;drv_mrf_miwi_mesh_24j40.c: 280: PHYSetShortRAMAddr((0x55),0x07);
 27047  004028  0E07               	movlw	7
 27048  00402A  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27049  00402C  0E55               	movlw	85
 27050  00402E  EC34  F03C         	call	_PHYSetShortRAMAddr
 27051  004032                     l745:
 27052                           
 27053                           ;drv_mrf_miwi_mesh_24j40.c: 282: {
 27054                           ;drv_mrf_miwi_mesh_24j40.c: 283: i = PHYGetShortRAMAddr((0x54));
 27055  004032  0E54               	movlw	84
 27056  004034  ECD7  F03B         	call	_PHYGetShortRAMAddr
 27057  004038  6F6B               	movwf	InitMRF24J40@i& (0+255),b
 27058                           
 27059                           ; BSR set to: 0
 27060                           ;drv_mrf_miwi_mesh_24j40.c: 284: }
 27061                           ;drv_mrf_miwi_mesh_24j40.c: 285: while((i&0x07) != (uint8_t)0x00);
 27062  00403A  C06B  F06A         	movff	InitMRF24J40@i,??_InitMRF24J40
 27063  00403E  0E07               	movlw	7
 27064  004040  176A               	andwf	??_InitMRF24J40& (0+255),f,b
 27065  004042  E1F7               	bnz	l745
 27066                           
 27067                           ; BSR set to: 0
 27068                           ;drv_mrf_miwi_mesh_24j40.c: 287: for(j=0;j<(uint16_t)1000;j++){}
 27069  004044  6B6C               	clrf	InitMRF24J40@j& (0+255),b
 27070  004046  6B6D               	clrf	(InitMRF24J40@j+1)& (0+255),b
 27071  004048                     l11679:
 27072                           
 27073                           ; BSR set to: 0
 27074  004048  4B6C               	infsnz	InitMRF24J40@j& (0+255),f,b
 27075  00404A  2B6D               	incf	(InitMRF24J40@j+1)& (0+255),f,b
 27076                           
 27077                           ; BSR set to: 0
 27078  00404C  0EE8               	movlw	232
 27079  00404E  5D6C               	subwf	InitMRF24J40@j& (0+255),w,b
 27080  004050  0E03               	movlw	3
 27081  004052  596D               	subwfb	(InitMRF24J40@j+1)& (0+255),w,b
 27082  004054  E3F9               	bnc	l11679
 27083                           
 27084                           ; BSR set to: 0
 27085                           ;drv_mrf_miwi_mesh_24j40.c: 290: PHYSetShortRAMAddr((0x1B),0x01);
 27086  004056  0E01               	movlw	1
 27087  004058  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27088  00405A  0E1B               	movlw	27
 27089  00405C  EC34  F03C         	call	_PHYSetShortRAMAddr
 27090                           
 27091                           ;drv_mrf_miwi_mesh_24j40.c: 293: PHYSetShortRAMAddr((0x07),0xFF);
 27092  004060  0100               	movlb	0	; () banked
 27093  004062  6962               	setf	PHYSetShortRAMAddr@value& (0+255),b
 27094  004064  0E07               	movlw	7
 27095  004066  EC34  F03C         	call	_PHYSetShortRAMAddr
 27096                           
 27097                           ;drv_mrf_miwi_mesh_24j40.c: 294: PHYSetShortRAMAddr((0x09),0xFF);
 27098  00406A  0100               	movlb	0	; () banked
 27099  00406C  6962               	setf	PHYSetShortRAMAddr@value& (0+255),b
 27100  00406E  0E09               	movlw	9
 27101  004070  EC34  F03C         	call	_PHYSetShortRAMAddr
 27102                           
 27103                           ;drv_mrf_miwi_mesh_24j40.c: 295: PHYSetShortRAMAddr((0x03),0xFF);
 27104  004074  0100               	movlb	0	; () banked
 27105  004076  6962               	setf	PHYSetShortRAMAddr@value& (0+255),b
 27106  004078  0E03               	movlw	3
 27107  00407A  EC34  F03C         	call	_PHYSetShortRAMAddr
 27108                           
 27109                           ;drv_mrf_miwi_mesh_24j40.c: 296: PHYSetShortRAMAddr((0x05),0xFF);
 27110  00407E  0100               	movlb	0	; () banked
 27111  004080  6962               	setf	PHYSetShortRAMAddr@value& (0+255),b
 27112  004082  0E05               	movlw	5
 27113  004084  EC34  F03C         	call	_PHYSetShortRAMAddr
 27114                           
 27115                           ;drv_mrf_miwi_mesh_24j40.c: 299: for(i=0;i<(uint8_t)8;i++)
 27116  004088  0100               	movlb	0	; () banked
 27117  00408A  6B6B               	clrf	InitMRF24J40@i& (0+255),b
 27118  00408C                     l11691:
 27119                           
 27120                           ; BSR set to: 0
 27121                           ;drv_mrf_miwi_mesh_24j40.c: 300: {
 27122                           ;drv_mrf_miwi_mesh_24j40.c: 301: PHYSetShortRAMAddr((0x0B)+i*2,MACInitParams.PAddress[i]
      +                          );
 27123  00408C  516B               	movf	InitMRF24J40@i& (0+255),w,b
 27124  00408E  0102               	movlb	2	; () banked
 27125  004090  2558               	addwf	(_MACInitParams+1)& (0+255),w,b
 27126  004092  6ED9               	movwf	fsr2l,c
 27127  004094  0E00               	movlw	0
 27128  004096  2159               	addwfc	(_MACInitParams+2)& (0+255),w,b
 27129  004098  6EDA               	movwf	fsr2h,c
 27130  00409A  50DF               	movf	indf2,w,c
 27131  00409C  0100               	movlb	0	; () banked
 27132  00409E  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27133  0040A0  516B               	movf	InitMRF24J40@i& (0+255),w,b
 27134  0040A2  0D02               	mullw	2
 27135  0040A4  50F3               	movf	prodl,w,c
 27136  0040A6  0F0B               	addlw	11
 27137  0040A8  EC34  F03C         	call	_PHYSetShortRAMAddr
 27138  0040AC  0100               	movlb	0	; () banked
 27139  0040AE  2B6B               	incf	InitMRF24J40@i& (0+255),f,b
 27140                           
 27141                           ; BSR set to: 0
 27142  0040B0  0E07               	movlw	7
 27143  0040B2  656B               	cpfsgt	InitMRF24J40@i& (0+255),b
 27144  0040B4  D7EB               	goto	l11691
 27145                           
 27146                           ; BSR set to: 0
 27147                           ;drv_mrf_miwi_mesh_24j40.c: 302: }
 27148                           ;drv_mrf_miwi_mesh_24j40.c: 305: PHYSetLongRAMAddr((0x202),0x80);
 27149  0040B6  0E02               	movlw	2
 27150  0040B8  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27151  0040BA  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27152  0040BC  0E80               	movlw	128
 27153  0040BE  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27154  0040C0  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27155                           
 27156                           ;drv_mrf_miwi_mesh_24j40.c: 328: PHYSetLongRAMAddr((0x203),0x00);
 27157  0040C4  0E02               	movlw	2
 27158  0040C6  0100               	movlb	0	; () banked
 27159  0040C8  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27160  0040CA  0E03               	movlw	3
 27161  0040CC  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27162  0040CE  6B64               	clrf	PHYSetLongRAMAddr@value& (0+255),b
 27163  0040D0  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27164                           
 27165                           ;drv_mrf_miwi_mesh_24j40.c: 332: PHYSetLongRAMAddr((0x206),0x90);
 27166  0040D4  0E02               	movlw	2
 27167  0040D6  0100               	movlb	0	; () banked
 27168  0040D8  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27169  0040DA  0E06               	movlw	6
 27170  0040DC  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27171  0040DE  0E90               	movlw	144
 27172  0040E0  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27173  0040E2  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27174                           
 27175                           ;drv_mrf_miwi_mesh_24j40.c: 334: PHYSetLongRAMAddr((0x207),0x80);
 27176  0040E6  0E02               	movlw	2
 27177  0040E8  0100               	movlb	0	; () banked
 27178  0040EA  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27179  0040EC  0E07               	movlw	7
 27180  0040EE  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27181  0040F0  0E80               	movlw	128
 27182  0040F2  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27183  0040F4  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27184                           
 27185                           ;drv_mrf_miwi_mesh_24j40.c: 336: PHYSetLongRAMAddr((0x208),0x10);
 27186  0040F8  0E02               	movlw	2
 27187  0040FA  0100               	movlb	0	; () banked
 27188  0040FC  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27189  0040FE  0E08               	movlw	8
 27190  004100  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27191  004102  0E10               	movlw	16
 27192  004104  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27193  004106  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27194                           
 27195                           ;drv_mrf_miwi_mesh_24j40.c: 338: PHYSetLongRAMAddr((0x220), 0x21);
 27196  00410A  0E02               	movlw	2
 27197  00410C  0100               	movlb	0	; () banked
 27198  00410E  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27199  004110  0E20               	movlw	32
 27200  004112  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27201  004114  0E21               	movlw	33
 27202  004116  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27203  004118  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27204                           
 27205                           ;drv_mrf_miwi_mesh_24j40.c: 341: PHYSetShortRAMAddr((0x75),0x80);
 27206  00411C  0E80               	movlw	128
 27207  00411E  0100               	movlb	0	; () banked
 27208  004120  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27209  004122  0E75               	movlw	117
 27210  004124  EC34  F03C         	call	_PHYSetShortRAMAddr
 27211                           
 27212                           ;drv_mrf_miwi_mesh_24j40.c: 343: PHYSetShortRAMAddr((0x7D),0x40);
 27213  004128  0E40               	movlw	64
 27214  00412A  0100               	movlb	0	; () banked
 27215  00412C  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27216  00412E  0E7D               	movlw	125
 27217  004130  EC34  F03C         	call	_PHYSetShortRAMAddr
 27218                           
 27219                           ;drv_mrf_miwi_mesh_24j40.c: 345: PHYSetShortRAMAddr((0x7F),0x60);
 27220  004134  0E60               	movlw	96
 27221  004136  0100               	movlb	0	; () banked
 27222  004138  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27223  00413A  0E7F               	movlw	127
 27224  00413C  EC34  F03C         	call	_PHYSetShortRAMAddr
 27225                           
 27226                           ;drv_mrf_miwi_mesh_24j40.c: 357: PHYSetShortRAMAddr((0x31), 0x98);
 27227  004140  0E98               	movlw	152
 27228  004142  0100               	movlb	0	; () banked
 27229  004144  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27230  004146  0E31               	movlw	49
 27231  004148  EC34  F03C         	call	_PHYSetShortRAMAddr
 27232                           
 27233                           ;drv_mrf_miwi_mesh_24j40.c: 358: PHYSetShortRAMAddr((0x5D), 0x95);
 27234  00414C  0E95               	movlw	149
 27235  00414E  0100               	movlb	0	; () banked
 27236  004150  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27237  004152  0E5D               	movlw	93
 27238  004154  EC34  F03C         	call	_PHYSetShortRAMAddr
 27239  004158                     l11709:
 27240                           
 27241                           ;drv_mrf_miwi_mesh_24j40.c: 362: {
 27242                           ;drv_mrf_miwi_mesh_24j40.c: 363: i = PHYGetLongRAMAddr((0x20f));
 27243  004158  0E02               	movlw	2
 27244  00415A  0100               	movlb	0	; () banked
 27245  00415C  6F63               	movwf	(PHYGetLongRAMAddr@address+1)& (0+255),b
 27246  00415E  0E0F               	movlw	15
 27247  004160  6F62               	movwf	PHYGetLongRAMAddr@address& (0+255),b
 27248  004162  EC10  F038         	call	_PHYGetLongRAMAddr	;wreg free
 27249  004166  6F6B               	movwf	InitMRF24J40@i& (0+255),b
 27250                           
 27251                           ; BSR set to: 0
 27252                           ;drv_mrf_miwi_mesh_24j40.c: 364: }
 27253                           ;drv_mrf_miwi_mesh_24j40.c: 365: while((i&0xA0) != 0xA0);
 27254  004168  516B               	movf	InitMRF24J40@i& (0+255),w,b
 27255  00416A  0BA0               	andlw	160
 27256  00416C  0AA0               	xorlw	160
 27257  00416E  E1F4               	bnz	l11709
 27258                           
 27259                           ; BSR set to: 0
 27260                           ;drv_mrf_miwi_mesh_24j40.c: 367: PHYSetShortRAMAddr((0x65),0xE6);
 27261  004170  0EE6               	movlw	230
 27262  004172  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 27263  004174  0E65               	movlw	101
 27264  004176  EC34  F03C         	call	_PHYSetShortRAMAddr
 27265                           
 27266                           ;drv_mrf_miwi_mesh_24j40.c: 374: PHYSetLongRAMAddr((0x200), 0x03);
 27267  00417A  0E02               	movlw	2
 27268  00417C  0100               	movlb	0	; () banked
 27269  00417E  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27270  004180  6B62               	clrf	PHYSetLongRAMAddr@address& (0+255),b
 27271  004182  0E03               	movlw	3
 27272  004184  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27273  004186  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27274                           
 27275                           ;drv_mrf_miwi_mesh_24j40.c: 375: PHYSetLongRAMAddr((0x201), 0x02);
 27276  00418A  0E02               	movlw	2
 27277  00418C  0100               	movlb	0	; () banked
 27278  00418E  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 27279  004190  0E01               	movlw	1
 27280  004192  6F62               	movwf	PHYSetLongRAMAddr@address& (0+255),b
 27281  004194  0E02               	movlw	2
 27282  004196  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 27283  004198  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 27284                           
 27285                           ;drv_mrf_miwi_mesh_24j40.c: 377: MiMAC_SetChannel(MACCurrentChannel, 0);
 27286  00419C  0100               	movlb	0	; () banked
 27287  00419E  6B68               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
 27288  0041A0  5041               	movf	_MACCurrentChannel,w,c
 27289  0041A2  EF15  F03A         	goto	_MiMAC_SetChannel
 27290  0041A6                     __end_of_InitMRF24J40:
 27291                           	opt stack 0
 27292                           tblptru	equ	0xFF8
 27293                           tblptrh	equ	0xFF7
 27294                           tblptrl	equ	0xFF6
 27295                           tablat	equ	0xFF5
 27296                           prodh	equ	0xFF4
 27297                           prodl	equ	0xFF3
 27298                           intcon	equ	0xFF2
 27299                           postinc0	equ	0xFEE
 27300                           plusw0	equ	0xFEB
 27301                           fsr0h	equ	0xFEA
 27302                           fsr0l	equ	0xFE9
 27303                           wreg	equ	0xFE8
 27304                           indf1	equ	0xFE7
 27305                           postinc1	equ	0xFE6
 27306                           postdec1	equ	0xFE5
 27307                           plusw1	equ	0xFE3
 27308                           fsr1h	equ	0xFE2
 27309                           fsr1l	equ	0xFE1
 27310                           indf2	equ	0xFDF
 27311                           postinc2	equ	0xFDE
 27312                           postdec2	equ	0xFDD
 27313                           plusw2	equ	0xFDB
 27314                           fsr2h	equ	0xFDA
 27315                           fsr2l	equ	0xFD9
 27316                           status	equ	0xFD8
 27317                           
 27318 ;; *************** function _PHYGetShortRAMAddr *****************
 27319 ;; Defined at:
 27320 ;;		line 220 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 27321 ;; Parameters:    Size  Location     Type
 27322 ;;  address         1    wreg     unsigned char 
 27323 ;; Auto vars:     Size  Location     Type
 27324 ;;  address         1    2[BANK0 ] unsigned char 
 27325 ;;  tmpRFIE         1    4[BANK0 ] volatile unsigned char 
 27326 ;;  toReturn        1    3[BANK0 ] unsigned char 
 27327 ;; Return value:  Size  Location     Type
 27328 ;;                  1    wreg      unsigned char 
 27329 ;; Registers used:
 27330 ;;		wreg, status,2, cstack
 27331 ;; Tracked objects:
 27332 ;;		On entry : 0/0
 27333 ;;		On exit  : F/0
 27334 ;;		Unchanged: 0/0
 27335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27337 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27340 ;;Total ram usage:        3 bytes
 27341 ;; Hardware stack levels used:    1
 27342 ;; Hardware stack levels required when called:    6
 27343 ;; This function calls:
 27344 ;;		_SPIGet
 27345 ;;		_SPIPut
 27346 ;; This function is called by:
 27347 ;;		_InitMRF24J40
 27348 ;;		_MiMAC_ChannelAssessment
 27349 ;;		_MiMAC_PowerState
 27350 ;; This function uses a non-reentrant model
 27351 ;;
 27352                           
 27353                           	psect	text111
 27354  0077AE                     __ptext111:
 27355                           	opt stack 0
 27356  0077AE                     _PHYGetShortRAMAddr:
 27357                           	opt stack 16
 27358                           
 27359                           ;incstack = 0
 27360                           ;PHYGetShortRAMAddr@address stored from wreg
 27361  0077AE  0100               	movlb	0	; () banked
 27362  0077B0  6F62               	movwf	PHYGetShortRAMAddr@address& (0+255),b
 27363                           
 27364                           ;drv_mrf_miwi_mesh_24j40.c: 222: uint8_t toReturn;
 27365                           ;drv_mrf_miwi_mesh_24j40.c: 223: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 27366  0077B2  0E00               	movlw	0
 27367  0077B4  B8F2               	btfsc	intcon,4,c	;volatile
 27368  0077B6  0E01               	movlw	1
 27369  0077B8  6F64               	movwf	PHYGetShortRAMAddr@tmpRFIE& (0+255),b	;volatile
 27370                           
 27371                           ;drv_mrf_miwi_mesh_24j40.c: 225: INTCONbits.INT0IE = 0;
 27372  0077BA  98F2               	bcf	intcon,4,c	;volatile
 27373                           
 27374                           ;drv_mrf_miwi_mesh_24j40.c: 226: LATAbits.LATA5 = 0;
 27375  0077BC  9A89               	bcf	3977,5,c	;volatile
 27376                           
 27377                           ; BSR set to: 0
 27378                           ;drv_mrf_miwi_mesh_24j40.c: 227: SPIPut(address);
 27379  0077BE  5162               	movf	PHYGetShortRAMAddr@address& (0+255),w,b
 27380  0077C0  EC3D  F03D         	call	_SPIPut
 27381                           
 27382                           ;drv_mrf_miwi_mesh_24j40.c: 228: toReturn = SPIGet();
 27383  0077C4  EC27  F03E         	call	_SPIGet	;wreg free
 27384  0077C8  0100               	movlb	0	; () banked
 27385  0077CA  6F63               	movwf	PHYGetShortRAMAddr@toReturn& (0+255),b
 27386                           
 27387                           ; BSR set to: 0
 27388                           ;drv_mrf_miwi_mesh_24j40.c: 229: LATAbits.LATA5 = 1;
 27389  0077CC  8A89               	bsf	3977,5,c	;volatile
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;drv_mrf_miwi_mesh_24j40.c: 230: INTCONbits.INT0IE = tmpRFIE;
 27393  0077CE  B164               	btfsc	PHYGetShortRAMAddr@tmpRFIE& (0+255),0,b	;volatile
 27394  0077D0  D002               	bra	u16245
 27395  0077D2  98F2               	bcf	intcon,4,c	;volatile
 27396  0077D4  D001               	bra	u16246
 27397  0077D6                     u16245:
 27398  0077D6  88F2               	bsf	intcon,4,c	;volatile
 27399  0077D8                     u16246:
 27400                           
 27401                           ;drv_mrf_miwi_mesh_24j40.c: 232: return toReturn;
 27402  0077D8  0100               	movlb	0	; () banked
 27403  0077DA  5163               	movf	PHYGetShortRAMAddr@toReturn& (0+255),w,b
 27404                           
 27405                           ; BSR set to: 0
 27406  0077DC  0012               	return		;funcret
 27407  0077DE                     __end_of_PHYGetShortRAMAddr:
 27408                           	opt stack 0
 27409                           tblptru	equ	0xFF8
 27410                           tblptrh	equ	0xFF7
 27411                           tblptrl	equ	0xFF6
 27412                           tablat	equ	0xFF5
 27413                           prodh	equ	0xFF4
 27414                           prodl	equ	0xFF3
 27415                           intcon	equ	0xFF2
 27416                           postinc0	equ	0xFEE
 27417                           plusw0	equ	0xFEB
 27418                           fsr0h	equ	0xFEA
 27419                           fsr0l	equ	0xFE9
 27420                           wreg	equ	0xFE8
 27421                           indf1	equ	0xFE7
 27422                           postinc1	equ	0xFE6
 27423                           postdec1	equ	0xFE5
 27424                           plusw1	equ	0xFE3
 27425                           fsr1h	equ	0xFE2
 27426                           fsr1l	equ	0xFE1
 27427                           indf2	equ	0xFDF
 27428                           postinc2	equ	0xFDE
 27429                           postdec2	equ	0xFDD
 27430                           plusw2	equ	0xFDB
 27431                           fsr2h	equ	0xFDA
 27432                           fsr2l	equ	0xFD9
 27433                           status	equ	0xFD8
 27434                           
 27435 ;; *************** function _PHYGetLongRAMAddr *****************
 27436 ;; Defined at:
 27437 ;;		line 251 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 27438 ;; Parameters:    Size  Location     Type
 27439 ;;  address         2    2[BANK0 ] unsigned int 
 27440 ;; Auto vars:     Size  Location     Type
 27441 ;;  tmpRFIE         1    7[BANK0 ] volatile unsigned char 
 27442 ;;  toReturn        1    6[BANK0 ] unsigned char 
 27443 ;; Return value:  Size  Location     Type
 27444 ;;                  1    wreg      unsigned char 
 27445 ;; Registers used:
 27446 ;;		wreg, status,2, status,0, cstack
 27447 ;; Tracked objects:
 27448 ;;		On entry : F/0
 27449 ;;		On exit  : F/0
 27450 ;;		Unchanged: 0/0
 27451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27456 ;;Total ram usage:        6 bytes
 27457 ;; Hardware stack levels used:    1
 27458 ;; Hardware stack levels required when called:    6
 27459 ;; This function calls:
 27460 ;;		_SPIGet
 27461 ;;		_SPIPut
 27462 ;; This function is called by:
 27463 ;;		_InitMRF24J40
 27464 ;;		_MiMAC_ChannelAssessment
 27465 ;;		_MiMAC_PowerState
 27466 ;; This function uses a non-reentrant model
 27467 ;;
 27468                           
 27469                           	psect	text112
 27470  007020                     __ptext112:
 27471                           	opt stack 0
 27472  007020                     _PHYGetLongRAMAddr:
 27473                           	opt stack 16
 27474                           
 27475                           ; BSR set to: 0
 27476                           ;drv_mrf_miwi_mesh_24j40.c: 253: uint8_t toReturn;
 27477                           ;drv_mrf_miwi_mesh_24j40.c: 254: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;incstack = 0
 27481  007020  0E00               	movlw	0
 27482  007022  B8F2               	btfsc	intcon,4,c	;volatile
 27483  007024  0E01               	movlw	1
 27484  007026  6F67               	movwf	PHYGetLongRAMAddr@tmpRFIE& (0+255),b	;volatile
 27485                           
 27486                           ; BSR set to: 0
 27487                           ;drv_mrf_miwi_mesh_24j40.c: 256: INTCONbits.INT0IE = 0;
 27488  007028  98F2               	bcf	intcon,4,c	;volatile
 27489                           
 27490                           ; BSR set to: 0
 27491                           ;drv_mrf_miwi_mesh_24j40.c: 257: LATAbits.LATA5 = 0;
 27492  00702A  9A89               	bcf	3977,5,c	;volatile
 27493                           
 27494                           ; BSR set to: 0
 27495                           ;drv_mrf_miwi_mesh_24j40.c: 258: SPIPut(((address>>3)&0x7F)|0x80);
 27496  00702C  C062  F064         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
 27497  007030  C063  F065         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
 27498  007034  90D8               	bcf	status,0,c
 27499  007036  3365               	rrcf	(??_PHYGetLongRAMAddr+1)& (0+255),f,b
 27500  007038  3364               	rrcf	??_PHYGetLongRAMAddr& (0+255),f,b
 27501  00703A  90D8               	bcf	status,0,c
 27502  00703C  3365               	rrcf	(??_PHYGetLongRAMAddr+1)& (0+255),f,b
 27503  00703E  3364               	rrcf	??_PHYGetLongRAMAddr& (0+255),f,b
 27504  007040  90D8               	bcf	status,0,c
 27505  007042  3365               	rrcf	(??_PHYGetLongRAMAddr+1)& (0+255),f,b
 27506  007044  3364               	rrcf	??_PHYGetLongRAMAddr& (0+255),f,b
 27507  007046  5164               	movf	??_PHYGetLongRAMAddr& (0+255),w,b
 27508  007048  0B7F               	andlw	127
 27509  00704A  0980               	iorlw	128
 27510  00704C  EC3D  F03D         	call	_SPIPut
 27511                           
 27512                           ;drv_mrf_miwi_mesh_24j40.c: 259: SPIPut(((address<<5)&0xE0));
 27513  007050  0100               	movlb	0	; () banked
 27514  007052  3962               	swapf	PHYGetLongRAMAddr@address& (0+255),w,b
 27515  007054  46E8               	rlncf	wreg,f,c
 27516  007056  0BE0               	andlw	224
 27517  007058  EC3D  F03D         	call	_SPIPut
 27518                           
 27519                           ;drv_mrf_miwi_mesh_24j40.c: 260: toReturn = SPIGet();
 27520  00705C  EC27  F03E         	call	_SPIGet	;wreg free
 27521  007060  0100               	movlb	0	; () banked
 27522  007062  6F66               	movwf	PHYGetLongRAMAddr@toReturn& (0+255),b
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;drv_mrf_miwi_mesh_24j40.c: 261: LATAbits.LATA5 = 1;
 27526  007064  8A89               	bsf	3977,5,c	;volatile
 27527                           
 27528                           ; BSR set to: 0
 27529                           ;drv_mrf_miwi_mesh_24j40.c: 262: INTCONbits.INT0IE = tmpRFIE;
 27530  007066  B167               	btfsc	PHYGetLongRAMAddr@tmpRFIE& (0+255),0,b	;volatile
 27531  007068  D002               	bra	u16255
 27532  00706A  98F2               	bcf	intcon,4,c	;volatile
 27533  00706C  D001               	bra	u16256
 27534  00706E                     u16255:
 27535  00706E  88F2               	bsf	intcon,4,c	;volatile
 27536  007070                     u16256:
 27537                           
 27538                           ;drv_mrf_miwi_mesh_24j40.c: 264: return toReturn;
 27539  007070  0100               	movlb	0	; () banked
 27540  007072  5166               	movf	PHYGetLongRAMAddr@toReturn& (0+255),w,b
 27541                           
 27542                           ; BSR set to: 0
 27543  007074  0012               	return		;funcret
 27544  007076                     __end_of_PHYGetLongRAMAddr:
 27545                           	opt stack 0
 27546                           tblptru	equ	0xFF8
 27547                           tblptrh	equ	0xFF7
 27548                           tblptrl	equ	0xFF6
 27549                           tablat	equ	0xFF5
 27550                           prodh	equ	0xFF4
 27551                           prodl	equ	0xFF3
 27552                           intcon	equ	0xFF2
 27553                           postinc0	equ	0xFEE
 27554                           plusw0	equ	0xFEB
 27555                           fsr0h	equ	0xFEA
 27556                           fsr0l	equ	0xFE9
 27557                           wreg	equ	0xFE8
 27558                           indf1	equ	0xFE7
 27559                           postinc1	equ	0xFE6
 27560                           postdec1	equ	0xFE5
 27561                           plusw1	equ	0xFE3
 27562                           fsr1h	equ	0xFE2
 27563                           fsr1l	equ	0xFE1
 27564                           indf2	equ	0xFDF
 27565                           postinc2	equ	0xFDE
 27566                           postdec2	equ	0xFDD
 27567                           plusw2	equ	0xFDB
 27568                           fsr2h	equ	0xFDA
 27569                           fsr2l	equ	0xFD9
 27570                           status	equ	0xFD8
 27571                           
 27572 ;; *************** function _SPIGet *****************
 27573 ;; Defined at:
 27574 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 27575 ;; Parameters:    Size  Location     Type
 27576 ;;		None
 27577 ;; Auto vars:     Size  Location     Type
 27578 ;;		None
 27579 ;; Return value:  Size  Location     Type
 27580 ;;                  1    wreg      unsigned char 
 27581 ;; Registers used:
 27582 ;;		wreg, status,2, cstack
 27583 ;; Tracked objects:
 27584 ;;		On entry : 0/0
 27585 ;;		On exit  : 0/0
 27586 ;;		Unchanged: 0/0
 27587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27592 ;;Total ram usage:        0 bytes
 27593 ;; Hardware stack levels used:    1
 27594 ;; Hardware stack levels required when called:    5
 27595 ;; This function calls:
 27596 ;;		_SPIPut
 27597 ;; This function is called by:
 27598 ;;		_PHYGetShortRAMAddr
 27599 ;;		_PHYGetLongRAMAddr
 27600 ;; This function uses a non-reentrant model
 27601 ;;
 27602                           
 27603                           	psect	text113
 27604  007C4E                     __ptext113:
 27605                           	opt stack 0
 27606  007C4E                     _SPIGet:
 27607                           	opt stack 16
 27608                           
 27609                           ;spi.c: 310: SPIPut(0x00);
 27610                           
 27611                           ; BSR set to: 0
 27612                           ;incstack = 0
 27613  007C4E  0E00               	movlw	0
 27614  007C50  EC3D  F03D         	call	_SPIPut
 27615                           
 27616                           ;spi.c: 311: return SSPBUF;
 27617  007C54  50C9               	movf	4041,w,c	;volatile
 27618  007C56  0012               	return		;funcret
 27619  007C58                     __end_of_SPIGet:
 27620                           	opt stack 0
 27621                           tblptru	equ	0xFF8
 27622                           tblptrh	equ	0xFF7
 27623                           tblptrl	equ	0xFF6
 27624                           tablat	equ	0xFF5
 27625                           prodh	equ	0xFF4
 27626                           prodl	equ	0xFF3
 27627                           intcon	equ	0xFF2
 27628                           postinc0	equ	0xFEE
 27629                           plusw0	equ	0xFEB
 27630                           fsr0h	equ	0xFEA
 27631                           fsr0l	equ	0xFE9
 27632                           wreg	equ	0xFE8
 27633                           indf1	equ	0xFE7
 27634                           postinc1	equ	0xFE6
 27635                           postdec1	equ	0xFE5
 27636                           plusw1	equ	0xFE3
 27637                           fsr1h	equ	0xFE2
 27638                           fsr1l	equ	0xFE1
 27639                           indf2	equ	0xFDF
 27640                           postinc2	equ	0xFDE
 27641                           postdec2	equ	0xFDD
 27642                           plusw2	equ	0xFDB
 27643                           fsr2h	equ	0xFDA
 27644                           fsr2l	equ	0xFD9
 27645                           status	equ	0xFD8
 27646                           
 27647 ;; *************** function _MiApp_IsMemberOfNetwork *****************
 27648 ;; Defined at:
 27649 ;;		line 281 in file "../src/Bridge.c"
 27650 ;; Parameters:    Size  Location     Type
 27651 ;;		None
 27652 ;; Auto vars:     Size  Location     Type
 27653 ;;		None
 27654 ;; Return value:  Size  Location     Type
 27655 ;;                  1    wreg      unsigned char 
 27656 ;; Registers used:
 27657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27658 ;; Tracked objects:
 27659 ;;		On entry : 0/1
 27660 ;;		On exit  : F/0
 27661 ;;		Unchanged: 0/0
 27662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27667 ;;Total ram usage:        0 bytes
 27668 ;; Hardware stack levels used:    1
 27669 ;; Hardware stack levels required when called:    9
 27670 ;; This function calls:
 27671 ;;		_IsMemberOfNetwork
 27672 ;; This function is called by:
 27673 ;;		_main
 27674 ;; This function uses a non-reentrant model
 27675 ;;
 27676                           
 27677                           	psect	text114
 27678  007C94                     __ptext114:
 27679                           	opt stack 0
 27680  007C94                     _MiApp_IsMemberOfNetwork:
 27681                           	opt stack 21
 27682                           
 27683                           ;Bridge.c: 283: return(IsMemberOfNetwork());
 27684                           
 27685                           ;incstack = 0
 27686  007C94  EF4C  F03E         	goto	_IsMemberOfNetwork	;wreg free
 27687  007C98                     __end_of_MiApp_IsMemberOfNetwork:
 27688                           	opt stack 0
 27689                           tblptru	equ	0xFF8
 27690                           tblptrh	equ	0xFF7
 27691                           tblptrl	equ	0xFF6
 27692                           tablat	equ	0xFF5
 27693                           prodh	equ	0xFF4
 27694                           prodl	equ	0xFF3
 27695                           intcon	equ	0xFF2
 27696                           postinc0	equ	0xFEE
 27697                           plusw0	equ	0xFEB
 27698                           fsr0h	equ	0xFEA
 27699                           fsr0l	equ	0xFE9
 27700                           wreg	equ	0xFE8
 27701                           indf1	equ	0xFE7
 27702                           postinc1	equ	0xFE6
 27703                           postdec1	equ	0xFE5
 27704                           plusw1	equ	0xFE3
 27705                           fsr1h	equ	0xFE2
 27706                           fsr1l	equ	0xFE1
 27707                           indf2	equ	0xFDF
 27708                           postinc2	equ	0xFDE
 27709                           postdec2	equ	0xFDD
 27710                           plusw2	equ	0xFDB
 27711                           fsr2h	equ	0xFDA
 27712                           fsr2l	equ	0xFD9
 27713                           status	equ	0xFD8
 27714                           
 27715 ;; *************** function _IsMemberOfNetwork *****************
 27716 ;; Defined at:
 27717 ;;		line 380 in file "../NetworkManager.c"
 27718 ;; Parameters:    Size  Location     Type
 27719 ;;		None
 27720 ;; Auto vars:     Size  Location     Type
 27721 ;;		None
 27722 ;; Return value:  Size  Location     Type
 27723 ;;                  1    wreg      unsigned char 
 27724 ;; Registers used:
 27725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27726 ;; Tracked objects:
 27727 ;;		On entry : 0/1
 27728 ;;		On exit  : F/0
 27729 ;;		Unchanged: 0/0
 27730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27735 ;;Total ram usage:        0 bytes
 27736 ;; Hardware stack levels used:    1
 27737 ;; Hardware stack levels required when called:    8
 27738 ;; This function calls:
 27739 ;;		_NetworkHasRoute
 27740 ;; This function is called by:
 27741 ;;		_MiApp_IsMemberOfNetwork
 27742 ;;		_radioReceivedPacket
 27743 ;; This function uses a non-reentrant model
 27744 ;;
 27745                           
 27746                           	psect	text115
 27747  007C98                     __ptext115:
 27748                           	opt stack 0
 27749  007C98                     _IsMemberOfNetwork:
 27750                           	opt stack 19
 27751                           
 27752                           ;NetworkManager.c: 382: return(NetworkHasRoute());
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;incstack = 0
 27756  007C98  EF7A  F03A         	goto	_NetworkHasRoute	;wreg free
 27757  007C9C                     __end_of_IsMemberOfNetwork:
 27758                           	opt stack 0
 27759                           tblptru	equ	0xFF8
 27760                           tblptrh	equ	0xFF7
 27761                           tblptrl	equ	0xFF6
 27762                           tablat	equ	0xFF5
 27763                           prodh	equ	0xFF4
 27764                           prodl	equ	0xFF3
 27765                           intcon	equ	0xFF2
 27766                           postinc0	equ	0xFEE
 27767                           plusw0	equ	0xFEB
 27768                           fsr0h	equ	0xFEA
 27769                           fsr0l	equ	0xFE9
 27770                           wreg	equ	0xFE8
 27771                           indf1	equ	0xFE7
 27772                           postinc1	equ	0xFE6
 27773                           postdec1	equ	0xFE5
 27774                           plusw1	equ	0xFE3
 27775                           fsr1h	equ	0xFE2
 27776                           fsr1l	equ	0xFE1
 27777                           indf2	equ	0xFDF
 27778                           postinc2	equ	0xFDE
 27779                           postdec2	equ	0xFDD
 27780                           plusw2	equ	0xFDB
 27781                           fsr2h	equ	0xFDA
 27782                           fsr2l	equ	0xFD9
 27783                           status	equ	0xFD8
 27784                           
 27785 ;; *************** function _NetworkHasRoute *****************
 27786 ;; Defined at:
 27787 ;;		line 209 in file "../NetworkManager.c"
 27788 ;; Parameters:    Size  Location     Type
 27789 ;;		None
 27790 ;; Auto vars:     Size  Location     Type
 27791 ;;  res             1   34[BANK0 ] unsigned char 
 27792 ;; Return value:  Size  Location     Type
 27793 ;;                  1    wreg      unsigned char 
 27794 ;; Registers used:
 27795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27796 ;; Tracked objects:
 27797 ;;		On entry : 0/0
 27798 ;;		On exit  : F/0
 27799 ;;		Unchanged: 0/0
 27800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27805 ;;Total ram usage:        2 bytes
 27806 ;; Hardware stack levels used:    1
 27807 ;; Hardware stack levels required when called:    7
 27808 ;; This function calls:
 27809 ;;		_NetworkGetDeviceType
 27810 ;;		_isInvalidAddress
 27811 ;; This function is called by:
 27812 ;;		_networkSendBeacon
 27813 ;;		_TransportManagerTask
 27814 ;;		_TMSendFormedPacketTowardsCoordinator
 27815 ;;		_IsMemberOfNetwork
 27816 ;; This function uses a non-reentrant model
 27817 ;;
 27818                           
 27819                           	psect	text116
 27820  0074F4                     __ptext116:
 27821                           	opt stack 0
 27822  0074F4                     _NetworkHasRoute:
 27823                           	opt stack 20
 27824                           
 27825                           ;NetworkManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 27826                           
 27827                           ; BSR set to: 0
 27828                           ;incstack = 0
 27829  0074F4  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 27830  0074F8  0900               	iorlw	0
 27831  0074FA  E104               	bnz	l1980
 27832                           
 27833                           ;NetworkManager.c: 213: {
 27834                           ;NetworkManager.c: 214: res=1;
 27835  0074FC  0E01               	movlw	1
 27836  0074FE  0100               	movlb	0	; () banked
 27837  007500  6F82               	movwf	NetworkHasRoute@res& (0+255),b
 27838                           
 27839                           ;NetworkManager.c: 215: }else
 27840  007502  D016               	goto	l1981
 27841  007504                     l1980:
 27842                           
 27843                           ;NetworkManager.c: 216: {
 27844                           ;NetworkManager.c: 217: res=(routeInfo.hasCheckedIn && !isInvalidAddress(routeInfo.paren
      +                          t));
 27845  007504  0100               	movlb	0	; () banked
 27846  007506  6B81               	clrf	_NetworkHasRoute$4257& (0+255),b
 27847                           
 27848                           ; BSR set to: 0
 27849  007508  0102               	movlb	2	; () banked
 27850  00750A  5192               	movf	(_routeInfo+12)& (0+255),w,b
 27851  00750C  E00F               	bz	l12203
 27852                           
 27853                           ; BSR set to: 2
 27854  00750E  EE22  F086         	lfsr	2,_routeInfo
 27855  007512  EE00  F079         	lfsr	0,isInvalidAddress@address
 27856  007516  0E07               	movlw	7
 27857  007518                     u17291:
 27858  007518  CFDB FFEB          	movff	plusw2,plusw0
 27859  00751C  06E8               	decf	wreg,f,c
 27860  00751E  E2FC               	bc	u17291
 27861  007520  EC6E  F03D         	call	_isInvalidAddress	;wreg free
 27862  007524  0900               	iorlw	0
 27863  007526  E102               	bnz	l12203
 27864                           
 27865                           ; BSR set to: 0
 27866  007528  0E01               	movlw	1
 27867  00752A  6F81               	movwf	_NetworkHasRoute$4257& (0+255),b
 27868  00752C                     l12203:
 27869  00752C  C081  F082         	movff	_NetworkHasRoute$4257,NetworkHasRoute@res
 27870  007530                     l1981:
 27871                           
 27872                           ;NetworkManager.c: 218: }
 27873                           ;NetworkManager.c: 219: return(res);
 27874  007530  0100               	movlb	0	; () banked
 27875  007532  5182               	movf	NetworkHasRoute@res& (0+255),w,b
 27876                           
 27877                           ; BSR set to: 0
 27878  007534  0012               	return		;funcret
 27879  007536                     __end_of_NetworkHasRoute:
 27880                           	opt stack 0
 27881                           tblptru	equ	0xFF8
 27882                           tblptrh	equ	0xFF7
 27883                           tblptrl	equ	0xFF6
 27884                           tablat	equ	0xFF5
 27885                           prodh	equ	0xFF4
 27886                           prodl	equ	0xFF3
 27887                           intcon	equ	0xFF2
 27888                           postinc0	equ	0xFEE
 27889                           plusw0	equ	0xFEB
 27890                           fsr0h	equ	0xFEA
 27891                           fsr0l	equ	0xFE9
 27892                           wreg	equ	0xFE8
 27893                           indf1	equ	0xFE7
 27894                           postinc1	equ	0xFE6
 27895                           postdec1	equ	0xFE5
 27896                           plusw1	equ	0xFE3
 27897                           fsr1h	equ	0xFE2
 27898                           fsr1l	equ	0xFE1
 27899                           indf2	equ	0xFDF
 27900                           postinc2	equ	0xFDE
 27901                           postdec2	equ	0xFDD
 27902                           plusw2	equ	0xFDB
 27903                           fsr2h	equ	0xFDA
 27904                           fsr2l	equ	0xFD9
 27905                           status	equ	0xFD8
 27906                           
 27907 ;; *************** function _isInvalidAddress *****************
 27908 ;; Defined at:
 27909 ;;		line 230 in file "../NetworkManager.c"
 27910 ;; Parameters:    Size  Location     Type
 27911 ;;  address         8   25[BANK0 ] struct addr_t_def
 27912 ;; Auto vars:     Size  Location     Type
 27913 ;;		None
 27914 ;; Return value:  Size  Location     Type
 27915 ;;                  1    wreg      unsigned char 
 27916 ;; Registers used:
 27917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27918 ;; Tracked objects:
 27919 ;;		On entry : 0/0
 27920 ;;		On exit  : F/0
 27921 ;;		Unchanged: 0/0
 27922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27923 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27926 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27927 ;;Total ram usage:        8 bytes
 27928 ;; Hardware stack levels used:    1
 27929 ;; Hardware stack levels required when called:    6
 27930 ;; This function calls:
 27931 ;;		_isBroadcastAddress
 27932 ;; This function is called by:
 27933 ;;		_RouteManagerPerformUpdate
 27934 ;;		_routingTableFind
 27935 ;;		_RouteManagerProcessReceive
 27936 ;;		_RouteManagerShouldInsert
 27937 ;;		_networkSendBeacon
 27938 ;;		_NetworkManagerTask
 27939 ;;		_NetworkHasRoute
 27940 ;;		_NetworkManagerProcessIncomingData
 27941 ;;		_IsNetworkDevice
 27942 ;; This function uses a non-reentrant model
 27943 ;;
 27944                           
 27945                           	psect	text117
 27946  007ADC                     __ptext117:
 27947                           	opt stack 0
 27948  007ADC                     _isInvalidAddress:
 27949                           	opt stack 20
 27950                           
 27951                           ;NetworkManager.c: 232: return(isBroadcastAddress(address));
 27952                           
 27953                           ; BSR set to: 0
 27954                           ;incstack = 0
 27955  007ADC  EE20  F079         	lfsr	2,isInvalidAddress@address
 27956  007AE0  EE00  F068         	lfsr	0,isBroadcastAddress@address
 27957  007AE4  0E07               	movlw	7
 27958  007AE6                     u16381:
 27959  007AE6  CFDB FFEB          	movff	plusw2,plusw0
 27960  007AEA  06E8               	decf	wreg,f,c
 27961  007AEC  E2FC               	bc	u16381
 27962  007AEE  EF9B  F03A         	goto	_isBroadcastAddress	;wreg free
 27963  007AF2                     __end_of_isInvalidAddress:
 27964                           	opt stack 0
 27965                           tblptru	equ	0xFF8
 27966                           tblptrh	equ	0xFF7
 27967                           tblptrl	equ	0xFF6
 27968                           tablat	equ	0xFF5
 27969                           prodh	equ	0xFF4
 27970                           prodl	equ	0xFF3
 27971                           intcon	equ	0xFF2
 27972                           postinc0	equ	0xFEE
 27973                           plusw0	equ	0xFEB
 27974                           fsr0h	equ	0xFEA
 27975                           fsr0l	equ	0xFE9
 27976                           wreg	equ	0xFE8
 27977                           indf1	equ	0xFE7
 27978                           postinc1	equ	0xFE6
 27979                           postdec1	equ	0xFE5
 27980                           plusw1	equ	0xFE3
 27981                           fsr1h	equ	0xFE2
 27982                           fsr1l	equ	0xFE1
 27983                           indf2	equ	0xFDF
 27984                           postinc2	equ	0xFDE
 27985                           postdec2	equ	0xFDD
 27986                           plusw2	equ	0xFDB
 27987                           fsr2h	equ	0xFDA
 27988                           fsr2l	equ	0xFD9
 27989                           status	equ	0xFD8
 27990                           
 27991 ;; *************** function _isBroadcastAddress *****************
 27992 ;; Defined at:
 27993 ;;		line 222 in file "../NetworkManager.c"
 27994 ;; Parameters:    Size  Location     Type
 27995 ;;  address         8    8[BANK0 ] struct addr_t_def
 27996 ;; Auto vars:     Size  Location     Type
 27997 ;;  addr            8   16[BANK0 ] const unsigned char [8]
 27998 ;;  res             1   24[BANK0 ] unsigned char 
 27999 ;; Return value:  Size  Location     Type
 28000 ;;                  1    wreg      unsigned char 
 28001 ;; Registers used:
 28002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28003 ;; Tracked objects:
 28004 ;;		On entry : 0/1
 28005 ;;		On exit  : F/0
 28006 ;;		Unchanged: 0/0
 28007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28008 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28009 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28011 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28012 ;;Total ram usage:       17 bytes
 28013 ;; Hardware stack levels used:    1
 28014 ;; Hardware stack levels required when called:    5
 28015 ;; This function calls:
 28016 ;;		_NetworkAddressSizeGet
 28017 ;;		_memcmp
 28018 ;; This function is called by:
 28019 ;;		_radioReceivedPacket
 28020 ;;		_TMSendFormedPacketToRFD
 28021 ;;		_isInvalidAddress
 28022 ;; This function uses a non-reentrant model
 28023 ;;
 28024                           
 28025                           	psect	text118
 28026  007536                     __ptext118:
 28027                           	opt stack 0
 28028  007536                     _isBroadcastAddress:
 28029                           	opt stack 20
 28030                           
 28031                           ;NetworkManager.c: 225: const uint8_t addr[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
 28032                           
 28033                           ; BSR set to: 0
 28034                           ;incstack = 0
 28035  007536  0E97               	movlw	low isBroadcastAddress@F537
 28036  007538  6EF6               	movwf	tblptrl,c
 28037  00753A                     	if	1	;There is more than 1 active tblptr byte
 28038  00753A  0EFF               	movlw	high isBroadcastAddress@F537
 28039  00753C  6EF7               	movwf	tblptrh,c
 28040  00753E                     	endif
 28041  00753E                     	if	0	;There are less than 3 active tblptr bytes
 28042  00753E                     	endif
 28043  00753E  EE20  F070         	lfsr	2,isBroadcastAddress@addr
 28044  007542  0E07               	movlw	7
 28045  007544                     u16260:
 28046  007544  0009               	tblrd		*+
 28047  007546  CFF5 FFDE          	movff	tablat,postinc2
 28048  00754A  06E8               	decf	wreg,f,c
 28049  00754C  E2FB               	bc	u16260
 28050                           
 28051                           ;NetworkManager.c: 226: res=(memcmp(address.bytes,addr,NetworkAddressSizeGet())==0);
 28052  00754E  0E68               	movlw	low isBroadcastAddress@address
 28053  007550  0100               	movlb	0	; () banked
 28054  007552  6F60               	movwf	memcmp@s1& (0+255),b
 28055  007554  6B61               	clrf	(memcmp@s1+1)& (0+255),b
 28056  007556  0E70               	movlw	low isBroadcastAddress@addr
 28057  007558  6F62               	movwf	memcmp@s2& (0+255),b
 28058  00755A  6B63               	clrf	(memcmp@s2+1)& (0+255),b
 28059  00755C  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 28060  007560  6F64               	movwf	memcmp@n& (0+255),b
 28061  007562  6B65               	clrf	(memcmp@n+1)& (0+255),b
 28062  007564  EC3B  F038         	call	_memcmp	;wreg free
 28063  007568  5160               	movf	?_memcmp& (0+255),w,b
 28064  00756A  1161               	iorwf	(?_memcmp+1)& (0+255),w,b
 28065  00756C  0E01               	movlw	1
 28066  00756E  A4D8               	btfss	status,2,c
 28067  007570  0E00               	movlw	0
 28068  007572  6F78               	movwf	isBroadcastAddress@res& (0+255),b
 28069                           
 28070                           ; BSR set to: 0
 28071                           ;NetworkManager.c: 227: return(res);
 28072  007574  5178               	movf	isBroadcastAddress@res& (0+255),w,b
 28073                           
 28074                           ; BSR set to: 0
 28075  007576  0012               	return		;funcret
 28076  007578                     __end_of_isBroadcastAddress:
 28077                           	opt stack 0
 28078                           tblptru	equ	0xFF8
 28079                           tblptrh	equ	0xFF7
 28080                           tblptrl	equ	0xFF6
 28081                           tablat	equ	0xFF5
 28082                           prodh	equ	0xFF4
 28083                           prodl	equ	0xFF3
 28084                           intcon	equ	0xFF2
 28085                           postinc0	equ	0xFEE
 28086                           plusw0	equ	0xFEB
 28087                           fsr0h	equ	0xFEA
 28088                           fsr0l	equ	0xFE9
 28089                           wreg	equ	0xFE8
 28090                           indf1	equ	0xFE7
 28091                           postinc1	equ	0xFE6
 28092                           postdec1	equ	0xFE5
 28093                           plusw1	equ	0xFE3
 28094                           fsr1h	equ	0xFE2
 28095                           fsr1l	equ	0xFE1
 28096                           indf2	equ	0xFDF
 28097                           postinc2	equ	0xFDE
 28098                           postdec2	equ	0xFDD
 28099                           plusw2	equ	0xFDB
 28100                           fsr2h	equ	0xFDA
 28101                           fsr2l	equ	0xFD9
 28102                           status	equ	0xFD8
 28103                           
 28104 ;; *************** function _memcmp *****************
 28105 ;; Defined at:
 28106 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
 28107 ;; Parameters:    Size  Location     Type
 28108 ;;  s1              2    0[BANK0 ] PTR const void 
 28109 ;;		 -> a1.bytes(8), isSameAddress@a1(8), address.bytes(8), isBroadcastAddress@address(8), 
 28110 ;;		 -> hc_table(360), src.bytes(8), main@src(8), 
 28111 ;;  s2              2    2[BANK0 ] PTR const void 
 28112 ;;		 -> a2.bytes(8), isSameAddress@a2(8), isBroadcastAddress@addr(8), isKnownPacket@zeros(12), 
 28113 ;;		 -> src1.bytes(8), main@src1(8), 
 28114 ;;  n               2    4[BANK0 ] unsigned int 
 28115 ;; Auto vars:     Size  Location     Type
 28116 ;;		None
 28117 ;; Return value:  Size  Location     Type
 28118 ;;                  2    0[BANK0 ] int 
 28119 ;; Registers used:
 28120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28121 ;; Tracked objects:
 28122 ;;		On entry : F/0
 28123 ;;		On exit  : F/0
 28124 ;;		Unchanged: 0/0
 28125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28126 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28129 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28130 ;;Total ram usage:        8 bytes
 28131 ;; Hardware stack levels used:    1
 28132 ;; Hardware stack levels required when called:    4
 28133 ;; This function calls:
 28134 ;;		Nothing
 28135 ;; This function is called by:
 28136 ;;		_main
 28137 ;;		_isKnownPacket
 28138 ;;		_isBroadcastAddress
 28139 ;;		_isSameAddress
 28140 ;; This function uses a non-reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text119
 28144  007076                     __ptext119:
 28145                           	opt stack 0
 28146  007076                     _memcmp:
 28147                           	opt stack 26
 28148                           
 28149                           ; BSR set to: 0
 28150                           
 28151                           ; BSR set to: 0
 28152                           ;incstack = 0
 28153  007076  D020               	goto	l11503
 28154  007078                     l11495:
 28155                           
 28156                           ; BSR set to: 0
 28157  007078  C062  FFD9         	movff	memcmp@s2,fsr2l
 28158  00707C  C063  FFDA         	movff	memcmp@s2+1,fsr2h
 28159  007080  C060  FFE1         	movff	memcmp@s1,fsr1l
 28160  007084  C061  FFE2         	movff	memcmp@s1+1,fsr1h
 28161  007088  50DE               	movf	postinc2,w,c
 28162  00708A  18E6               	xorwf	postinc1,w,c
 28163  00708C  E011               	bz	l11501
 28164                           
 28165                           ; BSR set to: 0
 28166  00708E  C060  FFD9         	movff	memcmp@s1,fsr2l
 28167  007092  C061  FFDA         	movff	memcmp@s1+1,fsr2h
 28168  007096  50DF               	movf	indf2,w,c
 28169  007098  6F66               	movwf	??_memcmp& (0+255),b
 28170  00709A  C062  FFD9         	movff	memcmp@s2,fsr2l
 28171  00709E  C063  FFDA         	movff	memcmp@s2+1,fsr2h
 28172  0070A2  50DF               	movf	indf2,w,c
 28173  0070A4  5D66               	subwf	??_memcmp& (0+255),w,b
 28174  0070A6  6F60               	movwf	?_memcmp& (0+255),b
 28175  0070A8  6B61               	clrf	(?_memcmp+1)& (0+255),b
 28176  0070AA  A0D8               	btfss	status,0,c
 28177  0070AC  0761               	decf	(?_memcmp+1)& (0+255),f,b
 28178  0070AE  0012               	return	
 28179  0070B0                     l11501:
 28180                           
 28181                           ; BSR set to: 0
 28182  0070B0  4B60               	infsnz	memcmp@s1& (0+255),f,b
 28183  0070B2  2B61               	incf	(memcmp@s1+1)& (0+255),f,b
 28184  0070B4  4B62               	infsnz	memcmp@s2& (0+255),f,b
 28185  0070B6  2B63               	incf	(memcmp@s2+1)& (0+255),f,b
 28186  0070B8                     l11503:
 28187                           
 28188                           ; BSR set to: 0
 28189  0070B8  0764               	decf	memcmp@n& (0+255),f,b
 28190  0070BA  A0D8               	btfss	status,0,c
 28191  0070BC  0765               	decf	(memcmp@n+1)& (0+255),f,b
 28192  0070BE  2964               	incf	memcmp@n& (0+255),w,b
 28193  0070C0  E1DB               	bnz	l11495
 28194  0070C2  2965               	incf	(memcmp@n+1)& (0+255),w,b
 28195  0070C4  E1D9               	bnz	l11495
 28196                           
 28197                           ; BSR set to: 0
 28198  0070C6  6B60               	clrf	?_memcmp& (0+255),b
 28199  0070C8  6B61               	clrf	(?_memcmp+1)& (0+255),b
 28200                           
 28201                           ; BSR set to: 0
 28202  0070CA  0012               	return		;funcret
 28203  0070CC                     __end_of_memcmp:
 28204                           	opt stack 0
 28205                           tblptru	equ	0xFF8
 28206                           tblptrh	equ	0xFF7
 28207                           tblptrl	equ	0xFF6
 28208                           tablat	equ	0xFF5
 28209                           prodh	equ	0xFF4
 28210                           prodl	equ	0xFF3
 28211                           intcon	equ	0xFF2
 28212                           postinc0	equ	0xFEE
 28213                           plusw0	equ	0xFEB
 28214                           fsr0h	equ	0xFEA
 28215                           fsr0l	equ	0xFE9
 28216                           wreg	equ	0xFE8
 28217                           indf1	equ	0xFE7
 28218                           postinc1	equ	0xFE6
 28219                           postdec1	equ	0xFE5
 28220                           plusw1	equ	0xFE3
 28221                           fsr1h	equ	0xFE2
 28222                           fsr1l	equ	0xFE1
 28223                           indf2	equ	0xFDF
 28224                           postinc2	equ	0xFDE
 28225                           postdec2	equ	0xFDD
 28226                           plusw2	equ	0xFDB
 28227                           fsr2h	equ	0xFDA
 28228                           fsr2l	equ	0xFD9
 28229                           status	equ	0xFD8
 28230                           
 28231 ;; *************** function _MiApp_GetParentAddress *****************
 28232 ;; Defined at:
 28233 ;;		line 286 in file "../src/Bridge.c"
 28234 ;; Parameters:    Size  Location     Type
 28235 ;;		None
 28236 ;; Auto vars:     Size  Location     Type
 28237 ;;		None
 28238 ;; Return value:  Size  Location     Type
 28239 ;;                  8    8[BANK0 ] struct addr_t_def
 28240 ;; Registers used:
 28241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 28242 ;; Tracked objects:
 28243 ;;		On entry : C/0
 28244 ;;		On exit  : 0/0
 28245 ;;		Unchanged: 0/0
 28246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28247 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28250 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28251 ;;Total ram usage:        8 bytes
 28252 ;; Hardware stack levels used:    1
 28253 ;; Hardware stack levels required when called:    5
 28254 ;; This function calls:
 28255 ;;		_NetworkGetParentAddress
 28256 ;; This function is called by:
 28257 ;;		_main
 28258 ;; This function uses a non-reentrant model
 28259 ;;
 28260                           
 28261                           	psect	text120
 28262  007A2A                     __ptext120:
 28263                           	opt stack 0
 28264  007A2A                     _MiApp_GetParentAddress:
 28265                           	opt stack 25
 28266                           
 28267                           ;Bridge.c: 288: return(NetworkGetParentAddress());
 28268                           
 28269                           ; BSR set to: 0
 28270                           ;incstack = 0
 28271  007A2A  ECDA  F03D         	call	_NetworkGetParentAddress	;wreg free
 28272  007A2E  CFE9 FFD9          	movff	fsr0l,fsr2l
 28273  007A32  CFEA FFDA          	movff	fsr0h,fsr2h
 28274  007A36  EE00  F068         	lfsr	0,?_MiApp_GetParentAddress
 28275  007A3A  0E07               	movlw	7
 28276  007A3C                     u23511:
 28277  007A3C  CFDB FFEB          	movff	plusw2,plusw0
 28278  007A40  06E8               	decf	wreg,f,c
 28279  007A42  E2FC               	bc	u23511
 28280  007A44  0012               	return		;funcret
 28281  007A46                     __end_of_MiApp_GetParentAddress:
 28282                           	opt stack 0
 28283                           tblptru	equ	0xFF8
 28284                           tblptrh	equ	0xFF7
 28285                           tblptrl	equ	0xFF6
 28286                           tablat	equ	0xFF5
 28287                           prodh	equ	0xFF4
 28288                           prodl	equ	0xFF3
 28289                           intcon	equ	0xFF2
 28290                           postinc0	equ	0xFEE
 28291                           plusw0	equ	0xFEB
 28292                           fsr0h	equ	0xFEA
 28293                           fsr0l	equ	0xFE9
 28294                           wreg	equ	0xFE8
 28295                           indf1	equ	0xFE7
 28296                           postinc1	equ	0xFE6
 28297                           postdec1	equ	0xFE5
 28298                           plusw1	equ	0xFE3
 28299                           fsr1h	equ	0xFE2
 28300                           fsr1l	equ	0xFE1
 28301                           indf2	equ	0xFDF
 28302                           postinc2	equ	0xFDE
 28303                           postdec2	equ	0xFDD
 28304                           plusw2	equ	0xFDB
 28305                           fsr2h	equ	0xFDA
 28306                           fsr2l	equ	0xFD9
 28307                           status	equ	0xFD8
 28308                           
 28309 ;; *************** function _NetworkGetParentAddress *****************
 28310 ;; Defined at:
 28311 ;;		line 250 in file "../NetworkManager.c"
 28312 ;; Parameters:    Size  Location     Type
 28313 ;;		None
 28314 ;; Auto vars:     Size  Location     Type
 28315 ;;		None
 28316 ;; Return value:  Size  Location     Type
 28317 ;;                  8    0[BANK0 ] struct addr_t_def
 28318 ;; Registers used:
 28319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 28320 ;; Tracked objects:
 28321 ;;		On entry : 0/0
 28322 ;;		On exit  : 0/0
 28323 ;;		Unchanged: 0/0
 28324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28325 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28328 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28329 ;;Total ram usage:        8 bytes
 28330 ;; Hardware stack levels used:    1
 28331 ;; Hardware stack levels required when called:    4
 28332 ;; This function calls:
 28333 ;;		Nothing
 28334 ;; This function is called by:
 28335 ;;		_MiApp_GetParentAddress
 28336 ;;		_radioReceivedPacket
 28337 ;;		_RouteManagerShouldInsert
 28338 ;;		_le_findWorstNeighborIdx
 28339 ;;		_le_findRandomNeighborIdx
 28340 ;;		_TransportManagerTask
 28341 ;;		_TMSendFormedPacketToRFD
 28342 ;;		_NetworkManagerTask
 28343 ;;		_NetworkPrepareSendPacket
 28344 ;;		_NetworkIssueDataRequest
 28345 ;; This function uses a non-reentrant model
 28346 ;;
 28347                           
 28348                           	psect	text121
 28349  007BB4                     __ptext121:
 28350                           	opt stack 0
 28351  007BB4                     _NetworkGetParentAddress:
 28352                           	opt stack 22
 28353                           
 28354                           ;NetworkManager.c: 252: return(routeInfo.parent);
 28355                           
 28356                           ;incstack = 0
 28357  007BB4  EE22  F086         	lfsr	2,_routeInfo
 28358  007BB8  EE00  F060         	lfsr	0,?_NetworkGetParentAddress
 28359  007BBC  0E07               	movlw	7
 28360  007BBE                     u17451:
 28361  007BBE  CFDB FFEB          	movff	plusw2,plusw0
 28362  007BC2  06E8               	decf	wreg,f,c
 28363  007BC4  E2FC               	bc	u17451
 28364  007BC6  0012               	return		;funcret
 28365  007BC8                     __end_of_NetworkGetParentAddress:
 28366                           	opt stack 0
 28367                           tblptru	equ	0xFF8
 28368                           tblptrh	equ	0xFF7
 28369                           tblptrl	equ	0xFF6
 28370                           tablat	equ	0xFF5
 28371                           prodh	equ	0xFF4
 28372                           prodl	equ	0xFF3
 28373                           intcon	equ	0xFF2
 28374                           postinc0	equ	0xFEE
 28375                           plusw0	equ	0xFEB
 28376                           fsr0h	equ	0xFEA
 28377                           fsr0l	equ	0xFE9
 28378                           wreg	equ	0xFE8
 28379                           indf1	equ	0xFE7
 28380                           postinc1	equ	0xFE6
 28381                           postdec1	equ	0xFE5
 28382                           plusw1	equ	0xFE3
 28383                           fsr1h	equ	0xFE2
 28384                           fsr1l	equ	0xFE1
 28385                           indf2	equ	0xFDF
 28386                           postinc2	equ	0xFDE
 28387                           postdec2	equ	0xFDD
 28388                           plusw2	equ	0xFDB
 28389                           fsr2h	equ	0xFDA
 28390                           fsr2l	equ	0xFD9
 28391                           status	equ	0xFD8
 28392                           
 28393 ;; *************** function _MiApp_EstablishConnection *****************
 28394 ;; Defined at:
 28395 ;;		line 186 in file "../src/Bridge.c"
 28396 ;; Parameters:    Size  Location     Type
 28397 ;;  ActiveScanIn    1    wreg     unsigned char 
 28398 ;;  Mode            1   45[BANK0 ] unsigned char 
 28399 ;; Auto vars:     Size  Location     Type
 28400 ;;  ActiveScanIn    1   55[BANK0 ] unsigned char 
 28401 ;;  src             8   47[BANK0 ] struct addr_t_def
 28402 ;;  dev             1   46[BANK0 ] enum E8168
 28403 ;; Return value:  Size  Location     Type
 28404 ;;                  1    wreg      unsigned char 
 28405 ;; Registers used:
 28406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28407 ;; Tracked objects:
 28408 ;;		On entry : F/0
 28409 ;;		On exit  : F/1
 28410 ;;		Unchanged: 0/0
 28411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28412 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28413 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28415 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28416 ;;Total ram usage:       11 bytes
 28417 ;; Hardware stack levels used:    1
 28418 ;; Hardware stack levels required when called:   11
 28419 ;; This function calls:
 28420 ;;		_MiApp_SetAddressPan
 28421 ;;		_MiApp_SetChannel
 28422 ;;		_NetworkInit
 28423 ;;		_memcpy
 28424 ;; This function is called by:
 28425 ;;		_main
 28426 ;; This function uses a non-reentrant model
 28427 ;;
 28428                           
 28429                           	psect	text122
 28430  006084                     __ptext122:
 28431                           	opt stack 0
 28432  006084                     _MiApp_EstablishConnection:
 28433                           	opt stack 19
 28434                           
 28435                           ;incstack = 0
 28436                           ;MiApp_EstablishConnection@ActiveScanIndex stored from wreg
 28437  006084  6F97               	movwf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 28438                           
 28439                           ;Bridge.c: 188: addr_t src;
 28440                           ;Bridge.c: 189: DeviceType_t dev=DeviceRFD;
 28441  006086  0E01               	movlw	1
 28442  006088  0100               	movlb	0	; () banked
 28443  00608A  6F8E               	movwf	MiApp_EstablishConnection@dev& (0+255),b
 28444                           
 28445                           ; BSR set to: 0
 28446                           ;Bridge.c: 191: memcpy(src.bytes,myLongAddress,8);
 28447  00608C  0E8F               	movlw	low MiApp_EstablishConnection@src
 28448  00608E  6F62               	movwf	memcpy@d1& (0+255),b
 28449  006090  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 28450  006092  0EF3               	movlw	low _myLongAddress
 28451  006094  6F64               	movwf	memcpy@s1& (0+255),b
 28452  006096  0E02               	movlw	high _myLongAddress
 28453  006098  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 28454  00609A  6B67               	clrf	(memcpy@n+1)& (0+255),b
 28455  00609C  0E08               	movlw	8
 28456  00609E  6F66               	movwf	memcpy@n& (0+255),b
 28457  0060A0  ECFA  F03A         	call	_memcpy	;wreg free
 28458                           
 28459                           ; BSR set to: 0
 28460                           ;Bridge.c: 192: if(ActiveScanIndex<5)
 28461  0060A4  0E05               	movlw	5
 28462  0060A6  6197               	cpfslt	MiApp_EstablishConnection@ActiveScanIndex& (0+255),b
 28463  0060A8  D027               	goto	l15267
 28464                           
 28465                           ; BSR set to: 0
 28466                           ;Bridge.c: 193: {
 28467                           ;Bridge.c: 194: if(ActiveScanResults[ActiveScanIndex].Flags!=0)
 28468  0060AA  5197               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 28469  0060AC  0D05               	mullw	5
 28470  0060AE  0E64               	movlw	low (_ActiveScanResults+4)
 28471  0060B0  24F3               	addwf	prodl,w,c
 28472  0060B2  6ED9               	movwf	fsr2l,c
 28473  0060B4  0E02               	movlw	high (_ActiveScanResults+4)
 28474  0060B6  20F4               	addwfc	prodh,w,c
 28475  0060B8  6EDA               	movwf	fsr2h,c
 28476  0060BA  50DF               	movf	indf2,w,c
 28477  0060BC  E01D               	bz	l15267
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;Bridge.c: 195: {
 28481                           ;Bridge.c: 196: MiApp_SetAddressPan(src.bytes, ActiveScanResults[ActiveScanIndex].PANID.
      +                          Val);
 28482  0060BE  0E8F               	movlw	low MiApp_EstablishConnection@src
 28483  0060C0  6F76               	movwf	MiApp_SetAddressPan@address& (0+255),b
 28484  0060C2  6B77               	clrf	(MiApp_SetAddressPan@address+1)& (0+255),b
 28485  0060C4  5197               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 28486  0060C6  0D05               	mullw	5
 28487  0060C8  0E61               	movlw	low (_ActiveScanResults+1)
 28488  0060CA  24F3               	addwf	prodl,w,c
 28489  0060CC  6ED9               	movwf	fsr2l,c
 28490  0060CE  0E02               	movlw	high (_ActiveScanResults+1)
 28491  0060D0  20F4               	addwfc	prodh,w,c
 28492  0060D2  6EDA               	movwf	fsr2h,c
 28493  0060D4  CFDE F078          	movff	postinc2,MiApp_SetAddressPan@panid
 28494  0060D8  CFDD F079          	movff	postdec2,MiApp_SetAddressPan@panid+1
 28495  0060DC  ECFD  F035         	call	_MiApp_SetAddressPan	;wreg free
 28496                           
 28497                           ;Bridge.c: 197: MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
 28498  0060E0  0100               	movlb	0	; () banked
 28499  0060E2  5197               	movf	MiApp_EstablishConnection@ActiveScanIndex& (0+255),w,b
 28500  0060E4  0D05               	mullw	5
 28501  0060E6  0E60               	movlw	low _ActiveScanResults
 28502  0060E8  24F3               	addwf	prodl,w,c
 28503  0060EA  6ED9               	movwf	fsr2l,c
 28504  0060EC  0E02               	movlw	high _ActiveScanResults
 28505  0060EE  20F4               	addwfc	prodh,w,c
 28506  0060F0  6EDA               	movwf	fsr2h,c
 28507  0060F2  50DF               	movf	indf2,w,c
 28508  0060F4  EC03  F03E         	call	_MiApp_SetChannel
 28509  0060F8                     l15267:
 28510                           
 28511                           ;Bridge.c: 198: }
 28512                           ;Bridge.c: 199: }
 28513                           ;Bridge.c: 200: if(myDeviceType!=DeviceCoordinator)
 28514  0060F8  0101               	movlb	1	; () banked
 28515  0060FA  51E5               	movf	_myDeviceType& (0+255),w,b
 28516  0060FC  E002               	bz	l567
 28517                           
 28518                           ; BSR set to: 1
 28519                           ;Bridge.c: 201: {
 28520                           ;Bridge.c: 203: dev=myDeviceType;
 28521  0060FE  C1E5  F08E         	movff	_myDeviceType,MiApp_EstablishConnection@dev
 28522  006102                     l567:
 28523                           
 28524                           ; BSR set to: 1
 28525                           ;Bridge.c: 204: }
 28526                           ;Bridge.c: 206: myDeviceType=dev;
 28527  006102  C08E  F1E5         	movff	MiApp_EstablishConnection@dev,_myDeviceType
 28528                           
 28529                           ; BSR set to: 1
 28530                           ;Bridge.c: 207: NetworkInit(src, myPANID, dev);
 28531  006106  EE20  F08F         	lfsr	2,MiApp_EstablishConnection@src
 28532  00610A  EE00  F080         	lfsr	0,NetworkInit@address
 28533  00610E  0E07               	movlw	7
 28534  006110                     u23481:
 28535  006110  CFDB FFEB          	movff	plusw2,plusw0
 28536  006114  06E8               	decf	wreg,f,c
 28537  006116  E2FC               	bc	u23481
 28538  006118  C05C  F088         	movff	_myPANID,NetworkInit@PANID
 28539  00611C  C05D  F089         	movff	_myPANID+1,NetworkInit@PANID+1
 28540  006120  C08E  F08A         	movff	MiApp_EstablishConnection@dev,NetworkInit@dev
 28541  006124  EFBE  F02B         	goto	_NetworkInit	;wreg free
 28542  006128                     __end_of_MiApp_EstablishConnection:
 28543                           	opt stack 0
 28544                           tblptru	equ	0xFF8
 28545                           tblptrh	equ	0xFF7
 28546                           tblptrl	equ	0xFF6
 28547                           tablat	equ	0xFF5
 28548                           prodh	equ	0xFF4
 28549                           prodl	equ	0xFF3
 28550                           intcon	equ	0xFF2
 28551                           postinc0	equ	0xFEE
 28552                           plusw0	equ	0xFEB
 28553                           fsr0h	equ	0xFEA
 28554                           fsr0l	equ	0xFE9
 28555                           wreg	equ	0xFE8
 28556                           indf1	equ	0xFE7
 28557                           postinc1	equ	0xFE6
 28558                           postdec1	equ	0xFE5
 28559                           plusw1	equ	0xFE3
 28560                           fsr1h	equ	0xFE2
 28561                           fsr1l	equ	0xFE1
 28562                           indf2	equ	0xFDF
 28563                           postinc2	equ	0xFDE
 28564                           postdec2	equ	0xFDD
 28565                           plusw2	equ	0xFDB
 28566                           fsr2h	equ	0xFDA
 28567                           fsr2l	equ	0xFD9
 28568                           status	equ	0xFD8
 28569                           
 28570 ;; *************** function _NetworkInit *****************
 28571 ;; Defined at:
 28572 ;;		line 166 in file "../NetworkManager.c"
 28573 ;; Parameters:    Size  Location     Type
 28574 ;;  address         8   32[BANK0 ] struct addr_t_def
 28575 ;;  PANID           2   40[BANK0 ] unsigned int 
 28576 ;;  dev             1   42[BANK0 ] enum E145
 28577 ;; Auto vars:     Size  Location     Type
 28578 ;;  devPanID        2   43[BANK0 ] unsigned int 
 28579 ;; Return value:  Size  Location     Type
 28580 ;;                  1    wreg      void 
 28581 ;; Registers used:
 28582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28583 ;; Tracked objects:
 28584 ;;		On entry : F/1
 28585 ;;		On exit  : F/1
 28586 ;;		Unchanged: 0/0
 28587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28588 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28591 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28592 ;;Total ram usage:       13 bytes
 28593 ;; Hardware stack levels used:    1
 28594 ;; Hardware stack levels required when called:   10
 28595 ;; This function calls:
 28596 ;;		_BeaconManagerInit
 28597 ;;		_BroadcastManagerInit
 28598 ;;		_CacheInit
 28599 ;;		_DeviceManagerInit
 28600 ;;		_LinkEstimatorInit
 28601 ;;		_NetworkAddressSizeGet
 28602 ;;		_NetworkSetAddressPAN
 28603 ;;		_RouteManagerInit
 28604 ;;		_TransportManagerInit
 28605 ;;		_TunnelManagerInit
 28606 ;;		_krnd
 28607 ;;		_memcpy
 28608 ;;		_memset
 28609 ;; This function is called by:
 28610 ;;		_MiApp_EstablishConnection
 28611 ;; This function uses a non-reentrant model
 28612 ;;
 28613                           
 28614                           	psect	text123
 28615  00577C                     __ptext123:
 28616                           	opt stack 0
 28617  00577C                     _NetworkInit:
 28618                           	opt stack 19
 28619                           
 28620                           ; BSR set to: 1
 28621                           ;NetworkManager.c: 168: uint16_t devPanID;
 28622                           ;NetworkManager.c: 170: DeviceType=dev;
 28623                           
 28624                           ; BSR set to: 1
 28625                           ;incstack = 0
 28626  00577C  C08A  F05A         	movff	NetworkInit@dev,_DeviceType
 28627                           
 28628                           ; BSR set to: 1
 28629                           ;NetworkManager.c: 171: memset(&routeInfo,0x00,sizeof(route_info_t));
 28630  005780  0E86               	movlw	low _routeInfo
 28631  005782  0100               	movlb	0	; () banked
 28632  005784  6F60               	movwf	memset@p1& (0+255),b
 28633  005786  0E02               	movlw	high _routeInfo
 28634  005788  6F61               	movwf	(memset@p1+1)& (0+255),b
 28635  00578A  6B63               	clrf	(memset@c+1)& (0+255),b
 28636  00578C  6B62               	clrf	memset@c& (0+255),b
 28637  00578E  6B65               	clrf	(memset@n+1)& (0+255),b
 28638  005790  0E0D               	movlw	13
 28639  005792  6F64               	movwf	memset@n& (0+255),b
 28640  005794  EC61  F03C         	call	_memset	;wreg free
 28641                           
 28642                           ; BSR set to: 0
 28643                           ;NetworkManager.c: 173: routeInfo.congested=0;
 28644  005798  0102               	movlb	2	; () banked
 28645  00579A  6B91               	clrf	(_routeInfo+11)& (0+255),b
 28646                           
 28647                           ; BSR set to: 2
 28648                           ;NetworkManager.c: 174: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 28649  00579C  0EEB               	movlw	low _MyAddress
 28650  00579E  0100               	movlb	0	; () banked
 28651  0057A0  6F62               	movwf	memcpy@d1& (0+255),b
 28652  0057A2  0E02               	movlw	high _MyAddress
 28653  0057A4  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 28654  0057A6  0E80               	movlw	low NetworkInit@address
 28655  0057A8  6F64               	movwf	memcpy@s1& (0+255),b
 28656  0057AA  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 28657  0057AC  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 28658  0057B0  6F66               	movwf	memcpy@n& (0+255),b
 28659  0057B2  6B67               	clrf	(memcpy@n+1)& (0+255),b
 28660  0057B4  ECFA  F03A         	call	_memcpy	;wreg free
 28661                           
 28662                           ; BSR set to: 0
 28663                           ;NetworkManager.c: 175: if(dev==DeviceCoordinator)
 28664  0057B8  518A               	movf	NetworkInit@dev& (0+255),w,b
 28665  0057BA  E120               	bnz	l14559
 28666                           
 28667                           ; BSR set to: 0
 28668                           ;NetworkManager.c: 176: {
 28669                           ;NetworkManager.c: 177: CoordinatorAddr=MyAddress;
 28670  0057BC  EE22  F0EB         	lfsr	2,_MyAddress
 28671  0057C0  EE12  F0A5         	lfsr	1,_CoordinatorAddr
 28672  0057C4  0E07               	movlw	7
 28673  0057C6                     u22391:
 28674  0057C6  CFDB FFE3          	movff	plusw2,plusw1
 28675  0057CA  06E8               	decf	wreg,f,c
 28676  0057CC  E2FC               	bc	u22391
 28677                           
 28678                           ; BSR set to: 0
 28679                           ;NetworkManager.c: 178: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 28680  0057CE  0E86               	movlw	low _routeInfo
 28681  0057D0  6F62               	movwf	memcpy@d1& (0+255),b
 28682  0057D2  0E02               	movlw	high _routeInfo
 28683  0057D4  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 28684  0057D6  0E80               	movlw	low NetworkInit@address
 28685  0057D8  6F64               	movwf	memcpy@s1& (0+255),b
 28686  0057DA  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 28687  0057DC  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 28688  0057E0  6F66               	movwf	memcpy@n& (0+255),b
 28689  0057E2  6B67               	clrf	(memcpy@n+1)& (0+255),b
 28690  0057E4  ECFA  F03A         	call	_memcpy	;wreg free
 28691                           
 28692                           ; BSR set to: 0
 28693                           ;NetworkManager.c: 179: routeInfo.etx=0;
 28694  0057E8  0102               	movlb	2	; () banked
 28695  0057EA  6B8E               	clrf	(_routeInfo+8)& (0+255),b
 28696  0057EC  6B8F               	clrf	(_routeInfo+9)& (0+255),b
 28697                           
 28698                           ; BSR set to: 2
 28699                           ;NetworkManager.c: 180: routeInfo.hasCheckedIn=1;
 28700  0057EE  0E01               	movlw	1
 28701  0057F0  6F92               	movwf	(_routeInfo+12)& (0+255),b
 28702  0057F2                     l14557:
 28703                           
 28704                           ; BSR set to: 2
 28705                           ;NetworkManager.c: 181: devPanID=PANID;
 28706  0057F2  C088  F08B         	movff	NetworkInit@PANID,NetworkInit@devPanID
 28707  0057F6  C089  F08C         	movff	NetworkInit@PANID+1,NetworkInit@devPanID+1
 28708                           
 28709                           ;NetworkManager.c: 182: }else
 28710  0057FA  D01D               	goto	l14567
 28711  0057FC                     l14559:
 28712                           
 28713                           ; BSR set to: 0
 28714                           ;NetworkManager.c: 183: {
 28715                           ;NetworkManager.c: 184: memset(CoordinatorAddr.bytes,0xff,NetworkAddressSizeGet());
 28716  0057FC  0EA5               	movlw	low _CoordinatorAddr
 28717  0057FE  6F60               	movwf	memset@p1& (0+255),b
 28718  005800  0E02               	movlw	high _CoordinatorAddr
 28719  005802  6F61               	movwf	(memset@p1+1)& (0+255),b
 28720  005804  6B63               	clrf	(memset@c+1)& (0+255),b
 28721  005806  6962               	setf	memset@c& (0+255),b
 28722  005808  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 28723  00580C  6F64               	movwf	memset@n& (0+255),b
 28724  00580E  6B65               	clrf	(memset@n+1)& (0+255),b
 28725  005810  EC61  F03C         	call	_memset	;wreg free
 28726                           
 28727                           ;NetworkManager.c: 185: memset(routeInfo.parent.bytes,0xff,NetworkAddressSizeGet());
 28728  005814  0E86               	movlw	low _routeInfo
 28729  005816  6F60               	movwf	memset@p1& (0+255),b
 28730  005818  0E02               	movlw	high _routeInfo
 28731  00581A  6F61               	movwf	(memset@p1+1)& (0+255),b
 28732  00581C  6B63               	clrf	(memset@c+1)& (0+255),b
 28733  00581E  6962               	setf	memset@c& (0+255),b
 28734  005820  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 28735  005824  6F64               	movwf	memset@n& (0+255),b
 28736  005826  6B65               	clrf	(memset@n+1)& (0+255),b
 28737  005828  EC61  F03C         	call	_memset	;wreg free
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;NetworkManager.c: 186: routeInfo.etx=0xffff;
 28741  00582C  0102               	movlb	2	; () banked
 28742  00582E  698E               	setf	(_routeInfo+8)& (0+255),b
 28743  005830  698F               	setf	(_routeInfo+9)& (0+255),b
 28744                           
 28745                           ; BSR set to: 2
 28746                           ;NetworkManager.c: 187: routeInfo.hasCheckedIn=0;
 28747  005832  6B92               	clrf	(_routeInfo+12)& (0+255),b
 28748  005834  D7DE               	goto	l14557
 28749  005836                     l14567:
 28750                           
 28751                           ; BSR set to: 2
 28752                           ;NetworkManager.c: 189: }
 28753                           ;NetworkManager.c: 190: NetworkSetAddressPAN(address, devPanID);
 28754  005836  EE20  F080         	lfsr	2,NetworkInit@address
 28755  00583A  EE00  F06C         	lfsr	0,NetworkSetAddressPAN@address
 28756  00583E  0E07               	movlw	7
 28757  005840                     u22401:
 28758  005840  CFDB FFEB          	movff	plusw2,plusw0
 28759  005844  06E8               	decf	wreg,f,c
 28760  005846  E2FC               	bc	u22401
 28761  005848  C08B  F074         	movff	NetworkInit@devPanID,NetworkSetAddressPAN@PANID
 28762  00584C  C08C  F075         	movff	NetworkInit@devPanID+1,NetworkSetAddressPAN@PANID+1
 28763  005850  ECE2  F037         	call	_NetworkSetAddressPAN	;wreg free
 28764                           
 28765                           ;NetworkManager.c: 191: DeviceManagerInit();
 28766  005854  EC30  F03D         	call	_DeviceManagerInit	;wreg free
 28767                           
 28768                           ; BSR set to: 0
 28769                           ;NetworkManager.c: 192: LinkEstimatorInit();
 28770  005858  ECFD  F03D         	call	_LinkEstimatorInit	;wreg free
 28771                           
 28772                           ; BSR set to: 2
 28773                           ;NetworkManager.c: 193: BeaconManagerInit();
 28774  00585C  EC06  F03D         	call	_BeaconManagerInit	;wreg free
 28775                           
 28776                           ; BSR set to: 0
 28777                           ;NetworkManager.c: 194: RouteManagerInit();
 28778  005860  EC1D  F03C         	call	_RouteManagerInit	;wreg free
 28779                           
 28780                           ; BSR set to: 0
 28781                           ;NetworkManager.c: 195: BroadcastManagerInit();
 28782  005864  EC56  F03D         	call	_BroadcastManagerInit	;wreg free
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;NetworkManager.c: 196: TransportManagerInit();
 28786  005868  EC84  F03D         	call	_TransportManagerInit	;wreg free
 28787                           
 28788                           ; BSR set to: 0
 28789                           ;NetworkManager.c: 197: CacheInit();
 28790  00586C  EC4A  F03D         	call	_CacheInit	;wreg free
 28791                           
 28792                           ; BSR set to: 0
 28793                           ;NetworkManager.c: 198: TunnelManagerInit();
 28794  005870  EC79  F03D         	call	_TunnelManagerInit	;wreg free
 28795                           
 28796                           ; BSR set to: 0
 28797                           ;NetworkManager.c: 199: NetSeq=krnd();
 28798  005874  EC76  F022         	call	_krnd	;wreg free
 28799  005878  5160               	movf	?_krnd& (0+255),w,b
 28800  00587A  6E43               	movwf	_NetSeq,c
 28801                           
 28802                           ; BSR set to: 0
 28803                           ;NetworkManager.c: 200: nState=netPOR;
 28804  00587C  0101               	movlb	1	; () banked
 28805  00587E  6BE2               	clrf	_nState& (0+255),b
 28806                           
 28807                           ; BSR set to: 1
 28808  005880  0012               	return		;funcret
 28809  005882                     __end_of_NetworkInit:
 28810                           	opt stack 0
 28811                           tblptru	equ	0xFF8
 28812                           tblptrh	equ	0xFF7
 28813                           tblptrl	equ	0xFF6
 28814                           tablat	equ	0xFF5
 28815                           prodh	equ	0xFF4
 28816                           prodl	equ	0xFF3
 28817                           intcon	equ	0xFF2
 28818                           postinc0	equ	0xFEE
 28819                           plusw0	equ	0xFEB
 28820                           fsr0h	equ	0xFEA
 28821                           fsr0l	equ	0xFE9
 28822                           wreg	equ	0xFE8
 28823                           indf1	equ	0xFE7
 28824                           postinc1	equ	0xFE6
 28825                           postdec1	equ	0xFE5
 28826                           plusw1	equ	0xFE3
 28827                           fsr1h	equ	0xFE2
 28828                           fsr1l	equ	0xFE1
 28829                           indf2	equ	0xFDF
 28830                           postinc2	equ	0xFDE
 28831                           postdec2	equ	0xFDD
 28832                           plusw2	equ	0xFDB
 28833                           fsr2h	equ	0xFDA
 28834                           fsr2l	equ	0xFD9
 28835                           status	equ	0xFD8
 28836                           
 28837 ;; *************** function _TunnelManagerInit *****************
 28838 ;; Defined at:
 28839 ;;		line 112 in file "../TunnelManager.c"
 28840 ;; Parameters:    Size  Location     Type
 28841 ;;		None
 28842 ;; Auto vars:     Size  Location     Type
 28843 ;;		None
 28844 ;; Return value:  Size  Location     Type
 28845 ;;                  1    wreg      void 
 28846 ;; Registers used:
 28847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28848 ;; Tracked objects:
 28849 ;;		On entry : F/0
 28850 ;;		On exit  : F/0
 28851 ;;		Unchanged: 0/0
 28852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28857 ;;Total ram usage:        0 bytes
 28858 ;; Hardware stack levels used:    1
 28859 ;; Hardware stack levels required when called:    5
 28860 ;; This function calls:
 28861 ;;		_memset
 28862 ;; This function is called by:
 28863 ;;		_NetworkInit
 28864 ;; This function uses a non-reentrant model
 28865 ;;
 28866                           
 28867                           	psect	text124
 28868  007AF2                     __ptext124:
 28869                           	opt stack 0
 28870  007AF2                     _TunnelManagerInit:
 28871                           	opt stack 23
 28872                           
 28873                           ; BSR set to: 0
 28874                           ;TunnelManager.c: 114: memset(tunnels,0x00,sizeof(tunnels));
 28875                           
 28876                           ; BSR set to: 1
 28877                           ;incstack = 0
 28878  007AF2  0E00               	movlw	low _tunnels
 28879  007AF4  6F60               	movwf	memset@p1& (0+255),b
 28880  007AF6  0E06               	movlw	high _tunnels
 28881  007AF8  6F61               	movwf	(memset@p1+1)& (0+255),b
 28882  007AFA  6B63               	clrf	(memset@c+1)& (0+255),b
 28883  007AFC  6B62               	clrf	memset@c& (0+255),b
 28884  007AFE  6B65               	clrf	(memset@n+1)& (0+255),b
 28885  007B00  0EF0               	movlw	240
 28886  007B02  6F64               	movwf	memset@n& (0+255),b
 28887  007B04  EF61  F03C         	goto	_memset	;wreg free
 28888  007B08                     __end_of_TunnelManagerInit:
 28889                           	opt stack 0
 28890                           tblptru	equ	0xFF8
 28891                           tblptrh	equ	0xFF7
 28892                           tblptrl	equ	0xFF6
 28893                           tablat	equ	0xFF5
 28894                           prodh	equ	0xFF4
 28895                           prodl	equ	0xFF3
 28896                           intcon	equ	0xFF2
 28897                           postinc0	equ	0xFEE
 28898                           plusw0	equ	0xFEB
 28899                           fsr0h	equ	0xFEA
 28900                           fsr0l	equ	0xFE9
 28901                           wreg	equ	0xFE8
 28902                           indf1	equ	0xFE7
 28903                           postinc1	equ	0xFE6
 28904                           postdec1	equ	0xFE5
 28905                           plusw1	equ	0xFE3
 28906                           fsr1h	equ	0xFE2
 28907                           fsr1l	equ	0xFE1
 28908                           indf2	equ	0xFDF
 28909                           postinc2	equ	0xFDE
 28910                           postdec2	equ	0xFDD
 28911                           plusw2	equ	0xFDB
 28912                           fsr2h	equ	0xFDA
 28913                           fsr2l	equ	0xFD9
 28914                           status	equ	0xFD8
 28915                           
 28916 ;; *************** function _TransportManagerInit *****************
 28917 ;; Defined at:
 28918 ;;		line 54 in file "../TransportManager.c"
 28919 ;; Parameters:    Size  Location     Type
 28920 ;;		None
 28921 ;; Auto vars:     Size  Location     Type
 28922 ;;		None
 28923 ;; Return value:  Size  Location     Type
 28924 ;;                  1    wreg      void 
 28925 ;; Registers used:
 28926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28927 ;; Tracked objects:
 28928 ;;		On entry : F/0
 28929 ;;		On exit  : F/0
 28930 ;;		Unchanged: 0/0
 28931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28936 ;;Total ram usage:        0 bytes
 28937 ;; Hardware stack levels used:    1
 28938 ;; Hardware stack levels required when called:    5
 28939 ;; This function calls:
 28940 ;;		_memset
 28941 ;; This function is called by:
 28942 ;;		_NetworkInit
 28943 ;; This function uses a non-reentrant model
 28944 ;;
 28945                           
 28946                           	psect	text125
 28947  007B08                     __ptext125:
 28948                           	opt stack 0
 28949  007B08                     _TransportManagerInit:
 28950                           	opt stack 23
 28951                           
 28952                           ; BSR set to: 0
 28953                           ;TransportManager.c: 56: memset(TMQ,0x00,sizeof(TMQ));
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;incstack = 0
 28957  007B08  0E00               	movlw	low _TMQ
 28958  007B0A  6F60               	movwf	memset@p1& (0+255),b
 28959  007B0C  0E05               	movlw	high _TMQ
 28960  007B0E  6F61               	movwf	(memset@p1+1)& (0+255),b
 28961  007B10  6B63               	clrf	(memset@c+1)& (0+255),b
 28962  007B12  6B62               	clrf	memset@c& (0+255),b
 28963  007B14  6B65               	clrf	(memset@n+1)& (0+255),b
 28964  007B16  0E98               	movlw	152
 28965  007B18  6F64               	movwf	memset@n& (0+255),b
 28966  007B1A  EF61  F03C         	goto	_memset	;wreg free
 28967  007B1E                     __end_of_TransportManagerInit:
 28968                           	opt stack 0
 28969                           tblptru	equ	0xFF8
 28970                           tblptrh	equ	0xFF7
 28971                           tblptrl	equ	0xFF6
 28972                           tablat	equ	0xFF5
 28973                           prodh	equ	0xFF4
 28974                           prodl	equ	0xFF3
 28975                           intcon	equ	0xFF2
 28976                           postinc0	equ	0xFEE
 28977                           plusw0	equ	0xFEB
 28978                           fsr0h	equ	0xFEA
 28979                           fsr0l	equ	0xFE9
 28980                           wreg	equ	0xFE8
 28981                           indf1	equ	0xFE7
 28982                           postinc1	equ	0xFE6
 28983                           postdec1	equ	0xFE5
 28984                           plusw1	equ	0xFE3
 28985                           fsr1h	equ	0xFE2
 28986                           fsr1l	equ	0xFE1
 28987                           indf2	equ	0xFDF
 28988                           postinc2	equ	0xFDE
 28989                           postdec2	equ	0xFDD
 28990                           plusw2	equ	0xFDB
 28991                           fsr2h	equ	0xFDA
 28992                           fsr2l	equ	0xFD9
 28993                           status	equ	0xFD8
 28994                           
 28995 ;; *************** function _RouteManagerInit *****************
 28996 ;; Defined at:
 28997 ;;		line 29 in file "../RouteManager.c"
 28998 ;; Parameters:    Size  Location     Type
 28999 ;;		None
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;		None
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  1    wreg      void 
 29004 ;; Registers used:
 29005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29006 ;; Tracked objects:
 29007 ;;		On entry : F/0
 29008 ;;		On exit  : F/0
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29015 ;;Total ram usage:        0 bytes
 29016 ;; Hardware stack levels used:    1
 29017 ;; Hardware stack levels required when called:    7
 29018 ;; This function calls:
 29019 ;;		_MSTickGet
 29020 ;;		_memset
 29021 ;; This function is called by:
 29022 ;;		_NetworkInit
 29023 ;; This function uses a non-reentrant model
 29024 ;;
 29025                           
 29026                           	psect	text126
 29027  00783A                     __ptext126:
 29028                           	opt stack 0
 29029  00783A                     _RouteManagerInit:
 29030                           	opt stack 21
 29031                           
 29032                           ; BSR set to: 0
 29033                           ;RouteManager.c: 31: routingTableActive=0;
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;incstack = 0
 29037  00783A  6A39               	clrf	_routingTableActive,c
 29038  00783C  6A3A               	clrf	_routingTableActive+1,c
 29039                           
 29040                           ; BSR set to: 0
 29041                           ;RouteManager.c: 32: memset(&NewBestParent,0xff,sizeof(NewBestParent));
 29042  00783E  0EAD               	movlw	low _NewBestParent
 29043  007840  6F60               	movwf	memset@p1& (0+255),b
 29044  007842  0E02               	movlw	high _NewBestParent
 29045  007844  6F61               	movwf	(memset@p1+1)& (0+255),b
 29046  007846  6B63               	clrf	(memset@c+1)& (0+255),b
 29047  007848  6962               	setf	memset@c& (0+255),b
 29048  00784A  6B65               	clrf	(memset@n+1)& (0+255),b
 29049  00784C  0E08               	movlw	8
 29050  00784E  6F64               	movwf	memset@n& (0+255),b
 29051  007850  EC61  F03C         	call	_memset	;wreg free
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;RouteManager.c: 33: tRouteMgr=MSTickGet();
 29055  007854  EC70  F03B         	call	_MSTickGet	;wreg free
 29056  007858  EE22  F01C         	lfsr	2,_tRouteMgr
 29057  00785C  0E07               	movlw	7
 29058  00785E                     u22281:
 29059  00785E  CFEB FFDB          	movff	plusw0,plusw2
 29060  007862  06E8               	decf	wreg,f,c
 29061  007864  E2FC               	bc	u22281
 29062                           
 29063                           ; BSR set to: 0
 29064  007866  0012               	return		;funcret
 29065  007868                     __end_of_RouteManagerInit:
 29066                           	opt stack 0
 29067                           tblptru	equ	0xFF8
 29068                           tblptrh	equ	0xFF7
 29069                           tblptrl	equ	0xFF6
 29070                           tablat	equ	0xFF5
 29071                           prodh	equ	0xFF4
 29072                           prodl	equ	0xFF3
 29073                           intcon	equ	0xFF2
 29074                           postinc0	equ	0xFEE
 29075                           plusw0	equ	0xFEB
 29076                           fsr0h	equ	0xFEA
 29077                           fsr0l	equ	0xFE9
 29078                           wreg	equ	0xFE8
 29079                           indf1	equ	0xFE7
 29080                           postinc1	equ	0xFE6
 29081                           postdec1	equ	0xFE5
 29082                           plusw1	equ	0xFE3
 29083                           fsr1h	equ	0xFE2
 29084                           fsr1l	equ	0xFE1
 29085                           indf2	equ	0xFDF
 29086                           postinc2	equ	0xFDE
 29087                           postdec2	equ	0xFDD
 29088                           plusw2	equ	0xFDB
 29089                           fsr2h	equ	0xFDA
 29090                           fsr2l	equ	0xFD9
 29091                           status	equ	0xFD8
 29092                           
 29093 ;; *************** function _LinkEstimatorInit *****************
 29094 ;; Defined at:
 29095 ;;		line 46 in file "../LinkEstimator.c"
 29096 ;; Parameters:    Size  Location     Type
 29097 ;;		None
 29098 ;; Auto vars:     Size  Location     Type
 29099 ;;		None
 29100 ;; Return value:  Size  Location     Type
 29101 ;;                  1    wreg      void 
 29102 ;; Registers used:
 29103 ;;		None
 29104 ;; Tracked objects:
 29105 ;;		On entry : F/0
 29106 ;;		On exit  : F/2
 29107 ;;		Unchanged: 0/0
 29108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29113 ;;Total ram usage:        0 bytes
 29114 ;; Hardware stack levels used:    1
 29115 ;; Hardware stack levels required when called:    4
 29116 ;; This function calls:
 29117 ;;		Nothing
 29118 ;; This function is called by:
 29119 ;;		_NetworkInit
 29120 ;; This function uses a non-reentrant model
 29121 ;;
 29122                           
 29123                           	psect	text127
 29124  007BFA                     __ptext127:
 29125                           	opt stack 0
 29126  007BFA                     _LinkEstimatorInit:
 29127                           	opt stack 24
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;LinkEstimator.c: 48: prevSentIdx=0;
 29131                           
 29132                           ; BSR set to: 0
 29133                           ;incstack = 0
 29134  007BFA  0102               	movlb	2	; () banked
 29135  007BFC  6B5E               	clrf	_prevSentIdx& (0+255),b
 29136  007BFE  6B5F               	clrf	(_prevSentIdx+1)& (0+255),b
 29137                           
 29138                           ;LinkEstimator.c: 49: linkEstSeq=0;
 29139  007C00  6B5A               	clrf	_linkEstSeq& (0+255),b
 29140  007C02  6B5B               	clrf	(_linkEstSeq+1)& (0+255),b
 29141                           
 29142                           ; BSR set to: 2
 29143  007C04  0012               	return		;funcret
 29144  007C06                     __end_of_LinkEstimatorInit:
 29145                           	opt stack 0
 29146                           tblptru	equ	0xFF8
 29147                           tblptrh	equ	0xFF7
 29148                           tblptrl	equ	0xFF6
 29149                           tablat	equ	0xFF5
 29150                           prodh	equ	0xFF4
 29151                           prodl	equ	0xFF3
 29152                           intcon	equ	0xFF2
 29153                           postinc0	equ	0xFEE
 29154                           plusw0	equ	0xFEB
 29155                           fsr0h	equ	0xFEA
 29156                           fsr0l	equ	0xFE9
 29157                           wreg	equ	0xFE8
 29158                           indf1	equ	0xFE7
 29159                           postinc1	equ	0xFE6
 29160                           postdec1	equ	0xFE5
 29161                           plusw1	equ	0xFE3
 29162                           fsr1h	equ	0xFE2
 29163                           fsr1l	equ	0xFE1
 29164                           indf2	equ	0xFDF
 29165                           postinc2	equ	0xFDE
 29166                           postdec2	equ	0xFDD
 29167                           plusw2	equ	0xFDB
 29168                           fsr2h	equ	0xFDA
 29169                           fsr2l	equ	0xFD9
 29170                           status	equ	0xFD8
 29171                           
 29172 ;; *************** function _DeviceManagerInit *****************
 29173 ;; Defined at:
 29174 ;;		line 86 in file "../DeviceManager.c"
 29175 ;; Parameters:    Size  Location     Type
 29176 ;;		None
 29177 ;; Auto vars:     Size  Location     Type
 29178 ;;		None
 29179 ;; Return value:  Size  Location     Type
 29180 ;;                  1    wreg      void 
 29181 ;; Registers used:
 29182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29183 ;; Tracked objects:
 29184 ;;		On entry : 0/2
 29185 ;;		On exit  : F/0
 29186 ;;		Unchanged: 0/0
 29187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29192 ;;Total ram usage:        0 bytes
 29193 ;; Hardware stack levels used:    1
 29194 ;; Hardware stack levels required when called:    5
 29195 ;; This function calls:
 29196 ;;		_memset
 29197 ;; This function is called by:
 29198 ;;		_NetworkInit
 29199 ;; This function uses a non-reentrant model
 29200 ;;
 29201                           
 29202                           	psect	text128
 29203  007A60                     __ptext128:
 29204                           	opt stack 0
 29205  007A60                     _DeviceManagerInit:
 29206                           	opt stack 23
 29207                           
 29208                           ;DeviceManager.c: 88: memset(list,0xff,sizeof(list));
 29209                           
 29210                           ; BSR set to: 2
 29211                           ;incstack = 0
 29212  007A60  0EF6               	movlw	low _list
 29213  007A62  0100               	movlb	0	; () banked
 29214  007A64  6F60               	movwf	memset@p1& (0+255),b
 29215  007A66  0E0B               	movlw	high _list
 29216  007A68  6F61               	movwf	(memset@p1+1)& (0+255),b
 29217  007A6A  6B63               	clrf	(memset@c+1)& (0+255),b
 29218  007A6C  6962               	setf	memset@c& (0+255),b
 29219  007A6E  0E01               	movlw	1
 29220  007A70  6F65               	movwf	(memset@n+1)& (0+255),b
 29221  007A72  0E54               	movlw	84
 29222  007A74  6F64               	movwf	memset@n& (0+255),b
 29223  007A76  EF61  F03C         	goto	_memset	;wreg free
 29224  007A7A                     __end_of_DeviceManagerInit:
 29225                           	opt stack 0
 29226                           tblptru	equ	0xFF8
 29227                           tblptrh	equ	0xFF7
 29228                           tblptrl	equ	0xFF6
 29229                           tablat	equ	0xFF5
 29230                           prodh	equ	0xFF4
 29231                           prodl	equ	0xFF3
 29232                           intcon	equ	0xFF2
 29233                           postinc0	equ	0xFEE
 29234                           plusw0	equ	0xFEB
 29235                           fsr0h	equ	0xFEA
 29236                           fsr0l	equ	0xFE9
 29237                           wreg	equ	0xFE8
 29238                           indf1	equ	0xFE7
 29239                           postinc1	equ	0xFE6
 29240                           postdec1	equ	0xFE5
 29241                           plusw1	equ	0xFE3
 29242                           fsr1h	equ	0xFE2
 29243                           fsr1l	equ	0xFE1
 29244                           indf2	equ	0xFDF
 29245                           postinc2	equ	0xFDE
 29246                           postdec2	equ	0xFDD
 29247                           plusw2	equ	0xFDB
 29248                           fsr2h	equ	0xFDA
 29249                           fsr2l	equ	0xFD9
 29250                           status	equ	0xFD8
 29251                           
 29252 ;; *************** function _CacheInit *****************
 29253 ;; Defined at:
 29254 ;;		line 72 in file "../Cache.c"
 29255 ;; Parameters:    Size  Location     Type
 29256 ;;		None
 29257 ;; Auto vars:     Size  Location     Type
 29258 ;;		None
 29259 ;; Return value:  Size  Location     Type
 29260 ;;                  1    wreg      void 
 29261 ;; Registers used:
 29262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29263 ;; Tracked objects:
 29264 ;;		On entry : F/0
 29265 ;;		On exit  : F/0
 29266 ;;		Unchanged: 0/0
 29267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29272 ;;Total ram usage:        0 bytes
 29273 ;; Hardware stack levels used:    1
 29274 ;; Hardware stack levels required when called:    5
 29275 ;; This function calls:
 29276 ;;		_memset
 29277 ;; This function is called by:
 29278 ;;		_NetworkInit
 29279 ;; This function uses a non-reentrant model
 29280 ;;
 29281                           
 29282                           	psect	text129
 29283  007A94                     __ptext129:
 29284                           	opt stack 0
 29285  007A94                     _CacheInit:
 29286                           	opt stack 23
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;Cache.c: 74: memset(hc_table,0x00,sizeof(hc_table));
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;incstack = 0
 29293  007A94  0E8E               	movlw	low _hc_table
 29294  007A96  6F60               	movwf	memset@p1& (0+255),b
 29295  007A98  0E0A               	movlw	high _hc_table
 29296  007A9A  6F61               	movwf	(memset@p1+1)& (0+255),b
 29297  007A9C  6B63               	clrf	(memset@c+1)& (0+255),b
 29298  007A9E  6B62               	clrf	memset@c& (0+255),b
 29299  007AA0  0E01               	movlw	1
 29300  007AA2  6F65               	movwf	(memset@n+1)& (0+255),b
 29301  007AA4  0E68               	movlw	104
 29302  007AA6  6F64               	movwf	memset@n& (0+255),b
 29303  007AA8  EF61  F03C         	goto	_memset	;wreg free
 29304  007AAC                     __end_of_CacheInit:
 29305                           	opt stack 0
 29306                           tblptru	equ	0xFF8
 29307                           tblptrh	equ	0xFF7
 29308                           tblptrl	equ	0xFF6
 29309                           tablat	equ	0xFF5
 29310                           prodh	equ	0xFF4
 29311                           prodl	equ	0xFF3
 29312                           intcon	equ	0xFF2
 29313                           postinc0	equ	0xFEE
 29314                           plusw0	equ	0xFEB
 29315                           fsr0h	equ	0xFEA
 29316                           fsr0l	equ	0xFE9
 29317                           wreg	equ	0xFE8
 29318                           indf1	equ	0xFE7
 29319                           postinc1	equ	0xFE6
 29320                           postdec1	equ	0xFE5
 29321                           plusw1	equ	0xFE3
 29322                           fsr1h	equ	0xFE2
 29323                           fsr1l	equ	0xFE1
 29324                           indf2	equ	0xFDF
 29325                           postinc2	equ	0xFDE
 29326                           postdec2	equ	0xFDD
 29327                           plusw2	equ	0xFDB
 29328                           fsr2h	equ	0xFDA
 29329                           fsr2l	equ	0xFD9
 29330                           status	equ	0xFD8
 29331                           
 29332 ;; *************** function _BroadcastManagerInit *****************
 29333 ;; Defined at:
 29334 ;;		line 24 in file "../BroadcastManager.c"
 29335 ;; Parameters:    Size  Location     Type
 29336 ;;		None
 29337 ;; Auto vars:     Size  Location     Type
 29338 ;;		None
 29339 ;; Return value:  Size  Location     Type
 29340 ;;                  1    wreg      void 
 29341 ;; Registers used:
 29342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29343 ;; Tracked objects:
 29344 ;;		On entry : F/0
 29345 ;;		On exit  : F/0
 29346 ;;		Unchanged: 0/0
 29347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29352 ;;Total ram usage:        0 bytes
 29353 ;; Hardware stack levels used:    1
 29354 ;; Hardware stack levels required when called:    5
 29355 ;; This function calls:
 29356 ;;		_memset
 29357 ;; This function is called by:
 29358 ;;		_NetworkInit
 29359 ;; This function uses a non-reentrant model
 29360 ;;
 29361                           
 29362                           	psect	text130
 29363  007AAC                     __ptext130:
 29364                           	opt stack 0
 29365  007AAC                     _BroadcastManagerInit:
 29366                           	opt stack 23
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;BroadcastManager.c: 26: memset((uint8_t*)RbcQ,0x00,sizeof(RbcQ));
 29370                           
 29371                           ; BSR set to: 0
 29372                           ;incstack = 0
 29373  007AAC  0ED2               	movlw	low _RbcQ
 29374  007AAE  6F60               	movwf	memset@p1& (0+255),b
 29375  007AB0  0E08               	movlw	high _RbcQ
 29376  007AB2  6F61               	movwf	(memset@p1+1)& (0+255),b
 29377  007AB4  6B63               	clrf	(memset@c+1)& (0+255),b
 29378  007AB6  6B62               	clrf	memset@c& (0+255),b
 29379  007AB8  0E01               	movlw	1
 29380  007ABA  6F65               	movwf	(memset@n+1)& (0+255),b
 29381  007ABC  0EBC               	movlw	188
 29382  007ABE  6F64               	movwf	memset@n& (0+255),b
 29383  007AC0  EF61  F03C         	goto	_memset	;wreg free
 29384  007AC4                     __end_of_BroadcastManagerInit:
 29385                           	opt stack 0
 29386                           tblptru	equ	0xFF8
 29387                           tblptrh	equ	0xFF7
 29388                           tblptrl	equ	0xFF6
 29389                           tablat	equ	0xFF5
 29390                           prodh	equ	0xFF4
 29391                           prodl	equ	0xFF3
 29392                           intcon	equ	0xFF2
 29393                           postinc0	equ	0xFEE
 29394                           plusw0	equ	0xFEB
 29395                           fsr0h	equ	0xFEA
 29396                           fsr0l	equ	0xFE9
 29397                           wreg	equ	0xFE8
 29398                           indf1	equ	0xFE7
 29399                           postinc1	equ	0xFE6
 29400                           postdec1	equ	0xFE5
 29401                           plusw1	equ	0xFE3
 29402                           fsr1h	equ	0xFE2
 29403                           fsr1l	equ	0xFE1
 29404                           indf2	equ	0xFDF
 29405                           postinc2	equ	0xFDE
 29406                           postdec2	equ	0xFDD
 29407                           plusw2	equ	0xFDB
 29408                           fsr2h	equ	0xFDA
 29409                           fsr2l	equ	0xFD9
 29410                           status	equ	0xFD8
 29411                           
 29412 ;; *************** function _memset *****************
 29413 ;; Defined at:
 29414 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 29415 ;; Parameters:    Size  Location     Type
 29416 ;;  p1              2    0[BANK0 ] PTR void 
 29417 ;;		 -> Tick_MS(8), list(340), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(8), 
 29418 ;;		 -> NetworkSendDiscoverRequest@address(8), CoordinatorGenericAddress@address(8), routeInfo.parent(8), CoordinatorAdd
      +r(8), 
 29419 ;;		 -> routeInfo(13), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 29420 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(8), tunnels(240), TunnelManagerSetTunnel@OldestTick(
      +8), 
 29421 ;;		 -> RbcQ(444), beaconMessageBuffer(84), RoutingTableFindDeviceOrParent@res(8), NewBestParent(8), 
 29422 ;;		 -> NetworkBroadcastData@address(8), ActiveScanResults(25), ConnectionTable(85), radioBroadcast@addr(8), 
 29423 ;;		 -> NULL(0), main@coord(8), rxMessage(10), LCDText(33), 
 29424 ;;  c               2    2[BANK0 ] int 
 29425 ;;  n               2    4[BANK0 ] unsigned int 
 29426 ;; Auto vars:     Size  Location     Type
 29427 ;;  p               2    6[BANK0 ] PTR unsigned char 
 29428 ;;		 -> Tick_MS(8), list(340), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(8), 
 29429 ;;		 -> NetworkSendDiscoverRequest@address(8), CoordinatorGenericAddress@address(8), routeInfo.parent(8), CoordinatorAdd
      +r(8), 
 29430 ;;		 -> routeInfo(13), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 29431 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(8), tunnels(240), TunnelManagerSetTunnel@OldestTick(
      +8), 
 29432 ;;		 -> RbcQ(444), beaconMessageBuffer(84), RoutingTableFindDeviceOrParent@res(8), NewBestParent(8), 
 29433 ;;		 -> NetworkBroadcastData@address(8), ActiveScanResults(25), ConnectionTable(85), radioBroadcast@addr(8), 
 29434 ;;		 -> NULL(0), main@coord(8), rxMessage(10), LCDText(33), 
 29435 ;; Return value:  Size  Location     Type
 29436 ;;                  2    0[BANK0 ] PTR void 
 29437 ;; Registers used:
 29438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29439 ;; Tracked objects:
 29440 ;;		On entry : F/0
 29441 ;;		On exit  : F/0
 29442 ;;		Unchanged: 0/0
 29443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29448 ;;Total ram usage:        8 bytes
 29449 ;; Hardware stack levels used:    1
 29450 ;; Hardware stack levels required when called:    4
 29451 ;; This function calls:
 29452 ;;		Nothing
 29453 ;; This function is called by:
 29454 ;;		_main
 29455 ;;		_radioBroadcast
 29456 ;;		_MiApp_ProtocolInit
 29457 ;;		_NetworkDataArrivedEvent
 29458 ;;		_AddNodeToNetworkTable
 29459 ;;		_MiApp_SearchConnection
 29460 ;;		_RouteManagerInit
 29461 ;;		_routeInfoInit
 29462 ;;		_RoutingTableFindDeviceOrParent
 29463 ;;		_networkSendBeacon
 29464 ;;		_BroadcastManagerInit
 29465 ;;		_BroadcastManagerTask
 29466 ;;		_TunnelManagerSetTunnel
 29467 ;;		_TunnelManagerGetTunnel
 29468 ;;		_TunnelManagerInvalidateTunnel
 29469 ;;		_TunnelManagerInit
 29470 ;;		_isKnownPacket
 29471 ;;		_CacheInit
 29472 ;;		_TransportManagerInit
 29473 ;;		_NetworkInit
 29474 ;;		_CoordinatorGenericAddress
 29475 ;;		_NetworkSendDiscoverRequest
 29476 ;;		_NetworkSendDiscoverResponse
 29477 ;;		_IsNetworkDevice
 29478 ;;		_DeviceManagerInit
 29479 ;;		_NetworkBroadcastData
 29480 ;; This function uses a non-reentrant model
 29481 ;;
 29482                           
 29483                           	psect	text131
 29484  0078C2                     __ptext131:
 29485                           	opt stack 0
 29486  0078C2                     _memset:
 29487                           	opt stack 26
 29488                           
 29489                           ; BSR set to: 0
 29490                           
 29491                           ; BSR set to: 0
 29492                           ;incstack = 0
 29493  0078C2  C060  F066         	movff	memset@p1,memset@p
 29494  0078C6  C061  F067         	movff	memset@p1+1,memset@p+1
 29495  0078CA  D008               	goto	l11623
 29496  0078CC                     l11619:
 29497                           
 29498                           ; BSR set to: 0
 29499  0078CC  C066  FFD9         	movff	memset@p,fsr2l
 29500  0078D0  C067  FFDA         	movff	memset@p+1,fsr2h
 29501  0078D4  C062  FFDF         	movff	memset@c,indf2
 29502                           
 29503                           ; BSR set to: 0
 29504  0078D8  4B66               	infsnz	memset@p& (0+255),f,b
 29505  0078DA  2B67               	incf	(memset@p+1)& (0+255),f,b
 29506  0078DC                     l11623:
 29507                           
 29508                           ; BSR set to: 0
 29509  0078DC  0764               	decf	memset@n& (0+255),f,b
 29510  0078DE  A0D8               	btfss	status,0,c
 29511  0078E0  0765               	decf	(memset@n+1)& (0+255),f,b
 29512  0078E2  2964               	incf	memset@n& (0+255),w,b
 29513  0078E4  E1F3               	bnz	l11619
 29514  0078E6  2965               	incf	(memset@n+1)& (0+255),w,b
 29515  0078E8  E1F1               	bnz	l11619
 29516                           
 29517                           ; BSR set to: 0
 29518  0078EA  0012               	return		;funcret
 29519  0078EC                     __end_of_memset:
 29520                           	opt stack 0
 29521                           tblptru	equ	0xFF8
 29522                           tblptrh	equ	0xFF7
 29523                           tblptrl	equ	0xFF6
 29524                           tablat	equ	0xFF5
 29525                           prodh	equ	0xFF4
 29526                           prodl	equ	0xFF3
 29527                           intcon	equ	0xFF2
 29528                           postinc0	equ	0xFEE
 29529                           plusw0	equ	0xFEB
 29530                           fsr0h	equ	0xFEA
 29531                           fsr0l	equ	0xFE9
 29532                           wreg	equ	0xFE8
 29533                           indf1	equ	0xFE7
 29534                           postinc1	equ	0xFE6
 29535                           postdec1	equ	0xFE5
 29536                           plusw1	equ	0xFE3
 29537                           fsr1h	equ	0xFE2
 29538                           fsr1l	equ	0xFE1
 29539                           indf2	equ	0xFDF
 29540                           postinc2	equ	0xFDE
 29541                           postdec2	equ	0xFDD
 29542                           plusw2	equ	0xFDB
 29543                           fsr2h	equ	0xFDA
 29544                           fsr2l	equ	0xFD9
 29545                           status	equ	0xFD8
 29546                           
 29547 ;; *************** function _BeaconManagerInit *****************
 29548 ;; Defined at:
 29549 ;;		line 37 in file "../BeaconManager.c"
 29550 ;; Parameters:    Size  Location     Type
 29551 ;;		None
 29552 ;; Auto vars:     Size  Location     Type
 29553 ;;		None
 29554 ;; Return value:  Size  Location     Type
 29555 ;;                  1    wreg      void 
 29556 ;; Registers used:
 29557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29558 ;; Tracked objects:
 29559 ;;		On entry : F/2
 29560 ;;		On exit  : F/0
 29561 ;;		Unchanged: 0/0
 29562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29567 ;;Total ram usage:        0 bytes
 29568 ;; Hardware stack levels used:    1
 29569 ;; Hardware stack levels required when called:    9
 29570 ;; This function calls:
 29571 ;;		_krnd
 29572 ;;		_netResetInterval
 29573 ;; This function is called by:
 29574 ;;		_NetworkInit
 29575 ;; This function uses a non-reentrant model
 29576 ;;
 29577                           
 29578                           	psect	text132
 29579  007A0C                     __ptext132:
 29580                           	opt stack 0
 29581  007A0C                     _BeaconManagerInit:
 29582                           	opt stack 19
 29583                           
 29584                           ; BSR set to: 2
 29585                           ;BeaconManager.c: 39: intervalDelay=0;
 29586                           
 29587                           ; BSR set to: 0
 29588                           ;incstack = 0
 29589  007A0C  6B4C               	clrf	_intervalDelay& (0+255),b
 29590  007A0E  6B4D               	clrf	(_intervalDelay+1)& (0+255),b
 29591  007A10  6B4E               	clrf	(_intervalDelay+2)& (0+255),b
 29592  007A12  6B4F               	clrf	(_intervalDelay+3)& (0+255),b
 29593                           
 29594                           ;BeaconManager.c: 40: currentInterval=0;
 29595  007A14  6B44               	clrf	_currentInterval& (0+255),b
 29596  007A16  6B45               	clrf	(_currentInterval+1)& (0+255),b
 29597  007A18  6B46               	clrf	(_currentInterval+2)& (0+255),b
 29598  007A1A  6B47               	clrf	(_currentInterval+3)& (0+255),b
 29599                           
 29600                           ;BeaconManager.c: 41: BMState=BMPOR;
 29601  007A1C  6A3F               	clrf	_BMState,c
 29602                           
 29603                           ; BSR set to: 2
 29604                           ;BeaconManager.c: 42: netSequenceNumber=krnd();
 29605  007A1E  EC76  F022         	call	_krnd	;wreg free
 29606  007A22  5160               	movf	?_krnd& (0+255),w,b
 29607  007A24  6E4A               	movwf	_netSequenceNumber,c
 29608                           
 29609                           ; BSR set to: 0
 29610                           ;BeaconManager.c: 43: netResetInterval();
 29611  007A26  EF8F  F03D         	goto	_netResetInterval	;wreg free
 29612  007A2A                     __end_of_BeaconManagerInit:
 29613                           	opt stack 0
 29614                           tblptru	equ	0xFF8
 29615                           tblptrh	equ	0xFF7
 29616                           tblptrl	equ	0xFF6
 29617                           tablat	equ	0xFF5
 29618                           prodh	equ	0xFF4
 29619                           prodl	equ	0xFF3
 29620                           intcon	equ	0xFF2
 29621                           postinc0	equ	0xFEE
 29622                           plusw0	equ	0xFEB
 29623                           fsr0h	equ	0xFEA
 29624                           fsr0l	equ	0xFE9
 29625                           wreg	equ	0xFE8
 29626                           indf1	equ	0xFE7
 29627                           postinc1	equ	0xFE6
 29628                           postdec1	equ	0xFE5
 29629                           plusw1	equ	0xFE3
 29630                           fsr1h	equ	0xFE2
 29631                           fsr1l	equ	0xFE1
 29632                           indf2	equ	0xFDF
 29633                           postinc2	equ	0xFDE
 29634                           postdec2	equ	0xFDD
 29635                           plusw2	equ	0xFDB
 29636                           fsr2h	equ	0xFDA
 29637                           fsr2l	equ	0xFD9
 29638                           status	equ	0xFD8
 29639                           
 29640 ;; *************** function _netResetInterval *****************
 29641 ;; Defined at:
 29642 ;;		line 135 in file "../BeaconManager.c"
 29643 ;; Parameters:    Size  Location     Type
 29644 ;;		None
 29645 ;; Auto vars:     Size  Location     Type
 29646 ;;		None
 29647 ;; Return value:  Size  Location     Type
 29648 ;;                  1    wreg      void 
 29649 ;; Registers used:
 29650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29651 ;; Tracked objects:
 29652 ;;		On entry : F/0
 29653 ;;		On exit  : F/0
 29654 ;;		Unchanged: 0/0
 29655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29660 ;;Total ram usage:        0 bytes
 29661 ;; Hardware stack levels used:    1
 29662 ;; Hardware stack levels required when called:    8
 29663 ;; This function calls:
 29664 ;;		_netChooseAdvertiseTime
 29665 ;; This function is called by:
 29666 ;;		_BeaconManagerInit
 29667 ;;		_BeaconManagerTrigger
 29668 ;; This function uses a non-reentrant model
 29669 ;;
 29670                           
 29671                           	psect	text133
 29672  007B1E                     __ptext133:
 29673                           	opt stack 0
 29674  007B1E                     _netResetInterval:
 29675                           	opt stack 17
 29676                           
 29677                           ; BSR set to: 0
 29678                           ;BeaconManager.c: 137: currentInterval = ((SPAN)100);
 29679                           
 29680                           ; BSR set to: 0
 29681                           ;incstack = 0
 29682  007B1E  0E64               	movlw	100
 29683  007B20  0102               	movlb	2	; () banked
 29684  007B22  6F44               	movwf	_currentInterval& (0+255),b
 29685  007B24  6B45               	clrf	(_currentInterval+1)& (0+255),b
 29686  007B26  6B46               	clrf	(_currentInterval+2)& (0+255),b
 29687  007B28  6B47               	clrf	(_currentInterval+3)& (0+255),b
 29688                           
 29689                           ; BSR set to: 2
 29690                           ;BeaconManager.c: 138: netChooseAdvertiseTime();
 29691  007B2A  EC6F  F034         	call	_netChooseAdvertiseTime	;wreg free
 29692                           
 29693                           ; BSR set to: 0
 29694                           ;BeaconManager.c: 139: BMState=BM_WaitInitial;
 29695  007B2E  0E02               	movlw	2
 29696  007B30  6E3F               	movwf	_BMState,c
 29697                           
 29698                           ; BSR set to: 0
 29699  007B32  0C02               	retlw	2	;funcret
 29700  007B34                     __end_of_netResetInterval:
 29701                           	opt stack 0
 29702                           tblptru	equ	0xFF8
 29703                           tblptrh	equ	0xFF7
 29704                           tblptrl	equ	0xFF6
 29705                           tablat	equ	0xFF5
 29706                           prodh	equ	0xFF4
 29707                           prodl	equ	0xFF3
 29708                           intcon	equ	0xFF2
 29709                           postinc0	equ	0xFEE
 29710                           plusw0	equ	0xFEB
 29711                           fsr0h	equ	0xFEA
 29712                           fsr0l	equ	0xFE9
 29713                           wreg	equ	0xFE8
 29714                           indf1	equ	0xFE7
 29715                           postinc1	equ	0xFE6
 29716                           postdec1	equ	0xFE5
 29717                           plusw1	equ	0xFE3
 29718                           fsr1h	equ	0xFE2
 29719                           fsr1l	equ	0xFE1
 29720                           indf2	equ	0xFDF
 29721                           postinc2	equ	0xFDE
 29722                           postdec2	equ	0xFDD
 29723                           plusw2	equ	0xFDB
 29724                           fsr2h	equ	0xFDA
 29725                           fsr2l	equ	0xFD9
 29726                           status	equ	0xFD8
 29727                           
 29728 ;; *************** function _netChooseAdvertiseTime *****************
 29729 ;; Defined at:
 29730 ;;		line 125 in file "../BeaconManager.c"
 29731 ;; Parameters:    Size  Location     Type
 29732 ;;		None
 29733 ;; Auto vars:     Size  Location     Type
 29734 ;;  t               4   28[BANK0 ] unsigned long 
 29735 ;; Return value:  Size  Location     Type
 29736 ;;                  1    wreg      void 
 29737 ;; Registers used:
 29738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29739 ;; Tracked objects:
 29740 ;;		On entry : F/2
 29741 ;;		On exit  : F/0
 29742 ;;		Unchanged: 0/0
 29743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29745 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29747 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29748 ;;Total ram usage:        4 bytes
 29749 ;; Hardware stack levels used:    1
 29750 ;; Hardware stack levels required when called:    7
 29751 ;; This function calls:
 29752 ;;		_MSTickGet
 29753 ;;		___llmod
 29754 ;;		_krnd
 29755 ;; This function is called by:
 29756 ;;		_netResetInterval
 29757 ;;		_netDecayInterval
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text134
 29762  0068DE                     __ptext134:
 29763                           	opt stack 0
 29764  0068DE                     _netChooseAdvertiseTime:
 29765                           	opt stack 17
 29766                           
 29767                           ; BSR set to: 2
 29768                           ;BeaconManager.c: 127: SPAN t;
 29769                           ;BeaconManager.c: 128: t = currentInterval;
 29770                           
 29771                           ; BSR set to: 0
 29772                           ;incstack = 0
 29773  0068DE  C244  F07C         	movff	_currentInterval,netChooseAdvertiseTime@t
 29774  0068E2  C245  F07D         	movff	_currentInterval+1,netChooseAdvertiseTime@t+1
 29775  0068E6  C246  F07E         	movff	_currentInterval+2,netChooseAdvertiseTime@t+2
 29776  0068EA  C247  F07F         	movff	_currentInterval+3,netChooseAdvertiseTime@t+3
 29777                           
 29778                           ; BSR set to: 2
 29779                           ;BeaconManager.c: 129: t /= 2;
 29780  0068EE  0100               	movlb	0	; () banked
 29781  0068F0  90D8               	bcf	status,0,c
 29782  0068F2  337F               	rrcf	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 29783  0068F4  337E               	rrcf	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 29784  0068F6  337D               	rrcf	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 29785  0068F8  337C               	rrcf	netChooseAdvertiseTime@t& (0+255),f,b
 29786                           
 29787                           ; BSR set to: 0
 29788                           ;BeaconManager.c: 130: t += krnd() % t;
 29789  0068FA  EC76  F022         	call	_krnd	;wreg free
 29790  0068FE  C060  F06C         	movff	?_krnd,___llmod@dividend
 29791  006902  C061  F06D         	movff	?_krnd+1,___llmod@dividend+1
 29792  006906  C062  F06E         	movff	?_krnd+2,___llmod@dividend+2
 29793  00690A  C063  F06F         	movff	?_krnd+3,___llmod@dividend+3
 29794  00690E  C07C  F070         	movff	netChooseAdvertiseTime@t,___llmod@divisor
 29795  006912  C07D  F071         	movff	netChooseAdvertiseTime@t+1,___llmod@divisor+1
 29796  006916  C07E  F072         	movff	netChooseAdvertiseTime@t+2,___llmod@divisor+2
 29797  00691A  C07F  F073         	movff	netChooseAdvertiseTime@t+3,___llmod@divisor+3
 29798  00691E  EC95  F036         	call	___llmod	;wreg free
 29799  006922  516C               	movf	?___llmod& (0+255),w,b
 29800  006924  277C               	addwf	netChooseAdvertiseTime@t& (0+255),f,b
 29801  006926  516D               	movf	(?___llmod+1)& (0+255),w,b
 29802  006928  237D               	addwfc	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 29803  00692A  516E               	movf	(?___llmod+2)& (0+255),w,b
 29804  00692C  237E               	addwfc	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 29805  00692E  516F               	movf	(?___llmod+3)& (0+255),w,b
 29806  006930  237F               	addwfc	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 29807                           
 29808                           ; BSR set to: 0
 29809                           ;BeaconManager.c: 131: tInterval=MSTickGet();
 29810  006932  EC70  F03B         	call	_MSTickGet	;wreg free
 29811  006936  EE22  F014         	lfsr	2,_tInterval
 29812  00693A  0E07               	movlw	7
 29813  00693C                     u17311:
 29814  00693C  CFEB FFDB          	movff	plusw0,plusw2
 29815  006940  06E8               	decf	wreg,f,c
 29816  006942  E2FC               	bc	u17311
 29817                           
 29818                           ; BSR set to: 0
 29819                           ;BeaconManager.c: 132: intervalDelay=t;
 29820  006944  C07C  F24C         	movff	netChooseAdvertiseTime@t,_intervalDelay
 29821  006948  C07D  F24D         	movff	netChooseAdvertiseTime@t+1,_intervalDelay+1
 29822  00694C  C07E  F24E         	movff	netChooseAdvertiseTime@t+2,_intervalDelay+2
 29823  006950  C07F  F24F         	movff	netChooseAdvertiseTime@t+3,_intervalDelay+3
 29824                           
 29825                           ; BSR set to: 0
 29826  006954  0012               	return		;funcret
 29827  006956                     __end_of_netChooseAdvertiseTime:
 29828                           	opt stack 0
 29829                           tblptru	equ	0xFF8
 29830                           tblptrh	equ	0xFF7
 29831                           tblptrl	equ	0xFF6
 29832                           tablat	equ	0xFF5
 29833                           prodh	equ	0xFF4
 29834                           prodl	equ	0xFF3
 29835                           intcon	equ	0xFF2
 29836                           postinc0	equ	0xFEE
 29837                           plusw0	equ	0xFEB
 29838                           fsr0h	equ	0xFEA
 29839                           fsr0l	equ	0xFE9
 29840                           wreg	equ	0xFE8
 29841                           indf1	equ	0xFE7
 29842                           postinc1	equ	0xFE6
 29843                           postdec1	equ	0xFE5
 29844                           plusw1	equ	0xFE3
 29845                           fsr1h	equ	0xFE2
 29846                           fsr1l	equ	0xFE1
 29847                           indf2	equ	0xFDF
 29848                           postinc2	equ	0xFDE
 29849                           postdec2	equ	0xFDD
 29850                           plusw2	equ	0xFDB
 29851                           fsr2h	equ	0xFDA
 29852                           fsr2l	equ	0xFD9
 29853                           status	equ	0xFD8
 29854                           
 29855 ;; *************** function _krnd *****************
 29856 ;; Defined at:
 29857 ;;		line 16 in file "../krnd.c"
 29858 ;; Parameters:    Size  Location     Type
 29859 ;;		None
 29860 ;; Auto vars:     Size  Location     Type
 29861 ;;  t               4    8[BANK0 ] long 
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  4    0[BANK0 ] unsigned long 
 29864 ;; Registers used:
 29865 ;;		wreg, status,2, status,0
 29866 ;; Tracked objects:
 29867 ;;		On entry : D/0
 29868 ;;		On exit  : F/0
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29874 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29875 ;;Total ram usage:       12 bytes
 29876 ;; Hardware stack levels used:    1
 29877 ;; Hardware stack levels required when called:    4
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_MiMAC_Init
 29882 ;;		_BeaconManagerInit
 29883 ;;		_netChooseAdvertiseTime
 29884 ;;		_le_findRandomNeighborIdx
 29885 ;;		_BroadcastManagerDelaySend
 29886 ;;		_NetworkManagerTask
 29887 ;;		_NetworkInit
 29888 ;; This function uses a non-reentrant model
 29889 ;;
 29890                           
 29891                           	psect	text135
 29892  0044EC                     __ptext135:
 29893                           	opt stack 0
 29894  0044EC                     _krnd:
 29895                           	opt stack 21
 29896                           
 29897                           ;krnd.c: 18: int32_t t;
 29898                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;incstack = 0
 29902  0044EC  C055  F064         	movff	_y,??_krnd
 29903  0044F0  C056  F065         	movff	_y+1,??_krnd+1
 29904  0044F4  C057  F066         	movff	_y+2,??_krnd+2
 29905  0044F8  C058  F067         	movff	_y+3,??_krnd+3
 29906  0044FC  0E05               	movlw	5
 29907  0044FE                     u16775:
 29908  0044FE  90D8               	bcf	status,0,c
 29909  004500  0100               	movlb	0	; () banked
 29910  004502  3764               	rlcf	??_krnd& (0+255),f,b
 29911  004504  3765               	rlcf	(??_krnd+1)& (0+255),f,b
 29912  004506  3766               	rlcf	(??_krnd+2)& (0+255),f,b
 29913  004508  3767               	rlcf	(??_krnd+3)& (0+255),f,b
 29914  00450A  2EE8               	decfsz	wreg,f,c
 29915  00450C  D7F8               	goto	u16775
 29916  00450E  5164               	movf	??_krnd& (0+255),w,b
 29917  004510  1A55               	xorwf	_y,f,c
 29918  004512  5165               	movf	(??_krnd+1)& (0+255),w,b
 29919  004514  1A56               	xorwf	_y+1,f,c
 29920  004516  5166               	movf	(??_krnd+2)& (0+255),w,b
 29921  004518  1A57               	xorwf	_y+2,f,c
 29922  00451A  5167               	movf	(??_krnd+3)& (0+255),w,b
 29923  00451C  1A58               	xorwf	_y+3,f,c
 29924  00451E  C055  F064         	movff	_y,??_krnd
 29925  004522  C056  F065         	movff	_y+1,??_krnd+1
 29926  004526  C057  F066         	movff	_y+2,??_krnd+2
 29927  00452A  C058  F067         	movff	_y+3,??_krnd+3
 29928  00452E  0E08               	movlw	8
 29929  004530  D005               	goto	u16780
 29930  004532                     u16785:
 29931  004532  90D8               	bcf	status,0,c
 29932  004534  3367               	rrcf	(??_krnd+3)& (0+255),f,b
 29933  004536  3366               	rrcf	(??_krnd+2)& (0+255),f,b
 29934  004538  3365               	rrcf	(??_krnd+1)& (0+255),f,b
 29935  00453A  3364               	rrcf	??_krnd& (0+255),f,b
 29936  00453C                     u16780:
 29937  00453C  2EE8               	decfsz	wreg,f,c
 29938  00453E  D7F9               	goto	u16785
 29939  004540  5164               	movf	??_krnd& (0+255),w,b
 29940  004542  1A55               	xorwf	_y,f,c
 29941  004544  5165               	movf	(??_krnd+1)& (0+255),w,b
 29942  004546  1A56               	xorwf	_y+1,f,c
 29943  004548  5166               	movf	(??_krnd+2)& (0+255),w,b
 29944  00454A  1A57               	xorwf	_y+2,f,c
 29945  00454C  5167               	movf	(??_krnd+3)& (0+255),w,b
 29946  00454E  1A58               	xorwf	_y+3,f,c
 29947  004550  C055  F064         	movff	_y,??_krnd
 29948  004554  C056  F065         	movff	_y+1,??_krnd+1
 29949  004558  C057  F066         	movff	_y+2,??_krnd+2
 29950  00455C  C058  F067         	movff	_y+3,??_krnd+3
 29951  004560  0E16               	movlw	22
 29952  004562                     u16795:
 29953  004562  90D8               	bcf	status,0,c
 29954  004564  3764               	rlcf	??_krnd& (0+255),f,b
 29955  004566  3765               	rlcf	(??_krnd+1)& (0+255),f,b
 29956  004568  3766               	rlcf	(??_krnd+2)& (0+255),f,b
 29957  00456A  3767               	rlcf	(??_krnd+3)& (0+255),f,b
 29958  00456C  2EE8               	decfsz	wreg,f,c
 29959  00456E  D7F9               	goto	u16795
 29960  004570  5164               	movf	??_krnd& (0+255),w,b
 29961  004572  1A55               	xorwf	_y,f,c
 29962  004574  5165               	movf	(??_krnd+1)& (0+255),w,b
 29963  004576  1A56               	xorwf	_y+1,f,c
 29964  004578  5166               	movf	(??_krnd+2)& (0+255),w,b
 29965  00457A  1A57               	xorwf	_y+2,f,c
 29966  00457C  5167               	movf	(??_krnd+3)& (0+255),w,b
 29967  00457E  1A58               	xorwf	_y+3,f,c
 29968                           
 29969                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 29970  004580  0102               	movlb	2	; () banked
 29971  004582  51DD               	movf	_w& (0+255),w,b
 29972  004584  25E5               	addwf	_z& (0+255),w,b
 29973  004586  0100               	movlb	0	; () banked
 29974  004588  6F64               	movwf	??_krnd& (0+255),b
 29975  00458A  0102               	movlb	2	; () banked
 29976  00458C  51DE               	movf	(_w+1)& (0+255),w,b
 29977  00458E  21E6               	addwfc	(_z+1)& (0+255),w,b
 29978  004590  0100               	movlb	0	; () banked
 29979  004592  6F65               	movwf	(??_krnd+1)& (0+255),b
 29980  004594  0102               	movlb	2	; () banked
 29981  004596  51DF               	movf	(_w+2)& (0+255),w,b
 29982  004598  21E7               	addwfc	(_z+2)& (0+255),w,b
 29983  00459A  0100               	movlb	0	; () banked
 29984  00459C  6F66               	movwf	(??_krnd+2)& (0+255),b
 29985  00459E  0102               	movlb	2	; () banked
 29986  0045A0  51E0               	movf	(_w+3)& (0+255),w,b
 29987  0045A2  21E8               	addwfc	(_z+3)& (0+255),w,b
 29988  0045A4  0100               	movlb	0	; () banked
 29989  0045A6  6F67               	movwf	(??_krnd+3)& (0+255),b
 29990  0045A8  0102               	movlb	2	; () banked
 29991  0045AA  5140               	movf	_c& (0+255),w,b
 29992  0045AC  0100               	movlb	0	; () banked
 29993  0045AE  2564               	addwf	??_krnd& (0+255),w,b
 29994  0045B0  6F68               	movwf	krnd@t& (0+255),b
 29995  0045B2  0102               	movlb	2	; () banked
 29996  0045B4  5141               	movf	(_c+1)& (0+255),w,b
 29997  0045B6  0100               	movlb	0	; () banked
 29998  0045B8  2165               	addwfc	(??_krnd+1)& (0+255),w,b
 29999  0045BA  6F69               	movwf	(krnd@t+1)& (0+255),b
 30000  0045BC  0102               	movlb	2	; () banked
 30001  0045BE  5142               	movf	(_c+2)& (0+255),w,b
 30002  0045C0  0100               	movlb	0	; () banked
 30003  0045C2  2166               	addwfc	(??_krnd+2)& (0+255),w,b
 30004  0045C4  6F6A               	movwf	(krnd@t+2)& (0+255),b
 30005  0045C6  0102               	movlb	2	; () banked
 30006  0045C8  5143               	movf	(_c+3)& (0+255),w,b
 30007  0045CA  0100               	movlb	0	; () banked
 30008  0045CC  2167               	addwfc	(??_krnd+3)& (0+255),w,b
 30009  0045CE  6F6B               	movwf	(krnd@t+3)& (0+255),b
 30010                           
 30011                           ; BSR set to: 0
 30012  0045D0  C2DD  F2E5         	movff	_w,_z
 30013  0045D4  C2DE  F2E6         	movff	_w+1,_z+1
 30014  0045D8  C2DF  F2E7         	movff	_w+2,_z+2
 30015  0045DC  C2E0  F2E8         	movff	_w+3,_z+3
 30016  0045E0  0E01               	movlw	1
 30017  0045E2  AF6B               	btfss	(krnd@t+3)& (0+255),7,b
 30018  0045E4  0E00               	movlw	0
 30019  0045E6  0102               	movlb	2	; () banked
 30020  0045E8  6F40               	movwf	_c& (0+255),b
 30021  0045EA  6B41               	clrf	(_c+1)& (0+255),b
 30022  0045EC  6B42               	clrf	(_c+2)& (0+255),b
 30023  0045EE  6B43               	clrf	(_c+3)& (0+255),b
 30024  0045F0  0E3A               	movlw	58
 30025  0045F2  0100               	movlb	0	; () banked
 30026  0045F4  1568               	andwf	krnd@t& (0+255),w,b
 30027  0045F6  0102               	movlb	2	; () banked
 30028  0045F8  6FDD               	movwf	_w& (0+255),b
 30029  0045FA  0E37               	movlw	55
 30030  0045FC  0100               	movlb	0	; () banked
 30031  0045FE  1569               	andwf	(krnd@t+1)& (0+255),w,b
 30032  004600  0102               	movlb	2	; () banked
 30033  004602  6FDE               	movwf	(_w+1)& (0+255),b
 30034  004604  0EDE               	movlw	222
 30035  004606  0100               	movlb	0	; () banked
 30036  004608  156A               	andwf	(krnd@t+2)& (0+255),w,b
 30037  00460A  0102               	movlb	2	; () banked
 30038  00460C  6FDF               	movwf	(_w+2)& (0+255),b
 30039  00460E  0E54               	movlw	84
 30040  004610  0100               	movlb	0	; () banked
 30041  004612  156B               	andwf	(krnd@t+3)& (0+255),w,b
 30042  004614  0102               	movlb	2	; () banked
 30043  004616  6FE0               	movwf	(_w+3)& (0+255),b
 30044                           
 30045                           ;krnd.c: 24: x += 1832334820;
 30046  004618  0EE4               	movlw	228
 30047  00461A  27E1               	addwf	_x& (0+255),f,b
 30048  00461C  0E35               	movlw	53
 30049  00461E  23E2               	addwfc	(_x+1)& (0+255),f,b
 30050  004620  0E37               	movlw	55
 30051  004622  23E3               	addwfc	(_x+2)& (0+255),f,b
 30052  004624  0E6D               	movlw	109
 30053  004626  23E4               	addwfc	(_x+3)& (0+255),f,b
 30054                           
 30055                           ;krnd.c: 26: return x + y + w;
 30056  004628  5055               	movf	_y,w,c
 30057  00462A  25E1               	addwf	_x& (0+255),w,b
 30058  00462C  0100               	movlb	0	; () banked
 30059  00462E  6F64               	movwf	??_krnd& (0+255),b
 30060  004630  5056               	movf	_y+1,w,c
 30061  004632  0102               	movlb	2	; () banked
 30062  004634  21E2               	addwfc	(_x+1)& (0+255),w,b
 30063  004636  0100               	movlb	0	; () banked
 30064  004638  6F65               	movwf	(??_krnd+1)& (0+255),b
 30065  00463A  5057               	movf	_y+2,w,c
 30066  00463C  0102               	movlb	2	; () banked
 30067  00463E  21E3               	addwfc	(_x+2)& (0+255),w,b
 30068  004640  0100               	movlb	0	; () banked
 30069  004642  6F66               	movwf	(??_krnd+2)& (0+255),b
 30070  004644  5058               	movf	_y+3,w,c
 30071  004646  0102               	movlb	2	; () banked
 30072  004648  21E4               	addwfc	(_x+3)& (0+255),w,b
 30073  00464A  0100               	movlb	0	; () banked
 30074  00464C  6F67               	movwf	(??_krnd+3)& (0+255),b
 30075  00464E  0102               	movlb	2	; () banked
 30076  004650  51DD               	movf	_w& (0+255),w,b
 30077  004652  0100               	movlb	0	; () banked
 30078  004654  2564               	addwf	??_krnd& (0+255),w,b
 30079  004656  6F60               	movwf	?_krnd& (0+255),b
 30080  004658  0102               	movlb	2	; () banked
 30081  00465A  51DE               	movf	(_w+1)& (0+255),w,b
 30082  00465C  0100               	movlb	0	; () banked
 30083  00465E  2165               	addwfc	(??_krnd+1)& (0+255),w,b
 30084  004660  6F61               	movwf	(?_krnd+1)& (0+255),b
 30085  004662  0102               	movlb	2	; () banked
 30086  004664  51DF               	movf	(_w+2)& (0+255),w,b
 30087  004666  0100               	movlb	0	; () banked
 30088  004668  2166               	addwfc	(??_krnd+2)& (0+255),w,b
 30089  00466A  6F62               	movwf	(?_krnd+2)& (0+255),b
 30090  00466C  0102               	movlb	2	; () banked
 30091  00466E  51E0               	movf	(_w+3)& (0+255),w,b
 30092  004670  0100               	movlb	0	; () banked
 30093  004672  2167               	addwfc	(??_krnd+3)& (0+255),w,b
 30094  004674  6F63               	movwf	(?_krnd+3)& (0+255),b
 30095                           
 30096                           ; BSR set to: 0
 30097  004676  0012               	return		;funcret
 30098  004678                     __end_of_krnd:
 30099                           	opt stack 0
 30100                           tblptru	equ	0xFF8
 30101                           tblptrh	equ	0xFF7
 30102                           tblptrl	equ	0xFF6
 30103                           tablat	equ	0xFF5
 30104                           prodh	equ	0xFF4
 30105                           prodl	equ	0xFF3
 30106                           intcon	equ	0xFF2
 30107                           postinc0	equ	0xFEE
 30108                           plusw0	equ	0xFEB
 30109                           fsr0h	equ	0xFEA
 30110                           fsr0l	equ	0xFE9
 30111                           wreg	equ	0xFE8
 30112                           indf1	equ	0xFE7
 30113                           postinc1	equ	0xFE6
 30114                           postdec1	equ	0xFE5
 30115                           plusw1	equ	0xFE3
 30116                           fsr1h	equ	0xFE2
 30117                           fsr1l	equ	0xFE1
 30118                           indf2	equ	0xFDF
 30119                           postinc2	equ	0xFDE
 30120                           postdec2	equ	0xFDD
 30121                           plusw2	equ	0xFDB
 30122                           fsr2h	equ	0xFDA
 30123                           fsr2l	equ	0xFD9
 30124                           status	equ	0xFD8
 30125                           
 30126 ;; *************** function ___llmod *****************
 30127 ;; Defined at:
 30128 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 30129 ;; Parameters:    Size  Location     Type
 30130 ;;  dividend        4   12[BANK0 ] unsigned long 
 30131 ;;  divisor         4   16[BANK0 ] unsigned long 
 30132 ;; Auto vars:     Size  Location     Type
 30133 ;;  counter         1   20[BANK0 ] unsigned char 
 30134 ;; Return value:  Size  Location     Type
 30135 ;;                  4   12[BANK0 ] unsigned long 
 30136 ;; Registers used:
 30137 ;;		wreg, status,2, status,0
 30138 ;; Tracked objects:
 30139 ;;		On entry : F/0
 30140 ;;		On exit  : F/0
 30141 ;;		Unchanged: 0/0
 30142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30143 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30146 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30147 ;;Total ram usage:        9 bytes
 30148 ;; Hardware stack levels used:    1
 30149 ;; Hardware stack levels required when called:    4
 30150 ;; This function calls:
 30151 ;;		Nothing
 30152 ;; This function is called by:
 30153 ;;		_netChooseAdvertiseTime
 30154 ;; This function uses a non-reentrant model
 30155 ;;
 30156                           
 30157                           	psect	text136
 30158  006D2A                     __ptext136:
 30159                           	opt stack 0
 30160  006D2A                     ___llmod:
 30161                           	opt stack 19
 30162                           
 30163                           ; BSR set to: 0
 30164                           
 30165                           ; BSR set to: 0
 30166                           ;incstack = 0
 30167  006D2A  5170               	movf	___llmod@divisor& (0+255),w,b
 30168  006D2C  1171               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 30169  006D2E  1172               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 30170  006D30  1173               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 30171  006D32  E023               	bz	l2566
 30172                           
 30173                           ; BSR set to: 0
 30174  006D34  0E01               	movlw	1
 30175  006D36  6F74               	movwf	___llmod@counter& (0+255),b
 30176  006D38  D006               	goto	l12053
 30177  006D3A                     l12051:
 30178                           
 30179                           ; BSR set to: 0
 30180  006D3A  90D8               	bcf	status,0,c
 30181  006D3C  3770               	rlcf	___llmod@divisor& (0+255),f,b
 30182  006D3E  3771               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30183  006D40  3772               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30184  006D42  3773               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30185  006D44  2B74               	incf	___llmod@counter& (0+255),f,b
 30186  006D46                     l12053:
 30187                           
 30188                           ; BSR set to: 0
 30189  006D46  AF73               	btfss	(___llmod@divisor+3)& (0+255),7,b
 30190  006D48  D7F8               	goto	l12051
 30191  006D4A                     l12055:
 30192                           
 30193                           ; BSR set to: 0
 30194  006D4A  5170               	movf	___llmod@divisor& (0+255),w,b
 30195  006D4C  5D6C               	subwf	___llmod@dividend& (0+255),w,b
 30196  006D4E  5171               	movf	(___llmod@divisor+1)& (0+255),w,b
 30197  006D50  596D               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30198  006D52  5172               	movf	(___llmod@divisor+2)& (0+255),w,b
 30199  006D54  596E               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30200  006D56  5173               	movf	(___llmod@divisor+3)& (0+255),w,b
 30201  006D58  596F               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30202  006D5A  E308               	bnc	l12059
 30203                           
 30204                           ; BSR set to: 0
 30205  006D5C  5170               	movf	___llmod@divisor& (0+255),w,b
 30206  006D5E  5F6C               	subwf	___llmod@dividend& (0+255),f,b
 30207  006D60  5171               	movf	(___llmod@divisor+1)& (0+255),w,b
 30208  006D62  5B6D               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30209  006D64  5172               	movf	(___llmod@divisor+2)& (0+255),w,b
 30210  006D66  5B6E               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30211  006D68  5173               	movf	(___llmod@divisor+3)& (0+255),w,b
 30212  006D6A  5B6F               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30213  006D6C                     l12059:
 30214                           
 30215                           ; BSR set to: 0
 30216  006D6C  90D8               	bcf	status,0,c
 30217  006D6E  3373               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30218  006D70  3372               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30219  006D72  3371               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30220  006D74  3370               	rrcf	___llmod@divisor& (0+255),f,b
 30221                           
 30222                           ; BSR set to: 0
 30223  006D76  2F74               	decfsz	___llmod@counter& (0+255),f,b
 30224  006D78  D7E8               	goto	l12055
 30225  006D7A                     l2566:
 30226                           
 30227                           ; BSR set to: 0
 30228  006D7A  C06C  F06C         	movff	___llmod@dividend,?___llmod
 30229  006D7E  C06D  F06D         	movff	___llmod@dividend+1,?___llmod+1
 30230  006D82  C06E  F06E         	movff	___llmod@dividend+2,?___llmod+2
 30231  006D86  C06F  F06F         	movff	___llmod@dividend+3,?___llmod+3
 30232                           
 30233                           ; BSR set to: 0
 30234  006D8A  0012               	return		;funcret
 30235  006D8C                     __end_of___llmod:
 30236                           	opt stack 0
 30237                           tblptru	equ	0xFF8
 30238                           tblptrh	equ	0xFF7
 30239                           tblptrl	equ	0xFF6
 30240                           tablat	equ	0xFF5
 30241                           prodh	equ	0xFF4
 30242                           prodl	equ	0xFF3
 30243                           intcon	equ	0xFF2
 30244                           postinc0	equ	0xFEE
 30245                           plusw0	equ	0xFEB
 30246                           fsr0h	equ	0xFEA
 30247                           fsr0l	equ	0xFE9
 30248                           wreg	equ	0xFE8
 30249                           indf1	equ	0xFE7
 30250                           postinc1	equ	0xFE6
 30251                           postdec1	equ	0xFE5
 30252                           plusw1	equ	0xFE3
 30253                           fsr1h	equ	0xFE2
 30254                           fsr1l	equ	0xFE1
 30255                           indf2	equ	0xFDF
 30256                           postinc2	equ	0xFDE
 30257                           postdec2	equ	0xFDD
 30258                           plusw2	equ	0xFDB
 30259                           fsr2h	equ	0xFDA
 30260                           fsr2l	equ	0xFD9
 30261                           status	equ	0xFD8
 30262                           
 30263 ;; *************** function _MSTickGet *****************
 30264 ;; Defined at:
 30265 ;;		line 71 in file "../TimeTick.c"
 30266 ;; Parameters:    Size  Location     Type
 30267 ;;		None
 30268 ;; Auto vars:     Size  Location     Type
 30269 ;;  tNow            8   20[BANK0 ] struct TickMS_t_def
 30270 ;; Return value:  Size  Location     Type
 30271 ;;                  8   12[BANK0 ] struct TickMS_t_def
 30272 ;; Registers used:
 30273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30274 ;; Tracked objects:
 30275 ;;		On entry : 0/0
 30276 ;;		On exit  : F/0
 30277 ;;		Unchanged: 0/0
 30278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30279 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30280 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30282 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;Total ram usage:       16 bytes
 30284 ;; Hardware stack levels used:    1
 30285 ;; Hardware stack levels required when called:    6
 30286 ;; This function calls:
 30287 ;;		_TimerEnterCritical
 30288 ;;		_TimerExitCritical
 30289 ;;		_memcpy
 30290 ;; This function is called by:
 30291 ;;		_RouteManagerInit
 30292 ;;		_RouteManagerTask
 30293 ;;		_BeaconManagerTask
 30294 ;;		_netChooseAdvertiseTime
 30295 ;;		_BroadcastManagerTask
 30296 ;;		_BroadcastManagerDelaySend
 30297 ;;		_TunnelManagerSetTunnel
 30298 ;;		_isKnownPacket
 30299 ;;		_TransportManagerTask
 30300 ;;		_NetworkManagerTask
 30301 ;;		_IsNetworkDevice
 30302 ;;		_MSTickGetDiffNow
 30303 ;; This function uses a non-reentrant model
 30304 ;;
 30305                           
 30306                           	psect	text137
 30307  0076E0                     __ptext137:
 30308                           	opt stack 0
 30309  0076E0                     _MSTickGet:
 30310                           	opt stack 18
 30311                           
 30312                           ;TimeTick.c: 73: TickMS tNow;
 30313                           ;TimeTick.c: 74: TimerEnterCritical();
 30314                           
 30315                           ; BSR set to: 0
 30316                           ;incstack = 0
 30317  0076E0  EC52  F03E         	call	_TimerEnterCritical	;wreg free
 30318                           
 30319                           ;TimeTick.c: 75: memcpy(&tNow,&Tick_MS,sizeof(Tick_MS));
 30320  0076E4  0E74               	movlw	low MSTickGet@tNow
 30321  0076E6  0100               	movlb	0	; () banked
 30322  0076E8  6F62               	movwf	memcpy@d1& (0+255),b
 30323  0076EA  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 30324  0076EC  0EB5               	movlw	low _Tick_MS
 30325  0076EE  6F64               	movwf	memcpy@s1& (0+255),b
 30326  0076F0  0E02               	movlw	high _Tick_MS
 30327  0076F2  6F65               	movwf	(memcpy@s1+1)& (0+255),b
 30328  0076F4  6B67               	clrf	(memcpy@n+1)& (0+255),b
 30329  0076F6  0E08               	movlw	8
 30330  0076F8  6F66               	movwf	memcpy@n& (0+255),b
 30331  0076FA  ECFA  F03A         	call	_memcpy	;wreg free
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;TimeTick.c: 76: TimerExitCritical();
 30335  0076FE  EC4E  F03E         	call	_TimerExitCritical	;wreg free
 30336                           
 30337                           ; BSR set to: 0
 30338                           ;TimeTick.c: 77: return(tNow);
 30339  007702  EE20  F074         	lfsr	2,MSTickGet@tNow
 30340  007706  EE00  F06C         	lfsr	0,?_MSTickGet
 30341  00770A  0E07               	movlw	7
 30342  00770C                     u16821:
 30343  00770C  CFDB FFEB          	movff	plusw2,plusw0
 30344  007710  06E8               	decf	wreg,f,c
 30345  007712  E2FC               	bc	u16821
 30346                           
 30347                           ; BSR set to: 0
 30348  007714  0012               	return		;funcret
 30349  007716                     __end_of_MSTickGet:
 30350                           	opt stack 0
 30351                           tblptru	equ	0xFF8
 30352                           tblptrh	equ	0xFF7
 30353                           tblptrl	equ	0xFF6
 30354                           tablat	equ	0xFF5
 30355                           prodh	equ	0xFF4
 30356                           prodl	equ	0xFF3
 30357                           intcon	equ	0xFF2
 30358                           postinc0	equ	0xFEE
 30359                           plusw0	equ	0xFEB
 30360                           fsr0h	equ	0xFEA
 30361                           fsr0l	equ	0xFE9
 30362                           wreg	equ	0xFE8
 30363                           indf1	equ	0xFE7
 30364                           postinc1	equ	0xFE6
 30365                           postdec1	equ	0xFE5
 30366                           plusw1	equ	0xFE3
 30367                           fsr1h	equ	0xFE2
 30368                           fsr1l	equ	0xFE1
 30369                           indf2	equ	0xFDF
 30370                           postinc2	equ	0xFDE
 30371                           postdec2	equ	0xFDD
 30372                           plusw2	equ	0xFDB
 30373                           fsr2h	equ	0xFDA
 30374                           fsr2l	equ	0xFD9
 30375                           status	equ	0xFD8
 30376                           
 30377 ;; *************** function _TimerExitCritical *****************
 30378 ;; Defined at:
 30379 ;;		line 157 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 30380 ;; Parameters:    Size  Location     Type
 30381 ;;		None
 30382 ;; Auto vars:     Size  Location     Type
 30383 ;;		None
 30384 ;; Return value:  Size  Location     Type
 30385 ;;                  1    wreg      void 
 30386 ;; Registers used:
 30387 ;;		cstack
 30388 ;; Tracked objects:
 30389 ;;		On entry : F/0
 30390 ;;		On exit  : F/0
 30391 ;;		Unchanged: F/0
 30392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;Total ram usage:        0 bytes
 30398 ;; Hardware stack levels used:    1
 30399 ;; Hardware stack levels required when called:    5
 30400 ;; This function calls:
 30401 ;;		_TimerEnable
 30402 ;; This function is called by:
 30403 ;;		_MSTickGet
 30404 ;; This function uses a non-reentrant model
 30405 ;;
 30406                           
 30407                           	psect	text138
 30408  007C9C                     __ptext138:
 30409                           	opt stack 0
 30410  007C9C                     _TimerExitCritical:
 30411                           	opt stack 18
 30412                           
 30413                           ; BSR set to: 0
 30414                           ;symbol.c: 159: TimerEnable();
 30415                           
 30416                           ; BSR set to: 0
 30417                           ;incstack = 0
 30418  007C9C  EF50  F03E         	goto	_TimerEnable	;wreg free
 30419  007CA0                     __end_of_TimerExitCritical:
 30420                           	opt stack 0
 30421                           tblptru	equ	0xFF8
 30422                           tblptrh	equ	0xFF7
 30423                           tblptrl	equ	0xFF6
 30424                           tablat	equ	0xFF5
 30425                           prodh	equ	0xFF4
 30426                           prodl	equ	0xFF3
 30427                           intcon	equ	0xFF2
 30428                           postinc0	equ	0xFEE
 30429                           plusw0	equ	0xFEB
 30430                           fsr0h	equ	0xFEA
 30431                           fsr0l	equ	0xFE9
 30432                           wreg	equ	0xFE8
 30433                           indf1	equ	0xFE7
 30434                           postinc1	equ	0xFE6
 30435                           postdec1	equ	0xFE5
 30436                           plusw1	equ	0xFE3
 30437                           fsr1h	equ	0xFE2
 30438                           fsr1l	equ	0xFE1
 30439                           indf2	equ	0xFDF
 30440                           postinc2	equ	0xFDE
 30441                           postdec2	equ	0xFDD
 30442                           plusw2	equ	0xFDB
 30443                           fsr2h	equ	0xFDA
 30444                           fsr2l	equ	0xFD9
 30445                           status	equ	0xFD8
 30446                           
 30447 ;; *************** function _TimerEnable *****************
 30448 ;; Defined at:
 30449 ;;		line 147 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 30450 ;; Parameters:    Size  Location     Type
 30451 ;;		None
 30452 ;; Auto vars:     Size  Location     Type
 30453 ;;		None
 30454 ;; Return value:  Size  Location     Type
 30455 ;;                  1    wreg      void 
 30456 ;; Registers used:
 30457 ;;		None
 30458 ;; Tracked objects:
 30459 ;;		On entry : F/0
 30460 ;;		On exit  : F/0
 30461 ;;		Unchanged: F/0
 30462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30467 ;;Total ram usage:        0 bytes
 30468 ;; Hardware stack levels used:    1
 30469 ;; Hardware stack levels required when called:    4
 30470 ;; This function calls:
 30471 ;;		Nothing
 30472 ;; This function is called by:
 30473 ;;		_TimerExitCritical
 30474 ;; This function uses a non-reentrant model
 30475 ;;
 30476                           
 30477                           	psect	text139
 30478  007CA0                     __ptext139:
 30479                           	opt stack 0
 30480  007CA0                     _TimerEnable:
 30481                           	opt stack 18
 30482                           
 30483                           ; BSR set to: 0
 30484                           ;symbol.c: 149: INTCONbits.TMR0IE=1;
 30485                           
 30486                           ; BSR set to: 0
 30487                           ;incstack = 0
 30488  007CA0  8AF2               	bsf	intcon,5,c	;volatile
 30489                           
 30490                           ; BSR set to: 0
 30491  007CA2  0012               	return		;funcret
 30492  007CA4                     __end_of_TimerEnable:
 30493                           	opt stack 0
 30494                           tblptru	equ	0xFF8
 30495                           tblptrh	equ	0xFF7
 30496                           tblptrl	equ	0xFF6
 30497                           tablat	equ	0xFF5
 30498                           prodh	equ	0xFF4
 30499                           prodl	equ	0xFF3
 30500                           intcon	equ	0xFF2
 30501                           postinc0	equ	0xFEE
 30502                           plusw0	equ	0xFEB
 30503                           fsr0h	equ	0xFEA
 30504                           fsr0l	equ	0xFE9
 30505                           wreg	equ	0xFE8
 30506                           indf1	equ	0xFE7
 30507                           postinc1	equ	0xFE6
 30508                           postdec1	equ	0xFE5
 30509                           plusw1	equ	0xFE3
 30510                           fsr1h	equ	0xFE2
 30511                           fsr1l	equ	0xFE1
 30512                           indf2	equ	0xFDF
 30513                           postinc2	equ	0xFDE
 30514                           postdec2	equ	0xFDD
 30515                           plusw2	equ	0xFDB
 30516                           fsr2h	equ	0xFDA
 30517                           fsr2l	equ	0xFD9
 30518                           status	equ	0xFD8
 30519                           
 30520 ;; *************** function _TimerEnterCritical *****************
 30521 ;; Defined at:
 30522 ;;		line 152 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 30523 ;; Parameters:    Size  Location     Type
 30524 ;;		None
 30525 ;; Auto vars:     Size  Location     Type
 30526 ;;		None
 30527 ;; Return value:  Size  Location     Type
 30528 ;;                  1    wreg      void 
 30529 ;; Registers used:
 30530 ;;		cstack
 30531 ;; Tracked objects:
 30532 ;;		On entry : 0/0
 30533 ;;		On exit  : 0/0
 30534 ;;		Unchanged: 0/0
 30535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30540 ;;Total ram usage:        0 bytes
 30541 ;; Hardware stack levels used:    1
 30542 ;; Hardware stack levels required when called:    5
 30543 ;; This function calls:
 30544 ;;		_TimerDisable
 30545 ;; This function is called by:
 30546 ;;		_MSTickGet
 30547 ;; This function uses a non-reentrant model
 30548 ;;
 30549                           
 30550                           	psect	text140
 30551  007CA4                     __ptext140:
 30552                           	opt stack 0
 30553  007CA4                     _TimerEnterCritical:
 30554                           	opt stack 18
 30555                           
 30556                           ;symbol.c: 154: TimerDisable();
 30557                           
 30558                           ; BSR set to: 0
 30559                           ;incstack = 0
 30560  007CA4  EF54  F03E         	goto	_TimerDisable	;wreg free
 30561  007CA8                     __end_of_TimerEnterCritical:
 30562                           	opt stack 0
 30563                           tblptru	equ	0xFF8
 30564                           tblptrh	equ	0xFF7
 30565                           tblptrl	equ	0xFF6
 30566                           tablat	equ	0xFF5
 30567                           prodh	equ	0xFF4
 30568                           prodl	equ	0xFF3
 30569                           intcon	equ	0xFF2
 30570                           postinc0	equ	0xFEE
 30571                           plusw0	equ	0xFEB
 30572                           fsr0h	equ	0xFEA
 30573                           fsr0l	equ	0xFE9
 30574                           wreg	equ	0xFE8
 30575                           indf1	equ	0xFE7
 30576                           postinc1	equ	0xFE6
 30577                           postdec1	equ	0xFE5
 30578                           plusw1	equ	0xFE3
 30579                           fsr1h	equ	0xFE2
 30580                           fsr1l	equ	0xFE1
 30581                           indf2	equ	0xFDF
 30582                           postinc2	equ	0xFDE
 30583                           postdec2	equ	0xFDD
 30584                           plusw2	equ	0xFDB
 30585                           fsr2h	equ	0xFDA
 30586                           fsr2l	equ	0xFD9
 30587                           status	equ	0xFD8
 30588                           
 30589 ;; *************** function _TimerDisable *****************
 30590 ;; Defined at:
 30591 ;;		line 143 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 30592 ;; Parameters:    Size  Location     Type
 30593 ;;		None
 30594 ;; Auto vars:     Size  Location     Type
 30595 ;;		None
 30596 ;; Return value:  Size  Location     Type
 30597 ;;                  1    wreg      void 
 30598 ;; Registers used:
 30599 ;;		None
 30600 ;; Tracked objects:
 30601 ;;		On entry : 0/0
 30602 ;;		On exit  : 0/0
 30603 ;;		Unchanged: 0/0
 30604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30609 ;;Total ram usage:        0 bytes
 30610 ;; Hardware stack levels used:    1
 30611 ;; Hardware stack levels required when called:    4
 30612 ;; This function calls:
 30613 ;;		Nothing
 30614 ;; This function is called by:
 30615 ;;		_TimerEnterCritical
 30616 ;; This function uses a non-reentrant model
 30617 ;;
 30618                           
 30619                           	psect	text141
 30620  007CA8                     __ptext141:
 30621                           	opt stack 0
 30622  007CA8                     _TimerDisable:
 30623                           	opt stack 18
 30624                           
 30625                           ;symbol.c: 145: INTCONbits.TMR0IE=0;
 30626                           
 30627                           ;incstack = 0
 30628  007CA8  9AF2               	bcf	intcon,5,c	;volatile
 30629  007CAA  0012               	return		;funcret
 30630  007CAC                     __end_of_TimerDisable:
 30631                           	opt stack 0
 30632                           tblptru	equ	0xFF8
 30633                           tblptrh	equ	0xFF7
 30634                           tblptrl	equ	0xFF6
 30635                           tablat	equ	0xFF5
 30636                           prodh	equ	0xFF4
 30637                           prodl	equ	0xFF3
 30638                           intcon	equ	0xFF2
 30639                           postinc0	equ	0xFEE
 30640                           plusw0	equ	0xFEB
 30641                           fsr0h	equ	0xFEA
 30642                           fsr0l	equ	0xFE9
 30643                           wreg	equ	0xFE8
 30644                           indf1	equ	0xFE7
 30645                           postinc1	equ	0xFE6
 30646                           postdec1	equ	0xFE5
 30647                           plusw1	equ	0xFE3
 30648                           fsr1h	equ	0xFE2
 30649                           fsr1l	equ	0xFE1
 30650                           indf2	equ	0xFDF
 30651                           postinc2	equ	0xFDE
 30652                           postdec2	equ	0xFDD
 30653                           plusw2	equ	0xFDB
 30654                           fsr2h	equ	0xFDA
 30655                           fsr2l	equ	0xFD9
 30656                           status	equ	0xFD8
 30657                           
 30658 ;; *************** function _MiApp_SetChannel *****************
 30659 ;; Defined at:
 30660 ;;		line 168 in file "../src/Bridge.c"
 30661 ;; Parameters:    Size  Location     Type
 30662 ;;  Channel         1    wreg     unsigned char 
 30663 ;; Auto vars:     Size  Location     Type
 30664 ;;  Channel         1   10[BANK0 ] unsigned char 
 30665 ;;  res             1    0        unsigned char 
 30666 ;; Return value:  Size  Location     Type
 30667 ;;                  1    wreg      unsigned char 
 30668 ;; Registers used:
 30669 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30670 ;; Tracked objects:
 30671 ;;		On entry : E/1
 30672 ;;		On exit  : 0/0
 30673 ;;		Unchanged: 0/0
 30674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30678 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30679 ;;Total ram usage:        2 bytes
 30680 ;; Hardware stack levels used:    1
 30681 ;; Hardware stack levels required when called:    7
 30682 ;; This function calls:
 30683 ;;		_MiMAC_SetChannel
 30684 ;; This function is called by:
 30685 ;;		_MiApp_EstablishConnection
 30686 ;;		_MiApp_SearchConnection
 30687 ;; This function uses a non-reentrant model
 30688 ;;
 30689                           
 30690                           	psect	text142
 30691  007C06                     __ptext142:
 30692                           	opt stack 0
 30693  007C06                     _MiApp_SetChannel:
 30694                           	opt stack 22
 30695                           
 30696                           ;incstack = 0
 30697                           ;MiApp_SetChannel@Channel stored from wreg
 30698  007C06  0100               	movlb	0	; () banked
 30699  007C08  6F6A               	movwf	MiApp_SetChannel@Channel& (0+255),b
 30700  007C0A  6B68               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
 30701  007C0C  516A               	movf	MiApp_SetChannel@Channel& (0+255),w,b
 30702  007C0E  EF15  F03A         	goto	_MiMAC_SetChannel
 30703  007C12                     __end_of_MiApp_SetChannel:
 30704                           	opt stack 0
 30705                           tblptru	equ	0xFF8
 30706                           tblptrh	equ	0xFF7
 30707                           tblptrl	equ	0xFF6
 30708                           tablat	equ	0xFF5
 30709                           prodh	equ	0xFF4
 30710                           prodl	equ	0xFF3
 30711                           intcon	equ	0xFF2
 30712                           postinc0	equ	0xFEE
 30713                           plusw0	equ	0xFEB
 30714                           fsr0h	equ	0xFEA
 30715                           fsr0l	equ	0xFE9
 30716                           wreg	equ	0xFE8
 30717                           indf1	equ	0xFE7
 30718                           postinc1	equ	0xFE6
 30719                           postdec1	equ	0xFE5
 30720                           plusw1	equ	0xFE3
 30721                           fsr1h	equ	0xFE2
 30722                           fsr1l	equ	0xFE1
 30723                           indf2	equ	0xFDF
 30724                           postinc2	equ	0xFDE
 30725                           postdec2	equ	0xFDD
 30726                           plusw2	equ	0xFDB
 30727                           fsr2h	equ	0xFDA
 30728                           fsr2l	equ	0xFD9
 30729                           status	equ	0xFD8
 30730                           
 30731 ;; *************** function _MiMAC_SetChannel *****************
 30732 ;; Defined at:
 30733 ;;		line 1378 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 30734 ;; Parameters:    Size  Location     Type
 30735 ;;  channel         1    wreg     unsigned char 
 30736 ;;  offsetFreq      1    8[BANK0 ] unsigned char 
 30737 ;; Auto vars:     Size  Location     Type
 30738 ;;  channel         1    9[BANK0 ] unsigned char 
 30739 ;; Return value:  Size  Location     Type
 30740 ;;                  1    wreg      unsigned char 
 30741 ;; Registers used:
 30742 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30743 ;; Tracked objects:
 30744 ;;		On entry : F/0
 30745 ;;		On exit  : 0/0
 30746 ;;		Unchanged: 0/0
 30747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30748 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30752 ;;Total ram usage:        2 bytes
 30753 ;; Hardware stack levels used:    1
 30754 ;; Hardware stack levels required when called:    6
 30755 ;; This function calls:
 30756 ;;		_PHYSetLongRAMAddr
 30757 ;;		_PHYSetShortRAMAddr
 30758 ;; This function is called by:
 30759 ;;		_MiApp_SetChannel
 30760 ;;		_InitMRF24J40
 30761 ;; This function uses a non-reentrant model
 30762 ;;
 30763                           
 30764                           	psect	text143
 30765  00742A                     __ptext143:
 30766                           	opt stack 0
 30767  00742A                     _MiMAC_SetChannel:
 30768                           	opt stack 16
 30769                           
 30770                           ;incstack = 0
 30771                           ;MiMAC_SetChannel@channel stored from wreg
 30772  00742A  6F69               	movwf	MiMAC_SetChannel@channel& (0+255),b
 30773                           
 30774                           ;drv_mrf_miwi_mesh_24j40.c: 1380: if( channel < 11 || channel > 26)
 30775  00742C  0E0A               	movlw	10
 30776  00742E  0100               	movlb	0	; () banked
 30777  007430  6569               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 30778  007432  0C00               	retlw	0
 30779                           
 30780                           ; BSR set to: 0
 30781  007434  0E1A               	movlw	26
 30782  007436  6569               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 30783  007438  D001               	goto	l888
 30784  00743A  0C00               	retlw	0
 30785  00743C                     l888:
 30786                           
 30787                           ; BSR set to: 0
 30788                           ;drv_mrf_miwi_mesh_24j40.c: 1383: }
 30789                           ;drv_mrf_miwi_mesh_24j40.c: 1392: MACCurrentChannel = channel;
 30790  00743C  C069  F041         	movff	MiMAC_SetChannel@channel,_MACCurrentChannel
 30791                           
 30792                           ; BSR set to: 0
 30793                           ;drv_mrf_miwi_mesh_24j40.c: 1393: PHYSetLongRAMAddr((0x200),((channel-11)<<4)|0x03);
 30794  007440  0E02               	movlw	2
 30795  007442  6F63               	movwf	(PHYSetLongRAMAddr@address+1)& (0+255),b
 30796  007444  6B62               	clrf	PHYSetLongRAMAddr@address& (0+255),b
 30797  007446  5169               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 30798  007448  0D10               	mullw	16
 30799  00744A  50F3               	movf	prodl,w,c
 30800  00744C  0F50               	addlw	80
 30801  00744E  0903               	iorlw	3
 30802  007450  6F64               	movwf	PHYSetLongRAMAddr@value& (0+255),b
 30803  007452  EC66  F038         	call	_PHYSetLongRAMAddr	;wreg free
 30804                           
 30805                           ;drv_mrf_miwi_mesh_24j40.c: 1394: PHYSetShortRAMAddr((0x6D),0x04);
 30806  007456  0E04               	movlw	4
 30807  007458  0100               	movlb	0	; () banked
 30808  00745A  6F62               	movwf	PHYSetShortRAMAddr@value& (0+255),b
 30809  00745C  0E6D               	movlw	109
 30810  00745E  EC34  F03C         	call	_PHYSetShortRAMAddr
 30811                           
 30812                           ;drv_mrf_miwi_mesh_24j40.c: 1395: PHYSetShortRAMAddr((0x6D),0x00);
 30813  007462  0100               	movlb	0	; () banked
 30814  007464  6B62               	clrf	PHYSetShortRAMAddr@value& (0+255),b
 30815  007466  0E6D               	movlw	109
 30816  007468  EC34  F03C         	call	_PHYSetShortRAMAddr
 30817                           
 30818                           ;drv_mrf_miwi_mesh_24j40.c: 1396: return 1;
 30819  00746C  0C01               	retlw	1	;funcret
 30820  00746E                     __end_of_MiMAC_SetChannel:
 30821                           	opt stack 0
 30822                           tblptru	equ	0xFF8
 30823                           tblptrh	equ	0xFF7
 30824                           tblptrl	equ	0xFF6
 30825                           tablat	equ	0xFF5
 30826                           prodh	equ	0xFF4
 30827                           prodl	equ	0xFF3
 30828                           intcon	equ	0xFF2
 30829                           postinc0	equ	0xFEE
 30830                           plusw0	equ	0xFEB
 30831                           fsr0h	equ	0xFEA
 30832                           fsr0l	equ	0xFE9
 30833                           wreg	equ	0xFE8
 30834                           indf1	equ	0xFE7
 30835                           postinc1	equ	0xFE6
 30836                           postdec1	equ	0xFE5
 30837                           plusw1	equ	0xFE3
 30838                           fsr1h	equ	0xFE2
 30839                           fsr1l	equ	0xFE1
 30840                           indf2	equ	0xFDF
 30841                           postinc2	equ	0xFDE
 30842                           postdec2	equ	0xFDD
 30843                           plusw2	equ	0xFDB
 30844                           fsr2h	equ	0xFDA
 30845                           fsr2l	equ	0xFD9
 30846                           status	equ	0xFD8
 30847                           
 30848 ;; *************** function _PHYSetLongRAMAddr *****************
 30849 ;; Defined at:
 30850 ;;		line 156 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 30851 ;; Parameters:    Size  Location     Type
 30852 ;;  address         2    2[BANK0 ] unsigned int 
 30853 ;;  value           1    4[BANK0 ] unsigned char 
 30854 ;; Auto vars:     Size  Location     Type
 30855 ;;  tmpRFIE         1    7[BANK0 ] volatile unsigned char 
 30856 ;; Return value:  Size  Location     Type
 30857 ;;                  1    wreg      void 
 30858 ;; Registers used:
 30859 ;;		wreg, status,2, status,0, cstack
 30860 ;; Tracked objects:
 30861 ;;		On entry : F/0
 30862 ;;		On exit  : 0/0
 30863 ;;		Unchanged: 0/0
 30864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30868 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30869 ;;Total ram usage:        6 bytes
 30870 ;; Hardware stack levels used:    1
 30871 ;; Hardware stack levels required when called:    5
 30872 ;; This function calls:
 30873 ;;		_SPIPut
 30874 ;; This function is called by:
 30875 ;;		_InitMRF24J40
 30876 ;;		_MiMAC_SendPacket
 30877 ;;		_MiMAC_SetChannel
 30878 ;; This function uses a non-reentrant model
 30879 ;;
 30880                           
 30881                           	psect	text144
 30882  0070CC                     __ptext144:
 30883                           	opt stack 0
 30884  0070CC                     _PHYSetLongRAMAddr:
 30885                           	opt stack 18
 30886                           
 30887                           ; BSR set to: 0
 30888                           ;drv_mrf_miwi_mesh_24j40.c: 158: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 30889                           
 30890                           ;incstack = 0
 30891  0070CC  0E00               	movlw	0
 30892  0070CE  B8F2               	btfsc	intcon,4,c	;volatile
 30893  0070D0  0E01               	movlw	1
 30894  0070D2  6F67               	movwf	PHYSetLongRAMAddr@tmpRFIE& (0+255),b	;volatile
 30895                           
 30896                           ; BSR set to: 0
 30897                           ;drv_mrf_miwi_mesh_24j40.c: 160: INTCONbits.INT0IE = 0;
 30898  0070D4  98F2               	bcf	intcon,4,c	;volatile
 30899                           
 30900                           ; BSR set to: 0
 30901                           ;drv_mrf_miwi_mesh_24j40.c: 161: LATAbits.LATA5 = 0;
 30902  0070D6  9A89               	bcf	3977,5,c	;volatile
 30903                           
 30904                           ; BSR set to: 0
 30905                           ;drv_mrf_miwi_mesh_24j40.c: 162: SPIPut((((uint8_t)(address>>3))&0x7F)|0x80);
 30906  0070D8  C062  F065         	movff	PHYSetLongRAMAddr@address,??_PHYSetLongRAMAddr
 30907  0070DC  C063  F066         	movff	PHYSetLongRAMAddr@address+1,??_PHYSetLongRAMAddr+1
 30908  0070E0  90D8               	bcf	status,0,c
 30909  0070E2  3366               	rrcf	(??_PHYSetLongRAMAddr+1)& (0+255),f,b
 30910  0070E4  3365               	rrcf	??_PHYSetLongRAMAddr& (0+255),f,b
 30911  0070E6  90D8               	bcf	status,0,c
 30912  0070E8  3366               	rrcf	(??_PHYSetLongRAMAddr+1)& (0+255),f,b
 30913  0070EA  3365               	rrcf	??_PHYSetLongRAMAddr& (0+255),f,b
 30914  0070EC  90D8               	bcf	status,0,c
 30915  0070EE  3366               	rrcf	(??_PHYSetLongRAMAddr+1)& (0+255),f,b
 30916  0070F0  3365               	rrcf	??_PHYSetLongRAMAddr& (0+255),f,b
 30917  0070F2  5165               	movf	??_PHYSetLongRAMAddr& (0+255),w,b
 30918  0070F4  0B7F               	andlw	127
 30919  0070F6  0980               	iorlw	128
 30920  0070F8  EC3D  F03D         	call	_SPIPut
 30921                           
 30922                           ;drv_mrf_miwi_mesh_24j40.c: 163: SPIPut((((uint8_t)(address<<5))&0xE0)|0x10);
 30923  0070FC  0100               	movlb	0	; () banked
 30924  0070FE  3962               	swapf	PHYSetLongRAMAddr@address& (0+255),w,b
 30925  007100  46E8               	rlncf	wreg,f,c
 30926  007102  0BE0               	andlw	224
 30927  007104  0910               	iorlw	16
 30928  007106  EC3D  F03D         	call	_SPIPut
 30929                           
 30930                           ;drv_mrf_miwi_mesh_24j40.c: 164: SPIPut(value);
 30931  00710A  0100               	movlb	0	; () banked
 30932  00710C  5164               	movf	PHYSetLongRAMAddr@value& (0+255),w,b
 30933  00710E  EC3D  F03D         	call	_SPIPut
 30934                           
 30935                           ;drv_mrf_miwi_mesh_24j40.c: 165: LATAbits.LATA5 = 1;
 30936  007112  8A89               	bsf	3977,5,c	;volatile
 30937                           
 30938                           ;drv_mrf_miwi_mesh_24j40.c: 166: INTCONbits.INT0IE = tmpRFIE;
 30939  007114  0100               	movlb	0	; () banked
 30940  007116  B167               	btfsc	PHYSetLongRAMAddr@tmpRFIE& (0+255),0,b	;volatile
 30941  007118  D002               	bra	u16185
 30942  00711A  98F2               	bcf	intcon,4,c	;volatile
 30943  00711C  D001               	bra	u16186
 30944  00711E                     u16185:
 30945  00711E  88F2               	bsf	intcon,4,c	;volatile
 30946  007120                     u16186:
 30947  007120  0012               	return		;funcret
 30948  007122                     __end_of_PHYSetLongRAMAddr:
 30949                           	opt stack 0
 30950                           tblptru	equ	0xFF8
 30951                           tblptrh	equ	0xFF7
 30952                           tblptrl	equ	0xFF6
 30953                           tablat	equ	0xFF5
 30954                           prodh	equ	0xFF4
 30955                           prodl	equ	0xFF3
 30956                           intcon	equ	0xFF2
 30957                           postinc0	equ	0xFEE
 30958                           plusw0	equ	0xFEB
 30959                           fsr0h	equ	0xFEA
 30960                           fsr0l	equ	0xFE9
 30961                           wreg	equ	0xFE8
 30962                           indf1	equ	0xFE7
 30963                           postinc1	equ	0xFE6
 30964                           postdec1	equ	0xFE5
 30965                           plusw1	equ	0xFE3
 30966                           fsr1h	equ	0xFE2
 30967                           fsr1l	equ	0xFE1
 30968                           indf2	equ	0xFDF
 30969                           postinc2	equ	0xFDE
 30970                           postdec2	equ	0xFDD
 30971                           plusw2	equ	0xFDB
 30972                           fsr2h	equ	0xFDA
 30973                           fsr2l	equ	0xFD9
 30974                           status	equ	0xFD8
 30975                           
 30976 ;; *************** function _MiApp_SetAddressPan *****************
 30977 ;; Defined at:
 30978 ;;		line 211 in file "../src/Bridge.c"
 30979 ;; Parameters:    Size  Location     Type
 30980 ;;  address         2   22[BANK0 ] PTR unsigned char 
 30981 ;;		 -> MiApp_EstablishConnection@src(8), myLongAddress(8), myAddr(8), 
 30982 ;;  panid           2   24[BANK0 ] unsigned int 
 30983 ;; Auto vars:     Size  Location     Type
 30984 ;;  addr            8   26[BANK0 ] struct addr_t_def
 30985 ;; Return value:  Size  Location     Type
 30986 ;;                  1    wreg      void 
 30987 ;; Registers used:
 30988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30989 ;; Tracked objects:
 30990 ;;		On entry : F/0
 30991 ;;		On exit  : 0/0
 30992 ;;		Unchanged: 0/0
 30993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30995 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30997 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30998 ;;Total ram usage:       12 bytes
 30999 ;; Hardware stack levels used:    1
 31000 ;; Hardware stack levels required when called:    7
 31001 ;; This function calls:
 31002 ;;		_MiMAC_SetAltAddress
 31003 ;;		_NetworkSetAddressPAN
 31004 ;;		_memcpy
 31005 ;; This function is called by:
 31006 ;;		_main
 31007 ;;		_MiApp_ProtocolInit
 31008 ;;		_MiApp_EstablishConnection
 31009 ;; This function uses a non-reentrant model
 31010 ;;
 31011                           
 31012                           	psect	text145
 31013  006BFA                     __ptext145:
 31014                           	opt stack 0
 31015  006BFA                     _MiApp_SetAddressPan:
 31016                           	opt stack 23
 31017                           
 31018                           ; BSR set to: 0
 31019                           ;Bridge.c: 213: addr_t addr;
 31020                           ;Bridge.c: 214: memcpy(myLongAddress,address,8);
 31021                           
 31022                           ;incstack = 0
 31023  006BFA  0EF3               	movlw	low _myLongAddress
 31024  006BFC  6F62               	movwf	memcpy@d1& (0+255),b
 31025  006BFE  0E02               	movlw	high _myLongAddress
 31026  006C00  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 31027  006C02  C076  F064         	movff	MiApp_SetAddressPan@address,memcpy@s1
 31028  006C06  C077  F065         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 31029  006C0A  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31030  006C0C  0E08               	movlw	8
 31031  006C0E  6F66               	movwf	memcpy@n& (0+255),b
 31032  006C10  ECFA  F03A         	call	_memcpy	;wreg free
 31033                           
 31034                           ;Bridge.c: 215: memcpy(addr.bytes,address,8);
 31035  006C14  0E7A               	movlw	low MiApp_SetAddressPan@addr
 31036  006C16  6F62               	movwf	memcpy@d1& (0+255),b
 31037  006C18  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 31038  006C1A  C076  F064         	movff	MiApp_SetAddressPan@address,memcpy@s1
 31039  006C1E  C077  F065         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
 31040  006C22  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31041  006C24  0E08               	movlw	8
 31042  006C26  6F66               	movwf	memcpy@n& (0+255),b
 31043  006C28  ECFA  F03A         	call	_memcpy	;wreg free
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;Bridge.c: 216: myPANID=panid;
 31047  006C2C  C078  F05C         	movff	MiApp_SetAddressPan@panid,_myPANID
 31048  006C30  C079  F05D         	movff	MiApp_SetAddressPan@panid+1,_myPANID+1
 31049                           
 31050                           ;Bridge.c: 218: MiMAC_SetAltAddress((uint8_t*)myLongAddress,(uint8_t*)&myPANID);
 31051  006C34  0EF3               	movlw	low _myLongAddress
 31052  006C36  6F6C               	movwf	MiMAC_SetAltAddress@Address& (0+255),b
 31053  006C38  0E02               	movlw	high _myLongAddress
 31054  006C3A  6F6D               	movwf	(MiMAC_SetAltAddress@Address+1)& (0+255),b
 31055  006C3C  0E5C               	movlw	low _myPANID
 31056  006C3E  6F6E               	movwf	MiMAC_SetAltAddress@PANID& (0+255),b
 31057  006C40  EC91  F038         	call	_MiMAC_SetAltAddress	;wreg free
 31058                           
 31059                           ;Bridge.c: 220: NetworkSetAddressPAN(addr,panid);
 31060  006C44  EE20  F07A         	lfsr	2,MiApp_SetAddressPan@addr
 31061  006C48  EE00  F06C         	lfsr	0,NetworkSetAddressPAN@address
 31062  006C4C  0E07               	movlw	7
 31063  006C4E                     u22291:
 31064  006C4E  CFDB FFEB          	movff	plusw2,plusw0
 31065  006C52  06E8               	decf	wreg,f,c
 31066  006C54  E2FC               	bc	u22291
 31067  006C56  C078  F074         	movff	MiApp_SetAddressPan@panid,NetworkSetAddressPAN@PANID
 31068  006C5A  C079  F075         	movff	MiApp_SetAddressPan@panid+1,NetworkSetAddressPAN@PANID+1
 31069  006C5E  EFE2  F037         	goto	_NetworkSetAddressPAN	;wreg free
 31070  006C62                     __end_of_MiApp_SetAddressPan:
 31071                           	opt stack 0
 31072                           tblptru	equ	0xFF8
 31073                           tblptrh	equ	0xFF7
 31074                           tblptrl	equ	0xFF6
 31075                           tablat	equ	0xFF5
 31076                           prodh	equ	0xFF4
 31077                           prodl	equ	0xFF3
 31078                           intcon	equ	0xFF2
 31079                           postinc0	equ	0xFEE
 31080                           plusw0	equ	0xFEB
 31081                           fsr0h	equ	0xFEA
 31082                           fsr0l	equ	0xFE9
 31083                           wreg	equ	0xFE8
 31084                           indf1	equ	0xFE7
 31085                           postinc1	equ	0xFE6
 31086                           postdec1	equ	0xFE5
 31087                           plusw1	equ	0xFE3
 31088                           fsr1h	equ	0xFE2
 31089                           fsr1l	equ	0xFE1
 31090                           indf2	equ	0xFDF
 31091                           postinc2	equ	0xFDE
 31092                           postdec2	equ	0xFDD
 31093                           plusw2	equ	0xFDB
 31094                           fsr2h	equ	0xFDA
 31095                           fsr2l	equ	0xFD9
 31096                           status	equ	0xFD8
 31097                           
 31098 ;; *************** function _NetworkSetAddressPAN *****************
 31099 ;; Defined at:
 31100 ;;		line 430 in file "../NetworkManager.c"
 31101 ;; Parameters:    Size  Location     Type
 31102 ;;  address         8   12[BANK0 ] struct addr_t_def
 31103 ;;  PANID           2   20[BANK0 ] unsigned int 
 31104 ;; Auto vars:     Size  Location     Type
 31105 ;;		None
 31106 ;; Return value:  Size  Location     Type
 31107 ;;                  1    wreg      void 
 31108 ;; Registers used:
 31109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31110 ;; Tracked objects:
 31111 ;;		On entry : 0/2
 31112 ;;		On exit  : 0/0
 31113 ;;		Unchanged: 0/0
 31114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31115 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31118 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31119 ;;Total ram usage:       10 bytes
 31120 ;; Hardware stack levels used:    1
 31121 ;; Hardware stack levels required when called:    5
 31122 ;; This function calls:
 31123 ;;		_NetworkAddressSizeGet
 31124 ;;		_NetworkGetDeviceType
 31125 ;;		_memcpy
 31126 ;; This function is called by:
 31127 ;;		_MiApp_SetAddressPan
 31128 ;;		_NetworkInit
 31129 ;; This function uses a non-reentrant model
 31130 ;;
 31131                           
 31132                           	psect	text146
 31133  006FC4                     __ptext146:
 31134                           	opt stack 0
 31135  006FC4                     _NetworkSetAddressPAN:
 31136                           	opt stack 24
 31137                           
 31138                           ;NetworkManager.c: 432: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
 31139                           
 31140                           ;incstack = 0
 31141  006FC4  0EEB               	movlw	low _MyAddress
 31142  006FC6  0100               	movlb	0	; () banked
 31143  006FC8  6F62               	movwf	memcpy@d1& (0+255),b
 31144  006FCA  0E02               	movlw	high _MyAddress
 31145  006FCC  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 31146  006FCE  0E6C               	movlw	low NetworkSetAddressPAN@address
 31147  006FD0  6F64               	movwf	memcpy@s1& (0+255),b
 31148  006FD2  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 31149  006FD4  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 31150  006FD8  6F66               	movwf	memcpy@n& (0+255),b
 31151  006FDA  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31152  006FDC  ECFA  F03A         	call	_memcpy	;wreg free
 31153                           
 31154                           ; BSR set to: 0
 31155                           ;NetworkManager.c: 433: DEVPanID=PANID;
 31156  006FE0  C074  F2E9         	movff	NetworkSetAddressPAN@PANID,_DEVPanID
 31157  006FE4  C075  F2EA         	movff	NetworkSetAddressPAN@PANID+1,_DEVPanID+1
 31158                           
 31159                           ; BSR set to: 0
 31160                           ;NetworkManager.c: 434: if(NetworkGetDeviceType()==DeviceCoordinator)
 31161  006FE8  EC56  F03E         	call	_NetworkGetDeviceType	;wreg free
 31162  006FEC  0900               	iorlw	0
 31163  006FEE  A4D8               	btfss	status,2,c
 31164  006FF0  0012               	return	
 31165                           
 31166                           ;NetworkManager.c: 435: {
 31167                           ;NetworkManager.c: 436: CoordinatorAddr=MyAddress;
 31168  006FF2  EE22  F0EB         	lfsr	2,_MyAddress
 31169  006FF6  EE12  F0A5         	lfsr	1,_CoordinatorAddr
 31170  006FFA  0E07               	movlw	7
 31171  006FFC                     u20941:
 31172  006FFC  CFDB FFE3          	movff	plusw2,plusw1
 31173  007000  06E8               	decf	wreg,f,c
 31174  007002  E2FC               	bc	u20941
 31175                           
 31176                           ;NetworkManager.c: 437: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
 31177  007004  0E86               	movlw	low _routeInfo
 31178  007006  0100               	movlb	0	; () banked
 31179  007008  6F62               	movwf	memcpy@d1& (0+255),b
 31180  00700A  0E02               	movlw	high _routeInfo
 31181  00700C  6F63               	movwf	(memcpy@d1+1)& (0+255),b
 31182  00700E  0E6C               	movlw	low NetworkSetAddressPAN@address
 31183  007010  6F64               	movwf	memcpy@s1& (0+255),b
 31184  007012  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 31185  007014  EC58  F03E         	call	_NetworkAddressSizeGet	;wreg free
 31186  007018  6F66               	movwf	memcpy@n& (0+255),b
 31187  00701A  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31188  00701C  EFFA  F03A         	goto	_memcpy	;wreg free
 31189  007020                     __end_of_NetworkSetAddressPAN:
 31190                           	opt stack 0
 31191                           tblptru	equ	0xFF8
 31192                           tblptrh	equ	0xFF7
 31193                           tblptrl	equ	0xFF6
 31194                           tablat	equ	0xFF5
 31195                           prodh	equ	0xFF4
 31196                           prodl	equ	0xFF3
 31197                           intcon	equ	0xFF2
 31198                           postinc0	equ	0xFEE
 31199                           plusw0	equ	0xFEB
 31200                           fsr0h	equ	0xFEA
 31201                           fsr0l	equ	0xFE9
 31202                           wreg	equ	0xFE8
 31203                           indf1	equ	0xFE7
 31204                           postinc1	equ	0xFE6
 31205                           postdec1	equ	0xFE5
 31206                           plusw1	equ	0xFE3
 31207                           fsr1h	equ	0xFE2
 31208                           fsr1l	equ	0xFE1
 31209                           indf2	equ	0xFDF
 31210                           postinc2	equ	0xFDE
 31211                           postdec2	equ	0xFDD
 31212                           plusw2	equ	0xFDB
 31213                           fsr2h	equ	0xFDA
 31214                           fsr2l	equ	0xFD9
 31215                           status	equ	0xFD8
 31216                           
 31217 ;; *************** function _NetworkGetDeviceType *****************
 31218 ;; Defined at:
 31219 ;;		line 204 in file "../NetworkManager.c"
 31220 ;; Parameters:    Size  Location     Type
 31221 ;;		None
 31222 ;; Auto vars:     Size  Location     Type
 31223 ;;		None
 31224 ;; Return value:  Size  Location     Type
 31225 ;;                  1    wreg      enum E8168
 31226 ;; Registers used:
 31227 ;;		wreg, status,2
 31228 ;; Tracked objects:
 31229 ;;		On entry : 0/0
 31230 ;;		On exit  : 0/0
 31231 ;;		Unchanged: 0/0
 31232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31237 ;;Total ram usage:        0 bytes
 31238 ;; Hardware stack levels used:    1
 31239 ;; Hardware stack levels required when called:    4
 31240 ;; This function calls:
 31241 ;;		Nothing
 31242 ;; This function is called by:
 31243 ;;		_radioReceivedPacket
 31244 ;;		_NetworkUnicastData
 31245 ;;		_RouteManagerPerformUpdate
 31246 ;;		_networkSendBeacon
 31247 ;;		_TMSendFormedPacketToRFD
 31248 ;;		_NetworkManagerTask
 31249 ;;		_NetworkHasRoute
 31250 ;;		_NetworkManagerProcessIncomingData
 31251 ;;		_NetworkPrepareSendPacket
 31252 ;;		_NetworkSetAddressPAN
 31253 ;; This function uses a non-reentrant model
 31254 ;;
 31255                           
 31256                           	psect	text147
 31257  007CAC                     __ptext147:
 31258                           	opt stack 0
 31259  007CAC                     _NetworkGetDeviceType:
 31260                           	opt stack 22
 31261                           
 31262                           ;NetworkManager.c: 206: return(DeviceType);
 31263                           
 31264                           ;incstack = 0
 31265  007CAC  505A               	movf	_DeviceType,w,c
 31266  007CAE  0012               	return		;funcret
 31267  007CB0                     __end_of_NetworkGetDeviceType:
 31268                           	opt stack 0
 31269                           tblptru	equ	0xFF8
 31270                           tblptrh	equ	0xFF7
 31271                           tblptrl	equ	0xFF6
 31272                           tablat	equ	0xFF5
 31273                           prodh	equ	0xFF4
 31274                           prodl	equ	0xFF3
 31275                           intcon	equ	0xFF2
 31276                           postinc0	equ	0xFEE
 31277                           plusw0	equ	0xFEB
 31278                           fsr0h	equ	0xFEA
 31279                           fsr0l	equ	0xFE9
 31280                           wreg	equ	0xFE8
 31281                           indf1	equ	0xFE7
 31282                           postinc1	equ	0xFE6
 31283                           postdec1	equ	0xFE5
 31284                           plusw1	equ	0xFE3
 31285                           fsr1h	equ	0xFE2
 31286                           fsr1l	equ	0xFE1
 31287                           indf2	equ	0xFDF
 31288                           postinc2	equ	0xFDE
 31289                           postdec2	equ	0xFDD
 31290                           plusw2	equ	0xFDB
 31291                           fsr2h	equ	0xFDA
 31292                           fsr2l	equ	0xFD9
 31293                           status	equ	0xFD8
 31294                           
 31295 ;; *************** function _NetworkAddressSizeGet *****************
 31296 ;; Defined at:
 31297 ;;		line 161 in file "../NetworkManager.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;		None
 31300 ;; Auto vars:     Size  Location     Type
 31301 ;;		None
 31302 ;; Return value:  Size  Location     Type
 31303 ;;                  1    wreg      unsigned char 
 31304 ;; Registers used:
 31305 ;;		wreg, status,2
 31306 ;; Tracked objects:
 31307 ;;		On entry : F/0
 31308 ;;		On exit  : F/0
 31309 ;;		Unchanged: F/0
 31310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31315 ;;Total ram usage:        0 bytes
 31316 ;; Hardware stack levels used:    1
 31317 ;; Hardware stack levels required when called:    4
 31318 ;; This function calls:
 31319 ;;		Nothing
 31320 ;; This function is called by:
 31321 ;;		_routeInfoInit
 31322 ;;		_RouteManagerProcessReceive
 31323 ;;		_RoutingTableFindDeviceOrParent
 31324 ;;		_networkSendBeacon
 31325 ;;		_LEAppendNeighborInfo
 31326 ;;		_LE_processReceivedMessage
 31327 ;;		_TunnelManagerSetTunnel
 31328 ;;		_TunnelManagerGetTunnel
 31329 ;;		_TunnelManagerInvalidateTunnel
 31330 ;;		_NetworkInit
 31331 ;;		_isBroadcastAddress
 31332 ;;		_isSameAddress
 31333 ;;		_CoordinatorGenericAddress
 31334 ;;		_NetworkPrepareSendPacket
 31335 ;;		_NetworkSendDiscoverRequest
 31336 ;;		_NetworkSendDiscoverResponse
 31337 ;;		_NetworkSetAddressPAN
 31338 ;;		_IsNetworkDevice
 31339 ;;		_DeviceManagerBufferDeviceData
 31340 ;;		_DeviceManagerGetDeviceData
 31341 ;;		_NetworkBroadcastData
 31342 ;; This function uses a non-reentrant model
 31343 ;;
 31344                           
 31345                           	psect	text148
 31346  007CB0                     __ptext148:
 31347                           	opt stack 0
 31348  007CB0                     _NetworkAddressSizeGet:
 31349                           	opt stack 23
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;NetworkManager.c: 163: return(addressLen);
 31353                           
 31354                           ;incstack = 0
 31355  007CB0  505B               	movf	_addressLen,w,c
 31356                           
 31357                           ; BSR set to: 0
 31358  007CB2  0012               	return		;funcret
 31359  007CB4                     __end_of_NetworkAddressSizeGet:
 31360                           	opt stack 0
 31361                           tblptru	equ	0xFF8
 31362                           tblptrh	equ	0xFF7
 31363                           tblptrl	equ	0xFF6
 31364                           tablat	equ	0xFF5
 31365                           prodh	equ	0xFF4
 31366                           prodl	equ	0xFF3
 31367                           intcon	equ	0xFF2
 31368                           postinc0	equ	0xFEE
 31369                           plusw0	equ	0xFEB
 31370                           fsr0h	equ	0xFEA
 31371                           fsr0l	equ	0xFE9
 31372                           wreg	equ	0xFE8
 31373                           indf1	equ	0xFE7
 31374                           postinc1	equ	0xFE6
 31375                           postdec1	equ	0xFE5
 31376                           plusw1	equ	0xFE3
 31377                           fsr1h	equ	0xFE2
 31378                           fsr1l	equ	0xFE1
 31379                           indf2	equ	0xFDF
 31380                           postinc2	equ	0xFDE
 31381                           postdec2	equ	0xFDD
 31382                           plusw2	equ	0xFDB
 31383                           fsr2h	equ	0xFDA
 31384                           fsr2l	equ	0xFD9
 31385                           status	equ	0xFD8
 31386                           
 31387 ;; *************** function _MiMAC_SetAltAddress *****************
 31388 ;; Defined at:
 31389 ;;		line 1504 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 31390 ;; Parameters:    Size  Location     Type
 31391 ;;  Address         2   12[BANK0 ] PTR unsigned char 
 31392 ;;		 -> myNetworkAddress(2), myLongAddress(8), 
 31393 ;;  PANID           1   14[BANK0 ] PTR unsigned char 
 31394 ;;		 -> MAC_PANID(2), myPANID(2), 
 31395 ;; Auto vars:     Size  Location     Type
 31396 ;;		None
 31397 ;; Return value:  Size  Location     Type
 31398 ;;                  1    wreg      unsigned char 
 31399 ;; Registers used:
 31400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31401 ;; Tracked objects:
 31402 ;;		On entry : F/0
 31403 ;;		On exit  : 0/0
 31404 ;;		Unchanged: 0/0
 31405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31406 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31409 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31410 ;;Total ram usage:        3 bytes
 31411 ;; Hardware stack levels used:    1
 31412 ;; Hardware stack levels required when called:    6
 31413 ;; This function calls:
 31414 ;;		_PHYSetShortRAMAddr
 31415 ;;		_memcpy
 31416 ;; This function is called by:
 31417 ;;		_MiApp_ProtocolInit
 31418 ;;		_MiApp_SetAddressPan
 31419 ;;		_MiMAC_SendPacket
 31420 ;;		_MiMAC_PowerState
 31421 ;; This function uses a non-reentrant model
 31422 ;;
 31423                           
 31424                           	psect	text149
 31425  007122                     __ptext149:
 31426                           	opt stack 0
 31427  007122                     _MiMAC_SetAltAddress:
 31428                           	opt stack 17
 31429                           
 31430                           ; BSR set to: 0
 31431                           ;drv_mrf_miwi_mesh_24j40.c: 1506: memcpy(&myNetworkAddress,Address,2);
 31432                           
 31433                           ; BSR set to: 0
 31434                           ;incstack = 0
 31435  007122  0E53               	movlw	low _myNetworkAddress
 31436  007124  6F62               	movwf	memcpy@d1& (0+255),b
 31437  007126  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 31438  007128  C06C  F064         	movff	MiMAC_SetAltAddress@Address,memcpy@s1
 31439  00712C  C06D  F065         	movff	MiMAC_SetAltAddress@Address+1,memcpy@s1+1
 31440  007130  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31441  007132  0E02               	movlw	2
 31442  007134  6F66               	movwf	memcpy@n& (0+255),b
 31443  007136  ECFA  F03A         	call	_memcpy	;wreg free
 31444                           
 31445                           ;drv_mrf_miwi_mesh_24j40.c: 1507: memcpy(&MAC_PANID,PANID,2);
 31446  00713A  0E51               	movlw	low _MAC_PANID
 31447  00713C  6F62               	movwf	memcpy@d1& (0+255),b
 31448  00713E  6B63               	clrf	(memcpy@d1+1)& (0+255),b
 31449  007140  C06E  F064         	movff	MiMAC_SetAltAddress@PANID,memcpy@s1
 31450  007144  6B65               	clrf	(memcpy@s1+1)& (0+255),b
 31451  007146  6B67               	clrf	(memcpy@n+1)& (0+255),b
 31452  007148  0E02               	movlw	2
 31453  00714A  6F66               	movwf	memcpy@n& (0+255),b
 31454  00714C  ECFA  F03A         	call	_memcpy	;wreg free
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;drv_mrf_miwi_mesh_24j40.c: 1509: PHYSetShortRAMAddr((0x07),((myNetworkAddress>>0)&0xff)
      +                          );
 31458  007150  C053  F062         	movff	_myNetworkAddress,PHYSetShortRAMAddr@value
 31459  007154  0E07               	movlw	7
 31460  007156  EC34  F03C         	call	_PHYSetShortRAMAddr
 31461                           
 31462                           ;drv_mrf_miwi_mesh_24j40.c: 1510: PHYSetShortRAMAddr((0x09),((myNetworkAddress>>8)&0xff)
      +                          );
 31463  00715A  C054  F062         	movff	_myNetworkAddress+1,PHYSetShortRAMAddr@value
 31464  00715E  0E09               	movlw	9
 31465  007160  EC34  F03C         	call	_PHYSetShortRAMAddr
 31466                           
 31467                           ;drv_mrf_miwi_mesh_24j40.c: 1511: PHYSetShortRAMAddr((0x03),((MAC_PANID>>0)&0xff));
 31468  007164  C051  F062         	movff	_MAC_PANID,PHYSetShortRAMAddr@value
 31469  007168  0E03               	movlw	3
 31470  00716A  EC34  F03C         	call	_PHYSetShortRAMAddr
 31471                           
 31472                           ;drv_mrf_miwi_mesh_24j40.c: 1512: PHYSetShortRAMAddr((0x05),((MAC_PANID>>8)&0xff));
 31473  00716E  C052  F062         	movff	_MAC_PANID+1,PHYSetShortRAMAddr@value
 31474  007172  0E05               	movlw	5
 31475  007174  EF34  F03C         	goto	_PHYSetShortRAMAddr
 31476  007178                     __end_of_MiMAC_SetAltAddress:
 31477                           	opt stack 0
 31478                           tblptru	equ	0xFF8
 31479                           tblptrh	equ	0xFF7
 31480                           tblptrl	equ	0xFF6
 31481                           tablat	equ	0xFF5
 31482                           prodh	equ	0xFF4
 31483                           prodl	equ	0xFF3
 31484                           intcon	equ	0xFF2
 31485                           postinc0	equ	0xFEE
 31486                           plusw0	equ	0xFEB
 31487                           fsr0h	equ	0xFEA
 31488                           fsr0l	equ	0xFE9
 31489                           wreg	equ	0xFE8
 31490                           indf1	equ	0xFE7
 31491                           postinc1	equ	0xFE6
 31492                           postdec1	equ	0xFE5
 31493                           plusw1	equ	0xFE3
 31494                           fsr1h	equ	0xFE2
 31495                           fsr1l	equ	0xFE1
 31496                           indf2	equ	0xFDF
 31497                           postinc2	equ	0xFDE
 31498                           postdec2	equ	0xFDD
 31499                           plusw2	equ	0xFDB
 31500                           fsr2h	equ	0xFDA
 31501                           fsr2l	equ	0xFD9
 31502                           status	equ	0xFD8
 31503                           
 31504 ;; *************** function _memcpy *****************
 31505 ;; Defined at:
 31506 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 31507 ;; Parameters:    Size  Location     Type
 31508 ;;  d1              2    2[BANK0 ] PTR void 
 31509 ;;		 -> beaconMessageBuffer.parent(8), beaconMessageBuffer.data.parent(8), MSTickGet@tNow(8), list.address(8), 
 31510 ;;		 -> list(340), NetworkIssueDataRequest@data(28), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 31511 ;;		 -> userdata(36), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(8), NetworkManagerTask@data(37), 
 31512 ;;		 -> routeInfo(13), MyAddress(8), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 31513 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(8), TunnelManagerGetTunnel@addr(8), TunnelManagerGetTunnel@retAddr(
      +8), 
 31514 ;;		 -> tunnels(240), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(8), 
 31515 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(84), RouteManagerProcessReceive@from(
      +8), 
 31516 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), myNetworkAddress(2), MAC_PANID(2), 
 31517 ;;		 -> ConnectionTable.Address(8), MACRxPacket(13), MiApp_MessageAvailable@src(8), MiApp_UnicastAddress@src(8), 
 31518 ;;		 -> MiApp_SetAddressPan@addr(8), MiApp_EstablishConnection@src(8), MiApp_StartConnection@src(8), ConnectionTable(85)
      +, 
 31519 ;;		 -> myLongAddress(8), Read_MAC_Address@address(8), NULL(0), 
 31520 ;;  s1              2    4[BANK0 ] PTR const void 
 31521 ;;		 -> Tick_MS(8), address.bytes(8), DeviceManagerBufferDeviceData@address(8), address.bytes(8), 
 31522 ;;		 -> IsNetworkDevice@address(8), address.bytes(8), NetworkSetAddressPAN@address(8), NetworkSendDiscoverResponse@datab
      +uff(64), 
 31523 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(8)
      +, address.bytes(8), 
 31524 ;;		 -> NetworkInit@address(8), MyAddress.bytes(8), MyAddress(8), TMSendDataToRFD@databuff(64), 
 31525 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(8), TunnelManagerGetTunnel@device(8), 
 31526 ;;		 -> tunnels.parent(8), tunnels.TxTime(8), tunnels(240), neighbor_tbl.ll_addr.bytes(8), 
 31527 ;;		 -> neighbor_tbl.ll_addr(8), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(8), radioReceivedPacket@c
      +hild(8), 
 31528 ;;		 -> source.bytes(8), radioReceivedPacket@source(8), myNetworkAddress(2), MAC_PANID(2), 
 31529 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), address.bytes(8), AddNodeToNetworkTable@address(8), 
 31530 ;;		 -> srcAddress.bytes(8), srcAddress(8), MiApp_EstablishConnection@src(8), myPANID(2), 
 31531 ;;		 -> myLongAddress(8), Read_MAC_Address@addr8(6), NULL(0), TxBuffer(64), 
 31532 ;;		 -> main@coord(8), myAddr(8), 
 31533 ;;  n               2    6[BANK0 ] unsigned int 
 31534 ;; Auto vars:     Size  Location     Type
 31535 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 31536 ;;		 -> Tick_MS(8), address.bytes(8), DeviceManagerBufferDeviceData@address(8), address.bytes(8), 
 31537 ;;		 -> IsNetworkDevice@address(8), address.bytes(8), NetworkSetAddressPAN@address(8), NetworkSendDiscoverResponse@datab
      +uff(64), 
 31538 ;;		 -> NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent.bytes(8)
      +, address.bytes(8), 
 31539 ;;		 -> NetworkInit@address(8), MyAddress.bytes(8), MyAddress(8), TMSendDataToRFD@databuff(64), 
 31540 ;;		 -> TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(8), TunnelManagerGetTunnel@device(8), 
 31541 ;;		 -> tunnels.parent(8), tunnels.TxTime(8), tunnels(240), neighbor_tbl.ll_addr.bytes(8), 
 31542 ;;		 -> neighbor_tbl.ll_addr(8), NetworkBroadcastData@databuff(64), radioReceivedPacket@parent(8), radioReceivedPacket@c
      +hild(8), 
 31543 ;;		 -> source.bytes(8), radioReceivedPacket@source(8), myNetworkAddress(2), MAC_PANID(2), 
 31544 ;;		 -> RxBuffer.Payload(127), RxBuffer(256), address.bytes(8), AddNodeToNetworkTable@address(8), 
 31545 ;;		 -> srcAddress.bytes(8), srcAddress(8), MiApp_EstablishConnection@src(8), myPANID(2), 
 31546 ;;		 -> myLongAddress(8), Read_MAC_Address@addr8(6), NULL(0), TxBuffer(64), 
 31547 ;;		 -> main@coord(8), myAddr(8), 
 31548 ;;  d               2    8[BANK0 ] PTR unsigned char 
 31549 ;;		 -> beaconMessageBuffer.parent(8), beaconMessageBuffer.data.parent(8), MSTickGet@tNow(8), list.address(8), 
 31550 ;;		 -> list(340), NetworkIssueDataRequest@data(28), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverReques
      +t@databuff(64), 
 31551 ;;		 -> userdata(36), NetworkManagerProcessIncomingData@buffer(64), routeInfo.parent(8), NetworkManagerTask@data(37), 
 31552 ;;		 -> routeInfo(13), MyAddress(8), TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), 
 31553 ;;		 -> TMQ(152), TunnelManagerInvalidateTunnel@addr(8), TunnelManagerGetTunnel@addr(8), TunnelManagerGetTunnel@retAddr(
      +8), 
 31554 ;;		 -> tunnels(240), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), LE_processReceivedMessage@ll_addr(8), 
 31555 ;;		 -> networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer(84), RouteManagerProcessReceive@from(
      +8), 
 31556 ;;		 -> NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), myNetworkAddress(2), MAC_PANID(2), 
 31557 ;;		 -> ConnectionTable.Address(8), MACRxPacket(13), MiApp_MessageAvailable@src(8), MiApp_UnicastAddress@src(8), 
 31558 ;;		 -> MiApp_SetAddressPan@addr(8), MiApp_EstablishConnection@src(8), MiApp_StartConnection@src(8), ConnectionTable(85)
      +, 
 31559 ;;		 -> myLongAddress(8), Read_MAC_Address@address(8), NULL(0), 
 31560 ;; Return value:  Size  Location     Type
 31561 ;;                  2    2[BANK0 ] PTR void 
 31562 ;; Registers used:
 31563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31564 ;; Tracked objects:
 31565 ;;		On entry : F/0
 31566 ;;		On exit  : F/0
 31567 ;;		Unchanged: 0/0
 31568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31569 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31573 ;;Total ram usage:       10 bytes
 31574 ;; Hardware stack levels used:    1
 31575 ;; Hardware stack levels required when called:    4
 31576 ;; This function calls:
 31577 ;;		Nothing
 31578 ;; This function is called by:
 31579 ;;		_Read_MAC_Address
 31580 ;;		_MiApp_EstablishConnection
 31581 ;;		_MiApp_SetAddressPan
 31582 ;;		_MiApp_UnicastAddress
 31583 ;;		_MiApp_MessageAvailable
 31584 ;;		_AddNodeToNetworkTable
 31585 ;;		_MiMAC_ReceivedPacket
 31586 ;;		_MiMAC_SetAltAddress
 31587 ;;		_radioReceivedPacket
 31588 ;;		_RouteManagerProcessReceive
 31589 ;;		_networkSendBeacon
 31590 ;;		_LEAppendNeighborInfo
 31591 ;;		_LE_processReceivedMessage
 31592 ;;		_BroadcastManagerDelaySend
 31593 ;;		_TunnelManagerSetTunnel
 31594 ;;		_TunnelManagerGetTunnel
 31595 ;;		_TunnelManagerInvalidateTunnel
 31596 ;;		_TransportManagerTask
 31597 ;;		_TMSendFormedPacketTowardsCoordinator
 31598 ;;		_NetworkInit
 31599 ;;		_NetworkManagerProcessIncomingData
 31600 ;;		_NetworkPrepareSendPacket
 31601 ;;		_NetworkSetAddressPAN
 31602 ;;		_IsNetworkDevice
 31603 ;;		_DeviceManagerBufferDeviceData
 31604 ;;		_DeviceManagerGetDeviceData
 31605 ;;		_MSTickGet
 31606 ;; This function uses a non-reentrant model
 31607 ;;
 31608                           
 31609                           	psect	text150
 31610  0075F4                     __ptext150:
 31611                           	opt stack 0
 31612  0075F4                     _memcpy:
 31613                           	opt stack 25
 31614                           
 31615                           ; BSR set to: 0
 31616                           
 31617                           ;incstack = 0
 31618  0075F4  C064  F06A         	movff	memcpy@s1,memcpy@s
 31619  0075F8  C065  F06B         	movff	memcpy@s1+1,memcpy@s+1
 31620  0075FC  C062  F068         	movff	memcpy@d1,memcpy@d
 31621  007600  C063  F069         	movff	memcpy@d1+1,memcpy@d+1
 31622  007604  D00E               	goto	l11555
 31623  007606                     l11549:
 31624                           
 31625                           ; BSR set to: 0
 31626  007606  C06A  FFD9         	movff	memcpy@s,fsr2l
 31627  00760A  C06B  FFDA         	movff	memcpy@s+1,fsr2h
 31628  00760E  C068  FFE1         	movff	memcpy@d,fsr1l
 31629  007612  C069  FFE2         	movff	memcpy@d+1,fsr1h
 31630  007616  CFDF FFE7          	movff	indf2,indf1
 31631                           
 31632                           ; BSR set to: 0
 31633  00761A  4B6A               	infsnz	memcpy@s& (0+255),f,b
 31634  00761C  2B6B               	incf	(memcpy@s+1)& (0+255),f,b
 31635                           
 31636                           ; BSR set to: 0
 31637  00761E  4B68               	infsnz	memcpy@d& (0+255),f,b
 31638  007620  2B69               	incf	(memcpy@d+1)& (0+255),f,b
 31639  007622                     l11555:
 31640                           
 31641                           ; BSR set to: 0
 31642  007622  0766               	decf	memcpy@n& (0+255),f,b
 31643  007624  A0D8               	btfss	status,0,c
 31644  007626  0767               	decf	(memcpy@n+1)& (0+255),f,b
 31645  007628  2966               	incf	memcpy@n& (0+255),w,b
 31646  00762A  E1ED               	bnz	l11549
 31647  00762C  2967               	incf	(memcpy@n+1)& (0+255),w,b
 31648  00762E  E1EB               	bnz	l11549
 31649                           
 31650                           ; BSR set to: 0
 31651  007630  0012               	return		;funcret
 31652  007632                     __end_of_memcpy:
 31653                           	opt stack 0
 31654                           tblptru	equ	0xFF8
 31655                           tblptrh	equ	0xFF7
 31656                           tblptrl	equ	0xFF6
 31657                           tablat	equ	0xFF5
 31658                           prodh	equ	0xFF4
 31659                           prodl	equ	0xFF3
 31660                           intcon	equ	0xFF2
 31661                           postinc0	equ	0xFEE
 31662                           plusw0	equ	0xFEB
 31663                           fsr0h	equ	0xFEA
 31664                           fsr0l	equ	0xFE9
 31665                           wreg	equ	0xFE8
 31666                           indf1	equ	0xFE7
 31667                           postinc1	equ	0xFE6
 31668                           postdec1	equ	0xFE5
 31669                           plusw1	equ	0xFE3
 31670                           fsr1h	equ	0xFE2
 31671                           fsr1l	equ	0xFE1
 31672                           indf2	equ	0xFDF
 31673                           postinc2	equ	0xFDE
 31674                           postdec2	equ	0xFDD
 31675                           plusw2	equ	0xFDB
 31676                           fsr2h	equ	0xFDA
 31677                           fsr2l	equ	0xFD9
 31678                           status	equ	0xFD8
 31679                           
 31680 ;; *************** function _PHYSetShortRAMAddr *****************
 31681 ;; Defined at:
 31682 ;;		line 190 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 31683 ;; Parameters:    Size  Location     Type
 31684 ;;  address         1    wreg     unsigned char 
 31685 ;;  value           1    2[BANK0 ] unsigned char 
 31686 ;; Auto vars:     Size  Location     Type
 31687 ;;  address         1    3[BANK0 ] unsigned char 
 31688 ;;  tmpRFIE         1    4[BANK0 ] volatile unsigned char 
 31689 ;; Return value:  Size  Location     Type
 31690 ;;                  1    wreg      void 
 31691 ;; Registers used:
 31692 ;;		wreg, status,2, cstack
 31693 ;; Tracked objects:
 31694 ;;		On entry : 0/0
 31695 ;;		On exit  : 0/0
 31696 ;;		Unchanged: 0/0
 31697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31698 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31702 ;;Total ram usage:        3 bytes
 31703 ;; Hardware stack levels used:    1
 31704 ;; Hardware stack levels required when called:    5
 31705 ;; This function calls:
 31706 ;;		_SPIPut
 31707 ;; This function is called by:
 31708 ;;		_InitMRF24J40
 31709 ;;		_MiMAC_SendPacket
 31710 ;;		_MiMAC_ChannelAssessment
 31711 ;;		_MiMAC_PowerState
 31712 ;;		_MiMAC_SetChannel
 31713 ;;		_MiMAC_SetAltAddress
 31714 ;; This function uses a non-reentrant model
 31715 ;;
 31716                           
 31717                           	psect	text151
 31718  007868                     __ptext151:
 31719                           	opt stack 0
 31720  007868                     _PHYSetShortRAMAddr:
 31721                           	opt stack 18
 31722                           
 31723                           ; BSR set to: 0
 31724                           ;incstack = 0
 31725                           ;PHYSetShortRAMAddr@address stored from wreg
 31726  007868  0100               	movlb	0	; () banked
 31727  00786A  6F63               	movwf	PHYSetShortRAMAddr@address& (0+255),b
 31728                           
 31729                           ;drv_mrf_miwi_mesh_24j40.c: 192: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 31730  00786C  0E00               	movlw	0
 31731  00786E  B8F2               	btfsc	intcon,4,c	;volatile
 31732  007870  0E01               	movlw	1
 31733  007872  6F64               	movwf	PHYSetShortRAMAddr@tmpRFIE& (0+255),b	;volatile
 31734                           
 31735                           ;drv_mrf_miwi_mesh_24j40.c: 194: INTCONbits.INT0IE = 0;
 31736  007874  98F2               	bcf	intcon,4,c	;volatile
 31737                           
 31738                           ;drv_mrf_miwi_mesh_24j40.c: 195: LATAbits.LATA5 = 0;
 31739  007876  9A89               	bcf	3977,5,c	;volatile
 31740                           
 31741                           ; BSR set to: 0
 31742                           ;drv_mrf_miwi_mesh_24j40.c: 196: SPIPut(address);
 31743  007878  5163               	movf	PHYSetShortRAMAddr@address& (0+255),w,b
 31744  00787A  EC3D  F03D         	call	_SPIPut
 31745                           
 31746                           ;drv_mrf_miwi_mesh_24j40.c: 197: SPIPut(value);
 31747  00787E  0100               	movlb	0	; () banked
 31748  007880  5162               	movf	PHYSetShortRAMAddr@value& (0+255),w,b
 31749  007882  EC3D  F03D         	call	_SPIPut
 31750                           
 31751                           ;drv_mrf_miwi_mesh_24j40.c: 198: LATAbits.LATA5 = 1;
 31752  007886  8A89               	bsf	3977,5,c	;volatile
 31753                           
 31754                           ;drv_mrf_miwi_mesh_24j40.c: 199: INTCONbits.INT0IE = tmpRFIE;
 31755  007888  0100               	movlb	0	; () banked
 31756  00788A  B164               	btfsc	PHYSetShortRAMAddr@tmpRFIE& (0+255),0,b	;volatile
 31757  00788C  D002               	bra	u16195
 31758  00788E  98F2               	bcf	intcon,4,c	;volatile
 31759  007890  D001               	bra	u16196
 31760  007892                     u16195:
 31761  007892  88F2               	bsf	intcon,4,c	;volatile
 31762  007894                     u16196:
 31763  007894  0012               	return		;funcret
 31764  007896                     __end_of_PHYSetShortRAMAddr:
 31765                           	opt stack 0
 31766                           tblptru	equ	0xFF8
 31767                           tblptrh	equ	0xFF7
 31768                           tblptrl	equ	0xFF6
 31769                           tablat	equ	0xFF5
 31770                           prodh	equ	0xFF4
 31771                           prodl	equ	0xFF3
 31772                           intcon	equ	0xFF2
 31773                           postinc0	equ	0xFEE
 31774                           plusw0	equ	0xFEB
 31775                           fsr0h	equ	0xFEA
 31776                           fsr0l	equ	0xFE9
 31777                           wreg	equ	0xFE8
 31778                           indf1	equ	0xFE7
 31779                           postinc1	equ	0xFE6
 31780                           postdec1	equ	0xFE5
 31781                           plusw1	equ	0xFE3
 31782                           fsr1h	equ	0xFE2
 31783                           fsr1l	equ	0xFE1
 31784                           indf2	equ	0xFDF
 31785                           postinc2	equ	0xFDE
 31786                           postdec2	equ	0xFDD
 31787                           plusw2	equ	0xFDB
 31788                           fsr2h	equ	0xFDA
 31789                           fsr2l	equ	0xFD9
 31790                           status	equ	0xFD8
 31791                           
 31792 ;; *************** function _SPIPut *****************
 31793 ;; Defined at:
 31794 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 31795 ;; Parameters:    Size  Location     Type
 31796 ;;  v               1    wreg     unsigned char 
 31797 ;; Auto vars:     Size  Location     Type
 31798 ;;  v               1    0[BANK0 ] unsigned char 
 31799 ;;  i               1    1[BANK0 ] volatile unsigned char 
 31800 ;; Return value:  Size  Location     Type
 31801 ;;                  1    wreg      void 
 31802 ;; Registers used:
 31803 ;;		wreg
 31804 ;; Tracked objects:
 31805 ;;		On entry : 0/0
 31806 ;;		On exit  : 0/0
 31807 ;;		Unchanged: 0/0
 31808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31810 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;Total ram usage:        2 bytes
 31814 ;; Hardware stack levels used:    1
 31815 ;; Hardware stack levels required when called:    4
 31816 ;; This function calls:
 31817 ;;		Nothing
 31818 ;; This function is called by:
 31819 ;;		_SPIGet
 31820 ;;		_PHYSetLongRAMAddr
 31821 ;;		_PHYSetShortRAMAddr
 31822 ;;		_PHYGetShortRAMAddr
 31823 ;;		_PHYGetLongRAMAddr
 31824 ;; This function uses a non-reentrant model
 31825 ;;
 31826                           
 31827                           	psect	text152
 31828  007A7A                     __ptext152:
 31829                           	opt stack 0
 31830  007A7A                     _SPIPut:
 31831                           	opt stack 18
 31832                           
 31833                           ;incstack = 0
 31834                           ;SPIPut@v stored from wreg
 31835  007A7A  0100               	movlb	0	; () banked
 31836  007A7C  6F60               	movwf	SPIPut@v& (0+255),b
 31837                           
 31838                           ;spi.c: 228: volatile uint8_t i;
 31839                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 31840  007A7E  969E               	bcf	3998,3,c	;volatile
 31841                           
 31842                           ;spi.c: 254: i = SSPBUF;
 31843  007A80  CFC9 F061          	movff	4041,SPIPut@i	;volatile
 31844  007A84                     l78:
 31845                           
 31846                           ;spi.c: 256: {
 31847                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 31848  007A84  9EC6               	bcf	4038,7,c	;volatile
 31849                           
 31850                           ;spi.c: 258: SSPBUF = v;
 31851  007A86  C060  FFC9         	movff	SPIPut@v,4041	;volatile
 31852                           
 31853                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 31854  007A8A  BEC6               	btfsc	4038,7,c	;volatile
 31855  007A8C  D7FB               	goto	l78
 31856  007A8E                     l80:
 31857  007A8E  B69E               	btfsc	3998,3,c	;volatile
 31858  007A90  0012               	return		;funcret
 31859  007A92  D7FD               	goto	l80
 31860  007A94                     __end_of_SPIPut:
 31861                           	opt stack 0
 31862                           tblptru	equ	0xFF8
 31863                           tblptrh	equ	0xFF7
 31864                           tblptrl	equ	0xFF6
 31865                           tablat	equ	0xFF5
 31866                           prodh	equ	0xFF4
 31867                           prodl	equ	0xFF3
 31868                           intcon	equ	0xFF2
 31869                           postinc0	equ	0xFEE
 31870                           plusw0	equ	0xFEB
 31871                           fsr0h	equ	0xFEA
 31872                           fsr0l	equ	0xFE9
 31873                           wreg	equ	0xFE8
 31874                           indf1	equ	0xFE7
 31875                           postinc1	equ	0xFE6
 31876                           postdec1	equ	0xFE5
 31877                           plusw1	equ	0xFE3
 31878                           fsr1h	equ	0xFE2
 31879                           fsr1l	equ	0xFE1
 31880                           indf2	equ	0xFDF
 31881                           postinc2	equ	0xFDE
 31882                           postdec2	equ	0xFDD
 31883                           plusw2	equ	0xFDB
 31884                           fsr2h	equ	0xFDA
 31885                           fsr2l	equ	0xFD9
 31886                           status	equ	0xFD8
 31887                           
 31888 ;; *************** function _LEDManagerTask *****************
 31889 ;; Defined at:
 31890 ;;		line 498 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
 31891 ;; Parameters:    Size  Location     Type
 31892 ;;		None
 31893 ;; Auto vars:     Size  Location     Type
 31894 ;;  i               2   30[BANK0 ] unsigned int 
 31895 ;; Return value:  Size  Location     Type
 31896 ;;                  1    wreg      void 
 31897 ;; Registers used:
 31898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31899 ;; Tracked objects:
 31900 ;;		On entry : F/0
 31901 ;;		On exit  : F/0
 31902 ;;		Unchanged: 0/0
 31903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31906 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31907 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31908 ;;Total ram usage:       12 bytes
 31909 ;; Hardware stack levels used:    1
 31910 ;; Hardware stack levels required when called:    6
 31911 ;; This function calls:
 31912 ;;		_MiWi_TickGetMs
 31913 ;; This function is called by:
 31914 ;;		_main
 31915 ;; This function uses a non-reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text153
 31919  001D24                     __ptext153:
 31920                           	opt stack 0
 31921  001D24                     _LEDManagerTask:
 31922                           	opt stack 24
 31923                           
 31924                           ; BSR set to: 0
 31925                           ;system.c: 500: uint16_t i;
 31926                           ;system.c: 501: static LEDState_t lNextState[LEDCount];
 31927                           ;system.c: 502: static MIWI_TICK tStart[LEDCount];
 31928                           ;system.c: 504: for(i=0;i<LEDCount;i++)
 31929                           
 31930                           ;incstack = 0
 31931  001D24  6B7E               	clrf	LEDManagerTask@i& (0+255),b
 31932  001D26  6B7F               	clrf	(LEDManagerTask@i+1)& (0+255),b
 31933  001D28  D186               	goto	l15007
 31934  001D2A                     l14887:
 31935                           
 31936                           ; BSR set to: 0
 31937                           ;system.c: 509: if(i==0){LATCbits.LATC2=0;}else if(i==1){LATAbits.LATA6=0;}else{LATAbits
      +                          .LATA7=0;};
 31938  001D2A  517E               	movf	LEDManagerTask@i& (0+255),w,b
 31939  001D2C  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31940  001D2E  E102               	bnz	l14891
 31941                           
 31942                           ; BSR set to: 0
 31943  001D30  948B               	bcf	3979,2,c	;volatile
 31944  001D32  D006               	goto	l14895
 31945  001D34                     l14891:
 31946                           
 31947                           ; BSR set to: 0
 31948  001D34  057E               	decf	LEDManagerTask@i& (0+255),w,b
 31949  001D36  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 31950  001D38  E102               	bnz	l252
 31951                           
 31952                           ; BSR set to: 0
 31953  001D3A  9C89               	bcf	3977,6,c	;volatile
 31954  001D3C  D001               	goto	l14895
 31955  001D3E                     l252:
 31956                           
 31957                           ; BSR set to: 0
 31958  001D3E  9E89               	bcf	3977,7,c	;volatile
 31959  001D40                     l14895:
 31960                           
 31961                           ; BSR set to: 0
 31962                           ;system.c: 510: LEDState[i]=LED_Off;
 31963  001D40  0ED9               	movlw	low _LEDState
 31964  001D42  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 31965  001D44  6ED9               	movwf	fsr2l,c
 31966  001D46  0E01               	movlw	high _LEDState
 31967  001D48  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31968  001D4A  6EDA               	movwf	fsr2h,c
 31969  001D4C  0E01               	movlw	1
 31970  001D4E  D064               	goto	L27
 31971  001D50                     l14897:
 31972                           
 31973                           ; BSR set to: 0
 31974                           ;system.c: 514: if(LEDCmd[i]==lCMD_On)
 31975  001D50  517E               	movf	LEDManagerTask@i& (0+255),w,b
 31976  001D52  0F36               	addlw	low _LEDCmd
 31977  001D54  6ED9               	movwf	fsr2l,c
 31978  001D56  6ADA               	clrf	fsr2h,c
 31979  001D58  0E02               	movlw	2
 31980  001D5A  18DE               	xorwf	postinc2,w,c
 31981  001D5C  E10A               	bnz	l14909
 31982  001D5E  D04D               	goto	L34
 31983  001D60                     l259:
 31984                           
 31985                           ; BSR set to: 0
 31986  001D60  8E89               	bsf	3977,7,c	;volatile
 31987  001D62                     l14907:
 31988                           
 31989                           ; BSR set to: 0
 31990                           ;system.c: 517: LEDState[i]=LED_On;
 31991  001D62  0ED9               	movlw	low _LEDState
 31992  001D64  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 31993  001D66  6ED9               	movwf	fsr2l,c
 31994  001D68  0E01               	movlw	high _LEDState
 31995  001D6A  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 31996  001D6C  6EDA               	movwf	fsr2h,c
 31997  001D6E  0E05               	movlw	5
 31998  001D70  D111               	goto	L28
 31999  001D72                     l14909:
 32000                           
 32001                           ; BSR set to: 0
 32002  001D72  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32003  001D74  0F36               	addlw	low _LEDCmd
 32004  001D76  6ED9               	movwf	fsr2l,c
 32005  001D78  6ADA               	clrf	fsr2h,c
 32006  001D7A  0E03               	movlw	3
 32007  001D7C  18DE               	xorwf	postinc2,w,c
 32008  001D7E  E136               	bnz	l14925
 32009                           
 32010                           ; BSR set to: 0
 32011                           ;system.c: 519: {
 32012                           ;system.c: 520: tStart[i]=MiWi_TickGetMs();
 32013  001D80  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 32014  001D84  0E00               	movlw	low LEDManagerTask@tStart
 32015  001D86  6F74               	movwf	??_LEDManagerTask& (0+255),b
 32016  001D88  0E02               	movlw	high LEDManagerTask@tStart
 32017  001D8A  6F75               	movwf	(??_LEDManagerTask+1)& (0+255),b
 32018  001D8C  90D8               	bcf	status,0,c
 32019  001D8E  357E               	rlcf	LEDManagerTask@i& (0+255),w,b
 32020  001D90  6ED9               	movwf	fsr2l,c
 32021  001D92  357F               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 32022  001D94  6EDA               	movwf	fsr2h,c
 32023  001D96  90D8               	bcf	status,0,c
 32024  001D98  36D9               	rlcf	fsr2l,f,c
 32025  001D9A  36DA               	rlcf	fsr2h,f,c
 32026  001D9C  5174               	movf	??_LEDManagerTask& (0+255),w,b
 32027  001D9E  26D9               	addwf	fsr2l,f,c
 32028  001DA0  5175               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 32029  001DA2  22DA               	addwfc	fsr2h,f,c
 32030  001DA4  C06C  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 32031  001DA8  C06D  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 32032  001DAC  C06E  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 32033  001DB0  C06F  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 32034                           
 32035                           ; BSR set to: 0
 32036                           ;system.c: 521: LEDState[i]=LED_DelayActive;
 32037  001DB4  0ED9               	movlw	low _LEDState
 32038  001DB6  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32039  001DB8  6ED9               	movwf	fsr2l,c
 32040  001DBA  0E01               	movlw	high _LEDState
 32041  001DBC  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32042  001DBE  6EDA               	movwf	fsr2h,c
 32043  001DC0  0E03               	movlw	3
 32044  001DC2  6EDF               	movwf	indf2,c
 32045                           
 32046                           ; BSR set to: 0
 32047                           ;system.c: 522: lNextState[i]=LED_Off;
 32048  001DC4  0E54               	movlw	low LEDManagerTask@lNextState
 32049  001DC6  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32050  001DC8  6ED9               	movwf	fsr2l,c
 32051  001DCA  0E02               	movlw	high LEDManagerTask@lNextState
 32052  001DCC  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32053  001DCE  6EDA               	movwf	fsr2h,c
 32054  001DD0  0E01               	movlw	1
 32055  001DD2  6EDF               	movwf	indf2,c
 32056                           
 32057                           ; BSR set to: 0
 32058                           ;system.c: 523: if(i==0){LATCbits.LATC2=1;}else if(i==1){LATAbits.LATA6=1;}else{LATAbits
      +                          .LATA7=1;};
 32059  001DD4  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32060  001DD6  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32061  001DD8  E102               	bnz	l14921
 32062                           
 32063                           ; BSR set to: 0
 32064  001DDA  848B               	bsf	3979,2,c	;volatile
 32065  001DDC  D018               	goto	l261
 32066  001DDE                     l14921:
 32067                           
 32068                           ; BSR set to: 0
 32069  001DDE  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32070  001DE0  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32071  001DE2  E102               	bnz	l265
 32072                           
 32073                           ; BSR set to: 0
 32074  001DE4  8C89               	bsf	3977,6,c	;volatile
 32075  001DE6  D013               	goto	l261
 32076  001DE8                     l265:
 32077                           
 32078                           ; BSR set to: 0
 32079  001DE8  8E89               	bsf	3977,7,c	;volatile
 32080  001DEA  D011               	goto	l261
 32081  001DEC                     l14925:
 32082                           
 32083                           ; BSR set to: 0
 32084  001DEC  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32085  001DEE  0F36               	addlw	low _LEDCmd
 32086  001DF0  6ED9               	movwf	fsr2l,c
 32087  001DF2  6ADA               	clrf	fsr2h,c
 32088  001DF4  0E04               	movlw	4
 32089  001DF6  18DE               	xorwf	postinc2,w,c
 32090  001DF8  E10A               	bnz	l261
 32091  001DFA                     L34:
 32092                           
 32093                           ; BSR set to: 0
 32094                           ;system.c: 525: {
 32095                           ;system.c: 526: if(i==0){LATCbits.LATC2=1;}else if(i==1){LATAbits.LATA6=1;}else{LATAbits
      +                          .LATA7=1;};
 32096  001DFA  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32097  001DFC  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32098  001DFE  E102               	bnz	l14931
 32099                           
 32100                           ; BSR set to: 0
 32101  001E00  848B               	bsf	3979,2,c	;volatile
 32102  001E02  D7AF               	goto	l14907
 32103  001E04                     l14931:
 32104                           
 32105                           ; BSR set to: 0
 32106  001E04  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32107  001E06  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32108  001E08  E1AB               	bnz	l259
 32109                           
 32110                           ; BSR set to: 0
 32111  001E0A  8C89               	bsf	3977,6,c	;volatile
 32112  001E0C  D7AA               	goto	l14907
 32113  001E0E                     l261:
 32114                           
 32115                           ; BSR set to: 0
 32116                           ;system.c: 528: }
 32117                           ;system.c: 529: LEDCmd[i]=lCMD_None;
 32118  001E0E  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32119  001E10  0F36               	addlw	low _LEDCmd
 32120  001E12  6ED9               	movwf	fsr2l,c
 32121  001E14  6ADA               	clrf	fsr2h,c
 32122  001E16  0E00               	movlw	0
 32123  001E18                     L27:
 32124  001E18  6EDF               	movwf	indf2,c
 32125                           
 32126                           ;system.c: 530: break;
 32127  001E1A  D121               	goto	l15009
 32128  001E1C                     l14937:
 32129                           
 32130                           ; BSR set to: 0
 32131                           ;system.c: 533: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 32132  001E1C  0E00               	movlw	low LEDManagerTask@tStart
 32133  001E1E  6F74               	movwf	??_LEDManagerTask& (0+255),b
 32134  001E20  0E02               	movlw	high LEDManagerTask@tStart
 32135  001E22  6F75               	movwf	(??_LEDManagerTask+1)& (0+255),b
 32136  001E24  90D8               	bcf	status,0,c
 32137  001E26  357E               	rlcf	LEDManagerTask@i& (0+255),w,b
 32138  001E28  6ED9               	movwf	fsr2l,c
 32139  001E2A  357F               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 32140  001E2C  6EDA               	movwf	fsr2h,c
 32141  001E2E  90D8               	bcf	status,0,c
 32142  001E30  36D9               	rlcf	fsr2l,f,c
 32143  001E32  36DA               	rlcf	fsr2h,f,c
 32144  001E34  5174               	movf	??_LEDManagerTask& (0+255),w,b
 32145  001E36  26D9               	addwf	fsr2l,f,c
 32146  001E38  5175               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 32147  001E3A  22DA               	addwfc	fsr2h,f,c
 32148  001E3C  CFDE F076          	movff	postinc2,??_LEDManagerTask+2
 32149  001E40  CFDE F077          	movff	postinc2,??_LEDManagerTask+3
 32150  001E44  CFDE F078          	movff	postinc2,??_LEDManagerTask+4
 32151  001E48  CFDE F079          	movff	postinc2,??_LEDManagerTask+5
 32152  001E4C  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 32153  001E50  5176               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 32154  001E52  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 32155  001E54  6F7A               	movwf	(??_LEDManagerTask+6)& (0+255),b
 32156  001E56  5177               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 32157  001E58  596D               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 32158  001E5A  6F7B               	movwf	(??_LEDManagerTask+7)& (0+255),b
 32159  001E5C  5178               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 32160  001E5E  596E               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 32161  001E60  6F7C               	movwf	(??_LEDManagerTask+8)& (0+255),b
 32162  001E62  5179               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 32163  001E64  596F               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 32164  001E66  6F7D               	movwf	(??_LEDManagerTask+9)& (0+255),b
 32165  001E68  517D               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 32166  001E6A  117C               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 32167  001E6C  117B               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 32168  001E6E  E104               	bnz	u22980
 32169  001E70  0E15               	movlw	21
 32170  001E72  5D7A               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 32171  001E74  E201 D0F3          	bnc	l15009
 32172  001E78                     u22980:
 32173                           
 32174                           ; BSR set to: 0
 32175                           ;system.c: 534: {
 32176                           ;system.c: 535: LEDState[i]=LED_DelayInactive;
 32177  001E78  0ED9               	movlw	low _LEDState
 32178  001E7A  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32179  001E7C  6ED9               	movwf	fsr2l,c
 32180  001E7E  0E01               	movlw	high _LEDState
 32181  001E80  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32182  001E82  6EDA               	movwf	fsr2h,c
 32183  001E84  0E04               	movlw	4
 32184  001E86  6EDF               	movwf	indf2,c
 32185                           
 32186                           ; BSR set to: 0
 32187                           ;system.c: 536: tStart[i]=MiWi_TickGetMs();
 32188  001E88  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 32189  001E8C  0E00               	movlw	low LEDManagerTask@tStart
 32190  001E8E  6F74               	movwf	??_LEDManagerTask& (0+255),b
 32191  001E90  0E02               	movlw	high LEDManagerTask@tStart
 32192  001E92  6F75               	movwf	(??_LEDManagerTask+1)& (0+255),b
 32193  001E94  90D8               	bcf	status,0,c
 32194  001E96  357E               	rlcf	LEDManagerTask@i& (0+255),w,b
 32195  001E98  6ED9               	movwf	fsr2l,c
 32196  001E9A  357F               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 32197  001E9C  6EDA               	movwf	fsr2h,c
 32198  001E9E  90D8               	bcf	status,0,c
 32199  001EA0  36D9               	rlcf	fsr2l,f,c
 32200  001EA2  36DA               	rlcf	fsr2h,f,c
 32201  001EA4  5174               	movf	??_LEDManagerTask& (0+255),w,b
 32202  001EA6  26D9               	addwf	fsr2l,f,c
 32203  001EA8  5175               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 32204  001EAA  22DA               	addwfc	fsr2h,f,c
 32205  001EAC  C06C  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 32206  001EB0  C06D  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 32207  001EB4  C06E  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 32208  001EB8  C06F  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 32209                           
 32210                           ; BSR set to: 0
 32211                           ;system.c: 537: if(lNextState[i]==LED_Off)
 32212  001EBC  0E54               	movlw	low LEDManagerTask@lNextState
 32213  001EBE  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32214  001EC0  6ED9               	movwf	fsr2l,c
 32215  001EC2  0E02               	movlw	high LEDManagerTask@lNextState
 32216  001EC4  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32217  001EC6  6EDA               	movwf	fsr2h,c
 32218  001EC8  04DE               	decf	postinc2,w,c
 32219  001ECA  E10C               	bnz	l14953
 32220                           
 32221                           ; BSR set to: 0
 32222                           ;system.c: 538: {
 32223                           ;system.c: 539: if(i==0){LATCbits.LATC2=0;}else if(i==1){LATAbits.LATA6=0;}else{LATAbits
      +                          .LATA7=0;};
 32224  001ECC  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32225  001ECE  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32226  001ED0  E102               	bnz	l14949
 32227                           
 32228                           ; BSR set to: 0
 32229  001ED2  948B               	bcf	3979,2,c	;volatile
 32230  001ED4  D0C4               	goto	l15009
 32231  001ED6                     l14949:
 32232                           
 32233                           ; BSR set to: 0
 32234  001ED6  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32235  001ED8  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32236  001EDA  E102               	bnz	l278
 32237                           
 32238                           ; BSR set to: 0
 32239  001EDC  9C89               	bcf	3977,6,c	;volatile
 32240  001EDE  D0BF               	goto	l15009
 32241  001EE0                     l278:
 32242                           
 32243                           ; BSR set to: 0
 32244  001EE0  9E89               	bcf	3977,7,c	;volatile
 32245  001EE2  D0BD               	goto	l15009
 32246  001EE4                     l14953:
 32247                           
 32248                           ; BSR set to: 0
 32249                           ;system.c: 541: {
 32250                           ;system.c: 542: if(i==0){LATCbits.LATC2=1;}else if(i==1){LATAbits.LATA6=1;}else{LATAbits
      +                          .LATA7=1;};
 32251  001EE4  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32252  001EE6  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32253  001EE8  E102               	bnz	l14957
 32254                           
 32255                           ; BSR set to: 0
 32256  001EEA  848B               	bsf	3979,2,c	;volatile
 32257  001EEC  D0B8               	goto	l15009
 32258  001EEE                     l14957:
 32259                           
 32260                           ; BSR set to: 0
 32261  001EEE  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32262  001EF0  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32263  001EF2  E102               	bnz	l283
 32264                           
 32265                           ; BSR set to: 0
 32266  001EF4  8C89               	bsf	3977,6,c	;volatile
 32267  001EF6  D0B3               	goto	l15009
 32268  001EF8                     l283:
 32269                           
 32270                           ; BSR set to: 0
 32271  001EF8  8E89               	bsf	3977,7,c	;volatile
 32272  001EFA  D0B1               	goto	l15009
 32273  001EFC                     l14961:
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;system.c: 548: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 32277  001EFC  0E00               	movlw	low LEDManagerTask@tStart
 32278  001EFE  6F74               	movwf	??_LEDManagerTask& (0+255),b
 32279  001F00  0E02               	movlw	high LEDManagerTask@tStart
 32280  001F02  6F75               	movwf	(??_LEDManagerTask+1)& (0+255),b
 32281  001F04  90D8               	bcf	status,0,c
 32282  001F06  357E               	rlcf	LEDManagerTask@i& (0+255),w,b
 32283  001F08  6ED9               	movwf	fsr2l,c
 32284  001F0A  357F               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 32285  001F0C  6EDA               	movwf	fsr2h,c
 32286  001F0E  90D8               	bcf	status,0,c
 32287  001F10  36D9               	rlcf	fsr2l,f,c
 32288  001F12  36DA               	rlcf	fsr2h,f,c
 32289  001F14  5174               	movf	??_LEDManagerTask& (0+255),w,b
 32290  001F16  26D9               	addwf	fsr2l,f,c
 32291  001F18  5175               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 32292  001F1A  22DA               	addwfc	fsr2h,f,c
 32293  001F1C  CFDE F076          	movff	postinc2,??_LEDManagerTask+2
 32294  001F20  CFDE F077          	movff	postinc2,??_LEDManagerTask+3
 32295  001F24  CFDE F078          	movff	postinc2,??_LEDManagerTask+4
 32296  001F28  CFDE F079          	movff	postinc2,??_LEDManagerTask+5
 32297  001F2C  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 32298  001F30  5176               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 32299  001F32  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 32300  001F34  6F7A               	movwf	(??_LEDManagerTask+6)& (0+255),b
 32301  001F36  5177               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 32302  001F38  596D               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 32303  001F3A  6F7B               	movwf	(??_LEDManagerTask+7)& (0+255),b
 32304  001F3C  5178               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 32305  001F3E  596E               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 32306  001F40  6F7C               	movwf	(??_LEDManagerTask+8)& (0+255),b
 32307  001F42  5179               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 32308  001F44  596F               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 32309  001F46  6F7D               	movwf	(??_LEDManagerTask+9)& (0+255),b
 32310  001F48  517D               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 32311  001F4A  117C               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 32312  001F4C  117B               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 32313  001F4E  E104               	bnz	u23040
 32314  001F50  0E15               	movlw	21
 32315  001F52  5D7A               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 32316  001F54  E201 D083          	bnc	l15009
 32317  001F58                     u23040:
 32318                           
 32319                           ; BSR set to: 0
 32320                           ;system.c: 549: {
 32321                           ;system.c: 550: LEDState[i]=lNextState[i];
 32322  001F58  0E54               	movlw	low LEDManagerTask@lNextState
 32323  001F5A  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32324  001F5C  6ED9               	movwf	fsr2l,c
 32325  001F5E  0E02               	movlw	high LEDManagerTask@lNextState
 32326  001F60  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32327  001F62  6EDA               	movwf	fsr2h,c
 32328  001F64  0ED9               	movlw	low _LEDState
 32329  001F66  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32330  001F68  6EE1               	movwf	fsr1l,c
 32331  001F6A  0E01               	movlw	high _LEDState
 32332  001F6C  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32333  001F6E  6EE2               	movwf	fsr1h,c
 32334  001F70  CFDF FFE7          	movff	indf2,indf1
 32335  001F74  D074               	goto	l15009
 32336  001F76                     l14965:
 32337                           
 32338                           ; BSR set to: 0
 32339                           ;system.c: 555: if(LEDCmd[i]==lCMD_Off)
 32340  001F76  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32341  001F78  0F36               	addlw	low _LEDCmd
 32342  001F7A  6ED9               	movwf	fsr2l,c
 32343  001F7C  6ADA               	clrf	fsr2h,c
 32344  001F7E  04DE               	decf	postinc2,w,c
 32345  001F80  E10B               	bnz	l14977
 32346  001F82  D04F               	goto	L35
 32347  001F84                     l291:
 32348                           
 32349                           ; BSR set to: 0
 32350  001F84  9E89               	bcf	3977,7,c	;volatile
 32351  001F86                     l14975:
 32352                           
 32353                           ; BSR set to: 0
 32354                           ;system.c: 558: LEDState[i]=LED_Off;
 32355  001F86  0ED9               	movlw	low _LEDState
 32356  001F88  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32357  001F8A  6ED9               	movwf	fsr2l,c
 32358  001F8C  0E01               	movlw	high _LEDState
 32359  001F8E  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32360  001F90  6EDA               	movwf	fsr2h,c
 32361  001F92  0E01               	movlw	1
 32362  001F94                     L28:
 32363  001F94  6EDF               	movwf	indf2,c
 32364                           
 32365                           ;system.c: 559: }else if(LEDCmd[i]==lCMD_Blink)
 32366  001F96  D73B               	goto	l261
 32367  001F98                     l14977:
 32368                           
 32369                           ; BSR set to: 0
 32370  001F98  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32371  001F9A  0F36               	addlw	low _LEDCmd
 32372  001F9C  6ED9               	movwf	fsr2l,c
 32373  001F9E  6ADA               	clrf	fsr2h,c
 32374  001FA0  0E03               	movlw	3
 32375  001FA2  18DE               	xorwf	postinc2,w,c
 32376  001FA4  E136               	bnz	l14993
 32377                           
 32378                           ; BSR set to: 0
 32379                           ;system.c: 560: {
 32380                           ;system.c: 561: tStart[i]=MiWi_TickGetMs();
 32381  001FA6  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 32382  001FAA  0E00               	movlw	low LEDManagerTask@tStart
 32383  001FAC  6F74               	movwf	??_LEDManagerTask& (0+255),b
 32384  001FAE  0E02               	movlw	high LEDManagerTask@tStart
 32385  001FB0  6F75               	movwf	(??_LEDManagerTask+1)& (0+255),b
 32386  001FB2  90D8               	bcf	status,0,c
 32387  001FB4  357E               	rlcf	LEDManagerTask@i& (0+255),w,b
 32388  001FB6  6ED9               	movwf	fsr2l,c
 32389  001FB8  357F               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 32390  001FBA  6EDA               	movwf	fsr2h,c
 32391  001FBC  90D8               	bcf	status,0,c
 32392  001FBE  36D9               	rlcf	fsr2l,f,c
 32393  001FC0  36DA               	rlcf	fsr2h,f,c
 32394  001FC2  5174               	movf	??_LEDManagerTask& (0+255),w,b
 32395  001FC4  26D9               	addwf	fsr2l,f,c
 32396  001FC6  5175               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 32397  001FC8  22DA               	addwfc	fsr2h,f,c
 32398  001FCA  C06C  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 32399  001FCE  C06D  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 32400  001FD2  C06E  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 32401  001FD6  C06F  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 32402                           
 32403                           ; BSR set to: 0
 32404                           ;system.c: 562: LEDState[i]=LED_DelayActive;
 32405  001FDA  0ED9               	movlw	low _LEDState
 32406  001FDC  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32407  001FDE  6ED9               	movwf	fsr2l,c
 32408  001FE0  0E01               	movlw	high _LEDState
 32409  001FE2  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32410  001FE4  6EDA               	movwf	fsr2h,c
 32411  001FE6  0E03               	movlw	3
 32412  001FE8  6EDF               	movwf	indf2,c
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;system.c: 563: lNextState[i]=LED_On;
 32416  001FEA  0E54               	movlw	low LEDManagerTask@lNextState
 32417  001FEC  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32418  001FEE  6ED9               	movwf	fsr2l,c
 32419  001FF0  0E02               	movlw	high LEDManagerTask@lNextState
 32420  001FF2  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32421  001FF4  6EDA               	movwf	fsr2h,c
 32422  001FF6  0E05               	movlw	5
 32423  001FF8  6EDF               	movwf	indf2,c
 32424                           
 32425                           ; BSR set to: 0
 32426                           ;system.c: 564: if(i==0){LATCbits.LATC2=0;}else if(i==1){LATAbits.LATA6=0;}else{LATAbits
      +                          .LATA7=0;};
 32427  001FFA  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32428  001FFC  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32429  001FFE  E102               	bnz	l14989
 32430                           
 32431                           ; BSR set to: 0
 32432  002000  948B               	bcf	3979,2,c	;volatile
 32433  002002  D705               	goto	l261
 32434  002004                     l14989:
 32435                           
 32436                           ; BSR set to: 0
 32437  002004  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32438  002006  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32439  002008  E102               	bnz	l297
 32440                           
 32441                           ; BSR set to: 0
 32442  00200A  9C89               	bcf	3977,6,c	;volatile
 32443  00200C  D700               	goto	l261
 32444  00200E                     l297:
 32445                           
 32446                           ; BSR set to: 0
 32447  00200E  9E89               	bcf	3977,7,c	;volatile
 32448  002010  D6FE               	goto	l261
 32449  002012                     l14993:
 32450                           
 32451                           ; BSR set to: 0
 32452  002012  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32453  002014  0F36               	addlw	low _LEDCmd
 32454  002016  6ED9               	movwf	fsr2l,c
 32455  002018  6ADA               	clrf	fsr2h,c
 32456  00201A  0E04               	movlw	4
 32457  00201C  18DE               	xorwf	postinc2,w,c
 32458  00201E  E001 D6F6          	bnz	l261
 32459  002022                     L35:
 32460                           
 32461                           ; BSR set to: 0
 32462                           ;system.c: 566: {
 32463                           ;system.c: 567: if(i==0){LATCbits.LATC2=0;}else if(i==1){LATAbits.LATA6=0;}else{LATAbits
      +                          .LATA7=0;};
 32464  002022  517E               	movf	LEDManagerTask@i& (0+255),w,b
 32465  002024  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32466  002026  E102               	bnz	l14999
 32467                           
 32468                           ; BSR set to: 0
 32469  002028  948B               	bcf	3979,2,c	;volatile
 32470  00202A  D7AD               	goto	l14975
 32471  00202C                     l14999:
 32472                           
 32473                           ; BSR set to: 0
 32474  00202C  057E               	decf	LEDManagerTask@i& (0+255),w,b
 32475  00202E  117F               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 32476  002030  E1A9               	bnz	l291
 32477                           
 32478                           ; BSR set to: 0
 32479  002032  9C89               	bcf	3977,6,c	;volatile
 32480  002034  D7A8               	goto	l14975
 32481  002036                     l15007:
 32482                           
 32483                           ; BSR set to: 0
 32484  002036  0ED9               	movlw	low _LEDState
 32485  002038  257E               	addwf	LEDManagerTask@i& (0+255),w,b
 32486  00203A  6ED9               	movwf	fsr2l,c
 32487  00203C  0E01               	movlw	high _LEDState
 32488  00203E  217F               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 32489  002040  6EDA               	movwf	fsr2h,c
 32490  002042  50DF               	movf	indf2,w,c
 32491                           
 32492                           ; Switch size 1, requested type "speed"
 32493                           ; Number of cases is 5, Range of values is 0 to 5
 32494                           ; switch strategies available:
 32495                           ; Name         Instructions Cycles
 32496                           ; simple_byte           16     9 (average)
 32497                           ;	Chosen strategy is simple_byte
 32498  002044  E101 D671          	bz	l14887
 32499  002048  0A01               	xorlw	1	; case 1
 32500  00204A  E101 D681          	bz	l14897
 32501  00204E  0A02               	xorlw	2	; case 3
 32502  002050  E101 D6E4          	bz	l14937
 32503  002054  0A07               	xorlw	7	; case 4
 32504  002056  E101 D751          	bz	l14961
 32505  00205A  0A01               	xorlw	1	; case 5
 32506  00205C  E08C               	bz	l14965
 32507  00205E                     l15009:
 32508                           
 32509                           ; BSR set to: 0
 32510  00205E  4B7E               	infsnz	LEDManagerTask@i& (0+255),f,b
 32511  002060  2B7F               	incf	(LEDManagerTask@i+1)& (0+255),f,b
 32512                           
 32513                           ; BSR set to: 0
 32514  002062  517F               	movf	(LEDManagerTask@i+1)& (0+255),w,b
 32515  002064  E103               	bnz	u23140
 32516  002066  0E03               	movlw	3
 32517  002068  5D7E               	subwf	LEDManagerTask@i& (0+255),w,b
 32518  00206A  E3E5               	bnc	l15007
 32519  00206C                     u23140:
 32520                           
 32521                           ; BSR set to: 0
 32522  00206C  0012               	return		;funcret
 32523  00206E                     __end_of_LEDManagerTask:
 32524                           	opt stack 0
 32525                           tblptru	equ	0xFF8
 32526                           tblptrh	equ	0xFF7
 32527                           tblptrl	equ	0xFF6
 32528                           tablat	equ	0xFF5
 32529                           prodh	equ	0xFF4
 32530                           prodl	equ	0xFF3
 32531                           intcon	equ	0xFF2
 32532                           postinc0	equ	0xFEE
 32533                           plusw0	equ	0xFEB
 32534                           fsr0h	equ	0xFEA
 32535                           fsr0l	equ	0xFE9
 32536                           wreg	equ	0xFE8
 32537                           indf1	equ	0xFE7
 32538                           postinc1	equ	0xFE6
 32539                           postdec1	equ	0xFE5
 32540                           plusw1	equ	0xFE3
 32541                           fsr1h	equ	0xFE2
 32542                           fsr1l	equ	0xFE1
 32543                           indf2	equ	0xFDF
 32544                           postinc2	equ	0xFDE
 32545                           postdec2	equ	0xFDD
 32546                           plusw2	equ	0xFDB
 32547                           fsr2h	equ	0xFDA
 32548                           fsr2l	equ	0xFD9
 32549                           status	equ	0xFD8
 32550                           
 32551 ;; *************** function _LCDUpdate *****************
 32552 ;; Defined at:
 32553 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 32554 ;; Parameters:    Size  Location     Type
 32555 ;;		None
 32556 ;; Auto vars:     Size  Location     Type
 32557 ;;  i               1   20[BANK0 ] unsigned char 
 32558 ;; Return value:  Size  Location     Type
 32559 ;;                  1    wreg      void 
 32560 ;; Registers used:
 32561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32562 ;; Tracked objects:
 32563 ;;		On entry : 0/0
 32564 ;;		On exit  : F/0
 32565 ;;		Unchanged: 0/0
 32566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32571 ;;Total ram usage:        1 bytes
 32572 ;; Hardware stack levels used:    1
 32573 ;; Hardware stack levels required when called:    7
 32574 ;; This function calls:
 32575 ;;		_DelayUS
 32576 ;;		_LCDInit
 32577 ;;		_LCD_WriteCmd
 32578 ;;		_LCD_WriteData
 32579 ;; This function is called by:
 32580 ;;		_main
 32581 ;; This function uses a non-reentrant model
 32582 ;;
 32583                           
 32584                           	psect	text154
 32585  005E7A                     __ptext154:
 32586                           	opt stack 0
 32587  005E7A                     _LCDUpdate:
 32588                           	opt stack 23
 32589                           
 32590                           ;lcd.c: 118: uint8_t i;
 32591                           ;lcd.c: 119: if(lcdInitialized==0)
 32592                           
 32593                           ; BSR set to: 0
 32594                           ;incstack = 0
 32595  005E7A  5049               	movf	_lcdInitialized,w,c
 32596  005E7C  E104               	bnz	l14719
 32597                           
 32598                           ;lcd.c: 120: {
 32599                           ;lcd.c: 121: lcdInitialized=1;
 32600  005E7E  0E01               	movlw	1
 32601  005E80  6E49               	movwf	_lcdInitialized,c
 32602                           
 32603                           ;lcd.c: 122: LCDInit();
 32604  005E82  ECA9  F02A         	call	_LCDInit	;wreg free
 32605  005E86                     l14719:
 32606                           
 32607                           ;lcd.c: 123: }
 32608                           ;lcd.c: 124: LCD_WriteCmd(0x80 | 0x00);
 32609  005E86  0E80               	movlw	128
 32610  005E88  ECA5  F03D         	call	_LCD_WriteCmd
 32611                           
 32612                           ;lcd.c: 126: for(i = 0; i < 16; i++)
 32613  005E8C  0100               	movlb	0	; () banked
 32614  005E8E  6B74               	clrf	LCDUpdate@i& (0+255),b
 32615  005E90                     l14727:
 32616                           
 32617                           ; BSR set to: 0
 32618                           ;lcd.c: 127: {
 32619                           ;lcd.c: 128: DelayUS(10);
 32620  005E90  0E0A               	movlw	10
 32621  005E92  6F60               	movwf	DelayUS@delay& (0+255),b
 32622  005E94  6B61               	clrf	(DelayUS@delay+1)& (0+255),b
 32623  005E96  6B62               	clrf	(DelayUS@delay+2)& (0+255),b
 32624  005E98  6B63               	clrf	(DelayUS@delay+3)& (0+255),b
 32625  005E9A  EC4B  F03C         	call	_DelayUS	;wreg free
 32626                           
 32627                           ; BSR set to: 0
 32628                           ;lcd.c: 129: if( LCDText[i] == 0 )
 32629  005E9E  0EB9               	movlw	low _LCDText
 32630  005EA0  2574               	addwf	LCDUpdate@i& (0+255),w,b
 32631  005EA2  6ED9               	movwf	fsr2l,c
 32632  005EA4  6ADA               	clrf	fsr2h,c
 32633  005EA6  0E03               	movlw	high _LCDText
 32634  005EA8  22DA               	addwfc	fsr2h,f,c
 32635  005EAA  50DF               	movf	indf2,w,c
 32636  005EAC  E104               	bnz	l14733
 32637                           
 32638                           ; BSR set to: 0
 32639                           ;lcd.c: 130: {
 32640                           ;lcd.c: 131: LCD_WriteData(' ');
 32641  005EAE  0E20               	movlw	32
 32642  005EB0  EC9A  F03D         	call	_LCD_WriteData
 32643                           
 32644                           ;lcd.c: 132: }
 32645  005EB4  D009               	goto	l14735
 32646  005EB6                     l14733:
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;lcd.c: 133: else
 32650                           ;lcd.c: 134: {
 32651                           ;lcd.c: 135: LCD_WriteData(LCDText[i]);
 32652  005EB6  0EB9               	movlw	low _LCDText
 32653  005EB8  2574               	addwf	LCDUpdate@i& (0+255),w,b
 32654  005EBA  6ED9               	movwf	fsr2l,c
 32655  005EBC  6ADA               	clrf	fsr2h,c
 32656  005EBE  0E03               	movlw	high _LCDText
 32657  005EC0  22DA               	addwfc	fsr2h,f,c
 32658  005EC2  50DF               	movf	indf2,w,c
 32659  005EC4  EC9A  F03D         	call	_LCD_WriteData
 32660  005EC8                     l14735:
 32661  005EC8  0100               	movlb	0	; () banked
 32662  005ECA  2B74               	incf	LCDUpdate@i& (0+255),f,b
 32663                           
 32664                           ; BSR set to: 0
 32665  005ECC  0E0F               	movlw	15
 32666  005ECE  6574               	cpfsgt	LCDUpdate@i& (0+255),b
 32667  005ED0  D7DF               	goto	l14727
 32668                           
 32669                           ; BSR set to: 0
 32670                           ;lcd.c: 136: }
 32671                           ;lcd.c: 137: }
 32672                           ;lcd.c: 138: DelayUS(10);
 32673  005ED2  0E0A               	movlw	10
 32674  005ED4  6F60               	movwf	DelayUS@delay& (0+255),b
 32675  005ED6  6B61               	clrf	(DelayUS@delay+1)& (0+255),b
 32676  005ED8  6B62               	clrf	(DelayUS@delay+2)& (0+255),b
 32677  005EDA  6B63               	clrf	(DelayUS@delay+3)& (0+255),b
 32678  005EDC  EC4B  F03C         	call	_DelayUS	;wreg free
 32679                           
 32680                           ; BSR set to: 0
 32681                           ;lcd.c: 139: LCD_WriteCmd(0x80 | 0x40);
 32682  005EE0  0EC0               	movlw	192
 32683  005EE2  ECA5  F03D         	call	_LCD_WriteCmd
 32684                           
 32685                           ;lcd.c: 141: for(i = 16; i < 32; i++)
 32686  005EE6  0E10               	movlw	16
 32687  005EE8  0100               	movlb	0	; () banked
 32688  005EEA  6F74               	movwf	LCDUpdate@i& (0+255),b
 32689  005EEC                     l14747:
 32690                           
 32691                           ; BSR set to: 0
 32692                           ;lcd.c: 142: {
 32693                           ;lcd.c: 143: DelayUS(10);
 32694  005EEC  0E0A               	movlw	10
 32695  005EEE  6F60               	movwf	DelayUS@delay& (0+255),b
 32696  005EF0  6B61               	clrf	(DelayUS@delay+1)& (0+255),b
 32697  005EF2  6B62               	clrf	(DelayUS@delay+2)& (0+255),b
 32698  005EF4  6B63               	clrf	(DelayUS@delay+3)& (0+255),b
 32699  005EF6  EC4B  F03C         	call	_DelayUS	;wreg free
 32700                           
 32701                           ; BSR set to: 0
 32702                           ;lcd.c: 144: if( LCDText[i] == 0 )
 32703  005EFA  0EB9               	movlw	low _LCDText
 32704  005EFC  2574               	addwf	LCDUpdate@i& (0+255),w,b
 32705  005EFE  6ED9               	movwf	fsr2l,c
 32706  005F00  6ADA               	clrf	fsr2h,c
 32707  005F02  0E03               	movlw	high _LCDText
 32708  005F04  22DA               	addwfc	fsr2h,f,c
 32709  005F06  50DF               	movf	indf2,w,c
 32710  005F08  E104               	bnz	l14753
 32711                           
 32712                           ; BSR set to: 0
 32713                           ;lcd.c: 145: {
 32714                           ;lcd.c: 146: LCD_WriteData(' ');
 32715  005F0A  0E20               	movlw	32
 32716  005F0C  EC9A  F03D         	call	_LCD_WriteData
 32717                           
 32718                           ;lcd.c: 147: }
 32719  005F10  D009               	goto	l14755
 32720  005F12                     l14753:
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;lcd.c: 148: else
 32724                           ;lcd.c: 149: {
 32725                           ;lcd.c: 150: LCD_WriteData(LCDText[i]);
 32726  005F12  0EB9               	movlw	low _LCDText
 32727  005F14  2574               	addwf	LCDUpdate@i& (0+255),w,b
 32728  005F16  6ED9               	movwf	fsr2l,c
 32729  005F18  6ADA               	clrf	fsr2h,c
 32730  005F1A  0E03               	movlw	high _LCDText
 32731  005F1C  22DA               	addwfc	fsr2h,f,c
 32732  005F1E  50DF               	movf	indf2,w,c
 32733  005F20  EC9A  F03D         	call	_LCD_WriteData
 32734  005F24                     l14755:
 32735  005F24  0100               	movlb	0	; () banked
 32736  005F26  2B74               	incf	LCDUpdate@i& (0+255),f,b
 32737                           
 32738                           ; BSR set to: 0
 32739  005F28  0E1F               	movlw	31
 32740  005F2A  6574               	cpfsgt	LCDUpdate@i& (0+255),b
 32741  005F2C  D7DF               	goto	l14747
 32742  005F2E  0C1F               	retlw	31
 32743  005F30                     __end_of_LCDUpdate:
 32744                           	opt stack 0
 32745                           tblptru	equ	0xFF8
 32746                           tblptrh	equ	0xFF7
 32747                           tblptrl	equ	0xFF6
 32748                           tablat	equ	0xFF5
 32749                           prodh	equ	0xFF4
 32750                           prodl	equ	0xFF3
 32751                           intcon	equ	0xFF2
 32752                           postinc0	equ	0xFEE
 32753                           plusw0	equ	0xFEB
 32754                           fsr0h	equ	0xFEA
 32755                           fsr0l	equ	0xFE9
 32756                           wreg	equ	0xFE8
 32757                           indf1	equ	0xFE7
 32758                           postinc1	equ	0xFE6
 32759                           postdec1	equ	0xFE5
 32760                           plusw1	equ	0xFE3
 32761                           fsr1h	equ	0xFE2
 32762                           fsr1l	equ	0xFE1
 32763                           indf2	equ	0xFDF
 32764                           postinc2	equ	0xFDE
 32765                           postdec2	equ	0xFDD
 32766                           plusw2	equ	0xFDB
 32767                           fsr2h	equ	0xFDA
 32768                           fsr2l	equ	0xFD9
 32769                           status	equ	0xFD8
 32770                           
 32771 ;; *************** function _LCD_WriteData *****************
 32772 ;; Defined at:
 32773 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 32774 ;; Parameters:    Size  Location     Type
 32775 ;;  data            1    wreg     unsigned char 
 32776 ;; Auto vars:     Size  Location     Type
 32777 ;;  data            1    2[BANK0 ] unsigned char 
 32778 ;; Return value:  Size  Location     Type
 32779 ;;                  1    wreg      void 
 32780 ;; Registers used:
 32781 ;;		wreg, status,2, cstack
 32782 ;; Tracked objects:
 32783 ;;		On entry : F/0
 32784 ;;		On exit  : 0/0
 32785 ;;		Unchanged: 0/0
 32786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32791 ;;Total ram usage:        1 bytes
 32792 ;; Hardware stack levels used:    1
 32793 ;; Hardware stack levels required when called:    5
 32794 ;; This function calls:
 32795 ;;		_SPIPut2
 32796 ;; This function is called by:
 32797 ;;		_LCDUpdate
 32798 ;; This function uses a non-reentrant model
 32799 ;;
 32800                           
 32801                           	psect	text155
 32802  007B34                     __ptext155:
 32803                           	opt stack 0
 32804  007B34                     _LCD_WriteData:
 32805                           	opt stack 24
 32806                           
 32807                           ; BSR set to: 0
 32808                           ;incstack = 0
 32809                           ;LCD_WriteData@data stored from wreg
 32810  007B34  6F62               	movwf	LCD_WriteData@data& (0+255),b
 32811                           
 32812                           ;lcd.c: 45: GIE=0;
 32813  007B36  9EF2               	bcf	intcon,7,c	;volatile
 32814                           
 32815                           ;lcd.c: 46: LATDbits.LATD7 = 0;
 32816  007B38  9E8C               	bcf	3980,7,c	;volatile
 32817                           
 32818                           ;lcd.c: 47: LATDbits.LATD3 = 1;
 32819  007B3A  868C               	bsf	3980,3,c	;volatile
 32820                           
 32821                           ;lcd.c: 49: SPIPut2(data);
 32822  007B3C  0100               	movlb	0	; () banked
 32823  007B3E  5162               	movf	LCD_WriteData@data& (0+255),w,b
 32824  007B40  EC62  F03D         	call	_SPIPut2
 32825                           
 32826                           ;lcd.c: 51: LATDbits.LATD7 = 1;
 32827  007B44  8E8C               	bsf	3980,7,c	;volatile
 32828                           
 32829                           ;lcd.c: 52: GIE=1;
 32830  007B46  8EF2               	bsf	intcon,7,c	;volatile
 32831  007B48  0012               	return		;funcret
 32832  007B4A                     __end_of_LCD_WriteData:
 32833                           	opt stack 0
 32834                           tblptru	equ	0xFF8
 32835                           tblptrh	equ	0xFF7
 32836                           tblptrl	equ	0xFF6
 32837                           tablat	equ	0xFF5
 32838                           prodh	equ	0xFF4
 32839                           prodl	equ	0xFF3
 32840                           intcon	equ	0xFF2
 32841                           postinc0	equ	0xFEE
 32842                           plusw0	equ	0xFEB
 32843                           fsr0h	equ	0xFEA
 32844                           fsr0l	equ	0xFE9
 32845                           wreg	equ	0xFE8
 32846                           indf1	equ	0xFE7
 32847                           postinc1	equ	0xFE6
 32848                           postdec1	equ	0xFE5
 32849                           plusw1	equ	0xFE3
 32850                           fsr1h	equ	0xFE2
 32851                           fsr1l	equ	0xFE1
 32852                           indf2	equ	0xFDF
 32853                           postinc2	equ	0xFDE
 32854                           postdec2	equ	0xFDD
 32855                           plusw2	equ	0xFDB
 32856                           fsr2h	equ	0xFDA
 32857                           fsr2l	equ	0xFD9
 32858                           status	equ	0xFD8
 32859                           
 32860 ;; *************** function _LCDInit *****************
 32861 ;; Defined at:
 32862 ;;		line 55 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 32863 ;; Parameters:    Size  Location     Type
 32864 ;;		None
 32865 ;; Auto vars:     Size  Location     Type
 32866 ;;		None
 32867 ;; Return value:  Size  Location     Type
 32868 ;;                  1    wreg      void 
 32869 ;; Registers used:
 32870 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32871 ;; Tracked objects:
 32872 ;;		On entry : 0/0
 32873 ;;		On exit  : F/0
 32874 ;;		Unchanged: 0/0
 32875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32880 ;;Total ram usage:        0 bytes
 32881 ;; Hardware stack levels used:    1
 32882 ;; Hardware stack levels required when called:    6
 32883 ;; This function calls:
 32884 ;;		_DelayMs
 32885 ;;		_LCD_WriteCmd
 32886 ;; This function is called by:
 32887 ;;		_LCDUpdate
 32888 ;; This function uses a non-reentrant model
 32889 ;;
 32890                           
 32891                           	psect	text156
 32892  005552                     __ptext156:
 32893                           	opt stack 0
 32894  005552                     _LCDInit:
 32895                           	opt stack 23
 32896                           
 32897                           ;lcd.c: 57: LATEbits.LATE1 = 0;
 32898                           
 32899                           ;incstack = 0
 32900  005552  928D               	bcf	3981,1,c	;volatile
 32901                           
 32902                           ;lcd.c: 58: LATDbits.LATD7 = 1;
 32903  005554  8E8C               	bsf	3980,7,c	;volatile
 32904                           
 32905                           ;lcd.c: 59: LATDbits.LATD3 = 0;
 32906  005556  968C               	bcf	3980,3,c	;volatile
 32907                           
 32908                           ;lcd.c: 60: LATEbits.LATE0 = 0;
 32909  005558  908D               	bcf	3981,0,c	;volatile
 32910                           
 32911                           ;lcd.c: 61: TRISEbits.TRISE1 = 0;
 32912  00555A  9296               	bcf	3990,1,c	;volatile
 32913                           
 32914                           ;lcd.c: 62: TRISDbits.TRISD7 = 0;
 32915  00555C  9E95               	bcf	3989,7,c	;volatile
 32916                           
 32917                           ;lcd.c: 63: TRISDbits.TRISD3 = 0;
 32918  00555E  9695               	bcf	3989,3,c	;volatile
 32919                           
 32920                           ;lcd.c: 64: TRISEbits.TRISE0 = 0;
 32921  005560  9096               	bcf	3990,0,c	;volatile
 32922                           
 32923                           ;lcd.c: 66: LATEbits.LATE0 = 0;
 32924  005562  908D               	bcf	3981,0,c	;volatile
 32925                           
 32926                           ;lcd.c: 67: DelayMs(2);
 32927  005564  0E02               	movlw	2
 32928  005566  0100               	movlb	0	; () banked
 32929  005568  6F68               	movwf	DelayMs@ms& (0+255),b
 32930  00556A  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32931  00556C  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32932  00556E  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 32933  005570  ECD0  F031         	call	_DelayMs	;wreg free
 32934                           
 32935                           ; BSR set to: 0
 32936                           ;lcd.c: 68: LATEbits.LATE0 = 1;
 32937  005574  808D               	bsf	3981,0,c	;volatile
 32938                           
 32939                           ;lcd.c: 69: DelayMs(2);
 32940  005576  0E02               	movlw	2
 32941  005578  6F68               	movwf	DelayMs@ms& (0+255),b
 32942  00557A  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32943  00557C  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32944  00557E  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 32945  005580  ECD0  F031         	call	_DelayMs	;wreg free
 32946                           
 32947                           ; BSR set to: 0
 32948                           ;lcd.c: 70: LCD_WriteCmd(0x30);
 32949  005584  0E30               	movlw	48
 32950  005586  ECA5  F03D         	call	_LCD_WriteCmd
 32951                           
 32952                           ;lcd.c: 71: DelayMs(2);
 32953  00558A  0E02               	movlw	2
 32954  00558C  0100               	movlb	0	; () banked
 32955  00558E  6F68               	movwf	DelayMs@ms& (0+255),b
 32956  005590  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32957  005592  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32958  005594  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 32959  005596  ECD0  F031         	call	_DelayMs	;wreg free
 32960                           
 32961                           ;lcd.c: 72: LCD_WriteCmd(0x30);
 32962  00559A  0E30               	movlw	48
 32963  00559C  ECA5  F03D         	call	_LCD_WriteCmd
 32964                           
 32965                           ;lcd.c: 73: DelayMs(2);
 32966  0055A0  0E02               	movlw	2
 32967  0055A2  0100               	movlb	0	; () banked
 32968  0055A4  6F68               	movwf	DelayMs@ms& (0+255),b
 32969  0055A6  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32970  0055A8  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32971  0055AA  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 32972  0055AC  ECD0  F031         	call	_DelayMs	;wreg free
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;lcd.c: 74: LCD_WriteCmd(0x30);
 32976  0055B0  0E30               	movlw	48
 32977  0055B2  ECA5  F03D         	call	_LCD_WriteCmd
 32978                           
 32979                           ;lcd.c: 75: DelayMs(2);
 32980  0055B6  0E02               	movlw	2
 32981  0055B8  0100               	movlb	0	; () banked
 32982  0055BA  6F68               	movwf	DelayMs@ms& (0+255),b
 32983  0055BC  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32984  0055BE  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32985  0055C0  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 32986  0055C2  ECD0  F031         	call	_DelayMs	;wreg free
 32987                           
 32988                           ; BSR set to: 0
 32989                           ;lcd.c: 76: LCD_WriteCmd(0x39);
 32990  0055C6  0E39               	movlw	57
 32991  0055C8  ECA5  F03D         	call	_LCD_WriteCmd
 32992                           
 32993                           ;lcd.c: 77: DelayMs(2);
 32994  0055CC  0E02               	movlw	2
 32995  0055CE  0100               	movlb	0	; () banked
 32996  0055D0  6F68               	movwf	DelayMs@ms& (0+255),b
 32997  0055D2  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 32998  0055D4  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 32999  0055D6  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33000  0055D8  ECD0  F031         	call	_DelayMs	;wreg free
 33001                           
 33002                           ;lcd.c: 78: LCD_WriteCmd(0x14);
 33003  0055DC  0E14               	movlw	20
 33004  0055DE  ECA5  F03D         	call	_LCD_WriteCmd
 33005                           
 33006                           ;lcd.c: 79: DelayMs(2);
 33007  0055E2  0E02               	movlw	2
 33008  0055E4  0100               	movlb	0	; () banked
 33009  0055E6  6F68               	movwf	DelayMs@ms& (0+255),b
 33010  0055E8  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33011  0055EA  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33012  0055EC  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33013  0055EE  ECD0  F031         	call	_DelayMs	;wreg free
 33014                           
 33015                           ; BSR set to: 0
 33016                           ;lcd.c: 80: LCD_WriteCmd(0x56);
 33017  0055F2  0E56               	movlw	86
 33018  0055F4  ECA5  F03D         	call	_LCD_WriteCmd
 33019                           
 33020                           ;lcd.c: 81: DelayMs(2);
 33021  0055F8  0E02               	movlw	2
 33022  0055FA  0100               	movlb	0	; () banked
 33023  0055FC  6F68               	movwf	DelayMs@ms& (0+255),b
 33024  0055FE  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33025  005600  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33026  005602  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33027  005604  ECD0  F031         	call	_DelayMs	;wreg free
 33028                           
 33029                           ; BSR set to: 0
 33030                           ;lcd.c: 82: LCD_WriteCmd(0x6D);
 33031  005608  0E6D               	movlw	109
 33032  00560A  ECA5  F03D         	call	_LCD_WriteCmd
 33033                           
 33034                           ;lcd.c: 83: DelayMs(2);
 33035  00560E  0E02               	movlw	2
 33036  005610  0100               	movlb	0	; () banked
 33037  005612  6F68               	movwf	DelayMs@ms& (0+255),b
 33038  005614  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33039  005616  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33040  005618  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33041  00561A  ECD0  F031         	call	_DelayMs	;wreg free
 33042                           
 33043                           ;lcd.c: 85: LCD_WriteCmd(0x70);
 33044  00561E  0E70               	movlw	112
 33045  005620  ECA5  F03D         	call	_LCD_WriteCmd
 33046                           
 33047                           ;lcd.c: 86: DelayMs(2);
 33048  005624  0E02               	movlw	2
 33049  005626  0100               	movlb	0	; () banked
 33050  005628  6F68               	movwf	DelayMs@ms& (0+255),b
 33051  00562A  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33052  00562C  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33053  00562E  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33054  005630  ECD0  F031         	call	_DelayMs	;wreg free
 33055                           
 33056                           ; BSR set to: 0
 33057                           ;lcd.c: 87: LCD_WriteCmd(0x0E);
 33058  005634  0E0E               	movlw	14
 33059  005636  ECA5  F03D         	call	_LCD_WriteCmd
 33060                           
 33061                           ;lcd.c: 88: DelayMs(2);
 33062  00563A  0E02               	movlw	2
 33063  00563C  0100               	movlb	0	; () banked
 33064  00563E  6F68               	movwf	DelayMs@ms& (0+255),b
 33065  005640  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33066  005642  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33067  005644  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33068  005646  ECD0  F031         	call	_DelayMs	;wreg free
 33069                           
 33070                           ; BSR set to: 0
 33071                           ;lcd.c: 89: LCD_WriteCmd(0x06);
 33072  00564A  0E06               	movlw	6
 33073  00564C  ECA5  F03D         	call	_LCD_WriteCmd
 33074                           
 33075                           ;lcd.c: 90: DelayMs(2);
 33076  005650  0E02               	movlw	2
 33077  005652  0100               	movlb	0	; () banked
 33078  005654  6F68               	movwf	DelayMs@ms& (0+255),b
 33079  005656  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33080  005658  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33081  00565A  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33082  00565C  ECD0  F031         	call	_DelayMs	;wreg free
 33083                           
 33084                           ;lcd.c: 91: LCD_WriteCmd(0x01);
 33085  005660  0E01               	movlw	1
 33086  005662  ECA5  F03D         	call	_LCD_WriteCmd
 33087                           
 33088                           ;lcd.c: 92: DelayMs(10);
 33089  005666  0E0A               	movlw	10
 33090  005668  0100               	movlb	0	; () banked
 33091  00566A  6F68               	movwf	DelayMs@ms& (0+255),b
 33092  00566C  6B69               	clrf	(DelayMs@ms+1)& (0+255),b
 33093  00566E  6B6A               	clrf	(DelayMs@ms+2)& (0+255),b
 33094  005670  6B6B               	clrf	(DelayMs@ms+3)& (0+255),b
 33095  005672  EFD0  F031         	goto	_DelayMs	;wreg free
 33096  005676                     __end_of_LCDInit:
 33097                           	opt stack 0
 33098                           tblptru	equ	0xFF8
 33099                           tblptrh	equ	0xFF7
 33100                           tblptrl	equ	0xFF6
 33101                           tablat	equ	0xFF5
 33102                           prodh	equ	0xFF4
 33103                           prodl	equ	0xFF3
 33104                           intcon	equ	0xFF2
 33105                           postinc0	equ	0xFEE
 33106                           plusw0	equ	0xFEB
 33107                           fsr0h	equ	0xFEA
 33108                           fsr0l	equ	0xFE9
 33109                           wreg	equ	0xFE8
 33110                           indf1	equ	0xFE7
 33111                           postinc1	equ	0xFE6
 33112                           postdec1	equ	0xFE5
 33113                           plusw1	equ	0xFE3
 33114                           fsr1h	equ	0xFE2
 33115                           fsr1l	equ	0xFE1
 33116                           indf2	equ	0xFDF
 33117                           postinc2	equ	0xFDE
 33118                           postdec2	equ	0xFDD
 33119                           plusw2	equ	0xFDB
 33120                           fsr2h	equ	0xFDA
 33121                           fsr2l	equ	0xFD9
 33122                           status	equ	0xFD8
 33123                           
 33124 ;; *************** function _LCD_WriteCmd *****************
 33125 ;; Defined at:
 33126 ;;		line 31 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 33127 ;; Parameters:    Size  Location     Type
 33128 ;;  data            1    wreg     unsigned char 
 33129 ;; Auto vars:     Size  Location     Type
 33130 ;;  data            1    2[BANK0 ] unsigned char 
 33131 ;; Return value:  Size  Location     Type
 33132 ;;                  1    wreg      void 
 33133 ;; Registers used:
 33134 ;;		wreg, status,2, cstack
 33135 ;; Tracked objects:
 33136 ;;		On entry : 0/0
 33137 ;;		On exit  : 0/0
 33138 ;;		Unchanged: 0/0
 33139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33144 ;;Total ram usage:        1 bytes
 33145 ;; Hardware stack levels used:    1
 33146 ;; Hardware stack levels required when called:    5
 33147 ;; This function calls:
 33148 ;;		_SPIPut2
 33149 ;; This function is called by:
 33150 ;;		_LCDInit
 33151 ;;		_LCDUpdate
 33152 ;; This function uses a non-reentrant model
 33153 ;;
 33154                           
 33155                           	psect	text157
 33156  007B4A                     __ptext157:
 33157                           	opt stack 0
 33158  007B4A                     _LCD_WriteCmd:
 33159                           	opt stack 24
 33160                           
 33161                           ; BSR set to: 0
 33162                           ;incstack = 0
 33163                           ;LCD_WriteCmd@data stored from wreg
 33164  007B4A  0100               	movlb	0	; () banked
 33165  007B4C  6F62               	movwf	LCD_WriteCmd@data& (0+255),b
 33166                           
 33167                           ;lcd.c: 33: GIE=0;
 33168  007B4E  9EF2               	bcf	intcon,7,c	;volatile
 33169                           
 33170                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 33171  007B50  9E8C               	bcf	3980,7,c	;volatile
 33172                           
 33173                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 33174  007B52  968C               	bcf	3980,3,c	;volatile
 33175                           
 33176                           ;lcd.c: 37: SPIPut2(data);
 33177  007B54  5162               	movf	LCD_WriteCmd@data& (0+255),w,b
 33178  007B56  EC62  F03D         	call	_SPIPut2
 33179                           
 33180                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 33181  007B5A  8E8C               	bsf	3980,7,c	;volatile
 33182                           
 33183                           ;lcd.c: 40: GIE=1;
 33184  007B5C  8EF2               	bsf	intcon,7,c	;volatile
 33185  007B5E  0012               	return		;funcret
 33186  007B60                     __end_of_LCD_WriteCmd:
 33187                           	opt stack 0
 33188                           tblptru	equ	0xFF8
 33189                           tblptrh	equ	0xFF7
 33190                           tblptrl	equ	0xFF6
 33191                           tablat	equ	0xFF5
 33192                           prodh	equ	0xFF4
 33193                           prodl	equ	0xFF3
 33194                           intcon	equ	0xFF2
 33195                           postinc0	equ	0xFEE
 33196                           plusw0	equ	0xFEB
 33197                           fsr0h	equ	0xFEA
 33198                           fsr0l	equ	0xFE9
 33199                           wreg	equ	0xFE8
 33200                           indf1	equ	0xFE7
 33201                           postinc1	equ	0xFE6
 33202                           postdec1	equ	0xFE5
 33203                           plusw1	equ	0xFE3
 33204                           fsr1h	equ	0xFE2
 33205                           fsr1l	equ	0xFE1
 33206                           indf2	equ	0xFDF
 33207                           postinc2	equ	0xFDE
 33208                           postdec2	equ	0xFDD
 33209                           plusw2	equ	0xFDB
 33210                           fsr2h	equ	0xFDA
 33211                           fsr2l	equ	0xFD9
 33212                           status	equ	0xFD8
 33213                           
 33214 ;; *************** function _SPIPut2 *****************
 33215 ;; Defined at:
 33216 ;;		line 332 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 33217 ;; Parameters:    Size  Location     Type
 33218 ;;  v               1    wreg     unsigned char 
 33219 ;; Auto vars:     Size  Location     Type
 33220 ;;  v               1    0[BANK0 ] unsigned char 
 33221 ;;  i               1    1[BANK0 ] volatile unsigned char 
 33222 ;; Return value:  Size  Location     Type
 33223 ;;                  1    wreg      void 
 33224 ;; Registers used:
 33225 ;;		wreg
 33226 ;; Tracked objects:
 33227 ;;		On entry : F/0
 33228 ;;		On exit  : 0/0
 33229 ;;		Unchanged: 0/0
 33230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33235 ;;Total ram usage:        2 bytes
 33236 ;; Hardware stack levels used:    1
 33237 ;; Hardware stack levels required when called:    4
 33238 ;; This function calls:
 33239 ;;		Nothing
 33240 ;; This function is called by:
 33241 ;;		_LCD_WriteCmd
 33242 ;;		_LCD_WriteData
 33243 ;;		_SPIGet2
 33244 ;;		_EEPROMRead
 33245 ;; This function uses a non-reentrant model
 33246 ;;
 33247                           
 33248                           	psect	text158
 33249  007AC4                     __ptext158:
 33250                           	opt stack 0
 33251  007AC4                     _SPIPut2:
 33252                           	opt stack 24
 33253                           
 33254                           ;incstack = 0
 33255                           ;SPIPut2@v stored from wreg
 33256  007AC4  6F60               	movwf	SPIPut2@v& (0+255),b
 33257                           
 33258                           ;spi.c: 334: volatile uint8_t i;
 33259                           ;spi.c: 354: PIR3bits.SSP2IF = 0;
 33260  007AC6  9EA4               	bcf	4004,7,c	;volatile
 33261                           
 33262                           ;spi.c: 355: i = SSP2BUF;
 33263  007AC8  CF75 F061          	movff	3957,SPIPut2@i	;volatile
 33264  007ACC                     l89:
 33265                           
 33266                           ;spi.c: 357: {
 33267                           ;spi.c: 358: SSP2CON1bits.WCOL = 0;
 33268  007ACC  9E72               	bcf	3954,7,c	;volatile
 33269                           
 33270                           ;spi.c: 359: SSP2BUF = v;
 33271  007ACE  C060  FF75         	movff	SPIPut2@v,3957	;volatile
 33272                           
 33273                           ;spi.c: 360: } while( SSP2CON1bits.WCOL );
 33274  007AD2  BE72               	btfsc	3954,7,c	;volatile
 33275  007AD4  D7FB               	goto	l89
 33276  007AD6                     l91:
 33277  007AD6  BEA4               	btfsc	4004,7,c	;volatile
 33278  007AD8  0012               	return		;funcret
 33279  007ADA  D7FD               	goto	l91
 33280  007ADC                     __end_of_SPIPut2:
 33281                           	opt stack 0
 33282                           tblptru	equ	0xFF8
 33283                           tblptrh	equ	0xFF7
 33284                           tblptrl	equ	0xFF6
 33285                           tablat	equ	0xFF5
 33286                           prodh	equ	0xFF4
 33287                           prodl	equ	0xFF3
 33288                           intcon	equ	0xFF2
 33289                           postinc0	equ	0xFEE
 33290                           plusw0	equ	0xFEB
 33291                           fsr0h	equ	0xFEA
 33292                           fsr0l	equ	0xFE9
 33293                           wreg	equ	0xFE8
 33294                           indf1	equ	0xFE7
 33295                           postinc1	equ	0xFE6
 33296                           postdec1	equ	0xFE5
 33297                           plusw1	equ	0xFE3
 33298                           fsr1h	equ	0xFE2
 33299                           fsr1l	equ	0xFE1
 33300                           indf2	equ	0xFDF
 33301                           postinc2	equ	0xFDE
 33302                           postdec2	equ	0xFDD
 33303                           plusw2	equ	0xFDB
 33304                           fsr2h	equ	0xFDA
 33305                           fsr2l	equ	0xFD9
 33306                           status	equ	0xFD8
 33307                           
 33308 ;; *************** function _DelayMs *****************
 33309 ;; Defined at:
 33310 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_24j40/delay.c"
 33311 ;; Parameters:    Size  Location     Type
 33312 ;;  ms              4    8[BANK0 ] unsigned long 
 33313 ;; Auto vars:     Size  Location     Type
 33314 ;;		None
 33315 ;; Return value:  Size  Location     Type
 33316 ;;                  1    wreg      void 
 33317 ;; Registers used:
 33318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33319 ;; Tracked objects:
 33320 ;;		On entry : F/0
 33321 ;;		On exit  : F/0
 33322 ;;		Unchanged: 0/0
 33323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33326 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33327 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33328 ;;Total ram usage:       12 bytes
 33329 ;; Hardware stack levels used:    1
 33330 ;; Hardware stack levels required when called:    5
 33331 ;; This function calls:
 33332 ;;		_DelayUS
 33333 ;; This function is called by:
 33334 ;;		_LCDInit
 33335 ;;		_MiMAC_Init
 33336 ;; This function uses a non-reentrant model
 33337 ;;
 33338                           
 33339                           	psect	text159
 33340  0063A0                     __ptext159:
 33341                           	opt stack 0
 33342  0063A0                     _DelayMs:
 33343                           	opt stack 23
 33344                           
 33345                           ; BSR set to: 0
 33346                           ;delay.c: 36: DelayUS(ms*1000);
 33347                           
 33348                           ;incstack = 0
 33349  0063A0  C068  F06C         	movff	DelayMs@ms,??_DelayMs
 33350  0063A4  C069  F06D         	movff	DelayMs@ms+1,??_DelayMs+1
 33351  0063A8  C06A  F06E         	movff	DelayMs@ms+2,??_DelayMs+2
 33352  0063AC  C06B  F06F         	movff	DelayMs@ms+3,??_DelayMs+3
 33353  0063B0  0EE8               	movlw	232
 33354  0063B2  036C               	mulwf	??_DelayMs& (0+255),b
 33355  0063B4  CFF3 F070          	movff	prodl,??_DelayMs+4
 33356  0063B8  CFF4 F071          	movff	prodh,??_DelayMs+5
 33357  0063BC  6B72               	clrf	(??_DelayMs+6)& (0+255),b
 33358  0063BE  6B73               	clrf	(??_DelayMs+7)& (0+255),b
 33359  0063C0  036D               	mulwf	(??_DelayMs+1)& (0+255),b
 33360  0063C2  50F3               	movf	prodl,w,c
 33361  0063C4  2771               	addwf	(??_DelayMs+5)& (0+255),f,b
 33362  0063C6  50F4               	movf	prodh,w,c
 33363  0063C8  2372               	addwfc	(??_DelayMs+6)& (0+255),f,b
 33364  0063CA  0E00               	movlw	0
 33365  0063CC  2373               	addwfc	(??_DelayMs+7)& (0+255),f,b
 33366  0063CE  0E03               	movlw	3
 33367  0063D0  036C               	mulwf	??_DelayMs& (0+255),b
 33368  0063D2  50F3               	movf	prodl,w,c
 33369  0063D4  2771               	addwf	(??_DelayMs+5)& (0+255),f,b
 33370  0063D6  50F4               	movf	prodh,w,c
 33371  0063D8  2372               	addwfc	(??_DelayMs+6)& (0+255),f,b
 33372  0063DA  0E00               	movlw	0
 33373  0063DC  2373               	addwfc	(??_DelayMs+7)& (0+255),f,b
 33374  0063DE  0EE8               	movlw	232
 33375  0063E0  036E               	mulwf	(??_DelayMs+2)& (0+255),b
 33376  0063E2  50F3               	movf	prodl,w,c
 33377  0063E4  2772               	addwf	(??_DelayMs+6)& (0+255),f,b
 33378  0063E6  50F4               	movf	prodh,w,c
 33379  0063E8  2373               	addwfc	(??_DelayMs+7)& (0+255),f,b
 33380  0063EA  0E03               	movlw	3
 33381  0063EC  036D               	mulwf	(??_DelayMs+1)& (0+255),b
 33382  0063EE  50F3               	movf	prodl,w,c
 33383  0063F0  2772               	addwf	(??_DelayMs+6)& (0+255),f,b
 33384  0063F2  50F4               	movf	prodh,w,c
 33385  0063F4  2373               	addwfc	(??_DelayMs+7)& (0+255),f,b
 33386  0063F6  0E00               	movlw	0
 33387  0063F8  036C               	mulwf	??_DelayMs& (0+255),b
 33388  0063FA  50F3               	movf	prodl,w,c
 33389  0063FC  2772               	addwf	(??_DelayMs+6)& (0+255),f,b
 33390  0063FE  50F4               	movf	prodh,w,c
 33391  006400  2373               	addwfc	(??_DelayMs+7)& (0+255),f,b
 33392  006402  0EE8               	movlw	232
 33393  006404  036F               	mulwf	(??_DelayMs+3)& (0+255),b
 33394  006406  50F3               	movf	prodl,w,c
 33395  006408  2773               	addwf	(??_DelayMs+7)& (0+255),f,b
 33396  00640A  0E03               	movlw	3
 33397  00640C  036E               	mulwf	(??_DelayMs+2)& (0+255),b
 33398  00640E  50F3               	movf	prodl,w,c
 33399  006410  2773               	addwf	(??_DelayMs+7)& (0+255),f,b
 33400  006412  0E00               	movlw	0
 33401  006414  036D               	mulwf	(??_DelayMs+1)& (0+255),b
 33402  006416  50F3               	movf	prodl,w,c
 33403  006418  2773               	addwf	(??_DelayMs+7)& (0+255),f,b
 33404  00641A  0E00               	movlw	0
 33405  00641C  036C               	mulwf	??_DelayMs& (0+255),b
 33406  00641E  50F3               	movf	prodl,w,c
 33407  006420  2773               	addwf	(??_DelayMs+7)& (0+255),f,b
 33408  006422  C070  F060         	movff	??_DelayMs+4,DelayUS@delay
 33409  006426  C071  F061         	movff	??_DelayMs+5,DelayUS@delay+1
 33410  00642A  C072  F062         	movff	??_DelayMs+6,DelayUS@delay+2
 33411  00642E  C073  F063         	movff	??_DelayMs+7,DelayUS@delay+3
 33412  006432  EF4B  F03C         	goto	_DelayUS	;wreg free
 33413  006436                     __end_of_DelayMs:
 33414                           	opt stack 0
 33415                           tblptru	equ	0xFF8
 33416                           tblptrh	equ	0xFF7
 33417                           tblptrl	equ	0xFF6
 33418                           tablat	equ	0xFF5
 33419                           prodh	equ	0xFF4
 33420                           prodl	equ	0xFF3
 33421                           intcon	equ	0xFF2
 33422                           postinc0	equ	0xFEE
 33423                           plusw0	equ	0xFEB
 33424                           fsr0h	equ	0xFEA
 33425                           fsr0l	equ	0xFE9
 33426                           wreg	equ	0xFE8
 33427                           indf1	equ	0xFE7
 33428                           postinc1	equ	0xFE6
 33429                           postdec1	equ	0xFE5
 33430                           plusw1	equ	0xFE3
 33431                           fsr1h	equ	0xFE2
 33432                           fsr1l	equ	0xFE1
 33433                           indf2	equ	0xFDF
 33434                           postinc2	equ	0xFDE
 33435                           postdec2	equ	0xFDD
 33436                           plusw2	equ	0xFDB
 33437                           fsr2h	equ	0xFDA
 33438                           fsr2l	equ	0xFD9
 33439                           status	equ	0xFD8
 33440                           
 33441 ;; *************** function _DelayUS *****************
 33442 ;; Defined at:
 33443 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_24j40/delay.c"
 33444 ;; Parameters:    Size  Location     Type
 33445 ;;  delay           4    0[BANK0 ] unsigned long 
 33446 ;; Auto vars:     Size  Location     Type
 33447 ;;  i               4    4[BANK0 ] unsigned long 
 33448 ;; Return value:  Size  Location     Type
 33449 ;;                  1    wreg      void 
 33450 ;; Registers used:
 33451 ;;		wreg, status,2, status,0
 33452 ;; Tracked objects:
 33453 ;;		On entry : F/0
 33454 ;;		On exit  : F/0
 33455 ;;		Unchanged: 0/0
 33456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33460 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33461 ;;Total ram usage:        8 bytes
 33462 ;; Hardware stack levels used:    1
 33463 ;; Hardware stack levels required when called:    4
 33464 ;; This function calls:
 33465 ;;		Nothing
 33466 ;; This function is called by:
 33467 ;;		_DelayMs
 33468 ;;		_LCDUpdate
 33469 ;; This function uses a non-reentrant model
 33470 ;;
 33471                           
 33472                           	psect	text160
 33473  007896                     __ptext160:
 33474                           	opt stack 0
 33475  007896                     _DelayUS:
 33476                           	opt stack 23
 33477                           
 33478                           ; BSR set to: 0
 33479                           ;delay.c: 25: uint32_t i;
 33480                           ;delay.c: 27: for(i=0;i<delay;i++)
 33481                           
 33482                           ; BSR set to: 0
 33483                           ;incstack = 0
 33484  007896  6B64               	clrf	DelayUS@i& (0+255),b
 33485  007898  6B65               	clrf	(DelayUS@i+1)& (0+255),b
 33486  00789A  6B66               	clrf	(DelayUS@i+2)& (0+255),b
 33487  00789C  6B67               	clrf	(DelayUS@i+3)& (0+255),b
 33488  00789E  D007               	goto	l5
 33489  0078A0                     l6:
 33490                           
 33491                           ; BSR set to: 0
 33492                           ;delay.c: 28: {
 33493                           ;delay.c: 29: __nop();
 33494  0078A0  F000               	nop	
 33495  0078A2  0100               	movlb	0	; () banked
 33496  0078A4  2B64               	incf	DelayUS@i& (0+255),f,b
 33497  0078A6  0E00               	movlw	0
 33498  0078A8  2365               	addwfc	(DelayUS@i+1)& (0+255),f,b
 33499  0078AA  2366               	addwfc	(DelayUS@i+2)& (0+255),f,b
 33500  0078AC  2367               	addwfc	(DelayUS@i+3)& (0+255),f,b
 33501  0078AE                     l5:
 33502                           
 33503                           ; BSR set to: 0
 33504  0078AE  5160               	movf	DelayUS@delay& (0+255),w,b
 33505  0078B0  5D64               	subwf	DelayUS@i& (0+255),w,b
 33506  0078B2  5161               	movf	(DelayUS@delay+1)& (0+255),w,b
 33507  0078B4  5965               	subwfb	(DelayUS@i+1)& (0+255),w,b
 33508  0078B6  5162               	movf	(DelayUS@delay+2)& (0+255),w,b
 33509  0078B8  5966               	subwfb	(DelayUS@i+2)& (0+255),w,b
 33510  0078BA  5163               	movf	(DelayUS@delay+3)& (0+255),w,b
 33511  0078BC  5967               	subwfb	(DelayUS@i+3)& (0+255),w,b
 33512  0078BE  E3F0               	bnc	l6
 33513                           
 33514                           ; BSR set to: 0
 33515  0078C0  0012               	return		;funcret
 33516  0078C2                     __end_of_DelayUS:
 33517                           	opt stack 0
 33518                           tblptru	equ	0xFF8
 33519                           tblptrh	equ	0xFF7
 33520                           tblptrl	equ	0xFF6
 33521                           tablat	equ	0xFF5
 33522                           prodh	equ	0xFF4
 33523                           prodl	equ	0xFF3
 33524                           intcon	equ	0xFF2
 33525                           postinc0	equ	0xFEE
 33526                           plusw0	equ	0xFEB
 33527                           fsr0h	equ	0xFEA
 33528                           fsr0l	equ	0xFE9
 33529                           wreg	equ	0xFE8
 33530                           indf1	equ	0xFE7
 33531                           postinc1	equ	0xFE6
 33532                           postdec1	equ	0xFE5
 33533                           plusw1	equ	0xFE3
 33534                           fsr1h	equ	0xFE2
 33535                           fsr1l	equ	0xFE1
 33536                           indf2	equ	0xFDF
 33537                           postinc2	equ	0xFDE
 33538                           postdec2	equ	0xFDD
 33539                           plusw2	equ	0xFDB
 33540                           fsr2h	equ	0xFDA
 33541                           fsr2l	equ	0xFD9
 33542                           status	equ	0xFD8
 33543                           
 33544 ;; *************** function _InitSymbolTimer *****************
 33545 ;; Defined at:
 33546 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 33547 ;; Parameters:    Size  Location     Type
 33548 ;;		None
 33549 ;; Auto vars:     Size  Location     Type
 33550 ;;		None
 33551 ;; Return value:  Size  Location     Type
 33552 ;;                  1    wreg      void 
 33553 ;; Registers used:
 33554 ;;		None
 33555 ;; Tracked objects:
 33556 ;;		On entry : F/F
 33557 ;;		On exit  : F/2
 33558 ;;		Unchanged: 0/0
 33559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33564 ;;Total ram usage:        0 bytes
 33565 ;; Hardware stack levels used:    1
 33566 ;; Hardware stack levels required when called:    4
 33567 ;; This function calls:
 33568 ;;		Nothing
 33569 ;; This function is called by:
 33570 ;;		_main
 33571 ;; This function uses a non-reentrant model
 33572 ;;
 33573                           
 33574                           	psect	text161
 33575  007B60                     __ptext161:
 33576                           	opt stack 0
 33577  007B60                     _InitSymbolTimer:
 33578                           	opt stack 26
 33579                           
 33580                           ; BSR set to: 15
 33581                           ;symbol.c: 103: T0CON = 0x00;
 33582                           
 33583                           ; BSR set to: 0
 33584                           ;incstack = 0
 33585  007B60  6AD5               	clrf	4053,c	;volatile
 33586                           
 33587                           ;symbol.c: 104: INTCON2bits.TMR0IP = 1;
 33588  007B62  84F1               	bsf	intcon2,2,c	;volatile
 33589                           
 33590                           ;symbol.c: 105: INTCONbits.TMR0IF = 0;
 33591  007B64  94F2               	bcf	intcon,2,c	;volatile
 33592                           
 33593                           ;symbol.c: 106: INTCONbits.TMR0IE = 1;
 33594  007B66  8AF2               	bsf	intcon,5,c	;volatile
 33595                           
 33596                           ;symbol.c: 107: T0CONbits.TMR0ON = 1;
 33597  007B68  8ED5               	bsf	4053,7,c	;volatile
 33598                           
 33599                           ;symbol.c: 109: t1extension=0;
 33600  007B6A  0102               	movlb	2	; () banked
 33601  007B6C  6B50               	clrf	_t1extension& (0+255),b
 33602  007B6E  6B51               	clrf	(_t1extension+1)& (0+255),b
 33603  007B70  6B52               	clrf	(_t1extension+2)& (0+255),b
 33604  007B72  6B53               	clrf	(_t1extension+3)& (0+255),b
 33605                           
 33606                           ; BSR set to: 2
 33607  007B74  0012               	return		;funcret
 33608  007B76                     __end_of_InitSymbolTimer:
 33609                           	opt stack 0
 33610                           tblptru	equ	0xFF8
 33611                           tblptrh	equ	0xFF7
 33612                           tblptrl	equ	0xFF6
 33613                           tablat	equ	0xFF5
 33614                           prodh	equ	0xFF4
 33615                           prodl	equ	0xFF3
 33616                           intcon	equ	0xFF2
 33617                           intcon2	equ	0xFF1
 33618                           postinc0	equ	0xFEE
 33619                           plusw0	equ	0xFEB
 33620                           fsr0h	equ	0xFEA
 33621                           fsr0l	equ	0xFE9
 33622                           wreg	equ	0xFE8
 33623                           indf1	equ	0xFE7
 33624                           postinc1	equ	0xFE6
 33625                           postdec1	equ	0xFE5
 33626                           plusw1	equ	0xFE3
 33627                           fsr1h	equ	0xFE2
 33628                           fsr1l	equ	0xFE1
 33629                           indf2	equ	0xFDF
 33630                           postinc2	equ	0xFDE
 33631                           postdec2	equ	0xFDD
 33632                           plusw2	equ	0xFDB
 33633                           fsr2h	equ	0xFDA
 33634                           fsr2l	equ	0xFD9
 33635                           status	equ	0xFD8
 33636                           
 33637 ;; *************** function _HardwareInit *****************
 33638 ;; Defined at:
 33639 ;;		line 235 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
 33640 ;; Parameters:    Size  Location     Type
 33641 ;;		None
 33642 ;; Auto vars:     Size  Location     Type
 33643 ;;		None
 33644 ;; Return value:  Size  Location     Type
 33645 ;;                  1    wreg      void 
 33646 ;; Registers used:
 33647 ;;		wreg, status,2
 33648 ;; Tracked objects:
 33649 ;;		On entry : F/1
 33650 ;;		On exit  : F/F
 33651 ;;		Unchanged: 0/0
 33652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33657 ;;Total ram usage:        0 bytes
 33658 ;; Hardware stack levels used:    1
 33659 ;; Hardware stack levels required when called:    4
 33660 ;; This function calls:
 33661 ;;		Nothing
 33662 ;; This function is called by:
 33663 ;;		_main
 33664 ;; This function uses a non-reentrant model
 33665 ;;
 33666                           
 33667                           	psect	text162
 33668  006436                     __ptext162:
 33669                           	opt stack 0
 33670  006436                     _HardwareInit:
 33671                           	opt stack 26
 33672                           
 33673                           ; BSR set to: 1
 33674                           ;system.c: 240: OSCCON = 0x78;
 33675                           
 33676                           ; BSR set to: 2
 33677                           ;incstack = 0
 33678  006436  0E78               	movlw	120
 33679  006438  6ED3               	movwf	4051,c	;volatile
 33680                           
 33681                           ; BSR set to: 1
 33682                           ;system.c: 241: OSCTUNEbits.PLLEN = 1;
 33683  00643A  8C9B               	bsf	3995,6,c	;volatile
 33684                           
 33685                           ; BSR set to: 1
 33686                           ;system.c: 242: WDTCONbits.SWDTEN = 0;
 33687  00643C  90C0               	bcf	4032,0,c	;volatile
 33688                           
 33689                           ;system.c: 248: EECON2 = 0x55;
 33690  00643E  0E55               	movlw	85
 33691  006440  6EA7               	movwf	4007,c	;volatile
 33692                           
 33693                           ;system.c: 249: EECON2 = 0xAA;
 33694  006442  0EAA               	movlw	170
 33695  006444  6EA7               	movwf	4007,c	;volatile
 33696                           
 33697                           ; BSR set to: 1
 33698                           ;system.c: 250: PPSCONbits.IOLOCK = 0;
 33699  006446  010E               	movlb	14	; () banked
 33700  006448  91FF               	bcf	255,0,b	;volatile
 33701                           
 33702                           ;system.c: 252: RPINR1 = 17;
 33703  00644A  0E11               	movlw	17
 33704  00644C  6FE7               	movwf	231,b	;volatile
 33705                           
 33706                           ;system.c: 253: RPINR21 = 23;
 33707  00644E  0E17               	movlw	23
 33708  006450  6FFB               	movwf	251,b	;volatile
 33709                           
 33710                           ;system.c: 254: RPOR21 = 10;
 33711  006452  0E0A               	movlw	10
 33712  006454  6FDB               	movwf	219,b	;volatile
 33713                           
 33714                           ;system.c: 255: RPOR19 = 9;
 33715  006456  0E09               	movlw	9
 33716  006458  6FD9               	movwf	217,b	;volatile
 33717                           
 33718                           ;system.c: 258: EECON2 = 0x55;
 33719  00645A  0E55               	movlw	85
 33720  00645C  6EA7               	movwf	4007,c	;volatile
 33721                           
 33722                           ;system.c: 259: EECON2 = 0xAA;
 33723  00645E  0EAA               	movlw	170
 33724  006460  6EA7               	movwf	4007,c	;volatile
 33725                           
 33726                           ; BSR set to: 14
 33727                           ;system.c: 260: PPSCONbits.IOLOCK = 1;
 33728  006462  81FF               	bsf	255,0,b	;volatile
 33729                           
 33730                           ;system.c: 265: ANCON0 = 0xFC;
 33731  006464  0EFC               	movlw	252
 33732  006466  010F               	movlb	15	; () banked
 33733  006468  6F48               	movwf	72,b	;volatile
 33734                           
 33735                           ;system.c: 266: ANCON1 = 0x1F;
 33736  00646A  0E1F               	movlw	31
 33737  00646C  6F49               	movwf	73,b	;volatile
 33738                           
 33739                           ; BSR set to: 15
 33740                           ;system.c: 271: TRISCbits.TRISC2=0;
 33741  00646E  9494               	bcf	3988,2,c	;volatile
 33742                           
 33743                           ; BSR set to: 15
 33744                           ;system.c: 272: TRISAbits.TRISA6=0;
 33745  006470  9C92               	bcf	3986,6,c	;volatile
 33746                           
 33747                           ; BSR set to: 15
 33748                           ;system.c: 273: TRISAbits.TRISA7=0;
 33749  006472  9E92               	bcf	3986,7,c	;volatile
 33750                           
 33751                           ; BSR set to: 15
 33752                           ;system.c: 284: INTCON2bits.RBPU = 0;
 33753  006474  9EF1               	bcf	intcon2,7,c	;volatile
 33754                           
 33755                           ; BSR set to: 15
 33756                           ;system.c: 289: TRISAbits.TRISA1 = 1;
 33757  006476  8292               	bsf	3986,1,c	;volatile
 33758                           
 33759                           ; BSR set to: 15
 33760                           ;system.c: 290: TRISAbits.TRISA0 = 1;
 33761  006478  8092               	bsf	3986,0,c	;volatile
 33762                           
 33763                           ; BSR set to: 15
 33764                           ;system.c: 299: LATAbits.LATA5 = 1;
 33765  00647A  8A89               	bsf	3977,5,c	;volatile
 33766                           
 33767                           ; BSR set to: 15
 33768                           ;system.c: 300: LATDbits.LATD0 = 1;
 33769  00647C  808C               	bsf	3980,0,c	;volatile
 33770                           
 33771                           ; BSR set to: 15
 33772                           ;system.c: 301: LATDbits.LATD1 = 1;
 33773  00647E  828C               	bsf	3980,1,c	;volatile
 33774                           
 33775                           ; BSR set to: 15
 33776                           ;system.c: 303: TRISAbits.TRISA5 = 0;
 33777  006480  9A92               	bcf	3986,5,c	;volatile
 33778                           
 33779                           ; BSR set to: 15
 33780                           ;system.c: 304: TRISDbits.TRISD0 = 0;
 33781  006482  9095               	bcf	3989,0,c	;volatile
 33782                           
 33783                           ; BSR set to: 15
 33784                           ;system.c: 305: TRISDbits.TRISD1 = 0;
 33785  006484  9295               	bcf	3989,1,c	;volatile
 33786                           
 33787                           ; BSR set to: 15
 33788                           ;system.c: 306: TRISBbits.TRISB0 = 1;
 33789  006486  8093               	bsf	3987,0,c	;volatile
 33790                           
 33791                           ; BSR set to: 15
 33792                           ;system.c: 309: INTCON2bits.INTEDG0 = 0;
 33793  006488  9CF1               	bcf	intcon2,6,c	;volatile
 33794                           
 33795                           ; BSR set to: 15
 33796                           ;system.c: 311: INTCONbits.INT0IF = 0;
 33797  00648A  92F2               	bcf	intcon,1,c	;volatile
 33798                           
 33799                           ; BSR set to: 15
 33800                           ;system.c: 312: INTCONbits.INT0IE = 1;
 33801  00648C  88F2               	bsf	intcon,4,c	;volatile
 33802                           
 33803                           ; BSR set to: 15
 33804                           ;system.c: 317: TRISBbits.TRISB5 = 1;
 33805  00648E  8A93               	bsf	3987,5,c	;volatile
 33806                           
 33807                           ; BSR set to: 15
 33808                           ;system.c: 318: TRISCbits.TRISC7 = 0;
 33809  006490  9E94               	bcf	3988,7,c	;volatile
 33810                           
 33811                           ; BSR set to: 15
 33812                           ;system.c: 319: TRISBbits.TRISB4 = 0;
 33813  006492  9893               	bcf	3987,4,c	;volatile
 33814                           
 33815                           ;system.c: 321: SSP1STAT = 0xC0;
 33816  006494  0EC0               	movlw	192
 33817  006496  6EC7               	movwf	4039,c	;volatile
 33818                           
 33819                           ;system.c: 322: SSP1CON1 = 0x20;
 33820  006498  0E20               	movlw	32
 33821  00649A  6EC6               	movwf	4038,c	;volatile
 33822                           
 33823                           ; BSR set to: 15
 33824                           ;system.c: 380: LATDbits.LATD5 = 1;
 33825  00649C  8A8C               	bsf	3980,5,c	;volatile
 33826                           
 33827                           ; BSR set to: 15
 33828                           ;system.c: 381: TRISDbits.TRISD5 = 0;
 33829  00649E  9A95               	bcf	3989,5,c	;volatile
 33830                           
 33831                           ; BSR set to: 15
 33832                           ;system.c: 386: LATEbits.LATE1 = 0;
 33833  0064A0  928D               	bcf	3981,1,c	;volatile
 33834                           
 33835                           ; BSR set to: 15
 33836                           ;system.c: 387: LATDbits.LATD7 = 1;
 33837  0064A2  8E8C               	bsf	3980,7,c	;volatile
 33838                           
 33839                           ; BSR set to: 15
 33840                           ;system.c: 388: LATDbits.LATD3 = 0;
 33841  0064A4  968C               	bcf	3980,3,c	;volatile
 33842                           
 33843                           ; BSR set to: 15
 33844                           ;system.c: 389: LATEbits.LATE0 = 0;
 33845  0064A6  908D               	bcf	3981,0,c	;volatile
 33846                           
 33847                           ; BSR set to: 15
 33848                           ;system.c: 390: TRISEbits.TRISE1 = 0;
 33849  0064A8  9296               	bcf	3990,1,c	;volatile
 33850                           
 33851                           ; BSR set to: 15
 33852                           ;system.c: 391: TRISDbits.TRISD7 = 0;
 33853  0064AA  9E95               	bcf	3989,7,c	;volatile
 33854                           
 33855                           ; BSR set to: 15
 33856                           ;system.c: 392: TRISDbits.TRISD3 = 0;
 33857  0064AC  9695               	bcf	3989,3,c	;volatile
 33858                           
 33859                           ; BSR set to: 15
 33860                           ;system.c: 393: TRISEbits.TRISE0 = 0;
 33861  0064AE  9096               	bcf	3990,0,c	;volatile
 33862                           
 33863                           ; BSR set to: 15
 33864                           ;system.c: 398: TRISDbits.TRISD6 = 1;
 33865  0064B0  8C95               	bsf	3989,6,c	;volatile
 33866                           
 33867                           ; BSR set to: 15
 33868                           ;system.c: 399: TRISDbits.TRISD2 = 0;
 33869  0064B2  9495               	bcf	3989,2,c	;volatile
 33870                           
 33871                           ; BSR set to: 15
 33872                           ;system.c: 400: TRISDbits.TRISD4 = 0;
 33873  0064B4  9895               	bcf	3989,4,c	;volatile
 33874                           
 33875                           ; BSR set to: 15
 33876                           ;system.c: 402: SSP2STAT = 0x00;
 33877  0064B6  6A73               	clrf	3955,c	;volatile
 33878                           
 33879                           ;system.c: 403: SSP2CON1 = 0x32;
 33880  0064B8  0E32               	movlw	50
 33881  0064BA  6E72               	movwf	3954,c	;volatile
 33882                           
 33883                           ; BSR set to: 15
 33884                           ;system.c: 405: TRISDbits.TRISD5=0;
 33885  0064BC  9A95               	bcf	3989,5,c	;volatile
 33886                           
 33887                           ; BSR set to: 15
 33888                           ;system.c: 406: LATDbits.LATD5=1;
 33889  0064BE  8A8C               	bsf	3980,5,c	;volatile
 33890                           
 33891                           ; BSR set to: 15
 33892                           ;system.c: 408: PIR3bits.SSP2IF = 0;
 33893  0064C0  9EA4               	bcf	4004,7,c	;volatile
 33894                           
 33895                           ; BSR set to: 15
 33896                           ;system.c: 413: INTCONbits.GIEH = 1;
 33897  0064C2  8EF2               	bsf	intcon,7,c	;volatile
 33898                           
 33899                           ; BSR set to: 15
 33900  0064C4  0C32               	retlw	50	;funcret
 33901  0064C6                     __end_of_HardwareInit:
 33902                           	opt stack 0
 33903                           tblptru	equ	0xFF8
 33904                           tblptrh	equ	0xFF7
 33905                           tblptrl	equ	0xFF6
 33906                           tablat	equ	0xFF5
 33907                           prodh	equ	0xFF4
 33908                           prodl	equ	0xFF3
 33909                           intcon	equ	0xFF2
 33910                           intcon2	equ	0xFF1
 33911                           postinc0	equ	0xFEE
 33912                           plusw0	equ	0xFEB
 33913                           fsr0h	equ	0xFEA
 33914                           fsr0l	equ	0xFE9
 33915                           wreg	equ	0xFE8
 33916                           indf1	equ	0xFE7
 33917                           postinc1	equ	0xFE6
 33918                           postdec1	equ	0xFE5
 33919                           plusw1	equ	0xFE3
 33920                           fsr1h	equ	0xFE2
 33921                           fsr1l	equ	0xFE1
 33922                           indf2	equ	0xFDF
 33923                           postinc2	equ	0xFDE
 33924                           postdec2	equ	0xFDD
 33925                           plusw2	equ	0xFDB
 33926                           fsr2h	equ	0xFDA
 33927                           fsr2l	equ	0xFD9
 33928                           status	equ	0xFD8
 33929                           
 33930 ;; *************** function _ButtonTask *****************
 33931 ;; Defined at:
 33932 ;;		line 427 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
 33933 ;; Parameters:    Size  Location     Type
 33934 ;;		None
 33935 ;; Auto vars:     Size  Location     Type
 33936 ;;  Sw              1   20[BANK0 ] unsigned char 
 33937 ;; Return value:  Size  Location     Type
 33938 ;;                  1    wreg      void 
 33939 ;; Registers used:
 33940 ;;		wreg, status,2, status,0, cstack
 33941 ;; Tracked objects:
 33942 ;;		On entry : 0/1
 33943 ;;		On exit  : F/0
 33944 ;;		Unchanged: 0/0
 33945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33950 ;;Total ram usage:        1 bytes
 33951 ;; Hardware stack levels used:    1
 33952 ;; Hardware stack levels required when called:    6
 33953 ;; This function calls:
 33954 ;;		_MiWi_TickGetMs
 33955 ;; This function is called by:
 33956 ;;		_main
 33957 ;; This function uses a non-reentrant model
 33958 ;;
 33959                           
 33960                           	psect	text163
 33961  006D8C                     __ptext163:
 33962                           	opt stack 0
 33963  006D8C                     _ButtonTask:
 33964                           	opt stack 24
 33965                           
 33966                           ;system.c: 429: static MIWI_TICK tStart;
 33967                           ;system.c: 430: static uint8_t s0Count=0,s1Count=0;
 33968                           ;system.c: 431: static uint8_t pS0=0,pS1=0;
 33969                           ;system.c: 432: uint8_t Sw;
 33970                           ;system.c: 433: if((MiWi_TickGetMs().Val - tStart.Val)>10)
 33971                           
 33972                           ; BSR set to: 15
 33973                           ;incstack = 0
 33974  006D8C  EC8B  F03B         	call	_MiWi_TickGetMs	;wreg free
 33975  006D90  516F               	movf	(?_MiWi_TickGetMs+3)& (0+255),w,b
 33976  006D92  116E               	iorwf	(?_MiWi_TickGetMs+2)& (0+255),w,b
 33977  006D94  116D               	iorwf	(?_MiWi_TickGetMs+1)& (0+255),w,b
 33978  006D96  E104               	bnz	u22770
 33979  006D98  0E0B               	movlw	11
 33980  006D9A  5D6C               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 33981  006D9C  A0D8               	btfss	status,0,c
 33982  006D9E  0012               	return	
 33983  006DA0                     u22770:
 33984                           
 33985                           ; BSR set to: 0
 33986                           ;system.c: 434: {
 33987                           ;system.c: 435: Sw=PORTBbits.RB1;
 33988  006DA0  0E00               	movlw	0
 33989  006DA2  B281               	btfsc	3969,1,c	;volatile
 33990  006DA4  0E01               	movlw	1
 33991  006DA6  6F74               	movwf	ButtonTask@Sw& (0+255),b
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;system.c: 436: if(pS0==Sw)
 33995  006DA8  5174               	movf	ButtonTask@Sw& (0+255),w,b
 33996  006DAA  183B               	xorwf	ButtonTask@pS0,w,c
 33997  006DAC  E10A               	bnz	l14861
 33998                           
 33999                           ; BSR set to: 0
 34000                           ;system.c: 437: {
 34001                           ;system.c: 438: if(s0Count<5)
 34002  006DAE  0E05               	movlw	5
 34003  006DB0  603D               	cpfslt	ButtonTask@s0Count,c
 34004  006DB2  D002               	goto	l14855
 34005                           
 34006                           ; BSR set to: 0
 34007                           ;system.c: 439: {
 34008                           ;system.c: 440: s0Count++;
 34009  006DB4  2A3D               	incf	ButtonTask@s0Count,f,c
 34010                           
 34011                           ;system.c: 441: }else
 34012  006DB6  D005               	goto	l14861
 34013  006DB8                     l14855:
 34014                           
 34015                           ; BSR set to: 0
 34016                           ;system.c: 442: {
 34017                           ;system.c: 443: if(pS0==0)
 34018  006DB8  503B               	movf	ButtonTask@pS0,w,c
 34019  006DBA  E102               	bnz	l14859
 34020                           
 34021                           ; BSR set to: 0
 34022                           ;system.c: 444: {
 34023                           ;system.c: 445: switches|=(1<<0);
 34024  006DBC  804B               	bsf	_switches,0,c
 34025                           
 34026                           ;system.c: 446: }else
 34027  006DBE  D001               	goto	l14861
 34028  006DC0                     l14859:
 34029                           
 34030                           ; BSR set to: 0
 34031                           ;system.c: 447: {
 34032                           ;system.c: 448: switches&=(~(1<<0));
 34033  006DC0  904B               	bcf	_switches,0,c
 34034  006DC2                     l14861:
 34035                           
 34036                           ; BSR set to: 0
 34037                           ;system.c: 449: }
 34038                           ;system.c: 450: }
 34039                           ;system.c: 451: }
 34040                           ;system.c: 452: pS0=Sw;
 34041  006DC2  C074  F03B         	movff	ButtonTask@Sw,ButtonTask@pS0
 34042                           
 34043                           ; BSR set to: 0
 34044                           ;system.c: 454: Sw=PORTBbits.RB2;
 34045  006DC6  0E00               	movlw	0
 34046  006DC8  B481               	btfsc	3969,2,c	;volatile
 34047  006DCA  0E01               	movlw	1
 34048  006DCC  6F74               	movwf	ButtonTask@Sw& (0+255),b
 34049                           
 34050                           ;system.c: 455: if(pS1==Sw)
 34051  006DCE  5174               	movf	ButtonTask@Sw& (0+255),w,b
 34052  006DD0  183C               	xorwf	ButtonTask@pS1,w,c
 34053  006DD2  E10A               	bnz	l14875
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;system.c: 456: {
 34057                           ;system.c: 457: if(s1Count<5)
 34058  006DD4  0E05               	movlw	5
 34059  006DD6  603E               	cpfslt	ButtonTask@s1Count,c
 34060  006DD8  D002               	goto	l14869
 34061                           
 34062                           ; BSR set to: 0
 34063                           ;system.c: 458: {
 34064                           ;system.c: 459: s1Count++;
 34065  006DDA  2A3E               	incf	ButtonTask@s1Count,f,c
 34066                           
 34067                           ;system.c: 460: }else
 34068  006DDC  D005               	goto	l14875
 34069  006DDE                     l14869:
 34070                           
 34071                           ; BSR set to: 0
 34072                           ;system.c: 461: {
 34073                           ;system.c: 462: if(pS1==0)
 34074  006DDE  503C               	movf	ButtonTask@pS1,w,c
 34075  006DE0  E102               	bnz	l14873
 34076                           
 34077                           ; BSR set to: 0
 34078                           ;system.c: 463: {
 34079                           ;system.c: 464: switches|=(1<<1);
 34080  006DE2  824B               	bsf	_switches,1,c
 34081                           
 34082                           ;system.c: 465: }else
 34083  006DE4  D001               	goto	l14875
 34084  006DE6                     l14873:
 34085                           
 34086                           ; BSR set to: 0
 34087                           ;system.c: 466: {
 34088                           ;system.c: 467: switches&=(~(1<<1));
 34089  006DE6  924B               	bcf	_switches,1,c
 34090  006DE8                     l14875:
 34091                           
 34092                           ; BSR set to: 0
 34093                           ;system.c: 468: }
 34094                           ;system.c: 469: }
 34095                           ;system.c: 470: }
 34096                           ;system.c: 471: pS1=Sw;
 34097  006DE8  C074  F03C         	movff	ButtonTask@Sw,ButtonTask@pS1
 34098                           
 34099                           ; BSR set to: 0
 34100  006DEC  0012               	return		;funcret
 34101  006DEE                     __end_of_ButtonTask:
 34102                           	opt stack 0
 34103                           tblptru	equ	0xFF8
 34104                           tblptrh	equ	0xFF7
 34105                           tblptrl	equ	0xFF6
 34106                           tablat	equ	0xFF5
 34107                           prodh	equ	0xFF4
 34108                           prodl	equ	0xFF3
 34109                           intcon	equ	0xFF2
 34110                           intcon2	equ	0xFF1
 34111                           postinc0	equ	0xFEE
 34112                           plusw0	equ	0xFEB
 34113                           fsr0h	equ	0xFEA
 34114                           fsr0l	equ	0xFE9
 34115                           wreg	equ	0xFE8
 34116                           indf1	equ	0xFE7
 34117                           postinc1	equ	0xFE6
 34118                           postdec1	equ	0xFE5
 34119                           plusw1	equ	0xFE3
 34120                           fsr1h	equ	0xFE2
 34121                           fsr1l	equ	0xFE1
 34122                           indf2	equ	0xFDF
 34123                           postinc2	equ	0xFDE
 34124                           postdec2	equ	0xFDD
 34125                           plusw2	equ	0xFDB
 34126                           fsr2h	equ	0xFDA
 34127                           fsr2l	equ	0xFD9
 34128                           status	equ	0xFD8
 34129                           
 34130 ;; *************** function _MiWi_TickGetMs *****************
 34131 ;; Defined at:
 34132 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 34133 ;; Parameters:    Size  Location     Type
 34134 ;;		None
 34135 ;; Auto vars:     Size  Location     Type
 34136 ;;  tnow            4   16[BANK0 ] unsigned long 
 34137 ;; Return value:  Size  Location     Type
 34138 ;;                  4   12[BANK0 ] struct MIWI_TICK_t
 34139 ;; Registers used:
 34140 ;;		wreg, status,2, status,0, cstack
 34141 ;; Tracked objects:
 34142 ;;		On entry : 0/1
 34143 ;;		On exit  : F/0
 34144 ;;		Unchanged: 0/0
 34145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34146 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34147 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34149 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34150 ;;Total ram usage:        8 bytes
 34151 ;; Hardware stack levels used:    1
 34152 ;; Hardware stack levels required when called:    5
 34153 ;; This function calls:
 34154 ;;		_MiWi_TickGet
 34155 ;; This function is called by:
 34156 ;;		_ButtonTask
 34157 ;;		_LEDManagerTask
 34158 ;;		_main
 34159 ;;		_MiApp_MessageAvailable
 34160 ;;		_MiApp_SearchConnection
 34161 ;;		_MiMAC_SendPacket
 34162 ;;		_MiMAC_PowerState
 34163 ;; This function uses a non-reentrant model
 34164 ;;
 34165                           
 34166                           	psect	text164
 34167  007716                     __ptext164:
 34168                           	opt stack 0
 34169  007716                     _MiWi_TickGetMs:
 34170                           	opt stack 25
 34171                           
 34172                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 34173                           
 34174                           ; BSR set to: 0
 34175                           ;incstack = 0
 34176  007716  EC37  F03A         	call	_MiWi_TickGet	;wreg free
 34177  00771A  C060  F070         	movff	?_MiWi_TickGet,MiWi_TickGetMs@tnow
 34178  00771E  C061  F071         	movff	?_MiWi_TickGet+1,MiWi_TickGetMs@tnow+1
 34179  007722  C062  F072         	movff	?_MiWi_TickGet+2,MiWi_TickGetMs@tnow+2
 34180  007726  C063  F073         	movff	?_MiWi_TickGet+3,MiWi_TickGetMs@tnow+3
 34181                           
 34182                           ; BSR set to: 0
 34183                           ;symbol.c: 123: currentTime.Val=tnow;
 34184  00772A  C070  F248         	movff	MiWi_TickGetMs@tnow,_currentTime
 34185  00772E  C071  F249         	movff	MiWi_TickGetMs@tnow+1,_currentTime+1
 34186  007732  C072  F24A         	movff	MiWi_TickGetMs@tnow+2,_currentTime+2
 34187  007736  C073  F24B         	movff	MiWi_TickGetMs@tnow+3,_currentTime+3
 34188                           
 34189                           ; BSR set to: 0
 34190                           ;symbol.c: 124: return(currentTime);
 34191  00773A  C248  F06C         	movff	_currentTime,?_MiWi_TickGetMs
 34192  00773E  C249  F06D         	movff	_currentTime+1,?_MiWi_TickGetMs+1
 34193  007742  C24A  F06E         	movff	_currentTime+2,?_MiWi_TickGetMs+2
 34194  007746  C24B  F06F         	movff	_currentTime+3,?_MiWi_TickGetMs+3
 34195                           
 34196                           ; BSR set to: 0
 34197  00774A  0012               	return		;funcret
 34198  00774C                     __end_of_MiWi_TickGetMs:
 34199                           	opt stack 0
 34200                           tblptru	equ	0xFF8
 34201                           tblptrh	equ	0xFF7
 34202                           tblptrl	equ	0xFF6
 34203                           tablat	equ	0xFF5
 34204                           prodh	equ	0xFF4
 34205                           prodl	equ	0xFF3
 34206                           intcon	equ	0xFF2
 34207                           intcon2	equ	0xFF1
 34208                           postinc0	equ	0xFEE
 34209                           plusw0	equ	0xFEB
 34210                           fsr0h	equ	0xFEA
 34211                           fsr0l	equ	0xFE9
 34212                           wreg	equ	0xFE8
 34213                           indf1	equ	0xFE7
 34214                           postinc1	equ	0xFE6
 34215                           postdec1	equ	0xFE5
 34216                           plusw1	equ	0xFE3
 34217                           fsr1h	equ	0xFE2
 34218                           fsr1l	equ	0xFE1
 34219                           indf2	equ	0xFDF
 34220                           postinc2	equ	0xFDE
 34221                           postdec2	equ	0xFDD
 34222                           plusw2	equ	0xFDB
 34223                           fsr2h	equ	0xFDA
 34224                           fsr2l	equ	0xFD9
 34225                           status	equ	0xFD8
 34226                           
 34227 ;; *************** function _MiWi_TickGet *****************
 34228 ;; Defined at:
 34229 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 34230 ;; Parameters:    Size  Location     Type
 34231 ;;		None
 34232 ;; Auto vars:     Size  Location     Type
 34233 ;;  tmrval          4    8[BANK0 ] unsigned long 
 34234 ;;  t1ext           4    4[BANK0 ] unsigned long 
 34235 ;; Return value:  Size  Location     Type
 34236 ;;                  4    0[BANK0 ] unsigned long 
 34237 ;; Registers used:
 34238 ;;		wreg, status,2, status,0
 34239 ;; Tracked objects:
 34240 ;;		On entry : 0/1
 34241 ;;		On exit  : F/0
 34242 ;;		Unchanged: 0/0
 34243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34245 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34247 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34248 ;;Total ram usage:       12 bytes
 34249 ;; Hardware stack levels used:    1
 34250 ;; Hardware stack levels required when called:    4
 34251 ;; This function calls:
 34252 ;;		Nothing
 34253 ;; This function is called by:
 34254 ;;		_MiWi_TickGetMs
 34255 ;; This function uses a non-reentrant model
 34256 ;;
 34257                           
 34258                           	psect	text165
 34259  00746E                     __ptext165:
 34260                           	opt stack 0
 34261  00746E                     _MiWi_TickGet:
 34262                           	opt stack 25
 34263                           
 34264                           ;symbol.c: 129: uint32_t tmrval=0;
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;incstack = 0
 34268  00746E  0100               	movlb	0	; () banked
 34269  007470  6B68               	clrf	MiWi_TickGet@tmrval& (0+255),b
 34270  007472  6B69               	clrf	(MiWi_TickGet@tmrval+1)& (0+255),b
 34271  007474  6B6A               	clrf	(MiWi_TickGet@tmrval+2)& (0+255),b
 34272  007476  6B6B               	clrf	(MiWi_TickGet@tmrval+3)& (0+255),b
 34273  007478                     l125:
 34274                           
 34275                           ;symbol.c: 133: {
 34276                           ;symbol.c: 134: t1fired=0;
 34277  007478  6A4C               	clrf	_t1fired,c	;volatile
 34278                           
 34279                           ;symbol.c: 136: t1ext=t1extension;
 34280  00747A  C250  F064         	movff	_t1extension,MiWi_TickGet@t1ext
 34281  00747E  C251  F065         	movff	_t1extension+1,MiWi_TickGet@t1ext+1
 34282  007482  C252  F066         	movff	_t1extension+2,MiWi_TickGet@t1ext+2
 34283  007486  C253  F067         	movff	_t1extension+3,MiWi_TickGet@t1ext+3
 34284                           
 34285                           ;symbol.c: 137: } while(t1fired==1);
 34286  00748A  044C               	decf	_t1fired,w,c	;volatile
 34287  00748C  E0F5               	bz	l125
 34288                           
 34289                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 34290  00748E  0100               	movlb	0	; () banked
 34291  007490  5164               	movf	MiWi_TickGet@t1ext& (0+255),w,b
 34292  007492  1368               	iorwf	MiWi_TickGet@tmrval& (0+255),f,b
 34293  007494  5165               	movf	(MiWi_TickGet@t1ext+1)& (0+255),w,b
 34294  007496  1369               	iorwf	(MiWi_TickGet@tmrval+1)& (0+255),f,b
 34295  007498  5166               	movf	(MiWi_TickGet@t1ext+2)& (0+255),w,b
 34296  00749A  136A               	iorwf	(MiWi_TickGet@tmrval+2)& (0+255),f,b
 34297  00749C  5167               	movf	(MiWi_TickGet@t1ext+3)& (0+255),w,b
 34298  00749E  136B               	iorwf	(MiWi_TickGet@tmrval+3)& (0+255),f,b
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;symbol.c: 140: return(tmrval);
 34302  0074A0  C068  F060         	movff	MiWi_TickGet@tmrval,?_MiWi_TickGet
 34303  0074A4  C069  F061         	movff	MiWi_TickGet@tmrval+1,?_MiWi_TickGet+1
 34304  0074A8  C06A  F062         	movff	MiWi_TickGet@tmrval+2,?_MiWi_TickGet+2
 34305  0074AC  C06B  F063         	movff	MiWi_TickGet@tmrval+3,?_MiWi_TickGet+3
 34306                           
 34307                           ; BSR set to: 0
 34308  0074B0  0012               	return		;funcret
 34309  0074B2                     __end_of_MiWi_TickGet:
 34310                           	opt stack 0
 34311                           tblptru	equ	0xFF8
 34312                           tblptrh	equ	0xFF7
 34313                           tblptrl	equ	0xFF6
 34314                           tablat	equ	0xFF5
 34315                           prodh	equ	0xFF4
 34316                           prodl	equ	0xFF3
 34317                           intcon	equ	0xFF2
 34318                           intcon2	equ	0xFF1
 34319                           postinc0	equ	0xFEE
 34320                           plusw0	equ	0xFEB
 34321                           fsr0h	equ	0xFEA
 34322                           fsr0l	equ	0xFE9
 34323                           wreg	equ	0xFE8
 34324                           indf1	equ	0xFE7
 34325                           postinc1	equ	0xFE6
 34326                           postdec1	equ	0xFE5
 34327                           plusw1	equ	0xFE3
 34328                           fsr1h	equ	0xFE2
 34329                           fsr1l	equ	0xFE1
 34330                           indf2	equ	0xFDF
 34331                           postinc2	equ	0xFDE
 34332                           postdec2	equ	0xFDD
 34333                           plusw2	equ	0xFDB
 34334                           fsr2h	equ	0xFDA
 34335                           fsr2l	equ	0xFD9
 34336                           status	equ	0xFD8
 34337                           
 34338 ;; *************** function _HighISR *****************
 34339 ;; Defined at:
 34340 ;;		line 1615 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 34341 ;; Parameters:    Size  Location     Type
 34342 ;;		None
 34343 ;; Auto vars:     Size  Location     Type
 34344 ;;  FrameControl    1   44[COMRAM] unsigned char 
 34345 ;;  v               1   43[COMRAM] PTR unsigned char 
 34346 ;;		 -> tmpFrameCounter(4), 
 34347 ;;  DecryptionSt    1   42[COMRAM] unsigned char 
 34348 ;;  results         1   41[COMRAM] unsigned char 
 34349 ;;  FrameControl    1   45[COMRAM] unsigned char 
 34350 ;;  RxBank          1   50[COMRAM] unsigned char 
 34351 ;;  flags           2   46[COMRAM] struct .
 34352 ;;  tmr             2   48[COMRAM] unsigned int 
 34353 ;;  i               1   52[COMRAM] unsigned char 
 34354 ;;  j               1   51[COMRAM] unsigned char 
 34355 ;; Return value:  Size  Location     Type
 34356 ;;                  1    wreg      void 
 34357 ;; Registers used:
 34358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34359 ;; Tracked objects:
 34360 ;;		On entry : 0/0
 34361 ;;		On exit  : 0/0
 34362 ;;		Unchanged: 0/0
 34363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34365 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34366 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34367 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34368 ;;Total ram usage:       29 bytes
 34369 ;; Hardware stack levels used:    1
 34370 ;; Hardware stack levels required when called:    3
 34371 ;; This function calls:
 34372 ;;		i2_PHYGetLongRAMAddr
 34373 ;;		i2_PHYGetShortRAMAddr
 34374 ;;		i2_PHYSetLongRAMAddr
 34375 ;;		i2_PHYSetShortRAMAddr
 34376 ;;		i2_isSameAddress
 34377 ;; This function is called by:
 34378 ;;		Interrupt level 2
 34379 ;; This function uses a non-reentrant model
 34380 ;;
 34381                           
 34382                           	psect	intcode
 34383  000008                     __pintcode:
 34384                           	opt stack 0
 34385  000008                     _HighISR:
 34386                           	opt stack 14
 34387                           
 34388                           ; BSR set to: 0
 34389                           ;incstack = 0
 34390  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34391  00000A  CFE9 F01E          	movff	fsr0l,??_HighISR+5
 34392  00000E  CFEA F01F          	movff	fsr0h,??_HighISR+6
 34393  000012  CFE1 F020          	movff	fsr1l,??_HighISR+7
 34394  000016  CFE2 F021          	movff	fsr1h,??_HighISR+8
 34395  00001A  CFD9 F022          	movff	fsr2l,??_HighISR+9
 34396  00001E  CFDA F023          	movff	fsr2h,??_HighISR+10
 34397  000022  CFF3 F024          	movff	prodl,??_HighISR+11
 34398  000026  CFF4 F025          	movff	prodh,??_HighISR+12
 34399  00002A  CFF6 F026          	movff	tblptrl,??_HighISR+13
 34400  00002E  CFF7 F027          	movff	tblptrh,??_HighISR+14
 34401  000032  CFF8 F028          	movff	tblptru,??_HighISR+15
 34402  000036  CFF5 F029          	movff	tablat,??_HighISR+16
 34403                           
 34404                           ;drv_mrf_miwi_mesh_24j40.c: 1624: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
 34405  00003A  B8F2               	btfsc	intcon,4,c	;volatile
 34406  00003C  A2F2               	btfss	intcon,1,c	;volatile
 34407  00003E  D1E6               	goto	i2l15669
 34408                           
 34409                           ;drv_mrf_miwi_mesh_24j40.c: 1625: {
 34410                           ;drv_mrf_miwi_mesh_24j40.c: 1626: uint8_t i;
 34411                           ;drv_mrf_miwi_mesh_24j40.c: 1627: uint8_t j;
 34412                           ;drv_mrf_miwi_mesh_24j40.c: 1631: INTCONbits.INT0IF = 0;
 34413  000040  92F2               	bcf	intcon,1,c	;volatile
 34414                           
 34415                           ;drv_mrf_miwi_mesh_24j40.c: 1635: {
 34416                           ;drv_mrf_miwi_mesh_24j40.c: 1636: MRF24J40_IFREG flags;
 34417                           ;drv_mrf_miwi_mesh_24j40.c: 1639: flags.Val=PHYGetShortRAMAddr((0x62));
 34418  000042  0E62               	movlw	98
 34419  000044  EC76  F03C         	call	i2_PHYGetShortRAMAddr
 34420  000048  6E2F               	movwf	HighISR@flags,c
 34421                           
 34422                           ;drv_mrf_miwi_mesh_24j40.c: 1641: if(flags.bits.RF_TXIF)
 34423  00004A  A02F               	btfss	HighISR@flags,0,c
 34424  00004C  D00D               	goto	i2l919
 34425                           
 34426                           ;drv_mrf_miwi_mesh_24j40.c: 1642: {
 34427                           ;drv_mrf_miwi_mesh_24j40.c: 1645: MRF24J40Status.bits.TX_BUSY = 0;
 34428  00004E  9042               	bcf	_MRF24J40Status,0,c	;volatile
 34429                           
 34430                           ;drv_mrf_miwi_mesh_24j40.c: 1647: failureCounter = 0;
 34431  000050  0101               	movlb	1	; () banked
 34432  000052  6BDC               	clrf	_failureCounter& (0+255),b	;volatile
 34433  000054  6BDD               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 34434                           
 34435                           ;drv_mrf_miwi_mesh_24j40.c: 1651: if(MRF24J40Status.bits.TX_PENDING_ACK)
 34436  000056  A242               	btfss	_MRF24J40Status,1,c	;volatile
 34437  000058  D007               	goto	i2l919
 34438                           
 34439                           ; BSR set to: 1
 34440                           ;drv_mrf_miwi_mesh_24j40.c: 1652: {
 34441                           ;drv_mrf_miwi_mesh_24j40.c: 1653: uint8_t results;
 34442                           ;drv_mrf_miwi_mesh_24j40.c: 1656: results = PHYGetShortRAMAddr((0x48));
 34443  00005A  0E48               	movlw	72
 34444  00005C  EC76  F03C         	call	i2_PHYGetShortRAMAddr
 34445  000060  6E2A               	movwf	HighISR@results,c
 34446                           
 34447                           ;drv_mrf_miwi_mesh_24j40.c: 1658: if((results & 0x01)>0)
 34448  000062  B02A               	btfsc	HighISR@results,0,c
 34449                           
 34450                           ;drv_mrf_miwi_mesh_24j40.c: 1659: {
 34451                           ;drv_mrf_miwi_mesh_24j40.c: 1662: MRF24J40Status.bits.TX_FAIL = 1;
 34452  000064  8442               	bsf	_MRF24J40Status,2,c	;volatile
 34453                           
 34454                           ;drv_mrf_miwi_mesh_24j40.c: 1663: }
 34455                           ;drv_mrf_miwi_mesh_24j40.c: 1667: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 34456  000066  9242               	bcf	_MRF24J40Status,1,c	;volatile
 34457  000068                     i2l919:
 34458                           
 34459                           ;drv_mrf_miwi_mesh_24j40.c: 1669: }
 34460                           ;drv_mrf_miwi_mesh_24j40.c: 1671: }
 34461                           ;drv_mrf_miwi_mesh_24j40.c: 1673: if(flags.bits.RF_RXIF)
 34462  000068  A62F               	btfss	HighISR@flags,3,c
 34463  00006A  D159               	goto	i2l15613
 34464                           
 34465                           ;drv_mrf_miwi_mesh_24j40.c: 1674: {
 34466                           ;drv_mrf_miwi_mesh_24j40.c: 1675: uint8_t RxBank = 0xFF;
 34467  00006C  6833               	setf	HighISR@RxBank,c
 34468                           
 34469                           ;drv_mrf_miwi_mesh_24j40.c: 1677: for(i = 0; i < 2; i++)
 34470  00006E  6A35               	clrf	HighISR@i,c
 34471  000070                     i2l15497:
 34472                           
 34473                           ;drv_mrf_miwi_mesh_24j40.c: 1678: {
 34474                           ;drv_mrf_miwi_mesh_24j40.c: 1679: if( RxBuffer[i].PayloadLen == 0 )
 34475  000070  5035               	movf	HighISR@i,w,c
 34476  000072  0D80               	mullw	128
 34477  000074  0E00               	movlw	low _RxBuffer
 34478  000076  24F3               	addwf	prodl,w,c
 34479  000078  6ED9               	movwf	fsr2l,c
 34480  00007A  0E04               	movlw	high _RxBuffer
 34481  00007C  20F4               	addwfc	prodh,w,c
 34482  00007E  6EDA               	movwf	fsr2h,c
 34483  000080  50DF               	movf	indf2,w,c
 34484  000082  E103               	bnz	i2l15501
 34485                           
 34486                           ;drv_mrf_miwi_mesh_24j40.c: 1680: {
 34487                           ;drv_mrf_miwi_mesh_24j40.c: 1681: RxBank = i;
 34488  000084  C035  F033         	movff	HighISR@i,HighISR@RxBank
 34489                           
 34490                           ;drv_mrf_miwi_mesh_24j40.c: 1682: break;
 34491  000088  D004               	goto	i2l15505
 34492  00008A                     i2l15501:
 34493  00008A  2A35               	incf	HighISR@i,f,c
 34494  00008C  0E01               	movlw	1
 34495  00008E  6435               	cpfsgt	HighISR@i,c
 34496  000090  D7EF               	goto	i2l15497
 34497  000092                     i2l15505:
 34498                           
 34499                           ;drv_mrf_miwi_mesh_24j40.c: 1683: }
 34500                           ;drv_mrf_miwi_mesh_24j40.c: 1684: }
 34501                           ;drv_mrf_miwi_mesh_24j40.c: 1687: if( RxBank < 2 )
 34502  000092  0E02               	movlw	2
 34503  000094  6033               	cpfslt	HighISR@RxBank,c
 34504  000096  D13C               	goto	i2l15607
 34505                           
 34506                           ;drv_mrf_miwi_mesh_24j40.c: 1688: {
 34507                           ;drv_mrf_miwi_mesh_24j40.c: 1690: if( MRF24J40Status.bits.RX_SECURITY )
 34508  000098  A642               	btfss	_MRF24J40Status,3,c	;volatile
 34509  00009A  D0C9               	goto	i2l927
 34510                           
 34511                           ;drv_mrf_miwi_mesh_24j40.c: 1691: {
 34512                           ;drv_mrf_miwi_mesh_24j40.c: 1692: uint8_t DecryptionStatus = PHYGetShortRAMAddr((0x5E));
 34513  00009C  0E5E               	movlw	94
 34514  00009E  EC76  F03C         	call	i2_PHYGetShortRAMAddr
 34515  0000A2  6E2B               	movwf	HighISR@DecryptionStatus,c
 34516                           
 34517                           ;drv_mrf_miwi_mesh_24j40.c: 1693: uint8_t FrameControl;
 34518                           ;drv_mrf_miwi_mesh_24j40.c: 1695: MRF24J40Status.bits.RX_SECURITY = 0;
 34519  0000A4  9642               	bcf	_MRF24J40Status,3,c	;volatile
 34520                           
 34521                           ;drv_mrf_miwi_mesh_24j40.c: 1696: if( (DecryptionStatus & 0x02) != 0 )
 34522  0000A6  A22B               	btfss	HighISR@DecryptionStatus,1,c
 34523  0000A8  D006               	goto	i2l15517
 34524                           
 34525                           ;drv_mrf_miwi_mesh_24j40.c: 1697: {
 34526                           ;drv_mrf_miwi_mesh_24j40.c: 1698: PHYSetShortRAMAddr((0x1B),0x01);
 34527  0000AA  0E01               	movlw	1
 34528  0000AC  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34529  0000AE  0E1B               	movlw	27
 34530  0000B0  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34531                           
 34532                           ;drv_mrf_miwi_mesh_24j40.c: 1699: goto START_OF_SEC_INT;
 34533  0000B4  D134               	goto	i2l15613
 34534  0000B6                     i2l15517:
 34535                           
 34536                           ;drv_mrf_miwi_mesh_24j40.c: 1700: }
 34537                           ;drv_mrf_miwi_mesh_24j40.c: 1702: i = 6;
 34538  0000B6  0E06               	movlw	6
 34539  0000B8  6E35               	movwf	HighISR@i,c
 34540                           
 34541                           ;drv_mrf_miwi_mesh_24j40.c: 1703: FrameControl = PHYGetLongRAMAddr(0x301);
 34542  0000BA  0E03               	movlw	3
 34543  0000BC  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 34544  0000BE  0E01               	movlw	1
 34545  0000C0  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 34546  0000C2  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34547  0000C6  6E2D               	movwf	HighISR@FrameControl,c
 34548                           
 34549                           ;drv_mrf_miwi_mesh_24j40.c: 1704: if( (FrameControl & 0x40) == 0 )
 34550  0000C8  BC2D               	btfsc	HighISR@FrameControl,6,c
 34551  0000CA  D002               	goto	i2l15525
 34552                           
 34553                           ;drv_mrf_miwi_mesh_24j40.c: 1705: {
 34554                           ;drv_mrf_miwi_mesh_24j40.c: 1706: i += 2;
 34555  0000CC  0E02               	movlw	2
 34556  0000CE  2635               	addwf	HighISR@i,f,c
 34557  0000D0                     i2l15525:
 34558                           
 34559                           ;drv_mrf_miwi_mesh_24j40.c: 1707: }
 34560                           ;drv_mrf_miwi_mesh_24j40.c: 1709: FrameControl = PHYGetLongRAMAddr(0x302);
 34561  0000D0  0E03               	movlw	3
 34562  0000D2  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 34563  0000D4  0E02               	movlw	2
 34564  0000D6  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 34565  0000D8  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34566  0000DC  6E2D               	movwf	HighISR@FrameControl,c
 34567                           
 34568                           ;drv_mrf_miwi_mesh_24j40.c: 1710: if( (FrameControl & 0x0C) == 0x0C )
 34569  0000DE  502D               	movf	HighISR@FrameControl,w,c
 34570  0000E0  0B0C               	andlw	12
 34571  0000E2  0A0C               	xorlw	12
 34572                           
 34573                           ;drv_mrf_miwi_mesh_24j40.c: 1711: {
 34574                           ;drv_mrf_miwi_mesh_24j40.c: 1712: i += 8;
 34575  0000E4  0E08               	movlw	8
 34576  0000E6  A4D8               	btfss	status,2,c
 34577                           
 34578                           ;drv_mrf_miwi_mesh_24j40.c: 1714: else
 34579                           ;drv_mrf_miwi_mesh_24j40.c: 1715: {
 34580                           ;drv_mrf_miwi_mesh_24j40.c: 1716: i += 2;
 34581  0000E8  0E02               	movlw	2
 34582                           
 34583                           ;drv_mrf_miwi_mesh_24j40.c: 1713: }
 34584  0000EA  2635               	addwf	HighISR@i,f,c
 34585                           
 34586                           ;drv_mrf_miwi_mesh_24j40.c: 1717: }
 34587                           ;drv_mrf_miwi_mesh_24j40.c: 1720: for(j = 0; j < 8; j++)
 34588  0000EC  6A34               	clrf	HighISR@j,c
 34589  0000EE                     i2l15537:
 34590                           
 34591                           ;drv_mrf_miwi_mesh_24j40.c: 1721: {
 34592                           ;drv_mrf_miwi_mesh_24j40.c: 1722: tmpSourceLongAddress.bytes[j] = PHYGetLongRAMAddr(0x30
      +                          0 + i + j);
 34593  0000EE  0E24               	movlw	low _tmpSourceLongAddress
 34594  0000F0  2434               	addwf	HighISR@j,w,c
 34595  0000F2  6ED9               	movwf	fsr2l,c
 34596  0000F4  6ADA               	clrf	fsr2h,c
 34597  0000F6  0E02               	movlw	high _tmpSourceLongAddress
 34598  0000F8  22DA               	addwfc	fsr2h,f,c
 34599  0000FA  5034               	movf	HighISR@j,w,c
 34600  0000FC  C035  F019         	movff	HighISR@i,??_HighISR
 34601  000100  6A1A               	clrf	(??_HighISR+1)& (0+255),c
 34602  000102  2619               	addwf	??_HighISR,f,c
 34603  000104  0E00               	movlw	0
 34604  000106  221A               	addwfc	??_HighISR+1,f,c
 34605  000108  2419               	addwf	??_HighISR,w,c
 34606  00010A  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 34607  00010C  0E03               	movlw	3
 34608  00010E  201A               	addwfc	??_HighISR+1,w,c
 34609  000110  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 34610  000112  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34611  000116  6EDF               	movwf	indf2,c
 34612  000118  2A34               	incf	HighISR@j,f,c
 34613  00011A  0E07               	movlw	7
 34614  00011C  6434               	cpfsgt	HighISR@j,c
 34615  00011E  D7E7               	goto	i2l15537
 34616                           
 34617                           ;drv_mrf_miwi_mesh_24j40.c: 1723: }
 34618                           ;drv_mrf_miwi_mesh_24j40.c: 1724: uint8_t* v=(uint8_t*)&tmpFrameCounter;
 34619  000120  0E4D               	movlw	low _tmpFrameCounter
 34620  000122  6E2C               	movwf	HighISR@v,c
 34621                           
 34622                           ;drv_mrf_miwi_mesh_24j40.c: 1725: for(j = 0; j < 4; j++)
 34623  000124  6A34               	clrf	HighISR@j,c
 34624  000126                     i2l15549:
 34625                           
 34626                           ;drv_mrf_miwi_mesh_24j40.c: 1726: {
 34627                           ;drv_mrf_miwi_mesh_24j40.c: 1727: v[j] = PHYGetLongRAMAddr(0x308 + i + j);
 34628  000126  502C               	movf	HighISR@v,w,c
 34629  000128  2434               	addwf	HighISR@j,w,c
 34630  00012A  6ED9               	movwf	fsr2l,c
 34631  00012C  6ADA               	clrf	fsr2h,c
 34632  00012E  5034               	movf	HighISR@j,w,c
 34633  000130  C035  F019         	movff	HighISR@i,??_HighISR
 34634  000134  6A1A               	clrf	(??_HighISR+1)& (0+255),c
 34635  000136  2619               	addwf	??_HighISR,f,c
 34636  000138  0E00               	movlw	0
 34637  00013A  221A               	addwfc	??_HighISR+1,f,c
 34638  00013C  0E08               	movlw	8
 34639  00013E  2419               	addwf	??_HighISR,w,c
 34640  000140  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 34641  000142  0E03               	movlw	3
 34642  000144  201A               	addwfc	??_HighISR+1,w,c
 34643  000146  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 34644  000148  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34645  00014C  6EDF               	movwf	indf2,c
 34646  00014E  2A34               	incf	HighISR@j,f,c
 34647  000150  0E03               	movlw	3
 34648  000152  6434               	cpfsgt	HighISR@j,c
 34649  000154  D7E8               	goto	i2l15549
 34650                           
 34651                           ;drv_mrf_miwi_mesh_24j40.c: 1728: }
 34652                           ;drv_mrf_miwi_mesh_24j40.c: 1731: for(i = 0; i < 5; i++)
 34653  000156  6A35               	clrf	HighISR@i,c
 34654  000158                     i2l15559:
 34655                           
 34656                           ;drv_mrf_miwi_mesh_24j40.c: 1732: {
 34657                           ;drv_mrf_miwi_mesh_24j40.c: 1733: if( (ConnectionTable[i].status.bits.isValid) &&
 34658                           ;drv_mrf_miwi_mesh_24j40.c: 1734: isSameAddress(ConnectionTable[i].Address, tmpSourceLon
      +                          gAddress) )
 34659  000158  5035               	movf	HighISR@i,w,c
 34660  00015A  0D11               	mullw	17
 34661  00015C  0E10               	movlw	low (_ConnectionTable+16)
 34662  00015E  24F3               	addwf	prodl,w,c
 34663  000160  6ED9               	movwf	fsr2l,c
 34664  000162  0E03               	movlw	high (_ConnectionTable+16)
 34665  000164  20F4               	addwfc	prodh,w,c
 34666  000166  6EDA               	movwf	fsr2h,c
 34667  000168  0103               	movlb	3	; () banked
 34668  00016A  AEDF               	btfss	indf2,7,c
 34669  00016C  D01C               	goto	i2l15565
 34670                           
 34671                           ; BSR set to: 3
 34672  00016E  5035               	movf	HighISR@i,w,c
 34673  000170  0D11               	mullw	17
 34674  000172  0E08               	movlw	low (_ConnectionTable+8)
 34675  000174  24F3               	addwf	prodl,w,c
 34676  000176  6ED9               	movwf	fsr2l,c
 34677  000178  0E03               	movlw	high (_ConnectionTable+8)
 34678  00017A  20F4               	addwfc	prodh,w,c
 34679  00017C  6EDA               	movwf	fsr2h,c
 34680  00017E  EE00  F009         	lfsr	0,i2isSameAddress@a1
 34681  000182  0E07               	movlw	7
 34682  000184                     i2u2393_41:
 34683  000184  CFDB FFEB          	movff	plusw2,plusw0
 34684  000188  06E8               	decf	wreg,f,c
 34685  00018A  E2FC               	bc	i2u2393_41
 34686  00018C  EE22  F024         	lfsr	2,_tmpSourceLongAddress
 34687  000190  EE00  F011         	lfsr	0,i2isSameAddress@a2
 34688  000194  0E07               	movlw	7
 34689  000196                     i2u2394_41:
 34690  000196  CFDB FFEB          	movff	plusw2,plusw0
 34691  00019A  06E8               	decf	wreg,f,c
 34692  00019C  E2FC               	bc	i2u2394_41
 34693  00019E  ECD7  F03C         	call	i2_isSameAddress	;wreg free
 34694  0001A2  0900               	iorlw	0
 34695  0001A4  E104               	bnz	i2l15569
 34696  0001A6                     i2l15565:
 34697                           
 34698                           ; BSR set to: 3
 34699  0001A6  2A35               	incf	HighISR@i,f,c
 34700                           
 34701                           ; BSR set to: 3
 34702  0001A8  0E04               	movlw	4
 34703  0001AA  6435               	cpfsgt	HighISR@i,c
 34704  0001AC  D7D5               	goto	i2l15559
 34705  0001AE                     i2l15569:
 34706                           
 34707                           ; BSR set to: 3
 34708                           ;drv_mrf_miwi_mesh_24j40.c: 1737: }
 34709                           ;drv_mrf_miwi_mesh_24j40.c: 1738: }
 34710                           ;drv_mrf_miwi_mesh_24j40.c: 1740: if( i < 5 )
 34711  0001AE  0E05               	movlw	5
 34712  0001B0  6035               	cpfslt	HighISR@i,c
 34713  0001B2  D046               	goto	i2l15587
 34714                           
 34715                           ; BSR set to: 3
 34716                           ;drv_mrf_miwi_mesh_24j40.c: 1741: {
 34717                           ;drv_mrf_miwi_mesh_24j40.c: 1742: if( ConnectionTable[i].IncomingFrameCounter > tmpFrame
      +                          Counter )
 34718  0001B4  5035               	movf	HighISR@i,w,c
 34719  0001B6  0D11               	mullw	17
 34720  0001B8  0E00               	movlw	low _ConnectionTable
 34721  0001BA  24F3               	addwf	prodl,w,c
 34722  0001BC  6ED9               	movwf	fsr2l,c
 34723  0001BE  0E03               	movlw	high _ConnectionTable
 34724  0001C0  20F4               	addwfc	prodh,w,c
 34725  0001C2  6EDA               	movwf	fsr2h,c
 34726  0001C4  50DE               	movf	postinc2,w,c
 34727  0001C6  5C4D               	subwf	_tmpFrameCounter,w,c
 34728  0001C8  50DE               	movf	postinc2,w,c
 34729  0001CA  584E               	subwfb	_tmpFrameCounter+1,w,c
 34730  0001CC  50DE               	movf	postinc2,w,c
 34731  0001CE  584F               	subwfb	_tmpFrameCounter+2,w,c
 34732  0001D0  50DE               	movf	postinc2,w,c
 34733  0001D2  5850               	subwfb	_tmpFrameCounter+3,w,c
 34734  0001D4  E206               	bc	i2l15577
 34735                           
 34736                           ; BSR set to: 3
 34737                           ;drv_mrf_miwi_mesh_24j40.c: 1743: {
 34738                           ;drv_mrf_miwi_mesh_24j40.c: 1744: PHYSetShortRAMAddr((0x1B),0x01);
 34739  0001D6  0E01               	movlw	1
 34740  0001D8  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34741  0001DA  0E1B               	movlw	27
 34742  0001DC  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34743                           
 34744                           ;drv_mrf_miwi_mesh_24j40.c: 1745: goto START_OF_SEC_INT;
 34745  0001E0  D09E               	goto	i2l15613
 34746  0001E2                     i2l15577:
 34747                           
 34748                           ; BSR set to: 3
 34749                           ;drv_mrf_miwi_mesh_24j40.c: 1747: else
 34750                           ;drv_mrf_miwi_mesh_24j40.c: 1748: {
 34751                           ;drv_mrf_miwi_mesh_24j40.c: 1749: if( tmpFrameCounter == 0xFFFFFFFF )
 34752  0001E2  284D               	incf	_tmpFrameCounter,w,c
 34753  0001E4  E113               	bnz	i2l15581
 34754  0001E6  284E               	incf	_tmpFrameCounter+1,w,c
 34755  0001E8  E111               	bnz	i2l15581
 34756  0001EA  284F               	incf	_tmpFrameCounter+2,w,c
 34757  0001EC  E10F               	bnz	i2l15581
 34758  0001EE  2850               	incf	_tmpFrameCounter+3,w,c
 34759  0001F0  E10D               	bnz	i2l15581
 34760                           
 34761                           ; BSR set to: 3
 34762                           ;drv_mrf_miwi_mesh_24j40.c: 1750: {
 34763                           ;drv_mrf_miwi_mesh_24j40.c: 1751: ConnectionTable[i].IncomingFrameCounter = 0;
 34764  0001F2  5035               	movf	HighISR@i,w,c
 34765  0001F4  0D11               	mullw	17
 34766  0001F6  0E00               	movlw	low _ConnectionTable
 34767  0001F8  24F3               	addwf	prodl,w,c
 34768  0001FA  6ED9               	movwf	fsr2l,c
 34769  0001FC  0E03               	movlw	high _ConnectionTable
 34770  0001FE  20F4               	addwfc	prodh,w,c
 34771  000200  6EDA               	movwf	fsr2h,c
 34772  000202  6ADE               	clrf	postinc2,c
 34773  000204  6ADE               	clrf	postinc2,c
 34774  000206  6ADE               	clrf	postinc2,c
 34775  000208  6ADD               	clrf	postdec2,c
 34776                           
 34777                           ;drv_mrf_miwi_mesh_24j40.c: 1752: }
 34778  00020A  D01A               	goto	i2l15587
 34779  00020C                     i2l15581:
 34780                           
 34781                           ; BSR set to: 3
 34782                           ;drv_mrf_miwi_mesh_24j40.c: 1753: else
 34783                           ;drv_mrf_miwi_mesh_24j40.c: 1754: {
 34784                           ;drv_mrf_miwi_mesh_24j40.c: 1755: ConnectionTable[i].IncomingFrameCounter = tmpFrameCoun
      +                          ter;
 34785  00020C  5035               	movf	HighISR@i,w,c
 34786  00020E  0D11               	mullw	17
 34787  000210  0E00               	movlw	low _ConnectionTable
 34788  000212  24F3               	addwf	prodl,w,c
 34789  000214  6ED9               	movwf	fsr2l,c
 34790  000216  0E03               	movlw	high _ConnectionTable
 34791  000218  20F4               	addwfc	prodh,w,c
 34792  00021A  6EDA               	movwf	fsr2h,c
 34793  00021C  C04D  FFDE         	movff	_tmpFrameCounter,postinc2
 34794  000220  C04E  FFDE         	movff	_tmpFrameCounter+1,postinc2
 34795  000224  C04F  FFDE         	movff	_tmpFrameCounter+2,postinc2
 34796  000228  C050  FFDE         	movff	_tmpFrameCounter+3,postinc2
 34797  00022C  D009               	goto	i2l15587
 34798  00022E                     i2l927:
 34799                           
 34800                           ;drv_mrf_miwi_mesh_24j40.c: 1761: else
 34801                           ;drv_mrf_miwi_mesh_24j40.c: 1764: if( MRF24J40Status.bits.RX_IGNORE_SECURITY )
 34802  00022E  A842               	btfss	_MRF24J40Status,4,c	;volatile
 34803  000230  D007               	goto	i2l15587
 34804                           
 34805                           ;drv_mrf_miwi_mesh_24j40.c: 1765: {
 34806                           ;drv_mrf_miwi_mesh_24j40.c: 1766: MRF24J40Status.bits.RX_IGNORE_SECURITY = 0;
 34807  000232  9842               	bcf	_MRF24J40Status,4,c	;volatile
 34808                           
 34809                           ;drv_mrf_miwi_mesh_24j40.c: 1767: PHYSetShortRAMAddr((0x1B),0x01);
 34810  000234  0E01               	movlw	1
 34811  000236  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34812  000238  0E1B               	movlw	27
 34813  00023A  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34814                           
 34815                           ;drv_mrf_miwi_mesh_24j40.c: 1768: goto START_OF_SEC_INT;
 34816  00023E  D06F               	goto	i2l15613
 34817  000240                     i2l15587:
 34818                           
 34819                           ;drv_mrf_miwi_mesh_24j40.c: 1769: }
 34820                           ;drv_mrf_miwi_mesh_24j40.c: 1775: PHYSetShortRAMAddr((0x73), 0x04);
 34821  000240  0E04               	movlw	4
 34822  000242  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34823  000244  0E73               	movlw	115
 34824  000246  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34825                           
 34826                           ;drv_mrf_miwi_mesh_24j40.c: 1779: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300)
      +                           + 2;
 34827  00024A  5033               	movf	HighISR@RxBank,w,c
 34828  00024C  0D80               	mullw	128
 34829  00024E  0E00               	movlw	low _RxBuffer
 34830  000250  24F3               	addwf	prodl,w,c
 34831  000252  6ED9               	movwf	fsr2l,c
 34832  000254  0E04               	movlw	high _RxBuffer
 34833  000256  20F4               	addwfc	prodh,w,c
 34834  000258  6EDA               	movwf	fsr2h,c
 34835  00025A  0E03               	movlw	3
 34836  00025C  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 34837  00025E  6A03               	clrf	i2PHYGetLongRAMAddr@address,c
 34838  000260  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34839  000264  0F02               	addlw	2
 34840  000266  6EDF               	movwf	indf2,c
 34841                           
 34842                           ;drv_mrf_miwi_mesh_24j40.c: 1780: if(RxBuffer[RxBank].PayloadLen<(90+0+8+8+4+17))
 34843  000268  5033               	movf	HighISR@RxBank,w,c
 34844  00026A  0D80               	mullw	128
 34845  00026C  0E00               	movlw	low _RxBuffer
 34846  00026E  24F3               	addwf	prodl,w,c
 34847  000270  6ED9               	movwf	fsr2l,c
 34848  000272  0E04               	movlw	high _RxBuffer
 34849  000274  20F4               	addwfc	prodh,w,c
 34850  000276  6EDA               	movwf	fsr2h,c
 34851  000278  0E7F               	movlw	127
 34852  00027A  60DF               	cpfslt	indf2,c
 34853  00027C  D03F               	goto	i2l15605
 34854                           
 34855                           ;drv_mrf_miwi_mesh_24j40.c: 1781: {
 34856                           ;drv_mrf_miwi_mesh_24j40.c: 1783: MRF24J40Status.bits.RX_BUFFERED = 1;
 34857  00027E  8A42               	bsf	_MRF24J40Status,5,c	;volatile
 34858                           
 34859                           ;drv_mrf_miwi_mesh_24j40.c: 1786: for(i=1;i<=RxBuffer[RxBank].PayloadLen+2;i++)
 34860  000280  0E01               	movlw	1
 34861  000282  6E35               	movwf	HighISR@i,c
 34862  000284  D01A               	goto	i2l15601
 34863  000286                     i2l15597:
 34864                           
 34865                           ;drv_mrf_miwi_mesh_24j40.c: 1787: {
 34866                           ;drv_mrf_miwi_mesh_24j40.c: 1788: RxBuffer[RxBank].Payload[i-1] = PHYGetLongRAMAddr(0x30
      +                          0+i);
 34867  000286  5033               	movf	HighISR@RxBank,w,c
 34868  000288  0D80               	mullw	128
 34869  00028A  0E00               	movlw	low _RxBuffer
 34870  00028C  6E19               	movwf	??_HighISR& (0+255),c
 34871  00028E  0E04               	movlw	high _RxBuffer
 34872  000290  6E1A               	movwf	(??_HighISR+1)& (0+255),c
 34873  000292  50F3               	movf	prodl,w,c
 34874  000294  2619               	addwf	??_HighISR,f,c
 34875  000296  50F4               	movf	prodh,w,c
 34876  000298  221A               	addwfc	??_HighISR+1,f,c
 34877  00029A  5035               	movf	HighISR@i,w,c
 34878  00029C  2419               	addwf	??_HighISR,w,c
 34879  00029E  6ED9               	movwf	fsr2l,c
 34880  0002A0  0E00               	movlw	0
 34881  0002A2  201A               	addwfc	??_HighISR+1,w,c
 34882  0002A4  6EDA               	movwf	fsr2h,c
 34883  0002A6  0E00               	movlw	0
 34884  0002A8  2435               	addwf	HighISR@i,w,c
 34885  0002AA  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 34886  0002AC  6A04               	clrf	i2PHYGetLongRAMAddr@address+1,c
 34887  0002AE  0E03               	movlw	3
 34888  0002B0  2204               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 34889  0002B2  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 34890  0002B6  6EDF               	movwf	indf2,c
 34891  0002B8  2A35               	incf	HighISR@i,f,c
 34892  0002BA                     i2l15601:
 34893  0002BA  5035               	movf	HighISR@i,w,c
 34894  0002BC  6E19               	movwf	??_HighISR& (0+255),c
 34895  0002BE  6A1A               	clrf	(??_HighISR+1)& (0+255),c
 34896  0002C0  5033               	movf	HighISR@RxBank,w,c
 34897  0002C2  0D80               	mullw	128
 34898  0002C4  0E00               	movlw	low _RxBuffer
 34899  0002C6  24F3               	addwf	prodl,w,c
 34900  0002C8  6ED9               	movwf	fsr2l,c
 34901  0002CA  0E04               	movlw	high _RxBuffer
 34902  0002CC  20F4               	addwfc	prodh,w,c
 34903  0002CE  6EDA               	movwf	fsr2h,c
 34904  0002D0  50DF               	movf	indf2,w,c
 34905  0002D2  6E1B               	movwf	(??_HighISR+2)& (0+255),c
 34906  0002D4  6A1C               	clrf	(??_HighISR+3)& (0+255),c
 34907  0002D6  0E02               	movlw	2
 34908  0002D8  261B               	addwf	??_HighISR+2,f,c
 34909  0002DA  0E00               	movlw	0
 34910  0002DC  221C               	addwfc	??_HighISR+3,f,c
 34911  0002DE  5019               	movf	??_HighISR,w,c
 34912  0002E0  5C1B               	subwf	??_HighISR+2,w,c
 34913  0002E2  501C               	movf	??_HighISR+3,w,c
 34914  0002E4  0A80               	xorlw	128
 34915  0002E6  6E1D               	movwf	(??_HighISR+4)& (0+255),c
 34916  0002E8  501A               	movf	??_HighISR+1,w,c
 34917  0002EA  0A80               	xorlw	128
 34918  0002EC  581D               	subwfb	(??_HighISR+4)& (0+255),w,c
 34919  0002EE  E2CB               	bc	i2l15597
 34920                           
 34921                           ;drv_mrf_miwi_mesh_24j40.c: 1789: }
 34922                           ;drv_mrf_miwi_mesh_24j40.c: 1790: PHYSetShortRAMAddr((0x1B), 0x01);
 34923  0002F0  0E01               	movlw	1
 34924  0002F2  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34925  0002F4  0E1B               	movlw	27
 34926  0002F6  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34927                           
 34928                           ;drv_mrf_miwi_mesh_24j40.c: 1791: }
 34929  0002FA  D005               	goto	i2l951
 34930  0002FC                     i2l15605:
 34931                           
 34932                           ;drv_mrf_miwi_mesh_24j40.c: 1792: else
 34933                           ;drv_mrf_miwi_mesh_24j40.c: 1793: {
 34934                           ;drv_mrf_miwi_mesh_24j40.c: 1796: PHYSetShortRAMAddr((0x1B),0x01);
 34935  0002FC  0E01               	movlw	1
 34936  0002FE  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34937  000300  0E1B               	movlw	27
 34938  000302  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34939  000306                     i2l951:
 34940                           
 34941                           ;drv_mrf_miwi_mesh_24j40.c: 1797: }
 34942                           ;drv_mrf_miwi_mesh_24j40.c: 1800: PHYSetShortRAMAddr((0x73), 0x00);
 34943  000306  6A03               	clrf	i2PHYSetShortRAMAddr@value,c
 34944  000308  0E73               	movlw	115
 34945  00030A  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34946                           
 34947                           ;drv_mrf_miwi_mesh_24j40.c: 1801: }
 34948  00030E  D007               	goto	i2l15613
 34949  000310                     i2l15607:
 34950                           
 34951                           ;drv_mrf_miwi_mesh_24j40.c: 1802: else
 34952                           ;drv_mrf_miwi_mesh_24j40.c: 1803: {
 34953                           ;drv_mrf_miwi_mesh_24j40.c: 1806: PHYSetShortRAMAddr((0x1B),0x01);
 34954  000310  0E01               	movlw	1
 34955  000312  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34956  000314  0E1B               	movlw	27
 34957  000316  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34958                           
 34959                           ;drv_mrf_miwi_mesh_24j40.c: 1808: MRF24J40Status.bits.RX_SECURITY = 0;
 34960  00031A  9642               	bcf	_MRF24J40Status,3,c	;volatile
 34961                           
 34962                           ;drv_mrf_miwi_mesh_24j40.c: 1810: MRF24J40Status.bits.RX_IGNORE_SECURITY = 0;
 34963  00031C  9842               	bcf	_MRF24J40Status,4,c	;volatile
 34964  00031E                     i2l15613:
 34965                           
 34966                           ;drv_mrf_miwi_mesh_24j40.c: 1818: if( flags.bits.SECIF )
 34967  00031E  A82F               	btfss	HighISR@flags,4,c
 34968  000320  D075               	goto	i2l15669
 34969                           
 34970                           ;drv_mrf_miwi_mesh_24j40.c: 1819: {
 34971                           ;drv_mrf_miwi_mesh_24j40.c: 1821: uint8_t FrameControl;
 34972                           ;drv_mrf_miwi_mesh_24j40.c: 1822: if( MRF24J40Status.bits.TX_BUSY )
 34973  000322  A042               	btfss	_MRF24J40Status,0,c	;volatile
 34974  000324  D00C               	goto	i2l15621
 34975                           
 34976                           ;drv_mrf_miwi_mesh_24j40.c: 1823: {
 34977                           ;drv_mrf_miwi_mesh_24j40.c: 1824: MRF24J40Status.bits.RX_IGNORE_SECURITY = 1;
 34978  000326  8842               	bsf	_MRF24J40Status,4,c	;volatile
 34979                           
 34980                           ;drv_mrf_miwi_mesh_24j40.c: 1825: PHYSetShortRAMAddr((0x59), 0x80);
 34981  000328  0E80               	movlw	128
 34982  00032A  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34983  00032C  0E59               	movlw	89
 34984  00032E  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34985                           
 34986                           ;drv_mrf_miwi_mesh_24j40.c: 1826: PHYSetShortRAMAddr((0x1B),0x01);
 34987  000332  0E01               	movlw	1
 34988  000334  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 34989  000336  0E1B               	movlw	27
 34990  000338  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 34991                           
 34992                           ;drv_mrf_miwi_mesh_24j40.c: 1827: goto END_OF_RF_INT;
 34993  00033C  D067               	goto	i2l15669
 34994  00033E                     i2l15621:
 34995                           
 34996                           ;drv_mrf_miwi_mesh_24j40.c: 1828: }
 34997                           ;drv_mrf_miwi_mesh_24j40.c: 1835: i = 6;
 34998  00033E  0E06               	movlw	6
 34999  000340  6E35               	movwf	HighISR@i,c
 35000                           
 35001                           ;drv_mrf_miwi_mesh_24j40.c: 1836: FrameControl = PHYGetLongRAMAddr(0x301);
 35002  000342  0E03               	movlw	3
 35003  000344  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 35004  000346  0E01               	movlw	1
 35005  000348  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 35006  00034A  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 35007  00034E  6E2E               	movwf	HighISR@FrameControl_2711,c
 35008                           
 35009                           ;drv_mrf_miwi_mesh_24j40.c: 1837: if( (FrameControl & 0x40) == 0 )
 35010  000350  BC2E               	btfsc	HighISR@FrameControl_2711,6,c
 35011  000352  D002               	goto	i2l15629
 35012                           
 35013                           ;drv_mrf_miwi_mesh_24j40.c: 1838: {
 35014                           ;drv_mrf_miwi_mesh_24j40.c: 1839: i += 2;
 35015  000354  0E02               	movlw	2
 35016  000356  2635               	addwf	HighISR@i,f,c
 35017  000358                     i2l15629:
 35018                           
 35019                           ;drv_mrf_miwi_mesh_24j40.c: 1840: }
 35020                           ;drv_mrf_miwi_mesh_24j40.c: 1842: FrameControl = PHYGetLongRAMAddr(0x302);
 35021  000358  0E03               	movlw	3
 35022  00035A  6E04               	movwf	i2PHYGetLongRAMAddr@address+1,c
 35023  00035C  0E02               	movlw	2
 35024  00035E  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 35025  000360  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 35026  000364  6E2E               	movwf	HighISR@FrameControl_2711,c
 35027                           
 35028                           ;drv_mrf_miwi_mesh_24j40.c: 1843: if( (FrameControl & 0x0C) == 0x0C )
 35029  000366  502E               	movf	HighISR@FrameControl_2711,w,c
 35030  000368  0B0C               	andlw	12
 35031  00036A  0A0C               	xorlw	12
 35032                           
 35033                           ;drv_mrf_miwi_mesh_24j40.c: 1844: {
 35034                           ;drv_mrf_miwi_mesh_24j40.c: 1845: i += 8;
 35035  00036C  0E08               	movlw	8
 35036  00036E  A4D8               	btfss	status,2,c
 35037                           
 35038                           ;drv_mrf_miwi_mesh_24j40.c: 1847: else
 35039                           ;drv_mrf_miwi_mesh_24j40.c: 1848: {
 35040                           ;drv_mrf_miwi_mesh_24j40.c: 1849: i += 2;
 35041  000370  0E02               	movlw	2
 35042                           
 35043                           ;drv_mrf_miwi_mesh_24j40.c: 1846: }
 35044  000372  2635               	addwf	HighISR@i,f,c
 35045                           
 35046                           ;drv_mrf_miwi_mesh_24j40.c: 1850: }
 35047                           ;drv_mrf_miwi_mesh_24j40.c: 1853: for(j = 0; j < i + 10; j++)
 35048  000374  6A34               	clrf	HighISR@j,c
 35049  000376  D008               	goto	i2l15643
 35050  000378                     i2l15639:
 35051                           
 35052                           ;drv_mrf_miwi_mesh_24j40.c: 1854: {
 35053                           ;drv_mrf_miwi_mesh_24j40.c: 1855: PHYGetLongRAMAddr(0x301+j);
 35054  000378  2834               	incf	HighISR@j,w,c
 35055  00037A  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 35056  00037C  6A04               	clrf	i2PHYGetLongRAMAddr@address+1,c
 35057  00037E  0E03               	movlw	3
 35058  000380  2204               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 35059  000382  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 35060  000386  2A34               	incf	HighISR@j,f,c
 35061  000388                     i2l15643:
 35062  000388  5035               	movf	HighISR@i,w,c
 35063  00038A  6E19               	movwf	??_HighISR& (0+255),c
 35064  00038C  6A1A               	clrf	(??_HighISR+1)& (0+255),c
 35065  00038E  0E0A               	movlw	10
 35066  000390  2619               	addwf	??_HighISR,f,c
 35067  000392  0E00               	movlw	0
 35068  000394  221A               	addwfc	??_HighISR+1,f,c
 35069  000396  5034               	movf	HighISR@j,w,c
 35070  000398  6E1B               	movwf	(??_HighISR+2)& (0+255),c
 35071  00039A  6A1C               	clrf	(??_HighISR+3)& (0+255),c
 35072  00039C  5019               	movf	??_HighISR,w,c
 35073  00039E  5C1B               	subwf	??_HighISR+2,w,c
 35074  0003A0  501C               	movf	??_HighISR+3,w,c
 35075  0003A2  0A80               	xorlw	128
 35076  0003A4  6E1D               	movwf	(??_HighISR+4)& (0+255),c
 35077  0003A6  501A               	movf	??_HighISR+1,w,c
 35078  0003A8  0A80               	xorlw	128
 35079  0003AA  581D               	subwfb	(??_HighISR+4)& (0+255),w,c
 35080  0003AC  E3E5               	bnc	i2l15639
 35081                           
 35082                           ;drv_mrf_miwi_mesh_24j40.c: 1856: }
 35083                           ;drv_mrf_miwi_mesh_24j40.c: 1859: j = PHYGetLongRAMAddr(0x30C + i);
 35084  0003AE  0E0C               	movlw	12
 35085  0003B0  2435               	addwf	HighISR@i,w,c
 35086  0003B2  6E03               	movwf	i2PHYGetLongRAMAddr@address,c
 35087  0003B4  6A04               	clrf	i2PHYGetLongRAMAddr@address+1,c
 35088  0003B6  0E03               	movlw	3
 35089  0003B8  2204               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 35090  0003BA  EC39  F039         	call	i2_PHYGetLongRAMAddr	;wreg free
 35091  0003BE  6E34               	movwf	HighISR@j,c
 35092                           
 35093                           ;drv_mrf_miwi_mesh_24j40.c: 1861: if( j != myKeySequenceNumber )
 35094  0003C0  5034               	movf	HighISR@j,w,c
 35095  0003C2  E006               	bz	i2l15653
 35096                           
 35097                           ;drv_mrf_miwi_mesh_24j40.c: 1862: {
 35098                           ;drv_mrf_miwi_mesh_24j40.c: 1863: PHYSetShortRAMAddr((0x59), 0x80);
 35099  0003C4  0E80               	movlw	128
 35100  0003C6  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 35101  0003C8  0E59               	movlw	89
 35102  0003CA  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 35103                           
 35104                           ;drv_mrf_miwi_mesh_24j40.c: 1864: MRF24J40Status.bits.RX_IGNORE_SECURITY = 1;
 35105  0003CE  8842               	bsf	_MRF24J40Status,4,c	;volatile
 35106  0003D0                     i2l15653:
 35107                           
 35108                           ;drv_mrf_miwi_mesh_24j40.c: 1865: }
 35109                           ;drv_mrf_miwi_mesh_24j40.c: 1867: if( MRF24J40Status.bits.RX_IGNORE_SECURITY == 0 )
 35110  0003D0  B842               	btfsc	_MRF24J40Status,4,c	;volatile
 35111  0003D2  D01C               	goto	i2l15669
 35112                           
 35113                           ;drv_mrf_miwi_mesh_24j40.c: 1869: {
 35114                           ;drv_mrf_miwi_mesh_24j40.c: 1871: for(i = 0; i < 16; i++)
 35115  0003D4  6A35               	clrf	HighISR@i,c
 35116  0003D6                     i2l15661:
 35117                           
 35118                           ;drv_mrf_miwi_mesh_24j40.c: 1872: {
 35119                           ;drv_mrf_miwi_mesh_24j40.c: 1873: PHYSetLongRAMAddr(0x2B0 + i, mySecurityKey[i]);
 35120  0003D6  0EB0               	movlw	176
 35121  0003D8  2435               	addwf	HighISR@i,w,c
 35122  0003DA  6E03               	movwf	i2PHYSetLongRAMAddr@address,c
 35123  0003DC  6A04               	clrf	i2PHYSetLongRAMAddr@address+1,c
 35124  0003DE  0E02               	movlw	2
 35125  0003E0  2204               	addwfc	i2PHYSetLongRAMAddr@address+1,f,c
 35126  0003E2  0E7F               	movlw	low _mySecurityKey
 35127  0003E4  2435               	addwf	HighISR@i,w,c
 35128  0003E6  6EF6               	movwf	tblptrl,c
 35129  0003E8  6AF7               	clrf	tblptrh,c
 35130  0003EA  0EFF               	movlw	high _mySecurityKey
 35131  0003EC  22F7               	addwfc	tblptrh,f,c
 35132  0003EE                     	if	0	;There are less than 3 active tblptr bytes
 35133  0003EE                     	endif
 35134  0003EE  0008               	tblrd		*
 35135  0003F0  CFF5 F005          	movff	tablat,i2PHYSetLongRAMAddr@value
 35136  0003F4  EC11  F039         	call	i2_PHYSetLongRAMAddr	;wreg free
 35137  0003F8  2A35               	incf	HighISR@i,f,c
 35138  0003FA  0E0F               	movlw	15
 35139  0003FC  6435               	cpfsgt	HighISR@i,c
 35140  0003FE  D7EB               	goto	i2l15661
 35141                           
 35142                           ;drv_mrf_miwi_mesh_24j40.c: 1874: }
 35143                           ;drv_mrf_miwi_mesh_24j40.c: 1875: MRF24J40Status.bits.RX_SECURITY = 1;
 35144  000400  8642               	bsf	_MRF24J40Status,3,c	;volatile
 35145                           
 35146                           ;drv_mrf_miwi_mesh_24j40.c: 1878: PHYSetShortRAMAddr((0x59), mySecurityLevel << 3 | 0x40
      +                          );
 35147  000402  0E60               	movlw	96
 35148  000404  6E03               	movwf	i2PHYSetShortRAMAddr@value,c
 35149  000406  0E59               	movlw	89
 35150  000408  EC8B  F03C         	call	i2_PHYSetShortRAMAddr
 35151  00040C                     i2l15669:
 35152                           
 35153                           ;drv_mrf_miwi_mesh_24j40.c: 1907: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 
      +                          1))
 35154  00040C  B4F2               	btfsc	intcon,2,c	;volatile
 35155  00040E  AAF2               	btfss	intcon,5,c	;volatile
 35156  000410  D017               	goto	i2l15687
 35157                           
 35158                           ;drv_mrf_miwi_mesh_24j40.c: 1908: {
 35159                           ;drv_mrf_miwi_mesh_24j40.c: 1909: uint16_t tmr = TMR0;
 35160  000412  CFD6 F031          	movff	4054,HighISR@tmr	;volatile
 35161  000416  CFD7 F032          	movff	4055,HighISR@tmr+1	;volatile
 35162                           
 35163                           ;drv_mrf_miwi_mesh_24j40.c: 1910: t1extension++;
 35164  00041A  0102               	movlb	2	; () banked
 35165  00041C  2B50               	incf	_t1extension& (0+255),f,b
 35166  00041E  0E00               	movlw	0
 35167  000420  2351               	addwfc	(_t1extension+1)& (0+255),f,b
 35168  000422  2352               	addwfc	(_t1extension+2)& (0+255),f,b
 35169  000424  2353               	addwfc	(_t1extension+3)& (0+255),f,b
 35170                           
 35171                           ;drv_mrf_miwi_mesh_24j40.c: 1911: tmr += (0xffff - 6000);
 35172  000426  0E8F               	movlw	143
 35173  000428  2631               	addwf	HighISR@tmr,f,c
 35174  00042A  0EE8               	movlw	232
 35175  00042C  2232               	addwfc	HighISR@tmr+1,f,c
 35176                           
 35177                           ; BSR set to: 2
 35178                           ;drv_mrf_miwi_mesh_24j40.c: 1912: TMR0L = tmr;
 35179  00042E  C031  FFD6         	movff	HighISR@tmr,4054	;volatile
 35180                           
 35181                           ; BSR set to: 2
 35182                           ;drv_mrf_miwi_mesh_24j40.c: 1913: TMR0H = tmr >> 8;
 35183  000432  C032  FFD7         	movff	HighISR@tmr+1,4055	;volatile
 35184                           
 35185                           ; BSR set to: 2
 35186                           ;drv_mrf_miwi_mesh_24j40.c: 1914: TMR0L = tmr;
 35187  000436  C031  FFD6         	movff	HighISR@tmr,4054	;volatile
 35188                           
 35189                           ; BSR set to: 2
 35190                           ;drv_mrf_miwi_mesh_24j40.c: 1915: INTCONbits.TMR0IF = 0;
 35191  00043A  94F2               	bcf	intcon,2,c	;volatile
 35192                           
 35193                           ; BSR set to: 2
 35194                           ;drv_mrf_miwi_mesh_24j40.c: 1916: t1fired=1;
 35195  00043C  0E01               	movlw	1
 35196  00043E  6E4C               	movwf	_t1fired,c	;volatile
 35197  000440                     i2l15687:
 35198                           
 35199                           ;drv_mrf_miwi_mesh_24j40.c: 1917: }
 35200                           ;drv_mrf_miwi_mesh_24j40.c: 1919: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 35201  000440  B2F2               	btfsc	intcon,1,c	;volatile
 35202  000442  A8F2               	btfss	intcon,4,c	;volatile
 35203  000444  D001               	goto	i2l968
 35204                           
 35205                           ;drv_mrf_miwi_mesh_24j40.c: 1920: {
 35206                           ;drv_mrf_miwi_mesh_24j40.c: 1921: INTCONbits.INT0IF = 0;
 35207  000446  92F2               	bcf	intcon,1,c	;volatile
 35208  000448                     i2l968:
 35209  000448  C029  FFF5         	movff	??_HighISR+16,tablat
 35210  00044C  C028  FFF8         	movff	??_HighISR+15,tblptru
 35211  000450  C027  FFF7         	movff	??_HighISR+14,tblptrh
 35212  000454  C026  FFF6         	movff	??_HighISR+13,tblptrl
 35213  000458  C025  FFF4         	movff	??_HighISR+12,prodh
 35214  00045C  C024  FFF3         	movff	??_HighISR+11,prodl
 35215  000460  C023  FFDA         	movff	??_HighISR+10,fsr2h
 35216  000464  C022  FFD9         	movff	??_HighISR+9,fsr2l
 35217  000468  C021  FFE2         	movff	??_HighISR+8,fsr1h
 35218  00046C  C020  FFE1         	movff	??_HighISR+7,fsr1l
 35219  000470  C01F  FFEA         	movff	??_HighISR+6,fsr0h
 35220  000474  C01E  FFE9         	movff	??_HighISR+5,fsr0l
 35221  000478  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35222  00047A  0011               	retfie		f
 35223  00047C                     __end_of_HighISR:
 35224                           	opt stack 0
 35225                           tblptru	equ	0xFF8
 35226                           tblptrh	equ	0xFF7
 35227                           tblptrl	equ	0xFF6
 35228                           tablat	equ	0xFF5
 35229                           prodh	equ	0xFF4
 35230                           prodl	equ	0xFF3
 35231                           intcon	equ	0xFF2
 35232                           intcon2	equ	0xFF1
 35233                           postinc0	equ	0xFEE
 35234                           plusw0	equ	0xFEB
 35235                           fsr0h	equ	0xFEA
 35236                           fsr0l	equ	0xFE9
 35237                           wreg	equ	0xFE8
 35238                           indf1	equ	0xFE7
 35239                           postinc1	equ	0xFE6
 35240                           postdec1	equ	0xFE5
 35241                           plusw1	equ	0xFE3
 35242                           fsr1h	equ	0xFE2
 35243                           fsr1l	equ	0xFE1
 35244                           indf2	equ	0xFDF
 35245                           postinc2	equ	0xFDE
 35246                           postdec2	equ	0xFDD
 35247                           plusw2	equ	0xFDB
 35248                           fsr2h	equ	0xFDA
 35249                           fsr2l	equ	0xFD9
 35250                           status	equ	0xFD8
 35251                           
 35252 ;; *************** function i2_isSameAddress *****************
 35253 ;; Defined at:
 35254 ;;		line 245 in file "../NetworkManager.c"
 35255 ;; Parameters:    Size  Location     Type
 35256 ;;  a1              8    8[COMRAM] struct addr_t_def
 35257 ;;  a2              8   16[COMRAM] struct addr_t_def
 35258 ;; Auto vars:     Size  Location     Type
 35259 ;;		None
 35260 ;; Return value:  Size  Location     Type
 35261 ;;                  1    wreg      unsigned char 
 35262 ;; Registers used:
 35263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35264 ;; Tracked objects:
 35265 ;;		On entry : F/3
 35266 ;;		On exit  : F/3
 35267 ;;		Unchanged: E/0
 35268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35269 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35272 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35273 ;;Total ram usage:       16 bytes
 35274 ;; Hardware stack levels used:    1
 35275 ;; Hardware stack levels required when called:    1
 35276 ;; This function calls:
 35277 ;;		i2_NetworkAddressSizeGet
 35278 ;;		i2_memcmp
 35279 ;; This function is called by:
 35280 ;;		_HighISR
 35281 ;; This function uses a non-reentrant model
 35282 ;;
 35283                           
 35284                           	psect	text167
 35285  0079AE                     __ptext167:
 35286                           	opt stack 0
 35287  0079AE                     i2_isSameAddress:
 35288                           	opt stack 15
 35289                           
 35290                           ; BSR set to: 3
 35291                           ;NetworkManager.c: 247: return !memcmp(a1.bytes, a2.bytes, NetworkAddressSizeGet());
 35292                           
 35293                           ;incstack = 0
 35294  0079AE  0E09               	movlw	low i2isSameAddress@a1
 35295  0079B0  6E01               	movwf	i2memcmp@s1,c
 35296  0079B2  6A02               	clrf	i2memcmp@s1+1,c
 35297  0079B4  0E11               	movlw	low i2isSameAddress@a2
 35298  0079B6  6E03               	movwf	i2memcmp@s2,c
 35299  0079B8  6A04               	clrf	i2memcmp@s2+1,c
 35300  0079BA  EC5A  F03E         	call	i2_NetworkAddressSizeGet	;wreg free
 35301  0079BE  6E05               	movwf	i2memcmp@n,c
 35302  0079C0  6A06               	clrf	i2memcmp@n+1,c
 35303  0079C2  ECBC  F038         	call	i2_memcmp	;wreg free
 35304  0079C6  5001               	movf	?i2_memcmp,w,c
 35305  0079C8  1002               	iorwf	?i2_memcmp+1,w,c
 35306  0079CA  B4D8               	btfsc	status,2,c
 35307  0079CC  0C01               	retlw	1
 35308                           
 35309                           ; BSR set to: 3
 35310  0079CE  0C00               	retlw	0	;funcret
 35311  0079D0                     __end_ofi2_isSameAddress:
 35312                           	opt stack 0
 35313                           tblptru	equ	0xFF8
 35314                           tblptrh	equ	0xFF7
 35315                           tblptrl	equ	0xFF6
 35316                           tablat	equ	0xFF5
 35317                           prodh	equ	0xFF4
 35318                           prodl	equ	0xFF3
 35319                           intcon	equ	0xFF2
 35320                           intcon2	equ	0xFF1
 35321                           postinc0	equ	0xFEE
 35322                           plusw0	equ	0xFEB
 35323                           fsr0h	equ	0xFEA
 35324                           fsr0l	equ	0xFE9
 35325                           wreg	equ	0xFE8
 35326                           indf1	equ	0xFE7
 35327                           postinc1	equ	0xFE6
 35328                           postdec1	equ	0xFE5
 35329                           plusw1	equ	0xFE3
 35330                           fsr1h	equ	0xFE2
 35331                           fsr1l	equ	0xFE1
 35332                           indf2	equ	0xFDF
 35333                           postinc2	equ	0xFDE
 35334                           postdec2	equ	0xFDD
 35335                           plusw2	equ	0xFDB
 35336                           fsr2h	equ	0xFDA
 35337                           fsr2l	equ	0xFD9
 35338                           status	equ	0xFD8
 35339                           
 35340 ;; *************** function i2_memcmp *****************
 35341 ;; Defined at:
 35342 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
 35343 ;; Parameters:    Size  Location     Type
 35344 ;;  s1              2    0[COMRAM] PTR const void 
 35345 ;;		 -> a1.bytes(8), isSameAddress@a1(8), address.bytes(8), isBroadcastAddress@address(8), 
 35346 ;;		 -> hc_table(360), src.bytes(8), main@src(8), 
 35347 ;;  s2              2    2[COMRAM] PTR const void 
 35348 ;;		 -> a2.bytes(8), isSameAddress@a2(8), isBroadcastAddress@addr(8), isKnownPacket@zeros(12), 
 35349 ;;		 -> src1.bytes(8), main@src1(8), 
 35350 ;;  n               2    4[COMRAM] unsigned int 
 35351 ;; Auto vars:     Size  Location     Type
 35352 ;;		None
 35353 ;; Return value:  Size  Location     Type
 35354 ;;                  2    0[COMRAM] int 
 35355 ;; Registers used:
 35356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35357 ;; Tracked objects:
 35358 ;;		On entry : F/3
 35359 ;;		On exit  : F/3
 35360 ;;		Unchanged: E/0
 35361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35362 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35366 ;;Total ram usage:        8 bytes
 35367 ;; Hardware stack levels used:    1
 35368 ;; This function calls:
 35369 ;;		Nothing
 35370 ;; This function is called by:
 35371 ;;		i2_isSameAddress
 35372 ;; This function uses a non-reentrant model
 35373 ;;
 35374                           
 35375                           	psect	text168
 35376  007178                     __ptext168:
 35377                           	opt stack 0
 35378  007178                     i2_memcmp:
 35379                           	opt stack 15
 35380                           
 35381                           ; BSR set to: 3
 35382                           
 35383                           ; BSR set to: 3
 35384                           ;incstack = 0
 35385  007178  D020               	goto	i2l14711
 35386  00717A                     i2l14703:
 35387                           
 35388                           ; BSR set to: 3
 35389  00717A  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 35390  00717E  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 35391  007182  C001  FFE1         	movff	i2memcmp@s1,fsr1l
 35392  007186  C002  FFE2         	movff	i2memcmp@s1+1,fsr1h
 35393  00718A  50DE               	movf	postinc2,w,c
 35394  00718C  18E6               	xorwf	postinc1,w,c
 35395  00718E  E011               	bz	i2l14709
 35396                           
 35397                           ; BSR set to: 3
 35398  007190  C001  FFD9         	movff	i2memcmp@s1,fsr2l
 35399  007194  C002  FFDA         	movff	i2memcmp@s1+1,fsr2h
 35400  007198  50DF               	movf	indf2,w,c
 35401  00719A  6E07               	movwf	??i2_memcmp& (0+255),c
 35402  00719C  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 35403  0071A0  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 35404  0071A4  50DF               	movf	indf2,w,c
 35405  0071A6  5C07               	subwf	??i2_memcmp,w,c
 35406  0071A8  6E01               	movwf	?i2_memcmp,c
 35407  0071AA  6A02               	clrf	?i2_memcmp+1,c
 35408  0071AC  A0D8               	btfss	status,0,c
 35409  0071AE  0602               	decf	?i2_memcmp+1,f,c
 35410  0071B0  0012               	return	
 35411  0071B2                     i2l14709:
 35412                           
 35413                           ; BSR set to: 3
 35414  0071B2  4A01               	infsnz	i2memcmp@s1,f,c
 35415  0071B4  2A02               	incf	i2memcmp@s1+1,f,c
 35416  0071B6  4A03               	infsnz	i2memcmp@s2,f,c
 35417  0071B8  2A04               	incf	i2memcmp@s2+1,f,c
 35418  0071BA                     i2l14711:
 35419                           
 35420                           ; BSR set to: 3
 35421  0071BA  0605               	decf	i2memcmp@n,f,c
 35422  0071BC  A0D8               	btfss	status,0,c
 35423  0071BE  0606               	decf	i2memcmp@n+1,f,c
 35424  0071C0  2805               	incf	i2memcmp@n,w,c
 35425  0071C2  E1DB               	bnz	i2l14703
 35426  0071C4  2806               	incf	i2memcmp@n+1,w,c
 35427  0071C6  E1D9               	bnz	i2l14703
 35428                           
 35429                           ; BSR set to: 3
 35430  0071C8  6A01               	clrf	?i2_memcmp,c
 35431  0071CA  6A02               	clrf	?i2_memcmp+1,c
 35432                           
 35433                           ; BSR set to: 3
 35434  0071CC  0012               	return		;funcret
 35435  0071CE                     __end_ofi2_memcmp:
 35436                           	opt stack 0
 35437                           tblptru	equ	0xFF8
 35438                           tblptrh	equ	0xFF7
 35439                           tblptrl	equ	0xFF6
 35440                           tablat	equ	0xFF5
 35441                           prodh	equ	0xFF4
 35442                           prodl	equ	0xFF3
 35443                           intcon	equ	0xFF2
 35444                           intcon2	equ	0xFF1
 35445                           postinc0	equ	0xFEE
 35446                           plusw0	equ	0xFEB
 35447                           fsr0h	equ	0xFEA
 35448                           fsr0l	equ	0xFE9
 35449                           wreg	equ	0xFE8
 35450                           indf1	equ	0xFE7
 35451                           postinc1	equ	0xFE6
 35452                           postdec1	equ	0xFE5
 35453                           plusw1	equ	0xFE3
 35454                           fsr1h	equ	0xFE2
 35455                           fsr1l	equ	0xFE1
 35456                           indf2	equ	0xFDF
 35457                           postinc2	equ	0xFDE
 35458                           postdec2	equ	0xFDD
 35459                           plusw2	equ	0xFDB
 35460                           fsr2h	equ	0xFDA
 35461                           fsr2l	equ	0xFD9
 35462                           status	equ	0xFD8
 35463                           
 35464 ;; *************** function i2_NetworkAddressSizeGet *****************
 35465 ;; Defined at:
 35466 ;;		line 161 in file "../NetworkManager.c"
 35467 ;; Parameters:    Size  Location     Type
 35468 ;;		None
 35469 ;; Auto vars:     Size  Location     Type
 35470 ;;		None
 35471 ;; Return value:  Size  Location     Type
 35472 ;;                  1    wreg      unsigned char 
 35473 ;; Registers used:
 35474 ;;		wreg, status,2
 35475 ;; Tracked objects:
 35476 ;;		On entry : F/3
 35477 ;;		On exit  : F/3
 35478 ;;		Unchanged: E/0
 35479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35484 ;;Total ram usage:        0 bytes
 35485 ;; Hardware stack levels used:    1
 35486 ;; This function calls:
 35487 ;;		Nothing
 35488 ;; This function is called by:
 35489 ;;		i2_isSameAddress
 35490 ;; This function uses a non-reentrant model
 35491 ;;
 35492                           
 35493                           	psect	text169
 35494  007CB4                     __ptext169:
 35495                           	opt stack 0
 35496  007CB4                     i2_NetworkAddressSizeGet:
 35497                           	opt stack 15
 35498                           
 35499                           ; BSR set to: 3
 35500                           ;NetworkManager.c: 163: return(addressLen);
 35501                           
 35502                           ; BSR set to: 3
 35503                           ;incstack = 0
 35504  007CB4  505B               	movf	_addressLen,w,c
 35505                           
 35506                           ; BSR set to: 3
 35507  007CB6  0012               	return		;funcret
 35508  007CB8                     __end_ofi2_NetworkAddressSizeGet:
 35509                           	opt stack 0
 35510                           tblptru	equ	0xFF8
 35511                           tblptrh	equ	0xFF7
 35512                           tblptrl	equ	0xFF6
 35513                           tablat	equ	0xFF5
 35514                           prodh	equ	0xFF4
 35515                           prodl	equ	0xFF3
 35516                           intcon	equ	0xFF2
 35517                           intcon2	equ	0xFF1
 35518                           postinc0	equ	0xFEE
 35519                           plusw0	equ	0xFEB
 35520                           fsr0h	equ	0xFEA
 35521                           fsr0l	equ	0xFE9
 35522                           wreg	equ	0xFE8
 35523                           indf1	equ	0xFE7
 35524                           postinc1	equ	0xFE6
 35525                           postdec1	equ	0xFE5
 35526                           plusw1	equ	0xFE3
 35527                           fsr1h	equ	0xFE2
 35528                           fsr1l	equ	0xFE1
 35529                           indf2	equ	0xFDF
 35530                           postinc2	equ	0xFDE
 35531                           postdec2	equ	0xFDD
 35532                           plusw2	equ	0xFDB
 35533                           fsr2h	equ	0xFDA
 35534                           fsr2l	equ	0xFD9
 35535                           status	equ	0xFD8
 35536                           
 35537 ;; *************** function i2_PHYSetShortRAMAddr *****************
 35538 ;; Defined at:
 35539 ;;		line 190 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 35540 ;; Parameters:    Size  Location     Type
 35541 ;;  address         1    wreg     unsigned char 
 35542 ;;  value           1    2[COMRAM] unsigned char 
 35543 ;; Auto vars:     Size  Location     Type
 35544 ;;  address         1    3[COMRAM] unsigned char 
 35545 ;;  PHYSetShortR    1    4[COMRAM] volatile unsigned char 
 35546 ;; Return value:  Size  Location     Type
 35547 ;;                  1    wreg      void 
 35548 ;; Registers used:
 35549 ;;		wreg, status,2, cstack
 35550 ;; Tracked objects:
 35551 ;;		On entry : 0/0
 35552 ;;		On exit  : 0/0
 35553 ;;		Unchanged: 0/0
 35554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35558 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35559 ;;Total ram usage:        3 bytes
 35560 ;; Hardware stack levels used:    1
 35561 ;; Hardware stack levels required when called:    1
 35562 ;; This function calls:
 35563 ;;		i2_SPIPut
 35564 ;; This function is called by:
 35565 ;;		_HighISR
 35566 ;; This function uses a non-reentrant model
 35567 ;;
 35568                           
 35569                           	psect	text170
 35570  007916                     __ptext170:
 35571                           	opt stack 0
 35572  007916                     i2_PHYSetShortRAMAddr:
 35573                           	opt stack 15
 35574                           
 35575                           ; BSR set to: 3
 35576                           ;incstack = 0
 35577                           ;i2PHYSetShortRAMAddr@address stored from wreg
 35578  007916  6E04               	movwf	i2PHYSetShortRAMAddr@address,c
 35579                           
 35580                           ;drv_mrf_miwi_mesh_24j40.c: 192: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 35581  007918  0E00               	movlw	0
 35582  00791A  B8F2               	btfsc	intcon,4,c	;volatile
 35583  00791C  0E01               	movlw	1
 35584  00791E  6E05               	movwf	i2PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 35585                           
 35586                           ;drv_mrf_miwi_mesh_24j40.c: 194: INTCONbits.INT0IE = 0;
 35587  007920  98F2               	bcf	intcon,4,c	;volatile
 35588                           
 35589                           ;drv_mrf_miwi_mesh_24j40.c: 195: LATAbits.LATA5 = 0;
 35590  007922  9A89               	bcf	3977,5,c	;volatile
 35591                           
 35592                           ;drv_mrf_miwi_mesh_24j40.c: 196: SPIPut(address);
 35593  007924  5004               	movf	i2PHYSetShortRAMAddr@address,w,c
 35594  007926  ECBB  F03D         	call	i2_SPIPut
 35595                           
 35596                           ;drv_mrf_miwi_mesh_24j40.c: 197: SPIPut(value);
 35597  00792A  5003               	movf	i2PHYSetShortRAMAddr@value,w,c
 35598  00792C  ECBB  F03D         	call	i2_SPIPut
 35599                           
 35600                           ;drv_mrf_miwi_mesh_24j40.c: 198: LATAbits.LATA5 = 1;
 35601  007930  8A89               	bsf	3977,5,c	;volatile
 35602                           
 35603                           ;drv_mrf_miwi_mesh_24j40.c: 199: INTCONbits.INT0IE = tmpRFIE;
 35604  007932  B005               	btfsc	i2PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 35605  007934  D002               	bra	i2u1548_45
 35606  007936  98F2               	bcf	intcon,4,c	;volatile
 35607  007938  D001               	bra	i2u1548_46
 35608  00793A                     i2u1548_45:
 35609  00793A  88F2               	bsf	intcon,4,c	;volatile
 35610  00793C                     i2u1548_46:
 35611  00793C  0012               	return		;funcret
 35612  00793E                     __end_ofi2_PHYSetShortRAMAddr:
 35613                           	opt stack 0
 35614                           tblptru	equ	0xFF8
 35615                           tblptrh	equ	0xFF7
 35616                           tblptrl	equ	0xFF6
 35617                           tablat	equ	0xFF5
 35618                           prodh	equ	0xFF4
 35619                           prodl	equ	0xFF3
 35620                           intcon	equ	0xFF2
 35621                           intcon2	equ	0xFF1
 35622                           postinc0	equ	0xFEE
 35623                           plusw0	equ	0xFEB
 35624                           fsr0h	equ	0xFEA
 35625                           fsr0l	equ	0xFE9
 35626                           wreg	equ	0xFE8
 35627                           indf1	equ	0xFE7
 35628                           postinc1	equ	0xFE6
 35629                           postdec1	equ	0xFE5
 35630                           plusw1	equ	0xFE3
 35631                           fsr1h	equ	0xFE2
 35632                           fsr1l	equ	0xFE1
 35633                           indf2	equ	0xFDF
 35634                           postinc2	equ	0xFDE
 35635                           postdec2	equ	0xFDD
 35636                           plusw2	equ	0xFDB
 35637                           fsr2h	equ	0xFDA
 35638                           fsr2l	equ	0xFD9
 35639                           status	equ	0xFD8
 35640                           
 35641 ;; *************** function i2_PHYSetLongRAMAddr *****************
 35642 ;; Defined at:
 35643 ;;		line 156 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 35644 ;; Parameters:    Size  Location     Type
 35645 ;;  address         2    2[COMRAM] unsigned int 
 35646 ;;  value           1    4[COMRAM] unsigned char 
 35647 ;; Auto vars:     Size  Location     Type
 35648 ;;  PHYSetLongRA    1    7[COMRAM] volatile unsigned char 
 35649 ;; Return value:  Size  Location     Type
 35650 ;;                  1    wreg      void 
 35651 ;; Registers used:
 35652 ;;		wreg, status,2, status,0, cstack
 35653 ;; Tracked objects:
 35654 ;;		On entry : 0/0
 35655 ;;		On exit  : 0/0
 35656 ;;		Unchanged: 0/0
 35657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35658 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35662 ;;Total ram usage:        6 bytes
 35663 ;; Hardware stack levels used:    1
 35664 ;; Hardware stack levels required when called:    1
 35665 ;; This function calls:
 35666 ;;		i2_SPIPut
 35667 ;; This function is called by:
 35668 ;;		_HighISR
 35669 ;; This function uses a non-reentrant model
 35670 ;;
 35671                           
 35672                           	psect	text171
 35673  007222                     __ptext171:
 35674                           	opt stack 0
 35675  007222                     i2_PHYSetLongRAMAddr:
 35676                           	opt stack 15
 35677                           
 35678                           ;drv_mrf_miwi_mesh_24j40.c: 158: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 35679                           
 35680                           ;incstack = 0
 35681  007222  0E00               	movlw	0
 35682  007224  B8F2               	btfsc	intcon,4,c	;volatile
 35683  007226  0E01               	movlw	1
 35684  007228  6E08               	movwf	i2PHYSetLongRAMAddr@tmpRFIE,c	;volatile
 35685                           
 35686                           ;drv_mrf_miwi_mesh_24j40.c: 160: INTCONbits.INT0IE = 0;
 35687  00722A  98F2               	bcf	intcon,4,c	;volatile
 35688                           
 35689                           ;drv_mrf_miwi_mesh_24j40.c: 161: LATAbits.LATA5 = 0;
 35690  00722C  9A89               	bcf	3977,5,c	;volatile
 35691                           
 35692                           ;drv_mrf_miwi_mesh_24j40.c: 162: SPIPut((((uint8_t)(address>>3))&0x7F)|0x80);
 35693  00722E  C003  F006         	movff	i2PHYSetLongRAMAddr@address,??i2_PHYSetLongRAMAddr
 35694  007232  C004  F007         	movff	i2PHYSetLongRAMAddr@address+1,??i2_PHYSetLongRAMAddr+1
 35695  007236  90D8               	bcf	status,0,c
 35696  007238  3207               	rrcf	??i2_PHYSetLongRAMAddr+1,f,c
 35697  00723A  3206               	rrcf	??i2_PHYSetLongRAMAddr,f,c
 35698  00723C  90D8               	bcf	status,0,c
 35699  00723E  3207               	rrcf	??i2_PHYSetLongRAMAddr+1,f,c
 35700  007240  3206               	rrcf	??i2_PHYSetLongRAMAddr,f,c
 35701  007242  90D8               	bcf	status,0,c
 35702  007244  3207               	rrcf	??i2_PHYSetLongRAMAddr+1,f,c
 35703  007246  3206               	rrcf	??i2_PHYSetLongRAMAddr,f,c
 35704  007248  5006               	movf	??i2_PHYSetLongRAMAddr,w,c
 35705  00724A  0B7F               	andlw	127
 35706  00724C  0980               	iorlw	128
 35707  00724E  ECBB  F03D         	call	i2_SPIPut
 35708                           
 35709                           ;drv_mrf_miwi_mesh_24j40.c: 163: SPIPut((((uint8_t)(address<<5))&0xE0)|0x10);
 35710  007252  3803               	swapf	i2PHYSetLongRAMAddr@address,w,c
 35711  007254  46E8               	rlncf	wreg,f,c
 35712  007256  0BE0               	andlw	224
 35713  007258  0910               	iorlw	16
 35714  00725A  ECBB  F03D         	call	i2_SPIPut
 35715                           
 35716                           ;drv_mrf_miwi_mesh_24j40.c: 164: SPIPut(value);
 35717  00725E  5005               	movf	i2PHYSetLongRAMAddr@value,w,c
 35718  007260  ECBB  F03D         	call	i2_SPIPut
 35719                           
 35720                           ;drv_mrf_miwi_mesh_24j40.c: 165: LATAbits.LATA5 = 1;
 35721  007264  8A89               	bsf	3977,5,c	;volatile
 35722                           
 35723                           ;drv_mrf_miwi_mesh_24j40.c: 166: INTCONbits.INT0IE = tmpRFIE;
 35724  007266  B008               	btfsc	i2PHYSetLongRAMAddr@tmpRFIE,0,c	;volatile
 35725  007268  D002               	bra	i2u1547_45
 35726  00726A  98F2               	bcf	intcon,4,c	;volatile
 35727  00726C  D001               	bra	i2u1547_46
 35728  00726E                     i2u1547_45:
 35729  00726E  88F2               	bsf	intcon,4,c	;volatile
 35730  007270                     i2u1547_46:
 35731  007270  0012               	return		;funcret
 35732  007272                     __end_ofi2_PHYSetLongRAMAddr:
 35733                           	opt stack 0
 35734                           tblptru	equ	0xFF8
 35735                           tblptrh	equ	0xFF7
 35736                           tblptrl	equ	0xFF6
 35737                           tablat	equ	0xFF5
 35738                           prodh	equ	0xFF4
 35739                           prodl	equ	0xFF3
 35740                           intcon	equ	0xFF2
 35741                           intcon2	equ	0xFF1
 35742                           postinc0	equ	0xFEE
 35743                           plusw0	equ	0xFEB
 35744                           fsr0h	equ	0xFEA
 35745                           fsr0l	equ	0xFE9
 35746                           wreg	equ	0xFE8
 35747                           indf1	equ	0xFE7
 35748                           postinc1	equ	0xFE6
 35749                           postdec1	equ	0xFE5
 35750                           plusw1	equ	0xFE3
 35751                           fsr1h	equ	0xFE2
 35752                           fsr1l	equ	0xFE1
 35753                           indf2	equ	0xFDF
 35754                           postinc2	equ	0xFDE
 35755                           postdec2	equ	0xFDD
 35756                           plusw2	equ	0xFDB
 35757                           fsr2h	equ	0xFDA
 35758                           fsr2l	equ	0xFD9
 35759                           status	equ	0xFD8
 35760                           
 35761 ;; *************** function i2_PHYGetShortRAMAddr *****************
 35762 ;; Defined at:
 35763 ;;		line 220 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 35764 ;; Parameters:    Size  Location     Type
 35765 ;;  address         1    wreg     unsigned char 
 35766 ;; Auto vars:     Size  Location     Type
 35767 ;;  address         1    2[COMRAM] unsigned char 
 35768 ;;  PHYGetShortR    1    4[COMRAM] volatile unsigned char 
 35769 ;;  PHYGetShortR    1    3[COMRAM] unsigned char 
 35770 ;; Return value:  Size  Location     Type
 35771 ;;                  1    wreg      unsigned char 
 35772 ;; Registers used:
 35773 ;;		wreg, status,2, cstack
 35774 ;; Tracked objects:
 35775 ;;		On entry : 0/0
 35776 ;;		On exit  : 0/0
 35777 ;;		Unchanged: 0/0
 35778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35783 ;;Total ram usage:        3 bytes
 35784 ;; Hardware stack levels used:    1
 35785 ;; Hardware stack levels required when called:    2
 35786 ;; This function calls:
 35787 ;;		i2_SPIGet
 35788 ;;		i2_SPIPut
 35789 ;; This function is called by:
 35790 ;;		_HighISR
 35791 ;; This function uses a non-reentrant model
 35792 ;;
 35793                           
 35794                           	psect	text172
 35795  0078EC                     __ptext172:
 35796                           	opt stack 0
 35797  0078EC                     i2_PHYGetShortRAMAddr:
 35798                           	opt stack 14
 35799                           
 35800                           ;incstack = 0
 35801                           ;i2PHYGetShortRAMAddr@address stored from wreg
 35802  0078EC  6E03               	movwf	i2PHYGetShortRAMAddr@address,c
 35803                           
 35804                           ;drv_mrf_miwi_mesh_24j40.c: 222: uint8_t toReturn;
 35805                           ;drv_mrf_miwi_mesh_24j40.c: 223: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 35806  0078EE  0E00               	movlw	0
 35807  0078F0  B8F2               	btfsc	intcon,4,c	;volatile
 35808  0078F2  0E01               	movlw	1
 35809  0078F4  6E05               	movwf	i2PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 35810                           
 35811                           ;drv_mrf_miwi_mesh_24j40.c: 225: INTCONbits.INT0IE = 0;
 35812  0078F6  98F2               	bcf	intcon,4,c	;volatile
 35813                           
 35814                           ;drv_mrf_miwi_mesh_24j40.c: 226: LATAbits.LATA5 = 0;
 35815  0078F8  9A89               	bcf	3977,5,c	;volatile
 35816                           
 35817                           ;drv_mrf_miwi_mesh_24j40.c: 227: SPIPut(address);
 35818  0078FA  5003               	movf	i2PHYGetShortRAMAddr@address,w,c
 35819  0078FC  ECBB  F03D         	call	i2_SPIPut
 35820                           
 35821                           ;drv_mrf_miwi_mesh_24j40.c: 228: toReturn = SPIGet();
 35822  007900  EC2C  F03E         	call	i2_SPIGet	;wreg free
 35823  007904  6E04               	movwf	i2PHYGetShortRAMAddr@toReturn,c
 35824                           
 35825                           ;drv_mrf_miwi_mesh_24j40.c: 229: LATAbits.LATA5 = 1;
 35826  007906  8A89               	bsf	3977,5,c	;volatile
 35827                           
 35828                           ;drv_mrf_miwi_mesh_24j40.c: 230: INTCONbits.INT0IE = tmpRFIE;
 35829  007908  B005               	btfsc	i2PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 35830  00790A  D002               	bra	i2u1549_45
 35831  00790C  98F2               	bcf	intcon,4,c	;volatile
 35832  00790E  D001               	bra	i2u1549_46
 35833  007910                     i2u1549_45:
 35834  007910  88F2               	bsf	intcon,4,c	;volatile
 35835  007912                     i2u1549_46:
 35836                           
 35837                           ;drv_mrf_miwi_mesh_24j40.c: 232: return toReturn;
 35838  007912  5004               	movf	i2PHYGetShortRAMAddr@toReturn,w,c
 35839  007914  0012               	return		;funcret
 35840  007916                     __end_ofi2_PHYGetShortRAMAddr:
 35841                           	opt stack 0
 35842                           tblptru	equ	0xFF8
 35843                           tblptrh	equ	0xFF7
 35844                           tblptrl	equ	0xFF6
 35845                           tablat	equ	0xFF5
 35846                           prodh	equ	0xFF4
 35847                           prodl	equ	0xFF3
 35848                           intcon	equ	0xFF2
 35849                           intcon2	equ	0xFF1
 35850                           postinc0	equ	0xFEE
 35851                           plusw0	equ	0xFEB
 35852                           fsr0h	equ	0xFEA
 35853                           fsr0l	equ	0xFE9
 35854                           wreg	equ	0xFE8
 35855                           indf1	equ	0xFE7
 35856                           postinc1	equ	0xFE6
 35857                           postdec1	equ	0xFE5
 35858                           plusw1	equ	0xFE3
 35859                           fsr1h	equ	0xFE2
 35860                           fsr1l	equ	0xFE1
 35861                           indf2	equ	0xFDF
 35862                           postinc2	equ	0xFDE
 35863                           postdec2	equ	0xFDD
 35864                           plusw2	equ	0xFDB
 35865                           fsr2h	equ	0xFDA
 35866                           fsr2l	equ	0xFD9
 35867                           status	equ	0xFD8
 35868                           
 35869 ;; *************** function i2_PHYGetLongRAMAddr *****************
 35870 ;; Defined at:
 35871 ;;		line 251 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_24j40.c"
 35872 ;; Parameters:    Size  Location     Type
 35873 ;;  address         2    2[COMRAM] unsigned int 
 35874 ;; Auto vars:     Size  Location     Type
 35875 ;;  PHYGetLongRA    1    7[COMRAM] volatile unsigned char 
 35876 ;;  PHYGetLongRA    1    6[COMRAM] unsigned char 
 35877 ;; Return value:  Size  Location     Type
 35878 ;;                  1    wreg      unsigned char 
 35879 ;; Registers used:
 35880 ;;		wreg, status,2, status,0, cstack
 35881 ;; Tracked objects:
 35882 ;;		On entry : 0/0
 35883 ;;		On exit  : 0/0
 35884 ;;		Unchanged: 0/0
 35885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35890 ;;Total ram usage:        6 bytes
 35891 ;; Hardware stack levels used:    1
 35892 ;; Hardware stack levels required when called:    2
 35893 ;; This function calls:
 35894 ;;		i2_SPIGet
 35895 ;;		i2_SPIPut
 35896 ;; This function is called by:
 35897 ;;		_HighISR
 35898 ;; This function uses a non-reentrant model
 35899 ;;
 35900                           
 35901                           	psect	text173
 35902  007272                     __ptext173:
 35903                           	opt stack 0
 35904  007272                     i2_PHYGetLongRAMAddr:
 35905                           	opt stack 14
 35906                           
 35907                           ;drv_mrf_miwi_mesh_24j40.c: 253: uint8_t toReturn;
 35908                           ;drv_mrf_miwi_mesh_24j40.c: 254: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 35909                           
 35910                           ;incstack = 0
 35911  007272  0E00               	movlw	0
 35912  007274  B8F2               	btfsc	intcon,4,c	;volatile
 35913  007276  0E01               	movlw	1
 35914  007278  6E08               	movwf	i2PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 35915                           
 35916                           ;drv_mrf_miwi_mesh_24j40.c: 256: INTCONbits.INT0IE = 0;
 35917  00727A  98F2               	bcf	intcon,4,c	;volatile
 35918                           
 35919                           ;drv_mrf_miwi_mesh_24j40.c: 257: LATAbits.LATA5 = 0;
 35920  00727C  9A89               	bcf	3977,5,c	;volatile
 35921                           
 35922                           ;drv_mrf_miwi_mesh_24j40.c: 258: SPIPut(((address>>3)&0x7F)|0x80);
 35923  00727E  C003  F005         	movff	i2PHYGetLongRAMAddr@address,??i2_PHYGetLongRAMAddr
 35924  007282  C004  F006         	movff	i2PHYGetLongRAMAddr@address+1,??i2_PHYGetLongRAMAddr+1
 35925  007286  90D8               	bcf	status,0,c
 35926  007288  3206               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 35927  00728A  3205               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 35928  00728C  90D8               	bcf	status,0,c
 35929  00728E  3206               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 35930  007290  3205               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 35931  007292  90D8               	bcf	status,0,c
 35932  007294  3206               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 35933  007296  3205               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 35934  007298  5005               	movf	??i2_PHYGetLongRAMAddr,w,c
 35935  00729A  0B7F               	andlw	127
 35936  00729C  0980               	iorlw	128
 35937  00729E  ECBB  F03D         	call	i2_SPIPut
 35938                           
 35939                           ;drv_mrf_miwi_mesh_24j40.c: 259: SPIPut(((address<<5)&0xE0));
 35940  0072A2  3803               	swapf	i2PHYGetLongRAMAddr@address,w,c
 35941  0072A4  46E8               	rlncf	wreg,f,c
 35942  0072A6  0BE0               	andlw	224
 35943  0072A8  ECBB  F03D         	call	i2_SPIPut
 35944                           
 35945                           ;drv_mrf_miwi_mesh_24j40.c: 260: toReturn = SPIGet();
 35946  0072AC  EC2C  F03E         	call	i2_SPIGet	;wreg free
 35947  0072B0  6E07               	movwf	i2PHYGetLongRAMAddr@toReturn,c
 35948                           
 35949                           ;drv_mrf_miwi_mesh_24j40.c: 261: LATAbits.LATA5 = 1;
 35950  0072B2  8A89               	bsf	3977,5,c	;volatile
 35951                           
 35952                           ;drv_mrf_miwi_mesh_24j40.c: 262: INTCONbits.INT0IE = tmpRFIE;
 35953  0072B4  B008               	btfsc	i2PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 35954  0072B6  D002               	bra	i2u1550_45
 35955  0072B8  98F2               	bcf	intcon,4,c	;volatile
 35956  0072BA  D001               	bra	i2u1550_46
 35957  0072BC                     i2u1550_45:
 35958  0072BC  88F2               	bsf	intcon,4,c	;volatile
 35959  0072BE                     i2u1550_46:
 35960                           
 35961                           ;drv_mrf_miwi_mesh_24j40.c: 264: return toReturn;
 35962  0072BE  5007               	movf	i2PHYGetLongRAMAddr@toReturn,w,c
 35963  0072C0  0012               	return		;funcret
 35964  0072C2                     __end_ofi2_PHYGetLongRAMAddr:
 35965                           	opt stack 0
 35966                           tblptru	equ	0xFF8
 35967                           tblptrh	equ	0xFF7
 35968                           tblptrl	equ	0xFF6
 35969                           tablat	equ	0xFF5
 35970                           prodh	equ	0xFF4
 35971                           prodl	equ	0xFF3
 35972                           intcon	equ	0xFF2
 35973                           intcon2	equ	0xFF1
 35974                           postinc0	equ	0xFEE
 35975                           plusw0	equ	0xFEB
 35976                           fsr0h	equ	0xFEA
 35977                           fsr0l	equ	0xFE9
 35978                           wreg	equ	0xFE8
 35979                           indf1	equ	0xFE7
 35980                           postinc1	equ	0xFE6
 35981                           postdec1	equ	0xFE5
 35982                           plusw1	equ	0xFE3
 35983                           fsr1h	equ	0xFE2
 35984                           fsr1l	equ	0xFE1
 35985                           indf2	equ	0xFDF
 35986                           postinc2	equ	0xFDE
 35987                           postdec2	equ	0xFDD
 35988                           plusw2	equ	0xFDB
 35989                           fsr2h	equ	0xFDA
 35990                           fsr2l	equ	0xFD9
 35991                           status	equ	0xFD8
 35992                           
 35993 ;; *************** function i2_SPIGet *****************
 35994 ;; Defined at:
 35995 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 35996 ;; Parameters:    Size  Location     Type
 35997 ;;		None
 35998 ;; Auto vars:     Size  Location     Type
 35999 ;;		None
 36000 ;; Return value:  Size  Location     Type
 36001 ;;                  1    wreg      unsigned char 
 36002 ;; Registers used:
 36003 ;;		wreg, status,2, cstack
 36004 ;; Tracked objects:
 36005 ;;		On entry : 0/0
 36006 ;;		On exit  : 0/0
 36007 ;;		Unchanged: 0/0
 36008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36013 ;;Total ram usage:        0 bytes
 36014 ;; Hardware stack levels used:    1
 36015 ;; Hardware stack levels required when called:    1
 36016 ;; This function calls:
 36017 ;;		i2_SPIPut
 36018 ;; This function is called by:
 36019 ;;		i2_PHYGetShortRAMAddr
 36020 ;;		i2_PHYGetLongRAMAddr
 36021 ;; This function uses a non-reentrant model
 36022 ;;
 36023                           
 36024                           	psect	text174
 36025  007C58                     __ptext174:
 36026                           	opt stack 0
 36027  007C58                     i2_SPIGet:
 36028                           	opt stack 14
 36029                           
 36030                           ;spi.c: 310: SPIPut(0x00);
 36031                           
 36032                           ;incstack = 0
 36033  007C58  0E00               	movlw	0
 36034  007C5A  ECBB  F03D         	call	i2_SPIPut
 36035                           
 36036                           ;spi.c: 311: return SSPBUF;
 36037  007C5E  50C9               	movf	4041,w,c	;volatile
 36038  007C60  0012               	return		;funcret
 36039  007C62                     __end_ofi2_SPIGet:
 36040                           	opt stack 0
 36041                           tblptru	equ	0xFF8
 36042                           tblptrh	equ	0xFF7
 36043                           tblptrl	equ	0xFF6
 36044                           tablat	equ	0xFF5
 36045                           prodh	equ	0xFF4
 36046                           prodl	equ	0xFF3
 36047                           intcon	equ	0xFF2
 36048                           intcon2	equ	0xFF1
 36049                           postinc0	equ	0xFEE
 36050                           plusw0	equ	0xFEB
 36051                           fsr0h	equ	0xFEA
 36052                           fsr0l	equ	0xFE9
 36053                           wreg	equ	0xFE8
 36054                           indf1	equ	0xFE7
 36055                           postinc1	equ	0xFE6
 36056                           postdec1	equ	0xFE5
 36057                           plusw1	equ	0xFE3
 36058                           fsr1h	equ	0xFE2
 36059                           fsr1l	equ	0xFE1
 36060                           indf2	equ	0xFDF
 36061                           postinc2	equ	0xFDE
 36062                           postdec2	equ	0xFDD
 36063                           plusw2	equ	0xFDB
 36064                           fsr2h	equ	0xFDA
 36065                           fsr2l	equ	0xFD9
 36066                           status	equ	0xFD8
 36067                           
 36068 ;; *************** function i2_SPIPut *****************
 36069 ;; Defined at:
 36070 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 36071 ;; Parameters:    Size  Location     Type
 36072 ;;  v               1    wreg     unsigned char 
 36073 ;; Auto vars:     Size  Location     Type
 36074 ;;  v               1    1[COMRAM] unsigned char 
 36075 ;;  SPIPut          1    0        volatile unsigned char 
 36076 ;; Return value:  Size  Location     Type
 36077 ;;                  1    wreg      void 
 36078 ;; Registers used:
 36079 ;;		wreg
 36080 ;; Tracked objects:
 36081 ;;		On entry : 0/0
 36082 ;;		On exit  : 0/0
 36083 ;;		Unchanged: 0/0
 36084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36089 ;;Total ram usage:        2 bytes
 36090 ;; Hardware stack levels used:    1
 36091 ;; This function calls:
 36092 ;;		Nothing
 36093 ;; This function is called by:
 36094 ;;		i2_SPIGet
 36095 ;;		i2_PHYSetLongRAMAddr
 36096 ;;		i2_PHYSetShortRAMAddr
 36097 ;;		i2_PHYGetShortRAMAddr
 36098 ;;		i2_PHYGetLongRAMAddr
 36099 ;; This function uses a non-reentrant model
 36100 ;;
 36101                           
 36102                           	psect	text175
 36103  007B76                     __ptext175:
 36104                           	opt stack 0
 36105  007B76                     i2_SPIPut:
 36106                           	opt stack 15
 36107                           
 36108                           ;incstack = 0
 36109                           ;i2SPIPut@v stored from wreg
 36110  007B76  6E02               	movwf	i2SPIPut@v,c
 36111                           
 36112                           ;spi.c: 228: volatile uint8_t i;
 36113                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 36114  007B78  969E               	bcf	3998,3,c	;volatile
 36115  007B7A  50C9               	movf	4041,w,c	;volatile
 36116  007B7C                     i2l78:
 36117                           
 36118                           ;spi.c: 256: {
 36119                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 36120  007B7C  9EC6               	bcf	4038,7,c	;volatile
 36121                           
 36122                           ;spi.c: 258: SSPBUF = v;
 36123  007B7E  C002  FFC9         	movff	i2SPIPut@v,4041	;volatile
 36124                           
 36125                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 36126  007B82  BEC6               	btfsc	4038,7,c	;volatile
 36127  007B84  D7FB               	goto	i2l78
 36128  007B86                     i2l80:
 36129  007B86  B69E               	btfsc	3998,3,c	;volatile
 36130  007B88  0012               	return		;funcret
 36131  007B8A  D7FD               	goto	i2l80
 36132  007B8C                     __end_ofi2_SPIPut:
 36133                           	opt stack 0
 36134                           tblptru	equ	0xFF8
 36135                           tblptrh	equ	0xFF7
 36136                           tblptrl	equ	0xFF6
 36137                           tablat	equ	0xFF5
 36138                           prodh	equ	0xFF4
 36139                           prodl	equ	0xFF3
 36140                           intcon	equ	0xFF2
 36141                           intcon2	equ	0xFF1
 36142                           postinc0	equ	0xFEE
 36143                           plusw0	equ	0xFEB
 36144                           fsr0h	equ	0xFEA
 36145                           fsr0l	equ	0xFE9
 36146                           wreg	equ	0xFE8
 36147                           indf1	equ	0xFE7
 36148                           postinc1	equ	0xFE6
 36149                           postdec1	equ	0xFE5
 36150                           plusw1	equ	0xFE3
 36151                           fsr1h	equ	0xFE2
 36152                           fsr1l	equ	0xFE1
 36153                           indf2	equ	0xFDF
 36154                           postinc2	equ	0xFDE
 36155                           postdec2	equ	0xFDD
 36156                           plusw2	equ	0xFDB
 36157                           fsr2h	equ	0xFDA
 36158                           fsr2l	equ	0xFD9
 36159                           status	equ	0xFD8
 36160                           tblptru	equ	0xFF8
 36161                           tblptrh	equ	0xFF7
 36162                           tblptrl	equ	0xFF6
 36163                           tablat	equ	0xFF5
 36164                           prodh	equ	0xFF4
 36165                           prodl	equ	0xFF3
 36166                           intcon	equ	0xFF2
 36167                           intcon2	equ	0xFF1
 36168                           postinc0	equ	0xFEE
 36169                           plusw0	equ	0xFEB
 36170                           fsr0h	equ	0xFEA
 36171                           fsr0l	equ	0xFE9
 36172                           wreg	equ	0xFE8
 36173                           indf1	equ	0xFE7
 36174                           postinc1	equ	0xFE6
 36175                           postdec1	equ	0xFE5
 36176                           plusw1	equ	0xFE3
 36177                           fsr1h	equ	0xFE2
 36178                           fsr1l	equ	0xFE1
 36179                           indf2	equ	0xFDF
 36180                           postinc2	equ	0xFDE
 36181                           postdec2	equ	0xFDD
 36182                           plusw2	equ	0xFDB
 36183                           fsr2h	equ	0xFDA
 36184                           fsr2l	equ	0xFD9
 36185                           status	equ	0xFD8
 36186                           
 36187                           	psect	rparam
 36188  0000                     tblptru	equ	0xFF8
 36189                           tblptrh	equ	0xFF7
 36190                           tblptrl	equ	0xFF6
 36191                           tablat	equ	0xFF5
 36192                           prodh	equ	0xFF4
 36193                           prodl	equ	0xFF3
 36194                           intcon	equ	0xFF2
 36195                           intcon2	equ	0xFF1
 36196                           postinc0	equ	0xFEE
 36197                           plusw0	equ	0xFEB
 36198                           fsr0h	equ	0xFEA
 36199                           fsr0l	equ	0xFE9
 36200                           wreg	equ	0xFE8
 36201                           indf1	equ	0xFE7
 36202                           postinc1	equ	0xFE6
 36203                           postdec1	equ	0xFE5
 36204                           plusw1	equ	0xFE3
 36205                           fsr1h	equ	0xFE2
 36206                           fsr1l	equ	0xFE1
 36207                           indf2	equ	0xFDF
 36208                           postinc2	equ	0xFDE
 36209                           postdec2	equ	0xFDD
 36210                           plusw2	equ	0xFDB
 36211                           fsr2h	equ	0xFDA
 36212                           fsr2l	equ	0xFD9
 36213                           status	equ	0xFD8
 36214                           
 36215                           	psect	temp
 36216  00005E                     btemp:
 36217                           	opt stack 0
 36218  00005E                     	ds	1
 36219  0000                     int$flags	set	btemp
 36220                           tblptru	equ	0xFF8
 36221                           tblptrh	equ	0xFF7
 36222                           tblptrl	equ	0xFF6
 36223                           tablat	equ	0xFF5
 36224                           prodh	equ	0xFF4
 36225                           prodl	equ	0xFF3
 36226                           intcon	equ	0xFF2
 36227                           intcon2	equ	0xFF1
 36228                           postinc0	equ	0xFEE
 36229                           plusw0	equ	0xFEB
 36230                           fsr0h	equ	0xFEA
 36231                           fsr0l	equ	0xFE9
 36232                           wreg	equ	0xFE8
 36233                           indf1	equ	0xFE7
 36234                           postinc1	equ	0xFE6
 36235                           postdec1	equ	0xFE5
 36236                           plusw1	equ	0xFE3
 36237                           fsr1h	equ	0xFE2
 36238                           fsr1l	equ	0xFE1
 36239                           indf2	equ	0xFDF
 36240                           postinc2	equ	0xFDE
 36241                           postdec2	equ	0xFDD
 36242                           plusw2	equ	0xFDB
 36243                           fsr2h	equ	0xFDA
 36244                           fsr2l	equ	0xFD9
 36245                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    1057
    Data        39
    BSS         2972
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      93
    BANK0           160    158     158
    BANK1           256    217     230
    BANK2           256      0     251
    BANK3           256     34     252
    BANK4           256      0     256
    BANK5           256      0     216
    BANK6           256      0     240
    BANK7           256      0      84
    BANK8           256      0     210
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    MiApp_UnicastAddress@Origin	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BIGRAM[340]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK0[8]), 
		 -> NetworkSendDiscoverRequest@address(BANK0[8]), CoordinatorGenericAddress@address(BANK2[8]), routeInfo.parent(BANK2[8]), CoordinatorAddr(BANK2[8]), 
		 -> routeInfo(BANK2[13]), TMQ(BANK5[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[84]), RoutingTableFindDeviceOrParent@res(BANK0[8]), NewBestParent(BANK2[8]), 
		 -> NetworkBroadcastData@address(COMRAM[8]), ActiveScanResults(BANK2[25]), ConnectionTable(BANK3[85]), radioBroadcast@addr(BANK2[8]), 
		 -> NULL(NULL[0]), main@coord(BANK3[8]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BIGRAM[340]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK0[8]), 
		 -> NetworkSendDiscoverRequest@address(BANK0[8]), CoordinatorGenericAddress@address(BANK2[8]), routeInfo.parent(BANK2[8]), CoordinatorAddr(BANK2[8]), 
		 -> routeInfo(BANK2[13]), TMQ(BANK5[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[84]), RoutingTableFindDeviceOrParent@res(BANK0[8]), NewBestParent(BANK2[8]), 
		 -> NetworkBroadcastData@address(COMRAM[8]), ActiveScanResults(BANK2[25]), ConnectionTable(BANK3[85]), radioBroadcast@addr(BANK2[8]), 
		 -> NULL(NULL[0]), main@coord(BANK3[8]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 

    memcpy@d1	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[8]), beaconMessageBuffer.data.parent(COMRAM[8]), MSTickGet@tNow(BANK0[8]), list.address(BIGRAM[8]), 
		 -> list(BIGRAM[340]), NetworkIssueDataRequest@data(BANK0[28]), NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), 
		 -> userdata(BANK3[36]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[8]), NetworkManagerTask@data(BANK1[37]), 
		 -> routeInfo(BANK2[13]), MyAddress(BANK2[8]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK0[64]), 
		 -> TMQ(BANK5[152]), TunnelManagerInvalidateTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), 
		 -> tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[8]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), RouteManagerProcessReceive@from(BANK0[8]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), myNetworkAddress(COMRAM[2]), MAC_PANID(COMRAM[2]), 
		 -> ConnectionTable.Address(BANK3[8]), MACRxPacket(BANK2[13]), MiApp_MessageAvailable@src(BANK1[8]), MiApp_UnicastAddress@src(BANK1[8]), 
		 -> MiApp_SetAddressPan@addr(BANK0[8]), MiApp_EstablishConnection@src(BANK0[8]), MiApp_StartConnection@src(COMRAM[8]), ConnectionTable(BANK3[85]), 
		 -> myLongAddress(BANK2[8]), Read_MAC_Address@address(BANK0[8]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[8]), beaconMessageBuffer.data.parent(COMRAM[8]), MSTickGet@tNow(BANK0[8]), list.address(BIGRAM[8]), 
		 -> list(BIGRAM[340]), NetworkIssueDataRequest@data(BANK0[28]), NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), 
		 -> userdata(BANK3[36]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[8]), NetworkManagerTask@data(BANK1[37]), 
		 -> routeInfo(BANK2[13]), MyAddress(BANK2[8]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK0[64]), 
		 -> TMQ(BANK5[152]), TunnelManagerInvalidateTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), 
		 -> tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[8]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), RouteManagerProcessReceive@from(BANK0[8]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), myNetworkAddress(COMRAM[2]), MAC_PANID(COMRAM[2]), 
		 -> ConnectionTable.Address(BANK3[8]), MACRxPacket(BANK2[13]), MiApp_MessageAvailable@src(BANK1[8]), MiApp_UnicastAddress@src(BANK1[8]), 
		 -> MiApp_SetAddressPan@addr(BANK0[8]), MiApp_EstablishConnection@src(BANK0[8]), MiApp_StartConnection@src(COMRAM[8]), ConnectionTable(BANK3[85]), 
		 -> myLongAddress(BANK2[8]), Read_MAC_Address@address(BANK0[8]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 256
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[8]), DeviceManagerBufferDeviceData@address(BANK0[8]), address.bytes(COMRAM[8]), 
		 -> IsNetworkDevice@address(BANK0[8]), address.bytes(COMRAM[8]), NetworkSetAddressPAN@address(BANK0[8]), NetworkSendDiscoverResponse@databuff(BANK0[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK0[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK2[8]), address.bytes(COMRAM[8]), 
		 -> NetworkInit@address(BANK0[8]), MyAddress.bytes(BANK2[8]), MyAddress(BANK2[8]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK5[64]), TMQ(BANK5[152]), TunnelManagerInvalidateTunnel@device(BANK0[8]), TunnelManagerGetTunnel@device(BANK0[8]), 
		 -> tunnels.parent(BANK6[8]), tunnels.TxTime(BANK6[8]), tunnels(BANK6[240]), neighbor_tbl.ll_addr.bytes(BIGRAM[8]), 
		 -> neighbor_tbl.ll_addr(BIGRAM[8]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[8]), radioReceivedPacket@child(BANK1[8]), 
		 -> source.bytes(COMRAM[8]), radioReceivedPacket@source(BANK1[8]), myNetworkAddress(COMRAM[2]), MAC_PANID(COMRAM[2]), 
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), address.bytes(COMRAM[8]), AddNodeToNetworkTable@address(BANK0[8]), 
		 -> srcAddress.bytes(BANK2[8]), srcAddress(BANK2[8]), MiApp_EstablishConnection@src(BANK0[8]), myPANID(COMRAM[2]), 
		 -> myLongAddress(BANK2[8]), Read_MAC_Address@addr8(BANK0[6]), NULL(NULL[0]), TxBuffer(BANK3[64]), 
		 -> main@coord(BANK3[8]), myAddr(BANK2[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 256
		 -> Tick_MS(BANK2[8]), address.bytes(COMRAM[8]), DeviceManagerBufferDeviceData@address(BANK0[8]), address.bytes(COMRAM[8]), 
		 -> IsNetworkDevice@address(BANK0[8]), address.bytes(COMRAM[8]), NetworkSetAddressPAN@address(BANK0[8]), NetworkSendDiscoverResponse@databuff(BANK0[64]), 
		 -> NetworkSendDiscoverRequest@databuff(BANK0[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK2[8]), address.bytes(COMRAM[8]), 
		 -> NetworkInit@address(BANK0[8]), MyAddress.bytes(BANK2[8]), MyAddress(BANK2[8]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TMQ.data(BANK5[64]), TMQ(BANK5[152]), TunnelManagerInvalidateTunnel@device(BANK0[8]), TunnelManagerGetTunnel@device(BANK0[8]), 
		 -> tunnels.parent(BANK6[8]), tunnels.TxTime(BANK6[8]), tunnels(BANK6[240]), neighbor_tbl.ll_addr.bytes(BIGRAM[8]), 
		 -> neighbor_tbl.ll_addr(BIGRAM[8]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK1[8]), radioReceivedPacket@child(BANK1[8]), 
		 -> source.bytes(COMRAM[8]), radioReceivedPacket@source(BANK1[8]), myNetworkAddress(COMRAM[2]), MAC_PANID(COMRAM[2]), 
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), address.bytes(COMRAM[8]), AddNodeToNetworkTable@address(BANK0[8]), 
		 -> srcAddress.bytes(BANK2[8]), srcAddress(BANK2[8]), MiApp_EstablishConnection@src(BANK0[8]), myPANID(COMRAM[2]), 
		 -> myLongAddress(BANK2[8]), Read_MAC_Address@addr8(BANK0[6]), NULL(NULL[0]), TxBuffer(BANK3[64]), 
		 -> main@coord(BANK3[8]), myAddr(BANK2[8]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> a2.bytes(COMRAM[8]), isSameAddress@a2(BANK0[8]), isBroadcastAddress@addr(BANK0[8]), isKnownPacket@zeros(BANK0[12]), 
		 -> src1.bytes(COMRAM[8]), main@src1(BANK3[8]), 

    memcmp@s1	PTR const void  size(2) Largest target is 360
		 -> a1.bytes(COMRAM[8]), isSameAddress@a1(BANK0[8]), address.bytes(COMRAM[8]), isBroadcastAddress@address(BANK0[8]), 
		 -> hc_table(BIGRAM[360]), src.bytes(COMRAM[8]), main@src(BANK3[8]), 

    crc32@buf	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    crc32@p	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    DeviceManagerGetDeviceData@isFormed	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isFormed(BANK1[1]), 

    DeviceManagerGetDeviceData@isSecure	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isSecurePacket(BANK1[1]), 

    DeviceManagerGetDeviceData@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), 

    DeviceManagerGetDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DeviceManagerBufferDeviceData@data	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), TxBuffer(BANK3[64]), 

    DeviceManagerBufferDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    devBuffers	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    NetworkSendDiscoverResponse@dhdr	PTR struct net_data_header_t_def size(1) Largest target is 64
		 -> NetworkSendDiscoverResponse@databuff(BANK0[64]), 

    NetworkSendDiscoverRequest@dhdr	PTR struct net_data_header_t_def size(1) Largest target is 64
		 -> NetworkSendDiscoverRequest@databuff(BANK0[64]), 

    NetworkPrepareSendPacket@data	PTR unsigned char  size(2) Largest target is 152
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMQ(BANK5[152]), NULL(NULL[0]), TxBuffer(BANK3[64]), 

    NetworkPrepareSendPacket@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(BANK0[28]), NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), NetworkManagerTask@data(BANK1[37]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK0[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkPrepareSendPacket@nHdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(BANK0[28]), NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), NetworkManagerTask@data(BANK1[37]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK0[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkManagerProcessIncomingData@data	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    NetworkManagerProcessIncomingData@dHdr	PTR struct net_data_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    TMSendFormedPacketToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@myaddr	PTR struct addr_t_def size(2) Largest target is 8
		 -> MyAddress(BANK2[8]), 

    TMSendDataToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), NULL(NULL[0]), TxBuffer(BANK3[64]), 

    TMSendFormedPacketTowardsCoordinator@data	PTR unsigned char  size(2) Largest target is 256
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 
		 -> TxBuffer(BANK3[64]), 

    TunnelManagerSetTunnel@parent	PTR struct addr_t_def size(2) Largest target is 8
		 -> radioReceivedPacket@parent(BANK1[8]), 

    TunnelManagerSetTunnel@device	PTR struct addr_t_def size(2) Largest target is 8
		 -> radioReceivedPacket@child(BANK1[8]), 

    BroadcastManagerDelaySend@pkt	PTR unsigned char  size(2) Largest target is 256
		 -> NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    LE_processReceivedMessage@source	PTR struct addr_t_def size(2) Largest target is 8
		 -> radioReceivedPacket@source(BANK1[8]), 

    LE_processReceivedMessage@hdr	PTR struct linkest_header_t_def size(2) Largest target is 256
		 -> RxBuffer.lnk_header(BANK4[2]), RxBuffer(BANK4[256]), 

    LE_processReceivedMessage@data	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    LE_processReceivedMessage@bhdr	PTR struct net_routing_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    le_updateNeighborTableEst@ne	PTR struct neighbor_table_entry size(2) Largest target is 340
		 -> neighbor_tbl(BIGRAM[340]), 

    le_updateETX@ne	PTR struct neighbor_table_entry size(2) Largest target is 340
		 -> neighbor_tbl(BIGRAM[340]), 

    le_initNeighborIdx@ne	PTR struct neighbor_table_entry size(2) Largest target is 340
		 -> neighbor_tbl(BIGRAM[340]), 

    LE_ClearDLQ@ne	PTR struct neighbor_table_entry size(2) Largest target is 340
		 -> neighbor_tbl(BIGRAM[340]), 

    LEAppendNeighborInfo@data	PTR unsigned char  size(2) Largest target is 84
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), 

    sp__LEAppendNeighborInfo	PTR unsigned char  size(2) Largest target is 84
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), 

    networkSendBeacon@last	PTR unsigned char  size(2) Largest target is 84
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), 

    networkSendBeacon@adr	PTR struct addr_t_def size(2) Largest target is 8
		 -> MyAddress(BANK2[8]), 

    networkSendBeacon@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 84
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), 

    networkSendBeacon@r	PTR struct route_info_t_def size(2) Largest target is 13
		 -> routeInfo(BANK2[13]), 

    RoutingTableFindDeviceOrParent@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 210
		 -> routingTable(BANK8[210]), 

    RouteManagerShouldInsert@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 210
		 -> routingTable(BANK8[210]), 

    RouteManagerShouldInsert@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    RouteManagerShouldInsert@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    RouteManagerProcessReceive@source	PTR struct addr_t_def size(2) Largest target is 8
		 -> radioReceivedPacket@source(BANK1[8]), 

    RouteManagerProcessReceive@data	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    RouteManagerProcessReceive@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    RouterEvicted@r	PTR struct route_info_t_def size(2) Largest target is 13
		 -> routeInfo(BANK2[13]), 

    routeInfoInit@ri	PTR struct route_info_t_def size(2) Largest target is 13
		 -> routeInfo(BANK2[13]), 

    RouteManagerPerformUpdate@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 210
		 -> routingTable(BANK8[210]), 

    RouteManagerPerformUpdate@best	PTR struct routing_table_entry_t_def size(2) Largest target is 210
		 -> routingTable(BANK8[210]), NULL(NULL[0]), 

    sp__NetworkGetMyRouteInfo	PTR struct route_info_t_def size(2) Largest target is 13
		 -> routeInfo(BANK2[13]), 

    RouteManagerPerformUpdate@r	PTR struct route_info_t_def size(2) Largest target is 13
		 -> routeInfo(BANK2[13]), 

    NetworkUnicastData@data	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuffer(BANK3[64]), 

    NetworkUnicastData@mAddress	PTR struct addr_t_def size(2) Largest target is 8
		 -> MyAddress(BANK2[8]), 

    sp__NetworkManagerGetMyAddress	PTR struct addr_t_def size(2) Largest target is 8
		 -> MyAddress(BANK2[8]), 

    radioReceivedPacket@myAddr	PTR struct addr_t_def size(2) Largest target is 8
		 -> MyAddress(BANK2[8]), 

    radioReceivedPacket@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    radioReceivedPacket@data	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    radioReceivedPacket@rhdr	PTR struct net_routing_header_t_def size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[7]), STR_6(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[18]), STR_2(CODE[18]), 
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    HighISR@v	PTR unsigned char  size(1) Largest target is 4
		 -> tmpFrameCounter(COMRAM[4]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> MAC_PANID(COMRAM[2]), myPANID(COMRAM[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(2) Largest target is 8
		 -> myNetworkAddress(COMRAM[2]), myLongAddress(BANK2[8]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuff(BANK5[64]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 8
		 -> radioUnicast@addr(BANK2[8]), radioBroadcast@addr(BANK2[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    NetworkDataArrivedEvent@data	PTR unsigned char  size(2) Largest target is 36
		 -> userdata(BANK3[36]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 8
		 -> main@coord(BANK3[8]), 

    MiApp_SetAddressPan@address	PTR unsigned char  size(2) Largest target is 8
		 -> MiApp_EstablishConnection@src(BANK0[8]), myLongAddress(BANK2[8]), myAddr(BANK2[8]), 

    S1784$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK2[8]), 

    radioUnicast@data	PTR unsigned char  size(2) Largest target is 256
		 -> NetworkIssueDataRequest@data(BANK0[28]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), NetworkManagerTask@data(BANK1[37]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK0[64]), RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    radioBroadcast@data	PTR unsigned char  size(2) Largest target is 444
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[84]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 8
		 -> radioUnicast@addr(BANK2[8]), radioBroadcast@addr(BANK2[8]), 

    S1758$DestAddress	PTR unsigned char  size(2) Largest target is 8
		 -> radioUnicast@addr(BANK2[8]), radioBroadcast@addr(BANK2[8]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 8
		 -> radioUnicast@addr(BANK2[8]), radioBroadcast@addr(BANK2[8]), 

    S1718$Payload	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer(BANK4[256]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    S1718$SourceAddress	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer(BANK4[256]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 256
		 -> RxBuffer.Payload(BANK4[127]), RxBuffer(BANK4[256]), 

    sp__memcpy	PTR void  size(2) Largest target is 444
		 -> beaconMessageBuffer.parent(BANK7[8]), beaconMessageBuffer.data.parent(COMRAM[8]), MSTickGet@tNow(BANK0[8]), list.address(BIGRAM[8]), 
		 -> list(BIGRAM[340]), NetworkIssueDataRequest@data(BANK0[28]), NetworkSendDiscoverResponse@databuff(BANK0[64]), NetworkSendDiscoverRequest@databuff(BANK0[64]), 
		 -> userdata(BANK3[36]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK2[8]), NetworkManagerTask@data(BANK1[37]), 
		 -> routeInfo(BANK2[13]), MyAddress(BANK2[8]), TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK0[64]), 
		 -> TMQ(BANK5[152]), TunnelManagerInvalidateTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@addr(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), 
		 -> tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), LE_processReceivedMessage@ll_addr(BANK0[8]), 
		 -> networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[84]), RouteManagerProcessReceive@from(BANK0[8]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK1[2]), myNetworkAddress(COMRAM[2]), MAC_PANID(COMRAM[2]), 
		 -> ConnectionTable.Address(BANK3[8]), MACRxPacket(BANK2[13]), MiApp_MessageAvailable@src(BANK1[8]), MiApp_UnicastAddress@src(BANK1[8]), 
		 -> MiApp_SetAddressPan@addr(BANK0[8]), MiApp_EstablishConnection@src(BANK0[8]), MiApp_StartConnection@src(COMRAM[8]), ConnectionTable(BANK3[85]), 
		 -> myLongAddress(BANK2[8]), Read_MAC_Address@address(BANK0[8]), NULL(NULL[0]), 

    Read_MAC_Address@pAddress	PTR unsigned char  size(1) Largest target is 8
		 -> Read_MAC_Address@address(BANK0[8]), 

    EEPROMRead@dest	PTR unsigned char  size(1) Largest target is 6
		 -> Read_MAC_Address@addr8(BANK0[6]), 

    S1452$Payload	PTR unsigned char  size(2) Largest target is 36
		 -> userdata(BANK3[36]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 36
		 -> userdata(BANK3[36]), 

    S1452$SourceAddress	PTR unsigned char  size(2) Largest target is 8
		 -> srcAddress(BANK2[8]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 8
		 -> srcAddress.bytes(BANK2[8]), srcAddress(BANK2[8]), 

    sp__memset	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BIGRAM[340]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK0[8]), 
		 -> NetworkSendDiscoverRequest@address(BANK0[8]), CoordinatorGenericAddress@address(BANK2[8]), routeInfo.parent(BANK2[8]), CoordinatorAddr(BANK2[8]), 
		 -> routeInfo(BANK2[13]), TMQ(BANK5[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[8]), tunnels(BANK6[240]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[84]), RoutingTableFindDeviceOrParent@res(BANK0[8]), NewBestParent(BANK2[8]), 
		 -> NetworkBroadcastData@address(COMRAM[8]), ActiveScanResults(BANK2[25]), ConnectionTable(BANK3[85]), radioBroadcast@addr(BANK2[8]), 
		 -> NULL(NULL[0]), main@coord(BANK3[8]), rxMessage(BANK2[10]), LCDText(BANK3[33]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_isSameAddress
    i2_isSameAddress->i2_memcmp
    i2_PHYSetShortRAMAddr->i2_SPIPut
    i2_PHYSetLongRAMAddr->i2_SPIPut
    i2_PHYGetShortRAMAddr->i2_SPIPut
    i2_PHYGetLongRAMAddr->i2_SPIPut
    i2_SPIGet->i2_SPIPut

Critical Paths under _main in BANK0

    _main->_MiApp_MessageAvailable
    _main->_MiApp_UnicastAddress
    _sprintf->___lwdiv
    _Read_MAC_Address->_memcpy
    _EEPROMRead->_SPIPut2
    _SPIGet2->_SPIPut2
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_TransceiverPowerState->_MiMAC_PowerState
    _MiMAC_PowerState->_MiWi_TickGetMs
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _NetworkSendDiscoverRequest->_BroadcastManagerDelaySend
    _MiApp_MessageAvailable->_NetworkManagerTask
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _isKnownPacket->_MSTickGetDiffNow
    _TunnelManagerSetTunnel->_isSameAddress
    _RouteManagerProcessReceive->_routingTableUpdateEntry
    _routingTableUpdateEntry->_LELinkQualityGet
    _LE_InsertNeighbor->_RouterEvicted
    _NetworkSendDiscoverResponse->_BroadcastManagerDelaySend
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _TMSendDataToRFD->_TMSendFormedPacketToRFD
    _TMSendFormedPacketToRFD->_TunnelManagerGetTunnel
    _TunnelManagerInvalidateTunnel->_isSameAddress
    _TunnelManagerGetTunnel->_MSTickGetDiffNow
    _TMSendFormedPacketTowardsCoordinator->_NetworkHasRoute
    _LE_RemoveNeighborDevice->_RouterEvicted
    _GetRouteAddressOfChild->_RoutingTableFindDeviceOrParent
    _RoutingTableFindDeviceOrParent->_isSameAddress
    _BroadcastManagerDelaySend->_AddMSToTick
    _AddMSToTick->_MSTickGet
    _NetworkDataArrivedEvent->_memset
    _IsNetworkDevice->_isInvalidAddress
    _DeviceManagerGetDeviceData->_isSameAddress
    _LE_processReceivedMessage->_le_updateNeighborEntryIdx
    _le_updateNeighborEntryIdx->_le_updateNeighborTableEst
    _le_updateNeighborTableEst->_isSameAddress
    _le_updateETX->_le_computeETX
    _le_computeETX->___awdiv
    _le_findWorstNeighborIdx->_isSameAddress
    _le_findRandomNeighborIdx->_isSameAddress
    _RouteManagerShouldInsert->_isInvalidAddress
    _DeviceManagerGetDeviceType->_isSameAddress
    _DeviceManagerBufferDeviceData->_memcpy
    _BlinkRedLED->_LEDCommand
    _NetworkManagerTask->_TransportManagerTask
    _TransportManagerTask->_radioUnicast
    _RouteManagerTask->_RouteManagerPerformUpdate
    _RouteManagerPerformUpdate->_LELinkQualityGet
    _RouteManagerPerformUpdate->_LE_ClearDLQ
    _LE_UnpinNeighbor->_le_findIdx
    _LE_PinNeighbor->_le_findIdx
    _LE_ClearDLQ->_le_findIdx
    _BroadcastManagerTask->_radioBroadcast
    _BeaconManagerTask->_networkSendBeacon
    _networkSendBeacon->_radioBroadcast
    _radioBroadcast->_SendPacket
    _LELinkQualityGet->_le_findIdx
    _le_findIdx->_isSameAddress
    _LEAppendNeighborInfo->___lwmod
    ___lwmod->_krnd
    _netDecayInterval->_netChooseAdvertiseTime
    _MSTickGetDiffNow->_MSTickGet
    _MiMAC_ReceivedPacket->_memcpy
    _AddNodeToNetworkTable->_isSameAddress
    _MiApp_RequestData->_NetworkIssueDataRequest
    _NetworkIssueDataRequest->_radioUnicast
    _radioUnicast->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_MiWi_TickGetMs
    _RouterEvicted->_routingTableFind
    _routingTableFind->_isInvalidAddress
    _isSameAddress->_CoordinatorGenericAddress
    _routeInfoInit->_memset
    _NetworkPrepareSendPacket->_CoordinatorGenericAddress
    _CoordinatorGenericAddress->_memset
    _MiApp_ProtocolInit->_MiApp_SetAddressPan
    _MiMAC_Init->_DelayMs
    _MiMAC_ChannelAssessment->_PHYGetLongRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPIPut
    _PHYGetLongRAMAddr->_SPIPut
    _SPIGet->_SPIPut
    _IsMemberOfNetwork->_NetworkHasRoute
    _NetworkHasRoute->_isInvalidAddress
    _isInvalidAddress->_isBroadcastAddress
    _isBroadcastAddress->_memcmp
    _MiApp_GetParentAddress->_NetworkGetParentAddress
    _MiApp_EstablishConnection->_NetworkInit
    _TunnelManagerInit->_memset
    _TransportManagerInit->_memset
    _RouteManagerInit->_MSTickGet
    _DeviceManagerInit->_memset
    _CacheInit->_memset
    _BroadcastManagerInit->_memset
    _netResetInterval->_netChooseAdvertiseTime
    _netChooseAdvertiseTime->_MSTickGet
    ___llmod->_krnd
    _MSTickGet->_memcpy
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetLongRAMAddr->_SPIPut
    _MiApp_SetAddressPan->_NetworkSetAddressPAN
    _NetworkSetAddressPAN->_memcpy
    _MiMAC_SetAltAddress->_memcpy
    _memcpy->_NetworkManagerGetMyAddress
    _PHYSetShortRAMAddr->_SPIPut
    _LEDManagerTask->_MiWi_TickGetMs
    _LCD_WriteData->_SPIPut2
    _LCDInit->_DelayMs
    _LCD_WriteCmd->_SPIPut2
    _DelayMs->_DelayUS
    _ButtonTask->_MiWi_TickGetMs
    _MiWi_TickGetMs->_MiWi_TickGet

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_SearchConnection
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_SearchConnection->_MiApp_MessageAvailable
    _MiApp_MessageAvailable->_radioReceivedPacket
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0 5927342
                                            213 BANK1      4     4      0
                                              0 BANK3     34    34      0
                         _ButtonTask
                       _HardwareInit
                    _InitSymbolTimer
                          _LCDUpdate
                         _LEDCommand
                     _LEDManagerTask
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_GetParentAddress
            _MiApp_IsMemberOfNetwork
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
                  _MiApp_RequestData
             _MiApp_SearchConnection
                _MiApp_SetAddressPan
        _MiApp_TransceiverPowerState
               _MiApp_UnicastAddress
                     _MiWi_TickGetMs
                   _Read_MAC_Address
                    _isButtonPressed
                             _memcmp
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    21      8    4149
                                              7 BANK0     25    17      8
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _isButtonPressed                                      4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Read_MAC_Address                                    26    18      8   16425
                                             12 BANK0     26    18      8
                         _EEPROMRead
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EEPROMRead                                           3     0      3     479
                                              2 BANK0      3     0      3
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIGet2                                              0     0      0      34
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                13     8      5  399864
                                            153 BANK0      5     0      5
                                             64 BANK1      8     8      0
                 _NetworkUnicastData
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkUnicastData                                  16     3     13  384332
                                            137 BANK0     16     3     13
                 _CoordinatorAddress
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
               _NetworkGetDeviceType
         _NetworkManagerGetMyAddress
                    _TMSendDataToRFD
_TMSendFormedPacketTowardsCoordinato
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_TransceiverPowerState                          2     2      0   51853
                                             30 BANK0      2     2      0
                   _MiMAC_PowerState
 ---------------------------------------------------------------------------------
 (2) _MiMAC_PowerState                                    10    10      0   51809
                                             20 BANK0     10    10      0
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                     _MiWi_TickGetMs
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (1) _MiApp_SearchConnection                              25    21      4 2506675
                                            188 BANK1     25    21      4
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
                     _MiWi_TickGetMs
         _NetworkSendDiscoverRequest
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSendDiscoverRequest                          75    75      0   65347
                                             59 BANK0     75    75      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
                             _memset
 ---------------------------------------------------------------------------------
 (2) _MiApp_MessageAvailable                              12    12      0 2418164
                                            154 BANK0      4     4      0
                                            180 BANK1      8     8      0
              _AddNodeToNetworkTable
               _MiMAC_ReceivedPacket
                     _MiWi_TickGetMs
                 _NetworkManagerTask
                        _TimeTickISR
                             _memcpy
                _radioReceivedPacket
 ---------------------------------------------------------------------------------
 (3) _radioReceivedPacket                                 52    35     17 1559154
                                            144 BANK0      6     6      0
                                            134 BANK1     46    29     17
                        _BlinkRedLED
          _BroadcastManagerDelaySend
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
             _GetRouteAddressOfChild
                  _IsMemberOfNetwork
                    _IsNetworkDevice
            _LE_RemoveNeighborDevice
          _LE_processReceivedMessage
             _NetworkDiscoveredEvent
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
  _NetworkManagerProcessIncomingData
        _NetworkSendDiscoverResponse
         _RouteManagerProcessReceive
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
             _TunnelManagerSetTunnel
                              _crc32
                 _isBroadcastAddress
                      _isKnownPacket
                      _isSameAddress
                             _memcpy
                 _radioDiscardPacket
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _radioDiscardPacket                                   0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (4) _isKnownPacket                                       39    35      4   44227
                                             56 BANK0     39    35      4
                          _MSTickGet
                   _MSTickGetDiffNow
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (4) _crc32                                               20    12      8     513
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (4) _TunnelManagerSetTunnel                              35    31      4   50269
                                             32 BANK0     26    22      4
                          _MSTickGet
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _RouteManagerProcessReceive                          19    14      5  153465
                                             78 BANK0     19    14      5
               _BeaconManagerTrigger
                  _LE_InsertNeighbor
                     _LE_PinNeighbor
              _NetworkAddressSizeGet
   _RouteManagerSetNeighborCongested
                      _RouterEvicted
                   _isInvalidAddress
                             _memcpy
            _routingTableUpdateEntry
 ---------------------------------------------------------------------------------
 (5) _routingTableUpdateEntry                             22     4     18   23966
                                             57 BANK0     21     3     18
                   _LELinkQualityGet
               _passLinkEtxThreshold
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (5) _RouteManagerSetNeighborCongested                     9     0      9     208
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (5) _LE_InsertNeighbor                                   12     3      9   52006
                                             60 BANK0     12     3      9
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
 ---------------------------------------------------------------------------------
 (4) _NetworkSendDiscoverResponse                         75    75      0   65347
                                             59 BANK0     75    75      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
           _isNetworkSecurityEnabled
                             _memset
 ---------------------------------------------------------------------------------
 (4) _NetworkManagerProcessIncomingData                   77    71      6  734733
                                            137 BANK0      7     1      6
                                             64 BANK1     70    70      0
               _BeaconManagerTrigger
         _DeviceManagerGetDeviceData
                    _IsNetworkDevice
            _NetworkDataArrivedEvent
               _NetworkGetDeviceType
                    _TMSendDataToRFD
            _TMSendFormedPacketToRFD
                   _isInvalidAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TMSendDataToRFD                                     78    64     14  315682
                                            123 BANK0     14     0     14
                                              0 BANK1     64    64      0
           _NetworkPrepareSendPacket
            _TMSendFormedPacketToRFD
 ---------------------------------------------------------------------------------
 (4) _TMSendFormedPacketToRFD                             27    14     13  294090
                                             96 BANK0     27    14     13
          _BroadcastManagerDelaySend
             _GetRouteAddressOfChild
            _LE_RemoveNeighborDevice
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
                 _isBroadcastAddress
                      _isSameAddress
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerInvalidateTunnel                       20    12      8   33964
                                             32 BANK0     20    12      8
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerGetTunnel                              40    32      8   50630
                                             56 BANK0     40    32      8
                   _MSTickGetDiffNow
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TMSendFormedPacketTowardsCoordinator                11     5      6   23515
                                             35 BANK0     11     5      6
                    _NetworkHasRoute
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LE_RemoveNeighborDevice                             12     4      8   41845
                                             60 BANK0     12     4      8
                      _RouterEvicted
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _GetRouteAddressOfChild                              18    10      8   28828
                                             54 BANK0     18    10      8
                 _CoordinatorAddress
           _LE_GetNeighborDeviceType
     _RoutingTableFindDeviceOrParent
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _RoutingTableFindDeviceOrParent                      22    14      8   18869
                                             32 BANK0     22    14      8
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LE_GetNeighborDeviceType                             6     4      2     203
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _CoordinatorAddress                                   8     0      8       0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (5) _BroadcastManagerDelaySend                           15     9      6   35770
                                             44 BANK0     15     9      6
                        _AddMSToTick
                          _MSTickGet
           _isNetworkSecurityEnabled (ARG)
                               _krnd
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AddMSToTick                                         16     4     12     437
                                             28 BANK0     16     4     12
                          _MSTickGet (ARG)
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (5) _NetworkDataArrivedEvent                             13     0     13   11101
                                              8 BANK0     13     0     13
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IsNetworkDevice                                     24    15      9   53363
                                             33 BANK0     24    15      9
                          _MSTickGet
              _NetworkAddressSizeGet
                   _isInvalidAddress
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _DeviceManagerGetDeviceData                          26    12     14   24497
                                             32 BANK0     26    12     14
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _NetworkDiscoveredEvent                              12     8      4     874
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (4) _LE_processReceivedMessage                           22    16      6  104899
                                             61 BANK0     21    15      6
              _NetworkAddressSizeGet
           _RouteManagerShouldInsert
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
           _le_findRandomNeighborIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
          _le_updateNeighborEntryIdx
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _le_updateNeighborEntryIdx                            6     4      2   15083
                                             55 BANK0      6     4      2
                 _le_initNeighborIdx
          _le_updateNeighborTableEst
 ---------------------------------------------------------------------------------
 (6) _le_updateNeighborTableEst                           24    16      8   13076
                                             32 BANK0     23    15      8
                            ___lldiv
                            ___lwdiv
                      _isSameAddress
                      _le_computeETX
                       _le_updateETX
 ---------------------------------------------------------------------------------
 (7) _le_updateETX                                         8     4      4    1374
                                             13 BANK0      8     4      4
                            ___lwdiv
                      _le_computeETX (ARG)
 ---------------------------------------------------------------------------------
 (7) _le_computeETX                                        5     3      2     786
                                              8 BANK0      5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     657
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _le_initNeighborIdx                                  11     3      8     906
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (6) _le_findWorstNeighborIdx                             15    13      2    8784
                                             32 BANK0     15    13      2
            _NetworkGetParentAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (5) _le_findRandomNeighborIdx                            10     8      2    9556
                                             32 BANK0     10     8      2
            _NetworkGetParentAddress
                            ___lwmod
                      _isSameAddress
                               _krnd
 ---------------------------------------------------------------------------------
 (6) _le_findEmptyNeighborIdx                              8     6      2     167
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _RouteManagerShouldInsert                            15    13      2   12438
                                             33 BANK0     15    13      2
            _NetworkGetParentAddress
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerGetDeviceType                          13     5      8    8695
                                             32 BANK0     13     5      8
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerBufferDeviceData                       25    11     14   16890
                                             12 BANK0     25    11     14
              _NetworkAddressSizeGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _BlinkRedLED                                          0     0      0     332
                         _LEDCommand
 ---------------------------------------------------------------------------------
 (5) _LEDCommand                                           3     2      1     332
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _TimeTickISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _NetworkManagerTask                                  43    43      0  793924
                                            150 BANK0      4     4      0
                                              0 BANK1     39    39      0
                  _BeaconManagerTask
               _BroadcastManagerTask
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                _MiApp_IsNetworkBusy
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                _RMRoutingTableCount
          _RouteManagerPerformUpdate
                   _RouteManagerTask
                      _RouterEvicted
               _TransportManagerTask
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                               _krnd
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _TransportManagerTask                                72    72      0  179415
                                             78 BANK0     72    72      0
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                    _NetworkGetPANID
            _NetworkGetParentAddress
                    _NetworkHasRoute
           _NetworkPrepareSendPacket
                      _RouterEvicted
                             _memcpy
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (4) _RouteManagerTask                                     0     0      0  100107
                          _MSTickGet
                   _MSTickGetDiffNow
          _RouteManagerPerformUpdate
 ---------------------------------------------------------------------------------
 (5) _RouteManagerPerformUpdate                           18    18      0   68515
                                             57 BANK0     18    18      0
               _BeaconManagerTrigger
                   _LELinkQualityGet
                        _LE_ClearDLQ
                     _LE_PinNeighbor
                   _LE_UnpinNeighbor
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
            _TransportManagerNoRoute
         _TransportManagerRouteFound
                   _isInvalidAddress
                      _isSameAddress
               _passLinkEtxThreshold
 ---------------------------------------------------------------------------------
 (6) _passLinkEtxThreshold                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _TransportManagerRouteFound                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TransportManagerNoRoute                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _LE_UnpinNeighbor                                    13     5      8    9563
                                             42 BANK0     13     5      8
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _LE_PinNeighbor                                      13     5      8    9664
                                             42 BANK0     13     5      8
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _LE_ClearDLQ                                         15     7      8    9628
                                             42 BANK0     15     7      8
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _BeaconManagerTrigger                                 0     0      0   15734
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (4) _RMRoutingTableCount                                  2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _MiApp_IsNetworkBusy                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BroadcastManagerTask                                14    14      0   99584
                                             70 BANK0     14    14      0
                          _MSTickGet
                    _NetworkGetPANID
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (4) _BeaconManagerTask                                    0     0      0  182771
                          _MSTickGet
                   _MSTickGetDiffNow
                   _netDecayInterval
                  _networkSendBeacon
 ---------------------------------------------------------------------------------
 (5) _networkSendBeacon                                   24    24      0  135445
                                             70 BANK0     16    16      0
               _LEAppendNeighborInfo
                   _LELinkQualityGet
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
                    _NetworkGetPANID
                    _NetworkHasRoute
         _NetworkManagerGetMyAddress
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                             _memcpy
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (5) _radioBroadcast                                       7     1      6   73866
                                             63 BANK0      7     1      6
                    _NetworkGetPANID (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LELinkQualityGet                                    15     5     10   10445
                                             42 BANK0     15     5     10
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _le_findIdx                                          10     2      8    9350
                                             32 BANK0     10     2      8
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _LEAppendNeighborInfo                                18    14      4   17737
                                             17 BANK0     18    14      4
              _NetworkAddressSizeGet
                            ___lwdiv
                            ___lwmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     648
                                             12 BANK0      5     1      4
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1073
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _netDecayInterval                                     0     0      0   15734
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (6) _MSTickGetDiffNow                                    28    20      8   16434
                                             28 BANK0     28    20      8
                          _MSTickGet
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ReceivedPacket                                 8     8      0   15384
                                             12 BANK0      8     8      0
                _MiMAC_DiscardPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _AddNodeToNetworkTable                               18     8     10   34377
                                             32 BANK0     18     8     10
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _MiApp_DiscardMessage                                 0     0      0       0
             _NetworkReleaseUserData
 ---------------------------------------------------------------------------------
 (3) _NetworkReleaseUserData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_RequestData                                    0     0      0  128158
            _NetworkIssueDataRequest
 ---------------------------------------------------------------------------------
 (2) _NetworkIssueDataRequest                             30    30      0  128158
                                             78 BANK0     30    30      0
          _CoordinatorGenericAddress
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                      _RouterEvicted
           _isNetworkSecurityEnabled
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _radioUnicast                                        15     1     14   66560
                                             63 BANK0     15     1     14
                    _NetworkGetPANID (ARG)
            _NetworkGetParentAddress (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          16    10      6   62697
                                             47 BANK0     16    10      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    27    17     10   61414
                                             20 BANK0     27    17     10
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                     _MiWi_TickGetMs
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (5) _isNetworkSecurityEnabled                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RouterEvicted                                       14     6      8   32160
                                             46 BANK0     14     6      8
              _NetworkGetMyRouteInfo
            _NetworkGetParentAddress (ARG)
          _RouteManagerRequestUpdate
                      _isSameAddress
                      _routeInfoInit
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (7) _routingTableFind                                    13     5      8   12344
                                             33 BANK0     13     5      8
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                       16     0     16    8289
                                             16 BANK0     16     0     16
                 _CoordinatorAddress (ARG)
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
            _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _routeInfoInit                                        2     0      2   10404
                                              8 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (7) _RouteManagerRequestUpdate                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _NetworkGetMyRouteInfo                                2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _NetworkPrepareSendPacket                            17     2     15   19152
                                             16 BANK0     17     2     15
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
                    _NetworkSequence
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _NetworkSequence                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkManagerGetMyAddress                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _NetworkGetPANID                                      2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CoordinatorGenericAddress                            8     0      8   10145
                                              8 BANK0      8     0      8
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   5     5      0  116195
                                             34 BANK0      4     4      0
                _MiApp_SetAddressPan
                         _MiMAC_Init
                _MiMAC_SetAltAddress
               _NetworkSetDeviceType
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSetDeviceType                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           6     3      3   34092
                                             20 BANK0      6     3      3
                            _DelayMs
                       _InitMRF24J40
            _MiMAC_ChannelAssessment
                               _krnd
                           _krndInit
 ---------------------------------------------------------------------------------
 (3) _krndInit                                             6     4      2     259
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _MiMAC_ChannelAssessment                              2     2      0    5412
                                              8 BANK0      1     1      0
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (8) _InitMRF24J40                                         4     4      0   25959
                                             10 BANK0      4     4      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _PHYGetShortRAMAddr                                   3     3      0     167
                                              2 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _PHYGetLongRAMAddr                                    6     4      2    1200
                                              2 BANK0      6     4      2
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      34
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_IsMemberOfNetwork                              0     0      0    3723
                  _IsMemberOfNetwork
 ---------------------------------------------------------------------------------
 (4) _IsMemberOfNetwork                                    0     0      0    3723
                    _NetworkHasRoute
 ---------------------------------------------------------------------------------
 (4) _NetworkHasRoute                                      2     2      0    3723
                                             33 BANK0      2     2      0
               _NetworkGetDeviceType
                   _isInvalidAddress
 ---------------------------------------------------------------------------------
 (5) _isInvalidAddress                                     8     0      8    3646
                                             25 BANK0      8     0      8
            _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress
 ---------------------------------------------------------------------------------
 (6) _isBroadcastAddress                                  17     9      8    2367
                                              8 BANK0     17     9      8
              _NetworkAddressSizeGet
                             _memcmp
 ---------------------------------------------------------------------------------
 (1) _memcmp                                               8     2      6    1409
                                              0 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _MiApp_GetParentAddress                               8     0      8       0
                                              8 BANK0      8     0      8
            _NetworkGetParentAddress
 ---------------------------------------------------------------------------------
 (5) _NetworkGetParentAddress                              8     0      8       0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _MiApp_EstablishConnection                           11    10      1  213058
                                             45 BANK0     11    10      1
                _MiApp_SetAddressPan
                   _MiApp_SetChannel
                        _NetworkInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkInit                                         13     2     11  133550
                                             32 BANK0     13     2     11
                  _BeaconManagerInit
               _BroadcastManagerInit
                          _CacheInit
                  _DeviceManagerInit
                  _LinkEstimatorInit
              _NetworkAddressSizeGet
               _NetworkSetAddressPAN
                   _RouteManagerInit
               _TransportManagerInit
                  _TunnelManagerInit
                               _krnd
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TunnelManagerInit                                    0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TransportManagerInit                                 0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerInit                                     0     0      0   25303
                          _MSTickGet
                             _memset
 ---------------------------------------------------------------------------------
 (3) _LinkEstimatorInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerInit                                    0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CacheInit                                            0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (3) _BroadcastManagerInit                                 0     0      0   10145
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6   10145
                                              0 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _BeaconManagerInit                                    0     0      0   15799
                               _krnd
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (6) _netResetInterval                                     0     0      0   15734
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (7) _netChooseAdvertiseTime                               4     4      0   15734
                                             28 BANK0      4     4      0
                          _MSTickGet
                            ___llmod
                               _krnd
 ---------------------------------------------------------------------------------
 (6) _krnd                                                12     8      4      65
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     440
                                             12 BANK0      9     1      8
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (7) _MSTickGet                                           16     8      8   15158
                                             12 BANK0     16     8      8
                 _TimerEnterCritical
                  _TimerExitCritical
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TimerExitCritical                                    0     0      0       0
                        _TimerEnable
 ---------------------------------------------------------------------------------
 (9) _TimerEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TimerEnterCritical                                   0     0      0       0
                       _TimerDisable
 ---------------------------------------------------------------------------------
 (9) _TimerDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     2     2      0   12346
                                             10 BANK0      2     2      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (9) _MiMAC_SetChannel                                     2     1      1   12261
                                              8 BANK0      2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (8) _PHYSetLongRAMAddr                                    6     3      3    7955
                                              2 BANK0      6     3      3
                             _SPIPut
 ---------------------------------------------------------------------------------
 (1) _MiApp_SetAddressPan                                 12     8      4   51674
                                             22 BANK0     12     8      4
                _MiMAC_SetAltAddress
               _NetworkSetAddressPAN
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkSetAddressPAN                                10     0     10   15602
                                             12 BANK0     10     0     10
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _NetworkGetDeviceType                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NetworkAddressSizeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SetAltAddress                                  3     0      3   20166
                                             12 BANK0      3     0      3
                 _PHYSetShortRAMAddr
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6   15090
                                              2 BANK0     10     4      6
              _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
 ---------------------------------------------------------------------------------
 (8) _PHYSetShortRAMAddr                                   3     2      1    3974
                                              2 BANK0      3     2      1
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _SPIPut                                               2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LEDManagerTask                                      12    12      0    1568
                                             20 BANK0     12    12      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _LCDUpdate                                            1     1      0    2994
                                             20 BANK0      1     1      0
                            _DelayUS
                            _LCDInit
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0      65
                                              2 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    2120
                            _DelayMs
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         1     1      0      65
                                              2 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIPut2                                              2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                             12     8      4    2055
                                              8 BANK0     12     8      4
                            _DelayUS
 ---------------------------------------------------------------------------------
 (4) _DelayUS                                              8     4      4     484
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ButtonTask                                           1     1      0     235
                                             20 BANK0      1     1      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _MiWi_TickGetMs                                       8     4      4     105
                                             12 BANK0      8     4      4
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiWi_TickGet                                        12     8      4      71
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _HighISR                                            29    29      0    3194
                                             24 COMRAM    29    29      0
                i2_PHYGetLongRAMAddr
               i2_PHYGetShortRAMAddr
                i2_PHYSetLongRAMAddr
               i2_PHYSetShortRAMAddr
                    i2_isSameAddress
 ---------------------------------------------------------------------------------
 (15) i2_isSameAddress                                    16     0     16     398
                                              8 COMRAM    16     0     16
            i2_NetworkAddressSizeGet
                           i2_memcmp
 ---------------------------------------------------------------------------------
 (16) i2_memcmp                                            8     2      6     266
                                              0 COMRAM     8     2      6
            i2_NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (16) i2_NetworkAddressSizeGet                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_PHYSetShortRAMAddr                                3     2      1     402
                                              2 COMRAM     3     2      1
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_PHYSetLongRAMAddr                                 6     3      3     164
                                              2 COMRAM     6     3      3
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_PHYGetShortRAMAddr                                3     3      0     114
                                              2 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_PHYGetLongRAMAddr                                 6     4      2     396
                                              2 COMRAM     6     4      2
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SPIGet                                            0     0      0      23
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SPIPut                                            2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _HardwareInit
   _InitSymbolTimer
   _LCDUpdate
     _DelayUS
     _LCDInit
       _DelayMs
         _DelayUS
       _LCD_WriteCmd
         _SPIPut2
     _LCD_WriteCmd
       _SPIPut2
     _LCD_WriteData
       _SPIPut2
   _LEDCommand
   _LEDManagerTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _MiApp_DiscardMessage
     _NetworkReleaseUserData
   _MiApp_EstablishConnection
     _MiApp_SetAddressPan
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
     _NetworkInit
       _BeaconManagerInit
         _krnd
         _netResetInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
       _BroadcastManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _CacheInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _LinkEstimatorInit
       _NetworkAddressSizeGet
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouteManagerInit
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TransportManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _krnd
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_GetParentAddress
     _NetworkGetParentAddress
   _MiApp_IsMemberOfNetwork
     _IsMemberOfNetwork
       _NetworkHasRoute
         _NetworkGetDeviceType
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
   _MiApp_MessageAvailable
     _AddNodeToNetworkTable
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _MiMAC_ReceivedPacket
       _MiMAC_DiscardPacket
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkManagerTask
       _BeaconManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _netDecayInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
         _networkSendBeacon
           _LEAppendNeighborInfo
             _NetworkAddressSizeGet
             ___lwdiv
             ___lwmod
               _krnd (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkGetPANID
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isNetworkSecurityEnabled
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
       _BroadcastManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _memset
           _NetworkAddressSizeGet (ARG)
         _radioBroadcast
           _NetworkGetPANID (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           _isNetworkSecurityEnabled (ARG)
           _memset (ARG)
             _NetworkAddressSizeGet (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _MSTickGet
         _TimerEnterCritical
           _TimerDisable
         _TimerExitCritical
           _TimerEnable
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MSTickGetDiffNow
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
       _MiApp_IsNetworkBusy
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RMRoutingTableCount
       _RouteManagerPerformUpdate
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LELinkQualityGet
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_ClearDLQ
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_UnpinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
         _TransportManagerNoRoute
         _TransportManagerRouteFound
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _passLinkEtxThreshold
       _RouteManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _TransportManagerTask
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           _isNetworkSecurityEnabled (ARG)
       _isInvalidAddress
         _NetworkGetParentAddress (ARG)
         _isBroadcastAddress (ARG)
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _krnd
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _MiWi_TickGetMs
               _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
         _isNetworkSecurityEnabled (ARG)
     _TimeTickISR
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
     _radioReceivedPacket
       _BlinkRedLED
         _LEDCommand
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _GetRouteAddressOfChild
         _CoordinatorAddress
         _LE_GetNeighborDeviceType
         _RoutingTableFindDeviceOrParent
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _IsMemberOfNetwork
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
       _IsNetworkDevice
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _LE_RemoveNeighborDevice
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _LE_processReceivedMessage
         _NetworkAddressSizeGet
         _RouteManagerShouldInsert
           _NetworkGetParentAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findEmptyNeighborIdx
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_findRandomNeighborIdx
           _NetworkGetParentAddress
           ___lwmod
             _krnd (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _krnd
         _le_findWorstNeighborIdx
           _NetworkGetParentAddress
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_initNeighborIdx
         _le_updateNeighborEntryIdx
           _le_initNeighborIdx
           _le_updateNeighborTableEst
             ___lldiv
             ___lwdiv
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _le_computeETX
               ___awdiv
             _le_updateETX
               ___lwdiv
               _le_computeETX (ARG)
                 ___awdiv
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkDiscoveredEvent
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkManagerGetMyAddress
       _NetworkManagerProcessIncomingData
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _DeviceManagerGetDeviceData
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkDataArrivedEvent
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _TMSendDataToRFD
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
               _isNetworkSecurityEnabled (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSendDiscoverResponse
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled
         _memset
           _NetworkAddressSizeGet (ARG)
       _RouteManagerProcessReceive
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LE_InsertNeighbor
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet
         _RouteManagerSetNeighborCongested
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _routingTableUpdateEntry
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
           _routingTableFind
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _TunnelManagerGetTunnel
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInvalidateTunnel
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerSetTunnel
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _crc32
       _isBroadcastAddress
         _NetworkAddressSizeGet
         _memcmp
           _NetworkAddressSizeGet (ARG)
       _isKnownPacket
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _memcmp
           _NetworkAddressSizeGet (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioDiscardPacket
         _MiMAC_DiscardPacket
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _MiWi_TickGetMs
               _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
         _isNetworkSecurityEnabled (ARG)
   _MiApp_ProtocolInit
     _MiApp_SetAddressPan
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiMAC_Init
       _DelayMs
         _DelayUS
       _InitMRF24J40
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         _PHYGetLongRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYGetShortRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
       _MiMAC_ChannelAssessment
         _PHYGetLongRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYGetShortRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
       _krnd
       _krndInit
     _MiMAC_SetAltAddress
       _PHYSetShortRAMAddr
         _SPIPut
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _NetworkSetDeviceType
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_RequestData
     _NetworkIssueDataRequest
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _PHYGetLongRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYGetShortRAMAddr
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPIPut
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _MiWi_TickGetMs
               _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPIPut
             _PHYSetShortRAMAddr
               _SPIPut
         _isNetworkSecurityEnabled (ARG)
   _MiApp_SearchConnection
     _MiApp_DiscardMessage
       _NetworkReleaseUserData
     _MiApp_MessageAvailable
       _AddNodeToNetworkTable
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _MiMAC_ReceivedPacket
         _MiMAC_DiscardPacket
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MiWi_TickGetMs
         _MiWi_TickGet
       _NetworkManagerTask
         _BeaconManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _netDecayInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
           _networkSendBeacon
             _LEAppendNeighborInfo
               _NetworkAddressSizeGet
               ___lwdiv
               ___lwmod
                 _krnd (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkGetPANID
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isNetworkSecurityEnabled
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
             _radioBroadcast
               _NetworkGetPANID (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
               _isNetworkSecurityEnabled (ARG)
               _memset (ARG)
                 _NetworkAddressSizeGet (ARG)
         _BroadcastManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _MiApp_IsNetworkBusy
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RMRoutingTableCount
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
         _RouteManagerTask
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _RouteManagerPerformUpdate
             _BeaconManagerTrigger
               _netResetInterval
                 _netChooseAdvertiseTime
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   ___llmod
                     _krnd (ARG)
                   _krnd
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_ClearDLQ
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_PinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_UnpinNeighbor
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetMyRouteInfo
             _NetworkManagerGetMyAddress
             _TransportManagerNoRoute
             _TransportManagerRouteFound
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _TransportManagerTask
           _CoordinatorGenericAddress
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isNetworkSecurityEnabled
         _krnd
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           _isNetworkSecurityEnabled (ARG)
       _TimeTickISR
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioReceivedPacket
         _BlinkRedLED
           _LEDCommand
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _DeviceManagerBufferDeviceData
           _NetworkAddressSizeGet
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _DeviceManagerGetDeviceType
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _GetRouteAddressOfChild
           _CoordinatorAddress
           _LE_GetNeighborDeviceType
           _RoutingTableFindDeviceOrParent
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _IsMemberOfNetwork
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _LE_RemoveNeighborDevice
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_processReceivedMessage
           _NetworkAddressSizeGet
           _RouteManagerShouldInsert
             _NetworkGetParentAddress
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findRandomNeighborIdx
             _NetworkGetParentAddress
             ___lwmod
               _krnd (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _krnd
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
           _le_updateNeighborEntryIdx
             _le_initNeighborIdx
             _le_updateNeighborTableEst
               ___lldiv
               ___lwdiv
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _le_computeETX
                 ___awdiv
               _le_updateETX
                 ___lwdiv
                 _le_computeETX (ARG)
                   ___awdiv
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkDiscoveredEvent
         _NetworkGetDeviceType
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
         _NetworkManagerProcessIncomingData
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _DeviceManagerGetDeviceData
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _IsNetworkDevice
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkDataArrivedEvent
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _TMSendDataToRFD
             _NetworkPrepareSendPacket
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _NetworkSequence (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TMSendFormedPacketToRFD
               _BroadcastManagerDelaySend
                 _AddMSToTick
                   _MSTickGet (ARG)
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _krnd (ARG)
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _isNetworkSecurityEnabled (ARG)
                 _krnd (ARG)
                 _memcpy (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _GetRouteAddressOfChild
                 _CoordinatorAddress
                 _LE_GetNeighborDeviceType
                 _RoutingTableFindDeviceOrParent
                   _NetworkAddressSizeGet
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _LE_RemoveNeighborDevice
                 _RouterEvicted
                   _NetworkGetMyRouteInfo
                   _NetworkGetParentAddress (ARG)
                   _RouteManagerRequestUpdate (ARG)
                   _isSameAddress (ARG)
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
                   _routeInfoInit (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _routingTableFind (ARG)
                     _isInvalidAddress
                       _NetworkGetParentAddress (ARG)
                       _isBroadcastAddress (ARG)
                         _NetworkAddressSizeGet
                         _memcmp
                           _NetworkAddressSizeGet (ARG)
                     _isSameAddress
                       _CoordinatorAddress (ARG)
                       _CoordinatorGenericAddress (ARG)
                         _NetworkAddressSizeGet
                         _memset
                           _NetworkAddressSizeGet (ARG)
                       _NetworkAddressSizeGet (ARG)
                       _NetworkGetParentAddress (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                       _memcmp (ARG)
                         _NetworkAddressSizeGet (ARG)
                 _le_findIdx
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _NetworkGetDeviceType
               _NetworkGetPANID
               _NetworkGetParentAddress
               _NetworkManagerGetMyAddress
               _TMSendFormedPacketTowardsCoordinator
                 _NetworkHasRoute
                   _NetworkGetDeviceType
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _TunnelManagerGetTunnel
                 _MSTickGetDiffNow
                   _MSTickGet
                     _TimerEnterCritical
                       _TimerDisable
                     _TimerExitCritical
                       _TimerEnable
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _TunnelManagerInvalidateTunnel
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _isBroadcastAddress
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _radioUnicast
                 _NetworkGetPANID (ARG)
                 _NetworkGetParentAddress (ARG)
                 _SendPacket (ARG)
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPIPut
                         _PHYSetShortRAMAddr
                           _SPIPut
                       _PHYGetLongRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYGetShortRAMAddr
                         _SPIGet
                           _SPIPut
                         _SPIPut
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPIPut
                       _memcpy
                         _NetworkAddressSizeGet (ARG)
                         _NetworkManagerGetMyAddress (ARG)
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                 _isNetworkSecurityEnabled (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPIPut
                       _PHYSetShortRAMAddr
                         _SPIPut
                     _PHYGetLongRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYGetShortRAMAddr
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPIPut
                     _memcpy
                       _NetworkAddressSizeGet (ARG)
                       _NetworkManagerGetMyAddress (ARG)
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
               _isNetworkSecurityEnabled (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkSendDiscoverResponse
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled
           _memset
             _NetworkAddressSizeGet (ARG)
         _RouteManagerProcessReceive
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LE_InsertNeighbor
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findEmptyNeighborIdx
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_findWorstNeighborIdx
               _NetworkGetParentAddress
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
             _le_initNeighborIdx
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _RouteManagerSetNeighborCongested
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _routingTableUpdateEntry
             _LELinkQualityGet
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _passLinkEtxThreshold
             _routingTableFind
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
         _TMSendFormedPacketTowardsCoordinator
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TunnelManagerGetTunnel
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerInvalidateTunnel
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _TunnelManagerSetTunnel
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _crc32
         _isBroadcastAddress
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
         _isKnownPacket
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _MSTickGetDiffNow
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _memcmp
             _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioDiscardPacket
           _MiMAC_DiscardPacket
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _PHYGetLongRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYGetShortRAMAddr
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPIPut
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPIPut
               _PHYSetShortRAMAddr
                 _SPIPut
           _isNetworkSecurityEnabled (ARG)
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkSendDiscoverRequest
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkAddressSizeGet
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_SetAddressPan
     _MiMAC_SetAltAddress
       _PHYSetShortRAMAddr
         _SPIPut
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _NetworkSetAddressPAN
       _NetworkAddressSizeGet
       _NetworkGetDeviceType
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_TransceiverPowerState
     _MiMAC_PowerState
       _InitMRF24J40
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPIPut
           _PHYSetShortRAMAddr
             _SPIPut
         _PHYGetLongRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYGetShortRAMAddr
           _SPIGet
             _SPIPut
           _SPIPut
         _PHYSetLongRAMAddr
           _SPIPut
         _PHYSetShortRAMAddr
           _SPIPut
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPIPut
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MiWi_TickGetMs
         _MiWi_TickGet
       _PHYGetLongRAMAddr
         _SPIGet
           _SPIPut
         _SPIPut
       _PHYGetShortRAMAddr
         _SPIGet
           _SPIPut
         _SPIPut
       _PHYSetShortRAMAddr
         _SPIPut
   _MiApp_UnicastAddress
     _NetworkUnicastData
       _CoordinatorAddress
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _NetworkGetDeviceType
       _NetworkManagerGetMyAddress
       _TMSendDataToRFD
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPIPut
                     _PHYSetShortRAMAddr
                       _SPIPut
                   _PHYGetLongRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYGetShortRAMAddr
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _PHYSetLongRAMAddr
                     _SPIPut
                   _PHYSetShortRAMAddr
                     _SPIPut
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPIPut
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPIPut
                 _PHYSetShortRAMAddr
                   _SPIPut
             _isNetworkSecurityEnabled (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiWi_TickGetMs
     _MiWi_TickGet
   _Read_MAC_Address
     _EEPROMRead
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _isButtonPressed
   _memcmp
     _NetworkAddressSizeGet (ARG)
   _memset
     _NetworkAddressSizeGet (ARG)
   _sprintf
     ___lwdiv
     ___wmul
     _isdigit

 _HighISR (ROOT)
   i2_PHYGetLongRAMAddr
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_PHYGetShortRAMAddr
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_PHYSetLongRAMAddr
     i2_SPIPut
   i2_PHYSetShortRAMAddr
     i2_SPIPut
   i2_isSameAddress
     i2_NetworkAddressSizeGet
     i2_memcmp
       i2_NetworkAddressSizeGet (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     5CC      35       39.3%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      D2      22       82.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      54      20       32.8%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      F0      18       93.8%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D8      16       84.4%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     22      FC      12       98.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FB      10       98.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     D9      E6       8       89.8%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      5D       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     7C6       6        0.0%
DATA                 0      0     D92       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 21:28:22 2016

                        isKnownPacket@emptyindex 00B3                                 ?_isButtonPressed 0001  
                       ??_TunnelManagerGetTunnel 00A0                               ?_networkSendBeacon 0001  
                           NetworkManagerTask@sz 0125                              ??_BeaconManagerInit 0080  
                             ??_routingTableFind 0089                                  AddMSToTick@tick 007C  
                            ??_BeaconManagerTask 00B6                                                l5 78AE  
                                              l6 78A0                                      ?_LEDCommand 0060  
                                              _c 0240                 __size_of_le_findWorstNeighborIdx 013E  
                                              _w 02DD                                                _x 02E1  
                                              _y 0055                                                _z 02E5  
                        netChooseAdvertiseTime@t 007C                              ?_le_initNeighborIdx 0060  
                           ?_MiMAC_DiscardPacket 0001                                   _LEDManagerTask 1D24  
               __size_ofi2_NetworkAddressSizeGet 0004                 __end_of_RouteManagerShouldInsert 5A62  
                                 ?_isSameAddress 0070                              ?_CoordinatorAddress 0060  
                          _NetworkAddressSizeGet 7CB0                           __size_of_routeInfoInit 0054  
                   __end_of_BroadcastManagerInit 7AC4                                               l80 7A8E  
                                             l91 7AD6                         ?_LE_RemoveNeighborDevice 009C  
                                             l78 7A84                                               l89 7ACC  
                      __size_of_MSTickGetDiffNow 0080                     __end_of_BroadcastManagerTask 3ABE  
                                _mySecurityLevel FF9F                 MiApp_SearchConnection@ChannelMap 01BC  
                                   ___awdiv@sign 0065                     __size_of_MiApp_SetAddressPan 0068  
                            __end_of_BlinkRedLED 7BE2                           NetworkManagerTask@data 0100  
                            ___wmul@multiplicand 0062              __size_of_TransportManagerRouteFound 0002  
                      i2PHYSetShortRAMAddr@value 0003                       ?_BroadcastManagerDelaySend 008C  
                              _ActiveScanResults 0260                                     __CFG_CP0$OFF 000000  
                  NetworkDataArrivedEvent@source 0068                           ??_NetworkGetDeviceType 0060  
                            ??_networkSendBeacon 00A6                              _RMRoutingTableCount 7C30  
                                     _MiMAC_Init 66E6               __size_of_RouteManagerRequestUpdate 0006  
          DeviceManagerBufferDeviceData@isFormed 0079                        __size_of_netResetInterval 0016  
                                            l125 7478                                              l252 1D3E  
                                            l412 1C48                                              l261 1E0E  
                                            l415 1C64                                              l265 1DE8  
                                            l291 1F84                                              l283 1EF8  
                                            l259 1D60                                              l278 1EE0  
                                            l624 54C6                                              l297 200E  
                                            l814 11CE                                              l567 6102  
                                            l840 141A                                              l745 4032  
                                            l834 1374                                              l771 0DAC  
                                            l764 0CA6                                              l774 0E66  
                                            l839 13EE                                              l767 0CF2  
                                            l871 530C                                              l776 0EF6  
                                            l873 533E                                              l874 5354  
                                            l779 0FB8                                              l981 2CA2  
                                            l888 743C                                              _GIE 007F97  
                                            _TMQ 0500            DeviceManagerBufferDeviceData@isSecure 0078  
                    __size_of_PHYSetShortRAMAddr 002E                 __end_of_le_findRandomNeighborIdx 3C88  
                                            _nst 01E3                      __end_of_MiMAC_SetAltAddress 7178  
                    NetworkIssueDataRequest@data 00AE                          NetworkManagerTask@delay 0238  
                                  _NewBestParent 02AD                                              prod 000FF3  
                                            wreg 000FE8                     NetworkPrepareSendPacket@nHdr 007F  
                      NetworkUnicastData@address 00E9                                     __CFG_IESO$ON 000000  
                   NetworkPrepareSendPacket@data 007B                            __end_of_mySecurityKey FF8F  
                      _le_updateNeighborEntryIdx 4DDA                         i2PHYSetLongRAMAddr@value 0005  
                   NetworkPrepareSendPacket@size 007D                   RouteManagerProcessReceive@data 00B0  
                              ?_RouteManagerInit 0001                __end_of_MiApp_EstablishConnection 6128  
                              ?_RouteManagerTask 0001                   RouteManagerProcessReceive@from 00B7  
                      _le_updateNeighborTableEst 29C8                                  __end_of_LCDInit 5676  
                                    le_findIdx@i 0089                        __end_of_BeaconManagerInit 7A2A  
                           ??_le_initNeighborIdx 0068                        __end_of_BeaconManagerTask 5C28  
                                 ?_le_computeETX 0068                             ??_CoordinatorAddress 0068  
                           i2_PHYSetShortRAMAddr 7916         __end_of_RouteManagerSetNeighborCongested 7CBA  
      __size_of_RouteManagerSetNeighborCongested 0002               ??_RouteManagerSetNeighborCongested 0069  
              ?_RouteManagerSetNeighborCongested 0060                 _RouteManagerSetNeighborCongested 7CB8  
                                           l1002 2D88                                             l1020 2EAA  
                                           l1014 2E62                                             l1015 2E66  
                                           l2042 5B34                                             l1281 685C  
                             ??_RouteManagerInit 007C                                             l1523 75AC  
                                           l1276 680E                                             l1540 4E06  
                                           l1509 7304                                             l1701 3388  
                                           l1703 33B4                                             l2176 776A  
                                           l1552 3B7C                                             l1473 4830  
                                           l1652 35F0                      __end_of_radioReceivedPacket 0C3C  
                                           l1559 3C7E                                             l2609 734E  
                                           l2619 75EA                                             l2556 69BA  
                                           l2566 6D7A                                             l1980 7504  
                                           l1981 7530                           LELinkQualityGet@offset 0092  
                             ??_RouteManagerTask 00AB                                             STR_1 FFD5  
                                           STR_2 FFB2                                             STR_3 FFA0  
                                           STR_4 FFEA                                             STR_5 FFF1  
                                           STR_6 FFDE                                             STR_7 FFE3  
                                           STR_8 FFC4                 __size_of_NetworkGetParentAddress 0014  
                     ??_LE_GetNeighborDeviceType 0062                                      main@counter 03EA  
                                           i2l80 7B86                                             i2l78 7B7C  
                                           _TMR0 000FD6                                             _TMR1 000FCE  
                    RouteManagerShouldInsert@hdr 0081                       NetworkUnicastData@mAddress 00F6  
          MiMAC_ChannelAssessment@AssessmentMode 0001                                             _RbcQ 08D2  
                     MiApp_UnicastAddress@Origin 00FB                                    __CFG_FCMEN$ON 000000  
      RouteManagerSetNeighborCongested@congested 0068                          ?_GetRouteAddressOfChild 0096  
                           ?_RMRoutingTableCount 0060                       MiMAC_SetChannel@offsetFreq 0068  
                                           _main 1980                                  __end_of_SPIGet2 7C1C  
                               ?_NetworkGetPANID 0060                       __end_of_TimerEnterCritical 7CA8  
                                           _list 0BF6                                             _krnd 44EC  
                      __end_of_networkSendBeacon 38CE                         ??_TunnelManagerSetTunnel 0084  
                         ??_BeaconManagerTrigger 0080                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             fsr0l 000FE9  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           fsr1l 000FE1                                             indf2 000FDF  
                                           fsr2l 000FD9                                             btemp 005E  
                                __end_of_SPIPut2 7ADC                                    __CFG_T1DIG$ON 000000  
                 __end_of_NetworkReleaseUserData 7C8C                                _LE_InsertNeighbor 5F30  
                                 ??_InitMRF24J40 006A                                             prodh 000FF4  
                    NetworkDataArrivedEvent@data 0070                       ??_isNetworkSecurityEnabled 0060  
                                           prodl 000FF3                           __end_of_LE_PinNeighbor 742A  
                                           start 047C                               __size_of_LCDUpdate 00B6  
                     le_updateNeighborTableEst@i 0094                                   ?_RouterEvicted 008E  
                                  LE_ClearDLQ@ne 0095                       le_updateNeighborTableEst@n 0080  
                TMSendFormedPacketToRFD@isSecure 00CC                         NetworkManagerTask@tStart 020C  
                    NetworkDataArrivedEvent@size 0072                                  __end_of_DelayUS 78C2  
                               ?_NetworkHasRoute 0001                                  __end_of_DelayMs 6436  
                     __size_of_IsMemberOfNetwork 0004                               ?_LE_InsertNeighbor 009C  
                            __size_of_EEPROMRead 002E                                    ?_LCD_WriteCmd 0001  
                                 ?_isKnownPacket 0098                                  __end_of_HighISR 047C  
                                  _LCD_WriteData 7B34                 __size_of_MiApp_IsMemberOfNetwork 0004  
                         __end_of_LEDManagerTask 206E                                     ___param_bank 000010  
                              _PHYGetLongRAMAddr 7020                          LELinkQualityGet@address 008A  
                          ??_MiMAC_DiscardPacket 0060                       NetworkDiscoveredEvent@rssi 0062  
            __size_of_NetworkManagerGetMyAddress 000C                               ?_PHYGetLongRAMAddr 0062  
                                     _DeviceType 005A                                    ?_le_updateETX 006D  
                   __end_of_MiApp_DiscardMessage 7C74                              ??_LE_InsertNeighbor 00A5  
                                  __CFG_PLLDIV$2 000000                         _radioReceivedPacket$5323 0199  
                       isKnownPacket@oldestindex 00AF                       NetworkUnicastData@isSecure 00F5  
                     MiMAC_PowerState@PowerState 0074                                            l12041 684C  
                                          l13001 2296                                            l12051 6D3A  
                                          l12203 752C                                            l12035 6812  
                                          l12043 6862                                            l12123 5DF8  
                                          l12107 67C8                                            l12053 6D46  
                                          l11501 70B0                                            l13013 2354  
                                          l13101 59B6                                            l12221 6590  
                                          l12141 589E                                            l12055 6D4A  
                                          l11503 70B8                                            l12127 5E24  
                                          l12223 65CA                                            l12129 5E34  
                                          l12305 6FA2                                            l13113 5A4A  
                                          l13105 59D0                                            l13201 3AC8  
                                          l12241 6888                                            l12153 5950  
                                          l12059 6D6C                                            l13027 2394  
                                          l13019 237C                                            l13115 5A4E  
                                          l12251 68A4                                            l12235 6878  
                                          l12155 5954                                            l13051 5160  
                                          l14101 10BC                                            l12173 6D1E  
                                          l12501 697E                                            l12341 47C2  
                                          l12325 467E                                            l12157 595E  
                                          l12149 5904                                            l12413 4BC2  
                                          l13037 50C6                                            l11623 78DC  
                                          l14103 10C8                                            l12167 6CCC  
                                          l13151 3814                                            l13119 5A5E  
                                          l12247 6898                                            l12263 68C8  
                                          l12351 47FE                                            l12423 4C58  
                                          l12407 4B2C                                            l14113 10D0  
                                          l14009 0E0E                                            l12281 732A  
                                          l12521 75CE                                            l12177 6D26  
                                          l13145 3794                                            l13225 3BAC  
                                          l12249 68A0                                            l13321 4432  
                                          l12345 47E8                                            l12361 4F4C  
                                          l13073 5F72                                            l14201 07AA  
                                          l11555 7622                                            l11619 78CC  
                                          l14115 10FC                                            l14043 0F5C  
                                          l14027 0ECA                                            l12267 68D4  
                                          l12259 68BE                                            l13315 43FE  
                                          l13307 435A                                            l12347 47EE  
                                          l12187 766A                                            l12435 651E  
                                          l12419 4C48                                            l13067 5F4E  
                                          l14211 0818                                            l11549 7606  
                                          l11709 4158                                            l11741 11A8  
                                          l14061 0FF8                                            l12277 731E  
                                          l12525 75E0                                            l12517 75C2  
                                          l12541 6F46                                            l13149 37D2  
                                          l13237 3C70                                            l12509 69AC  
                                          l13325 4440                                            l12461 61E6  
                                          l13077 5F92                                            l14221 087A  
                                          l14205 07D0                                            l15021 6132  
                                          l15007 2036                                            l11495 7078  
                                          l11815 1296                                            l11751 11C8  
                                          l12279 7326                                            l12519 75CA  
                                          l12535 6F26                                            l12439 6540  
                                          l12375 4F80                                            l12367 4F50  
                                          l13511 3446                                            l13335 5FEC  
                                          l14303 0C2C                                            l14231 093C  
                                          l14223 089A                                            l14215 085C  
                                          l15031 6156                                            l15111 2D30  
                                          l15103 2CD8                                            l15009 205E  
                                          l11833 12CC                                            l11825 12B4  
                                          l11817 129C                                            l11809 1280  
                                          l11737 119E                                            l11729 118E  
                                          l12289 7344                                            l13185 4ED6  
                                          l13177 4E82                                            l13425 4D12  
                                          l13417 4CD2                                            l12393 5080  
                                          l12465 6258                                            l13521 3512  
                                          l14241 09AC                                            l14153 05C2  
                                          l15121 2D56                                            l11691 408C  
                                          l11667 401A                                            l11659 4006  
                                          l11907 1420                                            l12299 6F82  
                                          l14331 3D56                                            l14315 3C90  
                                          l14083 106A                                            l12715 51DA  
                                          l13187 4F12                                            l13435 4D7A  
                                          l13427 4D36                                            l13339 605C  
                                          l14307 0C38                                            l15051 6190  
                                          l15123 2D5A                                            l14501 6704  
                                          l11853 1336                                            l11837 12DC  
                                          l14325 3D22                                            l14085 106E  
                                          l14093 107E                                            l14069 102A  
                                          l14077 1030                                            l12653 483E  
                                          l13613 666C                                            l13189 4F18  
                                          l13541 35F8                                            l13533 35CE  
                                          l13517 34DC                                            l13381 3392  
                                          l13365 3286                                            l14229 091A  
                                          l14173 0666                                            l14165 062E  
                                          l14157 0604                                            l15141 2DCC  
                                          l15133 2D9E                                            l11679 4048  
                                          l11951 1500                                            l11943 14EA  
                                          l11927 148E                                            l11935 14C4  
                                          l11775 11EE                                            l14335 3D66  
                                          l14087 1072                                            l14095 10A6  
                                          l14079 1054                                            l13375 32FE  
                                          l13359 31F0                                            l14263 0AEE  
                                          l14247 0A14                                            l14183 06C2  
                                          l15231 5516                                            l15215 5476  
                                          l15135 2DAE                                            l15119 2D50  
                                          l12569 5B38                                            l11937 14CA  
                                          l11881 13C4                                            l11865 1376  
                                          l11873 139C                                            l11793 122A  
                                          l11785 1204                                            l14089 1076  
                                          l12673 493A                                            l13617 66D4  
                                          l12745 52F8                                            l12737 52CE  
                                          l12497 696E                                            l12841 2870  
                                          l13481 4AD2                                            l13537 35DE  
                                          l13529 3572                                            l13385 33A2  
                                          l13369 32BA                                            l14193 076C  
                                          l15225 54BA                                            l15129 2D8E  
                                          l15145 2DDE                                            l15401 1BCA  
                                          l11963 1528                                            l11955 1506  
                                          l11795 1230                                            l14099 10B4  
                                          l12587 6A30                                            l13707 5C14  
                                          l13723 3924                                            l13803 187C  
                                          l12763 72F6                                            l12747 52FE  
                                          l12499 697A                                            l12851 28F2  
                                          l12819 2746                                            l13563 2FFA  
                                          l13555 2F78                                            l13483 4AE8  
                                          l13395 341E                                            l14451 56C4  
                                          l15251 554E                                            l14611 3FCA  
                                          l14603 3F16                                            l15147 2E04  
                                          l14357 7680                                            l14517 6730  
                                          l11893 13F0                                            l12589 6A38  
                                          l13733 3A00                                            l12773 29CA  
                                          l12941 4346                                            l12925 42A2  
                                          l12909 41C4                                            l12845 2892  
                                          l12829 27E0                                            l13565 3032  
                                          l13581 30E2                                            l13477 4A72  
                                          l13389 33BC                                            l14293 0BA2  
                                          l14613 3FFA                                            l14605 3F46  
                                          l15165 2E40                                            l15157 2E1A  
                                          l15093 2CAA                                            l15341 1A36  
                                          l15333 1A18                                            l15421 1C18  
                                          l15325 19EE                                            l11975 1538  
                                          l11799 1242                                            l13735 3A0C  
                                          l13719 38D2                                            l13807 18BE  
                                          l13815 1942                                            l13751 159E  
                                          l13903 252C                                            l12759 72CA  
                                          l12919 425E                                            l12839 2852  
                                          l12847 28B0                                            l13591 3120  
                                          l13567 3062                                            l14279 0B78  
                                          l15247 5546                                            l15239 552A  
                                          l15087 2C8A                                            l15407 1BE8  
                                          l15351 1A68                                            l15423 1C30  
                                          l13729 39D8                                            l13673 7384  
                                          l13817 1970                                            l13745 158C  
                                          l12929 42B0                                            l12857 2950  
                                          l14465 5776                                            l14641 539C  
                                          l14609 3FAE                                            l15185 2EB0  
                                          l15193 2F00                                            l15177 2E88  
                                          l15097 2CB0                                            l15329 1A0E  
                                          l15267 60F8                                            l13683 5B48  
                                          l13739 3AAC                                            l12963 2098  
                                          l13763 1610                                            l13747 1590  
                                          l13771 1620                                            l13923 264A  
                                          l12787 2B34                                            l12867 29C4  
                                          l13595 3142                                            l13579 30BC  
                                          l14299 0BE0                                            l14459 5736  
                                          l15179 2E8E                                            l15195 2F06  
                                          l15443 1CAC                                            l15451 1CE8  
                                          l15435 1C68                                            l15371 1B28  
                                          l15347 1A58                                            l15339 1A32  
                                          l14733 5EB6                                            l14557 57F2  
                                          l13685 5B4E                                            l13781 163A  
                                          l13773 162C                                            l13861 23C2  
                                          l15285 7B9A                                            l14485 7802  
                                          l15197 2F1E                                            l15429 1C4C  
                                          l14735 5EC8                                            l14727 5E90  
                                          l14719 5E86                                            l14567 5836  
                                          l14559 57FC                                            l13695 5BBC  
                                          l13791 1768                                            l13759 15AA  
                                          l13927 2664                                            l13871 23FE  
                                          l13855 23AA                                            l12799 2C7A  
                                          l14663 5406                                            l14647 53A8  
                                          l14671 541E                                            l14479 77F0  
                                          l15375 1B32                                            l15367 1B1C  
                                          l14753 5F12                                            l14921 1DDE  
                                          l13961 0C7C                                            l12977 21EE  
                                          l13793 17C8                                            l13937 2690  
                                          l14657 53F0                                            l15449 1CE2  
                                          l14755 5F24                                            l14747 5EEC  
                                          l14931 1E04                                            l14907 1D62  
                                          l13947 0C58                                            l12987 2228  
                                          l13795 17EA                                            l13787 16F6  
                                          l13891 24AE                                            l13883 2478  
                                          l13875 2448                                            l13859 23BA  
                                          l14691 7A04                                            l14861 6DC2  
                                          l14925 1DEC                                            l14909 1D72  
                                          l13965 0C84                                            l13957 0C62  
                                          l13949 0C5C                                            l12989 222C  
                                          l13877 2450                                            l13869 23F6  
                                          l14855 6DB8                                            l13991 0D54  
                                          l13975 0CC6                                            l12999 2280  
                                          l13887 24A6                                            l14873 6DE6  
                                          l14961 1EFC                                            l14953 1EE4  
                                          l14937 1E1C                                            l14875 6DE8  
                                          l14859 6DC0                                            l14891 1D34  
                                          l13899 251C                                            l14869 6DDE  
                                          l14965 1F76                                            l14957 1EEE  
                                          l14949 1ED6                                            l14975 1F86  
                                          l14895 1D40                                            l14887 1D2A  
                                          l14993 2012                                            l14977 1F98  
                                          l14897 1D50                                            l14989 2004  
                                          l14999 202C                                            ?_main 0001  
              __end_of_BroadcastManagerDelaySend 4802                                  __end_of___awdiv 68DE  
                                          ?_krnd 0060                    MiApp_EstablishConnection@Mode 008D  
                     __size_of_MiApp_RequestData 0004                                  __end_of___lldiv 69CC  
              TunnelManagerInvalidateTunnel@addr 008A                                            u20001 4D70  
                                          _T0CON 000FD5                                            u20041 4DB6  
                                          u20201 6ADA                                            u20051 4DCC  
                                          u20131 4A3E                                            u20300 35DE  
                                ___awdiv@divisor 0062                                            u21021 2440  
                                          u20141 4A66                                            u20310 35E6  
                                          u21111 253E                                            u20151 4A7C  
                                          u20320 3602                                  __end_of___llmod 6D8C  
                                          u21201 265A                                            u21041 2468  
                                          u20401 2FD8                                            u20161 4A96  
                                          u20081 49EE                                            u22001 0ADC  
                                          u21211 266E                                            u21131 2558  
                                          u21051 2482                                            u20411 300C  
                                          u20171 4AC0                                            u20331 368A  
                                          u21220 268E                                            u21060 24A2  
                                          u20501 3134                                            u20421 3044  
                                          u20181 4ADC                                            u22021 0AF8  
                                          u21071 24C0                                            u20351 2F50  
                                          u20271 3580                                            u22111 0BB4  
                                          u20600 7384                                            u20520 3156  
                                          u20440 3076                                            u21161 25A6  
                                          u20281 35AC                                            u22121 0BCE  
                                          u22041 0B30                                            u21250 0C50  
                                          u20611 7394                                            u21171 25FA  
                                          u21091 24DA                                            u20531 3192  
                                          u20451 30B2                                            u20371 2F8A  
                                          u22051 0B50                                            u21500 064E  
                                          u20621 5B58                                            u20541 6676  
                                          u22141 0BEA                                            u22061 0B62  
                                          u20711 39A2                                            u21191 263E  
                                          u20551 66A2                                            u21431 05DE  
                                          u23040 1F58                                            u22240 3D66  
                                          u22401 5840                                            u20641 5BAE  
                                          u20481 3106                                            u22161 0C20  
                                          u22321 56F6                                            u22250 3D74  
                                          u20570 66E2                                            u22171 3CB4  
                                          u20651 5BC6                                            u23140 206C  
                                          u22260 3D86                                            u22181 3CC6  
                                          u20901 18E2                                            u21621 0740  
                                          u22341 5762                                            u22501 3EF2  
                                          u22421 3E70                                            u20910 18FE  
                                          u20671 5C06                                            u20591 7366  
                                          u21711 07E8                                            u21631 075C  
                                          u22511 3F20                                            u22431 3E86  
                                          u20760 3ABC                                            u20920 197E  
                                          u22600 5386                                            u22281 785E  
                                          u17001 62E4                                            u20841 1694  
                                          u21801 08FC                                            u21721 07FA  
                                          u21561 06D4                                            u22521 3F50  
                           main@pMemberOfNetwork 03F3                                            u22291 6C4E  
                                          u20851 177A                                            u17011 7BAA  
                                          u21731 082C                                            u21571 06F0  
                                          u22531 3F6A                                            u22451 3EA2  
                                          u22620 53DA                                            u20941 6FFC  
                                          u17021 6774                                            u21901 0A30  
                                          u21821 0962                                            u21661 078C  
                                          u22461 3EBC                                            u23501 74D6  
                                          u23181 61C0                                            u20950 775E  
                                          u22391 57C6                                            u23511 7A3C  
                                          u20871 180E                                            u17111 58CA  
                                          u21911 0A42                                            u21831 0974  
                                          u21591 0714                                            u22551 3F84  
                                          u17041 5DD6                                            u22641 6318  
                                          u17201 5968                                            u17121 58DC  
                                          u21761 08AC                                            u22561 3F9E  
                                          u22481 3ED8                                            u22651 6350  
                                          u20891 18B0                                            u21851 09C0  
                                          u21771 08C6                                            u16260 7544  
                                          u18100 482A                                            u18020 7BD4  
                                          u16245 77D6                                            u17061 5E1A  
                                          u17221 6CF6                                            u17141 58FA  
                                          u21941 0A7C                                            u21861 09D2  
                                          u22581 3FD4                                            u23701 1C7A  
                                          u23621 1B48                                            u23541 19A6  
                                          u16246 77D8                                            u17311 693C  
                                          u16255 706E                                            u22671 6394  
                                          u17231 6D08                                            u20991 23E6  
                                          u17151 5916                                            u21951 0A8E  
                                          u21791 08EA                                            u22591 6B4C  
                                          u23375 5446                                            u16256 7070  
                                          u16440 11BC                                            u16185 711E  
                                          u23481 6110                                            u17081 5E42  
                                          u18041 73A8                                            u19001 22A4  
                                          u18201 527E                                            u17161 5928  
                                          u21961 0AA0                                            u21881 09EC  
                                          u22770 6DA0                                            u16186 7120  
                                          u16195 7892                                            u17091 5E54  
                                          u19011 22BE                                            u17331 65D4  
                                          u21891 0A1E                                            u23731 1CBC  
                                          u16196 7894                                            u18140 494A  
                                          u19100 2390                                            u22844 7978  
                                          u16381 7AE6                                            u18061 73EE  
                                          u19021 22D8                                            u17181 5946  
                                          u22845 7974                                            u18230 52DE  
                                          u17431 6F72                                            u19031 22F6  
                                          u18151 6600                                            u19111 508E  
                                          u21991 0AC2                                            u23751 1CFC  
                                          u19040 2350                                            u17520 47FE  
                                          u18081 6EB6                                            u17601 4B36  
                                          u18401 2774                                            u19201 5F3A  
                                          u19121 50B0                                            u17530 4F46  
                                          u17451 7BBE                                            u17291 7518  
                                          u17611 4B62                                            u18331 26DE  
                                          u22980 1E78                                            u16660 1456  
                                          u18260 7304                                            u16821 770C  
                                          u19061 2366                                            u19301 59FC  
                                          u17701 64D0                                            u18421 278E  
                                          u18341 26F0                                            u17550 4F80  
                                          u16831 67F4                                            u19311 5A16  
                                          u18191 5264                                            u18271 29E8  
                                          u17711 64EA                                            u18511 28BA  
                                          u18431 27A8                                            u18351 2702  
                                          u19231 5F64                                            u16760 1572  
                                          u16920 6278                                            u16665 144C  
                                          u19401 37E0                                            u18281 29FA  
                                          u17481 4738                                            u17801 6A88  
                                          u18521 28D0                                            u19161 50F6  
                                          u16851 6828                                  __end_of___lwdiv 7358  
                                          u17491 4774                                            u17731 6502  
                                          u17651 4BE6                                            u17811 61F0  
                                          u18611 2992                                            u19251 5FB8  
                                          u19171 5114                                            u16780 453C  
                                          u16940 6290                                            u16861 683A  
                                          u19501 3B0E                                            u18701 4282  
                                          u17741 6514                                            u17661 4BF8  
                                          u17821 621C                                            u18541 28EA  
                                          u18461 27EA                                            u18381 2750  
                                          u19261 5FCE                                            u19181 5176  
                                          u16775 44FE                                            u19271 598E  
                                          u19511 3B28                                            u18551 28FC  
                                          u18391 2762                                            u19191 5194  
                                          u17680 4C58                                            u17840 6266  
                              _userDataAvailable 01E4                                            u16785 4532  
                                          u19601 3C36                                            u17761 6538  
                                          u17585 504E                                            u18561 2916  
                                          u18481 2824                                            u16938 627C  
                                          u18730 42B0                                            u17586 5050  
                                          u16795 4562                                            u18811 20C8  
                                          u19611 3C50                                            u19451 4E9E  
                                          u18651 6E58                                            u17771 654A  
                                          u17595 5078                                            u17691 4C62  
                                          u17860 75A8                                            u18740 42BA  
                                          u17596 507A                                            u17941 5AC0  
                                          u16965 62AA                                            u19381 37A2  
                                          u18661 41CE                                            u17781 6A4C  
                                          u16966 62AE                                            u16958 6294  
                                          u19550 3B8A                                            u17951 5AFE  
                                          u16975 62B6                                            u18831 20EC  
                                          u18671 41FA                                            u18591 295A  
                                          u16976 62BA                                            u19640 3C7E  
                                          u18841 2106                                            u19481 4F2E  
                                          u18761 4318                                            u19801 32AA  
                                          u19730 4440                                            u18771 7830  
                                          u18691 422E                                            u19740 444C  
                                          u17981 69DA                                            u18861 2126  
                                          u18781 6C6C                                            u18950 2242  
                                          u19750 4456                                            u18871 214C  
                                          u18791 6CA6                                            u18960 224A  
                                          u18881 2182                                            u19841 3358  
                                          u18891 2198                                            u19860 33A2  
                                          u19941 4CBE                                            u19870 33AA  
                                          u19880 33C4                                  __end_of___lwmod 75F4  
                                          u19971 4CE8                                            u19891 3416  
                                          u19991 4D5A                                            i2l951 0306  
                                          i2l927 022E                                            i2l919 0068  
                                ___awdiv@counter 0064                                            i2l968 0448  
                  RouteManagerPerformUpdate@best 00A3                         __size_of_InitSymbolTimer 0016  
                       ?_TMSendFormedPacketToRFD 00C0                              ??_PHYGetLongRAMAddr 0064  
               __size_of_TransportManagerNoRoute 0002                                            _TMR0H 000FD7  
                                          _TMR0L 000FD6                                     _routingTable 0800  
               RouteManagerShouldInsert@neighEtx 0087                      ?_RouteManagerProcessReceive 00AE  
                               ?_NetworkSequence 0001                                 SendPacket@tParam 0098  
                __end_of_le_findEmptyNeighborIdx 730E                                 __end_ofi2_SPIGet 7C62  
                      MiApp_SearchConnection@res 01D3                                       i2memcmp@s1 0001  
                                     i2memcmp@s2 0003                                _justEvictedParent 0048  
                               __end_ofi2_SPIPut 7B8C                       __end_of_PHYGetShortRAMAddr 77DE  
                                _TMSendDataToRFD 6C62                                            _crc32 5FDE  
                __size_of_NetworkDiscoveredEvent 01A2                                 RouterEvicted@idx 009A  
                   ??_NetworkSendDiscoverRequest 009B                            ?i2_PHYSetShortRAMAddr 0003  
                               SendPacket@status 0096                    __size_of_MiApp_UnicastAddress 0042  
                                          _pcnt1 025C                                  __end_of_isdigit 7A0C  
                                  _routeInfoInit 71CE                              __size_of_LEDCommand 0030  
               CoordinatorGenericAddress@address 029D                   __end_of_GetRouteAddressOfChild 6554  
                                LEDManagerTask@i 007E                                            krnd@t 0068  
                                          tablat 000FF5                        __end_of_LE_InsertNeighbor 5FDE  
                                  InitMRF24J40@i 006B                                    InitMRF24J40@j 006C  
                                   ?_LE_ClearDLQ 008A                            ??_RMRoutingTableCount 0062  
                        ?_netChooseAdvertiseTime 0001                                            plusw0 000FEB  
                                          plusw1 000FE3                                            plusw2 000FDB  
                  __size_of_NetworkSetAddressPAN 005C                                            status 000FD8  
                    le_updateNeighborTableEst@ne 0095                                  __end_of_sprintf 2F2A  
                             __size_of_MSTickGet 0036                                ??i2_isSameAddress 0019  
                             __size_of_CacheInit 0018              __end_of_MiApp_TransceiverPowerState 7BA0  
                    _MiApp_TransceiverPowerState 7B8C                                 __end_ofi2_memcmp 71CE  
                       LE_RemoveNeighborDevice@i 00A6                          MiApp_SearchConnection@i 01D4  
                                ?_LE_PinNeighbor 008A                          MiApp_SetChannel@Channel 006A  
                      __end_of_PHYGetLongRAMAddr 7076                        __size_of_LELinkQualityGet 0076  
                                 ??_LCD_WriteCmd 0062                                   ?_LCD_WriteData 0001  
                      __size_of_MiMAC_SetChannel 0044                          __end_of_mySecurityLevel FFA0  
                           __end_of_HardwareInit 64C6                          __CFG_DSWDTOSC$INTOSCREF 000000  
                                    _BlinkRedLED 7BD6                  __end_of_LE_RemoveNeighborDevice 6AB6  
                      __size_of_Read_MAC_Address 00A2                                  __initialization 5C28  
                                ?_LEDManagerTask 0001                                  ??_isSameAddress 0080  
                       LE_UnpinNeighbor@neighbor 008A                            _AddNodeToNetworkTable 3C88  
                      __size_of_MiMAC_SendPacket 0408                           ?_NetworkAddressSizeGet 0001  
                                   __end_of_main 1D24                                   main@SendPacket 03E8  
                                   __end_of_krnd 4678                             _UserMessageAvailable 01E0  
                __size_of_TunnelManagerGetTunnel 0170                      LE_GetNeighborDeviceType@dev 0065  
                                 ??_le_updateETX 0071                                       _ButtonTask 6D8C  
                              _MACCurrentChannel 0041                        PHYGetShortRAMAddr@address 0062  
                        MiMAC_PowerState@results 0079                                    krndInit@value 0060  
                      isBroadcastAddress@address 0068                                ??_IsNetworkDevice 008A  
                             MiWi_TickGet@tmrval 0068                                           ??_main 01D5  
                             MiWi_TickGetMs@tnow 0070                                      ?_MiMAC_Init 0074  
                                         ??_krnd 0064                                    __activetblptr 000002  
                       _RouteManagerShouldInsert 5972                                    le_findIdx@res 0088  
                       ??_MiApp_SearchConnection 01C0                                        ??_LCDInit 0074  
                           __end_of_MiWi_TickGet 74B2                     __size_ofi2_PHYSetLongRAMAddr 0050  
                              __end_of_LCDUpdate 5F30                                    ??_NetworkInit 008B  
                    radioReceivedPacket@isSecure 0196                        PHYGetShortRAMAddr@tmpRFIE 0064  
                              ?_isInvalidAddress 0079                      __size_of_NetworkUnicastData 01AE  
                          radioReceivedPacket@bt 019E                BroadcastManagerDelaySend@isSecure 0090  
              MiApp_ProtocolInit@bNetworkFreezer 0001                                  ??_le_computeETX 006A  
                           _MiMAC_ReceivedPacket 0C3C                                           ?_crc32 0060  
                      PHYSetShortRAMAddr@address 0063                                       _SendPacket 6268  
                                      ??_SPIGet2 0062                    __size_of_NetworkSetDeviceType 000A  
                                 ?_routeInfoInit 0068                       __size_of_BeaconManagerInit 001E  
                             ??_isInvalidAddress 0081                       __size_of_BeaconManagerTask 00E2  
                               ___llmod@dividend 006C                      __size_of_isBroadcastAddress 0042  
                                         _EECON2 000FA7                                           _ANCON0 000F48  
                                         _ANCON1 000F49                        le_findRandomNeighborIdx@i 0088  
                                      ??_SPIPut2 0060                                 ___awdiv@dividend 0060  
                        _MiMAC_ChannelAssessment 766E                              routingTableFind@res 008B  
                 __end_of_netChooseAdvertiseTime 6956                                           _LEDCmd 0036  
                                 __CFG_WDTEN$OFF 000000                                        ??_DelayUS 0064  
                                      ??_DelayMs 006C                 __end_of_NetworkPrepareSendPacket 5B46  
                           _BroadcastManagerInit 7AAC                      __end_ofi2_PHYGetLongRAMAddr 72C2  
                                         _OSCCON 000FD3                             _BroadcastManagerTask 38CE  
                                      ??_HighISR 0019                                           _RPOR21 000EDB  
                                         _RPINR1 000EE7                                           _RPOR19 000ED9  
                                ??_RouterEvicted 0096                                   MiMAC_Init@seed 0077  
                 RouteManagerPerformUpdate@entry 00A7                                   __CFG_WPCFG$OFF 000000  
                                         _SPIGet 7C4E                       __size_of_networkSendBeacon 023A  
                                         _SSPBUF 000FC9                                           _SPIPut 7A7A  
                  RouteManagerShouldInsert@found 008D                    RouteManagerShouldInsert@entry 0089  
            __end_of_NetworkSendDiscoverResponse 6B26                      _NetworkSendDiscoverResponse 6AB6  
                      PHYSetShortRAMAddr@tmpRFIE 0064                        __size_of_MiMAC_PowerState 0126  
                    i2PHYGetLongRAMAddr@toReturn 0007                  __size_of_TunnelManagerSetTunnel 026E  
                                ??_isKnownPacket 009C                                   __CFG_WPDIS$OFF 000000  
                     MiApp_SearchConnection@mask 01CF                                    ?_radioUnicast 009F  
              __size_of_le_findRandomNeighborIdx 01CA                                    ??_TimeTickISR 0060  
        TMSendFormedPacketTowardsCoordinator@res 008B                        ?_le_findRandomNeighborIdx 0080  
                NetworkPrepareSendPacket@address 0070                                           _NetSeq 0043  
                                 __CFG_XINST$OFF 000000                RouteManagerShouldInsert@rcvBeacon 008E  
                                         _TxData 01DF                                           _TxBuff 0598  
                         _NetworkDiscoveredEvent 434A                     ??_DeviceManagerGetDeviceData 008E  
                                   ?_AddMSToTick 007C                                 LCD_WriteCmd@data 0062  
                        _le_findWorstNeighborIdx 51CA                   le_findWorstNeighborIdx@thisETX 0089  
                        i2_NetworkAddressSizeGet 7CB4                     ??_DeviceManagerGetDeviceType 0088  
                 ?_TunnelManagerInvalidateTunnel 0080                                           ___wmul 793E  
                                      ??___awdiv 0064                               _radioDiscardPacket 7C80  
                                         crc32@p 0072                                  _tmpFrameCounter 004D  
                                 __CFG_STVREN$ON 000000                                        ??___lldiv 0068  
                                      ??___llmod 0074        NetworkManagerProcessIncomingData@isFormed 0180  
                                         _nState 01E2                        __size_of_MiApp_SetChannel 000C  
                                      ??___lwdiv 0064                                        ??___lwmod 0070  
                    routingTableUpdateEntry@from 0099                                 _MSTickGetDiffNow 676A  
                                  ??_TimerEnable 0060        NetworkManagerProcessIncomingData@isSecure 00EE  
                                         _myAddr 02BD                  __end_of_TMSendFormedPacketToRFD 29C8  
                       HighISR@FrameControl_2711 002E                                           _memcmp 7076  
                                         _memcpy 75F4                   radioReceivedPacket@isBroadcast 0195  
                                         _memset 78C2                                           clear_0 5C70  
                                         clear_1 5C82                                           clear_2 5C8E  
                                         clear_3 5C9A                                           clear_4 5CA6  
                                         clear_5 5CB4                                           clear_6 5CC6  
                                         clear_7 5CD2                                           clear_8 5CDE  
                                         clear_9 5CEA                     __end_of_LEAppendNeighborInfo 4984  
                               ___awdiv@quotient 0066                                  _currentInterval 0244  
                   __end_of_passLinkEtxThreshold 7BD6                          __end_of_TMSendDataToRFD 6CC6  
                             radioBroadcast@addr 02CD                               radioBroadcast@data 009F  
                               __end_of_krndInit 5DC0                                 _netResetInterval 7B1E  
                     ?_RouteManagerPerformUpdate 0001                                __end_of_MSTickGet 7716  
                            ?_radioDiscardPacket 0001                         __end_of_netDecayInterval 76E0  
                              __end_of_CacheInit 7AAC                                     ??_EEPROMRead 0065  
                le_updateNeighborTableEst@newEst 0092                      __end_of_MiApp_IsNetworkBusy 7CC0  
                           __end_of_InitMRF24J40 41A6                                     __pdataCOMRAM 0055  
                                      ??_isdigit 0060                          Read_MAC_Address@address 007B  
                                   __mediumconst FB7E                            ?_MiMAC_ReceivedPacket 0001  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8                           ??i2_PHYSetShortRAMAddr 0004  
                    ??_MiApp_EstablishConnection 008E                         ?_NetworkDataArrivedEvent 0068  
                         _RouteMgrUpdateRequired 0044                           _TunnelManagerGetTunnel 4AFC  
                                LE_ClearDLQ@nidx 0097                          _NetworkGetParentAddress 7BB4  
                   __end_of_TransportManagerInit 7B1E                                        ??_sprintf 006F  
                   __end_of_TransportManagerTask 1980                                    LEDCommand@cmd 0060  
                                  LEDCommand@led 0062                                ??_InitSymbolTimer 0060  
                                __CFG_DSBOREN$ON 000000                          ??_NetworkGetMyRouteInfo 0062  
                            networkSendBeacon@bt 00B0                 __size_of_routingTableUpdateEntry 0146  
                          ?_BroadcastManagerInit 0001                              _MiApp_SetAddressPan 6BFA  
                            __end_of_NetworkInit 5882                        radioReceivedPacket@myAddr 0197  
                          ?_BroadcastManagerTask 0001                       __size_of_LE_InsertNeighbor 00AE  
                      radioReceivedPacket@parent 01AA                             _MiApp_DiscardMessage 7C6C  
                                     __accesstop 0060                          __end_of__initialization 5CF0  
                            le_initNeighborIdx@i 0068               __size_of_le_updateNeighborEntryIdx 0160  
                                ??_LCD_WriteData 0062                             ??_radioDiscardPacket 0060  
                      radioReceivedPacket@source 0186                 __end_of_isNetworkSecurityEnabled 7C94  
                              ?_LE_UnpinNeighbor 008A                                   ??_radioUnicast 00AD  
                   i2PHYGetShortRAMAddr@toReturn 0004                              __size_of_MiMAC_Init 0084  
                                  ___rparam_used 000001               __size_of_le_updateNeighborTableEst 02BC  
                     __size_of_PHYGetLongRAMAddr 0056                          _MiApp_IsMemberOfNetwork 7C94  
                  LE_RemoveNeighborDevice@device 009C                       RouteManagerPerformUpdate@i 009D  
                     __end_of_NetworkManagerTask 26BC                       RouteManagerPerformUpdate@r 00A9  
                           __CFG_WPEND$PAGE_WPFP 000000                           ?_AddNodeToNetworkTable 0080  
                             ??_LE_UnpinNeighbor 0092                               __end_of_EEPROMRead 780C  
                                 __pcstackCOMRAM 0001                    MiMAC_ReceivedPacket@bIntraPAN 0073  
            __size_of_RouteManagerProcessReceive 0178                                        ?i2_SPIGet 0001  
                                      ?i2_SPIPut 0001                                     __pidataBANK2 79D0  
                   MiApp_MessageAvailable@tStart 0234                                     ??_LEDCommand 0061  
                                  __end_of_crc32 6084                                     ButtonTask@Sw 0074  
                                    ?_ButtonTask 0001                       le_findEmptyNeighborIdx@res 0064  
                 DeviceManagerGetDeviceData@data 0088                         ??_MiApp_GetParentAddress 0070  
                                __CFG_DSWDTEN$ON 000000                             ?_MiApp_SetAddressPan 0076  
                     i2PHYGetLongRAMAddr@address 0003                              __end_of_TimeTickISR 777E  
                                __CFG_DSWDTPS$G2 000000                  ??_DeviceManagerBufferDeviceData 007A  
                    ??_BroadcastManagerDelaySend 0092                          _TransportManagerNoRoute 7CBC  
                         _TunnelManagerSetTunnel 3426                       i2PHYSetLongRAMAddr@address 0003  
      __end_of_NetworkManagerProcessIncomingData 31B8       __size_of_NetworkManagerProcessIncomingData 028E  
            ??_NetworkManagerProcessIncomingData 00EF               ?_NetworkManagerProcessIncomingData 00E9  
              _NetworkManagerProcessIncomingData 2F2A               le_updateNeighborEntryIdx@packetGap 009B  
              __end_of_RouteManagerPerformUpdate 2398                              isButtonPressed@mask 0063  
                __size_of_MiApp_SearchConnection 0124                                routingTableFind@i 008D  
                      __size_of_routingTableFind 007C                                  _ConnectionTable 0300  
                                     _addressLen 005B                                        ?i2_memcmp 0001  
                            __end_of_TimerEnable 7CA4                             __end_of_LCD_WriteCmd 7B60  
                      NetworkSetAddressPAN@PANID 0074                        ??_MiMAC_ChannelAssessment 0068  
                                ??_routeInfoInit 006A                       i2PHYGetLongRAMAddr@tmpRFIE 0008  
             __end_of_NetworkSendDiscoverRequest 6B92                       _NetworkSendDiscoverRequest 6B26  
                                        ??_crc32 0068                         AddNodeToNetworkTable@ind 008E  
                                    ?_SendPacket 008F                           NetworkUnicastData@data 00F1  
               __size_of_LE_RemoveNeighborDevice 0074                            Read_MAC_Address@addr8 0075  
                 NetworkPrepareSendPacket@buffer 0078                           NetworkUnicastData@size 00F3  
                MiApp_TransceiverPowerState@Mode 007F                                     sprintf@width 007D  
                     routingTableUpdateEntry@idx 00AD                            IsNetworkDevice@oldest 008C  
                     routingTableUpdateEntry@etx 00A9                             __end_of_le_updateETX 6E4E  
                     i2PHYSetLongRAMAddr@tmpRFIE 0008                                       __pbssBANK1 01D9  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                     __pbssBANK4 0400                                       __pbssBANK5 0500  
                                     __pbssBANK6 0600                                       __pbssBANK7 0700  
                                     __pbssBANK8 0800                         radioReceivedPacket@PANID 018E  
                          ?_MiApp_DiscardMessage 0001                               __end_of_LEDCommand 77AE  
                           MSTickGetDiffNow@diff 0084                      __size_of_MiApp_ProtocolInit 0068  
                          __size_of_HardwareInit 0090                             MSTickGetDiffNow@tNow 0088  
                           MSTickGetDiffNow@tick 007C                              HighISR@FrameControl 002D  
                                        ?_SPIGet 0001                                i2isSameAddress@a1 0009  
                              i2isSameAddress@a2 0011                                          ?_SPIPut 0001  
                      SendPacket@SecurityEnabled 0094                                    MSTickGet@tNow 0074  
                      LE_InsertNeighbor@neighbor 009C                DeviceManagerGetDeviceType@address 0080  
                           __size_of_LE_ClearDLQ 005E                    __size_ofi2_PHYGetShortRAMAddr 002A  
                      ??_le_findWorstNeighborIdx 0082                         ?_NetworkIssueDataRequest 0001  
                       radioReceivedPacket@child 01A2                                 _LELinkQualityGet 69CC  
                      ??i2_NetworkAddressSizeGet 0001                __end_of_le_updateNeighborEntryIdx 4F3A  
                               _MiMAC_SetChannel 742A                               MiMAC_SendPacket@t1 0083  
                             MiMAC_SendPacket@t2 0087                         _NetworkPrepareSendPacket 5A62  
                      _MiApp_EstablishConnection 6084                         MiMAC_SetAltAddress@PANID 006E  
                               _Read_MAC_Address 6128                        __size_of_RouteManagerInit 002E  
                     PHYGetShortRAMAddr@toReturn 0063                           radioReceivedPacket@crc 019A  
                      __size_of_RouteManagerTask 0046                __end_of_le_updateNeighborTableEst 2C84  
               RouteManagerPerformUpdate@linkEtx 009B                    LE_GetNeighborDeviceType@index 0060  
               RouteManagerPerformUpdate@pathEtx 009F                                 _MiMAC_SendPacket 1182  
                                     ??i2_SPIGet 0003                                       ??i2_SPIPut 0001  
                                main@RequestData 03E9                                          ?___wmul 0060  
                   TunnelManagerGetTunnel@device 0098                            ??_MiApp_SetAddressPan 007A  
              RoutingTableFindDeviceOrParent@res 008C                                 radioUnicast@addr 02D5  
                               radioUnicast@data 00A9                            __size_of_MiWi_TickGet 0044  
                               radioUnicast@dest 009F                                          ?_memcmp 0060  
                             _TimerEnterCritical 7CA4                                          ?_memcpy 0062  
                                        ?_memset 0060                RouteManagerSetNeighborCongested@n 0060  
                                        SPIPut@i 0061                                          SPIPut@v 0060  
                     __end_of_PHYSetShortRAMAddr 7896                                 ?_TMSendDataToRFD 00DB  
                __end_of_NetworkDataArrivedEvent 6EAC                         __size_of_isButtonPressed 0026  
                       LE_InsertNeighbor@devType 00A4                                isKnownPacket@hash 0098  
                                        _LCDInit 5552                           ??_MiMAC_ReceivedPacket 006C  
                                        i2l15501 008A                                          i2l14703 717A  
                                        i2l14711 71BA                                          i2l15601 02BA  
                                        i2l15505 0092                                          i2l14709 71B2  
                                        i2l15621 033E                                          i2l15605 02FC  
                                        i2l15525 00D0                                          i2l15517 00B6  
                                        i2l15613 031E                                          i2l15607 0310  
                                        i2l15537 00EE                                          i2l15643 0388  
                                        i2l15661 03D6                                          i2l15653 03D0  
                                        i2l15629 0358                                          i2l15581 020C  
                                        i2l15565 01A6                                          i2l15549 0126  
                                        i2l15639 0378                                          i2l15559 0158  
                                        i2l15577 01E2                                          i2l15569 01AE  
                                        i2l15497 0070                               __CFG_OSC$INTOSCPLL 000000  
                                        i2l15587 0240                                          i2l15597 0286  
                                        i2l15669 040C                                          i2l15687 0440  
                                        _LCDText 03B9                    __size_of_NetworkGetDeviceType 0004  
                      NetworkIssueDataRequest@sz 00CA                                    ?_TimerDisable 0001  
                        NetworkDiscoveredEvent@i 006A                                   NetworkInit@dev 008A  
                            ?_TimerEnterCritical 0001                                          _BMState 003F  
                                     ??i2_memcmp 0007                        ??_NetworkGetParentAddress 0068  
                                    _NetworkInit 577C                                  i2_isSameAddress 79AE  
               MiApp_SearchConnection@msDuration 01CD                                     _HardwareInit 6436  
                                     _le_findIdx 6CC6                                          _RPINR21 000EFB  
                                 _failureCounter 01DC                                          _SSP2BUF 000F75  
                RouteManagerPerformUpdate@minEtx 00A5                                          _SPIGet2 7C12  
                         ??_BroadcastManagerInit 0068                           ??_BroadcastManagerTask 00A6  
                                        _SPIPut2 7AC4                      __size_of_le_initNeighborIdx 0084  
                    __size_of_CoordinatorAddress 0014                     ??_TransportManagerRouteFound 0060  
                               ??_LE_PinNeighbor 0092                     __size_of_MiMAC_SetAltAddress 0056  
                            __size_of_ButtonTask 0062                          __size_of_MiWi_TickGetMs 0036  
                                        _TMState 0045                                          _DelayUS 7896  
                                        _DelayMs 63A0                        _BroadcastManagerDelaySend 4678  
                     AddNodeToNetworkTable@PANID 0088                          __size_of_radioBroadcast 005E  
                      ??_MiApp_IsMemberOfNetwork 0083               NetworkDataArrivedEvent@isBroadcast 0074  
                                        _HighISR 0008                             _LEAppendNeighborInfo 4802  
               __size_of_TMSendFormedPacketToRFD 030C                         ?_le_findEmptyNeighborIdx 0060  
                               ??_LEDManagerTask 0074                       ?_CoordinatorGenericAddress 0068  
                      MiApp_MessageAvailable@src 01B4                             _passLinkEtxThreshold 7BC8  
                                __size_of_SPIGet 000A                                 _MiMAC_PowerState 5308  
                                __size_of_SPIPut 001A                                        ?_krndInit 0060  
                    __end_of_MiMAC_DiscardPacket 7A60                           _MiApp_SearchConnection 542E  
                             _PHYGetShortRAMAddr 77AE                                  _IsNetworkDevice 41A6  
                        ??_NetworkAddressSizeGet 0060                              i2_PHYSetLongRAMAddr 7222  
              DeviceManagerGetDeviceData@address 0080                             ??_TimerEnterCritical 0060  
                                   _MiWi_TickGet 746E                     __size_of_radioReceivedPacket 07BC  
             __end_of_DeviceManagerGetDeviceData 7C26                       _DeviceManagerGetDeviceData 7C1C  
                  __size_of_BeaconManagerTrigger 0004                                          __Hparam 0000  
                                   ?_BlinkRedLED 0001                                      _TimeTickISR 774C  
                                        _Tick_MS 02B5                                          __Lparam 0000  
             __end_of_DeviceManagerGetDeviceType 66E6                       _DeviceManagerGetDeviceType 6662  
                                        _TxIndex 0046                                  radioBroadcast@i 00A5  
                   __end_of_MiApp_UnicastAddress 74F4                       ??_RouteManagerShouldInsert 0083  
                     ?_LE_processReceivedMessage 009D                                          _t1fired 004C  
                              LCD_WriteData@data 0062                         __size_of_NetworkGetPANID 000A  
                                        ___awdiv 6866                                       _linkEstSeq 025A  
                            ?_PHYGetShortRAMAddr 0001                                          ___lldiv 6956  
                                __size_of___wmul 0026                                          ___llmod 6D2A  
                               _MiApp_SetChannel 7C06                              __size_of_SendPacket 009E  
              __size_of_LE_GetNeighborDeviceType 003C                                          ___lwdiv 730E  
                                        ___lwmod 75B6                        ??_TransportManagerNoRoute 0060  
                           __size_of_AddMSToTick 008A                             _TransportManagerInit 7B08  
                      ?_LE_GetNeighborDeviceType 0060                             _TransportManagerTask 158A  
                          __size_of_InitMRF24J40 01A8                            __CFG_RTCOSC$INTOSCREF 000000  
                __size_of_MiApp_GetParentAddress 001C                                      _TimerEnable 7CA0  
                              _TunnelManagerInit 7AF2                     __end_of_NetworkSetAddressPAN 7020  
                       __size_of_NetworkHasRoute 0042                                    HighISR@RxBank 0033  
                                        __pcinit 5C28                                  __size_of_memcmp 0056  
                                __size_of_memcpy 003E                                  __size_of_memset 002A  
                                        __ramtop 0F00             __size_of_MiApp_TransceiverPowerState 0014  
                                        __ptext0 1980                                          __ptext1 2C84  
                                   ??_MiMAC_Init 0077                                          __ptext2 79EE  
                                        __ptext3 793E                                          __ptext4 7964  
                                        __ptext5 6128                                          __ptext6 77DE  
                                        __ptext7 7C12                                          __ptext8 74B2  
                                        __ptext9 3E50                                          _myPANID 005C  
                                      _T0CONbits 000FD5                              radioBroadcast@PANID 00A2  
                             ?_TunnelManagerInit 0001                  __end_of_le_findWorstNeighborIdx 5308  
              __size_of_isNetworkSecurityEnabled 0004                                   ??_TimerDisable 0060  
                              __end_of_hexpowers FF97                        ?_isNetworkSecurityEnabled 0001  
                           ?i2_PHYSetLongRAMAddr 0003                         ??_MiApp_MessageAvailable 00FA  
                            __end_of_crc32_table FF7F                             __end_of_radioUnicast 6FC4  
                le_findWorstNeighborIdx@worstETX 008B                                          _isdigit 79EE  
            BroadcastManagerDelaySend@isInterPan 0091                                    _myLongAddress 02F3  
                                      _MAC_PANID 0051            __end_of_DeviceManagerBufferDeviceData 7C30  
         __size_of_DeviceManagerBufferDeviceData 000A                    _DeviceManagerBufferDeviceData 7C26  
                               NetworkInit@PANID 0088                       ?_RouteManagerRequestUpdate 0001  
                    __end_of_RMRoutingTableCount 7C3A                          MiApp_SetAddressPan@addr 007A  
                            ??_TunnelManagerInit 0068                     ??_NetworkManagerGetMyAddress 0062  
                           ??_PHYGetShortRAMAddr 0062                          _routingTableUpdateEntry 5084  
                                        _sprintf 2C84                                        _LCDUpdate 5E7A  
                                        main@src 03F4                           ??_MiApp_DiscardMessage 0060  
                                        _tunnels 0600                             end_of_initialization 5CF0  
                                      DelayMs@ms 0068                         __end_of_MSTickGetDiffNow 67EA  
                __end_of_NetworkIssueDataRequest 63A0                         __size_of_NetworkSequence 0006  
                                        memcmp@n 0064                                        i2SPIPut@v 0002  
                                        memcpy@d 0068                                          memcpy@n 0066  
                          ?_LEAppendNeighborInfo 0071                                          memcpy@s 006A  
                                     _srcAddress 02C5                            ?_passLinkEtxThreshold 0060  
                       Read_MAC_Address@pAddress 0083                                          memset@c 0062  
                                        memset@n 0064                                          memset@p 0066  
                  MiMAC_SendPacket@MACPayloadLen 007D                                   le_computeETX@q 006B  
                                  __Lmediumconst FB7E                                    _intervalDelay 024C  
                       __end_of_netResetInterval 7B34                          ?_NetworkDiscoveredEvent 0060  
          NetworkManagerProcessIncomingData@dHdr 0184                                       ??_krndInit 0062  
              __end_of_CoordinatorGenericAddress 783A                                        i2u1550_45 72BC  
                                      i2u1550_46 72BE            NetworkManagerProcessIncomingData@data 00E9  
                                      i2u1547_45 726E                                        i2u1547_46 7270  
                                      i2u1548_45 793A                                        i2u1548_46 793C  
                                      i2u1549_45 7910                                        i2u1549_46 7912  
                                      i2u2393_41 0184                                        i2u2394_41 0196  
                                ___lldiv@divisor 0064                                     _InitMRF24J40 3FFE  
                             __end_of_MiMAC_Init 676A                        __size_of_isInvalidAddress 0016  
          NetworkManagerProcessIncomingData@size 00EB                                  ___lldiv@counter 006C  
                       LEAppendNeighborInfo@data 0071                        RouteManagerShouldInsert@i 008B  
                       LEAppendNeighborInfo@size 0073                     __end_of_NetworkSetDeviceType 7C4E  
                        MiMAC_SetChannel@channel 0069                                          postdec1 000FE5  
                                        postdec2 000FDD              NetworkSendDiscoverResponse@databuff 009B  
                                        postinc0 000FEE                                          postinc1 000FE6  
                                        postinc2 000FDE                        __end_of_TunnelManagerInit 7B08  
                          ?_TransportManagerInit 0001                __end_of_LE_processReceivedMessage 4DDA  
                          __end_of_isSameAddress 79AE                            ?_TransportManagerTask 0001  
                            TMSendDataToRFD@data 00E4                             _tmpSourceLongAddress 0224  
                            TMSendDataToRFD@size 00E6                          __end_ofi2_isSameAddress 79D0  
                          __size_of_LCD_WriteCmd 0016             __size_of_NetworkSendDiscoverResponse 0070  
                                      _PORTBbits 000F81                           radioBroadcast@datasize 00A1  
                                _InitSymbolTimer 7B60               DeviceManagerBufferDeviceData@empty 007F  
                          ??i2_PHYSetLongRAMAddr 0006                       __end_of_NetworkUnicastData 3FFE  
                           networkSendBeacon@adr 00AE                       le_findWorstNeighborIdx@res 0087  
                    ??_RouteManagerPerformUpdate 0099                             networkSendBeacon@hdr 00B4  
                        ?_TunnelManagerGetTunnel 0098                                 _routingTableFind 67EA  
                              ?_netDecayInterval 0001                                 __CFG_CPUDIV$OSC1 000000  
                          __size_of_le_updateETX 0060                       __end_of_isBroadcastAddress 7578  
                         radioBroadcast@isSecure 00A4                                        _TRISAbits 000F92  
                                      _TRISBbits 000F93                                  _CoordinatorAddr 02A5  
                                      _TRISCbits 000F94                                        _TRISDbits 000F95  
                                      _TRISEbits 000F96                  ??_TunnelManagerInvalidateTunnel 0088  
                        _LE_RemoveNeighborDevice 6A42                                      ?_le_findIdx 0080  
                             ??_netDecayInterval 0080                                        _MSTickGet 76E0  
                         LE_PinNeighbor@neighbor 008A                                    _mySecurityKey FF7F  
                                      _CacheInit 7A94                              LELinkQualityGet@idx 0098  
              __end_of_RouteManagerRequestUpdate 7C7A                              LELinkQualityGet@res 0096  
                           le_initNeighborIdx@ne 0069                                ??_isButtonPressed 0060  
                       ??_NetworkReleaseUserData 0060                                       ?_LCDUpdate 0001  
                          __end_of_le_computeETX 75B6                          TunnelManagerGetTunnel@i 00BE  
                                      _BankIndex 0059                          __end_of_IsNetworkDevice 434A  
                                    _t1extension 0250                           _MiApp_GetParentAddress 7A2A  
                              le_findIdx@ll_addr 0080                   __end_of_NetworkDiscoveredEvent 44EC  
                     MiMAC_SendPacket@transParam 0074                    RouteManagerProcessReceive@len 00B2  
                 __size_of_NetworkGetMyRouteInfo 000C                    __end_of_NetworkGetMyRouteInfo 7BEE  
                        ??_AddNodeToNetworkTable 008A                                   _lcdInitialized 0049  
                     MiMAC_SetAltAddress@Address 006C                                __CFG_WPFP$PAGE_63 000000  
                      MiApp_UnicastAddress@SecEn 00FD                                       main@tStart 03E4  
                      LEAppendNeighborInfo@count 007B                                 __CFG_IOL1WAY$OFF 000000  
                                 RouterEvicted@i 009B                            __end_of_RouterEvicted 5E7A  
                                 RouterEvicted@r 0098                                   __end_of_SPIGet 7C58  
                           radioUnicast@datasize 00AB                 __size_of_NetworkDataArrivedEvent 005E  
                                 __end_of_SPIPut 7A94                        BroadcastManagerTask@PANID 00B0  
                               _RouteManagerInit 783A                            __end_of_isKnownPacket 3426  
                              _DeviceManagerInit 7A60                                 _RouteManagerTask 7358  
                                   _LCD_WriteCmd 7B4A                              __CFG_MSSP7B_EN$MSK7 000000  
                   __size_ofi2_PHYGetLongRAMAddr 0050                               le_updateETX@newEst 006F  
                             ?_DeviceManagerInit 0001                             radioUnicast@isSecure 00AC  
                                   DelayUS@delay 0060                                     ??_ButtonTask 0074  
                    TMSendFormedPacketToRFD@data 00C8                          ?_TunnelManagerSetTunnel 0080  
                    TMSendFormedPacketToRFD@dhdr 00D1                                      _crc32_table FB7F  
              NetworkSendDiscoverRequest@address 00DE                                   isKnownPacket@i 00BD  
                    TMSendFormedPacketToRFD@size 00CA                                       LCDUpdate@i 0074  
                                 __end_of___wmul 7964                                    ButtonTask@pS0 003B  
                                  ButtonTask@pS1 003C                                     _le_updateETX 6DEE  
                              __size_ofi2_SPIGet 000A                                __size_ofi2_SPIPut 0016  
                       PHYGetLongRAMAddr@address 0062                                    __pidataCOMRAM 7C62  
                                      i2memcmp@n 0005              RoutingTableFindDeviceOrParent@entry 0094  
             __size_of_MiApp_EstablishConnection 00A4                             main@pButtonPressed_0 03DA  
                           main@pButtonPressed_1 03DB                   __end_of_TunnelManagerGetTunnel 4C6C  
                        HighISR@DecryptionStatus 002B                        __size_of_LE_UnpinNeighbor 0046  
                                 __end_of_memcmp 70CC                                   __end_of_memcpy 7632  
                                 __end_of_memset 78EC                               _NetworkManagerTask 2398  
                            ??_DeviceManagerInit 0068                                ??_NetworkGetPANID 0062  
                       PHYSetLongRAMAddr@address 0062                           isBroadcastAddress@F537 FF97  
                       __end_of_LELinkQualityGet 6A42                  __size_of_MiApp_MessageAvailable 0106  
                       __end_of_MiMAC_SetChannel 746E                         ??_GetRouteAddressOfChild 009E  
                            start_initialization 5C28                                        _MyAddress 02EB  
                      ??_routingTableUpdateEntry 00AB                         __end_of_Read_MAC_Address 61CA  
                              ??_NetworkHasRoute 0081                                MiWi_TickGet@t1ext 0064  
                       PHYGetLongRAMAddr@tmpRFIE 0067                      ?_NetworkSendDiscoverRequest 0001  
                                     ?_MSTickGet 006C                           isBroadcastAddress@addr 0070  
                                     ?_CacheInit 0001                         __end_of_MiMAC_SendPacket 158A  
                                   ??_SendPacket 0095                              ?_NetworkManagerTask 0001  
             __end_of_TransportManagerRouteFound 7CBC                       _TransportManagerRouteFound 7CBA  
                         TransportManagerTask@sz 00F2                                __size_ofi2_memcmp 0056  
                   MiMAC_SendPacket@headerLength 008C                             _MiApp_UnicastAddress 74B2  
                  __size_ofi2_PHYSetShortRAMAddr 0028                       ??_NetworkPrepareSendPacket 007F  
                      GetRouteAddressOfChild@res 009E                              NetworkInit@devPanID 008B  
                   __size_of_MiApp_IsNetworkBusy 0002                     BroadcastManagerDelaySend@res 0098  
                         ??_LEAppendNeighborInfo 0075                     BroadcastManagerDelaySend@pkt 008C  
                 ?_DeviceManagerBufferDeviceData 006C                                   _MiWi_TickGetMs 7716  
                         ??_passLinkEtxThreshold 0062                         PHYSetLongRAMAddr@tmpRFIE 0067  
                  LE_processReceivedMessage@bhdr 00A7                    LE_processReceivedMessage@data 009F  
                                 _radioBroadcast 6F0A                          _TMSendFormedPacketToRFD 26BC  
                  LE_processReceivedMessage@nidx 00B1                    LE_processReceivedMessage@rssi 00A2  
                       _le_findRandomNeighborIdx 3ABE                               __end_of_ButtonTask 6DEE  
                           isButtonPressed@index 0062                             _NetworkSetAddressPAN 6FC4  
                                       ??_SPIGet 0062                        _RouteManagerPerformUpdate 206E  
                                       ??_SPIPut 0060                                  ___llmod@divisor 0070  
                      __end_of_DeviceManagerInit 7A7A                      __size_of_radioDiscardPacket 0004  
                                ___llmod@counter 0074                             __end_of_TimerDisable 7CAC  
                          __end_of_LCD_WriteData 7B4A                               NetworkHasRoute@res 0082  
                              ??_NetworkSequence 0060                           IsNetworkDevice@address 0081  
                           ??_NetworkManagerTask 00F6                           ??_TransportManagerInit 0068  
                 __end_of_TunnelManagerSetTunnel 3694                           ??_TransportManagerTask 00AE  
             __size_of_BroadcastManagerDelaySend 018A              le_findWorstNeighborIdx@thresholdETX 0084  
                        __end_of_InitSymbolTimer 7B76                              __size_of_le_findIdx 0064  
          TMSendFormedPacketTowardsCoordinator@i 008C                                         ??___wmul 0064  
                     __size_of_TunnelManagerInit 0016                             __size_of_BlinkRedLED 000C  
                         IsNetworkDevice@devType 0089                      i2PHYGetShortRAMAddr@address 0003  
        NetworkManagerProcessIncomingData@buffer 0140                                      __pdataBANK2 02DD  
                               __CFG_LPT1OSC$OFF 000000                               __end_of_SendPacket 6306  
                                       ??_memcmp 0066                            __size_of_radioUnicast 005C  
                            _MiMAC_SetAltAddress 7122                                         ??_memcpy 0068  
                                       ??_memset 0066                                 ?i2_isSameAddress 0009  
                   __end_ofi2_PHYGetShortRAMAddr 7916                 __size_of_NetworkIssueDataRequest 009A  
                     SendPacket@destinationPANID 0091               MiApp_SearchConnection@ScanDuartion 01CC  
                             networkSendBeacon@r 00B2                         __end_of_MiMAC_PowerState 542E  
                      ??_LE_RemoveNeighborDevice 00A4                                         ?_LCDInit 0001  
                                    __pbssBIGRAM 08D2                         le_findEmptyNeighborIdx@i 0066  
                    i2PHYGetShortRAMAddr@tmpRFIE 0005                         ??_netChooseAdvertiseTime 007C  
                            _radioReceivedPacket 0480                             LEDManagerTask@tStart 0200  
                                    __pbssCOMRAM 0036                                     ?_NetworkInit 0080  
                                   _neighbor_tbl 0D4A                     ??_RouteManagerProcessReceive 00B3  
                                  __pcstackBANK0 0060                                    __pcstackBANK1 0100  
                                  __pcstackBANK3 03DA                      i2PHYSetShortRAMAddr@address 0004  
             __end_of_NetworkManagerGetMyAddress 7BFA                       _NetworkManagerGetMyAddress 7BEE  
                           LE_UnpinNeighbor@nidx 0095                            MSTickGetDiffNow@tdiff 0090  
                            SendPacket@Broadcast 0097           MiApp_UnicastAddress@DestinationAddress 00F9  
                         __end_of_MiWi_TickGetMs 774C                            ?_MiApp_UnicastAddress 00F9  
                          __end_of_routeInfoInit 7222                           __end_of_radioBroadcast 6F68  
                                       ?_SPIGet2 0001                                     _isdigit$4787 0061  
                           _NetworkSetDeviceType 7C44                                     _myDeviceType 01E5  
                     __end_of_MiApp_ProtocolInit 6BFA                                      ??_LCDUpdate 0074  
                                       ?_SPIPut2 0001                               _PHYSetShortRAMAddr 7868  
                __size_of_NetworkReleaseUserData 0004                         __end_of_MiApp_SetChannel 7C12  
                               ?_IsNetworkDevice 0081                                Read_MAC_Address@i 0085  
                              Read_MAC_Address@j 0084      NetworkManagerProcessIncomingData@packetsize 0181  
                           ?_MiMAC_SetAltAddress 006C                           PHYSetLongRAMAddr@value 0064  
                                isSameAddress@a1 0070                                  isSameAddress@a2 0078  
                                  ??_LE_ClearDLQ 0092                          ?_MiApp_SearchConnection 01BC  
                           RouterEvicted@address 008E            __end_of_TunnelManagerInvalidateTunnel 6268  
         __size_of_TunnelManagerInvalidateTunnel 009E                    _TunnelManagerInvalidateTunnel 61CA  
                                    MiMAC_Init@i 0079                                         ?_DelayUS 0060  
                                       ?_DelayMs 0068                            ?_NetworkSetAddressPAN 006C  
                        PHYSetShortRAMAddr@value 0062                                         ?_HighISR 0001  
               __end_of_LE_GetNeighborDeviceType 766E                                      sprintf@flag 0074  
                    i2PHYSetShortRAMAddr@tmpRFIE 0005                         routingTableFind@neighbor 0081  
                   MiMAC_ReceivedPacket@addrMode 0071                            NetworkUnicastData@res 00F8  
                           IsNetworkDevice@empty 0095                                      sprintf@prec 0077  
               TunnelManagerSetTunnel@OldestTick 0090                                _LinkEstimatorInit 7BFA  
                  NetworkPrepareSendPacket@pType 007A                      ??_CoordinatorGenericAddress 0070  
                   __end_of_NetworkGetDeviceType 7CB0                                        crc32@size 0066  
                             LE_PinNeighbor@nidx 0095                                        __pnvBANK1 01E5  
                            MiMAC_SendPacket@loc 008E                              ?_PHYSetShortRAMAddr 0062  
                         _MiApp_MessageAvailable 5676                     ?_MiApp_TransceiverPowerState 0001  
                           ?_radioReceivedPacket 0186                      __end_of_MiApp_SetAddressPan 6C62  
                               _isInvalidAddress 7ADC                  __end_of_routingTableUpdateEntry 51CA  
                             ?_LinkEstimatorInit 0001                                     _radioUnicast 6F68  
                                   ?_TimeTickISR 0001                          radioReceivedPacket@data 0190  
                        radioReceivedPacket@dhdr 01B2                      ?_DeviceManagerGetDeviceData 0080  
               ??_RoutingTableFindDeviceOrParent 0088                  ?_RoutingTableFindDeviceOrParent 0080  
                        TMSendDataToRFD@databuff 0100                                MiMAC_SendPacket@i 008D  
                               ___lwdiv@dividend 0060                          radioReceivedPacket@rhdr 01A0  
                     MiApp_SetAddressPan@address 0076                          radioReceivedPacket@size 0192  
                 __size_of_NetworkAddressSizeGet 0004                          radioReceivedPacket@rssi 0194  
                     ?_le_updateNeighborEntryIdx 0097                                __size_of_krndInit 00C2  
                    ?_DeviceManagerGetDeviceType 0080                     TransportManagerTask@databuff 00B2  
                  __end_of_NetworkAddressSizeGet 7CB4                                        __pintcode 0008  
                     ?_le_updateNeighborTableEst 0080                                    __pmediumconst FB7E  
                    ??_LE_processReceivedMessage 00A3                                         ?___awdiv 0060  
                                      __ptext100 5A62                                        __ptext101 7C7A  
                                      __ptext110 3FFE                                        __ptext102 7BEE  
                                      __ptext111 77AE                                        __ptext103 7C3A  
                                      __ptext120 7A2A                                        __ptext112 7020  
                                      __ptext104 780C                                        __ptext121 7BB4  
                                      __ptext113 7C4E                                        __ptext105 6B92  
                                      __ptext130 7AAC                                        __ptext122 6084  
                                      __ptext114 7C94                                        __ptext106 7C44  
                                      __ptext131 78C2                                        __ptext123 577C  
                                      __ptext115 7C98                                        __ptext107 66E6  
                                      __ptext140 7CA4                                        __ptext132 7A0C  
                                      __ptext124 7AF2                                        __ptext116 74F4  
                                      __ptext108 5CFE                                        __ptext141 7CA8  
                                      __ptext133 7B1E                                        __ptext125 7B08  
                                      __ptext117 7ADC                                        __ptext109 766E  
                                      __ptext150 75F4                                        __ptext142 7C06  
                                      __ptext134 68DE                                        __ptext126 783A  
                                      __ptext118 7536                                        __ptext151 7868  
                                      __ptext143 742A                                        __ptext135 44EC  
                                      __ptext127 7BFA                                        __ptext119 7076  
                                      __ptext160 7896                                        __ptext152 7A7A  
                                      __ptext144 70CC                                        __ptext136 6D2A  
                                      __ptext128 7A60                                        __ptext161 7B60  
                                      __ptext153 1D24                                        __ptext145 6BFA  
                                      __ptext137 76E0                                        __ptext129 7A94  
                                      __ptext170 7916                                        __ptext162 6436  
                                      __ptext154 5E7A                                        __ptext146 6FC4  
                                      __ptext138 7C9C                                        __ptext171 7222  
                                      __ptext163 6D8C                                        __ptext155 7B34  
                                      __ptext147 7CAC                                        __ptext139 7CA0  
                                      __ptext172 78EC                                        __ptext164 7716  
                                      __ptext156 5552                                        __ptext148 7CB0  
                                      __ptext173 7272                                        __ptext165 746E  
                                      __ptext157 7B4A                                        __ptext149 7122  
                                      __ptext174 7C58                                        __ptext158 7AC4  
                                      __ptext175 7B76                                        __ptext167 79AE  
                                      __ptext159 63A0                                        __ptext168 7178  
                                      __ptext169 7CB4                                         ?___lldiv 0060  
                                       ?___llmod 006C                                         ?___lwdiv 0060  
                                       ?___lwmod 006C                                radioUnicast@PANID 00A7  
                        TMSendDataToRFD@isSecure 00E8                              ??_LinkEstimatorInit 0060  
                                   ?_TimerEnable 0001              RouteManagerPerformUpdate@currentEtx 00A1  
               __size_of_le_findEmptyNeighborIdx 004C                            LEAppendNeighborInfo@i 007D  
                          LEAppendNeighborInfo@j 007F                            LEAppendNeighborInfo@k 0081  
                                      _tInterval 0214               NetworkSendDiscoverRequest@databuff 009B  
                       ?_MiMAC_ChannelAssessment 0001                   routingTableUpdateEntry@linkEtx 00AB  
                           ??_PHYSetShortRAMAddr 0063                     __end_of_BeaconManagerTrigger 7C88  
                  TunnelManagerGetTunnel@retAddr 00B6                                _PHYSetLongRAMAddr 70CC  
                                       ?_isdigit 0001                                         SPIPut2@i 0061  
                                       SPIPut2@v 0060                  __size_of_GetRouteAddressOfChild 008E  
                     __end_of_le_initNeighborIdx 6662                       __end_of_CoordinatorAddress 7BB4  
                  __size_of_MiMAC_ReceivedPacket 0546                                      ??_MSTickGet 0074  
                             ?_PHYSetLongRAMAddr 0062                                      ??_CacheInit 0068  
                    ??_RouteManagerRequestUpdate 0060                                        _hexpowers FF8F  
                                 __size_of_crc32 00A6                            ?_NetworkSetDeviceType 0001  
                                      _tRouteMgr 021C                        ??_TMSendFormedPacketToRFD 00CD  
                                ?_MiWi_TickGetMs 006C                                 ___lwdiv@quotient 0065  
                       __size_of_TMSendDataToRFD 0064                                  ?_radioBroadcast 009F  
                 __end_of_MiApp_SearchConnection 5552                                         ?_sprintf 0067  
           DeviceManagerBufferDeviceData@address 006C                            ??_MiMAC_SetAltAddress 006F  
                                       _DEVPanID 02E9                          TunnelManagerSetTunnel@i 0098  
                       ?_le_findWorstNeighborIdx 0080                        __end_of_LinkEstimatorInit 7C06  
                                   HighISR@flags 002F                         ?i2_NetworkAddressSizeGet 0001  
                              ?_MSTickGetDiffNow 007C                    __size_of_BroadcastManagerInit 0018  
                  __size_of_BroadcastManagerTask 01F0                              ??_PHYSetLongRAMAddr 0065  
                             isKnownPacket@index 00B1                          isInvalidAddress@address 0079  
                                 ___wmul@product 0064                           _isNetworkTrafficSecure 0047  
                                       _LATAbits 000F89                      NetworkDiscoveredEvent@PANID 0060  
                                       _LATCbits 000F8B                                         DelayUS@i 0064  
                                       _LATDbits 000F8C                                         _LATEbits 000F8D  
                        _NetworkDataArrivedEvent 6E4E                       __size_of_DeviceManagerInit 001A  
                                       _LEDState 01D9                               ??_MSTickGetDiffNow 0084  
                             isKnownPacket@zeros 00A2                            ??_radioReceivedPacket 00F0  
                              ?_netResetInterval 0001                     ?_NetworkSendDiscoverResponse 0001  
                      PHYGetLongRAMAddr@toReturn 0066                         __end_of_routingTableFind 6866  
                               IsNetworkDevice@i 0097                      __size_of_TimerEnterCritical 0004  
                            __end_of_LE_ClearDLQ 6F0A                                         HighISR@i 0035  
                                       HighISR@j 0034                                         _PIR1bits 000F9E  
                              ButtonTask@s0Count 003D                                         HighISR@v 002C  
                                  ??_AddMSToTick 0088                                         _PIR3bits 000FA4  
                              ButtonTask@s1Count 003E                               ??_netResetInterval 0080  
                        LEAppendNeighborInfo@cnt 0077                    ??_MiApp_TransceiverPowerState 007E  
                                      _rxMessage 0293                          MiApp_UnicastAddress@src 0140  
                    NetworkDiscoveredEvent@empty 0068                                 __CFG_WDTPS$32768 000000  
                                       i2_SPIGet 7C58                                         i2_SPIPut 7B76  
                               ?_InitSymbolTimer 0001                                        main@F8442 022C  
               RouteManagerProcessReceive@source 00AE                                         _SSP1CON1 000FC6  
                                       _SSP2CON1 000F72                           _NetworkReleaseUserData 7C88  
            __size_of_NetworkSendDiscoverRequest 006C                DeviceManagerBufferDeviceData@data 0074  
                                       _SSP1STAT 000FC7                                         _SSP2STAT 000F73  
                   __size_of_MiMAC_DiscardPacket 001A                DeviceManagerBufferDeviceData@size 0076  
                  BroadcastManagerDelaySend@size 008E         MiApp_EstablishConnection@ActiveScanIndex 0097  
                        GetRouteAddressOfChild@i 00A6                                      _MACRxPacket 0279  
                   MiApp_EstablishConnection@dev 008E                                  _isButtonPressed 7964  
                       ?_NetworkGetParentAddress 0060                     MiApp_EstablishConnection@src 008F  
                                  AddMSToTick@ms 0084                        __end_of_PHYSetLongRAMAddr 7122  
                               _LE_UnpinNeighbor 739E                        _CoordinatorGenericAddress 780C  
                        passLinkEtxThreshold@etx 0060                               MiMAC_PowerState@t1 0075  
                             MiMAC_PowerState@t2 007A                                ___wmul@multiplier 0060  
   __end_of_TMSendFormedPacketTowardsCoordinator 5084    __size_of_TMSendFormedPacketTowardsCoordinator 014A  
         ??_TMSendFormedPacketTowardsCoordinator 0089            ?_TMSendFormedPacketTowardsCoordinator 0083  
           _TMSendFormedPacketTowardsCoordinator 4F3A                  RouteManagerShouldInsert@pathEtx 0085  
                                      _routeInfo 0286                     le_updateNeighborEntryIdx@dev 0098  
                              _netSequenceNumber 004A                     le_updateNeighborEntryIdx@idx 009C  
                   le_updateNeighborEntryIdx@seq 0097                                _TimerExitCritical 7C9C  
                   AddNodeToNetworkTable@address 0080                                        main@coord 03EB  
                                       i2_memcmp 7178                    TMSendFormedPacketToRFD@device 00C0  
                               __size_of_LCDInit 0124                  __size_of_netChooseAdvertiseTime 0078  
                           _OutgoingFrameCounter 023C                         __end_of_RouteManagerInit 7868  
                         ??_MiApp_UnicastAddress 00FE                         __end_of_RouteManagerTask 739E  
                        isKnownPacket@OldestTick 00B5                                     ??_le_findIdx 0088  
                        ?_MiApp_GetParentAddress 0068                              SendPacket@isCommand 0093  
              __size_of_RouteManagerShouldInsert 00F0                               ?_TimerExitCritical 0001  
                            i2_PHYGetLongRAMAddr 7272                    TMSendFormedPacketToRFD@parent 00D3  
                      ?_RouteManagerShouldInsert 0081                    TMSendFormedPacketToRFD@myaddr 00CE  
                      _LE_processReceivedMessage 4C6C                         ?_MiApp_IsMemberOfNetwork 0001  
          RoutingTableFindDeviceOrParent@address 0080                                      _INTCON2bits 000FF1  
                    __size_of_PHYGetShortRAMAddr 0030                                        copy_data0 5C3C  
                                      copy_data1 5C5C                           ??_NetworkSetAddressPAN 0076  
                               __size_of_SPIGet2 000A                        le_initNeighborIdx@ll_addr 0060  
                          __size_of_TimerDisable 0004                                 __size_of_SPIPut2 0018  
                             _NetworkUnicastData 3E50                    __size_of_MiApp_DiscardMessage 0008  
   NetworkManagerProcessIncomingData@isBroadcast 00ED                              ??_TimerExitCritical 0060  
                          TransportManagerTask@i 00F4                            isBroadcastAddress@res 0078  
                             NetworkInit@address 0080                                 __size_of_DelayUS 002C  
                               __size_of_DelayMs 0096                     __size_of_RMRoutingTableCount 000A  
                               __size_of_HighISR 0474                        __size_of_netDecayInterval 0036  
                   LE_processReceivedMessage@hdr 00A5                     LE_processReceivedMessage@len 00A1  
                             _isBroadcastAddress 7536                             i2_PHYGetShortRAMAddr 78EC  
  le_findRandomNeighborIdx@num_eligible_eviction 0087                   __size_of_AddNodeToNetworkTable 01C8  
                        NetworkSetDeviceType@dev 0060                    __end_of_AddNodeToNetworkTable 3E50  
                                       _RxBuffer 0400                           _GetRouteAddressOfChild 64C6  
                                       __Hrparam 0000                         ?_TransportManagerNoRoute 0001  
                            ?_NetworkUnicastData 00E9                         _LE_GetNeighborDeviceType 7632  
                                       _TxBuffer 0355                    ??_NetworkSendDiscoverResponse 009B  
                           ?i2_PHYGetLongRAMAddr 0003                        _RouteManagerRequestUpdate 7C74  
                                       __Lrparam 0000                                  _NetworkGetPANID 7C3A  
                        __size_of_LE_PinNeighbor 0046               DeviceManagerGetDeviceData@isFormed 008C  
                __end_of_MiMAC_ChannelAssessment 76AA                              ?_isBroadcastAddress 0068  
             DeviceManagerGetDeviceData@isSecure 008A                      __end_ofi2_PHYSetLongRAMAddr 7272  
   TMSendFormedPacketTowardsCoordinator@isFormed 0087               __size_of_RouteManagerPerformUpdate 032A  
                             __end_of_le_findIdx 6D2A                                  _NetworkHasRoute 74F4  
                          MiMAC_ReceivedPacket@i 0072     TMSendFormedPacketTowardsCoordinator@isSecure 0088  
                            _MiApp_IsNetworkBusy 7CBE                          __size_of_LEDManagerTask 034A  
                               __size_of___awdiv 0078                         _isNetworkSecurityEnabled 7C90  
                               __size_of___lldiv 0076                                 __size_of___llmod 0062  
                               __size_of___lwdiv 004A                                 __size_of___lwmod 003E  
                        _NetworkIssueDataRequest 6306                              __end_of_AddMSToTick 65DE  
                      __end_of_TimerExitCritical 7CA0                              LE_ClearDLQ@neighbor 008A  
                         AddNodeToNetworkTable@i 0090                                       sprintf@idx 0073  
                                     _EEPROMRead 77DE                                       sprintf@len 007B  
             __end_of_RouteManagerProcessReceive 4AFC                       _RouteManagerProcessReceive 4984  
                                    _currentTime 0248                                       sprintf@val 0075  
                 __end_of_MiApp_GetParentAddress 7A46                                         crc32@crc 0060  
                           _NetworkGetDeviceType 7CAC                                         crc32@buf 0064  
               LE_processReceivedMessage@ll_addr 00A9                      DeviceManagerGetDeviceType@i 008B  
                                   _TimerDisable 7CA8                       ??_le_findRandomNeighborIdx 0082  
                           ??_NetworkUnicastData 00F6                                ?_LELinkQualityGet 008A  
                         ??_NetworkSetDeviceType 0060                      NetworkSetAddressPAN@address 006C  
                               __size_of_isdigit 001E                                ?_MiMAC_SetChannel 0068  
                                ___lwdiv@divisor 0062                                         _devState 01E1  
                                       _hc_table 0A8E                       TunnelManagerGetTunnel@addr 00AE  
                __end_ofi2_NetworkAddressSizeGet 7CB8                                ?_Read_MAC_Address 006C  
                                     _IEEESeqNum 0040                  RoutingTableFindDeviceOrParent@i 008A  
                                ___lwdiv@counter 0064              RouteManagerProcessReceive@congested 00B6  
                                       __ptext10 7B8C                                         __ptext11 5308  
                                       __ptext20 4984                                         __ptext12 542E  
                                       __ptext21 5084                                         __ptext13 6B26  
                                       __ptext30 4F3A                                         __ptext22 7CB8  
                                       __ptext14 5676                                         __ptext31 6A42  
                                       __ptext23 5F30                                         __ptext15 0480  
                                       __ptext40 7C1C                                         __ptext32 64C6  
                                       __ptext24 6AB6                                         __ptext16 7C80  
                                       __ptext41 434A                                         __ptext33 5882  
                                       __ptext25 2F2A                                         __ptext17 31B8  
                                       __ptext50 51CA                                         __ptext42 4C6C  
                                       __ptext34 7632                                         __ptext26 6C62  
                                       __ptext18 5FDE                                         __ptext51 3ABE  
                                       __ptext43 4DDA                                         __ptext35 7BA0  
                                       __ptext27 26BC                                         __ptext19 3426  
                                       __ptext60 158A                                         __ptext52 72C2  
                                       __ptext44 29C8                                         __ptext36 4678  
                                       __ptext28 61CA                                         __ptext61 7358  
                                       __ptext53 5972                                         __ptext45 6DEE  
                                       __ptext37 6554                                         __ptext29 4AFC  
                                       __ptext70 7C30                                         __ptext62 206E  
                                       __ptext54 6662                                         __ptext46 7578  
                                       __ptext38 6E4E                                         __ptext71 7CBE  
                                       __ptext63 7BC8                                         __ptext55 7C26  
                                       __ptext47 6866                                         __ptext39 41A6  
                                       __ptext80 730E                                         __ptext72 38CE  
                                       __ptext64 7CBA                                         __ptext56 7BD6  
                                       __ptext48 6956                                         __ptext81 76AA  
                                       __ptext73 5B46                                         __ptext65 7CBC  
                                       __ptext57 777E                                         __ptext49 65DE  
                                       __ptext90 6F68                                         __ptext82 676A  
                                       __ptext74 3694                                         __ptext66 739E  
                                       __ptext58 774C                                         __ptext91 6268  
                                       __ptext83 0C3C                                         __ptext75 6F0A  
                                       __ptext67 73E4                                         __ptext59 2398  
                                       __ptext92 1182                                         __ptext84 7A46  
                                       __ptext76 69CC                                         __ptext68 6EAC  
                                       __ptext93 7C90                                         __ptext85 3C88  
                                       __ptext77 6CC6                                         __ptext69 7C84  
                                       __ptext94 5DC0                                         __ptext86 7C6C  
                                       __ptext78 4802                                         __ptext95 67EA  
                                       __ptext87 7C88                                         __ptext79 75B6  
                                       __ptext96 798A                                         __ptext88 7C8C  
                                       __ptext97 71CE                                         __ptext89 6306  
                                       __ptext98 7C74                                         __ptext99 7BE2  
                     TunnelManagerGetTunnel@trec 00A6              __size_of_DeviceManagerGetDeviceData 000A  
                           ??_isBroadcastAddress 0070                               ??_LELinkQualityGet 0094  
                           __size_of_NetworkInit 0106               LEAppendNeighborInfo@newPrevSentIdx 0079  
                             ??_MiMAC_SetChannel 0069                                ?_MiMAC_SendPacket 0074  
                    ?_TransportManagerRouteFound 0001              __size_of_DeviceManagerGetDeviceType 0084  
                   TunnelManagerSetTunnel@device 0080                             ?_MiApp_IsNetworkBusy 0001  
                             ??_Read_MAC_Address 0074                                     _SSP2CON1bits 000F72  
                                _NetworkSequence 7C7A                    routingTableUpdateEntry@parent 00A1  
                               __size_of_sprintf 02A6                        ??_NetworkDataArrivedEvent 0075  
                     __size_of_LinkEstimatorInit 000C                     TunnelManagerSetTunnel@parent 0082  
                         __size_of_isSameAddress 0024                               ??_MiMAC_SendPacket 007E  
                                    _LE_ClearDLQ 6EAC                       BroadcastManagerDelaySend@i 0099  
                                  __size_of_main 03A4                                    __size_of_krnd 018C  
                          ?i2_PHYGetShortRAMAddr 0001                TunnelManagerSetTunnel@oldestindex 008A  
                              ??_TMSendDataToRFD 00E9                                         _krndInit 5CFE  
            RouteManagerProcessReceive@rcvBeacon 00BF                           _netChooseAdvertiseTime 68DE  
                          _NetworkGetMyRouteInfo 7BE2                             _BeaconManagerTrigger 7C84  
                          ??i2_PHYGetLongRAMAddr 0005                          __end_of_isButtonPressed 798A  
                                 HighISR@results 002A                     __end_ofi2_PHYSetShortRAMAddr 793E  
                              _IsMemberOfNetwork 7C98                  __end_of_NetworkGetParentAddress 7BC8  
                          BroadcastManagerTask@i 00B2                             __size_of_TimeTickISR 0032  
                                     _LEDCommand 777E                                         int$flags 005E  
                       MiApp_SetAddressPan@panid 0078                          _le_findEmptyNeighborIdx 72C2  
                 __end_ofisBroadcastAddress@F537 FF9F                               ?_IsMemberOfNetwork 0001  
                         __size_of_le_computeETX 003E                      le_findRandomNeighborIdx@cnt 0084  
                    le_findRandomNeighborIdx@res 0085                                         main@src1 03DC  
                                       _userdata 0395                                         _switches 004B  
                     __size_of_PHYSetLongRAMAddr 0056                             _NetworkHasRoute$4257 0081  
                 TunnelManagerInvalidateTunnel@i 0092                       MiMAC_SendPacket@MACPayload 007B  
               TunnelManagerSetTunnel@emptyindex 008C                             __size_of_TimerEnable 0004  
                           isKnownPacket@unknown 00AE                      GetRouteAddressOfChild@child 0096  
                          ?_NetworkGetDeviceType 0001                  __end_of_MiApp_IsMemberOfNetwork 7C98  
                              ?_MiMAC_PowerState 0001                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                              ??_IsMemberOfNetwork 0083  
                       __end_of_isInvalidAddress 7AF2                                _MiApp_RequestData 7C8C  
                                       memcmp@s1 0060                                         memcmp@s2 0062  
                                  ?_HardwareInit 0001                           __size_of_RouterEvicted 00BA  
                                       memcpy@d1 0062                                         memcpy@s1 0064  
                             ??_MiMAC_PowerState 0074                      ?_NetworkManagerGetMyAddress 0060  
                  DeviceManagerGetDeviceType@dev 008A                           __size_of_isKnownPacket 026E  
                                       isdigit@c 0062                                 _myNetworkAddress 0053  
                                       memset@p1 0060                                  le_computeETX@q1 006A  
                             ?_MiApp_RequestData 0001                            ??_MiApp_IsNetworkBusy 0060  
                                 le_updateETX@ne 006D                      MiApp_ProtocolInit@initValue 0083  
                                       intlevel2 0000                                ?_MiApp_SetChannel 0001  
                                      sprintf@ap 0078                                        sprintf@cp 0079  
                                      sprintf@sp 0067                               IsNetworkDevice@res 0094  
                     __end_of_radioDiscardPacket 7C84                          ?_MiApp_MessageAvailable 0001  
                          TMSendDataToRFD@device 00DB                  __end_of_TransportManagerNoRoute 7CBE  
                                  radioUnicast@i 00AD                          __end_of_NetworkGetPANID 7C44  
                               ___lwmod@dividend 006C                    __size_of_LEAppendNeighborInfo 0182  
                               ___lldiv@dividend 0060                    __size_of_passLinkEtxThreshold 000E  
                            ??_MiApp_RequestData 00CC                               ??_MiApp_SetChannel 006A  
                          LE_InsertNeighbor@nidx 00A7                  LE_processReceivedMessage@source 009D  
                    TunnelManagerSetTunnel@index 008E                            ?_BeaconManagerTrigger 0001  
                                  ?_MiWi_TickGet 0060                          __end_of_NetworkHasRoute 7536  
              le_updateNeighborTableEst@totalPkt 0091                                    ??_BlinkRedLED 0063  
                      __end_of_IsMemberOfNetwork 7C9C                                       HighISR@tmr 0031  
                       le_findWorstNeighborIdx@i 008D                              _beaconMessageBuffer 0700  
                             _MiApp_ProtocolInit 6B92                     SendPacket@DestinationAddress 008F  
                                    _AddMSToTick 6554                      ??_le_updateNeighborEntryIdx 0099  
             NetworkSendDiscoverResponse@address 00DE                      __size_of_NetworkManagerTask 0324  
                      ??_NetworkIssueDataRequest 00AE                                    _MACInitParams 0257  
                            MiMAC_Init@initValue 0074                      ??_le_updateNeighborTableEst 0088  
              __size_of_NetworkPrepareSendPacket 00E4                        ?_NetworkPrepareSendPacket 0070  
                                 _MRF24J40Status 0042                    __size_of_TransportManagerInit 0016  
                  __size_of_TransportManagerTask 03F6          le_findWorstNeighborIdx@worstNeighborIdx 0085  
                                  _isSameAddress 798A              TunnelManagerInvalidateTunnel@device 0080  
                            ?_MiApp_ProtocolInit 0001                                  EEPROMRead@count 0064  
                     __size_of_TimerExitCritical 0004                         ?_routingTableUpdateEntry 0099  
                                    _prevSentIdx 025E                        __end_of_MiApp_RequestData 7C90  
                   MiApp_SearchConnection@tStart 01C8                         LEDManagerTask@lNextState 0254  
                                routeInfoInit@ri 0068                                         sprintf@c 007F  
                                       sprintf@f 0069                                 ??_MiWi_TickGetMs 0070  
                               ??_radioBroadcast 00A5           __end_of_RoutingTableFindDeviceOrParent 5972  
        __size_of_RoutingTableFindDeviceOrParent 00F0                   _RoutingTableFindDeviceOrParent 5882  
                                    ?_EEPROMRead 0062                                   ??_HardwareInit 0060  
                                     _PPSCONbits 000EFF                                 ___lldiv@quotient 0068  
                           TMSendDataToRFD@pType 00E3                          __end_of_NetworkSequence 7C80  
                                ___lwmod@divisor 006E                                  ___lwmod@counter 0070  
                     ?_MiApp_EstablishConnection 008D                         ??_NetworkDiscoveredEvent 0064  
                         __size_of_LCD_WriteData 0016                                      _SSPCON1bits 000FC6  
                       __size_ofi2_isSameAddress 0022                                       _WDTCONbits 000FC0  
                             _routingTableActive 0039                   NetworkSendDiscoverRequest@dhdr 00DD  
                                 EEPROMRead@addr 0063               __size_of_CoordinatorGenericAddress 002E  
                                 EEPROMRead@dest 0062                   NetworkSendDiscoverRequest@size 00DB  
                 __end_of_MiApp_MessageAvailable 577C                  NetworkSendDiscoverResponse@dhdr 00DD  
                            _MiMAC_DiscardPacket 7A46                       TMSendFormedPacketToRFD@res 00D0  
                                  _le_computeETX 7578                  NetworkSendDiscoverResponse@size 00DB  
       TMSendFormedPacketTowardsCoordinator@data 0083  NetworkManagerProcessIncomingData@isSecurePacket 0183  
               __size_of_MiMAC_ChannelAssessment 003C                             ??_MiApp_ProtocolInit 0082  
                              _BeaconManagerInit 7A0C                            networkSendBeacon@last 00AC  
       TMSendFormedPacketTowardsCoordinator@size 0085                                _BeaconManagerTask 5B46  
               MiMAC_ChannelAssessment@RSSIcheck 0068                           ??i2_PHYGetShortRAMAddr 0003  
                       __end_of_LE_UnpinNeighbor 73E4                               ?_BeaconManagerInit 0001  
                                 ??_MiWi_TickGet 0064                           ?_NetworkGetMyRouteInfo 0060  
                               _netDecayInterval 76AA                               ?_BeaconManagerTask 0001  
             __size_of_LE_processReceivedMessage 016E                               _le_initNeighborIdx 65DE  
                                  ?_InitMRF24J40 0001                               _CoordinatorAddress 7BA0  
                              _networkSendBeacon 3694                          ?_NetworkReleaseUserData 0001  
                       MiMAC_SendPacket@IntraPAN 008B                     __end_of_MiMAC_ReceivedPacket 1182  
                                  _RouterEvicted 5DC0                                _ActiveScanChannel 01DE  
                       __size_of_IsNetworkDevice 01A4                                ?_routingTableFind 0081  
                      ??_le_findEmptyNeighborIdx 0062                                   _LE_PinNeighbor 73E4  
                                  _isKnownPacket 31B8  
