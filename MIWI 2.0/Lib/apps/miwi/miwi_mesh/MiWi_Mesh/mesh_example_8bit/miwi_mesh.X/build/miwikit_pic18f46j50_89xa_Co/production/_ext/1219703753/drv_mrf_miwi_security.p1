Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 20: typedef union
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 21: {
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 22: uint16_t Val;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 23: uint8_t v[2];
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 24: struct
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 25: {
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 26: uint8_t LB;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 27: uint8_t HB;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 28: } uint8_t;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 29: struct
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 30: {
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 31: uint8_t b0:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 32: uint8_t b1:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 33: uint8_t b2:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 34: uint8_t b3:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 35: uint8_t b4:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 36: uint8_t b5:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 37: uint8_t b6:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 38: uint8_t b7:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 39: uint8_t b8:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 40: uint8_t b9:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 41: uint8_t b10:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 42: uint8_t b11:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 43: uint8_t b12:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 44: uint8_t b13:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 45: uint8_t b14:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 46: uint8_t b15:1;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 47: } bits;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 48: } _uint16_VAL, uint16_BITS;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 50: typedef union
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 51: {
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 52: uint32_t Val;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 53: uint16_t w[2];
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 54: } uint32_VAL;
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 63: uint32_t krnd(void);
[; ;miwikit_pic18f46j50_89xa\gtypedefs.h: 64: void krndInit(uint16_t value);
[; ;miwikit_pic18f46j50_89xa\system.h: 133: typedef enum LED_t_def
[; ;miwikit_pic18f46j50_89xa\system.h: 134: {
[; ;miwikit_pic18f46j50_89xa\system.h: 135: LEDGreen,
[; ;miwikit_pic18f46j50_89xa\system.h: 136: LEDYellow,
[; ;miwikit_pic18f46j50_89xa\system.h: 137: LEDRed,
[; ;miwikit_pic18f46j50_89xa\system.h: 138: LEDCount,
[; ;miwikit_pic18f46j50_89xa\system.h: 139: }LED_t;
[; ;miwikit_pic18f46j50_89xa\system.h: 141: typedef enum LEDCmd_t_def
[; ;miwikit_pic18f46j50_89xa\system.h: 142: {
[; ;miwikit_pic18f46j50_89xa\system.h: 143: lCMD_None,
[; ;miwikit_pic18f46j50_89xa\system.h: 144: lCMD_Off,
[; ;miwikit_pic18f46j50_89xa\system.h: 145: lCMD_On,
[; ;miwikit_pic18f46j50_89xa\system.h: 146: lCMD_Blink,
[; ;miwikit_pic18f46j50_89xa\system.h: 147: lCMD_Toggle,
[; ;miwikit_pic18f46j50_89xa\system.h: 148: }LEDCmd_t;
[; ;miwikit_pic18f46j50_89xa\system.h: 152: void HardwareInit(void);
[; ;miwikit_pic18f46j50_89xa\system.h: 153: bool isButtonPressed(uint8_t index);
[; ;miwikit_pic18f46j50_89xa\system.h: 155: void ButtonTask(void);
[; ;miwikit_pic18f46j50_89xa\system.h: 156: void LEDCommand(LED_t led, LEDCmd_t cmd);
[; ;miwikit_pic18f46j50_89xa\system.h: 157: void LEDManagerTask(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 69: typedef union MIWI_TICK_t
[; ;miwikit_pic18f46j50_89xa\symbol.h: 70: {
[; ;miwikit_pic18f46j50_89xa\symbol.h: 71: uint32_t Val;
[; ;miwikit_pic18f46j50_89xa\symbol.h: 72: }MIWI_TICK;
[; ;miwikit_pic18f46j50_89xa\symbol.h: 77: void InitSymbolTimer(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 78: MIWI_TICK MiWi_TickGetMs(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 79: uint32_t MiWi_TickGet(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 80: uint32_t safeMiWi_TickGetMs(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 86: void TimerDisable(void);
[; ;miwikit_pic18f46j50_89xa\symbol.h: 87: void TimerEnable(void);
[; ;drv_mrf_miwi_security.h: 94: extern const uint8_t mySecurityKey[];
[; ;drv_mrf_miwi_security.h: 96: void CTR(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *nounce);
[; ;drv_mrf_miwi_security.h: 97: void CBC_MAC(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *MIC);
[; ;drv_mrf_miwi_security.h: 98: void CCM_Enc(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key);
[; ;drv_mrf_miwi_security.h: 99: bool CCM_Dec(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key);
"68 ../../framework/driver/mrf_miwi/src/drv_mrf_miwi_security.c
[v _tmpBlock `uc ~T0 @X0 -> 4 `i e ]
[; ;drv_mrf_miwi_security.c: 68: uint8_t tmpBlock[4];
"83
[v _mySecurityKey `Cuc ~T0 @X0 -> 8 `i e ]
[i _mySecurityKey
:U ..
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
"84
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
..
]
[; ;drv_mrf_miwi_security.c: 83: const const uint8_t mySecurityKey[8] = {0x00, 0x01, 0x02,
[; ;drv_mrf_miwi_security.c: 84: 0x03, 0x04, 0x05, 0x06, 0x07};
"109
[v _encode `(v ~T0 @X0 1 ef2`*ui`*ui ]
"110
{
[; ;drv_mrf_miwi_security.c: 109: void encode(uint16_t *text, uint16_t *key)
[; ;drv_mrf_miwi_security.c: 110: {
[e :U _encode ]
"109
[v _text `*ui ~T0 @X0 1 r1 ]
[v _key `*ui ~T0 @X0 1 r2 ]
"110
[f ]
"111
[v _part1 `ui ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 111: uint16_t part1=text[0], part2=text[1];
[e = _part1 *U + _text * -> -> 0 `i `x -> -> # *U _text `i `x ]
[v _part2 `ui ~T0 @X0 1 a ]
[e = _part2 *U + _text * -> -> 1 `i `x -> -> # *U _text `i `x ]
"112
[v _sum `ui ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 112: uint16_t sum=0, delta=0x9E37;
[e = _sum -> -> 0 `i `ui ]
[v _delta `ui ~T0 @X0 1 a ]
[e = _delta -> 40503 `ui ]
"113
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 113: uint8_t i;
[; ;drv_mrf_miwi_security.c: 115: for(i=0; i<32; i++)
"115
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 32 `i 7  ]
[e $U 8  ]
"116
[e :U 7 ]
[; ;drv_mrf_miwi_security.c: 116: {
{
[; ;drv_mrf_miwi_security.c: 117: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (sum + key[sum & 3]);
"117
[e =+ _part1 ^ + ^ << _part2 -> 4 `i >> _part2 -> 5 `i _part2 + _sum *U + _key * -> & _sum -> -> 3 `i `ui `ux -> -> # *U _key `ui `ux ]
[; ;drv_mrf_miwi_security.c: 118: sum += delta;
"118
[e =+ _sum _delta ]
[; ;drv_mrf_miwi_security.c: 119: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (sum + key[(sum>>11) & 3]);
"119
[e =+ _part2 ^ + ^ << _part1 -> 4 `i >> _part1 -> 5 `i _part1 + _sum *U + _key * -> & >> _sum -> 11 `i -> -> 3 `i `ui `ux -> -> # *U _key `ui `ux ]
"120
}
"115
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 32 `i 7  ]
[e :U 8 ]
"120
}
[; ;drv_mrf_miwi_security.c: 120: }
[; ;drv_mrf_miwi_security.c: 121: text[0]=part1; text[1]=part2;
"121
[e = *U + _text * -> -> 0 `i `x -> -> # *U _text `i `x _part1 ]
[e = *U + _text * -> -> 1 `i `x -> -> # *U _text `i `x _part2 ]
[; ;drv_mrf_miwi_security.c: 122: }
"122
[e :UE 6 ]
}
"150
[v _CTR `(v ~T0 @X0 1 ef4`*uc`uc`*uc`*uc ]
"151
{
[; ;drv_mrf_miwi_security.c: 150: void CTR(uint8_t *text, uint8_t len, uint8_t *key, uint8_t *nounce)
[; ;drv_mrf_miwi_security.c: 151: {
[e :U _CTR ]
"150
[v _text `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
[v _key `*uc ~T0 @X0 1 r3 ]
[v _nounce `*uc ~T0 @X0 1 r4 ]
"151
[f ]
"152
[v _block `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 152: uint8_t block = len/4+1;
[e = _block -> + / -> _len `i -> 4 `i -> 1 `i `uc ]
"153
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 153: uint8_t i, j;
[; ;drv_mrf_miwi_security.c: 160: for(i = 0; i < block; i++)
"160
{
[e = _i -> -> 0 `i `uc ]
[e $U 14  ]
"161
[e :U 11 ]
[; ;drv_mrf_miwi_security.c: 161: {
{
[; ;drv_mrf_miwi_security.c: 162: for(j = 0; j < 4-1; j++)
"162
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i - -> 4 `i -> 1 `i 15  ]
[e $U 16  ]
"163
[e :U 15 ]
[; ;drv_mrf_miwi_security.c: 163: {
{
[; ;drv_mrf_miwi_security.c: 164: tmpBlock[j] = nounce[j];
"164
[e = *U + &U _tmpBlock * -> _j `ux -> -> # *U &U _tmpBlock `ui `ux *U + _nounce * -> _j `ux -> -> # *U _nounce `ui `ux ]
"165
}
"162
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i - -> 4 `i -> 1 `i 15  ]
[e :U 16 ]
"165
}
[; ;drv_mrf_miwi_security.c: 165: }
[; ;drv_mrf_miwi_security.c: 166: tmpBlock[4-1] = i;
"166
[e = *U + &U _tmpBlock * -> -> - -> 4 `i -> 1 `i `ui `ux -> -> # *U &U _tmpBlock `ui `ux _i ]
[; ;drv_mrf_miwi_security.c: 167: encode((uint16_t *)tmpBlock, (uint16_t *)key);
"167
[e ( _encode (2 , -> &U _tmpBlock `*ui -> _key `*ui ]
[; ;drv_mrf_miwi_security.c: 168: for(j = 0; j < 4; j++)
"168
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 4 `i 18  ]
[e $U 19  ]
"169
[e :U 18 ]
[; ;drv_mrf_miwi_security.c: 169: {
{
[; ;drv_mrf_miwi_security.c: 170: if( (i * 4 + j) >= len )
"170
[e $ ! >= + * -> _i `i -> 4 `i -> _j `i -> _len `i 21  ]
[; ;drv_mrf_miwi_security.c: 171: {
"171
{
[; ;drv_mrf_miwi_security.c: 172: break;
"172
[e $U 19  ]
"173
}
[e :U 21 ]
[; ;drv_mrf_miwi_security.c: 173: }
[; ;drv_mrf_miwi_security.c: 174: text[i * 4 + j] ^= tmpBlock[j];
"174
[e =^ *U + _text * -> + * -> _i `i -> 4 `i -> _j `i `x -> -> # *U _text `i `x *U + &U _tmpBlock * -> _j `ux -> -> # *U &U _tmpBlock `ui `ux ]
"175
}
"168
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 4 `i 18  ]
[e :U 19 ]
"175
}
"176
}
"160
[e ++ _i -> -> 1 `i `uc ]
[e :U 14 ]
[e $ < -> _i `i -> _block `i 11  ]
[e :U 12 ]
"176
}
[; ;drv_mrf_miwi_security.c: 175: }
[; ;drv_mrf_miwi_security.c: 176: }
[; ;drv_mrf_miwi_security.c: 181: }
"181
[e :UE 10 ]
}
"207
[v _CBC_MAC `(v ~T0 @X0 1 ef4`*uc`uc`*uc`*uc ]
"211
{
[; ;drv_mrf_miwi_security.c: 207: void CBC_MAC( uint8_t *text,
[; ;drv_mrf_miwi_security.c: 208: uint8_t len,
[; ;drv_mrf_miwi_security.c: 209: uint8_t *key,
[; ;drv_mrf_miwi_security.c: 210: uint8_t *MIC)
[; ;drv_mrf_miwi_security.c: 211: {
[e :U _CBC_MAC ]
"207
[v _text `*uc ~T0 @X0 1 r1 ]
"208
[v _len `uc ~T0 @X0 1 r2 ]
"209
[v _key `*uc ~T0 @X0 1 r3 ]
"210
[v _MIC `*uc ~T0 @X0 1 r4 ]
"211
[f ]
"212
[v _block `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 212: uint8_t block = len / 4 + 1;
[e = _block -> + / -> _len `i -> 4 `i -> 1 `i `uc ]
"213
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 213: uint8_t i, j;
[; ;drv_mrf_miwi_security.c: 220: for(i = 0; i < 4; i++)
"220
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 23  ]
[e $U 24  ]
"221
[e :U 23 ]
[; ;drv_mrf_miwi_security.c: 221: {
{
[; ;drv_mrf_miwi_security.c: 222: MIC[i] = 0;
"222
[e = *U + _MIC * -> _i `ux -> -> # *U _MIC `ui `ux -> -> 0 `i `uc ]
"223
}
"220
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 23  ]
[e :U 24 ]
"223
}
[; ;drv_mrf_miwi_security.c: 223: }
[; ;drv_mrf_miwi_security.c: 225: for(i = 0; i < block; i++)
"225
{
[e = _i -> -> 0 `i `uc ]
[e $U 29  ]
"226
[e :U 26 ]
[; ;drv_mrf_miwi_security.c: 226: {
{
[; ;drv_mrf_miwi_security.c: 227: for(j = 0; j < 4; j++)
"227
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 4 `i 30  ]
[e $U 31  ]
"228
[e :U 30 ]
[; ;drv_mrf_miwi_security.c: 228: {
{
[; ;drv_mrf_miwi_security.c: 229: if( (i * 4 + j) >= len )
"229
[e $ ! >= + * -> _i `i -> 4 `i -> _j `i -> _len `i 33  ]
[; ;drv_mrf_miwi_security.c: 230: {
"230
{
[; ;drv_mrf_miwi_security.c: 231: break;
"231
[e $U 31  ]
"232
}
[e :U 33 ]
[; ;drv_mrf_miwi_security.c: 232: }
[; ;drv_mrf_miwi_security.c: 233: MIC[j] ^= text[i * 4 + j];
"233
[e =^ *U + _MIC * -> _j `ux -> -> # *U _MIC `ui `ux *U + _text * -> + * -> _i `i -> 4 `i -> _j `i `x -> -> # *U _text `i `x ]
"234
}
"227
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 4 `i 30  ]
[e :U 31 ]
"234
}
[; ;drv_mrf_miwi_security.c: 234: }
[; ;drv_mrf_miwi_security.c: 235: encode((uint16_t *)MIC, (uint16_t *)key);
"235
[e ( _encode (2 , -> _MIC `*ui -> _key `*ui ]
"236
}
"225
[e ++ _i -> -> 1 `i `uc ]
[e :U 29 ]
[e $ < -> _i `i -> _block `i 26  ]
[e :U 27 ]
"236
}
[; ;drv_mrf_miwi_security.c: 236: }
[; ;drv_mrf_miwi_security.c: 240: }
"240
[e :UE 22 ]
}
"272
[v _CCM_Enc `(v ~T0 @X0 1 ef4`*uc`uc`uc`*uc ]
"276
{
[; ;drv_mrf_miwi_security.c: 272: void CCM_Enc( uint8_t *text,
[; ;drv_mrf_miwi_security.c: 273: uint8_t headerLen,
[; ;drv_mrf_miwi_security.c: 274: uint8_t payloadLen,
[; ;drv_mrf_miwi_security.c: 275: uint8_t *key)
[; ;drv_mrf_miwi_security.c: 276: {
[e :U _CCM_Enc ]
"272
[v _text `*uc ~T0 @X0 1 r1 ]
"273
[v _headerLen `uc ~T0 @X0 1 r2 ]
"274
[v _payloadLen `uc ~T0 @X0 1 r3 ]
"275
[v _key `*uc ~T0 @X0 1 r4 ]
"276
[f ]
"277
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 277: uint8_t i;
[; ;drv_mrf_miwi_security.c: 284: CBC_MAC(text, (headerLen + payloadLen), key, tmpBlock);
"284
[e ( _CBC_MAC (4 , , , _text -> + -> _headerLen `i -> _payloadLen `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 286: for(i = 0; i < 4; i++)
"286
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 35  ]
[e $U 36  ]
"287
[e :U 35 ]
[; ;drv_mrf_miwi_security.c: 287: {
{
[; ;drv_mrf_miwi_security.c: 288: text[headerLen + payloadLen + i] = tmpBlock[i];
"288
[e = *U + _text * -> + + -> _headerLen `i -> _payloadLen `i -> _i `i `x -> -> # *U _text `i `x *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux ]
"289
}
"286
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 35  ]
[e :U 36 ]
"289
}
[; ;drv_mrf_miwi_security.c: 289: }
[; ;drv_mrf_miwi_security.c: 291: for(i = 0; i < 4-1; i++)
"291
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 38  ]
[e $U 39  ]
"292
[e :U 38 ]
[; ;drv_mrf_miwi_security.c: 292: {
{
[; ;drv_mrf_miwi_security.c: 293: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
"293
[e = *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux -> ? < -> _i `i -> _headerLen `i : -> *U + _text * -> _i `ux -> -> # *U _text `ui `ux `i -> 0 `i `uc ]
"294
}
"291
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 38  ]
[e :U 39 ]
"294
}
[; ;drv_mrf_miwi_security.c: 294: }
[; ;drv_mrf_miwi_security.c: 296: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBlock);
"296
[e ( _CTR (4 , , , &U *U + _text * -> _headerLen `ux -> -> # *U _text `ui `ux -> + -> _payloadLen `i -> 4 `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 300: }
"300
[e :UE 34 ]
}
"331
[v _CCM_Dec `(uc ~T0 @X0 1 ef4`*uc`uc`uc`*uc ]
"332
{
[; ;drv_mrf_miwi_security.c: 331: bool CCM_Dec(uint8_t *text, uint8_t headerLen, uint8_t payloadLen, uint8_t *key)
[; ;drv_mrf_miwi_security.c: 332: {
[e :U _CCM_Dec ]
"331
[v _text `*uc ~T0 @X0 1 r1 ]
[v _headerLen `uc ~T0 @X0 1 r2 ]
[v _payloadLen `uc ~T0 @X0 1 r3 ]
[v _key `*uc ~T0 @X0 1 r4 ]
"332
[f ]
"333
[v _i `uc ~T0 @X0 1 a ]
[; ;drv_mrf_miwi_security.c: 333: uint8_t i;
[; ;drv_mrf_miwi_security.c: 340: for(i = 0; i < 4-1; i++)
"340
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 42  ]
[e $U 43  ]
"341
[e :U 42 ]
[; ;drv_mrf_miwi_security.c: 341: {
{
[; ;drv_mrf_miwi_security.c: 342: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
"342
[e = *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux -> ? < -> _i `i -> _headerLen `i : -> *U + _text * -> _i `ux -> -> # *U _text `ui `ux `i -> 0 `i `uc ]
"343
}
"340
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 4 `i -> 1 `i 42  ]
[e :U 43 ]
"343
}
[; ;drv_mrf_miwi_security.c: 343: }
[; ;drv_mrf_miwi_security.c: 344: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
"344
[e ( _CTR (4 , , , &U *U + _text * -> _headerLen `ux -> -> # *U _text `ui `ux _payloadLen _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 346: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmpBlock);
"346
[e ( _CBC_MAC (4 , , , _text -> - + -> _headerLen `i -> _payloadLen `i -> 2 `i `uc _key &U _tmpBlock ]
[; ;drv_mrf_miwi_security.c: 347: for(i = 0; i < 2; i++)
"347
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 45  ]
[e $U 46  ]
"348
[e :U 45 ]
[; ;drv_mrf_miwi_security.c: 348: {
{
[; ;drv_mrf_miwi_security.c: 349: if( tmpBlock[i] != text[headerLen + payloadLen - 2 + i] )
"349
[e $ ! != -> *U + &U _tmpBlock * -> _i `ux -> -> # *U &U _tmpBlock `ui `ux `i -> *U + _text * -> + - + -> _headerLen `i -> _payloadLen `i -> 2 `i -> _i `i `x -> -> # *U _text `i `x `i 48  ]
[; ;drv_mrf_miwi_security.c: 350: {
"350
{
[; ;drv_mrf_miwi_security.c: 354: return 0;
"354
[e ) -> -> 0 `i `uc ]
[e $UE 41  ]
"355
}
[e :U 48 ]
"356
}
"347
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 45  ]
[e :U 46 ]
"356
}
[; ;drv_mrf_miwi_security.c: 355: }
[; ;drv_mrf_miwi_security.c: 356: }
[; ;drv_mrf_miwi_security.c: 360: return 1;
"360
[e ) -> -> 1 `i `uc ]
[e $UE 41  ]
[; ;drv_mrf_miwi_security.c: 361: }
"361
[e :UE 41 ]
}
[; ;drv_mrf_miwi_security.c: 365: extern uint8_t bogus;
