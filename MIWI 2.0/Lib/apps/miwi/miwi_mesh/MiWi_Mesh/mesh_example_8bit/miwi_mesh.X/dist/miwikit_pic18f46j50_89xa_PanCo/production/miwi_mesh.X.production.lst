

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri Oct 28 21:29:55 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    21                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=2,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=2,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=2,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	text148,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=2,class=CODE,delta=1
   177                           	psect	text150,global,reloc=2,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=2,class=CODE,delta=1
   182                           	psect	text155,global,reloc=2,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=2,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=2,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=2,class=CODE,delta=1
   189                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=2,class=CODE,delta=1
   192                           	psect	text165,global,reloc=2,class=CODE,delta=1
   193                           	psect	text166,global,reloc=2,class=CODE,delta=1
   194                           	psect	text167,global,reloc=2,class=CODE,delta=1
   195                           	psect	text168,global,reloc=2,class=CODE,delta=1
   196                           	psect	text169,global,reloc=2,class=CODE,delta=1
   197                           	psect	text170,global,reloc=2,class=CODE,delta=1
   198                           	psect	text171,global,reloc=2,class=CODE,delta=1
   199                           	psect	text172,global,reloc=2,class=CODE,delta=1
   200                           	psect	text173,global,reloc=2,class=CODE,delta=1
   201                           	psect	text174,global,reloc=2,class=CODE,delta=1
   202                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           	psect	idataCOMRAM
   207  00759A                     __pidataCOMRAM:
   208                           	opt stack 0
   209                           
   210                           ;initializer for _w
   211  00759A  07CD               	dw	1997
   212  00759C  387B               	dw	14459
   213                           
   214                           ;initializer for _y
   215  00759E  B535               	dw	46389
   216  0075A0  2053               	dw	8275
   217                           
   218                           ;initializer for _myPANID
   219  0075A2  1234               	dw	4660
   220                           
   221                           	psect	idataBANK1
   222  007532                     __pidataBANK1:
   223                           	opt stack 0
   224                           
   225                           ;initializer for _x
   226  007532  BA36               	dw	47670
   227  007534  38D1               	dw	14545
   228                           
   229                           ;initializer for _z
   230  007536  9799               	dw	38809
   231  007538  0DFC               	dw	3580
   232                           
   233                           ;initializer for _DEVPanID
   234  00753A  FFE3               	dw	65507
   235                           
   236                           ;initializer for _DeviceType
   237  00753C  01                 	db	1
   238                           
   239                           ;initializer for _addressLen
   240  00753D  02                 	db	2
   241                           
   242                           ;initializer for _currentChannel
   243  00753E  19                 	db	25
   244                           
   245                           ;initializer for _MyAddress
   246  00753F  01                 	db	1
   247  007540  03                 	db	3
   248                           
   249                           ;initializer for _myLongAddress
   250  007541  04                 	db	4
   251  007542  77                 	db	119
   252                           
   253                           	psect	mediumconst
   254  00FB1C                     __pmediumconst:
   255                           	opt stack 0
   256  00FB1C  00                 	db	0
   257  00FB1D                     _crc32_table:
   258                           	opt stack 0
   259  00FB1D  0000               	dw	0
   260  00FB1F  0000               	dw	0
   261  00FB21  3096               	dw	12438
   262  00FB23  7707               	dw	30471
   263  00FB25  612C               	dw	24876
   264  00FB27  EE0E               	dw	60942
   265  00FB29  51BA               	dw	20922
   266  00FB2B  9909               	dw	39177
   267  00FB2D  C419               	dw	50201
   268  00FB2F  076D               	dw	1901
   269  00FB31  F48F               	dw	62607
   270  00FB33  706A               	dw	28778
   271  00FB35  A535               	dw	42293
   272  00FB37  E963               	dw	59747
   273  00FB39  95A3               	dw	38307
   274  00FB3B  9E64               	dw	40548
   275  00FB3D  8832               	dw	34866
   276  00FB3F  0EDB               	dw	3803
   277  00FB41  B8A4               	dw	47268
   278  00FB43  79DC               	dw	31196
   279  00FB45  E91E               	dw	59678
   280  00FB47  E0D5               	dw	57557
   281  00FB49  D988               	dw	55688
   282  00FB4B  97D2               	dw	38866
   283  00FB4D  4C2B               	dw	19499
   284  00FB4F  09B6               	dw	2486
   285  00FB51  7CBD               	dw	31933
   286  00FB53  7EB1               	dw	32433
   287  00FB55  2D07               	dw	11527
   288  00FB57  E7B8               	dw	59320
   289  00FB59  1D91               	dw	7569
   290  00FB5B  90BF               	dw	37055
   291  00FB5D  1064               	dw	4196
   292  00FB5F  1DB7               	dw	7607
   293  00FB61  20F2               	dw	8434
   294  00FB63  6AB0               	dw	27312
   295  00FB65  7148               	dw	29000
   296  00FB67  F3B9               	dw	62393
   297  00FB69  41DE               	dw	16862
   298  00FB6B  84BE               	dw	33982
   299  00FB6D  D47D               	dw	54397
   300  00FB6F  1ADA               	dw	6874
   301  00FB71  E4EB               	dw	58603
   302  00FB73  6DDD               	dw	28125
   303  00FB75  B551               	dw	46417
   304  00FB77  F4D4               	dw	62676
   305  00FB79  85C7               	dw	34247
   306  00FB7B  83D3               	dw	33747
   307  00FB7D  9856               	dw	38998
   308  00FB7F  136C               	dw	4972
   309  00FB81  A8C0               	dw	43200
   310  00FB83  646B               	dw	25707
   311  00FB85  F97A               	dw	63866
   312  00FB87  FD62               	dw	64866
   313  00FB89  C9EC               	dw	51692
   314  00FB8B  8A65               	dw	35429
   315  00FB8D  5C4F               	dw	23631
   316  00FB8F  1401               	dw	5121
   317  00FB91  6CD9               	dw	27865
   318  00FB93  6306               	dw	25350
   319  00FB95  3D63               	dw	15715
   320  00FB97  FA0F               	dw	64015
   321  00FB99  0DF5               	dw	3573
   322  00FB9B  8D08               	dw	36104
   323  00FB9D  20C8               	dw	8392
   324  00FB9F  3B6E               	dw	15214
   325  00FBA1  105E               	dw	4190
   326  00FBA3  4C69               	dw	19561
   327  00FBA5  41E4               	dw	16868
   328  00FBA7  D560               	dw	54624
   329  00FBA9  7172               	dw	29042
   330  00FBAB  A267               	dw	41575
   331  00FBAD  E4D1               	dw	58577
   332  00FBAF  3C03               	dw	15363
   333  00FBB1  D447               	dw	54343
   334  00FBB3  4B04               	dw	19204
   335  00FBB5  85FD               	dw	34301
   336  00FBB7  D20D               	dw	53773
   337  00FBB9  B56B               	dw	46443
   338  00FBBB  A50A               	dw	42250
   339  00FBBD  A8FA               	dw	43258
   340  00FBBF  35B5               	dw	13749
   341  00FBC1  986C               	dw	39020
   342  00FBC3  42B2               	dw	17074
   343  00FBC5  C9D6               	dw	51670
   344  00FBC7  DBBB               	dw	56251
   345  00FBC9  F940               	dw	63808
   346  00FBCB  ACBC               	dw	44220
   347  00FBCD  6CE3               	dw	27875
   348  00FBCF  32D8               	dw	13016
   349  00FBD1  5C75               	dw	23669
   350  00FBD3  45DF               	dw	17887
   351  00FBD5  0DCF               	dw	3535
   352  00FBD7  DCD6               	dw	56534
   353  00FBD9  3D59               	dw	15705
   354  00FBDB  ABD1               	dw	43985
   355  00FBDD  30AC               	dw	12460
   356  00FBDF  26D9               	dw	9945
   357  00FBE1  003A               	dw	58
   358  00FBE3  51DE               	dw	20958
   359  00FBE5  5180               	dw	20864
   360  00FBE7  C8D7               	dw	51415
   361  00FBE9  6116               	dw	24854
   362  00FBEB  BFD0               	dw	49104
   363  00FBED  F4B5               	dw	62645
   364  00FBEF  21B4               	dw	8628
   365  00FBF1  C423               	dw	50211
   366  00FBF3  56B3               	dw	22195
   367  00FBF5  9599               	dw	38297
   368  00FBF7  CFBA               	dw	53178
   369  00FBF9  A50F               	dw	42255
   370  00FBFB  B8BD               	dw	47293
   371  00FBFD  B89E               	dw	47262
   372  00FBFF  2802               	dw	10242
   373  00FC01  8808               	dw	34824
   374  00FC03  5F05               	dw	24325
   375  00FC05  D9B2               	dw	55730
   376  00FC07  C60C               	dw	50700
   377  00FC09  E924               	dw	59684
   378  00FC0B  B10B               	dw	45323
   379  00FC0D  7C87               	dw	31879
   380  00FC0F  2F6F               	dw	12143
   381  00FC11  4C11               	dw	19473
   382  00FC13  5868               	dw	22632
   383  00FC15  1DAB               	dw	7595
   384  00FC17  C161               	dw	49505
   385  00FC19  2D3D               	dw	11581
   386  00FC1B  B666               	dw	46694
   387  00FC1D  4190               	dw	16784
   388  00FC1F  76DC               	dw	30428
   389  00FC21  7106               	dw	28934
   390  00FC23  01DB               	dw	475
   391  00FC25  20BC               	dw	8380
   392  00FC27  98D2               	dw	39122
   393  00FC29  102A               	dw	4138
   394  00FC2B  EFD5               	dw	61397
   395  00FC2D  8589               	dw	34185
   396  00FC2F  71B1               	dw	29105
   397  00FC31  B51F               	dw	46367
   398  00FC33  06B6               	dw	1718
   399  00FC35  E4A5               	dw	58533
   400  00FC37  9FBF               	dw	40895
   401  00FC39  D433               	dw	54323
   402  00FC3B  E8B8               	dw	59576
   403  00FC3D  C9A2               	dw	51618
   404  00FC3F  7807               	dw	30727
   405  00FC41  F934               	dw	63796
   406  00FC43  0F00               	dw	3840
   407  00FC45  A88E               	dw	43150
   408  00FC47  9609               	dw	38409
   409  00FC49  9818               	dw	38936
   410  00FC4B  E10E               	dw	57614
   411  00FC4D  0DBB               	dw	3515
   412  00FC4F  7F6A               	dw	32618
   413  00FC51  3D2D               	dw	15661
   414  00FC53  086D               	dw	2157
   415  00FC55  6C97               	dw	27799
   416  00FC57  9164               	dw	37220
   417  00FC59  5C01               	dw	23553
   418  00FC5B  E663               	dw	58979
   419  00FC5D  51F4               	dw	20980
   420  00FC5F  6B6B               	dw	27499
   421  00FC61  6162               	dw	24930
   422  00FC63  1C6C               	dw	7276
   423  00FC65  30D8               	dw	12504
   424  00FC67  8565               	dw	34149
   425  00FC69  004E               	dw	78
   426  00FC6B  F262               	dw	62050
   427  00FC6D  95ED               	dw	38381
   428  00FC6F  6C06               	dw	27654
   429  00FC71  A57B               	dw	42363
   430  00FC73  1B01               	dw	6913
   431  00FC75  F4C1               	dw	62657
   432  00FC77  8208               	dw	33288
   433  00FC79  C457               	dw	50263
   434  00FC7B  F50F               	dw	62735
   435  00FC7D  D9C6               	dw	55750
   436  00FC7F  65B0               	dw	26032
   437  00FC81  E950               	dw	59728
   438  00FC83  12B7               	dw	4791
   439  00FC85  B8EA               	dw	47338
   440  00FC87  8BBE               	dw	35774
   441  00FC89  887C               	dw	34940
   442  00FC8B  FCB9               	dw	64697
   443  00FC8D  1DDF               	dw	7647
   444  00FC8F  62DD               	dw	25309
   445  00FC91  2D49               	dw	11593
   446  00FC93  15DA               	dw	5594
   447  00FC95  7CF3               	dw	31987
   448  00FC97  8CD3               	dw	36051
   449  00FC99  4C65               	dw	19557
   450  00FC9B  FBD4               	dw	64468
   451  00FC9D  6158               	dw	24920
   452  00FC9F  4DB2               	dw	19890
   453  00FCA1  51CE               	dw	20942
   454  00FCA3  3AB5               	dw	15029
   455  00FCA5  0074               	dw	116
   456  00FCA7  A3BC               	dw	41916
   457  00FCA9  30E2               	dw	12514
   458  00FCAB  D4BB               	dw	54459
   459  00FCAD  A541               	dw	42305
   460  00FCAF  4ADF               	dw	19167
   461  00FCB1  95D7               	dw	38359
   462  00FCB3  3DD8               	dw	15832
   463  00FCB5  C46D               	dw	50285
   464  00FCB7  A4D1               	dw	42193
   465  00FCB9  F4FB               	dw	62715
   466  00FCBB  D3D6               	dw	54230
   467  00FCBD  E96A               	dw	59754
   468  00FCBF  4369               	dw	17257
   469  00FCC1  D9FC               	dw	55804
   470  00FCC3  346E               	dw	13422
   471  00FCC5  8846               	dw	34886
   472  00FCC7  AD67               	dw	44391
   473  00FCC9  B8D0               	dw	47312
   474  00FCCB  DA60               	dw	55904
   475  00FCCD  2D73               	dw	11635
   476  00FCCF  4404               	dw	17412
   477  00FCD1  1DE5               	dw	7653
   478  00FCD3  3303               	dw	13059
   479  00FCD5  4C5F               	dw	19551
   480  00FCD7  AA0A               	dw	43530
   481  00FCD9  7CC9               	dw	31945
   482  00FCDB  DD0D               	dw	56589
   483  00FCDD  713C               	dw	28988
   484  00FCDF  5005               	dw	20485
   485  00FCE1  41AA               	dw	16810
   486  00FCE3  2702               	dw	9986
   487  00FCE5  1010               	dw	4112
   488  00FCE7  BE0B               	dw	48651
   489  00FCE9  2086               	dw	8326
   490  00FCEB  C90C               	dw	51468
   491  00FCED  B525               	dw	46373
   492  00FCEF  5768               	dw	22376
   493  00FCF1  85B3               	dw	34227
   494  00FCF3  206F               	dw	8303
   495  00FCF5  D409               	dw	54281
   496  00FCF7  B966               	dw	47462
   497  00FCF9  E49F               	dw	58527
   498  00FCFB  CE61               	dw	52833
   499  00FCFD  F90E               	dw	63758
   500  00FCFF  5EDE               	dw	24286
   501  00FD01  C998               	dw	51608
   502  00FD03  29D9               	dw	10713
   503  00FD05  9822               	dw	38946
   504  00FD07  B0D0               	dw	45264
   505  00FD09  A8B4               	dw	43188
   506  00FD0B  C7D7               	dw	51159
   507  00FD0D  3D17               	dw	15639
   508  00FD0F  59B3               	dw	22963
   509  00FD11  0D81               	dw	3457
   510  00FD13  2EB4               	dw	11956
   511  00FD15  5C3B               	dw	23611
   512  00FD17  B7BD               	dw	47037
   513  00FD19  6CAD               	dw	27821
   514  00FD1B  C0BA               	dw	49338
   515  00FD1D  8320               	dw	33568
   516  00FD1F  EDB8               	dw	60856
   517  00FD21  B3B6               	dw	46006
   518  00FD23  9ABF               	dw	39615
   519  00FD25  E20C               	dw	57868
   520  00FD27  03B6               	dw	950
   521  00FD29  D29A               	dw	53914
   522  00FD2B  74B1               	dw	29873
   523  00FD2D  4739               	dw	18233
   524  00FD2F  EAD5               	dw	60117
   525  00FD31  77AF               	dw	30639
   526  00FD33  9DD2               	dw	40402
   527  00FD35  2615               	dw	9749
   528  00FD37  04DB               	dw	1243
   529  00FD39  1683               	dw	5763
   530  00FD3B  73DC               	dw	29660
   531  00FD3D  0B12               	dw	2834
   532  00FD3F  E363               	dw	58211
   533  00FD41  3B84               	dw	15236
   534  00FD43  9464               	dw	37988
   535  00FD45  6A3E               	dw	27198
   536  00FD47  0D6D               	dw	3437
   537  00FD49  5AA8               	dw	23208
   538  00FD4B  7A6A               	dw	31338
   539  00FD4D  CF0B               	dw	53003
   540  00FD4F  E40E               	dw	58382
   541  00FD51  FF9D               	dw	65437
   542  00FD53  9309               	dw	37641
   543  00FD55  AE27               	dw	44583
   544  00FD57  0A00               	dw	2560
   545  00FD59  9EB1               	dw	40625
   546  00FD5B  7D07               	dw	32007
   547  00FD5D  9344               	dw	37700
   548  00FD5F  F00F               	dw	61455
   549  00FD61  A3D2               	dw	41938
   550  00FD63  8708               	dw	34568
   551  00FD65  F268               	dw	62056
   552  00FD67  1E01               	dw	7681
   553  00FD69  C2FE               	dw	49918
   554  00FD6B  6906               	dw	26886
   555  00FD6D  575D               	dw	22365
   556  00FD6F  F762               	dw	63330
   557  00FD71  67CB               	dw	26571
   558  00FD73  8065               	dw	32869
   559  00FD75  3671               	dw	13937
   560  00FD77  196C               	dw	6508
   561  00FD79  06E7               	dw	1767
   562  00FD7B  6E6B               	dw	28267
   563  00FD7D  1B76               	dw	7030
   564  00FD7F  FED4               	dw	65236
   565  00FD81  2BE0               	dw	11232
   566  00FD83  89D3               	dw	35283
   567  00FD85  7A5A               	dw	31322
   568  00FD87  10DA               	dw	4314
   569  00FD89  4ACC               	dw	19148
   570  00FD8B  67DD               	dw	26589
   571  00FD8D  DF6F               	dw	57199
   572  00FD8F  F9B9               	dw	63929
   573  00FD91  EFF9               	dw	61433
   574  00FD93  8EBE               	dw	36542
   575  00FD95  BE43               	dw	48707
   576  00FD97  17B7               	dw	6071
   577  00FD99  8ED5               	dw	36565
   578  00FD9B  60B0               	dw	24752
   579  00FD9D  A3E8               	dw	41960
   580  00FD9F  D6D6               	dw	54998
   581  00FDA1  937E               	dw	37758
   582  00FDA3  A1D1               	dw	41425
   583  00FDA5  C2C4               	dw	49860
   584  00FDA7  38D8               	dw	14552
   585  00FDA9  F252               	dw	62034
   586  00FDAB  4FDF               	dw	20447
   587  00FDAD  67F1               	dw	26609
   588  00FDAF  D1BB               	dw	53691
   589  00FDB1  5767               	dw	22375
   590  00FDB3  A6BC               	dw	42684
   591  00FDB5  06DD               	dw	1757
   592  00FDB7  3FB5               	dw	16309
   593  00FDB9  364B               	dw	13899
   594  00FDBB  48B2               	dw	18610
   595  00FDBD  2BDA               	dw	11226
   596  00FDBF  D80D               	dw	55309
   597  00FDC1  1B4C               	dw	6988
   598  00FDC3  AF0A               	dw	44810
   599  00FDC5  4AF6               	dw	19190
   600  00FDC7  3603               	dw	13827
   601  00FDC9  7A60               	dw	31328
   602  00FDCB  4104               	dw	16644
   603  00FDCD  EFC3               	dw	61379
   604  00FDCF  DF60               	dw	57184
   605  00FDD1  DF55               	dw	57173
   606  00FDD3  A867               	dw	43111
   607  00FDD5  8EEF               	dw	36591
   608  00FDD7  316E               	dw	12654
   609  00FDD9  BE79               	dw	48761
   610  00FDDB  4669               	dw	18025
   611  00FDDD  B38C               	dw	45964
   612  00FDDF  CB61               	dw	52065
   613  00FDE1  831A               	dw	33562
   614  00FDE3  BC66               	dw	48230
   615  00FDE5  D2A0               	dw	53920
   616  00FDE7  256F               	dw	9583
   617  00FDE9  E236               	dw	57910
   618  00FDEB  5268               	dw	21096
   619  00FDED  7795               	dw	30613
   620  00FDEF  CC0C               	dw	52236
   621  00FDF1  4703               	dw	18179
   622  00FDF3  BB0B               	dw	47883
   623  00FDF5  16B9               	dw	5817
   624  00FDF7  2202               	dw	8706
   625  00FDF9  262F               	dw	9775
   626  00FDFB  5505               	dw	21765
   627  00FDFD  3BBE               	dw	15294
   628  00FDFF  C5BA               	dw	50618
   629  00FE01  0B28               	dw	2856
   630  00FE03  B2BD               	dw	45757
   631  00FE05  5A92               	dw	23186
   632  00FE07  2BB4               	dw	11188
   633  00FE09  6A04               	dw	27140
   634  00FE0B  5CB3               	dw	23731
   635  00FE0D  FFA7               	dw	65447
   636  00FE0F  C2D7               	dw	49879
   637  00FE11  CF31               	dw	53041
   638  00FE13  B5D0               	dw	46544
   639  00FE15  9E8B               	dw	40587
   640  00FE17  2CD9               	dw	11481
   641  00FE19  AE1D               	dw	44573
   642  00FE1B  5BDE               	dw	23518
   643  00FE1D  C2B0               	dw	49840
   644  00FE1F  9B64               	dw	39780
   645  00FE21  F226               	dw	61990
   646  00FE23  EC63               	dw	60515
   647  00FE25  A39C               	dw	41884
   648  00FE27  756A               	dw	30058
   649  00FE29  930A               	dw	37642
   650  00FE2B  026D               	dw	621
   651  00FE2D  06A9               	dw	1705
   652  00FE2F  9C09               	dw	39945
   653  00FE31  363F               	dw	13887
   654  00FE33  EB0E               	dw	60174
   655  00FE35  6785               	dw	26501
   656  00FE37  7207               	dw	29191
   657  00FE39  5713               	dw	22291
   658  00FE3B  0500               	dw	1280
   659  00FE3D  4A82               	dw	19074
   660  00FE3F  95BF               	dw	38335
   661  00FE41  7A14               	dw	31252
   662  00FE43  E2B8               	dw	58040
   663  00FE45  2BAE               	dw	11182
   664  00FE47  7BB1               	dw	31665
   665  00FE49  1B38               	dw	6968
   666  00FE4B  0CB6               	dw	3254
   667  00FE4D  8E9B               	dw	36507
   668  00FE4F  92D2               	dw	37586
   669  00FE51  BE0D               	dw	48653
   670  00FE53  E5D5               	dw	58837
   671  00FE55  EFB7               	dw	61367
   672  00FE57  7CDC               	dw	31964
   673  00FE59  DF21               	dw	57121
   674  00FE5B  0BDB               	dw	3035
   675  00FE5D  D2D4               	dw	53972
   676  00FE5F  86D3               	dw	34515
   677  00FE61  E242               	dw	57922
   678  00FE63  F1D4               	dw	61908
   679  00FE65  B3F8               	dw	46072
   680  00FE67  68DD               	dw	26845
   681  00FE69  836E               	dw	33646
   682  00FE6B  1FDA               	dw	8154
   683  00FE6D  16CD               	dw	5837
   684  00FE6F  81BE               	dw	33214
   685  00FE71  265B               	dw	9819
   686  00FE73  F6B9               	dw	63161
   687  00FE75  77E1               	dw	30689
   688  00FE77  6FB0               	dw	28592
   689  00FE79  4777               	dw	18295
   690  00FE7B  18B7               	dw	6327
   691  00FE7D  5AE6               	dw	23270
   692  00FE7F  8808               	dw	34824
   693  00FE81  6A70               	dw	27248
   694  00FE83  FF0F               	dw	65295
   695  00FE85  3BCA               	dw	15306
   696  00FE87  6606               	dw	26118
   697  00FE89  0B5C               	dw	2908
   698  00FE8B  1101               	dw	4353
   699  00FE8D  9EFF               	dw	40703
   700  00FE8F  8F65               	dw	36709
   701  00FE91  AE69               	dw	44649
   702  00FE93  F862               	dw	63586
   703  00FE95  FFD3               	dw	65491
   704  00FE97  616B               	dw	24939
   705  00FE99  CF45               	dw	53061
   706  00FE9B  166C               	dw	5740
   707  00FE9D  E278               	dw	57976
   708  00FE9F  A00A               	dw	40970
   709  00FEA1  D2EE               	dw	53998
   710  00FEA3  D70D               	dw	55053
   711  00FEA5  8354               	dw	33620
   712  00FEA7  4E04               	dw	19972
   713  00FEA9  B3C2               	dw	46018
   714  00FEAB  3903               	dw	14595
   715  00FEAD  2661               	dw	9825
   716  00FEAF  A767               	dw	42855
   717  00FEB1  16F7               	dw	5879
   718  00FEB3  D060               	dw	53344
   719  00FEB5  474D               	dw	18253
   720  00FEB7  4969               	dw	18793
   721  00FEB9  77DB               	dw	30683
   722  00FEBB  3E6E               	dw	15982
   723  00FEBD  6A4A               	dw	27210
   724  00FEBF  AED1               	dw	44753
   725  00FEC1  5ADC               	dw	23260
   726  00FEC3  D9D6               	dw	55766
   727  00FEC5  0B66               	dw	2918
   728  00FEC7  40DF               	dw	16607
   729  00FEC9  3BF0               	dw	15344
   730  00FECB  37D8               	dw	14296
   731  00FECD  AE53               	dw	44627
   732  00FECF  A9BC               	dw	43452
   733  00FED1  9EC5               	dw	40645
   734  00FED3  DEBB               	dw	57019
   735  00FED5  CF7F               	dw	53119
   736  00FED7  47B2               	dw	18354
   737  00FED9  FFE9               	dw	65513
   738  00FEDB  30B5               	dw	12469
   739  00FEDD  F21C               	dw	61980
   740  00FEDF  BDBD               	dw	48573
   741  00FEE1  C28A               	dw	49802
   742  00FEE3  CABA               	dw	51898
   743  00FEE5  9330               	dw	37680
   744  00FEE7  53B3               	dw	21427
   745  00FEE9  A3A6               	dw	41894
   746  00FEEB  24B4               	dw	9396
   747  00FEED  3605               	dw	13829
   748  00FEEF  BAD0               	dw	47824
   749  00FEF1  0693               	dw	1683
   750  00FEF3  CDD7               	dw	52695
   751  00FEF5  5729               	dw	22313
   752  00FEF7  54DE               	dw	21726
   753  00FEF9  67BF               	dw	26559
   754  00FEFB  23D9               	dw	9177
   755  00FEFD  7A2E               	dw	31278
   756  00FEFF  B366               	dw	45926
   757  00FF01  4AB8               	dw	19128
   758  00FF03  C461               	dw	50273
   759  00FF05  1B02               	dw	6914
   760  00FF07  5D68               	dw	23912
   761  00FF09  2B94               	dw	11156
   762  00FF0B  2A6F               	dw	10863
   763  00FF0D  BE37               	dw	48695
   764  00FF0F  B40B               	dw	46091
   765  00FF11  8EA1               	dw	36513
   766  00FF13  C30C               	dw	49932
   767  00FF15  DF1B               	dw	57115
   768  00FF17  5A05               	dw	23045
   769  00FF19  EF8D               	dw	61325
   770  00FF1B  2D02               	dw	11522
   771  00FF1D                     __end_of_crc32_table:
   772                           	opt stack 0
   773  00FF1D                     _InitConfigRegs:
   774                           	opt stack 0
   775  00FF1D  002E               	dw	46
   776  00FF1F  0284               	dw	644
   777  00FF21  0401               	dw	1025
   778  00FF23  0601               	dw	1537
   779  00FF25  080C               	dw	2060
   780  00FF27  0AC1               	dw	2753
   781  00FF29  0C77               	dw	3191
   782  00FF2B  0E64               	dw	3684
   783  00FF2D  1032               	dw	4146
   784  00FF2F  1200               	dw	4608
   785  00FF31  1400               	dw	5120
   786  00FF33  1600               	dw	5632
   787  00FF35  1838               	dw	6200
   788  00FF37  1AC8               	dw	6856
   789  00FF39  1C0D               	dw	7181
   790  00FF3B  1E00               	dw	7680
   791  00FF3D  20FF               	dw	8447
   792  00FF3F  2238               	dw	8760
   793  00FF41  2438               	dw	9272
   794  00FF43  2607               	dw	9735
   795  00FF45  2800               	dw	10240
   796  00FF47  2A00               	dw	10752
   797  00FF49  2C69               	dw	11369
   798  00FF4B  2E81               	dw	11905
   799  00FF4D  307E               	dw	12414
   800  00FF4F  3296               	dw	12950
   801  00FF51  34F8               	dw	13560
   802  00FF53  3688               	dw	13960
   803  00FF55  3840               	dw	14400
   804  00FF57  3A00               	dw	14848
   805  00FF59  3CE8               	dw	15592
   806  00FF5B  3E00               	dw	15872
   807  00FF5D                     __end_of_InitConfigRegs:
   808                           	opt stack 0
   809  00FF5D                     _PVALUE:
   810                           	opt stack 0
   811  00FF5D  54                 	db	84
   812  00FF5E  54                 	db	84
   813  00FF5F  54                 	db	84
   814  00FF60  54                 	db	84
   815  00FF61  54                 	db	84
   816  00FF62  54                 	db	84
   817  00FF63  54                 	db	84
   818  00FF64  54                 	db	84
   819  00FF65  54                 	db	84
   820  00FF66  54                 	db	84
   821  00FF67  54                 	db	84
   822  00FF68  54                 	db	84
   823  00FF69  54                 	db	84
   824  00FF6A  54                 	db	84
   825  00FF6B  55                 	db	85
   826  00FF6C  55                 	db	85
   827  00FF6D  55                 	db	85
   828  00FF6E  55                 	db	85
   829  00FF6F  55                 	db	85
   830  00FF70  55                 	db	85
   831  00FF71  55                 	db	85
   832  00FF72  55                 	db	85
   833  00FF73  55                 	db	85
   834  00FF74  55                 	db	85
   835  00FF75  55                 	db	85
   836  00FF76  55                 	db	85
   837  00FF77  55                 	db	85
   838  00FF78  55                 	db	85
   839  00FF79  55                 	db	85
   840  00FF7A  55                 	db	85
   841  00FF7B  55                 	db	85
   842  00FF7C  55                 	db	85
   843  00FF7D                     __end_of_PVALUE:
   844                           	opt stack 0
   845  00FF7D                     _SVALUE:
   846                           	opt stack 0
   847  00FF7D  2D                 	db	45
   848  00FF7E  30                 	db	48
   849  00FF7F  33                 	db	51
   850  00FF80  35                 	db	53
   851  00FF81  38                 	db	56
   852  00FF82  3B                 	db	59
   853  00FF83  3E                 	db	62
   854  00FF84  41                 	db	65
   855  00FF85  43                 	db	67
   856  00FF86  46                 	db	70
   857  00FF87  49                 	db	73
   858  00FF88  4C                 	db	76
   859  00FF89  4F                 	db	79
   860  00FF8A  51                 	db	81
   861  00FF8B  09                 	db	9
   862  00FF8C  0C                 	db	12
   863  00FF8D  0F                 	db	15
   864  00FF8E  12                 	db	18
   865  00FF8F  15                 	db	21
   866  00FF90  17                 	db	23
   867  00FF91  1A                 	db	26
   868  00FF92  1D                 	db	29
   869  00FF93  20                 	db	32
   870  00FF94  23                 	db	35
   871  00FF95  25                 	db	37
   872  00FF96  28                 	db	40
   873  00FF97  2B                 	db	43
   874  00FF98  2E                 	db	46
   875  00FF99  31                 	db	49
   876  00FF9A  33                 	db	51
   877  00FF9B  36                 	db	54
   878  00FF9C  39                 	db	57
   879  00FF9D                     __end_of_SVALUE:
   880                           	opt stack 0
   881  00FF9D                     _hexpowers:
   882                           	opt stack 0
   883  00FF9D  0001               	dw	1
   884  00FF9F  0010               	dw	16
   885  00FFA1  0100               	dw	256
   886  00FFA3  1000               	dw	4096
   887  00FFA5                     __end_of_hexpowers:
   888                           	opt stack 0
   889  00FFA5                     isBroadcastAddress@F537:
   890                           	opt stack 0
   891  00FFA5  FF                 	db	255
   892  00FFA6  FF                 	db	255
   893  00FFA7  FF                 	db	255
   894  00FFA8  FF                 	db	255
   895  00FFA9  FF                 	db	255
   896  00FFAA  FF                 	db	255
   897  00FFAB  FF                 	db	255
   898  00FFAC  FF                 	db	255
   899  00FFAD                     __end_ofisBroadcastAddress@F537:
   900                           	opt stack 0
   901  00FFAD                     _mySecurityKey:
   902                           	opt stack 0
   903  00FFAD  00                 	db	0
   904  00FFAE  01                 	db	1
   905  00FFAF  02                 	db	2
   906  00FFB0  03                 	db	3
   907  00FFB1  04                 	db	4
   908  00FFB2  05                 	db	5
   909  00FFB3  06                 	db	6
   910  00FFB4  07                 	db	7
   911  00FFB5                     __end_of_mySecurityKey:
   912                           	opt stack 0
   913  0000                     _PPSCONbits	set	3839
   914  0000                     _RPINR1	set	3815
   915  0000                     _RPINR21	set	3835
   916  0000                     _RPOR19	set	3801
   917  0000                     _RPOR21	set	3803
   918  0000                     _ANCON0	set	3912
   919  0000                     _ANCON1	set	3913
   920  0000                     _TMR0	set	4054
   921  0000                     _EECON2	set	4007
   922  0000                     _INTCON2bits	set	4081
   923  0000                     _INTCON3bits	set	4080
   924  0000                     _INTCONbits	set	4082
   925  0000                     _LATAbits	set	3977
   926  0000                     _LATCbits	set	3979
   927  0000                     _LATDbits	set	3980
   928  0000                     _LATEbits	set	3981
   929  0000                     _OSCCON	set	4051
   930  0000                     _OSCTUNEbits	set	3995
   931  0000                     _PIR1bits	set	3998
   932  0000                     _PIR3bits	set	4004
   933  0000                     _PORTBbits	set	3969
   934  0000                     _SSP1CON1	set	4038
   935  0000                     _SSP1STAT	set	4039
   936  0000                     _SSP2BUF	set	3957
   937  0000                     _SSP2CON1	set	3954
   938  0000                     _SSP2CON1bits	set	3954
   939  0000                     _SSP2STAT	set	3955
   940  0000                     _SSPBUF	set	4041
   941  0000                     _SSPCON1bits	set	4038
   942  0000                     _T0CON	set	4053
   943  0000                     _T0CONbits	set	4053
   944  0000                     _TMR0H	set	4055
   945  0000                     _TMR0L	set	4054
   946  0000                     _TRISAbits	set	3986
   947  0000                     _TRISBbits	set	3987
   948  0000                     _TRISCbits	set	3988
   949  0000                     _TRISDbits	set	3989
   950  0000                     _TRISEbits	set	3990
   951  0000                     _WDTCONbits	set	4032
   952  0000                     _GIE	set	32663
   953  00FFB5                     STR_3:
   954  00FFB5  20                 	db	32
   955  00FFB6  6F                 	db	111	;'o'
   956  00FFB7  3A                 	db	58	;':'
   957  00FFB8  25                 	db	37
   958  00FFB9  30                 	db	48	;'0'
   959  00FFBA  34                 	db	52	;'4'
   960  00FFBB  58                 	db	88	;'X'
   961  00FFBC  3D                 	db	61	;'='
   962  00FFBD  25                 	db	37
   963  00FFBE  30                 	db	48	;'0'
   964  00FFBF  32                 	db	50	;'2'
   965  00FFC0  58                 	db	88	;'X'
   966  00FFC1  20                 	db	32
   967  00FFC2  20                 	db	32
   968  00FFC3  20                 	db	32
   969  00FFC4  20                 	db	32
   970  00FFC5  20                 	db	32
   971  00FFC6  20                 	db	32
   972  00FFC7  20                 	db	32
   973  00FFC8  20                 	db	32
   974  00FFC9  20                 	db	32
   975  00FFCA  20                 	db	32
   976  00FFCB  00                 	db	0
   977  00FFCC                     STR_2:
   978  00FFCC  20                 	db	32
   979  00FFCD  69                 	db	105	;'i'
   980  00FFCE  3A                 	db	58	;':'
   981  00FFCF  25                 	db	37
   982  00FFD0  30                 	db	48	;'0'
   983  00FFD1  34                 	db	52	;'4'
   984  00FFD2  58                 	db	88	;'X'
   985  00FFD3  3D                 	db	61	;'='
   986  00FFD4  25                 	db	37
   987  00FFD5  30                 	db	48	;'0'
   988  00FFD6  32                 	db	50	;'2'
   989  00FFD7  58                 	db	88	;'X'
   990  00FFD8  20                 	db	32
   991  00FFD9  20                 	db	32
   992  00FFDA  20                 	db	32
   993  00FFDB  20                 	db	32
   994  00FFDC  20                 	db	32
   995  00FFDD  20                 	db	32
   996  00FFDE  00                 	db	0
   997  00FFDF                     STR_4:
   998  00FFDF  30                 	db	48	;'0'
   999  00FFE0  31                 	db	49	;'1'
  1000  00FFE1  32                 	db	50	;'2'
  1001  00FFE2  33                 	db	51	;'3'
  1002  00FFE3  34                 	db	52	;'4'
  1003  00FFE4  35                 	db	53	;'5'
  1004  00FFE5  36                 	db	54	;'6'
  1005  00FFE6  37                 	db	55	;'7'
  1006  00FFE7  38                 	db	56	;'8'
  1007  00FFE8  39                 	db	57	;'9'
  1008  00FFE9  41                 	db	65	;'A'
  1009  00FFEA  42                 	db	66	;'B'
  1010  00FFEB  43                 	db	67	;'C'
  1011  00FFEC  44                 	db	68	;'D'
  1012  00FFED  45                 	db	69	;'E'
  1013  00FFEE  46                 	db	70	;'F'
  1014  00FFEF  00                 	db	0
  1015  00FFF0                     STR_1:
  1016  00FFF0  63                 	db	99	;'c'
  1017  00FFF1  3A                 	db	58	;':'
  1018  00FFF2  25                 	db	37
  1019  00FFF3  30                 	db	48	;'0'
  1020  00FFF4  34                 	db	52	;'4'
  1021  00FFF5  58                 	db	88	;'X'
  1022  00FFF6  00                 	db	0
  1023                           
  1024                           ; #config settings
  1025  00FFF7  00                 	db	0	; dummy byte at the end
  1026  0000                     
  1027                           	psect	cinit
  1028  00536A                     __pcinit:
  1029                           	opt stack 0
  1030  00536A                     start_initialization:
  1031                           	opt stack 0
  1032  00536A                     __initialization:
  1033                           	opt stack 0
  1034                           
  1035                           ; Initialize objects allocated to BANK1 (17 bytes)
  1036                           ; load TBLPTR registers with __pidataBANK1
  1037  00536A  0E32               	movlw	low __pidataBANK1
  1038  00536C  6EF6               	movwf	tblptrl,c
  1039  00536E  0E75               	movlw	high __pidataBANK1
  1040  005370  6EF7               	movwf	tblptrh,c
  1041  005372  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1042  005374  6EF8               	movwf	tblptru,c
  1043  005376  EE01  F0EF         	lfsr	0,__pdataBANK1
  1044  00537A  EE10 F011          	lfsr	1,17
  1045  00537E                     copy_data0:
  1046  00537E  0009               	tblrd		*+
  1047  005380  CFF5 FFEE          	movff	tablat,postinc0
  1048  005384  50E5               	movf	postdec1,w,c
  1049  005386  50E1               	movf	fsr1l,w,c
  1050  005388  E1FA               	bnz	copy_data0
  1051                           
  1052                           ; Initialize objects allocated to COMRAM (10 bytes)
  1053                           ; load TBLPTR registers with __pidataCOMRAM
  1054  00538A  0E9A               	movlw	low __pidataCOMRAM
  1055  00538C  6EF6               	movwf	tblptrl,c
  1056  00538E  0E75               	movlw	high __pidataCOMRAM
  1057  005390  6EF7               	movwf	tblptrh,c
  1058  005392  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1059  005394  6EF8               	movwf	tblptru,c
  1060  005396  EE00  F045         	lfsr	0,__pdataCOMRAM
  1061  00539A  EE10 F00A          	lfsr	1,10
  1062  00539E                     copy_data1:
  1063  00539E  0009               	tblrd		*+
  1064  0053A0  CFF5 FFEE          	movff	tablat,postinc0
  1065  0053A4  50E5               	movf	postdec1,w,c
  1066  0053A6  50E1               	movf	fsr1l,w,c
  1067  0053A8  E1FA               	bnz	copy_data1
  1068                           
  1069                           ; Clear objects allocated to BIGRAM (804 bytes)
  1070  0053AA  EE09  F04B         	lfsr	0,__pbssBIGRAM
  1071  0053AE  EE13 F024          	lfsr	1,804
  1072  0053B2                     clear_0:
  1073  0053B2  6AEE               	clrf	postinc0,c
  1074  0053B4  50E5               	movf	postdec1,w,c
  1075  0053B6  50E1               	movf	fsr1l,w,c
  1076  0053B8  E1FC               	bnz	clear_0
  1077  0053BA  50E2               	movf	fsr1h,w,c
  1078  0053BC  E1FA               	bnz	clear_0
  1079                           
  1080                           ; Clear objects allocated to BANK9 (75 bytes)
  1081  0053BE  EE09  F000         	lfsr	0,__pbssBANK9
  1082  0053C2  0E4B               	movlw	75
  1083  0053C4                     clear_1:
  1084  0053C4  6AEE               	clrf	postinc0,c
  1085  0053C6  06E8               	decf	wreg,f,c
  1086  0053C8  E1FD               	bnz	clear_1
  1087                           
  1088                           ; Clear objects allocated to BANK8 (220 bytes)
  1089  0053CA  EE08  F000         	lfsr	0,__pbssBANK8
  1090  0053CE  0EDC               	movlw	220
  1091  0053D0                     clear_2:
  1092  0053D0  6AEE               	clrf	postinc0,c
  1093  0053D2  06E8               	decf	wreg,f,c
  1094  0053D4  E1FD               	bnz	clear_2
  1095                           
  1096                           ; Clear objects allocated to BANK7 (200 bytes)
  1097  0053D6  EE07  F000         	lfsr	0,__pbssBANK7
  1098  0053DA  0EC8               	movlw	200
  1099  0053DC                     clear_3:
  1100  0053DC  6AEE               	clrf	postinc0,c
  1101  0053DE  06E8               	decf	wreg,f,c
  1102  0053E0  E1FD               	bnz	clear_3
  1103                           
  1104                           ; Clear objects allocated to BANK6 (206 bytes)
  1105  0053E2  EE06  F000         	lfsr	0,__pbssBANK6
  1106  0053E6  0ECE               	movlw	206
  1107  0053E8                     clear_4:
  1108  0053E8  6AEE               	clrf	postinc0,c
  1109  0053EA  06E8               	decf	wreg,f,c
  1110  0053EC  E1FD               	bnz	clear_4
  1111                           
  1112                           ; Clear objects allocated to BANK5 (220 bytes)
  1113  0053EE  EE05  F000         	lfsr	0,__pbssBANK5
  1114  0053F2  0EDC               	movlw	220
  1115  0053F4                     clear_5:
  1116  0053F4  6AEE               	clrf	postinc0,c
  1117  0053F6  06E8               	decf	wreg,f,c
  1118  0053F8  E1FD               	bnz	clear_5
  1119                           
  1120                           ; Clear objects allocated to BANK4 (210 bytes)
  1121  0053FA  EE04  F000         	lfsr	0,__pbssBANK4
  1122  0053FE  0ED2               	movlw	210
  1123  005400                     clear_6:
  1124  005400  6AEE               	clrf	postinc0,c
  1125  005402  06E8               	decf	wreg,f,c
  1126  005404  E1FD               	bnz	clear_6
  1127                           
  1128                           ; Clear objects allocated to BANK3 (207 bytes)
  1129  005406  EE03  F000         	lfsr	0,__pbssBANK3
  1130  00540A  0ECF               	movlw	207
  1131  00540C                     clear_7:
  1132  00540C  6AEE               	clrf	postinc0,c
  1133  00540E  06E8               	decf	wreg,f,c
  1134  005410  E1FD               	bnz	clear_7
  1135                           
  1136                           ; Clear objects allocated to BANK2 (216 bytes)
  1137  005412  EE02  F000         	lfsr	0,__pbssBANK2
  1138  005416  0ED8               	movlw	216
  1139  005418                     clear_8:
  1140  005418  6AEE               	clrf	postinc0,c
  1141  00541A  06E8               	decf	wreg,f,c
  1142  00541C  E1FD               	bnz	clear_8
  1143                           
  1144                           ; Clear objects allocated to BANK1 (97 bytes)
  1145  00541E  EE01  F08E         	lfsr	0,__pbssBANK1
  1146  005422  0E61               	movlw	97
  1147  005424                     clear_9:
  1148  005424  6AEE               	clrf	postinc0,c
  1149  005426  06E8               	decf	wreg,f,c
  1150  005428  E1FD               	bnz	clear_9
  1151                           
  1152                           ; Clear objects allocated to BANK0 (4 bytes)
  1153  00542A  0100               	movlb	0
  1154  00542C  6BEC               	clrf	(__pbssBANK0+3)& (0+255),b
  1155  00542E  6BEB               	clrf	(__pbssBANK0+2)& (0+255),b
  1156  005430  6BEA               	clrf	(__pbssBANK0+1)& (0+255),b
  1157  005432  6BE9               	clrf	__pbssBANK0& (0+255),b
  1158                           
  1159                           ; Clear objects allocated to COMRAM (15 bytes)
  1160  005434  EE00  F036         	lfsr	0,__pbssCOMRAM
  1161  005438  0E0F               	movlw	15
  1162  00543A                     clear_10:
  1163  00543A  6AEE               	clrf	postinc0,c
  1164  00543C  06E8               	decf	wreg,f,c
  1165  00543E  E1FD               	bnz	clear_10
  1166  005440                     end_of_initialization:
  1167                           	opt stack 0
  1168  005440                     __end_of__initialization:
  1169                           	opt stack 0
  1170  005440  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1171  005442  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1172  005444  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1173  005446  6EF8               	movwf	tblptru,c
  1174  005448  0100               	movlb	0
  1175  00544A  EF85  F01D         	goto	_main	;jump to C main() function
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1h	equ	0xFE2
  1184                           fsr1l	equ	0xFE1
  1185                           
  1186                           	psect	bssCOMRAM
  1187  000036                     __pbssCOMRAM:
  1188                           	opt stack 0
  1189  000036                     _MACInitParams:
  1190                           	opt stack 0
  1191  000036                     	ds	3
  1192  000039                     _sleepRFDBufferCount:
  1193                           	opt stack 0
  1194  000039                     	ds	2
  1195  00003B                     ButtonTask@pS0:
  1196                           	opt stack 0
  1197  00003B                     	ds	1
  1198  00003C                     ButtonTask@pS1:
  1199                           	opt stack 0
  1200  00003C                     	ds	1
  1201  00003D                     _IRQ1_Received:
  1202                           	opt stack 0
  1203  00003D                     	ds	1
  1204  00003E                     _ReceivedBankIndex:
  1205                           	opt stack 0
  1206  00003E                     	ds	1
  1207  00003F                     _TMState:
  1208                           	opt stack 0
  1209  00003F                     	ds	1
  1210  000040                     _TxIndex:
  1211                           	opt stack 0
  1212  000040                     	ds	1
  1213  000041                     _hasAck:
  1214                           	opt stack 0
  1215  000041                     	ds	1
  1216  000042                     _justEvictedParent:
  1217                           	opt stack 0
  1218  000042                     	ds	1
  1219  000043                     _lcdInitialized:
  1220                           	opt stack 0
  1221  000043                     	ds	1
  1222  000044                     _t1fired:
  1223                           	opt stack 0
  1224  000044                     	ds	1
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec1	equ	0xFE5
  1232                           fsr1h	equ	0xFE2
  1233                           fsr1l	equ	0xFE1
  1234                           
  1235                           	psect	dataCOMRAM
  1236  000045                     __pdataCOMRAM:
  1237                           	opt stack 0
  1238  000045                     _w:
  1239                           	opt stack 0
  1240  000045                     	ds	4
  1241  000049                     _y:
  1242                           	opt stack 0
  1243  000049                     	ds	4
  1244  00004D                     _myPANID:
  1245                           	opt stack 0
  1246  00004D                     	ds	2
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           postdec1	equ	0xFE5
  1254                           fsr1h	equ	0xFE2
  1255                           fsr1l	equ	0xFE1
  1256                           
  1257                           	psect	bssBANK0
  1258  0000E9                     __pbssBANK0:
  1259                           	opt stack 0
  1260  0000E9                     _devBuffers:
  1261                           	opt stack 0
  1262  0000E9                     	ds	2
  1263  0000EB                     _routingTableActive:
  1264                           	opt stack 0
  1265  0000EB                     	ds	2
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1h	equ	0xFE2
  1274                           fsr1l	equ	0xFE1
  1275                           
  1276                           	psect	bssBANK1
  1277  00018E                     __pbssBANK1:
  1278                           	opt stack 0
  1279  00018E                     _c:
  1280                           	opt stack 0
  1281  00018E                     	ds	4
  1282  000192                     _currentInterval:
  1283                           	opt stack 0
  1284  000192                     	ds	4
  1285  000196                     _currentTime:
  1286                           	opt stack 0
  1287  000196                     	ds	4
  1288  00019A                     _intervalDelay:
  1289                           	opt stack 0
  1290  00019A                     	ds	4
  1291  00019E                     _t1extension:
  1292                           	opt stack 0
  1293  00019E                     	ds	4
  1294  0001A2                     LEDManagerTask@lNextState:
  1295                           	opt stack 0
  1296  0001A2                     	ds	3
  1297  0001A5                     _LEDCmd:
  1298                           	opt stack 0
  1299  0001A5                     	ds	3
  1300  0001A8                     _LEDState:
  1301                           	opt stack 0
  1302  0001A8                     	ds	3
  1303  0001AB                     _linkEstSeq:
  1304                           	opt stack 0
  1305  0001AB                     	ds	2
  1306  0001AD                     _pcnt1:
  1307                           	opt stack 0
  1308  0001AD                     	ds	2
  1309  0001AF                     _prevSentIdx:
  1310                           	opt stack 0
  1311  0001AF                     	ds	2
  1312  0001B1                     _sleepRFDMaxBufferLen:
  1313                           	opt stack 0
  1314  0001B1                     	ds	2
  1315  0001B3                     _sleepRFDTotalBufferLen:
  1316                           	opt stack 0
  1317  0001B3                     	ds	2
  1318  0001B5                     ButtonTask@s0Count:
  1319                           	opt stack 0
  1320  0001B5                     	ds	1
  1321  0001B6                     ButtonTask@s1Count:
  1322                           	opt stack 0
  1323  0001B6                     	ds	1
  1324  0001B7                     _BMState:
  1325                           	opt stack 0
  1326  0001B7                     	ds	1
  1327  0001B8                     _MACSeq:
  1328                           	opt stack 0
  1329  0001B8                     	ds	1
  1330  0001B9                     _NetSeq:
  1331                           	opt stack 0
  1332  0001B9                     	ds	1
  1333  0001BA                     _RF_Mode:
  1334                           	opt stack 0
  1335  0001BA                     	ds	1
  1336  0001BB                     _RSSILock:
  1337                           	opt stack 0
  1338  0001BB                     	ds	1
  1339  0001BC                     _RSSIVal:
  1340                           	opt stack 0
  1341  0001BC                     	ds	1
  1342  0001BD                     _RouteMgrUpdateRequired:
  1343                           	opt stack 0
  1344  0001BD                     	ds	1
  1345  0001BE                     _TxData:
  1346                           	opt stack 0
  1347  0001BE                     	ds	1
  1348  0001BF                     _TxMACSeq:
  1349                           	opt stack 0
  1350  0001BF                     	ds	1
  1351  0001C0                     _UserMessageAvailable:
  1352                           	opt stack 0
  1353  0001C0                     	ds	1
  1354  0001C1                     _isNetworkTrafficSecure:
  1355                           	opt stack 0
  1356  0001C1                     	ds	1
  1357  0001C2                     _myDeviceType:
  1358                           	opt stack 0
  1359  0001C2                     	ds	1
  1360  0001C3                     _nState:
  1361                           	opt stack 0
  1362  0001C3                     	ds	1
  1363  0001C4                     _netSequenceNumber:
  1364                           	opt stack 0
  1365  0001C4                     	ds	1
  1366  0001C5                     _nst:
  1367                           	opt stack 0
  1368  0001C5                     	ds	1
  1369  0001C6                     _switches:
  1370                           	opt stack 0
  1371  0001C6                     	ds	1
  1372  0001C7                     _userDataAvailable:
  1373                           	opt stack 0
  1374  0001C7                     	ds	1
  1375  0001C8                     _MACRxPacket:
  1376                           	opt stack 0
  1377  0001C8                     	ds	12
  1378  0001D4                     _routeInfo:
  1379                           	opt stack 0
  1380  0001D4                     	ds	7
  1381  0001DB                     _tmpBlock:
  1382                           	opt stack 0
  1383  0001DB                     	ds	4
  1384  0001DF                     CoordinatorGenericAddress@address:
  1385                           	opt stack 0
  1386  0001DF                     	ds	2
  1387  0001E1                     _CoordinatorAddr:
  1388                           	opt stack 0
  1389  0001E1                     	ds	2
  1390  0001E3                     _NewBestParent:
  1391                           	opt stack 0
  1392  0001E3                     	ds	2
  1393  0001E5                     _lastSource:
  1394                           	opt stack 0
  1395  0001E5                     	ds	2
  1396  0001E7                     _myAddr:
  1397                           	opt stack 0
  1398  0001E7                     	ds	2
  1399  0001E9                     _srcAddress:
  1400                           	opt stack 0
  1401  0001E9                     	ds	2
  1402  0001EB                     radioBroadcast@addr:
  1403                           	opt stack 0
  1404  0001EB                     	ds	2
  1405  0001ED                     radioUnicast@addr:
  1406                           	opt stack 0
  1407  0001ED                     	ds	2
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1h	equ	0xFE2
  1416                           fsr1l	equ	0xFE1
  1417                           
  1418                           	psect	dataBANK1
  1419  0001EF                     __pdataBANK1:
  1420                           	opt stack 0
  1421  0001EF                     _x:
  1422                           	opt stack 0
  1423  0001EF                     	ds	4
  1424  0001F3                     _z:
  1425                           	opt stack 0
  1426  0001F3                     	ds	4
  1427  0001F7                     _DEVPanID:
  1428                           	opt stack 0
  1429  0001F7                     	ds	2
  1430  0001F9                     _DeviceType:
  1431                           	opt stack 0
  1432  0001F9                     	ds	1
  1433  0001FA                     _addressLen:
  1434                           	opt stack 0
  1435  0001FA                     	ds	1
  1436  0001FB                     _currentChannel:
  1437                           	opt stack 0
  1438  0001FB                     	ds	1
  1439  0001FC                     _MyAddress:
  1440                           	opt stack 0
  1441  0001FC                     	ds	2
  1442  0001FE                     _myLongAddress:
  1443                           	opt stack 0
  1444  0001FE                     	ds	2
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           postinc0	equ	0xFEE
  1450                           wreg	equ	0xFE8
  1451                           postdec1	equ	0xFE5
  1452                           fsr1h	equ	0xFE2
  1453                           fsr1l	equ	0xFE1
  1454                           
  1455                           	psect	bssBANK2
  1456  000200                     __pbssBANK2:
  1457                           	opt stack 0
  1458  000200                     LEDManagerTask@tStart:
  1459                           	opt stack 0
  1460  000200                     	ds	12
  1461  00020C                     NetworkManagerTask@tStart:
  1462                           	opt stack 0
  1463  00020C                     	ds	8
  1464  000214                     _tInterval:
  1465                           	opt stack 0
  1466  000214                     	ds	8
  1467  00021C                     _tRouteMgr:
  1468                           	opt stack 0
  1469  00021C                     	ds	8
  1470  000224                     MiApp_MessageAvailable@tStart:
  1471                           	opt stack 0
  1472  000224                     	ds	4
  1473  000228                     NetworkManagerTask@delay:
  1474                           	opt stack 0
  1475  000228                     	ds	4
  1476  00022C                     _RxPacket:
  1477                           	opt stack 0
  1478  00022C                     	ds	142
  1479  0002BA                     _rxMessage:
  1480                           	opt stack 0
  1481  0002BA                     	ds	10
  1482  0002C4                     _Tick_MS:
  1483                           	opt stack 0
  1484  0002C4                     	ds	8
  1485  0002CC                     _key:
  1486                           	opt stack 0
  1487  0002CC                     	ds	8
  1488  0002D4                     _OutgoingFrameCounter:
  1489                           	opt stack 0
  1490  0002D4                     	ds	4
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           postinc0	equ	0xFEE
  1496                           wreg	equ	0xFE8
  1497                           postdec1	equ	0xFE5
  1498                           fsr1h	equ	0xFE2
  1499                           fsr1l	equ	0xFE1
  1500                           
  1501                           	psect	bssBANK3
  1502  000300                     __pbssBANK3:
  1503                           	opt stack 0
  1504  000300                     _AckInfo:
  1505                           	opt stack 0
  1506  000300                     	ds	30
  1507  00031E                     _MACTxBuffer:
  1508                           	opt stack 0
  1509  00031E                     	ds	64
  1510  00035E                     _ConnectionTable:
  1511                           	opt stack 0
  1512  00035E                     	ds	55
  1513  000395                     _LCDText:
  1514                           	opt stack 0
  1515  000395                     	ds	33
  1516  0003B6                     _ActiveScanResults:
  1517                           	opt stack 0
  1518  0003B6                     	ds	25
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           postdec1	equ	0xFE5
  1526                           fsr1h	equ	0xFE2
  1527                           fsr1l	equ	0xFE1
  1528                           
  1529                           	psect	bssBANK4
  1530  000400                     __pbssBANK4:
  1531                           	opt stack 0
  1532  000400                     _tunnels:
  1533                           	opt stack 0
  1534  000400                     	ds	120
  1535  000478                     _routingTable:
  1536                           	opt stack 0
  1537  000478                     	ds	90
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1h	equ	0xFE2
  1546                           fsr1l	equ	0xFE1
  1547                           
  1548                           	psect	bssBANK5
  1549  000500                     __pbssBANK5:
  1550                           	opt stack 0
  1551  000500                     _neighbor_tbl:
  1552                           	opt stack 0
  1553  000500                     	ds	220
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           postdec1	equ	0xFE5
  1561                           fsr1h	equ	0xFE2
  1562                           fsr1l	equ	0xFE1
  1563                           
  1564                           	psect	bssBANK6
  1565  000600                     __pbssBANK6:
  1566                           	opt stack 0
  1567  000600                     _TMQ:
  1568                           	opt stack 0
  1569  000600                     	ds	152
  1570  000698                     _userdata:
  1571                           	opt stack 0
  1572  000698                     	ds	54
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           postdec1	equ	0xFE5
  1580                           fsr1h	equ	0xFE2
  1581                           fsr1l	equ	0xFE1
  1582                           
  1583                           	psect	bssBANK7
  1584  000700                     __pbssBANK7:
  1585                           	opt stack 0
  1586  000700                     _beaconMessageBuffer:
  1587                           	opt stack 0
  1588  000700                     	ds	72
  1589  000748                     _TxBuff:
  1590                           	opt stack 0
  1591  000748                     	ds	64
  1592  000788                     _TxBuffer:
  1593                           	opt stack 0
  1594  000788                     	ds	64
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           
  1605                           	psect	bssBANK8
  1606  000800                     __pbssBANK8:
  1607                           	opt stack 0
  1608  000800                     _list:
  1609                           	opt stack 0
  1610  000800                     	ds	220
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           postdec1	equ	0xFE5
  1618                           fsr1h	equ	0xFE2
  1619                           fsr1l	equ	0xFE1
  1620                           
  1621                           	psect	bssBANK9
  1622  000900                     __pbssBANK9:
  1623                           	opt stack 0
  1624  000900                     _sleepRFDData:
  1625                           	opt stack 0
  1626  000900                     	ds	75
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           fsr1h	equ	0xFE2
  1635                           fsr1l	equ	0xFE1
  1636                           
  1637                           	psect	bssBIGRAM
  1638  00094B                     __pbssBIGRAM:
  1639                           	opt stack 0
  1640  00094B                     _RbcQ:
  1641                           	opt stack 0
  1642  00094B                     	ds	444
  1643  000B07                     _hc_table:
  1644                           	opt stack 0
  1645  000B07                     	ds	360
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1h	equ	0xFE2
  1654                           fsr1l	equ	0xFE1
  1655                           
  1656                           	psect	cstackBANK2
  1657  0002D8                     __pcstackBANK2:
  1658                           	opt stack 0
  1659  0002D8                     radioReceivedPacket@source:
  1660                           	opt stack 0
  1661                           
  1662                           ; 2 bytes @ 0x0
  1663  0002D8                     	ds	2
  1664  0002DA                     radioReceivedPacket@PANID:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x2
  1668  0002DA                     	ds	2
  1669  0002DC                     radioReceivedPacket@data:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x4
  1673  0002DC                     	ds	2
  1674  0002DE                     radioReceivedPacket@size:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x6
  1678  0002DE                     	ds	2
  1679  0002E0                     radioReceivedPacket@rssi:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x8
  1683  0002E0                     	ds	1
  1684  0002E1                     radioReceivedPacket@isBroadcast:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x9
  1688  0002E1                     	ds	1
  1689  0002E2                     radioReceivedPacket@isSecure:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0xA
  1693  0002E2                     	ds	1
  1694  0002E3                     radioReceivedPacket@myAddr:
  1695                           	opt stack 0
  1696                           
  1697                           ; 2 bytes @ 0xB
  1698  0002E3                     	ds	2
  1699  0002E5                     _radioReceivedPacket$5352:
  1700                           	opt stack 0
  1701                           
  1702                           ; 1 bytes @ 0xD
  1703  0002E5                     	ds	1
  1704  0002E6                     radioReceivedPacket@crc:
  1705                           	opt stack 0
  1706                           
  1707                           ; 4 bytes @ 0xE
  1708  0002E6                     	ds	4
  1709  0002EA                     radioReceivedPacket@bt:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0x12
  1713  0002EA                     	ds	2
  1714  0002EC                     radioReceivedPacket@rhdr:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0x14
  1718  0002EC                     	ds	2
  1719  0002EE                     radioReceivedPacket@child:
  1720                           	opt stack 0
  1721                           
  1722                           ; 2 bytes @ 0x16
  1723  0002EE                     	ds	2
  1724  0002F0                     radioReceivedPacket@parent:
  1725                           	opt stack 0
  1726                           
  1727                           ; 2 bytes @ 0x18
  1728  0002F0                     	ds	2
  1729  0002F2                     radioReceivedPacket@dhdr:
  1730                           	opt stack 0
  1731                           
  1732                           ; 2 bytes @ 0x1A
  1733  0002F2                     	ds	2
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1h	equ	0xFE2
  1742                           fsr1l	equ	0xFE1
  1743                           
  1744                           	psect	cstackBANK1
  1745  000100                     __pcstackBANK1:
  1746                           	opt stack 0
  1747  000100                     TransportManagerTask@databuff:
  1748                           	opt stack 0
  1749  000100                     TMSendDataToRFD@databuff:
  1750                           	opt stack 0
  1751  000100                     NetworkSendDiscoverResponse@databuff:
  1752                           	opt stack 0
  1753                           
  1754                           ; 64 bytes @ 0x0
  1755  000100                     	ds	64
  1756  000140                     NetworkUnicastData@address:
  1757                           	opt stack 0
  1758  000140                     TransportManagerTask@sz:
  1759                           	opt stack 0
  1760  000140                     NetworkSendDiscoverResponse@size:
  1761                           	opt stack 0
  1762  000140                     NetworkManagerProcessIncomingData@buffer:
  1763                           	opt stack 0
  1764                           
  1765                           ; 64 bytes @ 0x40
  1766  000140                     	ds	2
  1767  000142                     NetworkUnicastData@data:
  1768                           	opt stack 0
  1769  000142                     TransportManagerTask@i:
  1770                           	opt stack 0
  1771  000142                     NetworkSendDiscoverResponse@dhdr:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x42
  1775  000142                     	ds	2
  1776  000144                     NetworkUnicastData@size:
  1777                           	opt stack 0
  1778  000144                     NetworkSendDiscoverResponse@address:
  1779                           	opt stack 0
  1780  000144                     NetworkManagerTask@data:
  1781                           	opt stack 0
  1782                           
  1783                           ; 19 bytes @ 0x44
  1784  000144                     	ds	2
  1785  000146                     NetworkUnicastData@isSecure:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x46
  1789  000146                     	ds	1
  1790  000147                     MiApp_UnicastAddress@DestinationAddress:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x47
  1794  000147                     	ds	2
  1795  000149                     MiApp_UnicastAddress@Origin:
  1796                           	opt stack 0
  1797                           
  1798                           ; 2 bytes @ 0x49
  1799  000149                     	ds	2
  1800  00014B                     MiApp_UnicastAddress@SecEn:
  1801                           	opt stack 0
  1802                           
  1803                           ; 1 bytes @ 0x4B
  1804  00014B                     	ds	12
  1805  000157                     NetworkManagerTask@sz:
  1806                           	opt stack 0
  1807                           
  1808                           ; 2 bytes @ 0x57
  1809  000157                     	ds	41
  1810  000180                     NetworkManagerProcessIncomingData@isFormed:
  1811                           	opt stack 0
  1812                           
  1813                           ; 1 bytes @ 0x80
  1814  000180                     	ds	1
  1815  000181                     NetworkManagerProcessIncomingData@packetsize:
  1816                           	opt stack 0
  1817                           
  1818                           ; 2 bytes @ 0x81
  1819  000181                     	ds	2
  1820  000183                     NetworkManagerProcessIncomingData@isSecurePacket:
  1821                           	opt stack 0
  1822                           
  1823                           ; 1 bytes @ 0x83
  1824  000183                     	ds	1
  1825  000184                     NetworkManagerProcessIncomingData@dHdr:
  1826                           	opt stack 0
  1827                           
  1828                           ; 2 bytes @ 0x84
  1829  000184                     	ds	2
  1830  000186                     ??_MiApp_MessageAvailable:
  1831                           
  1832                           ; 1 bytes @ 0x86
  1833  000186                     	ds	4
  1834  00018A                     MiApp_MessageAvailable@src:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x8A
  1838  00018A                     	ds	2
  1839  00018C                     main@pButtonPressed:
  1840                           	opt stack 0
  1841                           
  1842                           ; 1 bytes @ 0x8C
  1843  00018C                     	ds	1
  1844  00018D                     main@counter:
  1845                           	opt stack 0
  1846                           
  1847                           ; 1 bytes @ 0x8D
  1848  00018D                     	ds	1
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postdec1	equ	0xFE5
  1856                           fsr1h	equ	0xFE2
  1857                           fsr1l	equ	0xFE1
  1858                           
  1859                           	psect	cstackBANK0
  1860  000060                     __pcstackBANK0:
  1861                           	opt stack 0
  1862  000060                     HighISR@dPan:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x0
  1866  000060                     	ds	1
  1867  000061                     HighISR@counter:
  1868                           	opt stack 0
  1869                           
  1870                           ; 2 bytes @ 0x1
  1871  000061                     	ds	2
  1872  000063                     HighISR@fifo_stat:
  1873                           	opt stack 0
  1874                           
  1875                           ; 1 bytes @ 0x3
  1876  000063                     	ds	1
  1877  000064                     HighISR@ackPacket:
  1878                           	opt stack 0
  1879                           
  1880                           ; 4 bytes @ 0x4
  1881  000064                     	ds	4
  1882  000068                     HighISR@dstPan:
  1883                           	opt stack 0
  1884                           
  1885                           ; 2 bytes @ 0x8
  1886  000068                     	ds	2
  1887  00006A                     HighISR@PacketForMe:
  1888                           	opt stack 0
  1889                           
  1890                           ; 1 bytes @ 0xA
  1891  00006A                     	ds	1
  1892  00006B                     HighISR@bAck:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0xB
  1896  00006B                     	ds	1
  1897  00006C                     HighISR@tmr:
  1898                           	opt stack 0
  1899                           
  1900                           ; 2 bytes @ 0xC
  1901  00006C                     	ds	2
  1902  00006E                     HighISR@RxPacketPtr:
  1903                           	opt stack 0
  1904                           
  1905                           ; 1 bytes @ 0xE
  1906  00006E                     	ds	1
  1907  00006F                     HighISR@ackInfoIndex:
  1908                           	opt stack 0
  1909                           
  1910                           ; 1 bytes @ 0xF
  1911  00006F                     	ds	1
  1912  000070                     HighISR@PacketLen:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x10
  1916  000070                     	ds	1
  1917  000071                     HighISR@BankIndex:
  1918                           	opt stack 0
  1919                           
  1920                           ; 1 bytes @ 0x11
  1921  000071                     	ds	1
  1922  000072                     HighISR@i:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x12
  1926  000072                     	ds	1
  1927  000073                     ??_isdigit:
  1928  000073                     ??_isButtonPressed:
  1929  000073                     ?_NetworkGetParentAddress:
  1930                           	opt stack 0
  1931  000073                     ?_NetworkManagerGetMyAddress:
  1932                           	opt stack 0
  1933  000073                     ?_NetworkGetPANID:
  1934                           	opt stack 0
  1935  000073                     ?_CoordinatorAddress:
  1936                           	opt stack 0
  1937  000073                     ?_NetworkGetMyRouteInfo:
  1938                           	opt stack 0
  1939  000073                     ?_memcmp:
  1940                           	opt stack 0
  1941  000073                     ?_RMRoutingTableCount:
  1942                           	opt stack 0
  1943  000073                     ?_le_findEmptyNeighborIdx:
  1944                           	opt stack 0
  1945  000073                     ?___wmul:
  1946                           	opt stack 0
  1947  000073                     ?___awdiv:
  1948                           	opt stack 0
  1949  000073                     ?___lwdiv:
  1950                           	opt stack 0
  1951  000073                     ?_MiWi_TickGet:
  1952                           	opt stack 0
  1953  000073                     ?_krnd:
  1954                           	opt stack 0
  1955  000073                     ?_crc32:
  1956                           	opt stack 0
  1957  000073                     ?___lldiv:
  1958                           	opt stack 0
  1959  000073                     SPIPut@v:
  1960                           	opt stack 0
  1961  000073                     SPIPut2@v:
  1962                           	opt stack 0
  1963  000073                     LEDCommand@cmd:
  1964                           	opt stack 0
  1965  000073                     NetworkSetDeviceType@dev:
  1966                           	opt stack 0
  1967  000073                     NetworkDiscoveredEvent@PANID:
  1968                           	opt stack 0
  1969  000073                     encode@text:
  1970                           	opt stack 0
  1971  000073                     passLinkEtxThreshold@etx:
  1972                           	opt stack 0
  1973  000073                     RouteManagerSetNeighborCongested@n:
  1974                           	opt stack 0
  1975  000073                     le_initNeighborIdx@ll_addr:
  1976                           	opt stack 0
  1977  000073                     LE_GetNeighborDeviceType@index:
  1978                           	opt stack 0
  1979  000073                     krndInit@value:
  1980                           	opt stack 0
  1981  000073                     ___wmul@multiplier:
  1982                           	opt stack 0
  1983  000073                     ___awdiv@dividend:
  1984                           	opt stack 0
  1985  000073                     ___lwdiv@dividend:
  1986                           	opt stack 0
  1987  000073                     memcmp@s1:
  1988                           	opt stack 0
  1989  000073                     memset@p1:
  1990                           	opt stack 0
  1991  000073                     DelayUS@delay:
  1992                           	opt stack 0
  1993  000073                     crc32@crc:
  1994                           	opt stack 0
  1995  000073                     ___lldiv@dividend:
  1996                           	opt stack 0
  1997                           
  1998                           ; 4 bytes @ 0x13
  1999  000073                     	ds	1
  2000  000074                     SPIPut@i:
  2001                           	opt stack 0
  2002  000074                     SPIPut2@i:
  2003                           	opt stack 0
  2004  000074                     _isdigit$4797:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x14
  2008  000074                     	ds	1
  2009  000075                     ??_krndInit:
  2010  000075                     ??_LE_GetNeighborDeviceType:
  2011  000075                     ??_le_findEmptyNeighborIdx:
  2012  000075                     LCD_WriteCmd@data:
  2013                           	opt stack 0
  2014  000075                     LCD_WriteData@data:
  2015                           	opt stack 0
  2016  000075                     isButtonPressed@index:
  2017                           	opt stack 0
  2018  000075                     LEDCommand@led:
  2019                           	opt stack 0
  2020  000075                     EEPROMRead@dest:
  2021                           	opt stack 0
  2022  000075                     RegisterRead@address:
  2023                           	opt stack 0
  2024  000075                     WriteFIFO@Data:
  2025                           	opt stack 0
  2026  000075                     RouteManagerSetNeighborCongested@congested:
  2027                           	opt stack 0
  2028  000075                     le_initNeighborIdx@i:
  2029                           	opt stack 0
  2030  000075                     isdigit@c:
  2031                           	opt stack 0
  2032  000075                     memcmp@s2:
  2033                           	opt stack 0
  2034  000075                     NetworkDiscoveredEvent@rssi:
  2035                           	opt stack 0
  2036  000075                     RegisterSet@setting:
  2037                           	opt stack 0
  2038  000075                     encode@key:
  2039                           	opt stack 0
  2040  000075                     ___wmul@multiplicand:
  2041                           	opt stack 0
  2042  000075                     ___awdiv@divisor:
  2043                           	opt stack 0
  2044  000075                     ___lwdiv@divisor:
  2045                           	opt stack 0
  2046  000075                     memcpy@d1:
  2047                           	opt stack 0
  2048  000075                     memset@c:
  2049                           	opt stack 0
  2050                           
  2051                           ; 2 bytes @ 0x15
  2052  000075                     	ds	1
  2053  000076                     isButtonPressed@mask:
  2054                           	opt stack 0
  2055  000076                     EEPROMRead@addr:
  2056                           	opt stack 0
  2057  000076                     RegisterRead@value:
  2058                           	opt stack 0
  2059  000076                     WriteFIFO@IRQ1select:
  2060                           	opt stack 0
  2061  000076                     le_initNeighborIdx@ne:
  2062                           	opt stack 0
  2063  000076                     memcmp@n:
  2064                           	opt stack 0
  2065                           
  2066                           ; 2 bytes @ 0x16
  2067  000076                     	ds	1
  2068  000077                     ??_krnd:
  2069  000077                     ??_NetworkDiscoveredEvent:
  2070  000077                     ??_encode:
  2071  000077                     EEPROMRead@count:
  2072                           	opt stack 0
  2073  000077                     RegisterSet@IRQ1select:
  2074                           	opt stack 0
  2075  000077                     RegisterRead@IRQ1select:
  2076                           	opt stack 0
  2077  000077                     ___awdiv@counter:
  2078                           	opt stack 0
  2079  000077                     ___lwdiv@counter:
  2080                           	opt stack 0
  2081  000077                     le_findEmptyNeighborIdx@res:
  2082                           	opt stack 0
  2083  000077                     crc32@buf:
  2084                           	opt stack 0
  2085  000077                     ___wmul@product:
  2086                           	opt stack 0
  2087  000077                     memcpy@s1:
  2088                           	opt stack 0
  2089  000077                     memset@n:
  2090                           	opt stack 0
  2091  000077                     DelayUS@i:
  2092                           	opt stack 0
  2093  000077                     MiWi_TickGet@t1ext:
  2094                           	opt stack 0
  2095  000077                     ___lldiv@divisor:
  2096                           	opt stack 0
  2097                           
  2098                           ; 4 bytes @ 0x17
  2099  000077                     	ds	1
  2100  000078                     ??_memcmp:
  2101  000078                     SetRFMode@mode:
  2102                           	opt stack 0
  2103  000078                     LE_GetNeighborDeviceType@dev:
  2104                           	opt stack 0
  2105  000078                     ___awdiv@sign:
  2106                           	opt stack 0
  2107  000078                     ___lwdiv@quotient:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x18
  2111  000078                     	ds	1
  2112  000079                     MiMAC_SetChannel@offsetFreq:
  2113                           	opt stack 0
  2114  000079                     le_findEmptyNeighborIdx@i:
  2115                           	opt stack 0
  2116  000079                     crc32@size:
  2117                           	opt stack 0
  2118  000079                     ___awdiv@quotient:
  2119                           	opt stack 0
  2120  000079                     memcpy@n:
  2121                           	opt stack 0
  2122  000079                     memset@p:
  2123                           	opt stack 0
  2124                           
  2125                           ; 2 bytes @ 0x19
  2126  000079                     	ds	1
  2127  00007A                     ??_MiMAC_SetChannel:
  2128  00007A                     ?_sprintf:
  2129                           	opt stack 0
  2130  00007A                     sprintf@sp:
  2131                           	opt stack 0
  2132  00007A                     isBroadcastAddress@address:
  2133                           	opt stack 0
  2134                           
  2135                           ; 2 bytes @ 0x1A
  2136  00007A                     	ds	1
  2137  00007B                     ??_crc32:
  2138  00007B                     ?_CoordinatorGenericAddress:
  2139                           	opt stack 0
  2140  00007B                     ?_le_computeETX:
  2141                           	opt stack 0
  2142  00007B                     MiMAC_SetChannel@channel:
  2143                           	opt stack 0
  2144  00007B                     ___lldiv@counter:
  2145                           	opt stack 0
  2146  00007B                     NetworkDataArrivedEvent@source:
  2147                           	opt stack 0
  2148  00007B                     NetworkDiscoveredEvent@empty:
  2149                           	opt stack 0
  2150  00007B                     routeInfoInit@ri:
  2151                           	opt stack 0
  2152  00007B                     MiApp_InitSleepRFDBuffers@buffer:
  2153                           	opt stack 0
  2154  00007B                     memcpy@d:
  2155                           	opt stack 0
  2156  00007B                     DelayMs@ms:
  2157                           	opt stack 0
  2158  00007B                     MiWi_TickGet@tmrval:
  2159                           	opt stack 0
  2160  00007B                     krnd@t:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0x1B
  2164  00007B                     	ds	1
  2165  00007C                     MiApp_SetChannel@Channel:
  2166                           	opt stack 0
  2167  00007C                     sprintf@f:
  2168                           	opt stack 0
  2169  00007C                     ___lldiv@quotient:
  2170                           	opt stack 0
  2171  00007C                     isBroadcastAddress@addr:
  2172                           	opt stack 0
  2173                           
  2174                           ; 8 bytes @ 0x1C
  2175  00007C                     	ds	1
  2176  00007D                     le_computeETX@q1:
  2177                           	opt stack 0
  2178  00007D                     NetworkDataArrivedEvent@data:
  2179                           	opt stack 0
  2180  00007D                     NetworkDiscoveredEvent@i:
  2181                           	opt stack 0
  2182  00007D                     isSameAddress@a1:
  2183                           	opt stack 0
  2184  00007D                     MiApp_InitSleepRFDBuffers@bufferSize:
  2185                           	opt stack 0
  2186  00007D                     memcpy@s:
  2187                           	opt stack 0
  2188                           
  2189                           ; 2 bytes @ 0x1D
  2190  00007D                     	ds	1
  2191  00007E                     le_computeETX@q:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x1E
  2195  00007E                     	ds	1
  2196  00007F                     ??_DelayMs:
  2197  00007F                     ?_Read_MAC_Address:
  2198                           	opt stack 0
  2199  00007F                     ?_NetworkPrepareSendPacket:
  2200                           	opt stack 0
  2201  00007F                     ?___lwmod:
  2202                           	opt stack 0
  2203  00007F                     ?_MiWi_TickGetMs:
  2204                           	opt stack 0
  2205  00007F                     ?___llmod:
  2206                           	opt stack 0
  2207  00007F                     ?_MSTickGet:
  2208                           	opt stack 0
  2209  00007F                     NetworkDataArrivedEvent@size:
  2210                           	opt stack 0
  2211  00007F                     isSameAddress@a2:
  2212                           	opt stack 0
  2213  00007F                     NetworkPrepareSendPacket@address:
  2214                           	opt stack 0
  2215  00007F                     NetworkSetAddressPAN@address:
  2216                           	opt stack 0
  2217  00007F                     MiApp_InitSleepRFDBuffers@rfdMaxDataSize:
  2218                           	opt stack 0
  2219  00007F                     DeviceManagerBufferDeviceData@address:
  2220                           	opt stack 0
  2221  00007F                     ___lwmod@dividend:
  2222                           	opt stack 0
  2223  00007F                     ___llmod@dividend:
  2224                           	opt stack 0
  2225                           
  2226                           ; 4 bytes @ 0x1F
  2227  00007F                     	ds	1
  2228  000080                     le_updateETX@ne:
  2229                           	opt stack 0
  2230                           
  2231                           ; 2 bytes @ 0x20
  2232  000080                     	ds	1
  2233  000081                     ??_Read_MAC_Address:
  2234  000081                     ??_MiApp_InitSleepRFDBuffers:
  2235  000081                     ?_DeviceManagerGetDeviceData:
  2236                           	opt stack 0
  2237  000081                     ?_RoutingTableFindDeviceOrParent:
  2238                           	opt stack 0
  2239  000081                     ?_le_findWorstNeighborIdx:
  2240                           	opt stack 0
  2241  000081                     NetworkDataArrivedEvent@isBroadcast:
  2242                           	opt stack 0
  2243  000081                     AddNodeToNetworkTable@address:
  2244                           	opt stack 0
  2245  000081                     encode@delta:
  2246                           	opt stack 0
  2247  000081                     RoutingTableFindDeviceOrParent@address:
  2248                           	opt stack 0
  2249  000081                     le_findIdx@ll_addr:
  2250                           	opt stack 0
  2251  000081                     TunnelManagerInvalidateTunnel@device:
  2252                           	opt stack 0
  2253  000081                     NetworkPrepareSendPacket@buffer:
  2254                           	opt stack 0
  2255  000081                     NetworkSetAddressPAN@PANID:
  2256                           	opt stack 0
  2257  000081                     DeviceManagerGetDeviceType@address:
  2258                           	opt stack 0
  2259  000081                     DeviceManagerBufferDeviceData@data:
  2260                           	opt stack 0
  2261  000081                     DeviceManagerGetDeviceData@address:
  2262                           	opt stack 0
  2263  000081                     ___lwmod@divisor:
  2264                           	opt stack 0
  2265                           
  2266                           ; 2 bytes @ 0x21
  2267  000081                     	ds	1
  2268  000082                     ??_sprintf:
  2269  000082                     le_updateETX@newEst:
  2270                           	opt stack 0
  2271  000082                     Read_MAC_Address@addr8:
  2272                           	opt stack 0
  2273                           
  2274                           ; 6 bytes @ 0x22
  2275  000082                     	ds	1
  2276  000083                     ??_DeviceManagerGetDeviceType:
  2277  000083                     ??_TunnelManagerInvalidateTunnel:
  2278  000083                     ??_RoutingTableFindDeviceOrParent:
  2279  000083                     ??_le_findWorstNeighborIdx:
  2280  000083                     encode@i:
  2281                           	opt stack 0
  2282  000083                     le_findIdx@res:
  2283                           	opt stack 0
  2284  000083                     NetworkPrepareSendPacket@pType:
  2285                           	opt stack 0
  2286  000083                     ___lwmod@counter:
  2287                           	opt stack 0
  2288  000083                     MiApp_SetAddressPan@address:
  2289                           	opt stack 0
  2290  000083                     AddNodeToNetworkTable@PANID:
  2291                           	opt stack 0
  2292  000083                     DeviceManagerBufferDeviceData@size:
  2293                           	opt stack 0
  2294  000083                     DeviceManagerGetDeviceData@data:
  2295                           	opt stack 0
  2296  000083                     MiWi_TickGetMs@tnow:
  2297                           	opt stack 0
  2298  000083                     ___llmod@divisor:
  2299                           	opt stack 0
  2300                           
  2301                           ; 4 bytes @ 0x23
  2302  000083                     	ds	1
  2303  000084                     ??_le_updateETX:
  2304  000084                     ?_LEAppendNeighborInfo:
  2305                           	opt stack 0
  2306  000084                     ?_le_findRandomNeighborIdx:
  2307                           	opt stack 0
  2308  000084                     le_findIdx@i:
  2309                           	opt stack 0
  2310  000084                     isBroadcastAddress@res:
  2311                           	opt stack 0
  2312  000084                     encode@part1:
  2313                           	opt stack 0
  2314  000084                     LEAppendNeighborInfo@data:
  2315                           	opt stack 0
  2316  000084                     NetworkPrepareSendPacket@data:
  2317                           	opt stack 0
  2318                           
  2319                           ; 2 bytes @ 0x24
  2320  000084                     	ds	1
  2321  000085                     ??_AddNodeToNetworkTable:
  2322  000085                     ?_LELinkQualityGet:
  2323                           	opt stack 0
  2324  000085                     le_findWorstNeighborIdx@thresholdETX:
  2325                           	opt stack 0
  2326  000085                     DeviceManagerGetDeviceType@dev:
  2327                           	opt stack 0
  2328  000085                     DeviceManagerBufferDeviceData@isSecure:
  2329                           	opt stack 0
  2330  000085                     MiApp_SetAddressPan@panid:
  2331                           	opt stack 0
  2332  000085                     RoutingTableFindDeviceOrParent@i:
  2333                           	opt stack 0
  2334  000085                     LELinkQualityGet@address:
  2335                           	opt stack 0
  2336  000085                     LE_PinNeighbor@neighbor:
  2337                           	opt stack 0
  2338  000085                     LE_UnpinNeighbor@neighbor:
  2339                           	opt stack 0
  2340  000085                     LE_ClearDLQ@neighbor:
  2341                           	opt stack 0
  2342  000085                     TunnelManagerInvalidateTunnel@addr:
  2343                           	opt stack 0
  2344  000085                     isInvalidAddress@address:
  2345                           	opt stack 0
  2346  000085                     DeviceManagerGetDeviceData@isSecure:
  2347                           	opt stack 0
  2348  000085                     crc32@p:
  2349                           	opt stack 0
  2350                           
  2351                           ; 2 bytes @ 0x25
  2352  000085                     	ds	1
  2353  000086                     ??_le_findRandomNeighborIdx:
  2354  000086                     sprintf@idx:
  2355                           	opt stack 0
  2356  000086                     DeviceManagerBufferDeviceData@isFormed:
  2357                           	opt stack 0
  2358  000086                     encode@part2:
  2359                           	opt stack 0
  2360  000086                     LEAppendNeighborInfo@size:
  2361                           	opt stack 0
  2362  000086                     le_findWorstNeighborIdx@worstNeighborIdx:
  2363                           	opt stack 0
  2364  000086                     NetworkPrepareSendPacket@size:
  2365                           	opt stack 0
  2366  000086                     DeviceManagerGetDeviceType@i:
  2367                           	opt stack 0
  2368                           
  2369                           ; 2 bytes @ 0x26
  2370  000086                     	ds	1
  2371  000087                     ??_DeviceManagerBufferDeviceData:
  2372  000087                     ??_LE_UnpinNeighbor:
  2373  000087                     ??_LE_PinNeighbor:
  2374  000087                     ??_LE_ClearDLQ:
  2375  000087                     ??_LEDManagerTask:
  2376  000087                     LCDUpdate@i:
  2377                           	opt stack 0
  2378  000087                     ButtonTask@Sw:
  2379                           	opt stack 0
  2380  000087                     TxPacket@CCA:
  2381                           	opt stack 0
  2382  000087                     sprintf@ap:
  2383                           	opt stack 0
  2384  000087                     _NetworkHasRoute$4267:
  2385                           	opt stack 0
  2386  000087                     ___llmod@counter:
  2387                           	opt stack 0
  2388  000087                     MiApp_SetAddressPan@addr:
  2389                           	opt stack 0
  2390  000087                     routingTableFind@neighbor:
  2391                           	opt stack 0
  2392  000087                     RouteManagerShouldInsert@hdr:
  2393                           	opt stack 0
  2394  000087                     RoutingTableFindDeviceOrParent@res:
  2395                           	opt stack 0
  2396  000087                     LELinkQualityGet@offset:
  2397                           	opt stack 0
  2398  000087                     TunnelManagerInvalidateTunnel@i:
  2399                           	opt stack 0
  2400  000087                     DeviceManagerGetDeviceData@isFormed:
  2401                           	opt stack 0
  2402  000087                     MiMAC_Init@initValue:
  2403                           	opt stack 0
  2404  000087                     MSTickGet@tNow:
  2405                           	opt stack 0
  2406                           
  2407                           ; 8 bytes @ 0x27
  2408  000087                     	ds	1
  2409  000088                     ??_LEAppendNeighborInfo:
  2410  000088                     ??_TxPacket:
  2411  000088                     sprintf@flag:
  2412                           	opt stack 0
  2413  000088                     le_findRandomNeighborIdx@cnt:
  2414                           	opt stack 0
  2415  000088                     NetworkHasRoute@res:
  2416                           	opt stack 0
  2417  000088                     Read_MAC_Address@address:
  2418                           	opt stack 0
  2419  000088                     encode@sum:
  2420                           	opt stack 0
  2421  000088                     le_findWorstNeighborIdx@res:
  2422                           	opt stack 0
  2423  000088                     le_updateNeighborTableEst@n:
  2424                           	opt stack 0
  2425  000088                     NetworkPrepareSendPacket@nHdr:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0x28
  2429  000088                     	ds	1
  2430  000089                     ??_LELinkQualityGet:
  2431  000089                     ??_DeviceManagerGetDeviceData:
  2432  000089                     ??_routingTableFind:
  2433  000089                     ??_RouteManagerShouldInsert:
  2434  000089                     AddNodeToNetworkTable@ind:
  2435                           	opt stack 0
  2436  000089                     sprintf@val:
  2437                           	opt stack 0
  2438  000089                     RoutingTableFindDeviceOrParent@entry:
  2439                           	opt stack 0
  2440  000089                     le_findRandomNeighborIdx@res:
  2441                           	opt stack 0
  2442  000089                     TMSendFormedPacketTowardsCoordinator@data:
  2443                           	opt stack 0
  2444  000089                     DeviceManagerBufferDeviceData@index:
  2445                           	opt stack 0
  2446                           
  2447                           ; 2 bytes @ 0x29
  2448  000089                     	ds	1
  2449  00008A                     ??_MiMAC_Init:
  2450  00008A                     ??_le_updateNeighborTableEst:
  2451  00008A                     Read_MAC_Address@pAddress:
  2452                           	opt stack 0
  2453  00008A                     CTR@text:
  2454                           	opt stack 0
  2455  00008A                     CBC_MAC@text:
  2456                           	opt stack 0
  2457  00008A                     LEAppendNeighborInfo@cnt:
  2458                           	opt stack 0
  2459  00008A                     LE_PinNeighbor@nidx:
  2460                           	opt stack 0
  2461  00008A                     LE_UnpinNeighbor@nidx:
  2462                           	opt stack 0
  2463  00008A                     LE_ClearDLQ@ne:
  2464                           	opt stack 0
  2465  00008A                     le_findWorstNeighborIdx@thisETX:
  2466                           	opt stack 0
  2467                           
  2468                           ; 2 bytes @ 0x2A
  2469  00008A                     	ds	1
  2470  00008B                     ?_GetRouteAddressOfChild:
  2471                           	opt stack 0
  2472  00008B                     sprintf@prec:
  2473                           	opt stack 0
  2474  00008B                     le_findRandomNeighborIdx@num_eligible_eviction:
  2475                           	opt stack 0
  2476  00008B                     DeviceManagerBufferDeviceData@res:
  2477                           	opt stack 0
  2478  00008B                     AddNodeToNetworkTable@i:
  2479                           	opt stack 0
  2480  00008B                     MiMAC_Init@seed:
  2481                           	opt stack 0
  2482  00008B                     routingTableFind@res:
  2483                           	opt stack 0
  2484  00008B                     RouteManagerShouldInsert@pathEtx:
  2485                           	opt stack 0
  2486  00008B                     GetRouteAddressOfChild@child:
  2487                           	opt stack 0
  2488  00008B                     LELinkQualityGet@res:
  2489                           	opt stack 0
  2490  00008B                     TMSendFormedPacketTowardsCoordinator@size:
  2491                           	opt stack 0
  2492  00008B                     DeviceManagerGetDeviceData@i:
  2493                           	opt stack 0
  2494                           
  2495                           ; 2 bytes @ 0x2B
  2496  00008B                     	ds	1
  2497  00008C                     Read_MAC_Address@i:
  2498                           	opt stack 0
  2499  00008C                     CTR@len:
  2500                           	opt stack 0
  2501  00008C                     CBC_MAC@len:
  2502                           	opt stack 0
  2503  00008C                     sprintf@width:
  2504                           	opt stack 0
  2505  00008C                     LEAppendNeighborInfo@newPrevSentIdx:
  2506                           	opt stack 0
  2507  00008C                     LE_ClearDLQ@nidx:
  2508                           	opt stack 0
  2509  00008C                     le_findWorstNeighborIdx@worstETX:
  2510                           	opt stack 0
  2511  00008C                     le_findRandomNeighborIdx@i:
  2512                           	opt stack 0
  2513  00008C                     DeviceManagerBufferDeviceData@recordLen:
  2514                           	opt stack 0
  2515  00008C                     TxPacket@t1:
  2516                           	opt stack 0
  2517                           
  2518                           ; 4 bytes @ 0x2C
  2519  00008C                     	ds	1
  2520  00008D                     MiMAC_Init@i:
  2521                           	opt stack 0
  2522  00008D                     routingTableFind@i:
  2523                           	opt stack 0
  2524  00008D                     LELinkQualityGet@idx:
  2525                           	opt stack 0
  2526  00008D                     TMSendFormedPacketTowardsCoordinator@isFormed:
  2527                           	opt stack 0
  2528  00008D                     CTR@key:
  2529                           	opt stack 0
  2530  00008D                     CBC_MAC@key:
  2531                           	opt stack 0
  2532  00008D                     RouteManagerShouldInsert@neighEtx:
  2533                           	opt stack 0
  2534  00008D                     GetRouteAddressOfChild@res:
  2535                           	opt stack 0
  2536  00008D                     DeviceManagerGetDeviceData@size:
  2537                           	opt stack 0
  2538                           
  2539                           ; 2 bytes @ 0x2D
  2540  00008D                     	ds	1
  2541  00008E                     sprintf@c:
  2542                           	opt stack 0
  2543  00008E                     TMSendFormedPacketTowardsCoordinator@isSecure:
  2544                           	opt stack 0
  2545  00008E                     RouterEvicted@address:
  2546                           	opt stack 0
  2547  00008E                     routingTableUpdateEntry@from:
  2548                           	opt stack 0
  2549  00008E                     LEAppendNeighborInfo@count:
  2550                           	opt stack 0
  2551  00008E                     le_findWorstNeighborIdx@i:
  2552                           	opt stack 0
  2553  00008E                     DeviceManagerBufferDeviceData@empty:
  2554                           	opt stack 0
  2555                           
  2556                           ; 2 bytes @ 0x2E
  2557  00008E                     	ds	1
  2558  00008F                     ??_TMSendFormedPacketTowardsCoordinator:
  2559  00008F                     ?_MSTickGetDiffNow:
  2560                           	opt stack 0
  2561  00008F                     ?_AddMSToTick:
  2562                           	opt stack 0
  2563  00008F                     CTR@nounce:
  2564                           	opt stack 0
  2565  00008F                     CBC_MAC@MIC:
  2566                           	opt stack 0
  2567  00008F                     RouteManagerShouldInsert@entry:
  2568                           	opt stack 0
  2569  00008F                     GetRouteAddressOfChild@i:
  2570                           	opt stack 0
  2571  00008F                     TunnelManagerSetTunnel@device:
  2572                           	opt stack 0
  2573  00008F                     IsNetworkDevice@address:
  2574                           	opt stack 0
  2575  00008F                     DeviceManagerGetDeviceData@index:
  2576                           	opt stack 0
  2577  00008F                     MiApp_ProtocolInit@initValue:
  2578                           	opt stack 0
  2579  00008F                     netChooseAdvertiseTime@t:
  2580                           	opt stack 0
  2581  00008F                     MSTickGetDiffNow@tick:
  2582                           	opt stack 0
  2583  00008F                     AddMSToTick@tick:
  2584                           	opt stack 0
  2585                           
  2586                           ; 8 bytes @ 0x2F
  2587  00008F                     	ds	1
  2588  000090                     ??_RouterEvicted:
  2589  000090                     routingTableUpdateEntry@parent:
  2590                           	opt stack 0
  2591  000090                     LEAppendNeighborInfo@i:
  2592                           	opt stack 0
  2593  000090                     DeviceManagerBufferDeviceData@i:
  2594                           	opt stack 0
  2595  000090                     TxPacket@t2:
  2596                           	opt stack 0
  2597                           
  2598                           ; 4 bytes @ 0x30
  2599  000090                     	ds	1
  2600  000091                     ??_CTR:
  2601  000091                     ??_CBC_MAC:
  2602  000091                     TMSendFormedPacketTowardsCoordinator@res:
  2603                           	opt stack 0
  2604  000091                     IsNetworkDevice@devType:
  2605                           	opt stack 0
  2606  000091                     LEDManagerTask@i:
  2607                           	opt stack 0
  2608  000091                     RouteManagerShouldInsert@i:
  2609                           	opt stack 0
  2610  000091                     TunnelManagerSetTunnel@parent:
  2611                           	opt stack 0
  2612  000091                     DeviceManagerGetDeviceData@recordLen:
  2613                           	opt stack 0
  2614                           
  2615                           ; 2 bytes @ 0x31
  2616  000091                     	ds	1
  2617  000092                     ??_IsNetworkDevice:
  2618  000092                     RouterEvicted@r:
  2619                           	opt stack 0
  2620  000092                     routingTableUpdateEntry@etx:
  2621                           	opt stack 0
  2622  000092                     LEAppendNeighborInfo@j:
  2623                           	opt stack 0
  2624  000092                     TMSendFormedPacketTowardsCoordinator@i:
  2625                           	opt stack 0
  2626  000092                     DeviceManagerBufferDeviceData@devBuffer:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x32
  2630  000092                     	ds	1
  2631  000093                     ??_TunnelManagerSetTunnel:
  2632  000093                     ??_RouteManagerPerformUpdate:
  2633  000093                     RouteManagerShouldInsert@found:
  2634                           	opt stack 0
  2635  000093                     le_updateNeighborTableEst@totalPkt:
  2636                           	opt stack 0
  2637  000093                     NetworkInit@address:
  2638                           	opt stack 0
  2639  000093                     DeviceManagerGetDeviceData@devBuffer:
  2640                           	opt stack 0
  2641                           
  2642                           ; 2 bytes @ 0x33
  2643  000093                     	ds	1
  2644  000094                     CTR@block:
  2645                           	opt stack 0
  2646  000094                     CBC_MAC@block:
  2647                           	opt stack 0
  2648  000094                     RouterEvicted@idx:
  2649                           	opt stack 0
  2650  000094                     TxPacket@delay:
  2651                           	opt stack 0
  2652  000094                     routingTableUpdateEntry@linkEtx:
  2653                           	opt stack 0
  2654  000094                     RouteManagerShouldInsert@rcvBeacon:
  2655                           	opt stack 0
  2656  000094                     LEAppendNeighborInfo@k:
  2657                           	opt stack 0
  2658  000094                     le_updateNeighborTableEst@newEst:
  2659                           	opt stack 0
  2660  000094                     IsNetworkDevice@oldest:
  2661                           	opt stack 0
  2662                           
  2663                           ; 8 bytes @ 0x34
  2664  000094                     	ds	1
  2665  000095                     CTR@i:
  2666                           	opt stack 0
  2667  000095                     CBC_MAC@j:
  2668                           	opt stack 0
  2669  000095                     RouterEvicted@i:
  2670                           	opt stack 0
  2671  000095                     RouteManagerPerformUpdate@linkEtx:
  2672                           	opt stack 0
  2673  000095                     NetworkInit@PANID:
  2674                           	opt stack 0
  2675  000095                     DeviceManagerGetDeviceData@j:
  2676                           	opt stack 0
  2677                           
  2678                           ; 2 bytes @ 0x35
  2679  000095                     	ds	1
  2680  000096                     TxPacket@reTry:
  2681                           	opt stack 0
  2682  000096                     CTR@j:
  2683                           	opt stack 0
  2684  000096                     CBC_MAC@i:
  2685                           	opt stack 0
  2686  000096                     routingTableUpdateEntry@idx:
  2687                           	opt stack 0
  2688  000096                     le_updateNeighborTableEst@i:
  2689                           	opt stack 0
  2690  000096                     LE_InsertNeighbor@neighbor:
  2691                           	opt stack 0
  2692  000096                     LE_RemoveNeighborDevice@device:
  2693                           	opt stack 0
  2694                           
  2695                           ; 2 bytes @ 0x36
  2696  000096                     	ds	1
  2697  000097                     TxPacket@allowedTxFailure:
  2698                           	opt stack 0
  2699  000097                     NetworkInit@dev:
  2700                           	opt stack 0
  2701  000097                     CCM_Enc@text:
  2702                           	opt stack 0
  2703  000097                     CCM_Dec@text:
  2704                           	opt stack 0
  2705  000097                     RouteManagerPerformUpdate@i:
  2706                           	opt stack 0
  2707  000097                     le_updateNeighborTableEst@ne:
  2708                           	opt stack 0
  2709  000097                     MSTickGetDiffNow@diff:
  2710                           	opt stack 0
  2711  000097                     AddMSToTick@ms:
  2712                           	opt stack 0
  2713                           
  2714                           ; 4 bytes @ 0x37
  2715  000097                     	ds	1
  2716  000098                     ??_LE_RemoveNeighborDevice:
  2717  000098                     LE_InsertNeighbor@devType:
  2718                           	opt stack 0
  2719  000098                     TxPacket@j:
  2720                           	opt stack 0
  2721  000098                     NetworkInit@devPanID:
  2722                           	opt stack 0
  2723                           
  2724                           ; 2 bytes @ 0x38
  2725  000098                     	ds	1
  2726  000099                     ??_LE_InsertNeighbor:
  2727  000099                     CCM_Enc@headerLen:
  2728                           	opt stack 0
  2729  000099                     CCM_Dec@headerLen:
  2730                           	opt stack 0
  2731  000099                     le_updateNeighborEntryIdx@seq:
  2732                           	opt stack 0
  2733  000099                     RouteManagerPerformUpdate@pathEtx:
  2734                           	opt stack 0
  2735  000099                     TunnelManagerSetTunnel@oldestindex:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x39
  2739  000099                     	ds	1
  2740  00009A                     MiApp_StartConnection@ScanDuration:
  2741                           	opt stack 0
  2742  00009A                     TxPacket@rssival:
  2743                           	opt stack 0
  2744  00009A                     CCM_Enc@payloadLen:
  2745                           	opt stack 0
  2746  00009A                     CCM_Dec@payloadLen:
  2747                           	opt stack 0
  2748  00009A                     le_updateNeighborEntryIdx@dev:
  2749                           	opt stack 0
  2750  00009A                     LE_RemoveNeighborDevice@i:
  2751                           	opt stack 0
  2752                           
  2753                           ; 2 bytes @ 0x3A
  2754  00009A                     	ds	1
  2755  00009B                     ??_AddMSToTick:
  2756  00009B                     ??_le_updateNeighborEntryIdx:
  2757  00009B                     TxPacket@TxPacketLen:
  2758                           	opt stack 0
  2759  00009B                     LE_InsertNeighbor@nidx:
  2760                           	opt stack 0
  2761  00009B                     CCM_Enc@key:
  2762                           	opt stack 0
  2763  00009B                     CCM_Dec@key:
  2764                           	opt stack 0
  2765  00009B                     RouteManagerPerformUpdate@currentEtx:
  2766                           	opt stack 0
  2767  00009B                     TunnelManagerSetTunnel@emptyindex:
  2768                           	opt stack 0
  2769  00009B                     MiApp_StartConnection@ChannelMap:
  2770                           	opt stack 0
  2771  00009B                     MSTickGetDiffNow@tNow:
  2772                           	opt stack 0
  2773                           
  2774                           ; 8 bytes @ 0x3B
  2775  00009B                     	ds	1
  2776  00009C                     TxPacket@status:
  2777                           	opt stack 0
  2778  00009C                     IsNetworkDevice@res:
  2779                           	opt stack 0
  2780  00009C                     RouteManagerProcessReceive@source:
  2781                           	opt stack 0
  2782                           
  2783                           ; 2 bytes @ 0x3C
  2784  00009C                     	ds	1
  2785  00009D                     ??_CCM_Enc:
  2786  00009D                     ??_CCM_Dec:
  2787  00009D                     TxPacket@i:
  2788                           	opt stack 0
  2789  00009D                     le_updateNeighborEntryIdx@packetGap:
  2790                           	opt stack 0
  2791  00009D                     RouteManagerPerformUpdate@best:
  2792                           	opt stack 0
  2793  00009D                     TunnelManagerSetTunnel@index:
  2794                           	opt stack 0
  2795  00009D                     IsNetworkDevice@empty:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x3D
  2799  00009D                     	ds	1
  2800  00009E                     le_updateNeighborEntryIdx@idx:
  2801                           	opt stack 0
  2802  00009E                     RouteManagerProcessReceive@data:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x3E
  2806  00009E                     	ds	1
  2807  00009F                     MiApp_StartConnection@src:
  2808                           	opt stack 0
  2809  00009F                     _CCM_Enc$2710:
  2810                           	opt stack 0
  2811  00009F                     RouteManagerPerformUpdate@minEtx:
  2812                           	opt stack 0
  2813  00009F                     LE_processReceivedMessage@source:
  2814                           	opt stack 0
  2815  00009F                     BroadcastManagerDelaySend@pkt:
  2816                           	opt stack 0
  2817  00009F                     IsNetworkDevice@i:
  2818                           	opt stack 0
  2819  00009F                     TunnelManagerSetTunnel@OldestTick:
  2820                           	opt stack 0
  2821                           
  2822                           ; 8 bytes @ 0x3F
  2823  00009F                     	ds	1
  2824  0000A0                     RouteManagerProcessReceive@len:
  2825                           	opt stack 0
  2826                           
  2827                           ; 1 bytes @ 0x40
  2828  0000A0                     	ds	1
  2829  0000A1                     CCM_Enc@i:
  2830                           	opt stack 0
  2831  0000A1                     _CCM_Dec$2718:
  2832                           	opt stack 0
  2833  0000A1                     RouteManagerPerformUpdate@entry:
  2834                           	opt stack 0
  2835  0000A1                     LE_processReceivedMessage@data:
  2836                           	opt stack 0
  2837  0000A1                     BroadcastManagerDelaySend@size:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x41
  2841  0000A1                     	ds	1
  2842  0000A2                     MiMAC_SendPacket@transParam:
  2843                           	opt stack 0
  2844                           
  2845                           ; 5 bytes @ 0x42
  2846  0000A2                     	ds	1
  2847  0000A3                     CCM_Dec@i:
  2848                           	opt stack 0
  2849  0000A3                     LE_processReceivedMessage@len:
  2850                           	opt stack 0
  2851  0000A3                     BroadcastManagerDelaySend@isSecure:
  2852                           	opt stack 0
  2853  0000A3                     RouteManagerPerformUpdate@r:
  2854                           	opt stack 0
  2855  0000A3                     MSTickGetDiffNow@tdiff:
  2856                           	opt stack 0
  2857                           
  2858                           ; 8 bytes @ 0x43
  2859  0000A3                     	ds	1
  2860  0000A4                     ??_MiMAC_ReceivedPacket:
  2861  0000A4                     RouteManagerProcessReceive@congested:
  2862                           	opt stack 0
  2863  0000A4                     LE_processReceivedMessage@rssi:
  2864                           	opt stack 0
  2865  0000A4                     BroadcastManagerDelaySend@isInterPan:
  2866                           	opt stack 0
  2867                           
  2868                           ; 1 bytes @ 0x44
  2869  0000A4                     	ds	1
  2870  0000A5                     ??_BroadcastManagerDelaySend:
  2871  0000A5                     RouteManagerProcessReceive@from:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x45
  2875  0000A5                     	ds	2
  2876  0000A7                     MiMAC_SendPacket@MACPayload:
  2877                           	opt stack 0
  2878  0000A7                     RouteManagerProcessReceive@rcvBeacon:
  2879                           	opt stack 0
  2880  0000A7                     LE_processReceivedMessage@hdr:
  2881                           	opt stack 0
  2882  0000A7                     TunnelManagerSetTunnel@i:
  2883                           	opt stack 0
  2884                           
  2885                           ; 2 bytes @ 0x47
  2886  0000A7                     	ds	2
  2887  0000A9                     MiMAC_SendPacket@MACPayloadLen:
  2888                           	opt stack 0
  2889  0000A9                     LE_processReceivedMessage@bhdr:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x49
  2893  0000A9                     	ds	1
  2894  0000AA                     ??_MiMAC_SendPacket:
  2895                           
  2896                           ; 1 bytes @ 0x4A
  2897  0000AA                     	ds	1
  2898  0000AB                     ?_TunnelManagerGetTunnel:
  2899                           	opt stack 0
  2900  0000AB                     MiMAC_SendPacket@headerLen:
  2901                           	opt stack 0
  2902  0000AB                     BroadcastManagerDelaySend@res:
  2903                           	opt stack 0
  2904  0000AB                     LE_processReceivedMessage@ll_addr:
  2905                           	opt stack 0
  2906  0000AB                     TunnelManagerGetTunnel@device:
  2907                           	opt stack 0
  2908  0000AB                     isKnownPacket@hash:
  2909                           	opt stack 0
  2910                           
  2911                           ; 4 bytes @ 0x4B
  2912  0000AB                     	ds	1
  2913  0000AC                     MiMAC_SendPacket@i:
  2914                           	opt stack 0
  2915  0000AC                     BroadcastManagerDelaySend@i:
  2916                           	opt stack 0
  2917  0000AC                     MiMAC_ReceivedPacket@currentTick:
  2918                           	opt stack 0
  2919                           
  2920                           ; 4 bytes @ 0x4C
  2921  0000AC                     	ds	1
  2922  0000AD                     ??_TunnelManagerGetTunnel:
  2923  0000AD                     MiMAC_SendPacket@TxIndex:
  2924                           	opt stack 0
  2925  0000AD                     LE_processReceivedMessage@nidx:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x4D
  2929  0000AD                     	ds	1
  2930  0000AE                     SendPacket@DestinationAddress:
  2931                           	opt stack 0
  2932                           
  2933                           ; 2 bytes @ 0x4E
  2934  0000AE                     	ds	1
  2935  0000AF                     ??_isKnownPacket:
  2936                           
  2937                           ; 1 bytes @ 0x4F
  2938  0000AF                     	ds	1
  2939  0000B0                     SendPacket@destinationPANID:
  2940                           	opt stack 0
  2941  0000B0                     MiMAC_ReceivedPacket@addr:
  2942                           	opt stack 0
  2943                           
  2944                           ; 2 bytes @ 0x50
  2945  0000B0                     	ds	2
  2946  0000B2                     SendPacket@isCommand:
  2947                           	opt stack 0
  2948  0000B2                     MiMAC_ReceivedPacket@FrameCounter:
  2949                           	opt stack 0
  2950                           
  2951                           ; 4 bytes @ 0x52
  2952  0000B2                     	ds	1
  2953  0000B3                     SendPacket@SecurityEnabled:
  2954                           	opt stack 0
  2955  0000B3                     TunnelManagerGetTunnel@trec:
  2956                           	opt stack 0
  2957                           
  2958                           ; 8 bytes @ 0x53
  2959  0000B3                     	ds	1
  2960  0000B4                     ??_SendPacket:
  2961                           
  2962                           ; 1 bytes @ 0x54
  2963  0000B4                     	ds	1
  2964  0000B5                     SendPacket@status:
  2965                           	opt stack 0
  2966  0000B5                     isKnownPacket@zeros:
  2967                           	opt stack 0
  2968                           
  2969                           ; 12 bytes @ 0x55
  2970  0000B5                     	ds	1
  2971  0000B6                     SendPacket@Broadcast:
  2972                           	opt stack 0
  2973  0000B6                     MiMAC_ReceivedPacket@j:
  2974                           	opt stack 0
  2975                           
  2976                           ; 1 bytes @ 0x56
  2977  0000B6                     	ds	1
  2978  0000B7                     MiMAC_ReceivedPacket@PayloadIndex:
  2979                           	opt stack 0
  2980  0000B7                     SendPacket@tParam:
  2981                           	opt stack 0
  2982                           
  2983                           ; 5 bytes @ 0x57
  2984  0000B7                     	ds	1
  2985  0000B8                     MiMAC_ReceivedPacket@i:
  2986                           	opt stack 0
  2987                           
  2988                           ; 1 bytes @ 0x58
  2989  0000B8                     	ds	3
  2990  0000BB                     TunnelManagerGetTunnel@addr:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x5B
  2994  0000BB                     	ds	1
  2995  0000BC                     radioBroadcast@data:
  2996                           	opt stack 0
  2997  0000BC                     radioUnicast@dest:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x5C
  3001  0000BC                     	ds	1
  3002  0000BD                     TunnelManagerGetTunnel@retAddr:
  3003                           	opt stack 0
  3004                           
  3005                           ; 2 bytes @ 0x5D
  3006  0000BD                     	ds	1
  3007  0000BE                     radioBroadcast@datasize:
  3008                           	opt stack 0
  3009  0000BE                     radioUnicast@PANID:
  3010                           	opt stack 0
  3011                           
  3012                           ; 2 bytes @ 0x5E
  3013  0000BE                     	ds	1
  3014  0000BF                     radioBroadcast@PANID:
  3015                           	opt stack 0
  3016  0000BF                     TunnelManagerGetTunnel@i:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x5F
  3020  0000BF                     	ds	1
  3021  0000C0                     radioUnicast@data:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x60
  3025  0000C0                     	ds	1
  3026  0000C1                     radioBroadcast@isSecure:
  3027                           	opt stack 0
  3028  0000C1                     isKnownPacket@unknown:
  3029                           	opt stack 0
  3030                           
  3031                           ; 1 bytes @ 0x61
  3032  0000C1                     	ds	1
  3033  0000C2                     radioBroadcast@i:
  3034                           	opt stack 0
  3035  0000C2                     radioUnicast@datasize:
  3036                           	opt stack 0
  3037  0000C2                     isKnownPacket@oldestindex:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x62
  3041  0000C2                     	ds	1
  3042  0000C3                     ??_networkSendBeacon:
  3043  0000C3                     ??_BroadcastManagerTask:
  3044  0000C3                     radioUnicast@isSecure:
  3045                           	opt stack 0
  3046                           
  3047                           ; 1 bytes @ 0x63
  3048  0000C3                     	ds	1
  3049  0000C4                     radioUnicast@i:
  3050                           	opt stack 0
  3051  0000C4                     isKnownPacket@index:
  3052                           	opt stack 0
  3053                           
  3054                           ; 2 bytes @ 0x64
  3055  0000C4                     	ds	1
  3056  0000C5                     ??_TransportManagerTask:
  3057  0000C5                     TMSendFormedPacketToRFD@device:
  3058                           	opt stack 0
  3059                           
  3060                           ; 2 bytes @ 0x65
  3061  0000C5                     	ds	1
  3062  0000C6                     isKnownPacket@emptyindex:
  3063                           	opt stack 0
  3064                           
  3065                           ; 2 bytes @ 0x66
  3066  0000C6                     	ds	1
  3067  0000C7                     TMSendFormedPacketToRFD@data:
  3068                           	opt stack 0
  3069                           
  3070                           ; 2 bytes @ 0x67
  3071  0000C7                     	ds	1
  3072  0000C8                     isKnownPacket@OldestTick:
  3073                           	opt stack 0
  3074                           
  3075                           ; 8 bytes @ 0x68
  3076  0000C8                     	ds	1
  3077  0000C9                     networkSendBeacon@last:
  3078                           	opt stack 0
  3079  0000C9                     TMSendFormedPacketToRFD@size:
  3080                           	opt stack 0
  3081                           
  3082                           ; 2 bytes @ 0x69
  3083  0000C9                     	ds	2
  3084  0000CB                     TMSendFormedPacketToRFD@isSecure:
  3085                           	opt stack 0
  3086  0000CB                     networkSendBeacon@adr:
  3087                           	opt stack 0
  3088                           
  3089                           ; 2 bytes @ 0x6B
  3090  0000CB                     	ds	1
  3091  0000CC                     
  3092                           ; 1 bytes @ 0x6C
  3093  0000CC                     	ds	1
  3094  0000CD                     networkSendBeacon@bt:
  3095                           	opt stack 0
  3096  0000CD                     BroadcastManagerTask@PANID:
  3097                           	opt stack 0
  3098  0000CD                     TMSendFormedPacketToRFD@myaddr:
  3099                           	opt stack 0
  3100                           
  3101                           ; 2 bytes @ 0x6D
  3102  0000CD                     	ds	2
  3103  0000CF                     TMSendFormedPacketToRFD@res:
  3104                           	opt stack 0
  3105  0000CF                     networkSendBeacon@r:
  3106                           	opt stack 0
  3107  0000CF                     BroadcastManagerTask@i:
  3108                           	opt stack 0
  3109                           
  3110                           ; 2 bytes @ 0x6F
  3111  0000CF                     	ds	1
  3112  0000D0                     isKnownPacket@i:
  3113                           	opt stack 0
  3114  0000D0                     TMSendFormedPacketToRFD@dhdr:
  3115                           	opt stack 0
  3116                           
  3117                           ; 2 bytes @ 0x70
  3118  0000D0                     	ds	1
  3119  0000D1                     networkSendBeacon@hdr:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x71
  3123  0000D1                     	ds	1
  3124  0000D2                     TMSendFormedPacketToRFD@parent:
  3125                           	opt stack 0
  3126                           
  3127                           ; 2 bytes @ 0x72
  3128  0000D2                     	ds	1
  3129  0000D3                     ??_NetworkManagerTask:
  3130  0000D3                     
  3131                           ; 1 bytes @ 0x73
  3132  0000D3                     	ds	1
  3133  0000D4                     TMSendDataToRFD@device:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x74
  3137  0000D4                     	ds	2
  3138  0000D6                     TMSendDataToRFD@pType:
  3139                           	opt stack 0
  3140                           
  3141                           ; 1 bytes @ 0x76
  3142  0000D6                     	ds	1
  3143  0000D7                     TMSendDataToRFD@data:
  3144                           	opt stack 0
  3145                           
  3146                           ; 2 bytes @ 0x77
  3147  0000D7                     	ds	2
  3148  0000D9                     TMSendDataToRFD@size:
  3149                           	opt stack 0
  3150                           
  3151                           ; 2 bytes @ 0x79
  3152  0000D9                     	ds	2
  3153  0000DB                     TMSendDataToRFD@isSecure:
  3154                           	opt stack 0
  3155                           
  3156                           ; 1 bytes @ 0x7B
  3157  0000DB                     	ds	1
  3158  0000DC                     NetworkUnicastData@mAddress:
  3159                           	opt stack 0
  3160  0000DC                     NetworkManagerProcessIncomingData@data:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x7C
  3164  0000DC                     	ds	2
  3165  0000DE                     NetworkUnicastData@res:
  3166                           	opt stack 0
  3167  0000DE                     NetworkManagerProcessIncomingData@size:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0x7E
  3171  0000DE                     	ds	1
  3172  0000DF                     MiApp_UnicastAddress@src:
  3173                           	opt stack 0
  3174                           
  3175                           ; 2 bytes @ 0x7F
  3176  0000DF                     	ds	1
  3177  0000E0                     NetworkManagerProcessIncomingData@isBroadcast:
  3178                           	opt stack 0
  3179                           
  3180                           ; 1 bytes @ 0x80
  3181  0000E0                     	ds	1
  3182  0000E1                     NetworkManagerProcessIncomingData@isSecure:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x81
  3186  0000E1                     	ds	1
  3187  0000E2                     
  3188                           ; 1 bytes @ 0x82
  3189  0000E2                     	ds	1
  3190  0000E3                     ??_radioReceivedPacket:
  3191                           
  3192                           ; 1 bytes @ 0x83
  3193  0000E3                     	ds	6
  3194  0000E9                     tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           postinc0	equ	0xFEE
  3199                           wreg	equ	0xFE8
  3200                           postdec1	equ	0xFE5
  3201                           fsr1h	equ	0xFE2
  3202                           fsr1l	equ	0xFE1
  3203                           
  3204                           ; 1 bytes @ 0x89
  3205                           
  3206                           	psect	cstackCOMRAM
  3207  000001                     __pcstackCOMRAM:
  3208                           	opt stack 0
  3209  000001                     ?i2_MiWi_TickGet:
  3210                           	opt stack 0
  3211  000001                     ?i2_krnd:
  3212                           	opt stack 0
  3213  000001                     i2DelayUS@delay:
  3214                           	opt stack 0
  3215                           
  3216                           ; 4 bytes @ 0x0
  3217  000001                     	ds	1
  3218  000002                     i2SPIPut@v:
  3219                           	opt stack 0
  3220                           
  3221                           ; 1 bytes @ 0x1
  3222  000002                     	ds	1
  3223  000003                     i2RegisterRead@address:
  3224                           	opt stack 0
  3225  000003                     i2WriteFIFO@Data:
  3226                           	opt stack 0
  3227  000003                     i2RegisterSet@setting:
  3228                           	opt stack 0
  3229                           
  3230                           ; 2 bytes @ 0x2
  3231  000003                     	ds	1
  3232  000004                     i2RegisterRead@value:
  3233                           	opt stack 0
  3234  000004                     i2WriteFIFO@IRQ1select:
  3235                           	opt stack 0
  3236                           
  3237                           ; 1 bytes @ 0x3
  3238  000004                     	ds	1
  3239  000005                     ??i2_krnd:
  3240  000005                     i2RegisterSet@IRQ1select:
  3241                           	opt stack 0
  3242  000005                     i2RegisterRead@IRQ1select:
  3243                           	opt stack 0
  3244  000005                     i2DelayUS@i:
  3245                           	opt stack 0
  3246  000005                     i2MiWi_TickGet@t1ext:
  3247                           	opt stack 0
  3248                           
  3249                           ; 4 bytes @ 0x4
  3250  000005                     	ds	1
  3251  000006                     i2SetRFMode@mode:
  3252                           	opt stack 0
  3253                           
  3254                           ; 1 bytes @ 0x5
  3255  000006                     	ds	3
  3256  000009                     i2DelayMs@ms:
  3257                           	opt stack 0
  3258  000009                     i2MiWi_TickGet@tmrval:
  3259                           	opt stack 0
  3260  000009                     i2krnd@t:
  3261                           	opt stack 0
  3262                           
  3263                           ; 4 bytes @ 0x8
  3264  000009                     	ds	4
  3265  00000D                     ??i2_DelayMs:
  3266  00000D                     ?i2_MiWi_TickGetMs:
  3267                           	opt stack 0
  3268                           
  3269                           ; 4 bytes @ 0xC
  3270  00000D                     	ds	4
  3271  000011                     i2MiWi_TickGetMs@tnow:
  3272                           	opt stack 0
  3273                           
  3274                           ; 4 bytes @ 0x10
  3275  000011                     	ds	4
  3276  000015                     i2TxPacket@CCA:
  3277                           	opt stack 0
  3278                           
  3279                           ; 1 bytes @ 0x14
  3280  000015                     	ds	1
  3281  000016                     ??i2_TxPacket:
  3282                           
  3283                           ; 1 bytes @ 0x15
  3284  000016                     	ds	4
  3285  00001A                     i2TxPacket@TxPacketLen:
  3286                           	opt stack 0
  3287                           
  3288                           ; 1 bytes @ 0x19
  3289  00001A                     	ds	1
  3290  00001B                     i2TxPacket@status:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x1A
  3294  00001B                     	ds	1
  3295  00001C                     i2TxPacket@t1:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x1B
  3299  00001C                     	ds	4
  3300  000020                     i2TxPacket@t2:
  3301                           	opt stack 0
  3302                           
  3303                           ; 4 bytes @ 0x1F
  3304  000020                     	ds	4
  3305  000024                     i2TxPacket@delay:
  3306                           	opt stack 0
  3307                           
  3308                           ; 2 bytes @ 0x23
  3309  000024                     	ds	2
  3310  000026                     i2TxPacket@reTry:
  3311                           	opt stack 0
  3312                           
  3313                           ; 1 bytes @ 0x25
  3314  000026                     	ds	1
  3315  000027                     i2TxPacket@allowedTxFailure:
  3316                           	opt stack 0
  3317                           
  3318                           ; 1 bytes @ 0x26
  3319  000027                     	ds	1
  3320  000028                     i2TxPacket@j:
  3321                           	opt stack 0
  3322                           
  3323                           ; 2 bytes @ 0x27
  3324  000028                     	ds	2
  3325  00002A                     i2TxPacket@rssival:
  3326                           	opt stack 0
  3327                           
  3328                           ; 1 bytes @ 0x29
  3329  00002A                     	ds	1
  3330  00002B                     i2TxPacket@i:
  3331                           	opt stack 0
  3332                           
  3333                           ; 1 bytes @ 0x2A
  3334  00002B                     	ds	1
  3335  00002C                     ??_HighISR:
  3336                           
  3337                           ; 1 bytes @ 0x2B
  3338  00002C                     	ds	10
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           postdec1	equ	0xFE5
  3346                           fsr1h	equ	0xFE2
  3347                           fsr1l	equ	0xFE1
  3348                           
  3349 ;;
  3350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3351 ;;
  3352 ;; *************** function _main *****************
  3353 ;; Defined at:
  3354 ;;		line 34 in file "../src/mainCoordinator.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  counter         1  141[BANK1 ] unsigned char 
  3359 ;;  pButtonPress    1  140[BANK1 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2  382[None  ] int 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : F/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3372 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels required when called:   17
  3375 ;; This function calls:
  3376 ;;		_ButtonTask
  3377 ;;		_HardwareInit
  3378 ;;		_InitSymbolTimer
  3379 ;;		_LCDUpdate
  3380 ;;		_LEDCommand
  3381 ;;		_LEDManagerTask
  3382 ;;		_MiApp_DiscardMessage
  3383 ;;		_MiApp_InitSleepRFDBuffers
  3384 ;;		_MiApp_MessageAvailable
  3385 ;;		_MiApp_ProtocolInit
  3386 ;;		_MiApp_SetAddressPan
  3387 ;;		_MiApp_SetChannel
  3388 ;;		_MiApp_StartConnection
  3389 ;;		_MiApp_UnicastAddress
  3390 ;;		_Read_MAC_Address
  3391 ;;		_isButtonPressed
  3392 ;;		_memcpy
  3393 ;;		_sprintf
  3394 ;; This function is called by:
  3395 ;;		Startup code after reset
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text0
  3400  003B0A                     __ptext0:
  3401                           	opt stack 0
  3402  003B0A                     _main:
  3403                           	opt stack 14
  3404                           
  3405                           ;mainCoordinator.c: 36: bool pButtonPressed=0;
  3406                           
  3407                           ;incstack = 0
  3408  003B0A  0101               	movlb	1	; () banked
  3409  003B0C  6B8C               	clrf	main@pButtonPressed& (0+255),b
  3410                           
  3411                           ;mainCoordinator.c: 37: uint8_t counter=0;
  3412  003B0E  6B8D               	clrf	main@counter& (0+255),b
  3413                           
  3414                           ;mainCoordinator.c: 39: myDeviceType=DeviceCoordinator;
  3415  003B10  6BC2               	clrf	_myDeviceType& (0+255),b
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;mainCoordinator.c: 41: HardwareInit();
  3419  003B12  ECD6  F02C         	call	_HardwareInit	;wreg free
  3420                           
  3421                           ; BSR set to: 14
  3422                           ;mainCoordinator.c: 42: InitSymbolTimer();
  3423  003B16  EC83  F03A         	call	_InitSymbolTimer	;wreg free
  3424                           
  3425                           ; BSR set to: 1
  3426                           ;mainCoordinator.c: 44: myAddr=Read_MAC_Address();
  3427  003B1A  EC4C  F036         	call	_Read_MAC_Address	;wreg free
  3428  003B1E  C07F  F1E7         	movff	?_Read_MAC_Address,_myAddr
  3429  003B22  C080  F1E8         	movff	?_Read_MAC_Address+1,_myAddr+1
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;mainCoordinator.c: 46: currentChannel = 25;
  3433  003B26  0E19               	movlw	25
  3434  003B28  0101               	movlb	1	; () banked
  3435  003B2A  6FFB               	movwf	_currentChannel& (0+255),b
  3436                           
  3437                           ;mainCoordinator.c: 48: MiApp_SetAddressPan(myAddr.bytes, 0x5533);
  3438  003B2C  0EE7               	movlw	low _myAddr
  3439  003B2E  0100               	movlb	0	; () banked
  3440  003B30  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
  3441  003B32  0E01               	movlw	high _myAddr
  3442  003B34  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
  3443  003B36  0E55               	movlw	85
  3444  003B38  6F86               	movwf	(MiApp_SetAddressPan@panid+1)& (0+255),b
  3445  003B3A  0E33               	movlw	51
  3446  003B3C  6F85               	movwf	MiApp_SetAddressPan@panid& (0+255),b
  3447  003B3E  EC25  F036         	call	_MiApp_SetAddressPan	;wreg free
  3448                           
  3449                           ;mainCoordinator.c: 49: MiApp_ProtocolInit(0);
  3450  003B42  EC29  F034         	call	_MiApp_ProtocolInit
  3451                           
  3452                           ;mainCoordinator.c: 50: MiApp_SetChannel(currentChannel);
  3453  003B46  0E19               	movlw	25
  3454  003B48  ECAF  F03A         	call	_MiApp_SetChannel
  3455                           
  3456                           ;mainCoordinator.c: 51: MiApp_StartConnection(0,0,0);
  3457  003B4C  0100               	movlb	0	; () banked
  3458  003B4E  6B9A               	clrf	MiApp_StartConnection@ScanDuration& (0+255),b
  3459  003B50  6B9B               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  3460  003B52  6B9C               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  3461  003B54  6B9D               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  3462  003B56  6B9E               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  3463  003B58  ECD9  F038         	call	_MiApp_StartConnection
  3464                           
  3465                           ; BSR set to: 1
  3466                           ;mainCoordinator.c: 52: MiApp_InitSleepRFDBuffers(sleepRFDData,sizeof(sleepRFDData),10);
  3467  003B5C  0E00               	movlw	low _sleepRFDData
  3468  003B5E  0100               	movlb	0	; () banked
  3469  003B60  6F7B               	movwf	MiApp_InitSleepRFDBuffers@buffer& (0+255),b
  3470  003B62  0E09               	movlw	high _sleepRFDData
  3471  003B64  6F7C               	movwf	(MiApp_InitSleepRFDBuffers@buffer+1)& (0+255),b
  3472  003B66  6B7E               	clrf	(MiApp_InitSleepRFDBuffers@bufferSize+1)& (0+255),b
  3473  003B68  0E4B               	movlw	75
  3474  003B6A  6F7D               	movwf	MiApp_InitSleepRFDBuffers@bufferSize& (0+255),b
  3475  003B6C  6B80               	clrf	(MiApp_InitSleepRFDBuffers@rfdMaxDataSize+1)& (0+255),b
  3476  003B6E  0E0A               	movlw	10
  3477  003B70  6F7F               	movwf	MiApp_InitSleepRFDBuffers@rfdMaxDataSize& (0+255),b
  3478  003B72  ECCD  F032         	call	_MiApp_InitSleepRFDBuffers	;wreg free
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;mainCoordinator.c: 56: LATCbits.LATC2 = 0;
  3482  003B76  948B               	bcf	3979,2,c	;volatile
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;mainCoordinator.c: 57: LATAbits.LATA6 = 0;
  3486  003B78  9C89               	bcf	3977,6,c	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;mainCoordinator.c: 58: LATAbits.LATA7 = 0;
  3490  003B7A  9E89               	bcf	3977,7,c	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;mainCoordinator.c: 59: sprintf(&LCDText[0],"c:%04X",*(uint16_t*)(&myAddr)); LCDUpdate()
      +                          ;
  3494  003B7C  0E95               	movlw	low _LCDText
  3495  003B7E  6F7A               	movwf	sprintf@sp& (0+255),b
  3496  003B80  0E03               	movlw	high _LCDText
  3497  003B82  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3498  003B84  0EF0               	movlw	low STR_1
  3499  003B86  6F7C               	movwf	sprintf@f& (0+255),b
  3500  003B88  0EFF               	movlw	high STR_1
  3501  003B8A  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3502  003B8C  C1E7  F07E         	movff	_myAddr,?_sprintf+4
  3503  003B90  C1E8  F07F         	movff	_myAddr+1,?_sprintf+5
  3504  003B94  EC2C  F015         	call	_sprintf	;wreg free
  3505  003B98                     l18464:
  3506  003B98  EC7B  F02C         	call	_LCDUpdate	;wreg free
  3507  003B9C                     l18466:
  3508                           
  3509                           ;mainCoordinator.c: 62: {
  3510                           ;mainCoordinator.c: 63: ButtonTask();
  3511  003B9C  EC01  F033         	call	_ButtonTask	;wreg free
  3512                           
  3513                           ;mainCoordinator.c: 64: LEDManagerTask();
  3514  003BA0  EC78  F009         	call	_LEDManagerTask	;wreg free
  3515                           
  3516                           ;mainCoordinator.c: 65: if(MiApp_MessageAvailable()==1)
  3517  003BA4  EC48  F028         	call	_MiApp_MessageAvailable	;wreg free
  3518  003BA8  06E8               	decf	wreg,f,c
  3519  003BAA  E130               	bnz	l18480
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;mainCoordinator.c: 66: {
  3523                           ;mainCoordinator.c: 67: memcpy(lastSource.bytes,rxMessage.SourceAddress,2);
  3524  003BAC  0EE5               	movlw	low _lastSource
  3525  003BAE  0100               	movlb	0	; () banked
  3526  003BB0  6F75               	movwf	memcpy@d1& (0+255),b
  3527  003BB2  0E01               	movlw	high _lastSource
  3528  003BB4  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  3529  003BB6  C2BD  F077         	movff	_rxMessage+3,memcpy@s1
  3530  003BBA  C2BE  F078         	movff	_rxMessage+4,memcpy@s1+1
  3531  003BBE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  3532  003BC0  0E02               	movlw	2
  3533  003BC2  6F79               	movwf	memcpy@n& (0+255),b
  3534  003BC4  EC05  F035         	call	_memcpy	;wreg free
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;mainCoordinator.c: 68: sprintf(&LCDText[16]," i:%04X=%02X      ",*(uint16_t*)(&lastSour
      +                          ce),rxMessage.Payload[1]); LCDUpdate();
  3538  003BC8  0EA5               	movlw	low (_LCDText+16)
  3539  003BCA  6F7A               	movwf	sprintf@sp& (0+255),b
  3540  003BCC  0E03               	movlw	high (_LCDText+16)
  3541  003BCE  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3542  003BD0  0ECC               	movlw	low STR_2
  3543  003BD2  6F7C               	movwf	sprintf@f& (0+255),b
  3544  003BD4  0EFF               	movlw	high STR_2
  3545  003BD6  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3546  003BD8  C1E5  F07E         	movff	_lastSource,?_sprintf+4
  3547  003BDC  C1E6  F07F         	movff	_lastSource+1,?_sprintf+5
  3548  003BE0  0102               	movlb	2	; () banked
  3549  003BE2  EE20 F001          	lfsr	2,1
  3550  003BE6  51BF               	movf	(_rxMessage+5)& (0+255),w,b
  3551  003BE8  26D9               	addwf	fsr2l,f,c
  3552  003BEA  51C0               	movf	(_rxMessage+6)& (0+255),w,b
  3553  003BEC  22DA               	addwfc	fsr2h,f,c
  3554  003BEE  50DF               	movf	indf2,w,c
  3555  003BF0  0100               	movlb	0	; () banked
  3556  003BF2  6F80               	movwf	(?_sprintf+6)& (0+255),b
  3557  003BF4  6B81               	clrf	(?_sprintf+7)& (0+255),b
  3558  003BF6  EC2C  F015         	call	_sprintf	;wreg free
  3559                           
  3560                           ; BSR set to: 0
  3561  003BFA  EC7B  F02C         	call	_LCDUpdate	;wreg free
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;mainCoordinator.c: 69: LEDCommand(LEDGreen,lCMD_Toggle);
  3565  003BFE  0E04               	movlw	4
  3566  003C00  6F73               	movwf	LEDCommand@cmd& (0+255),b
  3567  003C02  0E00               	movlw	0
  3568  003C04  EC79  F037         	call	_LEDCommand
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;mainCoordinator.c: 71: MiApp_DiscardMessage();
  3572  003C08  EC02  F03B         	call	_MiApp_DiscardMessage	;wreg free
  3573  003C0C                     l18480:
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;mainCoordinator.c: 72: }
  3577                           ;mainCoordinator.c: 74: if(isButtonPressed(0)==1)
  3578  003C0C  0E00               	movlw	0
  3579  003C0E  ECF0  F038         	call	_isButtonPressed
  3580  003C12  06E8               	decf	wreg,f,c
  3581  003C14  E137               	bnz	l385
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;mainCoordinator.c: 75: {
  3585                           ;mainCoordinator.c: 76: if(pButtonPressed==0)
  3586  003C16  0101               	movlb	1	; () banked
  3587  003C18  518C               	movf	main@pButtonPressed& (0+255),w,b
  3588  003C1A  E1C0               	bnz	l18466
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;mainCoordinator.c: 77: {
  3592                           ;mainCoordinator.c: 78: pButtonPressed=1;
  3593  003C1C  0E01               	movlw	1
  3594  003C1E  6F8C               	movwf	main@pButtonPressed& (0+255),b
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;mainCoordinator.c: 79: {TxData = 0;};
  3598  003C20  6BBE               	clrf	_TxData& (0+255),b
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;mainCoordinator.c: 80: TxBuffer[TxData++] = mUserDataType;
  3602  003C22  0E88               	movlw	low _TxBuffer
  3603  003C24  25BE               	addwf	_TxData& (0+255),w,b
  3604  003C26  6ED9               	movwf	fsr2l,c
  3605  003C28  6ADA               	clrf	fsr2h,c
  3606  003C2A  0E07               	movlw	high _TxBuffer
  3607  003C2C  22DA               	addwfc	fsr2h,f,c
  3608  003C2E  0E0A               	movlw	10
  3609  003C30  6EDF               	movwf	indf2,c
  3610                           
  3611                           ; BSR set to: 1
  3612  003C32  2BBE               	incf	_TxData& (0+255),f,b
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;mainCoordinator.c: 81: TxBuffer[TxData++] = counter;
  3616  003C34  0E88               	movlw	low _TxBuffer
  3617  003C36  25BE               	addwf	_TxData& (0+255),w,b
  3618  003C38  6ED9               	movwf	fsr2l,c
  3619  003C3A  6ADA               	clrf	fsr2h,c
  3620  003C3C  0E07               	movlw	high _TxBuffer
  3621  003C3E  22DA               	addwfc	fsr2h,f,c
  3622  003C40  C18D  FFDF         	movff	main@counter,indf2
  3623                           
  3624                           ; BSR set to: 1
  3625  003C44  2BBE               	incf	_TxData& (0+255),f,b
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;mainCoordinator.c: 82: if(MiApp_UnicastAddress(lastSource.bytes,(0),0)==1)
  3629  003C46  0EE5               	movlw	low _lastSource
  3630  003C48  6F47               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  3631  003C4A  0E01               	movlw	high _lastSource
  3632  003C4C  6F48               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  3633  003C4E  6B49               	clrf	MiApp_UnicastAddress@Origin& (0+255),b
  3634  003C50  6B4A               	clrf	(MiApp_UnicastAddress@Origin+1)& (0+255),b
  3635  003C52  6B4B               	clrf	MiApp_UnicastAddress@SecEn& (0+255),b
  3636  003C54  ECD3  F037         	call	_MiApp_UnicastAddress	;wreg free
  3637  003C58  06E8               	decf	wreg,f,c
  3638  003C5A  E1A0               	bnz	l18466
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;mainCoordinator.c: 83: {
  3642                           ;mainCoordinator.c: 85: sprintf(&LCDText[16]," o:%04X=%02X          ",*(uint16_t*)(&last
      +                          Source),counter++); LCDUpdate();
  3643  003C5C  0EA5               	movlw	low (_LCDText+16)
  3644  003C5E  6F7A               	movwf	sprintf@sp& (0+255),b
  3645  003C60  0E03               	movlw	high (_LCDText+16)
  3646  003C62  6F7B               	movwf	(sprintf@sp+1)& (0+255),b
  3647  003C64  0EB5               	movlw	low STR_3
  3648  003C66  6F7C               	movwf	sprintf@f& (0+255),b
  3649  003C68  0EFF               	movlw	high STR_3
  3650  003C6A  6F7D               	movwf	(sprintf@f+1)& (0+255),b
  3651  003C6C  C1E5  F07E         	movff	_lastSource,?_sprintf+4
  3652  003C70  C1E6  F07F         	movff	_lastSource+1,?_sprintf+5
  3653  003C74  C18D  F080         	movff	main@counter,?_sprintf+6
  3654  003C78  6B81               	clrf	(?_sprintf+7)& (0+255),b
  3655  003C7A  EC2C  F015         	call	_sprintf	;wreg free
  3656                           
  3657                           ; BSR set to: 0
  3658  003C7E  0101               	movlb	1	; () banked
  3659  003C80  2B8D               	incf	main@counter& (0+255),f,b
  3660  003C82  D78A               	goto	l18464
  3661  003C84                     l385:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;mainCoordinator.c: 89: {
  3665                           ;mainCoordinator.c: 90: pButtonPressed=0;
  3666  003C84  0101               	movlb	1	; () banked
  3667  003C86  6B8C               	clrf	main@pButtonPressed& (0+255),b
  3668                           
  3669                           ; BSR set to: 0
  3670  003C88  D789               	goto	l18466
  3671  003C8A                     __end_of_main:
  3672                           	opt stack 0
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           postinc0	equ	0xFEE
  3678                           wreg	equ	0xFE8
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           
  3686 ;; *************** function _sprintf *****************
  3687 ;; Defined at:
  3688 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  sp              2   26[BANK0 ] PTR unsigned char 
  3691 ;;		 -> LCDText(33), 
  3692 ;;  f               2   28[BANK0 ] PTR const unsigned char 
  3693 ;;		 -> STR_3(23), STR_2(19), STR_1(7), 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  idx             1   38[BANK0 ] unsigned char 
  3696 ;;  tmpval          4    0        struct .
  3697 ;;  cp              3    0        PTR const unsigned char 
  3698 ;;  width           2   44[BANK0 ] int 
  3699 ;;  val             2   41[BANK0 ] unsigned int 
  3700 ;;  len             2    0        unsigned int 
  3701 ;;  c               1   46[BANK0 ] char 
  3702 ;;  prec            1   43[BANK0 ] char 
  3703 ;;  flag            1   40[BANK0 ] unsigned char 
  3704 ;;  ap              1   39[BANK0 ] PTR void [1]
  3705 ;;		 -> ?_sprintf(2), 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   26[BANK0 ] int 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : F/0
  3712 ;;		On exit  : F/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3715 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;Total ram usage:       21 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    6
  3722 ;; This function calls:
  3723 ;;		___lwdiv
  3724 ;;		___wmul
  3725 ;;		_isdigit
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text1
  3732  002A58                     __ptext1:
  3733                           	opt stack 0
  3734  002A58                     _sprintf:
  3735                           	opt stack 24
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;doprnt.c: 494: va_list ap;
  3739                           ;doprnt.c: 499: signed char c;
  3740                           ;doprnt.c: 501: int width;
  3741                           ;doprnt.c: 506: signed char prec;
  3742                           ;doprnt.c: 508: unsigned char flag;
  3743                           ;doprnt.c: 523: union {
  3744                           ;doprnt.c: 524: unsigned long vd;
  3745                           ;doprnt.c: 525: double integ;
  3746                           ;doprnt.c: 526: } tmpval;
  3747                           ;doprnt.c: 528: unsigned int val;
  3748                           ;doprnt.c: 529: unsigned len;
  3749                           ;doprnt.c: 530: const char * cp;
  3750                           ;doprnt.c: 533: *ap = __va_start();
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;incstack = 0
  3754  002A58  0E7E               	movlw	low (?_sprintf+4)
  3755  002A5A  6F87               	movwf	sprintf@ap& (0+255),b
  3756                           
  3757                           ;doprnt.c: 536: while(c = *f++) {
  3758  002A5C  D0E3               	goto	l18404
  3759  002A5E                     l18328:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;doprnt.c: 538: if(c != '%')
  3763  002A5E  0E25               	movlw	37
  3764  002A60  198E               	xorwf	sprintf@c& (0+255),w,b
  3765  002A62  E009               	bz	l973
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;doprnt.c: 540: {
  3769                           ;doprnt.c: 541: ((*sp++ = (c)));
  3770  002A64  C07A  FFD9         	movff	sprintf@sp,fsr2l
  3771  002A68  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  3772  002A6C  C08E  FFDF         	movff	sprintf@c,indf2
  3773                           
  3774                           ; BSR set to: 0
  3775  002A70  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  3776  002A72  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  3777                           
  3778                           ;doprnt.c: 542: continue;
  3779  002A74  D0D7               	goto	l18404
  3780  002A76                     l973:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;doprnt.c: 543: }
  3784                           ;doprnt.c: 546: width = 0;
  3785  002A76  6B8C               	clrf	sprintf@width& (0+255),b
  3786  002A78  6B8D               	clrf	(sprintf@width+1)& (0+255),b
  3787                           
  3788                           ;doprnt.c: 548: flag = 0;
  3789  002A7A  6B88               	clrf	sprintf@flag& (0+255),b
  3790  002A7C  D003               	goto	l18338
  3791  002A7E                     l18334:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;doprnt.c: 580: flag |= 0x04;
  3795  002A7E  8588               	bsf	sprintf@flag& (0+255),2,b
  3796                           
  3797                           ;doprnt.c: 581: f++;
  3798  002A80  4B7C               	infsnz	sprintf@f& (0+255),f,b
  3799  002A82  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  3800  002A84                     l18338:
  3801                           
  3802                           ; BSR set to: 0
  3803  002A84  C07C  FFF6         	movff	sprintf@f,tblptrl
  3804  002A88  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  3805  002A8C                     	if	0	;tblptru may be non-zero
  3806  002A8C                     	endif
  3807  002A8C                     	if	0	;tblptru may be non-zero
  3808  002A8C                     	endif
  3809  002A8C  0008               	tblrd		*
  3810  002A8E  50F5               	movf	tablat,w,c
  3811                           
  3812                           ; Switch size 1, requested type "speed"
  3813                           ; Number of cases is 1, Range of values is 48 to 48
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte            4     3 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  002A90  0A30               	xorlw	48	; case 48
  3819  002A92  E0F5               	bz	l18334
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3823  002A94  C07C  FFF6         	movff	sprintf@f,tblptrl
  3824  002A98  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  3825  002A9C                     	if	0	;tblptru may be non-zero
  3826  002A9C                     	endif
  3827  002A9C                     	if	0	;tblptru may be non-zero
  3828  002A9C                     	endif
  3829  002A9C  0008               	tblrd		*
  3830  002A9E  50F5               	movf	tablat,w,c
  3831  002AA0  ECF0  F039         	call	_isdigit
  3832  002AA4  E32D               	bnc	l18354
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;doprnt.c: 598: width = 0;
  3836  002AA6  6B8C               	clrf	sprintf@width& (0+255),b
  3837  002AA8  6B8D               	clrf	(sprintf@width+1)& (0+255),b
  3838  002AAA                     l18344:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;doprnt.c: 600: width *= 10;
  3842  002AAA  C08C  F073         	movff	sprintf@width,___wmul@multiplier
  3843  002AAE  C08D  F074         	movff	sprintf@width+1,___wmul@multiplier+1
  3844  002AB2  6B76               	clrf	(___wmul@multiplicand+1)& (0+255),b
  3845  002AB4  0E0A               	movlw	10
  3846  002AB6  6F75               	movwf	___wmul@multiplicand& (0+255),b
  3847  002AB8  EC71  F039         	call	___wmul	;wreg free
  3848  002ABC  C073  F08C         	movff	?___wmul,sprintf@width
  3849  002AC0  C074  F08D         	movff	?___wmul+1,sprintf@width+1
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;doprnt.c: 601: width += *f++ - '0';
  3853  002AC4  0ED0               	movlw	208
  3854  002AC6  6F82               	movwf	??_sprintf& (0+255),b
  3855  002AC8  6983               	setf	(??_sprintf+1)& (0+255),b
  3856  002ACA  C07C  FFF6         	movff	sprintf@f,tblptrl
  3857  002ACE  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  3858  002AD2                     	if	0	;tblptru may be non-zero
  3859  002AD2                     	endif
  3860  002AD2                     	if	0	;tblptru may be non-zero
  3861  002AD2                     	endif
  3862  002AD2  0008               	tblrd		*
  3863  002AD4  50F5               	movf	tablat,w,c
  3864  002AD6  6F84               	movwf	(??_sprintf+2)& (0+255),b
  3865  002AD8  6B85               	clrf	(??_sprintf+3)& (0+255),b
  3866  002ADA  5182               	movf	??_sprintf& (0+255),w,b
  3867  002ADC  2784               	addwf	(??_sprintf+2)& (0+255),f,b
  3868  002ADE  5183               	movf	(??_sprintf+1)& (0+255),w,b
  3869  002AE0  2385               	addwfc	(??_sprintf+3)& (0+255),f,b
  3870  002AE2  5184               	movf	(??_sprintf+2)& (0+255),w,b
  3871  002AE4  278C               	addwf	sprintf@width& (0+255),f,b
  3872  002AE6  5185               	movf	(??_sprintf+3)& (0+255),w,b
  3873  002AE8  238D               	addwfc	(sprintf@width+1)& (0+255),f,b
  3874                           
  3875                           ; BSR set to: 0
  3876  002AEA  4B7C               	infsnz	sprintf@f& (0+255),f,b
  3877  002AEC  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3881  002AEE  C07C  FFF6         	movff	sprintf@f,tblptrl
  3882  002AF2  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  3883  002AF6                     	if	0	;tblptru may be non-zero
  3884  002AF6                     	endif
  3885  002AF6                     	if	0	;tblptru may be non-zero
  3886  002AF6                     	endif
  3887  002AF6  0008               	tblrd		*
  3888  002AF8  50F5               	movf	tablat,w,c
  3889  002AFA  ECF0  F039         	call	_isdigit
  3890  002AFE  E2D5               	bc	l18344
  3891  002B00                     l18354:
  3892                           
  3893                           ; BSR set to: 0
  3894  002B00  C07C  FFF6         	movff	sprintf@f,tblptrl
  3895  002B04  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  3896  002B08  4B7C               	infsnz	sprintf@f& (0+255),f,b
  3897  002B0A  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  3898  002B0C                     	if	0	;tblptru may be non-zero
  3899  002B0C                     	endif
  3900  002B0C                     	if	0	;tblptru may be non-zero
  3901  002B0C                     	endif
  3902  002B0C  0008               	tblrd		*
  3903  002B0E  CFF5 F08E          	movff	tablat,sprintf@c
  3904  002B12  518E               	movf	sprintf@c& (0+255),w,b
  3905                           
  3906                           ; Switch size 1, requested type "speed"
  3907                           ; Number of cases is 3, Range of values is 0 to 120
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte           10     6 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912  002B14  E101 D092          	bz	l18406
  3913  002B18  0A58               	xorlw	88	; case 88
  3914  002B1A  E003               	bz	l18356
  3915  002B1C  0A20               	xorlw	32	; case 120
  3916  002B1E  E001 D081          	bnz	l18404
  3917  002B22                     l18356:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;doprnt.c: 1273: {
  3921                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3922  002B22  5187               	movf	sprintf@ap& (0+255),w,b
  3923  002B24  6ED9               	movwf	fsr2l,c
  3924  002B26  6ADA               	clrf	fsr2h,c
  3925  002B28  CFDE F089          	movff	postinc2,sprintf@val
  3926  002B2C  CFDD F08A          	movff	postdec2,sprintf@val+1
  3927                           
  3928                           ; BSR set to: 0
  3929  002B30  0E02               	movlw	2
  3930  002B32  2787               	addwf	sprintf@ap& (0+255),f,b
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;doprnt.c: 1287: }
  3934                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3935  002B34  0E01               	movlw	1
  3936  002B36  6F8E               	movwf	sprintf@c& (0+255),b
  3937  002B38                     l18366:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3941  002B38  518E               	movf	sprintf@c& (0+255),w,b
  3942  002B3A  0D02               	mullw	2
  3943  002B3C  0E9D               	movlw	low _hexpowers
  3944  002B3E  24F3               	addwf	prodl,w,c
  3945  002B40  6EF6               	movwf	tblptrl,c
  3946  002B42  0EFF               	movlw	high _hexpowers
  3947  002B44  20F4               	addwfc	prodh,w,c
  3948  002B46  6EF7               	movwf	tblptrh,c
  3949  002B48                     	if	0	;There are less than 3 active tblptr bytes
  3950  002B48                     	endif
  3951  002B48  0009               	tblrd		*+
  3952  002B4A  50F5               	movf	tablat,w,c
  3953  002B4C  5D89               	subwf	sprintf@val& (0+255),w,b
  3954  002B4E  0009               	tblrd		*+
  3955  002B50  50F5               	movf	tablat,w,c
  3956  002B52  598A               	subwfb	(sprintf@val+1)& (0+255),w,b
  3957  002B54  E304               	bnc	l18374
  3958                           
  3959                           ; BSR set to: 0
  3960  002B56  2B8E               	incf	sprintf@c& (0+255),f,b
  3961                           
  3962                           ; BSR set to: 0
  3963  002B58  0E04               	movlw	4
  3964  002B5A  198E               	xorwf	sprintf@c& (0+255),w,b
  3965  002B5C  E1ED               	bnz	l18366
  3966  002B5E                     l18374:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;doprnt.c: 1381: if(width > c)
  3970  002B5E  0E80               	movlw	128
  3971  002B60  BF8E               	btfsc	sprintf@c& (0+255),7,b
  3972  002B62  0E7F               	movlw	127
  3973  002B64  6F82               	movwf	??_sprintf& (0+255),b
  3974  002B66  518C               	movf	sprintf@width& (0+255),w,b
  3975  002B68  5D8E               	subwf	sprintf@c& (0+255),w,b
  3976  002B6A  518D               	movf	(sprintf@width+1)& (0+255),w,b
  3977  002B6C  0A80               	xorlw	128
  3978  002B6E  5982               	subwfb	??_sprintf& (0+255),w,b
  3979  002B70  E207               	bc	l993
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;doprnt.c: 1382: width -= c;
  3983  002B72  518E               	movf	sprintf@c& (0+255),w,b
  3984  002B74  5F8C               	subwf	sprintf@width& (0+255),f,b
  3985  002B76  0E00               	movlw	0
  3986  002B78  BF8E               	btfsc	sprintf@c& (0+255),7,b
  3987  002B7A  0EFF               	movlw	255
  3988  002B7C  5B8D               	subwfb	(sprintf@width+1)& (0+255),f,b
  3989  002B7E  D002               	goto	l994
  3990  002B80                     l993:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;doprnt.c: 1383: else
  3994                           ;doprnt.c: 1384: width = 0;
  3995  002B80  6B8C               	clrf	sprintf@width& (0+255),b
  3996  002B82  6B8D               	clrf	(sprintf@width+1)& (0+255),b
  3997  002B84                     l994:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;doprnt.c: 1387: if(flag & 0x04) {
  4001  002B84  A588               	btfss	sprintf@flag& (0+255),2,b
  4002  002B86  D00F               	goto	l18386
  4003  002B88                     
  4004                           ; BSR set to: 0
  4005                           ;doprnt.c: 1415: if(width)
  4006  002B88  518C               	movf	sprintf@width& (0+255),w,b
  4007  002B8A  118D               	iorwf	(sprintf@width+1)& (0+255),w,b
  4008  002B8C  E01D               	bz	l999
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4012  002B8E  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4013  002B92  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4014  002B96  0E30               	movlw	48
  4015  002B98  6EDF               	movwf	indf2,c
  4016                           
  4017                           ; BSR set to: 0
  4018  002B9A  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4019  002B9C  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;doprnt.c: 1418: while(--width);
  4023  002B9E  078C               	decf	sprintf@width& (0+255),f,b
  4024  002BA0  A0D8               	btfss	status,0,c
  4025  002BA2  078D               	decf	(sprintf@width+1)& (0+255),f,b
  4026  002BA4  D7F1               	goto	L15
  4027  002BA6                     l18386:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;doprnt.c: 1422: {
  4031                           ;doprnt.c: 1424: if(width
  4032                           ;doprnt.c: 1428: )
  4033  002BA6  518C               	movf	sprintf@width& (0+255),w,b
  4034  002BA8  118D               	iorwf	(sprintf@width+1)& (0+255),w,b
  4035  002BAA  E00E               	bz	l999
  4036  002BAC                     l18388:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4040  002BAC  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4041  002BB0  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4042  002BB4  0E20               	movlw	32
  4043  002BB6  6EDF               	movwf	indf2,c
  4044                           
  4045                           ; BSR set to: 0
  4046  002BB8  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4047  002BBA  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;doprnt.c: 1431: while(--width);
  4051  002BBC  078C               	decf	sprintf@width& (0+255),f,b
  4052  002BBE  A0D8               	btfss	status,0,c
  4053  002BC0  078D               	decf	(sprintf@width+1)& (0+255),f,b
  4054  002BC2  518C               	movf	sprintf@width& (0+255),w,b
  4055  002BC4  118D               	iorwf	(sprintf@width+1)& (0+255),w,b
  4056  002BC6  E1F2               	bnz	l18388
  4057  002BC8                     l999:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;doprnt.c: 1469: }
  4061                           ;doprnt.c: 1472: prec = c;
  4062  002BC8  C08E  F08B         	movff	sprintf@c,sprintf@prec
  4063                           
  4064                           ;doprnt.c: 1474: while(prec--) {
  4065  002BCC  D028               	goto	l18402
  4066  002BCE                     l18394:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;doprnt.c: 1478: {
  4070                           ;doprnt.c: 1499: {
  4071                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4072  002BCE  C089  F073         	movff	sprintf@val,___lwdiv@dividend
  4073  002BD2  C08A  F074         	movff	sprintf@val+1,___lwdiv@dividend+1
  4074  002BD6  518B               	movf	sprintf@prec& (0+255),w,b
  4075  002BD8  0D02               	mullw	2
  4076  002BDA  0E9D               	movlw	low _hexpowers
  4077  002BDC  24F3               	addwf	prodl,w,c
  4078  002BDE  6EF6               	movwf	tblptrl,c
  4079  002BE0  0EFF               	movlw	high _hexpowers
  4080  002BE2  20F4               	addwfc	prodh,w,c
  4081  002BE4  6EF7               	movwf	tblptrh,c
  4082  002BE6                     	if	0	;There are less than 3 active tblptr bytes
  4083  002BE6                     	endif
  4084  002BE6  0009               	tblrd		*+
  4085  002BE8  CFF5 F075          	movff	tablat,___lwdiv@divisor
  4086  002BEC  000A               	tblrd		*-
  4087  002BEE  CFF5 F076          	movff	tablat,___lwdiv@divisor+1
  4088  002BF2  EC71  F036         	call	___lwdiv	;wreg free
  4089  002BF6  5173               	movf	?___lwdiv& (0+255),w,b
  4090  002BF8  0B0F               	andlw	15
  4091  002BFA  6F86               	movwf	sprintf@idx& (0+255),b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4095  002BFC  0EDF               	movlw	low STR_4
  4096  002BFE  2586               	addwf	sprintf@idx& (0+255),w,b
  4097  002C00  6EF6               	movwf	tblptrl,c
  4098  002C02  6AF7               	clrf	tblptrh,c
  4099  002C04  0EFF               	movlw	high STR_4
  4100  002C06  22F7               	addwfc	tblptrh,f,c
  4101  002C08                     	if	0	;There are less than 3 active tblptr bytes
  4102  002C08                     	endif
  4103  002C08  0008               	tblrd		*
  4104  002C0A  CFF5 F08E          	movff	tablat,sprintf@c
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;doprnt.c: 1508: }
  4108                           ;doprnt.c: 1523: }
  4109                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4110  002C0E  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4111  002C12  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4112  002C16  C08E  FFDF         	movff	sprintf@c,indf2
  4113                           
  4114                           ; BSR set to: 0
  4115  002C1A  4B7A               	infsnz	sprintf@sp& (0+255),f,b
  4116  002C1C  2B7B               	incf	(sprintf@sp+1)& (0+255),f,b
  4117  002C1E                     l18402:
  4118                           
  4119                           ; BSR set to: 0
  4120  002C1E  078B               	decf	sprintf@prec& (0+255),f,b
  4121  002C20  298B               	incf	sprintf@prec& (0+255),w,b
  4122  002C22  E1D5               	bnz	l18394
  4123  002C24                     l18404:
  4124                           
  4125                           ; BSR set to: 0
  4126  002C24  C07C  FFF6         	movff	sprintf@f,tblptrl
  4127  002C28  C07D  FFF7         	movff	sprintf@f+1,tblptrh
  4128  002C2C  4B7C               	infsnz	sprintf@f& (0+255),f,b
  4129  002C2E  2B7D               	incf	(sprintf@f+1)& (0+255),f,b
  4130  002C30                     	if	0	;tblptru may be non-zero
  4131  002C30                     	endif
  4132  002C30                     	if	0	;tblptru may be non-zero
  4133  002C30                     	endif
  4134  002C30  0008               	tblrd		*
  4135  002C32  CFF5 F08E          	movff	tablat,sprintf@c
  4136  002C36  518E               	movf	sprintf@c& (0+255),w,b
  4137  002C38  E001 D711          	bnz	l18328
  4138  002C3C                     l18406:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;doprnt.c: 1538: *sp = 0;
  4142  002C3C  C07A  FFD9         	movff	sprintf@sp,fsr2l
  4143  002C40  C07B  FFDA         	movff	sprintf@sp+1,fsr2h
  4144  002C44  6ADF               	clrf	indf2,c
  4145                           
  4146                           ; BSR set to: 0
  4147  002C46  0C00               	retlw	0	;funcret
  4148  002C48                     __end_of_sprintf:
  4149                           	opt stack 0
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           prodh	equ	0xFF4
  4155                           prodl	equ	0xFF3
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           indf2	equ	0xFDF
  4162                           postinc2	equ	0xFDE
  4163                           postdec2	equ	0xFDD
  4164                           fsr2h	equ	0xFDA
  4165                           fsr2l	equ	0xFD9
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function _isdigit *****************
  4169 ;; Defined at:
  4170 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  c               1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  c               1   21[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;		None               void
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : F/0
  4181 ;;		On exit  : F/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    5
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_sprintf
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text2
  4199  0073E0                     __ptext2:
  4200                           	opt stack 0
  4201  0073E0                     _isdigit:
  4202                           	opt stack 24
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;incstack = 0
  4206                           ;isdigit@c stored from wreg
  4207  0073E0  6F75               	movwf	isdigit@c& (0+255),b
  4208  0073E2  0100               	movlb	0	; () banked
  4209  0073E4  6B74               	clrf	_isdigit$4797& (0+255),b
  4210                           
  4211                           ; BSR set to: 0
  4212  0073E6  0E3A               	movlw	58
  4213  0073E8  6175               	cpfslt	isdigit@c& (0+255),b
  4214  0073EA  D005               	goto	l14058
  4215                           
  4216                           ; BSR set to: 0
  4217  0073EC  0E2F               	movlw	47
  4218  0073EE  6575               	cpfsgt	isdigit@c& (0+255),b
  4219  0073F0  D002               	goto	l14058
  4220                           
  4221                           ; BSR set to: 0
  4222  0073F2  0E01               	movlw	1
  4223  0073F4  6F74               	movwf	_isdigit$4797& (0+255),b
  4224  0073F6                     l14058:
  4225                           
  4226                           ; BSR set to: 0
  4227  0073F6  C074  F073         	movff	_isdigit$4797,??_isdigit
  4228  0073FA  3173               	rrcf	??_isdigit& (0+255),w,b
  4229                           
  4230                           ; BSR set to: 0
  4231  0073FC  0012               	return		;funcret
  4232  0073FE                     __end_of_isdigit:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec1	equ	0xFE5
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function ___wmul *****************
  4253 ;; Defined at:
  4254 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  multiplier      2   19[BANK0 ] unsigned int 
  4257 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  product         2   23[BANK0 ] unsigned int 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2   19[BANK0 ] unsigned int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, prodl, prodh
  4264 ;; Tracked objects:
  4265 ;;		On entry : F/0
  4266 ;;		On exit  : F/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;Total ram usage:        6 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    5
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_sprintf
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text3
  4284  0072E2                     __ptext3:
  4285                           	opt stack 0
  4286  0072E2                     ___wmul:
  4287                           	opt stack 24
  4288                           
  4289                           ; BSR set to: 0
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;incstack = 0
  4293  0072E2  5173               	movf	___wmul@multiplier& (0+255),w,b
  4294  0072E4  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4295  0072E6  CFF3 F077          	movff	prodl,___wmul@product
  4296  0072EA  CFF4 F078          	movff	prodh,___wmul@product+1
  4297  0072EE  5173               	movf	___wmul@multiplier& (0+255),w,b
  4298  0072F0  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4299  0072F2  50F3               	movf	prodl,w,c
  4300  0072F4  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4301  0072F6  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4302  0072F8  0375               	mulwf	___wmul@multiplicand& (0+255),b
  4303  0072FA  50F3               	movf	prodl,w,c
  4304  0072FC  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  4305                           
  4306                           ; BSR set to: 0
  4307  0072FE  C077  F073         	movff	___wmul@product,?___wmul
  4308  007302  C078  F074         	movff	___wmul@product+1,?___wmul+1
  4309                           
  4310                           ; BSR set to: 0
  4311  007306  0012               	return		;funcret
  4312  007308                     __end_of___wmul:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           fsr2h	equ	0xFDA
  4329                           fsr2l	equ	0xFD9
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _isButtonPressed *****************
  4333 ;; Defined at:
  4334 ;;		line 475 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  index           1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  index           1   21[BANK0 ] unsigned char 
  4339 ;;  mask            1   22[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      unsigned char 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : F/1
  4346 ;;		On exit  : F/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4352 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4353 ;;Total ram usage:        4 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    5
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text4
  4364  0071E0                     __ptext4:
  4365                           	opt stack 0
  4366  0071E0                     _isButtonPressed:
  4367                           	opt stack 25
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;incstack = 0
  4371                           ;isButtonPressed@index stored from wreg
  4372  0071E0  0100               	movlb	0	; () banked
  4373  0071E2  6F75               	movwf	isButtonPressed@index& (0+255),b
  4374                           
  4375                           ;system.c: 477: uint8_t mask=(1<<index);
  4376  0071E4  C075  F073         	movff	isButtonPressed@index,??_isButtonPressed
  4377  0071E8  0E01               	movlw	1
  4378  0071EA  6F74               	movwf	(??_isButtonPressed+1)& (0+255),b
  4379  0071EC  2B73               	incf	??_isButtonPressed& (0+255),f,b
  4380  0071EE  D002               	goto	u16804
  4381  0071F0                     u16805:
  4382  0071F0  90D8               	bcf	status,0,c
  4383  0071F2  3774               	rlcf	(??_isButtonPressed+1)& (0+255),f,b
  4384  0071F4                     u16804:
  4385  0071F4  2F73               	decfsz	??_isButtonPressed& (0+255),f,b
  4386  0071F6  D7FC               	goto	u16805
  4387  0071F8  0100               	movlb	0	; () banked
  4388  0071FA  5174               	movf	(??_isButtonPressed+1)& (0+255),w,b
  4389  0071FC  6F76               	movwf	isButtonPressed@mask& (0+255),b
  4390                           
  4391                           ;system.c: 478: return((switches & mask)>0);
  4392  0071FE  0101               	movlb	1	; () banked
  4393  007200  51C6               	movf	_switches& (0+255),w,b
  4394  007202  0100               	movlb	0	; () banked
  4395  007204  1576               	andwf	isButtonPressed@mask& (0+255),w,b
  4396  007206  A4D8               	btfss	status,2,c
  4397  007208  0C01               	retlw	1
  4398                           
  4399                           ; BSR set to: 0
  4400  00720A  0C00               	retlw	0	;funcret
  4401  00720C                     __end_of_isButtonPressed:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           postdec1	equ	0xFE5
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           postdec2	equ	0xFDD
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function _Read_MAC_Address *****************
  4422 ;; Defined at:
  4423 ;;		line 119 in file "../src/mainCoordinator.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  addr8           6   34[BANK0 ] unsigned char [6]
  4428 ;;  address         2   40[BANK0 ] struct addr_t_def
  4429 ;;  i               1   44[BANK0 ] unsigned char 
  4430 ;;  j               1    0        unsigned char 
  4431 ;;  pAddress        1   42[BANK0 ] PTR unsigned char 
  4432 ;;		 -> Read_MAC_Address@address(2), 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  2   31[BANK0 ] struct addr_t_def
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : F/1
  4439 ;;		On exit  : F/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;Total ram usage:       14 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    8
  4449 ;; This function calls:
  4450 ;;		_EEPROMRead
  4451 ;;		_memcpy
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text5
  4458  006C98                     __ptext5:
  4459                           	opt stack 0
  4460  006C98                     _Read_MAC_Address:
  4461                           	opt stack 22
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;mainCoordinator.c: 121: uint8_t addr8[6];
  4465                           ;mainCoordinator.c: 122: addr_t address;
  4466                           ;mainCoordinator.c: 123: uint8_t *pAddress=(uint8_t*)&address;
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;incstack = 0
  4470  006C98  0E88               	movlw	low Read_MAC_Address@address
  4471  006C9A  0100               	movlb	0	; () banked
  4472  006C9C  6F8A               	movwf	Read_MAC_Address@pAddress& (0+255),b
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;mainCoordinator.c: 126: for(i=0;i<6;i++)
  4476                           
  4477                           ; BSR set to: 0
  4478  006C9E  6B8C               	clrf	Read_MAC_Address@i& (0+255),b
  4479  006CA0                     l18240:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;mainCoordinator.c: 127: {
  4483                           ;mainCoordinator.c: 128: EEPROMRead(&(addr8[6-1-i]), 0xFA+i, 1);
  4484  006CA0  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  4485  006CA2  0805               	sublw	5
  4486  006CA4  6F81               	movwf	??_Read_MAC_Address& (0+255),b
  4487  006CA6  5181               	movf	??_Read_MAC_Address& (0+255),w,b
  4488  006CA8  0F82               	addlw	low Read_MAC_Address@addr8
  4489  006CAA  6F75               	movwf	EEPROMRead@dest& (0+255),b
  4490  006CAC  518C               	movf	Read_MAC_Address@i& (0+255),w,b
  4491  006CAE  0FFA               	addlw	250
  4492  006CB0  6F76               	movwf	EEPROMRead@addr& (0+255),b
  4493  006CB2  0E01               	movlw	1
  4494  006CB4  6F77               	movwf	EEPROMRead@count& (0+255),b
  4495  006CB6  ECC2  F038         	call	_EEPROMRead	;wreg free
  4496                           
  4497                           ; BSR set to: 0
  4498  006CBA  2B8C               	incf	Read_MAC_Address@i& (0+255),f,b
  4499                           
  4500                           ; BSR set to: 0
  4501  006CBC  0E05               	movlw	5
  4502  006CBE  658C               	cpfsgt	Read_MAC_Address@i& (0+255),b
  4503  006CC0  D7EF               	goto	l18240
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;mainCoordinator.c: 146: else
  4507                           ;mainCoordinator.c: 147: {
  4508                           ;mainCoordinator.c: 148: memcpy(pAddress,addr8,2);
  4509  006CC2  C08A  F075         	movff	Read_MAC_Address@pAddress,memcpy@d1
  4510  006CC6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  4511  006CC8  0E82               	movlw	low Read_MAC_Address@addr8
  4512  006CCA  6F77               	movwf	memcpy@s1& (0+255),b
  4513  006CCC  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  4514  006CCE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  4515  006CD0  0E02               	movlw	2
  4516  006CD2  6F79               	movwf	memcpy@n& (0+255),b
  4517  006CD4  EC05  F035         	call	_memcpy	;wreg free
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;mainCoordinator.c: 149: }
  4521                           ;mainCoordinator.c: 150: return address;
  4522  006CD8  C088  F07F         	movff	Read_MAC_Address@address,?_Read_MAC_Address
  4523  006CDC  C089  F080         	movff	Read_MAC_Address@address+1,?_Read_MAC_Address+1
  4524                           
  4525                           ; BSR set to: 0
  4526  006CE0  0012               	return		;funcret
  4527  006CE2                     __end_of_Read_MAC_Address:
  4528                           	opt stack 0
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           postdec1	equ	0xFE5
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _EEPROMRead *****************
  4548 ;; Defined at:
  4549 ;;		line 106 in file "../src/mainCoordinator.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dest            1   21[BANK0 ] PTR unsigned char 
  4552 ;;		 -> Read_MAC_Address@addr8(6), 
  4553 ;;  addr            1   22[BANK0 ] unsigned char 
  4554 ;;  count           1   23[BANK0 ] unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : F/0
  4563 ;;		On exit  : F/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4570 ;;Total ram usage:        3 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    7
  4573 ;; This function calls:
  4574 ;;		_SPIGet2
  4575 ;;		_SPIPut2
  4576 ;; This function is called by:
  4577 ;;		_Read_MAC_Address
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text6
  4582  007184                     __ptext6:
  4583                           	opt stack 0
  4584  007184                     _EEPROMRead:
  4585                           	opt stack 22
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;mainCoordinator.c: 108: LATDbits.LATD5 = 0;
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;incstack = 0
  4592  007184  9A8C               	bcf	3980,5,c	;volatile
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;mainCoordinator.c: 109: SPIPut2(0x03);
  4596  007186  0E03               	movlw	3
  4597  007188  EC4B  F03A         	call	_SPIPut2
  4598                           
  4599                           ;mainCoordinator.c: 110: SPIPut2(addr);
  4600  00718C  0100               	movlb	0	; () banked
  4601  00718E  5176               	movf	EEPROMRead@addr& (0+255),w,b
  4602  007190  EC4B  F03A         	call	_SPIPut2
  4603                           
  4604                           ;mainCoordinator.c: 111: while( count )
  4605  007194  D009               	goto	l13424
  4606  007196                     l13418:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;mainCoordinator.c: 112: {
  4610                           ;mainCoordinator.c: 113: *dest++ = SPIGet2();
  4611  007196  5175               	movf	EEPROMRead@dest& (0+255),w,b
  4612  007198  6ED9               	movwf	fsr2l,c
  4613  00719A  6ADA               	clrf	fsr2h,c
  4614  00719C  ECD2  F03A         	call	_SPIGet2	;wreg free
  4615  0071A0  6EDF               	movwf	indf2,c
  4616  0071A2  0100               	movlb	0	; () banked
  4617  0071A4  2B75               	incf	EEPROMRead@dest& (0+255),f,b
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;mainCoordinator.c: 114: count--;
  4621  0071A6  0777               	decf	EEPROMRead@count& (0+255),f,b
  4622  0071A8                     l13424:
  4623  0071A8  0100               	movlb	0	; () banked
  4624  0071AA  5177               	movf	EEPROMRead@count& (0+255),w,b
  4625  0071AC  E1F4               	bnz	l13418
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;mainCoordinator.c: 115: }
  4629                           ;mainCoordinator.c: 116: LATDbits.LATD5 = 1;
  4630  0071AE  8A8C               	bsf	3980,5,c	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633  0071B0  0012               	return		;funcret
  4634  0071B2                     __end_of_EEPROMRead:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           postinc0	equ	0xFEE
  4643                           wreg	equ	0xFE8
  4644                           postdec1	equ	0xFE5
  4645                           fsr1h	equ	0xFE2
  4646                           fsr1l	equ	0xFE1
  4647                           indf2	equ	0xFDF
  4648                           postinc2	equ	0xFDE
  4649                           postdec2	equ	0xFDD
  4650                           fsr2h	equ	0xFDA
  4651                           fsr2l	equ	0xFD9
  4652                           status	equ	0xFD8
  4653                           
  4654 ;; *************** function _SPIGet2 *****************
  4655 ;; Defined at:
  4656 ;;		line 383 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : F/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    6
  4677 ;; This function calls:
  4678 ;;		_SPIPut2
  4679 ;; This function is called by:
  4680 ;;		_EEPROMRead
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text7
  4685  0075A4                     __ptext7:
  4686                           	opt stack 0
  4687  0075A4                     _SPIGet2:
  4688                           	opt stack 22
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;spi.c: 408: SPIPut2(0x00);
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;incstack = 0
  4695  0075A4  0E00               	movlw	0
  4696  0075A6  EC4B  F03A         	call	_SPIPut2
  4697                           
  4698                           ;spi.c: 409: return SSP2BUF;
  4699  0075AA  5075               	movf	3957,w,c	;volatile
  4700  0075AC  0012               	return		;funcret
  4701  0075AE                     __end_of_SPIGet2:
  4702                           	opt stack 0
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           postdec1	equ	0xFE5
  4712                           fsr1h	equ	0xFE2
  4713                           fsr1l	equ	0xFE1
  4714                           indf2	equ	0xFDF
  4715                           postinc2	equ	0xFDE
  4716                           postdec2	equ	0xFDD
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721 ;; *************** function _MiApp_UnicastAddress *****************
  4722 ;; Defined at:
  4723 ;;		line 224 in file "../src/Bridge.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  DestinationA    2   71[BANK1 ] PTR unsigned char 
  4726 ;;		 -> lastSource(2), 
  4727 ;;  Origin          2   73[BANK1 ] PTR unsigned char 
  4728 ;;		 -> NULL(0), 
  4729 ;;  SecEn           1   75[BANK1 ] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  src             2  127[BANK0 ] struct addr_t_def
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      unsigned char 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : F/1
  4738 ;;		On exit  : F/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4741 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;Total ram usage:        7 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:   15
  4748 ;; This function calls:
  4749 ;;		_NetworkUnicastData
  4750 ;;		_memcpy
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text8
  4757  006FA6                     __ptext8:
  4758                           	opt stack 0
  4759  006FA6                     _MiApp_UnicastAddress:
  4760                           	opt stack 15
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;Bridge.c: 226: addr_t src;
  4764                           ;Bridge.c: 227: memcpy(src.bytes,DestinationAddress,2);
  4765                           
  4766                           ;incstack = 0
  4767  006FA6  0EDF               	movlw	low MiApp_UnicastAddress@src
  4768  006FA8  0100               	movlb	0	; () banked
  4769  006FAA  6F75               	movwf	memcpy@d1& (0+255),b
  4770  006FAC  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  4771  006FAE  C147  F077         	movff	MiApp_UnicastAddress@DestinationAddress,memcpy@s1
  4772  006FB2  C148  F078         	movff	MiApp_UnicastAddress@DestinationAddress+1,memcpy@s1+1
  4773  006FB6  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  4774  006FB8  0E02               	movlw	2
  4775  006FBA  6F79               	movwf	memcpy@n& (0+255),b
  4776  006FBC  EC05  F035         	call	_memcpy	;wreg free
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;Bridge.c: 228: return(NetworkUnicastData(src, TxBuffer, TxData,SecEn));
  4780  006FC0  C0DF  F140         	movff	MiApp_UnicastAddress@src,NetworkUnicastData@address
  4781  006FC4  C0E0  F141         	movff	MiApp_UnicastAddress@src+1,NetworkUnicastData@address+1
  4782  006FC8  0E88               	movlw	low _TxBuffer
  4783  006FCA  0101               	movlb	1	; () banked
  4784  006FCC  6F42               	movwf	NetworkUnicastData@data& (0+255),b
  4785  006FCE  0E07               	movlw	high _TxBuffer
  4786  006FD0  6F43               	movwf	(NetworkUnicastData@data+1)& (0+255),b
  4787  006FD2  C1BE  F144         	movff	_TxData,NetworkUnicastData@size
  4788  006FD6  6B45               	clrf	(NetworkUnicastData@size+1)& (0+255),b
  4789  006FD8  C14B  F146         	movff	MiApp_UnicastAddress@SecEn,NetworkUnicastData@isSecure
  4790  006FDC  EF7F  F025         	goto	_NetworkUnicastData	;wreg free
  4791  006FE0                     __end_of_MiApp_UnicastAddress:
  4792                           	opt stack 0
  4793                           tblptru	equ	0xFF8
  4794                           tblptrh	equ	0xFF7
  4795                           tblptrl	equ	0xFF6
  4796                           tablat	equ	0xFF5
  4797                           prodh	equ	0xFF4
  4798                           prodl	equ	0xFF3
  4799                           postinc0	equ	0xFEE
  4800                           wreg	equ	0xFE8
  4801                           postdec1	equ	0xFE5
  4802                           fsr1h	equ	0xFE2
  4803                           fsr1l	equ	0xFE1
  4804                           indf2	equ	0xFDF
  4805                           postinc2	equ	0xFDE
  4806                           postdec2	equ	0xFDD
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function _NetworkUnicastData *****************
  4812 ;; Defined at:
  4813 ;;		line 237 in file "../NetworkBridge.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  address         2   64[BANK1 ] struct addr_t_def
  4816 ;;  data            2   66[BANK1 ] PTR unsigned char 
  4817 ;;		 -> TxBuffer(64), 
  4818 ;;  size            2   68[BANK1 ] unsigned int 
  4819 ;;  isSecure        1   70[BANK1 ] unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  mAddress        2  124[BANK0 ] PTR struct addr_t_def
  4822 ;;		 -> MyAddress(2), 
  4823 ;;  res             1  126[BANK0 ] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      unsigned char 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : F/1
  4830 ;;		On exit  : F/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4833 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;Total ram usage:       10 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:   14
  4840 ;; This function calls:
  4841 ;;		_CoordinatorAddress
  4842 ;;		_CoordinatorGenericAddress
  4843 ;;		_DeviceManagerBufferDeviceData
  4844 ;;		_DeviceManagerGetDeviceType
  4845 ;;		_NetworkGetDeviceType
  4846 ;;		_NetworkManagerGetMyAddress
  4847 ;;		_TMSendDataToRFD
  4848 ;;		_TMSendFormedPacketTowardsCoordinator
  4849 ;;		_isSameAddress
  4850 ;; This function is called by:
  4851 ;;		_MiApp_UnicastAddress
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text9
  4856  004AFE                     __ptext9:
  4857                           	opt stack 0
  4858  004AFE                     _NetworkUnicastData:
  4859                           	opt stack 15
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;NetworkBridge.c: 239: bool res=0;
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;incstack = 0
  4866  004AFE  0100               	movlb	0	; () banked
  4867  004B00  6BDE               	clrf	NetworkUnicastData@res& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;NetworkBridge.c: 240: addr_t *mAddress=NetworkManagerGetMyAddress();
  4871  004B02  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
  4872  004B06  C073  F0DC         	movff	?_NetworkManagerGetMyAddress,NetworkUnicastData@mAddress
  4873  004B0A  C074  F0DD         	movff	?_NetworkManagerGetMyAddress+1,NetworkUnicastData@mAddress+1
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;NetworkBridge.c: 241: if(NetworkGetDeviceType()==DeviceCoordinator)
  4877  004B0E  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  4878  004B12  0900               	iorlw	0
  4879  004B14  E14B               	bnz	l17572
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;NetworkBridge.c: 242: {
  4883                           ;NetworkBridge.c: 243: if( (isSameAddress(address,*mAddress)==0) && (isSameAddress(addre
      +                          ss,CoordinatorGenericAddress())==0) )
  4884  004B16  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  4885  004B1A  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  4886  004B1E  C0DC  FFD9         	movff	NetworkUnicastData@mAddress,fsr2l
  4887  004B22  C0DD  FFDA         	movff	NetworkUnicastData@mAddress+1,fsr2h
  4888  004B26  CFDE F07F          	movff	postinc2,isSameAddress@a2
  4889  004B2A  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  4890  004B2E  ECBD  F039         	call	_isSameAddress	;wreg free
  4891  004B32  0900               	iorlw	0
  4892  004B34  E178               	bnz	l17580
  4893                           
  4894                           ; BSR set to: 0
  4895  004B36  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  4896  004B3A  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  4897  004B3E  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
  4898  004B42  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  4899  004B46  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  4900  004B4A  ECBD  F039         	call	_isSameAddress	;wreg free
  4901  004B4E  0900               	iorlw	0
  4902  004B50  E16A               	bnz	l17580
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;NetworkBridge.c: 244: {
  4906                           ;NetworkBridge.c: 246: if(DeviceManagerGetDeviceType(address)==DeviceSleepingRFD)
  4907  004B52  C140  F081         	movff	NetworkUnicastData@address,DeviceManagerGetDeviceType@address
  4908  004B56  C141  F082         	movff	NetworkUnicastData@address+1,DeviceManagerGetDeviceType@address+1
  4909  004B5A  EC22  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  4910  004B5E  0A02               	xorlw	2
  4911  004B60  E112               	bnz	l17570
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;NetworkBridge.c: 247: {
  4915                           ;NetworkBridge.c: 250: res=DeviceManagerBufferDeviceData(address,data,size,isSecure,0);
  4916  004B62  C140  F07F         	movff	NetworkUnicastData@address,DeviceManagerBufferDeviceData@address
  4917  004B66  C141  F080         	movff	NetworkUnicastData@address+1,DeviceManagerBufferDeviceData@address+1
  4918  004B6A  C142  F081         	movff	NetworkUnicastData@data,DeviceManagerBufferDeviceData@data
  4919  004B6E  C143  F082         	movff	NetworkUnicastData@data+1,DeviceManagerBufferDeviceData@data+1
  4920  004B72  C144  F083         	movff	NetworkUnicastData@size,DeviceManagerBufferDeviceData@size
  4921  004B76  C145  F084         	movff	NetworkUnicastData@size+1,DeviceManagerBufferDeviceData@size+1
  4922  004B7A  C146  F085         	movff	NetworkUnicastData@isSecure,DeviceManagerBufferDeviceData@isSecure
  4923  004B7E  6B86               	clrf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  4924  004B80  ECB5  F01F         	call	_DeviceManagerBufferDeviceData	;wreg free
  4925  004B84  D04F               	goto	L1
  4926  004B86                     l17570:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;NetworkBridge.c: 253: {
  4930                           ;NetworkBridge.c: 254: res=TMSendDataToRFD(address,PacketData,data,size, isSecure);
  4931  004B86  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  4932  004B8A  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  4933  004B8E  0E23               	movlw	35
  4934  004B90  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  4935  004B92  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  4936  004B96  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  4937  004B9A  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  4938  004B9E  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  4939  004BA2  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  4940  004BA6  ECAD  F035         	call	_TMSendDataToRFD	;wreg free
  4941  004BAA  D03C               	goto	L1
  4942  004BAC                     l17572:
  4943                           
  4944                           ; BSR set to: 1
  4945                           ;NetworkBridge.c: 258: {
  4946                           ;NetworkBridge.c: 259: if( (isSameAddress(address,CoordinatorAddress())==1) || (isSameAd
      +                          dress(address,CoordinatorGenericAddress())==1) )
  4947  004BAC  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  4948  004BB0  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  4949  004BB4  ECDC  F03A         	call	_CoordinatorAddress	;wreg free
  4950  004BB8  C073  F07F         	movff	?_CoordinatorAddress,isSameAddress@a2
  4951  004BBC  C074  F080         	movff	?_CoordinatorAddress+1,isSameAddress@a2+1
  4952  004BC0  ECBD  F039         	call	_isSameAddress	;wreg free
  4953  004BC4  06E8               	decf	wreg,f,c
  4954  004BC6  E00E               	bz	l17576
  4955                           
  4956                           ; BSR set to: 0
  4957  004BC8  C140  F07D         	movff	NetworkUnicastData@address,isSameAddress@a1
  4958  004BCC  C141  F07E         	movff	NetworkUnicastData@address+1,isSameAddress@a1+1
  4959  004BD0  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
  4960  004BD4  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  4961  004BD8  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  4962  004BDC  ECBD  F039         	call	_isSameAddress	;wreg free
  4963  004BE0  06E8               	decf	wreg,f,c
  4964  004BE2  E10E               	bnz	l17578
  4965  004BE4                     l17576:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;NetworkBridge.c: 260: {
  4969                           ;NetworkBridge.c: 261: res=TMSendFormedPacketTowardsCoordinator(data,size,0, isSecure);
  4970  004BE4  C142  F089         	movff	NetworkUnicastData@data,TMSendFormedPacketTowardsCoordinator@data
  4971  004BE8  C143  F08A         	movff	NetworkUnicastData@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  4972  004BEC  C144  F08B         	movff	NetworkUnicastData@size,TMSendFormedPacketTowardsCoordinator@size
  4973  004BF0  C145  F08C         	movff	NetworkUnicastData@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  4974  004BF4  6B8D               	clrf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  4975  004BF6  C146  F08E         	movff	NetworkUnicastData@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  4976  004BFA  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  4977  004BFE  D012               	goto	L1
  4978  004C00                     l17578:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;NetworkBridge.c: 263: {
  4982                           ;NetworkBridge.c: 264: res=TMSendDataToRFD(address,PacketRoutedData,data,size, isSecure)
      +                          ;
  4983  004C00  C140  F0D4         	movff	NetworkUnicastData@address,TMSendDataToRFD@device
  4984  004C04  C141  F0D5         	movff	NetworkUnicastData@address+1,TMSendDataToRFD@device+1
  4985  004C08  0E26               	movlw	38
  4986  004C0A  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
  4987  004C0C  C142  F0D7         	movff	NetworkUnicastData@data,TMSendDataToRFD@data
  4988  004C10  C143  F0D8         	movff	NetworkUnicastData@data+1,TMSendDataToRFD@data+1
  4989  004C14  C144  F0D9         	movff	NetworkUnicastData@size,TMSendDataToRFD@size
  4990  004C18  C145  F0DA         	movff	NetworkUnicastData@size+1,TMSendDataToRFD@size+1
  4991  004C1C  C146  F0DB         	movff	NetworkUnicastData@isSecure,TMSendDataToRFD@isSecure
  4992  004C20  ECAD  F035         	call	_TMSendDataToRFD	;wreg free
  4993  004C24                     L1:
  4994  004C24  6FDE               	movwf	NetworkUnicastData@res& (0+255),b
  4995  004C26                     l17580:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;NetworkBridge.c: 265: }
  4999                           ;NetworkBridge.c: 266: }
  5000                           ;NetworkBridge.c: 267: return(res);
  5001  004C26  51DE               	movf	NetworkUnicastData@res& (0+255),w,b
  5002                           
  5003                           ; BSR set to: 0
  5004  004C28  0012               	return		;funcret
  5005  004C2A                     __end_of_NetworkUnicastData:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           postdec1	equ	0xFE5
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _MiApp_StartConnection *****************
  5026 ;; Defined at:
  5027 ;;		line 178 in file "../src/Bridge.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  Mode            1    wreg     unsigned char 
  5030 ;;  ScanDuration    1   58[BANK0 ] unsigned char 
  5031 ;;  ChannelMap      4   59[BANK0 ] unsigned long 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  Mode            1    0[COMRAM] unsigned char 
  5034 ;;  src             2   63[BANK0 ] struct addr_t_def
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      unsigned char 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : F/0
  5041 ;;		On exit  : F/1
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5044 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;Total ram usage:        7 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:   12
  5051 ;; This function calls:
  5052 ;;		_NetworkInit
  5053 ;;		_memcpy
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text10
  5060  0071B2                     __ptext10:
  5061                           	opt stack 0
  5062  0071B2                     _MiApp_StartConnection:
  5063                           	opt stack 18
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;Bridge.c: 180: addr_t src;
  5067                           ;Bridge.c: 181: memcpy(src.bytes,myLongAddress,2);
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;incstack = 0
  5071  0071B2  0E9F               	movlw	low MiApp_StartConnection@src
  5072  0071B4  6F75               	movwf	memcpy@d1& (0+255),b
  5073  0071B6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  5074  0071B8  0EFE               	movlw	low _myLongAddress
  5075  0071BA  6F77               	movwf	memcpy@s1& (0+255),b
  5076  0071BC  0E01               	movlw	high _myLongAddress
  5077  0071BE  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  5078  0071C0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5079  0071C2  0E02               	movlw	2
  5080  0071C4  6F79               	movwf	memcpy@n& (0+255),b
  5081  0071C6  EC05  F035         	call	_memcpy	;wreg free
  5082                           
  5083                           ;Bridge.c: 182: NetworkInit(src, myPANID, DeviceCoordinator);
  5084  0071CA  C09F  F093         	movff	MiApp_StartConnection@src,NetworkInit@address
  5085  0071CE  C0A0  F094         	movff	MiApp_StartConnection@src+1,NetworkInit@address+1
  5086  0071D2  C04D  F095         	movff	_myPANID,NetworkInit@PANID
  5087  0071D6  C04E  F096         	movff	_myPANID+1,NetworkInit@PANID+1
  5088  0071DA  6B97               	clrf	NetworkInit@dev& (0+255),b
  5089  0071DC  EFC5  F028         	goto	_NetworkInit	;wreg free
  5090  0071E0                     __end_of_MiApp_StartConnection:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _NetworkInit *****************
  5111 ;; Defined at:
  5112 ;;		line 166 in file "../NetworkManager.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  address         2   51[BANK0 ] struct addr_t_def
  5115 ;;  PANID           2   53[BANK0 ] unsigned int 
  5116 ;;  dev             1   55[BANK0 ] enum E145
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  devPanID        2   56[BANK0 ] unsigned int 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : F/0
  5125 ;;		On exit  : F/1
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5128 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;Total ram usage:        7 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:   11
  5135 ;; This function calls:
  5136 ;;		_BeaconManagerInit
  5137 ;;		_BroadcastManagerInit
  5138 ;;		_CacheInit
  5139 ;;		_DeviceManagerInit
  5140 ;;		_LinkEstimatorInit
  5141 ;;		_NetworkAddressSizeGet
  5142 ;;		_NetworkSetAddressPAN
  5143 ;;		_RouteManagerInit
  5144 ;;		_TransportManagerInit
  5145 ;;		_TunnelManagerInit
  5146 ;;		_krnd
  5147 ;;		_memcpy
  5148 ;;		_memset
  5149 ;; This function is called by:
  5150 ;;		_MiApp_StartConnection
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text11
  5155  00518A                     __ptext11:
  5156                           	opt stack 0
  5157  00518A                     _NetworkInit:
  5158                           	opt stack 18
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;NetworkManager.c: 168: uint16_t devPanID;
  5162                           ;NetworkManager.c: 170: DeviceType=dev;
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;incstack = 0
  5166  00518A  C097  F1F9         	movff	NetworkInit@dev,_DeviceType
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;NetworkManager.c: 171: memset(&routeInfo,0x00,sizeof(route_info_t));
  5170  00518E  0ED4               	movlw	low _routeInfo
  5171  005190  6F73               	movwf	memset@p1& (0+255),b
  5172  005192  0E01               	movlw	high _routeInfo
  5173  005194  6F74               	movwf	(memset@p1+1)& (0+255),b
  5174  005196  6B76               	clrf	(memset@c+1)& (0+255),b
  5175  005198  6B75               	clrf	memset@c& (0+255),b
  5176  00519A  6B78               	clrf	(memset@n+1)& (0+255),b
  5177  00519C  0E07               	movlw	7
  5178  00519E  6F77               	movwf	memset@n& (0+255),b
  5179  0051A0  EC47  F039         	call	_memset	;wreg free
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;NetworkManager.c: 173: routeInfo.congested=0;
  5183  0051A4  0101               	movlb	1	; () banked
  5184  0051A6  6BD9               	clrf	(_routeInfo+5)& (0+255),b
  5185                           
  5186                           ; BSR set to: 1
  5187                           ;NetworkManager.c: 174: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
  5188  0051A8  0EFC               	movlw	low _MyAddress
  5189  0051AA  0100               	movlb	0	; () banked
  5190  0051AC  6F75               	movwf	memcpy@d1& (0+255),b
  5191  0051AE  0E01               	movlw	high _MyAddress
  5192  0051B0  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  5193  0051B2  0E93               	movlw	low NetworkInit@address
  5194  0051B4  6F77               	movwf	memcpy@s1& (0+255),b
  5195  0051B6  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  5196  0051B8  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  5197  0051BC  0100               	movlb	0	; () banked
  5198  0051BE  6F79               	movwf	memcpy@n& (0+255),b
  5199  0051C0  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5200  0051C2  EC05  F035         	call	_memcpy	;wreg free
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;NetworkManager.c: 175: if(dev==DeviceCoordinator)
  5204  0051C6  5197               	movf	NetworkInit@dev& (0+255),w,b
  5205  0051C8  E11C               	bnz	l17526
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;NetworkManager.c: 176: {
  5209                           ;NetworkManager.c: 177: CoordinatorAddr=MyAddress;
  5210  0051CA  C1FC  F1E1         	movff	_MyAddress,_CoordinatorAddr
  5211  0051CE  C1FD  F1E2         	movff	_MyAddress+1,_CoordinatorAddr+1
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;NetworkManager.c: 178: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
  5215  0051D2  0ED4               	movlw	low _routeInfo
  5216  0051D4  6F75               	movwf	memcpy@d1& (0+255),b
  5217  0051D6  0E01               	movlw	high _routeInfo
  5218  0051D8  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  5219  0051DA  0E93               	movlw	low NetworkInit@address
  5220  0051DC  6F77               	movwf	memcpy@s1& (0+255),b
  5221  0051DE  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  5222  0051E0  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  5223  0051E4  0100               	movlb	0	; () banked
  5224  0051E6  6F79               	movwf	memcpy@n& (0+255),b
  5225  0051E8  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  5226  0051EA  EC05  F035         	call	_memcpy	;wreg free
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;NetworkManager.c: 179: routeInfo.etx=0;
  5230  0051EE  0101               	movlb	1	; () banked
  5231  0051F0  6BD6               	clrf	(_routeInfo+2)& (0+255),b
  5232  0051F2  6BD7               	clrf	(_routeInfo+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 1
  5235                           ;NetworkManager.c: 180: routeInfo.hasCheckedIn=1;
  5236  0051F4  0E01               	movlw	1
  5237  0051F6  6FDA               	movwf	(_routeInfo+6)& (0+255),b
  5238  0051F8                     l17524:
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;NetworkManager.c: 181: devPanID=PANID;
  5242  0051F8  C095  F098         	movff	NetworkInit@PANID,NetworkInit@devPanID
  5243  0051FC  C096  F099         	movff	NetworkInit@PANID+1,NetworkInit@devPanID+1
  5244                           
  5245                           ;NetworkManager.c: 182: }else
  5246  005200  D01F               	goto	l17534
  5247  005202                     l17526:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;NetworkManager.c: 183: {
  5251                           ;NetworkManager.c: 184: memset(CoordinatorAddr.bytes,0xff,NetworkAddressSizeGet());
  5252  005202  0EE1               	movlw	low _CoordinatorAddr
  5253  005204  6F73               	movwf	memset@p1& (0+255),b
  5254  005206  0E01               	movlw	high _CoordinatorAddr
  5255  005208  6F74               	movwf	(memset@p1+1)& (0+255),b
  5256  00520A  6B76               	clrf	(memset@c+1)& (0+255),b
  5257  00520C  6975               	setf	memset@c& (0+255),b
  5258  00520E  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  5259  005212  0100               	movlb	0	; () banked
  5260  005214  6F77               	movwf	memset@n& (0+255),b
  5261  005216  6B78               	clrf	(memset@n+1)& (0+255),b
  5262  005218  EC47  F039         	call	_memset	;wreg free
  5263                           
  5264                           ;NetworkManager.c: 185: memset(routeInfo.parent.bytes,0xff,NetworkAddressSizeGet());
  5265  00521C  0ED4               	movlw	low _routeInfo
  5266  00521E  6F73               	movwf	memset@p1& (0+255),b
  5267  005220  0E01               	movlw	high _routeInfo
  5268  005222  6F74               	movwf	(memset@p1+1)& (0+255),b
  5269  005224  6B76               	clrf	(memset@c+1)& (0+255),b
  5270  005226  6975               	setf	memset@c& (0+255),b
  5271  005228  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  5272  00522C  0100               	movlb	0	; () banked
  5273  00522E  6F77               	movwf	memset@n& (0+255),b
  5274  005230  6B78               	clrf	(memset@n+1)& (0+255),b
  5275  005232  EC47  F039         	call	_memset	;wreg free
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;NetworkManager.c: 186: routeInfo.etx=0xffff;
  5279  005236  0101               	movlb	1	; () banked
  5280  005238  69D6               	setf	(_routeInfo+2)& (0+255),b
  5281  00523A  69D7               	setf	(_routeInfo+3)& (0+255),b
  5282                           
  5283                           ; BSR set to: 1
  5284                           ;NetworkManager.c: 187: routeInfo.hasCheckedIn=0;
  5285  00523C  6BDA               	clrf	(_routeInfo+6)& (0+255),b
  5286  00523E  D7DC               	goto	l17524
  5287  005240                     l17534:
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;NetworkManager.c: 189: }
  5291                           ;NetworkManager.c: 190: NetworkSetAddressPAN(address, devPanID);
  5292  005240  C093  F07F         	movff	NetworkInit@address,NetworkSetAddressPAN@address
  5293  005244  C094  F080         	movff	NetworkInit@address+1,NetworkSetAddressPAN@address+1
  5294  005248  C098  F081         	movff	NetworkInit@devPanID,NetworkSetAddressPAN@PANID
  5295  00524C  C099  F082         	movff	NetworkInit@devPanID+1,NetworkSetAddressPAN@PANID+1
  5296  005250  ECAF  F034         	call	_NetworkSetAddressPAN	;wreg free
  5297                           
  5298                           ;NetworkManager.c: 191: DeviceManagerInit();
  5299  005254  EC1B  F03A         	call	_DeviceManagerInit	;wreg free
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;NetworkManager.c: 192: LinkEstimatorInit();
  5303  005258  ECA9  F03A         	call	_LinkEstimatorInit	;wreg free
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;NetworkManager.c: 193: BeaconManagerInit();
  5307  00525C  ECE0  F039         	call	_BeaconManagerInit	;wreg free
  5308                           
  5309                           ; BSR set to: 1
  5310                           ;NetworkManager.c: 194: RouteManagerInit();
  5311  005260  ECAA  F038         	call	_RouteManagerInit	;wreg free
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;NetworkManager.c: 195: BroadcastManagerInit();
  5315  005264  EC33  F03A         	call	_BroadcastManagerInit	;wreg free
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;NetworkManager.c: 196: TransportManagerInit();
  5319  005268  EC62  F03A         	call	_TransportManagerInit	;wreg free
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;NetworkManager.c: 197: CacheInit();
  5323  00526C  EC27  F03A         	call	_CacheInit	;wreg free
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;NetworkManager.c: 198: TunnelManagerInit();
  5327  005270  EC57  F03A         	call	_TunnelManagerInit	;wreg free
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;NetworkManager.c: 199: NetSeq=krnd();
  5331  005274  EC45  F01E         	call	_krnd	;wreg free
  5332  005278  5173               	movf	?_krnd& (0+255),w,b
  5333  00527A  0101               	movlb	1	; () banked
  5334  00527C  6FB9               	movwf	_NetSeq& (0+255),b
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;NetworkManager.c: 200: nState=netPOR;
  5338  00527E  6BC3               	clrf	_nState& (0+255),b
  5339                           
  5340                           ; BSR set to: 1
  5341  005280  0012               	return		;funcret
  5342  005282                     __end_of_NetworkInit:
  5343                           	opt stack 0
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           prodh	equ	0xFF4
  5349                           prodl	equ	0xFF3
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           postdec1	equ	0xFE5
  5353                           fsr1h	equ	0xFE2
  5354                           fsr1l	equ	0xFE1
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _TunnelManagerInit *****************
  5363 ;; Defined at:
  5364 ;;		line 112 in file "../TunnelManager.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : F/0
  5375 ;;		On exit  : F/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;Total ram usage:        0 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    6
  5385 ;; This function calls:
  5386 ;;		_memset
  5387 ;; This function is called by:
  5388 ;;		_NetworkInit
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text12
  5393  0074AE                     __ptext12:
  5394                           	opt stack 0
  5395  0074AE                     _TunnelManagerInit:
  5396                           	opt stack 22
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;TunnelManager.c: 114: memset(tunnels,0x00,sizeof(tunnels));
  5400                           
  5401                           ; BSR set to: 1
  5402                           ;incstack = 0
  5403  0074AE  0E00               	movlw	low _tunnels
  5404  0074B0  6F73               	movwf	memset@p1& (0+255),b
  5405  0074B2  0E04               	movlw	high _tunnels
  5406  0074B4  6F74               	movwf	(memset@p1+1)& (0+255),b
  5407  0074B6  6B76               	clrf	(memset@c+1)& (0+255),b
  5408  0074B8  6B75               	clrf	memset@c& (0+255),b
  5409  0074BA  6B78               	clrf	(memset@n+1)& (0+255),b
  5410  0074BC  0E78               	movlw	120
  5411  0074BE  6F77               	movwf	memset@n& (0+255),b
  5412  0074C0  EF47  F039         	goto	_memset	;wreg free
  5413  0074C4                     __end_of_TunnelManagerInit:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           prodh	equ	0xFF4
  5420                           prodl	equ	0xFF3
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           indf2	equ	0xFDF
  5427                           postinc2	equ	0xFDE
  5428                           postdec2	equ	0xFDD
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433 ;; *************** function _TransportManagerInit *****************
  5434 ;; Defined at:
  5435 ;;		line 54 in file "../TransportManager.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : F/0
  5446 ;;		On exit  : F/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    6
  5456 ;; This function calls:
  5457 ;;		_memset
  5458 ;; This function is called by:
  5459 ;;		_NetworkInit
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text13
  5464  0074C4                     __ptext13:
  5465                           	opt stack 0
  5466  0074C4                     _TransportManagerInit:
  5467                           	opt stack 22
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;TransportManager.c: 56: memset(TMQ,0x00,sizeof(TMQ));
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;incstack = 0
  5474  0074C4  0E00               	movlw	low _TMQ
  5475  0074C6  6F73               	movwf	memset@p1& (0+255),b
  5476  0074C8  0E06               	movlw	high _TMQ
  5477  0074CA  6F74               	movwf	(memset@p1+1)& (0+255),b
  5478  0074CC  6B76               	clrf	(memset@c+1)& (0+255),b
  5479  0074CE  6B75               	clrf	memset@c& (0+255),b
  5480  0074D0  6B78               	clrf	(memset@n+1)& (0+255),b
  5481  0074D2  0E98               	movlw	152
  5482  0074D4  6F77               	movwf	memset@n& (0+255),b
  5483  0074D6  EF47  F039         	goto	_memset	;wreg free
  5484  0074DA                     __end_of_TransportManagerInit:
  5485                           	opt stack 0
  5486                           tblptru	equ	0xFF8
  5487                           tblptrh	equ	0xFF7
  5488                           tblptrl	equ	0xFF6
  5489                           tablat	equ	0xFF5
  5490                           prodh	equ	0xFF4
  5491                           prodl	equ	0xFF3
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           postdec1	equ	0xFE5
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _RouteManagerInit *****************
  5505 ;; Defined at:
  5506 ;;		line 29 in file "../RouteManager.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : F/1
  5517 ;;		On exit  : F/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;Total ram usage:        0 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    8
  5527 ;; This function calls:
  5528 ;;		_MSTickGet
  5529 ;;		_memset
  5530 ;; This function is called by:
  5531 ;;		_NetworkInit
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text14
  5536  007154                     __ptext14:
  5537                           	opt stack 0
  5538  007154                     _RouteManagerInit:
  5539                           	opt stack 20
  5540                           
  5541                           ; BSR set to: 1
  5542                           ;RouteManager.c: 31: routingTableActive=0;
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;incstack = 0
  5546  007154  0100               	movlb	0	; () banked
  5547  007156  6BEB               	clrf	_routingTableActive& (0+255),b
  5548  007158  6BEC               	clrf	(_routingTableActive+1)& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;RouteManager.c: 32: memset(&NewBestParent,0xff,sizeof(NewBestParent));
  5552  00715A  0EE3               	movlw	low _NewBestParent
  5553  00715C  6F73               	movwf	memset@p1& (0+255),b
  5554  00715E  0E01               	movlw	high _NewBestParent
  5555  007160  6F74               	movwf	(memset@p1+1)& (0+255),b
  5556  007162  6B76               	clrf	(memset@c+1)& (0+255),b
  5557  007164  6975               	setf	memset@c& (0+255),b
  5558  007166  6B78               	clrf	(memset@n+1)& (0+255),b
  5559  007168  0E02               	movlw	2
  5560  00716A  6F77               	movwf	memset@n& (0+255),b
  5561  00716C  EC47  F039         	call	_memset	;wreg free
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;RouteManager.c: 33: tRouteMgr=MSTickGet();
  5565  007170  EC27  F038         	call	_MSTickGet	;wreg free
  5566  007174  EE22  F01C         	lfsr	2,_tRouteMgr
  5567  007178  0E07               	movlw	7
  5568  00717A                     u21121:
  5569  00717A  CFEB FFDB          	movff	plusw0,plusw2
  5570  00717E  06E8               	decf	wreg,f,c
  5571  007180  E2FC               	bc	u21121
  5572                           
  5573                           ; BSR set to: 0
  5574  007182  0012               	return		;funcret
  5575  007184                     __end_of_RouteManagerInit:
  5576                           	opt stack 0
  5577                           tblptru	equ	0xFF8
  5578                           tblptrh	equ	0xFF7
  5579                           tblptrl	equ	0xFF6
  5580                           tablat	equ	0xFF5
  5581                           prodh	equ	0xFF4
  5582                           prodl	equ	0xFF3
  5583                           postinc0	equ	0xFEE
  5584                           plusw0	equ	0xFEB
  5585                           wreg	equ	0xFE8
  5586                           postdec1	equ	0xFE5
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           indf2	equ	0xFDF
  5590                           postinc2	equ	0xFDE
  5591                           postdec2	equ	0xFDD
  5592                           plusw2	equ	0xFDB
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function _LinkEstimatorInit *****************
  5598 ;; Defined at:
  5599 ;;		line 46 in file "../LinkEstimator.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		None
  5608 ;; Tracked objects:
  5609 ;;		On entry : F/0
  5610 ;;		On exit  : F/1
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    5
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_NetworkInit
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text15
  5628  007552                     __ptext15:
  5629                           	opt stack 0
  5630  007552                     _LinkEstimatorInit:
  5631                           	opt stack 23
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;LinkEstimator.c: 48: prevSentIdx=0;
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;incstack = 0
  5638  007552  0101               	movlb	1	; () banked
  5639  007554  6BAF               	clrf	_prevSentIdx& (0+255),b
  5640  007556  6BB0               	clrf	(_prevSentIdx+1)& (0+255),b
  5641                           
  5642                           ;LinkEstimator.c: 49: linkEstSeq=0;
  5643  007558  6BAB               	clrf	_linkEstSeq& (0+255),b
  5644  00755A  6BAC               	clrf	(_linkEstSeq+1)& (0+255),b
  5645                           
  5646                           ; BSR set to: 1
  5647  00755C  0012               	return		;funcret
  5648  00755E                     __end_of_LinkEstimatorInit:
  5649                           	opt stack 0
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           prodh	equ	0xFF4
  5655                           prodl	equ	0xFF3
  5656                           postinc0	equ	0xFEE
  5657                           plusw0	equ	0xFEB
  5658                           wreg	equ	0xFE8
  5659                           postdec1	equ	0xFE5
  5660                           fsr1h	equ	0xFE2
  5661                           fsr1l	equ	0xFE1
  5662                           indf2	equ	0xFDF
  5663                           postinc2	equ	0xFDE
  5664                           postdec2	equ	0xFDD
  5665                           plusw2	equ	0xFDB
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function _DeviceManagerInit *****************
  5671 ;; Defined at:
  5672 ;;		line 86 in file "../DeviceManager.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : E/1
  5683 ;;		On exit  : F/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    6
  5693 ;; This function calls:
  5694 ;;		_memset
  5695 ;; This function is called by:
  5696 ;;		_NetworkInit
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text16
  5701  007436                     __ptext16:
  5702                           	opt stack 0
  5703  007436                     _DeviceManagerInit:
  5704                           	opt stack 22
  5705                           
  5706                           ;DeviceManager.c: 88: memset(list,0xff,sizeof(list));
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;incstack = 0
  5710  007436  0E00               	movlw	low _list
  5711  007438  0100               	movlb	0	; () banked
  5712  00743A  6F73               	movwf	memset@p1& (0+255),b
  5713  00743C  0E08               	movlw	high _list
  5714  00743E  6F74               	movwf	(memset@p1+1)& (0+255),b
  5715  007440  6B76               	clrf	(memset@c+1)& (0+255),b
  5716  007442  6975               	setf	memset@c& (0+255),b
  5717  007444  6B78               	clrf	(memset@n+1)& (0+255),b
  5718  007446  0EDC               	movlw	220
  5719  007448  6F77               	movwf	memset@n& (0+255),b
  5720  00744A  EF47  F039         	goto	_memset	;wreg free
  5721  00744E                     __end_of_DeviceManagerInit:
  5722                           	opt stack 0
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           postinc0	equ	0xFEE
  5730                           plusw0	equ	0xFEB
  5731                           wreg	equ	0xFE8
  5732                           postdec1	equ	0xFE5
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _CacheInit *****************
  5744 ;; Defined at:
  5745 ;;		line 72 in file "../Cache.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : F/0
  5756 ;;		On exit  : F/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    6
  5766 ;; This function calls:
  5767 ;;		_memset
  5768 ;; This function is called by:
  5769 ;;		_NetworkInit
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text17
  5774  00744E                     __ptext17:
  5775                           	opt stack 0
  5776  00744E                     _CacheInit:
  5777                           	opt stack 22
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;Cache.c: 74: memset(hc_table,0x00,sizeof(hc_table));
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;incstack = 0
  5784  00744E  0E07               	movlw	low _hc_table
  5785  007450  6F73               	movwf	memset@p1& (0+255),b
  5786  007452  0E0B               	movlw	high _hc_table
  5787  007454  6F74               	movwf	(memset@p1+1)& (0+255),b
  5788  007456  6B76               	clrf	(memset@c+1)& (0+255),b
  5789  007458  6B75               	clrf	memset@c& (0+255),b
  5790  00745A  0E01               	movlw	1
  5791  00745C  6F78               	movwf	(memset@n+1)& (0+255),b
  5792  00745E  0E68               	movlw	104
  5793  007460  6F77               	movwf	memset@n& (0+255),b
  5794  007462  EF47  F039         	goto	_memset	;wreg free
  5795  007466                     __end_of_CacheInit:
  5796                           	opt stack 0
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           postinc0	equ	0xFEE
  5804                           plusw0	equ	0xFEB
  5805                           wreg	equ	0xFE8
  5806                           postdec1	equ	0xFE5
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           plusw2	equ	0xFDB
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _BroadcastManagerInit *****************
  5818 ;; Defined at:
  5819 ;;		line 24 in file "../BroadcastManager.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;		None
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : F/0
  5830 ;;		On exit  : F/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;Total ram usage:        0 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    6
  5840 ;; This function calls:
  5841 ;;		_memset
  5842 ;; This function is called by:
  5843 ;;		_NetworkInit
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text18
  5848  007466                     __ptext18:
  5849                           	opt stack 0
  5850  007466                     _BroadcastManagerInit:
  5851                           	opt stack 22
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;BroadcastManager.c: 26: memset((uint8_t*)RbcQ,0x00,sizeof(RbcQ));
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;incstack = 0
  5858  007466  0E4B               	movlw	low _RbcQ
  5859  007468  6F73               	movwf	memset@p1& (0+255),b
  5860  00746A  0E09               	movlw	high _RbcQ
  5861  00746C  6F74               	movwf	(memset@p1+1)& (0+255),b
  5862  00746E  6B76               	clrf	(memset@c+1)& (0+255),b
  5863  007470  6B75               	clrf	memset@c& (0+255),b
  5864  007472  0E01               	movlw	1
  5865  007474  6F78               	movwf	(memset@n+1)& (0+255),b
  5866  007476  0EBC               	movlw	188
  5867  007478  6F77               	movwf	memset@n& (0+255),b
  5868  00747A  EF47  F039         	goto	_memset	;wreg free
  5869  00747E                     __end_of_BroadcastManagerInit:
  5870                           	opt stack 0
  5871                           tblptru	equ	0xFF8
  5872                           tblptrh	equ	0xFF7
  5873                           tblptrl	equ	0xFF6
  5874                           tablat	equ	0xFF5
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           postinc0	equ	0xFEE
  5878                           plusw0	equ	0xFEB
  5879                           wreg	equ	0xFE8
  5880                           postdec1	equ	0xFE5
  5881                           fsr1h	equ	0xFE2
  5882                           fsr1l	equ	0xFE1
  5883                           indf2	equ	0xFDF
  5884                           postinc2	equ	0xFDE
  5885                           postdec2	equ	0xFDD
  5886                           plusw2	equ	0xFDB
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function _BeaconManagerInit *****************
  5892 ;; Defined at:
  5893 ;;		line 37 in file "../BeaconManager.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;		None
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : F/1
  5904 ;;		On exit  : F/1
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5911 ;;Total ram usage:        0 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:   10
  5914 ;; This function calls:
  5915 ;;		_krnd
  5916 ;;		_netResetInterval
  5917 ;; This function is called by:
  5918 ;;		_NetworkInit
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text19
  5923  0073C0                     __ptext19:
  5924                           	opt stack 0
  5925  0073C0                     _BeaconManagerInit:
  5926                           	opt stack 18
  5927                           
  5928                           ; BSR set to: 1
  5929                           ;BeaconManager.c: 39: intervalDelay=0;
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;incstack = 0
  5933  0073C0  6B9A               	clrf	_intervalDelay& (0+255),b
  5934  0073C2  6B9B               	clrf	(_intervalDelay+1)& (0+255),b
  5935  0073C4  6B9C               	clrf	(_intervalDelay+2)& (0+255),b
  5936  0073C6  6B9D               	clrf	(_intervalDelay+3)& (0+255),b
  5937                           
  5938                           ;BeaconManager.c: 40: currentInterval=0;
  5939  0073C8  6B92               	clrf	_currentInterval& (0+255),b
  5940  0073CA  6B93               	clrf	(_currentInterval+1)& (0+255),b
  5941  0073CC  6B94               	clrf	(_currentInterval+2)& (0+255),b
  5942  0073CE  6B95               	clrf	(_currentInterval+3)& (0+255),b
  5943                           
  5944                           ;BeaconManager.c: 41: BMState=BMPOR;
  5945  0073D0  6BB7               	clrf	_BMState& (0+255),b
  5946                           
  5947                           ; BSR set to: 1
  5948                           ;BeaconManager.c: 42: netSequenceNumber=krnd();
  5949  0073D2  EC45  F01E         	call	_krnd	;wreg free
  5950  0073D6  5173               	movf	?_krnd& (0+255),w,b
  5951  0073D8  0101               	movlb	1	; () banked
  5952  0073DA  6FC4               	movwf	_netSequenceNumber& (0+255),b
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;BeaconManager.c: 43: netResetInterval();
  5956  0073DC  EF3F  F03A         	goto	_netResetInterval	;wreg free
  5957  0073E0                     __end_of_BeaconManagerInit:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           postinc0	equ	0xFEE
  5966                           plusw0	equ	0xFEB
  5967                           wreg	equ	0xFE8
  5968                           postdec1	equ	0xFE5
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           postdec2	equ	0xFDD
  5974                           plusw2	equ	0xFDB
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _MiApp_SetChannel *****************
  5980 ;; Defined at:
  5981 ;;		line 168 in file "../src/Bridge.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  Channel         1    wreg     unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  Channel         1   28[BANK0 ] unsigned char 
  5986 ;;  res             1    0        unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : E/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;Total ram usage:        2 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    9
  6003 ;; This function calls:
  6004 ;;		_MiMAC_SetChannel
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text20
  6011  00755E                     __ptext20:
  6012                           	opt stack 0
  6013  00755E                     _MiApp_SetChannel:
  6014                           	opt stack 21
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;incstack = 0
  6018                           ;MiApp_SetChannel@Channel stored from wreg
  6019  00755E  0100               	movlb	0	; () banked
  6020  007560  6F7C               	movwf	MiApp_SetChannel@Channel& (0+255),b
  6021  007562  6B79               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  6022  007564  517C               	movf	MiApp_SetChannel@Channel& (0+255),w,b
  6023  007566  EF15  F02F         	goto	_MiMAC_SetChannel
  6024  00756A                     __end_of_MiApp_SetChannel:
  6025                           	opt stack 0
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           postinc0	equ	0xFEE
  6033                           plusw0	equ	0xFEB
  6034                           wreg	equ	0xFE8
  6035                           postdec1	equ	0xFE5
  6036                           fsr1h	equ	0xFE2
  6037                           fsr1l	equ	0xFE1
  6038                           indf2	equ	0xFDF
  6039                           postinc2	equ	0xFDE
  6040                           postdec2	equ	0xFDD
  6041                           plusw2	equ	0xFDB
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _MiMAC_SetChannel *****************
  6047 ;; Defined at:
  6048 ;;		line 553 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  channel         1    wreg     unsigned char 
  6051 ;;  offsetFreq      1   25[BANK0 ] unsigned char 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  channel         1   27[BANK0 ] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : F/0
  6060 ;;		On exit  : E/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6063 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6067 ;;Total ram usage:        3 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    8
  6070 ;; This function calls:
  6071 ;;		_RegisterSet
  6072 ;;		_SetRFMode
  6073 ;; This function is called by:
  6074 ;;		_MiApp_SetChannel
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text21
  6079  005E2A                     __ptext21:
  6080                           	opt stack 0
  6081  005E2A                     _MiMAC_SetChannel:
  6082                           	opt stack 21
  6083                           
  6084                           ;incstack = 0
  6085                           ;MiMAC_SetChannel@channel stored from wreg
  6086  005E2A  6F7B               	movwf	MiMAC_SetChannel@channel& (0+255),b
  6087                           
  6088                           ;drv_mrf_miwi_mesh_89xa.c: 555: if( channel >= 32 )
  6089  005E2C  0E1F               	movlw	31
  6090  005E2E  0100               	movlb	0	; () banked
  6091  005E30  657B               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  6092  005E32  D001               	goto	l17486
  6093  005E34  0C00               	retlw	0
  6094  005E36                     l17486:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;drv_mrf_miwi_mesh_89xa.c: 558: }
  6098                           ;drv_mrf_miwi_mesh_89xa.c: 561: RegisterSet(0x0C00 | 100);
  6099  005E36  0E0C               	movlw	12
  6100  005E38  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
  6101  005E3A  0E64               	movlw	100
  6102  005E3C  6F75               	movwf	RegisterSet@setting& (0+255),b
  6103  005E3E  EC32  F039         	call	_RegisterSet	;wreg free
  6104                           
  6105                           ;drv_mrf_miwi_mesh_89xa.c: 562: RegisterSet(0x0E00 | PVALUE[channel]);
  6106  005E42  0E5D               	movlw	low _PVALUE
  6107  005E44  0100               	movlb	0	; () banked
  6108  005E46  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6109  005E48  6EF6               	movwf	tblptrl,c
  6110  005E4A  6AF7               	clrf	tblptrh,c
  6111  005E4C  0EFF               	movlw	high _PVALUE
  6112  005E4E  22F7               	addwfc	tblptrh,f,c
  6113  005E50                     	if	0	;There are less than 3 active tblptr bytes
  6114  005E50                     	endif
  6115  005E50  0008               	tblrd		*
  6116  005E52  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
  6117  005E56  0E00               	movlw	0
  6118  005E58  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6119  005E5A  6F75               	movwf	RegisterSet@setting& (0+255),b
  6120  005E5C  0E0E               	movlw	14
  6121  005E5E  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
  6122  005E60  EC32  F039         	call	_RegisterSet	;wreg free
  6123                           
  6124                           ;drv_mrf_miwi_mesh_89xa.c: 563: RegisterSet(0x1000 | SVALUE[channel]);
  6125  005E64  0E7D               	movlw	low _SVALUE
  6126  005E66  0100               	movlb	0	; () banked
  6127  005E68  257B               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  6128  005E6A  6EF6               	movwf	tblptrl,c
  6129  005E6C  6AF7               	clrf	tblptrh,c
  6130  005E6E  0EFF               	movlw	high _SVALUE
  6131  005E70  22F7               	addwfc	tblptrh,f,c
  6132  005E72                     	if	0	;There are less than 3 active tblptr bytes
  6133  005E72                     	endif
  6134  005E72  0008               	tblrd		*
  6135  005E74  CFF5 F07A          	movff	tablat,??_MiMAC_SetChannel
  6136  005E78  0E00               	movlw	0
  6137  005E7A  117A               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  6138  005E7C  6F75               	movwf	RegisterSet@setting& (0+255),b
  6139  005E7E  0E10               	movlw	16
  6140  005E80  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
  6141  005E82  EC32  F039         	call	_RegisterSet	;wreg free
  6142                           
  6143                           ;drv_mrf_miwi_mesh_89xa.c: 564: SetRFMode(0x20);
  6144  005E86  0E20               	movlw	32
  6145  005E88  ECE7  F031         	call	_SetRFMode
  6146                           
  6147                           ;drv_mrf_miwi_mesh_89xa.c: 565: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
  6148  005E8C  0100               	movlb	0	; () banked
  6149  005E8E  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
  6150  005E90  0E4E               	movlw	78
  6151  005E92  6F75               	movwf	RegisterSet@setting& (0+255),b
  6152  005E94  EC32  F039         	call	_RegisterSet	;wreg free
  6153                           
  6154                           ;drv_mrf_miwi_mesh_89xa.c: 566: SetRFMode(0x40);
  6155  005E98  0E40               	movlw	64
  6156  005E9A  ECE7  F031         	call	_SetRFMode
  6157                           
  6158                           ;drv_mrf_miwi_mesh_89xa.c: 567: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6159  005E9E  0E1C               	movlw	28
  6160  005EA0  0100               	movlb	0	; () banked
  6161  005EA2  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
  6162  005EA4  0E0F               	movlw	15
  6163  005EA6  6F75               	movwf	RegisterSet@setting& (0+255),b
  6164  005EA8  EC32  F039         	call	_RegisterSet	;wreg free
  6165                           
  6166                           ;drv_mrf_miwi_mesh_89xa.c: 568: SetRFMode(0x20);
  6167  005EAC  0E20               	movlw	32
  6168  005EAE  ECE7  F031         	call	_SetRFMode
  6169                           
  6170                           ;drv_mrf_miwi_mesh_89xa.c: 569: SetRFMode(0x60);
  6171  005EB2  0E60               	movlw	96
  6172  005EB4  ECE7  F031         	call	_SetRFMode
  6173                           
  6174                           ;drv_mrf_miwi_mesh_89xa.c: 571: return 1;
  6175  005EB8  0C01               	retlw	1	;funcret
  6176  005EBA                     __end_of_MiMAC_SetChannel:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           postinc0	equ	0xFEE
  6185                           plusw0	equ	0xFEB
  6186                           wreg	equ	0xFE8
  6187                           postdec1	equ	0xFE5
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           postinc2	equ	0xFDE
  6192                           postdec2	equ	0xFDD
  6193                           plusw2	equ	0xFDB
  6194                           fsr2h	equ	0xFDA
  6195                           fsr2l	equ	0xFD9
  6196                           status	equ	0xFD8
  6197                           
  6198 ;; *************** function _MiApp_ProtocolInit *****************
  6199 ;; Defined at:
  6200 ;;		line 148 in file "../src/Bridge.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  bNetworkFree    1    wreg     unsigned char 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  bNetworkFree    1    0[COMRAM] unsigned char 
  6205 ;;  initValue       3   47[BANK0 ] struct .
  6206 ;;  res             1    0        unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      unsigned char 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : E/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6220 ;;Total ram usage:        4 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    9
  6223 ;; This function calls:
  6224 ;;		_MiApp_SetAddressPan
  6225 ;;		_MiMAC_Init
  6226 ;;		_NetworkSetDeviceType
  6227 ;;		_memset
  6228 ;; This function is called by:
  6229 ;;		_main
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text22
  6234  006852                     __ptext22:
  6235                           	opt stack 0
  6236  006852                     _MiApp_ProtocolInit:
  6237                           	opt stack 21
  6238                           
  6239                           ;Bridge.c: 150: bool res;
  6240                           ;Bridge.c: 151: MACINIT_PARAM initValue;
  6241                           ;Bridge.c: 152: initValue.PAddress = (uint8_t *) myLongAddress;
  6242                           
  6243                           ;incstack = 0
  6244  006852  0EFE               	movlw	low _myLongAddress
  6245  006854  0100               	movlb	0	; () banked
  6246  006856  6F90               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  6247  006858  0E01               	movlw	high _myLongAddress
  6248  00685A  6F91               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;Bridge.c: 153: initValue.actionFlags.bits.CCAEnable = 1;
  6252  00685C  838F               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;Bridge.c: 154: initValue.actionFlags.bits.PAddrLength = 2;
  6256  00685E  518F               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  6257  006860  0B87               	andlw	-121
  6258  006862  0910               	iorlw	16
  6259  006864  6F8F               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;Bridge.c: 155: initValue.actionFlags.bits.RepeaterMode = 0;
  6263  006866  918F               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;Bridge.c: 157: memset(ConnectionTable,0x00,sizeof(ConnectionTable));
  6267  006868  0E5E               	movlw	low _ConnectionTable
  6268  00686A  6F73               	movwf	memset@p1& (0+255),b
  6269  00686C  0E03               	movlw	high _ConnectionTable
  6270  00686E  6F74               	movwf	(memset@p1+1)& (0+255),b
  6271  006870  6B76               	clrf	(memset@c+1)& (0+255),b
  6272  006872  6B75               	clrf	memset@c& (0+255),b
  6273  006874  6B78               	clrf	(memset@n+1)& (0+255),b
  6274  006876  0E37               	movlw	55
  6275  006878  6F77               	movwf	memset@n& (0+255),b
  6276  00687A  EC47  F039         	call	_memset	;wreg free
  6277                           
  6278                           ; BSR set to: 0
  6279  00687E  C08F  F087         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  6280  006882  C090  F088         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  6281  006886  C091  F089         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  6282  00688A  ECCA  F027         	call	_MiMAC_Init	;wreg free
  6283                           
  6284                           ; BSR set to: 1
  6285                           ;Bridge.c: 163: MiApp_SetAddressPan(myLongAddress, myPANID);
  6286  00688E  0EFE               	movlw	low _myLongAddress
  6287  006890  0100               	movlb	0	; () banked
  6288  006892  6F83               	movwf	MiApp_SetAddressPan@address& (0+255),b
  6289  006894  0E01               	movlw	high _myLongAddress
  6290  006896  6F84               	movwf	(MiApp_SetAddressPan@address+1)& (0+255),b
  6291  006898  C04D  F085         	movff	_myPANID,MiApp_SetAddressPan@panid
  6292  00689C  C04E  F086         	movff	_myPANID+1,MiApp_SetAddressPan@panid+1
  6293  0068A0  EC25  F036         	call	_MiApp_SetAddressPan	;wreg free
  6294                           
  6295                           ;Bridge.c: 164: NetworkSetDeviceType(myDeviceType);
  6296  0068A4  0101               	movlb	1	; () banked
  6297  0068A6  51C2               	movf	_myDeviceType& (0+255),w,b
  6298  0068A8  EFD7  F03A         	goto	_NetworkSetDeviceType
  6299  0068AC                     __end_of_MiApp_ProtocolInit:
  6300                           	opt stack 0
  6301                           tblptru	equ	0xFF8
  6302                           tblptrh	equ	0xFF7
  6303                           tblptrl	equ	0xFF6
  6304                           tablat	equ	0xFF5
  6305                           prodh	equ	0xFF4
  6306                           prodl	equ	0xFF3
  6307                           postinc0	equ	0xFEE
  6308                           plusw0	equ	0xFEB
  6309                           wreg	equ	0xFE8
  6310                           postdec1	equ	0xFE5
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           indf2	equ	0xFDF
  6314                           postinc2	equ	0xFDE
  6315                           postdec2	equ	0xFDD
  6316                           plusw2	equ	0xFDB
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _NetworkSetDeviceType *****************
  6322 ;; Defined at:
  6323 ;;		line 441 in file "../NetworkManager.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  dev             1    wreg     enum E145
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  dev             1   19[BANK0 ] enum E145
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg
  6332 ;; Tracked objects:
  6333 ;;		On entry : F/1
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;Total ram usage:        1 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    5
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_MiApp_ProtocolInit
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text23
  6352  0075AE                     __ptext23:
  6353                           	opt stack 0
  6354  0075AE                     _NetworkSetDeviceType:
  6355                           	opt stack 24
  6356                           
  6357                           ;incstack = 0
  6358                           ;NetworkSetDeviceType@dev stored from wreg
  6359  0075AE  0100               	movlb	0	; () banked
  6360  0075B0  6F73               	movwf	NetworkSetDeviceType@dev& (0+255),b
  6361                           
  6362                           ;NetworkManager.c: 443: DeviceType=dev;
  6363  0075B2  C073  F1F9         	movff	NetworkSetDeviceType@dev,_DeviceType
  6364  0075B6  0012               	return		;funcret
  6365  0075B8                     __end_of_NetworkSetDeviceType:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           postinc0	equ	0xFEE
  6374                           plusw0	equ	0xFEB
  6375                           wreg	equ	0xFE8
  6376                           postdec1	equ	0xFE5
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           plusw2	equ	0xFDB
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function _MiMAC_Init *****************
  6388 ;; Defined at:
  6389 ;;		line 648 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  initValue       3   39[BANK0 ] struct .
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  seed            2   43[BANK0 ] unsigned int 
  6394 ;;  i               1   45[BANK0 ] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      unsigned char 
  6397 ;; Registers used:
  6398 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : F/0
  6401 ;;		On exit  : F/1
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6404 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6407 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6408 ;;Total ram usage:        7 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    8
  6411 ;; This function calls:
  6412 ;;		_DelayMs
  6413 ;;		_RegisterRead
  6414 ;;		_RegisterSet
  6415 ;;		_SetRFMode
  6416 ;;		_krnd
  6417 ;;		_krndInit
  6418 ;;		_memcpy
  6419 ;; This function is called by:
  6420 ;;		_MiApp_ProtocolInit
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text24
  6425  004F94                     __ptext24:
  6426                           	opt stack 0
  6427  004F94                     _MiMAC_Init:
  6428                           	opt stack 21
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;drv_mrf_miwi_mesh_89xa.c: 650: uint8_t i;
  6432                           ;drv_mrf_miwi_mesh_89xa.c: 652: MACInitParams = initValue;
  6433                           
  6434                           ;incstack = 0
  6435  004F94  C087  F036         	movff	MiMAC_Init@initValue,_MACInitParams
  6436  004F98  C088  F037         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6437  004F9C  C089  F038         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;drv_mrf_miwi_mesh_89xa.c: 654: DelayMs(20);
  6441  004FA0  0E14               	movlw	20
  6442  004FA2  6F7B               	movwf	DelayMs@ms& (0+255),b
  6443  004FA4  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
  6444  004FA6  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
  6445  004FA8  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
  6446  004FAA  EC7F  F02E         	call	_DelayMs	;wreg free
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;drv_mrf_miwi_mesh_89xa.c: 655: LATDbits.LATD1 = 1;
  6450  004FAE  828C               	bsf	3980,1,c	;volatile
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;drv_mrf_miwi_mesh_89xa.c: 656: LATAbits.LATA5 = 1;
  6454  004FB0  8A89               	bsf	3977,5,c	;volatile
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;drv_mrf_miwi_mesh_89xa.c: 659: ReceivedBankIndex = 0xFF;
  6458  004FB2  683E               	setf	_ReceivedBankIndex,c
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;drv_mrf_miwi_mesh_89xa.c: 661: for(i = 0; i < 2; i++)
  6462  004FB4  6B8D               	clrf	MiMAC_Init@i& (0+255),b
  6463  004FB6                     l17424:
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;drv_mrf_miwi_mesh_89xa.c: 662: {
  6467                           ;drv_mrf_miwi_mesh_89xa.c: 663: RxPacket[i].flags.Val = 0;
  6468  004FB6  518D               	movf	MiMAC_Init@i& (0+255),w,b
  6469  004FB8  0D47               	mullw	71
  6470  004FBA  0E2C               	movlw	low _RxPacket
  6471  004FBC  24F3               	addwf	prodl,w,c
  6472  004FBE  6ED9               	movwf	fsr2l,c
  6473  004FC0  0E02               	movlw	high _RxPacket
  6474  004FC2  20F4               	addwfc	prodh,w,c
  6475  004FC4  6EDA               	movwf	fsr2h,c
  6476  004FC6  6ADF               	clrf	indf2,c
  6477                           
  6478                           ; BSR set to: 0
  6479  004FC8  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
  6480                           
  6481                           ; BSR set to: 0
  6482  004FCA  0E01               	movlw	1
  6483  004FCC  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
  6484  004FCE  D7F3               	goto	l17424
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;drv_mrf_miwi_mesh_89xa.c: 664: }
  6488                           ;drv_mrf_miwi_mesh_89xa.c: 688: OutgoingFrameCounter = 1;
  6489  004FD0  0102               	movlb	2	; () banked
  6490  004FD2  6FD4               	movwf	_OutgoingFrameCounter& (0+255),b
  6491  004FD4  6BD5               	clrf	(_OutgoingFrameCounter+1)& (0+255),b
  6492  004FD6  6BD6               	clrf	(_OutgoingFrameCounter+2)& (0+255),b
  6493  004FD8  6BD7               	clrf	(_OutgoingFrameCounter+3)& (0+255),b
  6494                           
  6495                           ; BSR set to: 2
  6496                           ;drv_mrf_miwi_mesh_89xa.c: 690: memcpy(key,mySecurityKey,8);
  6497  004FDA  0ECC               	movlw	low _key
  6498  004FDC  0100               	movlb	0	; () banked
  6499  004FDE  6F75               	movwf	memcpy@d1& (0+255),b
  6500  004FE0  0E02               	movlw	high _key
  6501  004FE2  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6502  004FE4  0EAD               	movlw	low _mySecurityKey
  6503  004FE6  6F77               	movwf	memcpy@s1& (0+255),b
  6504  004FE8  0EFF               	movlw	high _mySecurityKey
  6505  004FEA  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  6506  004FEC  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6507  004FEE  0E08               	movlw	8
  6508  004FF0  6F79               	movwf	memcpy@n& (0+255),b
  6509  004FF2  EC05  F035         	call	_memcpy	;wreg free
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;drv_mrf_miwi_mesh_89xa.c: 695: for (i = 0 ; i <= 31; i++)
  6513  004FF6  6B8D               	clrf	MiMAC_Init@i& (0+255),b
  6514  004FF8                     l17440:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;drv_mrf_miwi_mesh_89xa.c: 696: {
  6518                           ;drv_mrf_miwi_mesh_89xa.c: 697: RegisterSet(InitConfigRegs[i]);
  6519  004FF8  518D               	movf	MiMAC_Init@i& (0+255),w,b
  6520  004FFA  0D02               	mullw	2
  6521  004FFC  0E1D               	movlw	low _InitConfigRegs
  6522  004FFE  24F3               	addwf	prodl,w,c
  6523  005000  6EF6               	movwf	tblptrl,c
  6524  005002  0EFF               	movlw	high _InitConfigRegs
  6525  005004  20F4               	addwfc	prodh,w,c
  6526  005006  6EF7               	movwf	tblptrh,c
  6527  005008                     	if	0	;There are less than 3 active tblptr bytes
  6528  005008                     	endif
  6529  005008  0009               	tblrd		*+
  6530  00500A  CFF5 F075          	movff	tablat,RegisterSet@setting
  6531  00500E  000A               	tblrd		*-
  6532  005010  CFF5 F076          	movff	tablat,RegisterSet@setting+1
  6533  005014  EC32  F039         	call	_RegisterSet	;wreg free
  6534  005018  0100               	movlb	0	; () banked
  6535  00501A  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
  6536                           
  6537                           ; BSR set to: 0
  6538  00501C  0E1F               	movlw	31
  6539  00501E  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
  6540  005020  D7EB               	goto	l17440
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;drv_mrf_miwi_mesh_89xa.c: 698: }
  6544                           ;drv_mrf_miwi_mesh_89xa.c: 699: SetRFMode(0x20);
  6545  005022  0E20               	movlw	32
  6546  005024  ECE7  F031         	call	_SetRFMode
  6547                           
  6548                           ;drv_mrf_miwi_mesh_89xa.c: 700: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
  6549  005028  0100               	movlb	0	; () banked
  6550  00502A  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
  6551  00502C  0E4E               	movlw	78
  6552  00502E  6F75               	movwf	RegisterSet@setting& (0+255),b
  6553  005030  EC32  F039         	call	_RegisterSet	;wreg free
  6554                           
  6555                           ;drv_mrf_miwi_mesh_89xa.c: 701: SetRFMode(0x40);
  6556  005034  0E40               	movlw	64
  6557  005036  ECE7  F031         	call	_SetRFMode
  6558                           
  6559                           ;drv_mrf_miwi_mesh_89xa.c: 704: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6560  00503A  0E1C               	movlw	28
  6561  00503C  0100               	movlb	0	; () banked
  6562  00503E  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
  6563  005040  0E0F               	movlw	15
  6564  005042  6F75               	movwf	RegisterSet@setting& (0+255),b
  6565  005044  EC32  F039         	call	_RegisterSet	;wreg free
  6566                           
  6567                           ;drv_mrf_miwi_mesh_89xa.c: 706: SetRFMode(0x60);
  6568  005048  0E60               	movlw	96
  6569  00504A  ECE7  F031         	call	_SetRFMode
  6570                           
  6571                           ;drv_mrf_miwi_mesh_89xa.c: 711: INTCON3bits.INT1IF = 0;
  6572  00504E  90F0               	bcf	intcon3,0,c	;volatile
  6573                           
  6574                           ;drv_mrf_miwi_mesh_89xa.c: 712: INTCON3bits.INT1IE = 1;
  6575  005050  86F0               	bsf	intcon3,3,c	;volatile
  6576                           
  6577                           ;drv_mrf_miwi_mesh_89xa.c: 714: uint16_t seed=0;
  6578  005052  0100               	movlb	0	; () banked
  6579  005054  6B8B               	clrf	MiMAC_Init@seed& (0+255),b
  6580  005056  6B8C               	clrf	(MiMAC_Init@seed+1)& (0+255),b
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;drv_mrf_miwi_mesh_89xa.c: 715: for(i=0;i<16;i++)
  6584  005058  6B8D               	clrf	MiMAC_Init@i& (0+255),b
  6585  00505A                     l17466:
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;drv_mrf_miwi_mesh_89xa.c: 716: {
  6589                           ;drv_mrf_miwi_mesh_89xa.c: 717: seed<<=1;
  6590  00505A  90D8               	bcf	status,0,c
  6591  00505C  378B               	rlcf	MiMAC_Init@seed& (0+255),f,b
  6592  00505E  378C               	rlcf	(MiMAC_Init@seed+1)& (0+255),f,b
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;drv_mrf_miwi_mesh_89xa.c: 718: seed|=(((RegisterRead(0x2800>>8))>>1) & 0x01);
  6596  005060  0E28               	movlw	40
  6597  005062  EC91  F038         	call	_RegisterRead
  6598  005066  6F8A               	movwf	??_MiMAC_Init& (0+255),b
  6599  005068  90D8               	bcf	status,0,c
  6600  00506A  318A               	rrcf	??_MiMAC_Init& (0+255),w,b
  6601  00506C  0B01               	andlw	1
  6602  00506E  138B               	iorwf	MiMAC_Init@seed& (0+255),f,b
  6603                           
  6604                           ; BSR set to: 0
  6605  005070  2B8D               	incf	MiMAC_Init@i& (0+255),f,b
  6606                           
  6607                           ; BSR set to: 0
  6608  005072  0E0F               	movlw	15
  6609  005074  658D               	cpfsgt	MiMAC_Init@i& (0+255),b
  6610  005076  D7F1               	goto	l17466
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;drv_mrf_miwi_mesh_89xa.c: 719: }
  6614                           ;drv_mrf_miwi_mesh_89xa.c: 721: krndInit(seed);
  6615  005078  C08B  F073         	movff	MiMAC_Init@seed,krndInit@value
  6616  00507C  C08C  F074         	movff	MiMAC_Init@seed+1,krndInit@value+1
  6617  005080  EC20  F02C         	call	_krndInit	;wreg free
  6618                           
  6619                           ;drv_mrf_miwi_mesh_89xa.c: 722: MACSeq = krnd();
  6620  005084  EC45  F01E         	call	_krnd	;wreg free
  6621  005088  5173               	movf	?_krnd& (0+255),w,b
  6622  00508A  0101               	movlb	1	; () banked
  6623  00508C  6FB8               	movwf	_MACSeq& (0+255),b
  6624                           
  6625                           ; BSR set to: 1
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;drv_mrf_miwi_mesh_89xa.c: 724: return 1;
  6629  00508E  0C01               	retlw	1	;funcret
  6630  005090                     __end_of_MiMAC_Init:
  6631                           	opt stack 0
  6632                           tblptru	equ	0xFF8
  6633                           tblptrh	equ	0xFF7
  6634                           tblptrl	equ	0xFF6
  6635                           tablat	equ	0xFF5
  6636                           prodh	equ	0xFF4
  6637                           prodl	equ	0xFF3
  6638                           intcon3	equ	0xFF0
  6639                           postinc0	equ	0xFEE
  6640                           plusw0	equ	0xFEB
  6641                           wreg	equ	0xFE8
  6642                           postdec1	equ	0xFE5
  6643                           fsr1h	equ	0xFE2
  6644                           fsr1l	equ	0xFE1
  6645                           indf2	equ	0xFDF
  6646                           postinc2	equ	0xFDE
  6647                           postdec2	equ	0xFDD
  6648                           plusw2	equ	0xFDB
  6649                           fsr2h	equ	0xFDA
  6650                           fsr2l	equ	0xFD9
  6651                           status	equ	0xFD8
  6652                           
  6653 ;; *************** function _krndInit *****************
  6654 ;; Defined at:
  6655 ;;		line 7 in file "../krnd.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  value           2   19[BANK0 ] unsigned int 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : F/0
  6666 ;;		On exit  : F/1
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6673 ;;Total ram usage:        6 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    5
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_MiMAC_Init
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text25
  6684  005840                     __ptext25:
  6685                           	opt stack 0
  6686  005840                     _krndInit:
  6687                           	opt stack 23
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;krnd.c: 9: x|=(value<<0);
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;incstack = 0
  6694  005840  5173               	movf	krndInit@value& (0+255),w,b
  6695  005842  6F75               	movwf	??_krndInit& (0+255),b
  6696  005844  5174               	movf	(krndInit@value+1)& (0+255),w,b
  6697  005846  6F76               	movwf	(??_krndInit+1)& (0+255),b
  6698  005848  6B77               	clrf	(??_krndInit+2)& (0+255),b
  6699  00584A  6B78               	clrf	(??_krndInit+3)& (0+255),b
  6700  00584C  5175               	movf	??_krndInit& (0+255),w,b
  6701  00584E  0101               	movlb	1	; () banked
  6702  005850  13EF               	iorwf	_x& (0+255),f,b
  6703  005852  0100               	movlb	0	; () banked
  6704  005854  5176               	movf	(??_krndInit+1)& (0+255),w,b
  6705  005856  0101               	movlb	1	; () banked
  6706  005858  13F0               	iorwf	(_x+1)& (0+255),f,b
  6707  00585A  0100               	movlb	0	; () banked
  6708  00585C  5177               	movf	(??_krndInit+2)& (0+255),w,b
  6709  00585E  0101               	movlb	1	; () banked
  6710  005860  13F1               	iorwf	(_x+2)& (0+255),f,b
  6711  005862  0100               	movlb	0	; () banked
  6712  005864  5178               	movf	(??_krndInit+3)& (0+255),w,b
  6713  005866  0101               	movlb	1	; () banked
  6714  005868  13F2               	iorwf	(_x+3)& (0+255),f,b
  6715                           
  6716                           ;krnd.c: 10: y|=(((uint32_t)value)<<16);
  6717  00586A  0100               	movlb	0	; () banked
  6718  00586C  5173               	movf	krndInit@value& (0+255),w,b
  6719  00586E  6F75               	movwf	??_krndInit& (0+255),b
  6720  005870  5174               	movf	(krndInit@value+1)& (0+255),w,b
  6721  005872  6F76               	movwf	(??_krndInit+1)& (0+255),b
  6722  005874  6B77               	clrf	(??_krndInit+2)& (0+255),b
  6723  005876  6B78               	clrf	(??_krndInit+3)& (0+255),b
  6724  005878  C076  F078         	movff	??_krndInit+1,??_krndInit+3
  6725  00587C  C075  F077         	movff	??_krndInit,??_krndInit+2
  6726  005880  6B76               	clrf	(??_krndInit+1)& (0+255),b
  6727  005882  6B75               	clrf	??_krndInit& (0+255),b
  6728  005884  5175               	movf	??_krndInit& (0+255),w,b
  6729  005886  1249               	iorwf	_y,f,c
  6730  005888  5176               	movf	(??_krndInit+1)& (0+255),w,b
  6731  00588A  124A               	iorwf	_y+1,f,c
  6732  00588C  5177               	movf	(??_krndInit+2)& (0+255),w,b
  6733  00588E  124B               	iorwf	_y+2,f,c
  6734  005890  5178               	movf	(??_krndInit+3)& (0+255),w,b
  6735  005892  124C               	iorwf	_y+3,f,c
  6736                           
  6737                           ;krnd.c: 11: z|=(((uint32_t)value)<<24);
  6738  005894  5173               	movf	krndInit@value& (0+255),w,b
  6739  005896  6F75               	movwf	??_krndInit& (0+255),b
  6740  005898  5174               	movf	(krndInit@value+1)& (0+255),w,b
  6741  00589A  6F76               	movwf	(??_krndInit+1)& (0+255),b
  6742  00589C  6B77               	clrf	(??_krndInit+2)& (0+255),b
  6743  00589E  6B78               	clrf	(??_krndInit+3)& (0+255),b
  6744  0058A0  C075  F078         	movff	??_krndInit,??_krndInit+3
  6745  0058A4  6B77               	clrf	(??_krndInit+2)& (0+255),b
  6746  0058A6  6B76               	clrf	(??_krndInit+1)& (0+255),b
  6747  0058A8  6B75               	clrf	??_krndInit& (0+255),b
  6748  0058AA  5175               	movf	??_krndInit& (0+255),w,b
  6749  0058AC  0101               	movlb	1	; () banked
  6750  0058AE  13F3               	iorwf	_z& (0+255),f,b
  6751  0058B0  0100               	movlb	0	; () banked
  6752  0058B2  5176               	movf	(??_krndInit+1)& (0+255),w,b
  6753  0058B4  0101               	movlb	1	; () banked
  6754  0058B6  13F4               	iorwf	(_z+1)& (0+255),f,b
  6755  0058B8  0100               	movlb	0	; () banked
  6756  0058BA  5177               	movf	(??_krndInit+2)& (0+255),w,b
  6757  0058BC  0101               	movlb	1	; () banked
  6758  0058BE  13F5               	iorwf	(_z+2)& (0+255),f,b
  6759  0058C0  0100               	movlb	0	; () banked
  6760  0058C2  5178               	movf	(??_krndInit+3)& (0+255),w,b
  6761  0058C4  0101               	movlb	1	; () banked
  6762  0058C6  13F6               	iorwf	(_z+3)& (0+255),f,b
  6763                           
  6764                           ;krnd.c: 12: w&=(value);
  6765  0058C8  0100               	movlb	0	; () banked
  6766  0058CA  5173               	movf	krndInit@value& (0+255),w,b
  6767  0058CC  6F75               	movwf	??_krndInit& (0+255),b
  6768  0058CE  5174               	movf	(krndInit@value+1)& (0+255),w,b
  6769  0058D0  6F76               	movwf	(??_krndInit+1)& (0+255),b
  6770  0058D2  6B77               	clrf	(??_krndInit+2)& (0+255),b
  6771  0058D4  6B78               	clrf	(??_krndInit+3)& (0+255),b
  6772  0058D6  5175               	movf	??_krndInit& (0+255),w,b
  6773  0058D8  1645               	andwf	_w,f,c
  6774  0058DA  5176               	movf	(??_krndInit+1)& (0+255),w,b
  6775  0058DC  1646               	andwf	_w+1,f,c
  6776  0058DE  5177               	movf	(??_krndInit+2)& (0+255),w,b
  6777  0058E0  1647               	andwf	_w+2,f,c
  6778  0058E2  5178               	movf	(??_krndInit+3)& (0+255),w,b
  6779  0058E4  1648               	andwf	_w+3,f,c
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;krnd.c: 13: c=value;
  6783  0058E6  C073  F18E         	movff	krndInit@value,_c
  6784  0058EA  C074  F18F         	movff	krndInit@value+1,_c+1
  6785  0058EE  0101               	movlb	1	; () banked
  6786  0058F0  6B90               	clrf	(_c+2)& (0+255),b
  6787  0058F2  6B91               	clrf	(_c+3)& (0+255),b
  6788                           
  6789                           ; BSR set to: 1
  6790  0058F4  0012               	return		;funcret
  6791  0058F6                     __end_of_krndInit:
  6792                           	opt stack 0
  6793                           tblptru	equ	0xFF8
  6794                           tblptrh	equ	0xFF7
  6795                           tblptrl	equ	0xFF6
  6796                           tablat	equ	0xFF5
  6797                           prodh	equ	0xFF4
  6798                           prodl	equ	0xFF3
  6799                           intcon3	equ	0xFF0
  6800                           postinc0	equ	0xFEE
  6801                           plusw0	equ	0xFEB
  6802                           wreg	equ	0xFE8
  6803                           postdec1	equ	0xFE5
  6804                           fsr1h	equ	0xFE2
  6805                           fsr1l	equ	0xFE1
  6806                           indf2	equ	0xFDF
  6807                           postinc2	equ	0xFDE
  6808                           postdec2	equ	0xFDD
  6809                           plusw2	equ	0xFDB
  6810                           fsr2h	equ	0xFDA
  6811                           fsr2l	equ	0xFD9
  6812                           status	equ	0xFD8
  6813                           
  6814 ;; *************** function _MiApp_SetAddressPan *****************
  6815 ;; Defined at:
  6816 ;;		line 211 in file "../src/Bridge.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  address         2   35[BANK0 ] PTR unsigned char 
  6819 ;;		 -> MiApp_EstablishConnection@src(2), myLongAddress(2), myAddr(2), 
  6820 ;;  panid           2   37[BANK0 ] unsigned int 
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  addr            2   39[BANK0 ] struct addr_t_def
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : F/0
  6829 ;;		On exit  : E/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;Total ram usage:        6 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    7
  6839 ;; This function calls:
  6840 ;;		_NetworkSetAddressPAN
  6841 ;;		_memcpy
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;;		_MiApp_ProtocolInit
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text26
  6849  006C4A                     __ptext26:
  6850                           	opt stack 0
  6851  006C4A                     _MiApp_SetAddressPan:
  6852                           	opt stack 23
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;Bridge.c: 213: addr_t addr;
  6856                           ;Bridge.c: 214: memcpy(myLongAddress,address,2);
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;incstack = 0
  6860  006C4A  0EFE               	movlw	low _myLongAddress
  6861  006C4C  6F75               	movwf	memcpy@d1& (0+255),b
  6862  006C4E  0E01               	movlw	high _myLongAddress
  6863  006C50  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6864  006C52  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
  6865  006C56  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
  6866  006C5A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6867  006C5C  0E02               	movlw	2
  6868  006C5E  6F79               	movwf	memcpy@n& (0+255),b
  6869  006C60  EC05  F035         	call	_memcpy	;wreg free
  6870                           
  6871                           ;Bridge.c: 215: memcpy(addr.bytes,address,2);
  6872  006C64  0E87               	movlw	low MiApp_SetAddressPan@addr
  6873  006C66  6F75               	movwf	memcpy@d1& (0+255),b
  6874  006C68  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  6875  006C6A  C083  F077         	movff	MiApp_SetAddressPan@address,memcpy@s1
  6876  006C6E  C084  F078         	movff	MiApp_SetAddressPan@address+1,memcpy@s1+1
  6877  006C72  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6878  006C74  0E02               	movlw	2
  6879  006C76  6F79               	movwf	memcpy@n& (0+255),b
  6880  006C78  EC05  F035         	call	_memcpy	;wreg free
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;Bridge.c: 216: myPANID=panid;
  6884  006C7C  C085  F04D         	movff	MiApp_SetAddressPan@panid,_myPANID
  6885  006C80  C086  F04E         	movff	MiApp_SetAddressPan@panid+1,_myPANID+1
  6886                           
  6887                           ;Bridge.c: 220: NetworkSetAddressPAN(addr,panid);
  6888  006C84  C087  F07F         	movff	MiApp_SetAddressPan@addr,NetworkSetAddressPAN@address
  6889  006C88  C088  F080         	movff	MiApp_SetAddressPan@addr+1,NetworkSetAddressPAN@address+1
  6890  006C8C  C085  F081         	movff	MiApp_SetAddressPan@panid,NetworkSetAddressPAN@PANID
  6891  006C90  C086  F082         	movff	MiApp_SetAddressPan@panid+1,NetworkSetAddressPAN@PANID+1
  6892  006C94  EFAF  F034         	goto	_NetworkSetAddressPAN	;wreg free
  6893  006C98                     __end_of_MiApp_SetAddressPan:
  6894                           	opt stack 0
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           intcon3	equ	0xFF0
  6902                           postinc0	equ	0xFEE
  6903                           plusw0	equ	0xFEB
  6904                           wreg	equ	0xFE8
  6905                           postdec1	equ	0xFE5
  6906                           fsr1h	equ	0xFE2
  6907                           fsr1l	equ	0xFE1
  6908                           indf2	equ	0xFDF
  6909                           postinc2	equ	0xFDE
  6910                           postdec2	equ	0xFDD
  6911                           plusw2	equ	0xFDB
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8
  6915                           
  6916 ;; *************** function _NetworkSetAddressPAN *****************
  6917 ;; Defined at:
  6918 ;;		line 430 in file "../NetworkManager.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  address         2   31[BANK0 ] struct addr_t_def
  6921 ;;  PANID           2   33[BANK0 ] unsigned int 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      void 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6928 ;; Tracked objects:
  6929 ;;		On entry : E/1
  6930 ;;		On exit  : E/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6933 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6936 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;Total ram usage:        4 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    6
  6940 ;; This function calls:
  6941 ;;		_NetworkAddressSizeGet
  6942 ;;		_NetworkGetDeviceType
  6943 ;;		_memcpy
  6944 ;; This function is called by:
  6945 ;;		_MiApp_SetAddressPan
  6946 ;;		_NetworkInit
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text27
  6951  00695E                     __ptext27:
  6952                           	opt stack 0
  6953  00695E                     _NetworkSetAddressPAN:
  6954                           	opt stack 22
  6955                           
  6956                           ;NetworkManager.c: 432: memcpy(MyAddress.bytes,address.bytes,NetworkAddressSizeGet());
  6957                           
  6958                           ;incstack = 0
  6959  00695E  0EFC               	movlw	low _MyAddress
  6960  006960  0100               	movlb	0	; () banked
  6961  006962  6F75               	movwf	memcpy@d1& (0+255),b
  6962  006964  0E01               	movlw	high _MyAddress
  6963  006966  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6964  006968  0E7F               	movlw	low NetworkSetAddressPAN@address
  6965  00696A  6F77               	movwf	memcpy@s1& (0+255),b
  6966  00696C  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  6967  00696E  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  6968  006972  0100               	movlb	0	; () banked
  6969  006974  6F79               	movwf	memcpy@n& (0+255),b
  6970  006976  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  6971  006978  EC05  F035         	call	_memcpy	;wreg free
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;NetworkManager.c: 433: DEVPanID=PANID;
  6975  00697C  C081  F1F7         	movff	NetworkSetAddressPAN@PANID,_DEVPanID
  6976  006980  C082  F1F8         	movff	NetworkSetAddressPAN@PANID+1,_DEVPanID+1
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;NetworkManager.c: 434: if(NetworkGetDeviceType()==DeviceCoordinator)
  6980  006984  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  6981  006988  0900               	iorlw	0
  6982  00698A  A4D8               	btfss	status,2,c
  6983  00698C  0012               	return	
  6984                           
  6985                           ; BSR set to: 1
  6986                           ;NetworkManager.c: 435: {
  6987                           ;NetworkManager.c: 436: CoordinatorAddr=MyAddress;
  6988  00698E  C1FC  F1E1         	movff	_MyAddress,_CoordinatorAddr
  6989  006992  C1FD  F1E2         	movff	_MyAddress+1,_CoordinatorAddr+1
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;NetworkManager.c: 437: memcpy(routeInfo.parent.bytes,address.bytes,NetworkAddressSizeGe
      +                          t());
  6993  006996  0ED4               	movlw	low _routeInfo
  6994  006998  0100               	movlb	0	; () banked
  6995  00699A  6F75               	movwf	memcpy@d1& (0+255),b
  6996  00699C  0E01               	movlw	high _routeInfo
  6997  00699E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6998  0069A0  0E7F               	movlw	low NetworkSetAddressPAN@address
  6999  0069A2  6F77               	movwf	memcpy@s1& (0+255),b
  7000  0069A4  6B78               	clrf	(memcpy@s1+1)& (0+255),b
  7001  0069A6  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  7002  0069AA  0100               	movlb	0	; () banked
  7003  0069AC  6F79               	movwf	memcpy@n& (0+255),b
  7004  0069AE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  7005  0069B0  EF05  F035         	goto	_memcpy	;wreg free
  7006  0069B4                     __end_of_NetworkSetAddressPAN:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon3	equ	0xFF0
  7015                           postinc0	equ	0xFEE
  7016                           plusw0	equ	0xFEB
  7017                           wreg	equ	0xFE8
  7018                           postdec1	equ	0xFE5
  7019                           fsr1h	equ	0xFE2
  7020                           fsr1l	equ	0xFE1
  7021                           indf2	equ	0xFDF
  7022                           postinc2	equ	0xFDE
  7023                           postdec2	equ	0xFDD
  7024                           plusw2	equ	0xFDB
  7025                           fsr2h	equ	0xFDA
  7026                           fsr2l	equ	0xFD9
  7027                           status	equ	0xFD8
  7028                           
  7029 ;; *************** function _MiApp_MessageAvailable *****************
  7030 ;; Defined at:
  7031 ;;		line 236 in file "../src/Bridge.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  src             2  138[BANK1 ] struct addr_t_def
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      unsigned char 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : F/0
  7042 ;;		On exit  : F/1
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;Total ram usage:        6 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:   16
  7052 ;; This function calls:
  7053 ;;		_AddNodeToNetworkTable
  7054 ;;		_MiMAC_ReceivedPacket
  7055 ;;		_MiWi_TickGetMs
  7056 ;;		_NetworkManagerTask
  7057 ;;		_TimeTickISR
  7058 ;;		_memcpy
  7059 ;;		_radioReceivedPacket
  7060 ;; This function is called by:
  7061 ;;		_main
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text28
  7066  005090                     __ptext28:
  7067                           	opt stack 0
  7068  005090                     _MiApp_MessageAvailable:
  7069                           	opt stack 14
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;Bridge.c: 238: addr_t src;
  7073                           ;Bridge.c: 239: static MIWI_TICK tStart={0};
  7074                           ;Bridge.c: 241: if((MiWi_TickGetMs().Val - tStart.Val)>=1)
  7075                           
  7076                           ;incstack = 0
  7077  005090  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
  7078  005094  0102               	movlb	2	; () banked
  7079  005096  5124               	movf	MiApp_MessageAvailable@tStart& (0+255),w,b
  7080  005098  0100               	movlb	0	; () banked
  7081  00509A  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
  7082  00509C  0101               	movlb	1	; () banked
  7083  00509E  6F86               	movwf	??_MiApp_MessageAvailable& (0+255),b
  7084  0050A0  0102               	movlb	2	; () banked
  7085  0050A2  5125               	movf	(MiApp_MessageAvailable@tStart+1)& (0+255),w,b
  7086  0050A4  0100               	movlb	0	; () banked
  7087  0050A6  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
  7088  0050A8  0101               	movlb	1	; () banked
  7089  0050AA  6F87               	movwf	(??_MiApp_MessageAvailable+1)& (0+255),b
  7090  0050AC  0102               	movlb	2	; () banked
  7091  0050AE  5126               	movf	(MiApp_MessageAvailable@tStart+2)& (0+255),w,b
  7092  0050B0  0100               	movlb	0	; () banked
  7093  0050B2  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
  7094  0050B4  0101               	movlb	1	; () banked
  7095  0050B6  6F88               	movwf	(??_MiApp_MessageAvailable+2)& (0+255),b
  7096  0050B8  0102               	movlb	2	; () banked
  7097  0050BA  5127               	movf	(MiApp_MessageAvailable@tStart+3)& (0+255),w,b
  7098  0050BC  0100               	movlb	0	; () banked
  7099  0050BE  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
  7100  0050C0  0101               	movlb	1	; () banked
  7101  0050C2  6F89               	movwf	(??_MiApp_MessageAvailable+3)& (0+255),b
  7102  0050C4  5186               	movf	??_MiApp_MessageAvailable& (0+255),w,b
  7103  0050C6  1187               	iorwf	(??_MiApp_MessageAvailable+1)& (0+255),w,b
  7104  0050C8  1188               	iorwf	(??_MiApp_MessageAvailable+2)& (0+255),w,b
  7105  0050CA  1189               	iorwf	(??_MiApp_MessageAvailable+3)& (0+255),w,b
  7106  0050CC  E00C               	bz	l18414
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;Bridge.c: 242: {
  7110                           ;Bridge.c: 243: tStart=MiWi_TickGetMs();
  7111  0050CE  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
  7112  0050D2  C07F  F224         	movff	?_MiWi_TickGetMs,MiApp_MessageAvailable@tStart
  7113  0050D6  C080  F225         	movff	?_MiWi_TickGetMs+1,MiApp_MessageAvailable@tStart+1
  7114  0050DA  C081  F226         	movff	?_MiWi_TickGetMs+2,MiApp_MessageAvailable@tStart+2
  7115  0050DE  C082  F227         	movff	?_MiWi_TickGetMs+3,MiApp_MessageAvailable@tStart+3
  7116                           
  7117                           ;Bridge.c: 244: TimeTickISR();
  7118  0050E2  EC78  F038         	call	_TimeTickISR	;wreg free
  7119  0050E6                     l18414:
  7120                           
  7121                           ;Bridge.c: 245: }
  7122                           ;Bridge.c: 246: NetworkManagerTask();
  7123  0050E6  ECA0  F00C         	call	_NetworkManagerTask	;wreg free
  7124                           
  7125                           ;Bridge.c: 247: if(MiMAC_ReceivedPacket()==1)
  7126  0050EA  ECAF  F007         	call	_MiMAC_ReceivedPacket	;wreg free
  7127  0050EE  06E8               	decf	wreg,f,c
  7128  0050F0  E12E               	bnz	l18422
  7129                           
  7130                           ;Bridge.c: 248: {
  7131                           ;Bridge.c: 249: memcpy(src.bytes,MACRxPacket.SourceAddress,sizeof(src));
  7132  0050F2  0E8A               	movlw	low MiApp_MessageAvailable@src
  7133  0050F4  0100               	movlb	0	; () banked
  7134  0050F6  6F75               	movwf	memcpy@d1& (0+255),b
  7135  0050F8  0E01               	movlw	high MiApp_MessageAvailable@src
  7136  0050FA  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  7137  0050FC  C1C9  F077         	movff	_MACRxPacket+1,memcpy@s1
  7138  005100  C1CA  F078         	movff	_MACRxPacket+2,memcpy@s1+1
  7139  005104  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  7140  005106  0E02               	movlw	2
  7141  005108  6F79               	movwf	memcpy@n& (0+255),b
  7142  00510A  EC05  F035         	call	_memcpy	;wreg free
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;Bridge.c: 250: radioReceivedPacket(src,MACRxPacket.SourcePANID,MACRxPacket.Payload,MACR
      +                          xPacket.PayloadLen,MACRxPacket.RSSIValue,MACRxPacket.flags.bits.broadcast,MACRxPacket.fl
      +                          ags.bits.secEn);
  7146  00510E  C18A  F2D8         	movff	MiApp_MessageAvailable@src,radioReceivedPacket@source
  7147  005112  C18B  F2D9         	movff	MiApp_MessageAvailable@src+1,radioReceivedPacket@source+1
  7148  005116  C1D0  F2DA         	movff	_MACRxPacket+8,radioReceivedPacket@PANID
  7149  00511A  C1D1  F2DB         	movff	_MACRxPacket+9,radioReceivedPacket@PANID+1
  7150  00511E  C1CB  F2DC         	movff	_MACRxPacket+3,radioReceivedPacket@data
  7151  005122  C1CC  F2DD         	movff	_MACRxPacket+4,radioReceivedPacket@data+1
  7152  005126  C1CD  F2DE         	movff	_MACRxPacket+5,radioReceivedPacket@size
  7153  00512A  0102               	movlb	2	; () banked
  7154  00512C  6BDF               	clrf	(radioReceivedPacket@size+1)& (0+255),b
  7155  00512E  C1CE  F2E0         	movff	_MACRxPacket+6,radioReceivedPacket@rssi
  7156  005132  0101               	movlb	1	; () banked
  7157  005134  0E00               	movlw	0
  7158  005136  B5C8               	btfsc	_MACRxPacket& (0+255),2,b
  7159  005138  0E01               	movlw	1
  7160  00513A  0102               	movlb	2	; () banked
  7161  00513C  6FE1               	movwf	radioReceivedPacket@isBroadcast& (0+255),b
  7162  00513E  0101               	movlb	1	; () banked
  7163  005140  0E00               	movlw	0
  7164  005142  B7C8               	btfsc	_MACRxPacket& (0+255),3,b
  7165  005144  0E01               	movlw	1
  7166  005146  0102               	movlb	2	; () banked
  7167  005148  6FE2               	movwf	radioReceivedPacket@isSecure& (0+255),b
  7168  00514A  EC55  F002         	call	_radioReceivedPacket	;wreg free
  7169  00514E                     l18422:
  7170                           
  7171                           ;Bridge.c: 251: }
  7172                           ;Bridge.c: 253: if(UserMessageAvailable==1)
  7173  00514E  0101               	movlb	1	; () banked
  7174  005150  05C0               	decf	_UserMessageAvailable& (0+255),w,b
  7175  005152  E118               	bnz	l18428
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;Bridge.c: 254: {
  7179                           ;Bridge.c: 255: memcpy(src.bytes,rxMessage.SourceAddress,sizeof(src));
  7180  005154  0E8A               	movlw	low MiApp_MessageAvailable@src
  7181  005156  0100               	movlb	0	; () banked
  7182  005158  6F75               	movwf	memcpy@d1& (0+255),b
  7183  00515A  0E01               	movlw	high MiApp_MessageAvailable@src
  7184  00515C  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  7185  00515E  C2BD  F077         	movff	_rxMessage+3,memcpy@s1
  7186  005162  C2BE  F078         	movff	_rxMessage+4,memcpy@s1+1
  7187  005166  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  7188  005168  0E02               	movlw	2
  7189  00516A  6F79               	movwf	memcpy@n& (0+255),b
  7190  00516C  EC05  F035         	call	_memcpy	;wreg free
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;Bridge.c: 256: AddNodeToNetworkTable(src,rxMessage.SourcePANID.Val);
  7194  005170  C18A  F081         	movff	MiApp_MessageAvailable@src,AddNodeToNetworkTable@address
  7195  005174  C18B  F082         	movff	MiApp_MessageAvailable@src+1,AddNodeToNetworkTable@address+1
  7196  005178  C2BB  F083         	movff	_rxMessage+1,AddNodeToNetworkTable@PANID
  7197  00517C  C2BC  F084         	movff	_rxMessage+2,AddNodeToNetworkTable@PANID+1
  7198  005180  EC1C  F017         	call	_AddNodeToNetworkTable	;wreg free
  7199  005184                     l18428:
  7200                           
  7201                           ;Bridge.c: 257: }
  7202                           ;Bridge.c: 259: return(UserMessageAvailable);
  7203  005184  0101               	movlb	1	; () banked
  7204  005186  51C0               	movf	_UserMessageAvailable& (0+255),w,b
  7205                           
  7206                           ; BSR set to: 1
  7207  005188  0012               	return		;funcret
  7208  00518A                     __end_of_MiApp_MessageAvailable:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           intcon3	equ	0xFF0
  7217                           postinc0	equ	0xFEE
  7218                           plusw0	equ	0xFEB
  7219                           wreg	equ	0xFE8
  7220                           postdec1	equ	0xFE5
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           plusw2	equ	0xFDB
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231 ;; *************** function _radioReceivedPacket *****************
  7232 ;; Defined at:
  7233 ;;		line 48 in file "../NetworkBridge.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  source          2    0[BANK2 ] struct addr_t_def
  7236 ;;  PANID           2    2[BANK2 ] unsigned int 
  7237 ;;  data            2    4[BANK2 ] PTR unsigned char 
  7238 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  7239 ;;  size            2    6[BANK2 ] unsigned int 
  7240 ;;  rssi            1    8[BANK2 ] unsigned char 
  7241 ;;  isBroadcast     1    9[BANK2 ] unsigned char 
  7242 ;;  isSecure        1   10[BANK2 ] unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  bt              2   18[BANK2 ] unsigned int 
  7245 ;;  crc             4   14[BANK2 ] unsigned long 
  7246 ;;  dhdr            2   26[BANK2 ] PTR struct net_data_head
  7247 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  7248 ;;  parent          2   24[BANK2 ] struct addr_t_def
  7249 ;;  child           2   22[BANK2 ] struct addr_t_def
  7250 ;;  rhdr            2   20[BANK2 ] PTR struct net_routing_h
  7251 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  7252 ;;  myAddr          2   11[BANK2 ] PTR struct addr_t_def
  7253 ;;		 -> MyAddress(2), 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : F/2
  7260 ;;		On exit  : C/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7263 ;;      Params:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7264 ;;      Locals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7266 ;;      Totals:         0       6       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7267 ;;Total ram usage:       34 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:   15
  7270 ;; This function calls:
  7271 ;;		_BlinkRedLED
  7272 ;;		_BroadcastManagerDelaySend
  7273 ;;		_CoordinatorGenericAddress
  7274 ;;		_DeviceManagerBufferDeviceData
  7275 ;;		_DeviceManagerGetDeviceType
  7276 ;;		_GetRouteAddressOfChild
  7277 ;;		_IsMemberOfNetwork
  7278 ;;		_IsNetworkDevice
  7279 ;;		_LE_RemoveNeighborDevice
  7280 ;;		_LE_processReceivedMessage
  7281 ;;		_NetworkDiscoveredEvent
  7282 ;;		_NetworkGetDeviceType
  7283 ;;		_NetworkGetPANID
  7284 ;;		_NetworkGetParentAddress
  7285 ;;		_NetworkManagerGetMyAddress
  7286 ;;		_NetworkManagerProcessIncomingData
  7287 ;;		_NetworkSendDiscoverResponse
  7288 ;;		_RouteManagerProcessReceive
  7289 ;;		_TMSendFormedPacketTowardsCoordinator
  7290 ;;		_TunnelManagerGetTunnel
  7291 ;;		_TunnelManagerInvalidateTunnel
  7292 ;;		_TunnelManagerSetTunnel
  7293 ;;		_crc32
  7294 ;;		_isBroadcastAddress
  7295 ;;		_isKnownPacket
  7296 ;;		_isSameAddress
  7297 ;;		_memcpy
  7298 ;;		_radioDiscardPacket
  7299 ;;		_radioUnicast
  7300 ;; This function is called by:
  7301 ;;		_MiApp_MessageAvailable
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text29
  7306  0004AA                     __ptext29:
  7307                           	opt stack 0
  7308  0004AA                     _radioReceivedPacket:
  7309                           	opt stack 14
  7310                           
  7311                           ; BSR set to: 2
  7312                           ;NetworkBridge.c: 50: net_routing_header_t *rhdr=(net_routing_header_t*)data;
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;incstack = 0
  7316  0004AA  C2DC  F2EC         	movff	radioReceivedPacket@data,radioReceivedPacket@rhdr
  7317  0004AE  C2DD  F2ED         	movff	radioReceivedPacket@data+1,radioReceivedPacket@rhdr+1
  7318                           
  7319                           ;NetworkBridge.c: 51: net_data_header_t *dhdr=(net_data_header_t*)data;
  7320  0004B2  C2DC  F2F2         	movff	radioReceivedPacket@data,radioReceivedPacket@dhdr
  7321  0004B6  C2DD  F2F3         	movff	radioReceivedPacket@data+1,radioReceivedPacket@dhdr+1
  7322                           
  7323                           ; BSR set to: 2
  7324                           ;NetworkBridge.c: 52: addr_t* myAddr=NetworkManagerGetMyAddress();
  7325  0004BA  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
  7326  0004BE  C073  F2E3         	movff	?_NetworkManagerGetMyAddress,radioReceivedPacket@myAddr
  7327  0004C2  C074  F2E4         	movff	?_NetworkManagerGetMyAddress+1,radioReceivedPacket@myAddr+1
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;NetworkBridge.c: 53: uint32_t crc=0;
  7331  0004C6  0102               	movlb	2	; () banked
  7332  0004C8  6BE6               	clrf	radioReceivedPacket@crc& (0+255),b
  7333  0004CA  6BE7               	clrf	(radioReceivedPacket@crc+1)& (0+255),b
  7334  0004CC  6BE8               	clrf	(radioReceivedPacket@crc+2)& (0+255),b
  7335  0004CE  6BE9               	clrf	(radioReceivedPacket@crc+3)& (0+255),b
  7336                           
  7337                           ; BSR set to: 2
  7338                           ;NetworkBridge.c: 54: addr_t child,parent;
  7339                           ;NetworkBridge.c: 57: crc=crc32(crc,(uint8_t*)&data[1], size);
  7340  0004D0  C2E6  F073         	movff	radioReceivedPacket@crc,crc32@crc
  7341  0004D4  C2E7  F074         	movff	radioReceivedPacket@crc+1,crc32@crc+1
  7342  0004D8  C2E8  F075         	movff	radioReceivedPacket@crc+2,crc32@crc+2
  7343  0004DC  C2E9  F076         	movff	radioReceivedPacket@crc+3,crc32@crc+3
  7344  0004E0  29DC               	incf	radioReceivedPacket@data& (0+255),w,b
  7345  0004E2  0100               	movlb	0	; () banked
  7346  0004E4  6F77               	movwf	crc32@buf& (0+255),b
  7347  0004E6  0E00               	movlw	0
  7348  0004E8  0102               	movlb	2	; () banked
  7349  0004EA  21DD               	addwfc	(radioReceivedPacket@data+1)& (0+255),w,b
  7350  0004EC  0100               	movlb	0	; () banked
  7351  0004EE  6F78               	movwf	(crc32@buf+1)& (0+255),b
  7352  0004F0  C2DE  F079         	movff	radioReceivedPacket@size,crc32@size
  7353  0004F4  C2DF  F07A         	movff	radioReceivedPacket@size+1,crc32@size+1
  7354  0004F8  ECDC  F02D         	call	_crc32	;wreg free
  7355  0004FC  C073  F2E6         	movff	?_crc32,radioReceivedPacket@crc
  7356  000500  C074  F2E7         	movff	?_crc32+1,radioReceivedPacket@crc+1
  7357  000504  C075  F2E8         	movff	?_crc32+2,radioReceivedPacket@crc+2
  7358  000508  C076  F2E9         	movff	?_crc32+3,radioReceivedPacket@crc+3
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;NetworkBridge.c: 59: if(isKnownPacket(crc)==0)
  7362  00050C  C2E6  F0AB         	movff	radioReceivedPacket@crc,isKnownPacket@hash
  7363  000510  C2E7  F0AC         	movff	radioReceivedPacket@crc+1,isKnownPacket@hash+1
  7364  000514  C2E8  F0AD         	movff	radioReceivedPacket@crc+2,isKnownPacket@hash+2
  7365  000518  C2E9  F0AE         	movff	radioReceivedPacket@crc+3,isKnownPacket@hash+3
  7366  00051C  EC5C  F00F         	call	_isKnownPacket	;wreg free
  7367  000520  0900               	iorlw	0
  7368  000522  E002 EFFF  F039    	bnz	_MiMAC_DiscardPacket
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;NetworkBridge.c: 60: {
  7372                           ;NetworkBridge.c: 61: if( (isBroadcast==1) && (rhdr->packettype==PacketRouting) )
  7373  000528  0102               	movlb	2	; () banked
  7374  00052A  05E1               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7375  00052C  E15F               	bnz	l17818
  7376                           
  7377                           ; BSR set to: 2
  7378  00052E  EE20 F002          	lfsr	2,2
  7379  000532  51EC               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  7380  000534  26D9               	addwf	fsr2l,f,c
  7381  000536  51ED               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  7382  000538  22DA               	addwfc	fsr2h,f,c
  7383  00053A  0E22               	movlw	34
  7384  00053C  18DE               	xorwf	postinc2,w,c
  7385  00053E  E156               	bnz	l17818
  7386                           
  7387                           ; BSR set to: 2
  7388                           ;NetworkBridge.c: 62: {
  7389                           ;NetworkBridge.c: 65: uint16_t bt;
  7390                           ;NetworkBridge.c: 66: memcpy(&bt,source.bytes,2);
  7391  000540  0EEA               	movlw	low radioReceivedPacket@bt
  7392  000542  0100               	movlb	0	; () banked
  7393  000544  6F75               	movwf	memcpy@d1& (0+255),b
  7394  000546  0E02               	movlw	high radioReceivedPacket@bt
  7395  000548  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  7396  00054A  0ED8               	movlw	low radioReceivedPacket@source
  7397  00054C  6F77               	movwf	memcpy@s1& (0+255),b
  7398  00054E  0E02               	movlw	high radioReceivedPacket@source
  7399  000550  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  7400  000552  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  7401  000554  0E02               	movlw	2
  7402  000556  6F79               	movwf	memcpy@n& (0+255),b
  7403  000558  EC05  F035         	call	_memcpy	;wreg free
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;NetworkBridge.c: 67: rhdr->etx=rhdr->etx ^ (((uint16_t)(~bt))+(uint16_t)0x3497);
  7407  00055C  0102               	movlb	2	; () banked
  7408  00055E  EE20 F006          	lfsr	2,6
  7409  000562  51EC               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  7410  000564  26D9               	addwf	fsr2l,f,c
  7411  000566  51ED               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  7412  000568  22DA               	addwfc	fsr2h,f,c
  7413  00056A  CFDE F0E3          	movff	postinc2,??_radioReceivedPacket
  7414  00056E  CFDD F0E4          	movff	postdec2,??_radioReceivedPacket+1
  7415  000572  0E97               	movlw	151
  7416  000574  0100               	movlb	0	; () banked
  7417  000576  6FE5               	movwf	(??_radioReceivedPacket+2)& (0+255),b
  7418  000578  0E34               	movlw	52
  7419  00057A  6FE6               	movwf	(??_radioReceivedPacket+3)& (0+255),b
  7420  00057C  0102               	movlb	2	; () banked
  7421  00057E  1DEA               	comf	radioReceivedPacket@bt& (0+255),w,b
  7422  000580  0100               	movlb	0	; () banked
  7423  000582  6FE7               	movwf	(??_radioReceivedPacket+4)& (0+255),b
  7424  000584  0102               	movlb	2	; () banked
  7425  000586  1DEB               	comf	(radioReceivedPacket@bt+1)& (0+255),w,b
  7426  000588  0100               	movlb	0	; () banked
  7427  00058A  6FE8               	movwf	(??_radioReceivedPacket+5)& (0+255),b
  7428  00058C  51E5               	movf	(??_radioReceivedPacket+2)& (0+255),w,b
  7429  00058E  27E7               	addwf	(??_radioReceivedPacket+4)& (0+255),f,b
  7430  000590  51E6               	movf	(??_radioReceivedPacket+3)& (0+255),w,b
  7431  000592  23E8               	addwfc	(??_radioReceivedPacket+5)& (0+255),f,b
  7432  000594  51E3               	movf	??_radioReceivedPacket& (0+255),w,b
  7433  000596  1BE7               	xorwf	(??_radioReceivedPacket+4)& (0+255),f,b
  7434  000598  51E4               	movf	(??_radioReceivedPacket+1)& (0+255),w,b
  7435  00059A  1BE8               	xorwf	(??_radioReceivedPacket+5)& (0+255),f,b
  7436  00059C  0102               	movlb	2	; () banked
  7437  00059E  EE20 F006          	lfsr	2,6
  7438  0005A2  51EC               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  7439  0005A4  26D9               	addwf	fsr2l,f,c
  7440  0005A6  51ED               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  7441  0005A8  22DA               	addwfc	fsr2h,f,c
  7442  0005AA  C0E7  FFDE         	movff	??_radioReceivedPacket+4,postinc2
  7443  0005AE  C0E8  FFDD         	movff	??_radioReceivedPacket+5,postdec2
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;NetworkBridge.c: 69: LE_processReceivedMessage(&source,data,size,rssi);
  7447  0005B2  0ED8               	movlw	low radioReceivedPacket@source
  7448  0005B4  0100               	movlb	0	; () banked
  7449  0005B6  6F9F               	movwf	LE_processReceivedMessage@source& (0+255),b
  7450  0005B8  0E02               	movlw	high radioReceivedPacket@source
  7451  0005BA  6FA0               	movwf	(LE_processReceivedMessage@source+1)& (0+255),b
  7452  0005BC  C2DC  F0A1         	movff	radioReceivedPacket@data,LE_processReceivedMessage@data
  7453  0005C0  C2DD  F0A2         	movff	radioReceivedPacket@data+1,LE_processReceivedMessage@data+1
  7454  0005C4  C2DE  F0A3         	movff	radioReceivedPacket@size,LE_processReceivedMessage@len
  7455  0005C8  C2E0  F0A4         	movff	radioReceivedPacket@rssi,LE_processReceivedMessage@rssi
  7456  0005CC  ECE3  F024         	call	_LE_processReceivedMessage	;wreg free
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;NetworkBridge.c: 70: RouteManagerProcessReceive(&source,data,size);
  7460  0005D0  0ED8               	movlw	low radioReceivedPacket@source
  7461  0005D2  6F9C               	movwf	RouteManagerProcessReceive@source& (0+255),b
  7462  0005D4  0E02               	movlw	high radioReceivedPacket@source
  7463  0005D6  6F9D               	movwf	(RouteManagerProcessReceive@source+1)& (0+255),b
  7464  0005D8  C2DC  F09E         	movff	radioReceivedPacket@data,RouteManagerProcessReceive@data
  7465  0005DC  C2DD  F09F         	movff	radioReceivedPacket@data+1,RouteManagerProcessReceive@data+1
  7466  0005E0  C2DE  F0A0         	movff	radioReceivedPacket@size,RouteManagerProcessReceive@len
  7467  0005E4  EC08  F023         	call	_RouteManagerProcessReceive	;wreg free
  7468                           
  7469                           ;NetworkBridge.c: 71: }else if( (NetworkGetDeviceType()!=DeviceCoordinator) || (IsNetwor
      +                          kDevice(dhdr->origin,(dhdr->flags & 0x07))==1) )
  7470  0005E8  EF0F  F03B         	goto	_radioDiscardPacket
  7471  0005EC                     l17818:
  7472                           
  7473                           ; BSR set to: 2
  7474  0005EC  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  7475  0005F0  0900               	iorlw	0
  7476  0005F2  E11A               	bnz	l17822
  7477                           
  7478                           ; BSR set to: 1
  7479  0005F4  0102               	movlb	2	; () banked
  7480  0005F6  EE20 F006          	lfsr	2,6
  7481  0005FA  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7482  0005FC  26D9               	addwf	fsr2l,f,c
  7483  0005FE  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7484  000600  22DA               	addwfc	fsr2h,f,c
  7485  000602  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
  7486  000606  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
  7487  00060A  EE20 F003          	lfsr	2,3
  7488  00060E  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7489  000610  26D9               	addwf	fsr2l,f,c
  7490  000612  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7491  000614  22DA               	addwfc	fsr2h,f,c
  7492  000616  50DF               	movf	indf2,w,c
  7493  000618  0B07               	andlw	7
  7494  00061A  0100               	movlb	0	; () banked
  7495  00061C  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
  7496  00061E  EC71  F01A         	call	_IsNetworkDevice	;wreg free
  7497  000622  06E8               	decf	wreg,f,c
  7498  000624  E001 D283          	bnz	l17976
  7499  000628                     l17822:
  7500                           
  7501                           ;NetworkBridge.c: 72: {
  7502                           ;NetworkBridge.c: 75: if( (isBroadcast==1) && (rhdr->packettype==PacketScanRequest) )
  7503  000628  0102               	movlb	2	; () banked
  7504  00062A  05E1               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7505  00062C  E112               	bnz	l17830
  7506                           
  7507                           ; BSR set to: 2
  7508  00062E  EE20 F002          	lfsr	2,2
  7509  000632  51EC               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  7510  000634  26D9               	addwf	fsr2l,f,c
  7511  000636  51ED               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  7512  000638  22DA               	addwfc	fsr2h,f,c
  7513  00063A  0E27               	movlw	39
  7514  00063C  18DE               	xorwf	postinc2,w,c
  7515  00063E  E109               	bnz	l17830
  7516                           
  7517                           ; BSR set to: 2
  7518                           ;NetworkBridge.c: 76: {
  7519                           ;NetworkBridge.c: 77: if(IsMemberOfNetwork()==1)
  7520  000640  EC11  F03B         	call	_IsMemberOfNetwork	;wreg free
  7521  000644  06E8               	decf	wreg,f,c
  7522  000646  E001 D272          	bnz	l17976
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;NetworkBridge.c: 78: {
  7526                           ;NetworkBridge.c: 80: NetworkSendDiscoverResponse();
  7527  00064A  ECF8  F030         	call	_NetworkSendDiscoverResponse	;wreg free
  7528  00064E  EF0F  F03B         	goto	_radioDiscardPacket
  7529  000652                     l17830:
  7530                           
  7531                           ; BSR set to: 2
  7532  000652  05E1               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7533  000654  E11A               	bnz	l17838
  7534                           
  7535                           ; BSR set to: 2
  7536  000656  EE20 F002          	lfsr	2,2
  7537  00065A  51EC               	movf	radioReceivedPacket@rhdr& (0+255),w,b
  7538  00065C  26D9               	addwf	fsr2l,f,c
  7539  00065E  51ED               	movf	(radioReceivedPacket@rhdr+1)& (0+255),w,b
  7540  000660  22DA               	addwfc	fsr2h,f,c
  7541  000662  0E28               	movlw	40
  7542  000664  18DE               	xorwf	postinc2,w,c
  7543  000666  E111               	bnz	l17838
  7544                           
  7545                           ; BSR set to: 2
  7546                           ;NetworkBridge.c: 83: {
  7547                           ;NetworkBridge.c: 84: if(PANID!=0xffff)
  7548  000668  29DA               	incf	radioReceivedPacket@PANID& (0+255),w,b
  7549  00066A  E103               	bnz	u22050
  7550  00066C  29DB               	incf	(radioReceivedPacket@PANID+1)& (0+255),w,b
  7551  00066E  E101 D25E          	bz	l17976
  7552  000672                     u22050:
  7553                           
  7554                           ; BSR set to: 2
  7555                           ;NetworkBridge.c: 85: {
  7556                           ;NetworkBridge.c: 86: NetworkDiscoveredEvent(PANID, rssi);
  7557  000672  C2DA  F073         	movff	radioReceivedPacket@PANID,NetworkDiscoveredEvent@PANID
  7558  000676  C2DB  F074         	movff	radioReceivedPacket@PANID+1,NetworkDiscoveredEvent@PANID+1
  7559  00067A  C2E0  F075         	movff	radioReceivedPacket@rssi,NetworkDiscoveredEvent@rssi
  7560  00067E  0100               	movlb	0	; () banked
  7561  000680  6B76               	clrf	(NetworkDiscoveredEvent@rssi+1)& (0+255),b
  7562  000682  ECA5  F019         	call	_NetworkDiscoveredEvent	;wreg free
  7563                           
  7564                           ;NetworkBridge.c: 87: }
  7565                           ;NetworkBridge.c: 88: }else if( (dhdr->packettype==PacketData) || (dhdr->packettype==Pac
      +                          ketCheckin)
  7566  000686  EF0F  F03B         	goto	_radioDiscardPacket
  7567  00068A                     l17838:
  7568                           
  7569                           ; BSR set to: 2
  7570                           ;NetworkBridge.c: 89: || (dhdr->packettype==PacketCheckinReply) ||(dhdr->packettype==Pac
      +                          ketRoutedData)
  7571                           ;NetworkBridge.c: 90: || (dhdr->packettype==PacketRFDRequestData) )
  7572  00068A  EE20 F002          	lfsr	2,2
  7573  00068E  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7574  000690  26D9               	addwf	fsr2l,f,c
  7575  000692  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7576  000694  22DA               	addwfc	fsr2h,f,c
  7577  000696  0E23               	movlw	35
  7578  000698  18DE               	xorwf	postinc2,w,c
  7579  00069A  E025               	bz	l17848
  7580                           
  7581                           ; BSR set to: 2
  7582  00069C  EE20 F002          	lfsr	2,2
  7583  0006A0  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7584  0006A2  26D9               	addwf	fsr2l,f,c
  7585  0006A4  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7586  0006A6  22DA               	addwfc	fsr2h,f,c
  7587  0006A8  0E24               	movlw	36
  7588  0006AA  18DE               	xorwf	postinc2,w,c
  7589  0006AC  E01C               	bz	l17848
  7590                           
  7591                           ; BSR set to: 2
  7592  0006AE  EE20 F002          	lfsr	2,2
  7593  0006B2  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7594  0006B4  26D9               	addwf	fsr2l,f,c
  7595  0006B6  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7596  0006B8  22DA               	addwfc	fsr2h,f,c
  7597  0006BA  0E25               	movlw	37
  7598  0006BC  18DE               	xorwf	postinc2,w,c
  7599  0006BE  E013               	bz	l17848
  7600                           
  7601                           ; BSR set to: 2
  7602  0006C0  EE20 F002          	lfsr	2,2
  7603  0006C4  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7604  0006C6  26D9               	addwf	fsr2l,f,c
  7605  0006C8  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7606  0006CA  22DA               	addwfc	fsr2h,f,c
  7607  0006CC  0E26               	movlw	38
  7608  0006CE  18DE               	xorwf	postinc2,w,c
  7609  0006D0  E00A               	bz	l17848
  7610                           
  7611                           ; BSR set to: 2
  7612  0006D2  EE20 F002          	lfsr	2,2
  7613  0006D6  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7614  0006D8  26D9               	addwf	fsr2l,f,c
  7615  0006DA  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7616  0006DC  22DA               	addwfc	fsr2h,f,c
  7617  0006DE  0E29               	movlw	41
  7618  0006E0  18DE               	xorwf	postinc2,w,c
  7619  0006E2  E001 D224          	bnz	l17976
  7620  0006E6                     l17848:
  7621                           
  7622                           ; BSR set to: 2
  7623                           ;NetworkBridge.c: 91: {
  7624                           ;NetworkBridge.c: 92: BlinkRedLED();
  7625  0006E6  ECB5  F03A         	call	_BlinkRedLED	;wreg free
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;NetworkBridge.c: 93: if( (isSameAddress(*myAddr,dhdr->target)) || (isBroadcastAddress(d
      +                          hdr->target))
  7629                           ;NetworkBridge.c: 94: || ((NetworkGetDeviceType()==DeviceCoordinator) && (isSameAddress(
      +                          CoordinatorGenericAddress(),dhdr->target)) ) )
  7630  0006EA  C2E3  FFD9         	movff	radioReceivedPacket@myAddr,fsr2l
  7631  0006EE  C2E4  FFDA         	movff	radioReceivedPacket@myAddr+1,fsr2h
  7632  0006F2  CFDE F07D          	movff	postinc2,isSameAddress@a1
  7633  0006F6  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  7634  0006FA  0102               	movlb	2	; () banked
  7635  0006FC  EE20 F004          	lfsr	2,4
  7636  000700  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7637  000702  26D9               	addwf	fsr2l,f,c
  7638  000704  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7639  000706  22DA               	addwfc	fsr2h,f,c
  7640  000708  CFDE F07F          	movff	postinc2,isSameAddress@a2
  7641  00070C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  7642  000710  ECBD  F039         	call	_isSameAddress	;wreg free
  7643  000714  0900               	iorlw	0
  7644  000716  E128               	bnz	l17858
  7645                           
  7646                           ; BSR set to: 0
  7647  000718  0102               	movlb	2	; () banked
  7648  00071A  EE20 F004          	lfsr	2,4
  7649  00071E  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7650  000720  26D9               	addwf	fsr2l,f,c
  7651  000722  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7652  000724  22DA               	addwfc	fsr2h,f,c
  7653  000726  CFDE F07A          	movff	postinc2,isBroadcastAddress@address
  7654  00072A  CFDD F07B          	movff	postdec2,isBroadcastAddress@address+1
  7655  00072E  ECDC  F036         	call	_isBroadcastAddress	;wreg free
  7656  000732  0900               	iorlw	0
  7657  000734  E119               	bnz	l17858
  7658                           
  7659                           ; BSR set to: 0
  7660  000736  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  7661  00073A  0900               	iorlw	0
  7662  00073C  E17F               	bnz	l17882
  7663                           
  7664                           ; BSR set to: 1
  7665  00073E  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
  7666  000742  C07B  F07D         	movff	?_CoordinatorGenericAddress,isSameAddress@a1
  7667  000746  C07C  F07E         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a1+1
  7668  00074A  0102               	movlb	2	; () banked
  7669  00074C  EE20 F004          	lfsr	2,4
  7670  000750  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7671  000752  26D9               	addwf	fsr2l,f,c
  7672  000754  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7673  000756  22DA               	addwfc	fsr2h,f,c
  7674  000758  CFDE F07F          	movff	postinc2,isSameAddress@a2
  7675  00075C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  7676  000760  ECBD  F039         	call	_isSameAddress	;wreg free
  7677  000764  0900               	iorlw	0
  7678  000766  E06A               	bz	l17882
  7679  000768                     l17858:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;NetworkBridge.c: 95: {
  7683                           ;NetworkBridge.c: 98: if( (dhdr->Hops>0) && ((isBroadcastAddress(dhdr->target) ) || ((is
      +                          Broadcast==1) && (NetworkGetDeviceType()==DeviceCoordinator) ) ))
  7684  000768  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7685  00076C  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7686  000770  50DF               	movf	indf2,w,c
  7687  000772  E029               	bz	l17870
  7688                           
  7689                           ; BSR set to: 0
  7690  000774  0102               	movlb	2	; () banked
  7691  000776  EE20 F004          	lfsr	2,4
  7692  00077A  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7693  00077C  26D9               	addwf	fsr2l,f,c
  7694  00077E  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7695  000780  22DA               	addwfc	fsr2h,f,c
  7696  000782  CFDE F07A          	movff	postinc2,isBroadcastAddress@address
  7697  000786  CFDD F07B          	movff	postdec2,isBroadcastAddress@address+1
  7698  00078A  ECDC  F036         	call	_isBroadcastAddress	;wreg free
  7699  00078E  0900               	iorlw	0
  7700  000790  E107               	bnz	l17866
  7701                           
  7702                           ; BSR set to: 0
  7703  000792  0102               	movlb	2	; () banked
  7704  000794  05E1               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7705  000796  E117               	bnz	l17870
  7706                           
  7707                           ; BSR set to: 2
  7708  000798  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  7709  00079C  0900               	iorlw	0
  7710  00079E  E113               	bnz	l17870
  7711  0007A0                     l17866:
  7712                           
  7713                           ;NetworkBridge.c: 99: {
  7714                           ;NetworkBridge.c: 100: dhdr->Hops--;
  7715  0007A0  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7716  0007A4  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7717  0007A8  06DF               	decf	indf2,f,c
  7718                           
  7719                           ;NetworkBridge.c: 101: BroadcastManagerDelaySend(data,size,isSecure,0);
  7720  0007AA  C2DC  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  7721  0007AE  C2DD  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  7722  0007B2  C2DE  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  7723  0007B6  C2DF  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  7724  0007BA  C2E2  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  7725  0007BE  0100               	movlb	0	; () banked
  7726  0007C0  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  7727  0007C2  EC39  F01B         	call	_BroadcastManagerDelaySend	;wreg free
  7728  0007C6                     l17870:
  7729                           
  7730                           ;NetworkBridge.c: 102: }
  7731                           ;NetworkBridge.c: 103: if(isBroadcast==0)
  7732  0007C6  0102               	movlb	2	; () banked
  7733  0007C8  51E1               	movf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7734  0007CA  E119               	bnz	l17878
  7735                           
  7736                           ; BSR set to: 2
  7737                           ;NetworkBridge.c: 104: {
  7738                           ;NetworkBridge.c: 105: child=dhdr->origin;
  7739  0007CC  EE20 F006          	lfsr	2,6
  7740  0007D0  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7741  0007D2  26D9               	addwf	fsr2l,f,c
  7742  0007D4  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7743  0007D6  22DA               	addwfc	fsr2h,f,c
  7744  0007D8  CFDE F2EE          	movff	postinc2,radioReceivedPacket@child
  7745  0007DC  CFDD F2EF          	movff	postdec2,radioReceivedPacket@child+1
  7746                           
  7747                           ; BSR set to: 2
  7748                           ;NetworkBridge.c: 106: parent=source;
  7749  0007E0  C2D8  F2F0         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  7750  0007E4  C2D9  F2F1         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  7751                           
  7752                           ; BSR set to: 2
  7753                           ;NetworkBridge.c: 107: TunnelManagerSetTunnel(&child, &parent);
  7754  0007E8  0EEE               	movlw	low radioReceivedPacket@child
  7755  0007EA  0100               	movlb	0	; () banked
  7756  0007EC  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7757  0007EE  0E02               	movlw	high radioReceivedPacket@child
  7758  0007F0  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7759  0007F2  0EF0               	movlw	low radioReceivedPacket@parent
  7760  0007F4  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7761  0007F6  0E02               	movlw	high radioReceivedPacket@parent
  7762  0007F8  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7763  0007FA  EC92  F010         	call	_TunnelManagerSetTunnel	;wreg free
  7764  0007FE                     l17878:
  7765                           
  7766                           ;NetworkBridge.c: 108: }
  7767                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7768  0007FE  0102               	movlb	2	; () banked
  7769  000800  EE20 F004          	lfsr	2,4
  7770  000804  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7771  000806  26D9               	addwf	fsr2l,f,c
  7772  000808  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7773  00080A  22DA               	addwfc	fsr2h,f,c
  7774  00080C  CFDE F07A          	movff	postinc2,isBroadcastAddress@address
  7775  000810  CFDD F07B          	movff	postdec2,isBroadcastAddress@address+1
  7776  000814  ECDC  F036         	call	_isBroadcastAddress	;wreg free
  7777  000818  0102               	movlb	2	; () banked
  7778  00081A  6FE5               	movwf	_radioReceivedPacket$5352& (0+255),b
  7779                           
  7780                           ; BSR set to: 2
  7781                           ;NetworkBridge.c: 108: }
  7782                           ;NetworkBridge.c: 110: NetworkManagerProcessIncomingData(data,size,isBroadcastAddress(dh
      +                          dr->target),isSecure);
  7783  00081C  C2DC  F0DC         	movff	radioReceivedPacket@data,NetworkManagerProcessIncomingData@data
  7784  000820  C2DD  F0DD         	movff	radioReceivedPacket@data+1,NetworkManagerProcessIncomingData@data+1
  7785  000824  C2DE  F0DE         	movff	radioReceivedPacket@size,NetworkManagerProcessIncomingData@size
  7786  000828  C2DF  F0DF         	movff	radioReceivedPacket@size+1,NetworkManagerProcessIncomingData@size+1
  7787  00082C  C2E5  F0E0         	movff	_radioReceivedPacket$5352,NetworkManagerProcessIncomingData@isBroadcast
  7788  000830  C2E2  F0E1         	movff	radioReceivedPacket@isSecure,NetworkManagerProcessIncomingData@isSecure
  7789  000834  EC13  F014         	call	_NetworkManagerProcessIncomingData	;wreg free
  7790                           
  7791                           ;NetworkBridge.c: 111: }else
  7792  000838  EF0F  F03B         	goto	_radioDiscardPacket
  7793  00083C                     l17882:
  7794                           
  7795                           ;NetworkBridge.c: 112: {
  7796                           ;NetworkBridge.c: 114: if(isBroadcast==1)
  7797  00083C  0102               	movlb	2	; () banked
  7798  00083E  05E1               	decf	radioReceivedPacket@isBroadcast& (0+255),w,b
  7799  000840  E11C               	bnz	l17890
  7800                           
  7801                           ; BSR set to: 2
  7802                           ;NetworkBridge.c: 115: {
  7803                           ;NetworkBridge.c: 116: if(dhdr->Hops>0)
  7804  000842  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7805  000846  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7806  00084A  50DF               	movf	indf2,w,c
  7807  00084C  E101 D16F          	bz	l17976
  7808                           
  7809                           ; BSR set to: 2
  7810                           ;NetworkBridge.c: 117: {
  7811                           ;NetworkBridge.c: 118: dhdr->Hops--;
  7812  000850  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  7813  000854  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  7814  000858  06DF               	decf	indf2,f,c
  7815  00085A                     l17888:
  7816                           
  7817                           ;NetworkBridge.c: 119: BroadcastManagerDelaySend(data,size,isSecure,0);
  7818  00085A  C2DC  F09F         	movff	radioReceivedPacket@data,BroadcastManagerDelaySend@pkt
  7819  00085E  C2DD  F0A0         	movff	radioReceivedPacket@data+1,BroadcastManagerDelaySend@pkt+1
  7820  000862  C2DE  F0A1         	movff	radioReceivedPacket@size,BroadcastManagerDelaySend@size
  7821  000866  C2DF  F0A2         	movff	radioReceivedPacket@size+1,BroadcastManagerDelaySend@size+1
  7822  00086A  C2E2  F0A3         	movff	radioReceivedPacket@isSecure,BroadcastManagerDelaySend@isSecure
  7823  00086E  0100               	movlb	0	; () banked
  7824  000870  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
  7825  000872  EC39  F01B         	call	_BroadcastManagerDelaySend	;wreg free
  7826  000876  EF0F  F03B         	goto	_radioDiscardPacket
  7827  00087A                     l17890:
  7828                           
  7829                           ; BSR set to: 2
  7830  00087A  EE20 F004          	lfsr	2,4
  7831  00087E  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7832  000880  26D9               	addwf	fsr2l,f,c
  7833  000882  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7834  000884  22DA               	addwfc	fsr2h,f,c
  7835  000886  CFDE F07D          	movff	postinc2,isSameAddress@a1
  7836  00088A  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  7837  00088E  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
  7838  000892  C07B  F07F         	movff	?_CoordinatorGenericAddress,isSameAddress@a2
  7839  000896  C07C  F080         	movff	?_CoordinatorGenericAddress+1,isSameAddress@a2+1
  7840  00089A  ECBD  F039         	call	_isSameAddress	;wreg free
  7841  00089E  06E8               	decf	wreg,f,c
  7842  0008A0  E12B               	bnz	l17900
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;NetworkBridge.c: 122: {
  7846                           ;NetworkBridge.c: 124: child=dhdr->origin;
  7847  0008A2  0102               	movlb	2	; () banked
  7848  0008A4  EE20 F006          	lfsr	2,6
  7849  0008A8  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7850  0008AA  26D9               	addwf	fsr2l,f,c
  7851  0008AC  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7852  0008AE  22DA               	addwfc	fsr2h,f,c
  7853  0008B0  CFDE F2EE          	movff	postinc2,radioReceivedPacket@child
  7854  0008B4  CFDD F2EF          	movff	postdec2,radioReceivedPacket@child+1
  7855                           
  7856                           ; BSR set to: 2
  7857                           ;NetworkBridge.c: 125: parent=source;
  7858  0008B8  C2D8  F2F0         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  7859  0008BC  C2D9  F2F1         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  7860                           
  7861                           ; BSR set to: 2
  7862                           ;NetworkBridge.c: 126: TunnelManagerSetTunnel(&child, &parent);
  7863  0008C0  0EEE               	movlw	low radioReceivedPacket@child
  7864  0008C2  0100               	movlb	0	; () banked
  7865  0008C4  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7866  0008C6  0E02               	movlw	high radioReceivedPacket@child
  7867  0008C8  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7868  0008CA  0EF0               	movlw	low radioReceivedPacket@parent
  7869  0008CC  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7870  0008CE  0E02               	movlw	high radioReceivedPacket@parent
  7871  0008D0  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7872  0008D2  EC92  F010         	call	_TunnelManagerSetTunnel	;wreg free
  7873  0008D6                     l17898:
  7874                           
  7875                           ;NetworkBridge.c: 127: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
  7876  0008D6  C2DC  F089         	movff	radioReceivedPacket@data,TMSendFormedPacketTowardsCoordinator@data
  7877  0008DA  C2DD  F08A         	movff	radioReceivedPacket@data+1,TMSendFormedPacketTowardsCoordinator@data+1
  7878  0008DE  C2DE  F08B         	movff	radioReceivedPacket@size,TMSendFormedPacketTowardsCoordinator@size
  7879  0008E2  C2DF  F08C         	movff	radioReceivedPacket@size+1,TMSendFormedPacketTowardsCoordinator@size+1
  7880  0008E6  0E01               	movlw	1
  7881  0008E8  0100               	movlb	0	; () banked
  7882  0008EA  6F8D               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
  7883  0008EC  C2E2  F08E         	movff	radioReceivedPacket@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
  7884  0008F0  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
  7885                           
  7886                           ;NetworkBridge.c: 128: }else
  7887  0008F4  EF0F  F03B         	goto	_radioDiscardPacket
  7888  0008F8                     l17900:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;NetworkBridge.c: 129: {
  7892                           ;NetworkBridge.c: 138: if(dhdr->packettype==PacketRoutedData)
  7893  0008F8  0102               	movlb	2	; () banked
  7894  0008FA  EE20 F002          	lfsr	2,2
  7895  0008FE  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7896  000900  26D9               	addwf	fsr2l,f,c
  7897  000902  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7898  000904  22DA               	addwfc	fsr2h,f,c
  7899  000906  0E26               	movlw	38
  7900  000908  18DE               	xorwf	postinc2,w,c
  7901  00090A  E126               	bnz	l1106
  7902                           
  7903                           ; BSR set to: 2
  7904                           ;NetworkBridge.c: 139: {
  7905                           ;NetworkBridge.c: 142: child=dhdr->origin;
  7906  00090C  EE20 F006          	lfsr	2,6
  7907  000910  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7908  000912  26D9               	addwf	fsr2l,f,c
  7909  000914  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7910  000916  22DA               	addwfc	fsr2h,f,c
  7911  000918  CFDE F2EE          	movff	postinc2,radioReceivedPacket@child
  7912  00091C  CFDD F2EF          	movff	postdec2,radioReceivedPacket@child+1
  7913                           
  7914                           ; BSR set to: 2
  7915                           ;NetworkBridge.c: 143: parent=source;
  7916  000920  C2D8  F2F0         	movff	radioReceivedPacket@source,radioReceivedPacket@parent
  7917  000924  C2D9  F2F1         	movff	radioReceivedPacket@source+1,radioReceivedPacket@parent+1
  7918                           
  7919                           ; BSR set to: 2
  7920                           ;NetworkBridge.c: 144: TunnelManagerSetTunnel(&child, &parent);
  7921  000928  0EEE               	movlw	low radioReceivedPacket@child
  7922  00092A  0100               	movlb	0	; () banked
  7923  00092C  6F8F               	movwf	TunnelManagerSetTunnel@device& (0+255),b
  7924  00092E  0E02               	movlw	high radioReceivedPacket@child
  7925  000930  6F90               	movwf	(TunnelManagerSetTunnel@device+1)& (0+255),b
  7926  000932  0EF0               	movlw	low radioReceivedPacket@parent
  7927  000934  6F91               	movwf	TunnelManagerSetTunnel@parent& (0+255),b
  7928  000936  0E02               	movlw	high radioReceivedPacket@parent
  7929  000938  6F92               	movwf	(TunnelManagerSetTunnel@parent+1)& (0+255),b
  7930  00093A  EC92  F010         	call	_TunnelManagerSetTunnel	;wreg free
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;NetworkBridge.c: 145: if(NetworkGetDeviceType()==DeviceCoordinator)
  7934  00093E  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  7935  000942  0900               	iorlw	0
  7936  000944  E109               	bnz	l1106
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;NetworkBridge.c: 146: {
  7940                           ;NetworkBridge.c: 147: dhdr->packettype=PacketData;
  7941  000946  0102               	movlb	2	; () banked
  7942  000948  EE20 F002          	lfsr	2,2
  7943  00094C  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7944  00094E  26D9               	addwf	fsr2l,f,c
  7945  000950  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7946  000952  22DA               	addwfc	fsr2h,f,c
  7947  000954  0E23               	movlw	35
  7948  000956  6EDF               	movwf	indf2,c
  7949  000958                     l1106:
  7950                           
  7951                           ;NetworkBridge.c: 148: }
  7952                           ;NetworkBridge.c: 149: }
  7953                           ;NetworkBridge.c: 150: child=dhdr->target;
  7954  000958  0102               	movlb	2	; () banked
  7955  00095A  EE20 F004          	lfsr	2,4
  7956  00095E  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  7957  000960  26D9               	addwf	fsr2l,f,c
  7958  000962  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  7959  000964  22DA               	addwfc	fsr2h,f,c
  7960  000966  CFDE F2EE          	movff	postinc2,radioReceivedPacket@child
  7961  00096A  CFDD F2EF          	movff	postdec2,radioReceivedPacket@child+1
  7962                           
  7963                           ; BSR set to: 2
  7964                           ;NetworkBridge.c: 151: if(DeviceManagerGetDeviceType(child)==DeviceSleepingRFD)
  7965  00096E  C2EE  F081         	movff	radioReceivedPacket@child,DeviceManagerGetDeviceType@address
  7966  000972  C2EF  F082         	movff	radioReceivedPacket@child+1,DeviceManagerGetDeviceType@address+1
  7967  000976  EC22  F032         	call	_DeviceManagerGetDeviceType	;wreg free
  7968  00097A  0A02               	xorlw	2
  7969  00097C  E114               	bnz	l17916
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;NetworkBridge.c: 152: {
  7973                           ;NetworkBridge.c: 154: DeviceManagerBufferDeviceData(child,data,size,isSecure,1);
  7974  00097E  C2EE  F07F         	movff	radioReceivedPacket@child,DeviceManagerBufferDeviceData@address
  7975  000982  C2EF  F080         	movff	radioReceivedPacket@child+1,DeviceManagerBufferDeviceData@address+1
  7976  000986  C2DC  F081         	movff	radioReceivedPacket@data,DeviceManagerBufferDeviceData@data
  7977  00098A  C2DD  F082         	movff	radioReceivedPacket@data+1,DeviceManagerBufferDeviceData@data+1
  7978  00098E  C2DE  F083         	movff	radioReceivedPacket@size,DeviceManagerBufferDeviceData@size
  7979  000992  C2DF  F084         	movff	radioReceivedPacket@size+1,DeviceManagerBufferDeviceData@size+1
  7980  000996  C2E2  F085         	movff	radioReceivedPacket@isSecure,DeviceManagerBufferDeviceData@isSecure
  7981  00099A  0E01               	movlw	1
  7982  00099C  6F86               	movwf	DeviceManagerBufferDeviceData@isFormed& (0+255),b
  7983  00099E  ECB5  F01F         	call	_DeviceManagerBufferDeviceData	;wreg free
  7984                           
  7985                           ;NetworkBridge.c: 155: }else
  7986  0009A2  EF0F  F03B         	goto	_radioDiscardPacket
  7987  0009A6                     l17916:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;NetworkBridge.c: 156: {
  7991                           ;NetworkBridge.c: 157: parent = TunnelManagerGetTunnel(child);
  7992  0009A6  C2EE  F0AB         	movff	radioReceivedPacket@child,TunnelManagerGetTunnel@device
  7993  0009AA  C2EF  F0AC         	movff	radioReceivedPacket@child+1,TunnelManagerGetTunnel@device+1
  7994  0009AE  EC67  F020         	call	_TunnelManagerGetTunnel	;wreg free
  7995  0009B2  C0AB  F2F0         	movff	?_TunnelManagerGetTunnel,radioReceivedPacket@parent
  7996  0009B6  C0AC  F2F1         	movff	?_TunnelManagerGetTunnel+1,radioReceivedPacket@parent+1
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;NetworkBridge.c: 158: if(isBroadcastAddress(parent)==1)
  8000  0009BA  C2F0  F07A         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  8001  0009BE  C2F1  F07B         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  8002  0009C2  ECDC  F036         	call	_isBroadcastAddress	;wreg free
  8003  0009C6  06E8               	decf	wreg,f,c
  8004  0009C8  E17D               	bnz	l17962
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;NetworkBridge.c: 159: {
  8008                           ;NetworkBridge.c: 160: if(dhdr->packettype==PacketRoutedData)
  8009  0009CA  0102               	movlb	2	; () banked
  8010  0009CC  EE20 F002          	lfsr	2,2
  8011  0009D0  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  8012  0009D2  26D9               	addwf	fsr2l,f,c
  8013  0009D4  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  8014  0009D6  22DA               	addwfc	fsr2h,f,c
  8015  0009D8  0E26               	movlw	38
  8016  0009DA  18DE               	xorwf	postinc2,w,c
  8017  0009DC  E001 D0A1          	bnz	l17972
  8018                           
  8019                           ; BSR set to: 2
  8020                           ;NetworkBridge.c: 161: {
  8021                           ;NetworkBridge.c: 162: parent=GetRouteAddressOfChild(dhdr->target);
  8022  0009E0  EE20 F004          	lfsr	2,4
  8023  0009E4  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  8024  0009E6  26D9               	addwf	fsr2l,f,c
  8025  0009E8  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  8026  0009EA  22DA               	addwfc	fsr2h,f,c
  8027  0009EC  CFDE F08B          	movff	postinc2,GetRouteAddressOfChild@child
  8028  0009F0  CFDD F08C          	movff	postdec2,GetRouteAddressOfChild@child+1
  8029  0009F4  EC56  F034         	call	_GetRouteAddressOfChild	;wreg free
  8030  0009F8  C08B  F2F0         	movff	?_GetRouteAddressOfChild,radioReceivedPacket@parent
  8031  0009FC  C08C  F2F1         	movff	?_GetRouteAddressOfChild+1,radioReceivedPacket@parent+1
  8032                           
  8033                           ;NetworkBridge.c: 163: if(isBroadcastAddress(parent)==0)
  8034  000A00  C2F0  F07A         	movff	radioReceivedPacket@parent,isBroadcastAddress@address
  8035  000A04  C2F1  F07B         	movff	radioReceivedPacket@parent+1,isBroadcastAddress@address+1
  8036  000A08  ECDC  F036         	call	_isBroadcastAddress	;wreg free
  8037  000A0C  0900               	iorlw	0
  8038  000A0E  E145               	bnz	l17948
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;NetworkBridge.c: 164: {
  8042                           ;NetworkBridge.c: 166: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  8043  000A10  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  8044  000A14  0900               	iorlw	0
  8045  000A16  E00F               	bz	l17932
  8046                           
  8047                           ; BSR set to: 1
  8048  000A18  C2F0  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  8049  000A1C  C2F1  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  8050  000A20  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
  8051  000A24  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  8052  000A28  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  8053  000A2C  ECBD  F039         	call	_isSameAddress	;wreg free
  8054  000A30  0900               	iorlw	0
  8055  000A32  E001 D750          	bnz	l17898
  8056  000A36                     l17932:
  8057                           
  8058                           ;NetworkBridge.c: 170: {
  8059                           ;NetworkBridge.c: 171: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  8060  000A36  C2F0  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  8061  000A3A  C2F1  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  8062  000A3E  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
  8063  000A42  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  8064  000A46  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  8065  000A4A  C2DC  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  8066  000A4E  C2DD  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  8067  000A52  C2DE  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  8068  000A56  C2E2  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  8069  000A5A  EC84  F035         	call	_radioUnicast	;wreg free
  8070  000A5E  0900               	iorlw	0
  8071  000A60  E166               	bnz	l17976
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;NetworkBridge.c: 172: {
  8075                           ;NetworkBridge.c: 173: LE_RemoveNeighborDevice(parent);
  8076  000A62  C2F0  F096         	movff	radioReceivedPacket@parent,LE_RemoveNeighborDevice@device
  8077  000A66  C2F1  F097         	movff	radioReceivedPacket@parent+1,LE_RemoveNeighborDevice@device+1
  8078  000A6A  EC35  F033         	call	_LE_RemoveNeighborDevice	;wreg free
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;NetworkBridge.c: 174: if(isSameAddress(dhdr->target,parent)==1)
  8082  000A6E  0102               	movlb	2	; () banked
  8083  000A70  EE20 F004          	lfsr	2,4
  8084  000A74  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  8085  000A76  26D9               	addwf	fsr2l,f,c
  8086  000A78  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  8087  000A7A  22DA               	addwfc	fsr2h,f,c
  8088  000A7C  CFDE F07D          	movff	postinc2,isSameAddress@a1
  8089  000A80  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  8090  000A84  C2F0  F07F         	movff	radioReceivedPacket@parent,isSameAddress@a2
  8091  000A88  C2F1  F080         	movff	radioReceivedPacket@parent+1,isSameAddress@a2+1
  8092  000A8C  ECBD  F039         	call	_isSameAddress	;wreg free
  8093  000A90  06E8               	decf	wreg,f,c
  8094  000A92  E14D               	bnz	l17976
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;NetworkBridge.c: 175: {
  8098                           ;NetworkBridge.c: 178: if(NetworkGetDeviceType()==DeviceCoordinator)
  8099  000A94  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  8100  000A98  D002               	goto	L16
  8101  000A9A                     l17948:
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;NetworkBridge.c: 193: {
  8105                           ;NetworkBridge.c: 195: if(NetworkGetDeviceType()==DeviceCoordinator)
  8106  000A9A  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  8107  000A9E                     L16:
  8108  000A9E  0900               	iorlw	0
  8109  000AA0  E001 D719          	bnz	l17898
  8110                           
  8111                           ; BSR set to: 1
  8112                           ;NetworkBridge.c: 196: {
  8113                           ;NetworkBridge.c: 198: dhdr->Hops=20;
  8114  000AA4  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  8115  000AA8  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  8116  000AAC  0E14               	movlw	20
  8117  000AAE  6EDF               	movwf	indf2,c
  8118                           
  8119                           ; BSR set to: 1
  8120                           ;NetworkBridge.c: 199: dhdr->packettype=PacketData;
  8121  000AB0  0102               	movlb	2	; () banked
  8122  000AB2  EE20 F002          	lfsr	2,2
  8123  000AB6  51F2               	movf	radioReceivedPacket@dhdr& (0+255),w,b
  8124  000AB8  26D9               	addwf	fsr2l,f,c
  8125  000ABA  51F3               	movf	(radioReceivedPacket@dhdr+1)& (0+255),w,b
  8126  000ABC  22DA               	addwfc	fsr2h,f,c
  8127  000ABE  0E23               	movlw	35
  8128  000AC0                     L2:
  8129  000AC0  6EDF               	movwf	indf2,c
  8130  000AC2  D6CB               	goto	l17888
  8131  000AC4                     l17962:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;NetworkBridge.c: 213: {
  8135                           ;NetworkBridge.c: 215: if( (NetworkGetDeviceType()!=DeviceCoordinator) && (isSameAddress
      +                          (parent,NetworkGetParentAddress())) )
  8136  000AC4  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
  8137  000AC8  0900               	iorlw	0
  8138  000ACA  E00F               	bz	l17968
  8139                           
  8140                           ; BSR set to: 1
  8141  000ACC  C2F0  F07D         	movff	radioReceivedPacket@parent,isSameAddress@a1
  8142  000AD0  C2F1  F07E         	movff	radioReceivedPacket@parent+1,isSameAddress@a1+1
  8143  000AD4  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
  8144  000AD8  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
  8145  000ADC  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
  8146  000AE0  ECBD  F039         	call	_isSameAddress	;wreg free
  8147  000AE4  0900               	iorlw	0
  8148  000AE6  E001 D6F6          	bnz	l17898
  8149  000AEA                     l17968:
  8150                           
  8151                           ;NetworkBridge.c: 219: {
  8152                           ;NetworkBridge.c: 220: if(radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)==0)
  8153  000AEA  C2F0  F0BC         	movff	radioReceivedPacket@parent,radioUnicast@dest
  8154  000AEE  C2F1  F0BD         	movff	radioReceivedPacket@parent+1,radioUnicast@dest+1
  8155  000AF2  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
  8156  000AF6  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
  8157  000AFA  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
  8158  000AFE  C2DC  F0C0         	movff	radioReceivedPacket@data,radioUnicast@data
  8159  000B02  C2DD  F0C1         	movff	radioReceivedPacket@data+1,radioUnicast@data+1
  8160  000B06  C2DE  F0C2         	movff	radioReceivedPacket@size,radioUnicast@datasize
  8161  000B0A  C2E2  F0C3         	movff	radioReceivedPacket@isSecure,radioUnicast@isSecure
  8162  000B0E  EC84  F035         	call	_radioUnicast	;wreg free
  8163  000B12  0900               	iorlw	0
  8164  000B14  E10C               	bnz	l17976
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;NetworkBridge.c: 221: {
  8168                           ;NetworkBridge.c: 222: TunnelManagerInvalidateTunnel(child);
  8169  000B16  C2EE  F081         	movff	radioReceivedPacket@child,TunnelManagerInvalidateTunnel@device
  8170  000B1A  C2EF  F082         	movff	radioReceivedPacket@child+1,TunnelManagerInvalidateTunnel@device+1
  8171  000B1E  EC5D  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
  8172  000B22                     l17972:
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;NetworkBridge.c: 223: dhdr->Hops=20;
  8176  000B22  C2F2  FFD9         	movff	radioReceivedPacket@dhdr,fsr2l
  8177  000B26  C2F3  FFDA         	movff	radioReceivedPacket@dhdr+1,fsr2h
  8178  000B2A  0E14               	movlw	20
  8179  000B2C  D7C9               	goto	L2
  8180  000B2E                     l17976:
  8181                           
  8182                           ;NetworkBridge.c: 225: }
  8183                           ;NetworkBridge.c: 226: }
  8184                           ;NetworkBridge.c: 227: }
  8185                           ;NetworkBridge.c: 228: }
  8186                           ;NetworkBridge.c: 229: }
  8187                           ;NetworkBridge.c: 230: }
  8188                           ;NetworkBridge.c: 231: }
  8189                           ;NetworkBridge.c: 232: }
  8190                           ;NetworkBridge.c: 233: }
  8191                           ;NetworkBridge.c: 234: radioDiscardPacket();
  8192  000B2E  EF0F  F03B         	goto	_radioDiscardPacket	;wreg free
  8193  000B32                     __end_of_radioReceivedPacket:
  8194                           	opt stack 0
  8195                           tblptru	equ	0xFF8
  8196                           tblptrh	equ	0xFF7
  8197                           tblptrl	equ	0xFF6
  8198                           tablat	equ	0xFF5
  8199                           prodh	equ	0xFF4
  8200                           prodl	equ	0xFF3
  8201                           intcon3	equ	0xFF0
  8202                           postinc0	equ	0xFEE
  8203                           plusw0	equ	0xFEB
  8204                           wreg	equ	0xFE8
  8205                           postdec1	equ	0xFE5
  8206                           fsr1h	equ	0xFE2
  8207                           fsr1l	equ	0xFE1
  8208                           indf2	equ	0xFDF
  8209                           postinc2	equ	0xFDE
  8210                           postdec2	equ	0xFDD
  8211                           plusw2	equ	0xFDB
  8212                           fsr2h	equ	0xFDA
  8213                           fsr2l	equ	0xFD9
  8214                           status	equ	0xFD8
  8215                           
  8216 ;; *************** function _radioDiscardPacket *****************
  8217 ;; Defined at:
  8218 ;;		line 143 in file "../src/Bridge.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;		None
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  1    wreg      void 
  8225 ;; Registers used:
  8226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : C/0
  8229 ;;		On exit  : C/0
  8230 ;;		Unchanged: C/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8236 ;;Total ram usage:        0 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:    6
  8239 ;; This function calls:
  8240 ;;		_MiMAC_DiscardPacket
  8241 ;; This function is called by:
  8242 ;;		_radioReceivedPacket
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	text30
  8247  00761E                     __ptext30:
  8248                           	opt stack 0
  8249  00761E                     _radioDiscardPacket:
  8250                           	opt stack 22
  8251                           
  8252                           ;Bridge.c: 145: MiMAC_DiscardPacket();
  8253                           
  8254                           ;incstack = 0
  8255  00761E  EFFF  F039         	goto	_MiMAC_DiscardPacket	;wreg free
  8256  007622                     __end_of_radioDiscardPacket:
  8257                           	opt stack 0
  8258                           tblptru	equ	0xFF8
  8259                           tblptrh	equ	0xFF7
  8260                           tblptrl	equ	0xFF6
  8261                           tablat	equ	0xFF5
  8262                           prodh	equ	0xFF4
  8263                           prodl	equ	0xFF3
  8264                           intcon3	equ	0xFF0
  8265                           postinc0	equ	0xFEE
  8266                           plusw0	equ	0xFEB
  8267                           wreg	equ	0xFE8
  8268                           postdec1	equ	0xFE5
  8269                           fsr1h	equ	0xFE2
  8270                           fsr1l	equ	0xFE1
  8271                           indf2	equ	0xFDF
  8272                           postinc2	equ	0xFDE
  8273                           postdec2	equ	0xFDD
  8274                           plusw2	equ	0xFDB
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279 ;; *************** function _MiMAC_DiscardPacket *****************
  8280 ;; Defined at:
  8281 ;;		line 1131 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8290 ;; Tracked objects:
  8291 ;;		On entry : C/0
  8292 ;;		On exit  : C/0
  8293 ;;		Unchanged: C/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    5
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_radioDiscardPacket
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text31
  8310  0073FE                     __ptext31:
  8311                           	opt stack 0
  8312  0073FE                     _MiMAC_DiscardPacket:
  8313                           	opt stack 22
  8314                           
  8315                           ;drv_mrf_miwi_mesh_89xa.c: 1133: if( ReceivedBankIndex < 2 )
  8316                           
  8317                           ;incstack = 0
  8318  0073FE  0E02               	movlw	2
  8319  007400  603E               	cpfslt	_ReceivedBankIndex,c
  8320  007402  0C02               	retlw	2
  8321                           
  8322                           ;drv_mrf_miwi_mesh_89xa.c: 1134: {
  8323                           ;drv_mrf_miwi_mesh_89xa.c: 1135: RxPacket[ReceivedBankIndex].flags.Val = 0;
  8324  007404  503E               	movf	_ReceivedBankIndex,w,c
  8325  007406  0D47               	mullw	71
  8326  007408  0E2C               	movlw	low _RxPacket
  8327  00740A  24F3               	addwf	prodl,w,c
  8328  00740C  6ED9               	movwf	fsr2l,c
  8329  00740E  0E02               	movlw	high _RxPacket
  8330  007410  20F4               	addwfc	prodh,w,c
  8331  007412  6EDA               	movwf	fsr2h,c
  8332  007414  0E00               	movlw	0
  8333  007416  6ADF               	clrf	indf2,c
  8334                           
  8335                           ;drv_mrf_miwi_mesh_89xa.c: 1136: ReceivedBankIndex = 0xFF;
  8336  007418  683E               	setf	_ReceivedBankIndex,c
  8337  00741A  0012               	return		;funcret
  8338  00741C                     __end_of_MiMAC_DiscardPacket:
  8339                           	opt stack 0
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           prodh	equ	0xFF4
  8345                           prodl	equ	0xFF3
  8346                           intcon3	equ	0xFF0
  8347                           postinc0	equ	0xFEE
  8348                           plusw0	equ	0xFEB
  8349                           wreg	equ	0xFE8
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           postinc2	equ	0xFDE
  8355                           postdec2	equ	0xFDD
  8356                           plusw2	equ	0xFDB
  8357                           fsr2h	equ	0xFDA
  8358                           fsr2l	equ	0xFD9
  8359                           status	equ	0xFD8
  8360                           
  8361 ;; *************** function _isKnownPacket *****************
  8362 ;; Defined at:
  8363 ;;		line 17 in file "../Cache.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  hash            4   75[BANK0 ] unsigned long 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  zeros          12   85[BANK0 ] unsigned char [12]
  8368 ;;  OldestTick      8  104[BANK0 ] struct TickMS_t_def
  8369 ;;  i               2  112[BANK0 ] unsigned int 
  8370 ;;  emptyindex      2  102[BANK0 ] unsigned int 
  8371 ;;  index           2  100[BANK0 ] unsigned int 
  8372 ;;  oldestindex     2   98[BANK0 ] unsigned int 
  8373 ;;  unknown         1   97[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      unsigned char 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : F/0
  8380 ;;		On exit  : F/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8387 ;;Total ram usage:       39 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    9
  8390 ;; This function calls:
  8391 ;;		_MSTickGet
  8392 ;;		_MSTickGetDiffNow
  8393 ;;		_memcmp
  8394 ;;		_memset
  8395 ;; This function is called by:
  8396 ;;		_radioReceivedPacket
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text32
  8401  001EB8                     __ptext32:
  8402                           	opt stack 0
  8403  001EB8                     _isKnownPacket:
  8404                           	opt stack 19
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;Cache.c: 19: uint16_t i;
  8408                           ;Cache.c: 20: uint16_t oldestindex=0xffff;
  8409                           
  8410                           ;incstack = 0
  8411  001EB8  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  8412  001EBA  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  8413                           
  8414                           ;Cache.c: 21: uint16_t emptyindex=0xffff;
  8415  001EBC  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  8416  001EBE  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;Cache.c: 23: bool unknown=1;
  8420  001EC0  0E01               	movlw	1
  8421  001EC2  6FC1               	movwf	isKnownPacket@unknown& (0+255),b
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;Cache.c: 24: uint8_t zeros[sizeof(HashCache_t)];;
  8425                           ;Cache.c: 26: TickMS OldestTick;
  8426                           ;Cache.c: 28: memset(&OldestTick,0xff,sizeof(OldestTick));
  8427  001EC4  0EC8               	movlw	low isKnownPacket@OldestTick
  8428  001EC6  6F73               	movwf	memset@p1& (0+255),b
  8429  001EC8  6B74               	clrf	(memset@p1+1)& (0+255),b
  8430  001ECA  6B76               	clrf	(memset@c+1)& (0+255),b
  8431  001ECC  6975               	setf	memset@c& (0+255),b
  8432  001ECE  6B78               	clrf	(memset@n+1)& (0+255),b
  8433  001ED0  0E08               	movlw	8
  8434  001ED2  6F77               	movwf	memset@n& (0+255),b
  8435  001ED4  EC47  F039         	call	_memset	;wreg free
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;Cache.c: 29: memset(zeros,0x00,sizeof(zeros));
  8439  001ED8  0EB5               	movlw	low isKnownPacket@zeros
  8440  001EDA  6F73               	movwf	memset@p1& (0+255),b
  8441  001EDC  6B74               	clrf	(memset@p1+1)& (0+255),b
  8442  001EDE  6B76               	clrf	(memset@c+1)& (0+255),b
  8443  001EE0  6B75               	clrf	memset@c& (0+255),b
  8444  001EE2  6B78               	clrf	(memset@n+1)& (0+255),b
  8445  001EE4  0E0C               	movlw	12
  8446  001EE6  6F77               	movwf	memset@n& (0+255),b
  8447  001EE8  EC47  F039         	call	_memset	;wreg free
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;Cache.c: 31: for(i=0;i<30;i++)
  8451  001EEC  6BD0               	clrf	isKnownPacket@i& (0+255),b
  8452  001EEE  6BD1               	clrf	(isKnownPacket@i+1)& (0+255),b
  8453  001EF0                     l16884:
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;Cache.c: 32: {
  8457                           ;Cache.c: 33: if(((OldestTick.msb>hc_table[i].RxTimeMs.msb) || ((OldestTick.msb==hc_tabl
      +                          e[i].RxTimeMs.msb) && (OldestTick.lsb>=hc_table[i].RxTimeMs.lsb) ) )==1)
  8458  001EF0  0E0C               	movlw	12
  8459  001EF2  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8460  001EF4  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8461  001EF8  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8462  001EFC  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8463  001EFE  50F3               	movf	prodl,w,c
  8464  001F00  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8465  001F02  0E0F               	movlw	low (_hc_table+8)
  8466  001F04  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8467  001F06  6ED9               	movwf	fsr2l,c
  8468  001F08  0E0B               	movlw	high (_hc_table+8)
  8469  001F0A  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8470  001F0C  6EDA               	movwf	fsr2h,c
  8471  001F0E  51CC               	movf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  8472  001F10  5CDE               	subwf	postinc2,w,c
  8473  001F12  51CD               	movf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  8474  001F14  58DE               	subwfb	postinc2,w,c
  8475  001F16  51CE               	movf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  8476  001F18  58DE               	subwfb	postinc2,w,c
  8477  001F1A  51CF               	movf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  8478  001F1C  58DE               	subwfb	postinc2,w,c
  8479  001F1E  E333               	bnc	l16890
  8480                           
  8481                           ; BSR set to: 0
  8482  001F20  0E0C               	movlw	12
  8483  001F22  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8484  001F24  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8485  001F28  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8486  001F2C  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8487  001F2E  50F3               	movf	prodl,w,c
  8488  001F30  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8489  001F32  0E0F               	movlw	low (_hc_table+8)
  8490  001F34  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8491  001F36  6ED9               	movwf	fsr2l,c
  8492  001F38  0E0B               	movlw	high (_hc_table+8)
  8493  001F3A  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8494  001F3C  6EDA               	movwf	fsr2h,c
  8495  001F3E  50DE               	movf	postinc2,w,c
  8496  001F40  19CC               	xorwf	(isKnownPacket@OldestTick+4)& (0+255),w,b
  8497  001F42  E13B               	bnz	l16894
  8498  001F44  50DE               	movf	postinc2,w,c
  8499  001F46  19CD               	xorwf	(isKnownPacket@OldestTick+5)& (0+255),w,b
  8500  001F48  E138               	bnz	l16894
  8501  001F4A  50DE               	movf	postinc2,w,c
  8502  001F4C  19CE               	xorwf	(isKnownPacket@OldestTick+6)& (0+255),w,b
  8503  001F4E  E135               	bnz	l16894
  8504  001F50  50DE               	movf	postinc2,w,c
  8505  001F52  19CF               	xorwf	(isKnownPacket@OldestTick+7)& (0+255),w,b
  8506  001F54  E132               	bnz	l16894
  8507                           
  8508                           ; BSR set to: 0
  8509  001F56  0E0C               	movlw	12
  8510  001F58  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8511  001F5A  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8512  001F5E  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8513  001F62  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8514  001F64  50F3               	movf	prodl,w,c
  8515  001F66  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8516  001F68  0E0B               	movlw	low (_hc_table+4)
  8517  001F6A  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8518  001F6C  6ED9               	movwf	fsr2l,c
  8519  001F6E  0E0B               	movlw	high (_hc_table+4)
  8520  001F70  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8521  001F72  6EDA               	movwf	fsr2h,c
  8522  001F74  50DE               	movf	postinc2,w,c
  8523  001F76  5DC8               	subwf	isKnownPacket@OldestTick& (0+255),w,b
  8524  001F78  50DE               	movf	postinc2,w,c
  8525  001F7A  59C9               	subwfb	(isKnownPacket@OldestTick+1)& (0+255),w,b
  8526  001F7C  50DE               	movf	postinc2,w,c
  8527  001F7E  59CA               	subwfb	(isKnownPacket@OldestTick+2)& (0+255),w,b
  8528  001F80  50DE               	movf	postinc2,w,c
  8529  001F82  59CB               	subwfb	(isKnownPacket@OldestTick+3)& (0+255),w,b
  8530  001F84  E31A               	bnc	l16894
  8531  001F86                     l16890:
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;Cache.c: 34: {
  8535                           ;Cache.c: 35: OldestTick=hc_table[i].RxTimeMs;
  8536  001F86  0E0C               	movlw	12
  8537  001F88  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8538  001F8A  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8539  001F8E  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8540  001F92  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8541  001F94  50F3               	movf	prodl,w,c
  8542  001F96  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8543  001F98  0E0B               	movlw	low (_hc_table+4)
  8544  001F9A  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8545  001F9C  6ED9               	movwf	fsr2l,c
  8546  001F9E  0E0B               	movlw	high (_hc_table+4)
  8547  001FA0  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8548  001FA2  6EDA               	movwf	fsr2h,c
  8549  001FA4  EE10  F0C8         	lfsr	1,isKnownPacket@OldestTick
  8550  001FA8  0E07               	movlw	7
  8551  001FAA                     u20521:
  8552  001FAA  CFDB FFE3          	movff	plusw2,plusw1
  8553  001FAE  06E8               	decf	wreg,f,c
  8554  001FB0  E2FC               	bc	u20521
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;Cache.c: 36: oldestindex=i;
  8558  001FB2  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  8559  001FB6  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  8560  001FBA                     l16894:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;Cache.c: 37: }
  8564                           ;Cache.c: 38: if((emptyindex==0xffff) && (memcmp((uint8_t*)&hc_table[i],zeros,sizeof(zer
      +                          os))==0) )
  8565  001FBA  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  8566  001FBC  E11F               	bnz	l16900
  8567  001FBE  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  8568  001FC0  E11D               	bnz	l16900
  8569                           
  8570                           ; BSR set to: 0
  8571  001FC2  0E0C               	movlw	12
  8572  001FC4  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8573  001FC6  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8574  001FCA  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8575  001FCE  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8576  001FD0  50F3               	movf	prodl,w,c
  8577  001FD2  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8578  001FD4  0E07               	movlw	low _hc_table
  8579  001FD6  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8580  001FD8  6F73               	movwf	memcmp@s1& (0+255),b
  8581  001FDA  0E0B               	movlw	high _hc_table
  8582  001FDC  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8583  001FDE  6F74               	movwf	(memcmp@s1+1)& (0+255),b
  8584  001FE0  0EB5               	movlw	low isKnownPacket@zeros
  8585  001FE2  6F75               	movwf	memcmp@s2& (0+255),b
  8586  001FE4  6B77               	clrf	(memcmp@n+1)& (0+255),b
  8587  001FE6  0E0C               	movlw	12
  8588  001FE8  6F76               	movwf	memcmp@n& (0+255),b
  8589  001FEA  ECFD  F035         	call	_memcmp	;wreg free
  8590  001FEE  5173               	movf	?_memcmp& (0+255),w,b
  8591  001FF0  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
  8592  001FF2  E104               	bnz	l16900
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;Cache.c: 39: {
  8596                           ;Cache.c: 40: emptyindex=i;
  8597  001FF4  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  8598  001FF8  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  8599  001FFC                     l16900:
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;Cache.c: 41: }
  8603                           ;Cache.c: 42: if( hc_table[i].Hash==hash )
  8604  001FFC  0E0C               	movlw	12
  8605  001FFE  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8606  002000  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8607  002004  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8608  002008  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8609  00200A  50F3               	movf	prodl,w,c
  8610  00200C  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8611  00200E  0E07               	movlw	low _hc_table
  8612  002010  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8613  002012  6ED9               	movwf	fsr2l,c
  8614  002014  0E0B               	movlw	high _hc_table
  8615  002016  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8616  002018  6EDA               	movwf	fsr2h,c
  8617  00201A  51AB               	movf	isKnownPacket@hash& (0+255),w,b
  8618  00201C  18DE               	xorwf	postinc2,w,c
  8619  00201E  E138               	bnz	l16906
  8620  002020  51AC               	movf	(isKnownPacket@hash+1)& (0+255),w,b
  8621  002022  18DE               	xorwf	postinc2,w,c
  8622  002024  E135               	bnz	l16906
  8623  002026  51AD               	movf	(isKnownPacket@hash+2)& (0+255),w,b
  8624  002028  18DE               	xorwf	postinc2,w,c
  8625  00202A  E132               	bnz	l16906
  8626  00202C  51AE               	movf	(isKnownPacket@hash+3)& (0+255),w,b
  8627  00202E  18DE               	xorwf	postinc2,w,c
  8628  002030  E12F               	bnz	l16906
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;Cache.c: 43: {
  8632                           ;Cache.c: 44: if(MSTickGetDiffNow(hc_table[i].RxTimeMs)<((SPAN)2*1000ULL))
  8633  002032  0E0C               	movlw	12
  8634  002034  03D0               	mulwf	isKnownPacket@i& (0+255),b
  8635  002036  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8636  00203A  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8637  00203E  03D1               	mulwf	(isKnownPacket@i+1)& (0+255),b
  8638  002040  50F3               	movf	prodl,w,c
  8639  002042  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8640  002044  0E0B               	movlw	low (_hc_table+4)
  8641  002046  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8642  002048  6ED9               	movwf	fsr2l,c
  8643  00204A  0E0B               	movlw	high (_hc_table+4)
  8644  00204C  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8645  00204E  6EDA               	movwf	fsr2h,c
  8646  002050  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
  8647  002054  0E07               	movlw	7
  8648  002056                     u20561:
  8649  002056  CFDB FFEB          	movff	plusw2,plusw0
  8650  00205A  06E8               	decf	wreg,f,c
  8651  00205C  E2FC               	bc	u20561
  8652  00205E  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
  8653  002062  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
  8654  002064  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
  8655  002066  E10F               	bnz	l1680
  8656  002068  0ED0               	movlw	208
  8657  00206A  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
  8658  00206C  0E07               	movlw	7
  8659  00206E  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
  8660  002070  E20A               	bc	l1680
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;Cache.c: 45: {
  8664                           ;Cache.c: 46: emptyindex=i;
  8665  002072  C0D0  F0C6         	movff	isKnownPacket@i,isKnownPacket@emptyindex
  8666  002076  C0D1  F0C7         	movff	isKnownPacket@i+1,isKnownPacket@emptyindex+1
  8667                           
  8668                           ;Cache.c: 47: oldestindex=i;
  8669  00207A  C0D0  F0C2         	movff	isKnownPacket@i,isKnownPacket@oldestindex
  8670  00207E  C0D1  F0C3         	movff	isKnownPacket@i+1,isKnownPacket@oldestindex+1
  8671                           
  8672                           ;Cache.c: 48: unknown=0;
  8673  002082  6BC1               	clrf	isKnownPacket@unknown& (0+255),b
  8674                           
  8675                           ;Cache.c: 49: }else
  8676  002084  D00D               	goto	l16910
  8677  002086                     l1680:
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;Cache.c: 50: {
  8681                           ;Cache.c: 51: emptyindex=0xffff;
  8682  002086  69C6               	setf	isKnownPacket@emptyindex& (0+255),b
  8683  002088  69C7               	setf	(isKnownPacket@emptyindex+1)& (0+255),b
  8684                           
  8685                           ;Cache.c: 52: oldestindex=0xffff;
  8686  00208A  69C2               	setf	isKnownPacket@oldestindex& (0+255),b
  8687  00208C  69C3               	setf	(isKnownPacket@oldestindex+1)& (0+255),b
  8688  00208E  D008               	goto	l16910
  8689  002090                     l16906:
  8690                           
  8691                           ; BSR set to: 0
  8692  002090  4BD0               	infsnz	isKnownPacket@i& (0+255),f,b
  8693  002092  2BD1               	incf	(isKnownPacket@i+1)& (0+255),f,b
  8694                           
  8695                           ; BSR set to: 0
  8696  002094  51D1               	movf	(isKnownPacket@i+1)& (0+255),w,b
  8697  002096  E104               	bnz	u20580
  8698  002098  0E1E               	movlw	30
  8699  00209A  5DD0               	subwf	isKnownPacket@i& (0+255),w,b
  8700  00209C  E201 D728          	bnc	l16884
  8701  0020A0                     u20580:
  8702  0020A0                     l16910:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;Cache.c: 55: }
  8706                           ;Cache.c: 56: }
  8707                           ;Cache.c: 57: if(emptyindex!=0xffff)
  8708  0020A0  29C6               	incf	isKnownPacket@emptyindex& (0+255),w,b
  8709  0020A2  E102               	bnz	u20590
  8710  0020A4  29C7               	incf	(isKnownPacket@emptyindex+1)& (0+255),w,b
  8711  0020A6  E005               	bz	l1682
  8712  0020A8                     u20590:
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;Cache.c: 58: {
  8716                           ;Cache.c: 59: index=emptyindex;
  8717  0020A8  C0C6  F0C4         	movff	isKnownPacket@emptyindex,isKnownPacket@index
  8718  0020AC  C0C7  F0C5         	movff	isKnownPacket@emptyindex+1,isKnownPacket@index+1
  8719                           
  8720                           ;Cache.c: 60: }else
  8721  0020B0  D004               	goto	l16914
  8722  0020B2                     l1682:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;Cache.c: 61: {
  8726                           ;Cache.c: 62: index=oldestindex;
  8727  0020B2  C0C2  F0C4         	movff	isKnownPacket@oldestindex,isKnownPacket@index
  8728  0020B6  C0C3  F0C5         	movff	isKnownPacket@oldestindex+1,isKnownPacket@index+1
  8729  0020BA                     l16914:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;Cache.c: 63: }
  8733                           ;Cache.c: 64: if(index!=0xffff)
  8734  0020BA  29C4               	incf	isKnownPacket@index& (0+255),w,b
  8735  0020BC  E102               	bnz	u20600
  8736  0020BE  29C5               	incf	(isKnownPacket@index+1)& (0+255),w,b
  8737  0020C0  E02D               	bz	l16920
  8738  0020C2                     u20600:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;Cache.c: 65: {
  8742                           ;Cache.c: 66: hc_table[index].Hash=hash;
  8743  0020C2  0E0C               	movlw	12
  8744  0020C4  03C4               	mulwf	isKnownPacket@index& (0+255),b
  8745  0020C6  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8746  0020CA  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8747  0020CE  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  8748  0020D0  50F3               	movf	prodl,w,c
  8749  0020D2  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8750  0020D4  0E07               	movlw	low _hc_table
  8751  0020D6  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8752  0020D8  6ED9               	movwf	fsr2l,c
  8753  0020DA  0E0B               	movlw	high _hc_table
  8754  0020DC  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8755  0020DE  6EDA               	movwf	fsr2h,c
  8756  0020E0  C0AB  FFDE         	movff	isKnownPacket@hash,postinc2
  8757  0020E4  C0AC  FFDE         	movff	isKnownPacket@hash+1,postinc2
  8758  0020E8  C0AD  FFDE         	movff	isKnownPacket@hash+2,postinc2
  8759  0020EC  C0AE  FFDE         	movff	isKnownPacket@hash+3,postinc2
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;Cache.c: 67: hc_table[index].RxTimeMs=MSTickGet();
  8763  0020F0  EC27  F038         	call	_MSTickGet	;wreg free
  8764  0020F4  0E0C               	movlw	12
  8765  0020F6  03C4               	mulwf	isKnownPacket@index& (0+255),b
  8766  0020F8  CFF3 F0AF          	movff	prodl,??_isKnownPacket
  8767  0020FC  CFF4 F0B0          	movff	prodh,??_isKnownPacket+1
  8768  002100  03C5               	mulwf	(isKnownPacket@index+1)& (0+255),b
  8769  002102  50F3               	movf	prodl,w,c
  8770  002104  27B0               	addwf	(??_isKnownPacket+1)& (0+255),f,b
  8771  002106  0E0B               	movlw	low (_hc_table+4)
  8772  002108  25AF               	addwf	??_isKnownPacket& (0+255),w,b
  8773  00210A  6ED9               	movwf	fsr2l,c
  8774  00210C  0E0B               	movlw	high (_hc_table+4)
  8775  00210E  21B0               	addwfc	(??_isKnownPacket+1)& (0+255),w,b
  8776  002110  6EDA               	movwf	fsr2h,c
  8777  002112  0E07               	movlw	7
  8778  002114                     u20611:
  8779  002114  CFEB FFDB          	movff	plusw0,plusw2
  8780  002118  06E8               	decf	wreg,f,c
  8781  00211A  E2FC               	bc	u20611
  8782  00211C                     l16920:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;Cache.c: 68: }
  8786                           ;Cache.c: 69: return(!unknown);
  8787  00211C  51C1               	movf	isKnownPacket@unknown& (0+255),w,b
  8788  00211E  B4D8               	btfsc	status,2,c
  8789  002120  0C01               	retlw	1
  8790                           
  8791                           ; BSR set to: 0
  8792  002122  0C00               	retlw	0	;funcret
  8793  002124                     __end_of_isKnownPacket:
  8794                           	opt stack 0
  8795                           tblptru	equ	0xFF8
  8796                           tblptrh	equ	0xFF7
  8797                           tblptrl	equ	0xFF6
  8798                           tablat	equ	0xFF5
  8799                           prodh	equ	0xFF4
  8800                           prodl	equ	0xFF3
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           plusw0	equ	0xFEB
  8804                           wreg	equ	0xFE8
  8805                           postdec1	equ	0xFE5
  8806                           plusw1	equ	0xFE3
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           indf2	equ	0xFDF
  8810                           postinc2	equ	0xFDE
  8811                           postdec2	equ	0xFDD
  8812                           plusw2	equ	0xFDB
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _crc32 *****************
  8818 ;; Defined at:
  8819 ;;		line 52 in file "../CRC32.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  crc             4   19[BANK0 ] unsigned long 
  8822 ;;  buf             2   23[BANK0 ] PTR unsigned char 
  8823 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8824 ;;  size            2   25[BANK0 ] unsigned int 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  p               2   37[BANK0 ] PTR unsigned char 
  8827 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  4   19[BANK0 ] unsigned long 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8832 ;; Tracked objects:
  8833 ;;		On entry : F/0
  8834 ;;		On exit  : F/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8837 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;Total ram usage:       20 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    5
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_radioReceivedPacket
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text33
  8852  005BB8                     __ptext33:
  8853                           	opt stack 0
  8854  005BB8                     _crc32:
  8855                           	opt stack 23
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;CRC32.c: 54: uint8_t *p;
  8859                           ;CRC32.c: 56: p = buf;
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;incstack = 0
  8863  005BB8  C077  F085         	movff	crc32@buf,crc32@p
  8864  005BBC  C078  F086         	movff	crc32@buf+1,crc32@p+1
  8865                           
  8866                           ;CRC32.c: 57: crc = crc ^ ~0U;
  8867  005BC0  1F73               	comf	crc32@crc& (0+255),f,b
  8868  005BC2  1F74               	comf	(crc32@crc+1)& (0+255),f,b
  8869                           
  8870                           ;CRC32.c: 59: while (size--)
  8871  005BC4  D038               	goto	l16864
  8872  005BC6                     l16860:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;CRC32.c: 60: crc = crc32_table[(crc ^ *p++) & 0xFF] ^ (crc >> 8);
  8876  005BC6  C085  FFD9         	movff	crc32@p,fsr2l
  8877  005BCA  C086  FFDA         	movff	crc32@p+1,fsr2h
  8878  005BCE  50DF               	movf	indf2,w,c
  8879  005BD0  1973               	xorwf	crc32@crc& (0+255),w,b
  8880  005BD2  6F7B               	movwf	??_crc32& (0+255),b
  8881  005BD4  0E00               	movlw	0
  8882  005BD6  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  8883  005BD8  6F7C               	movwf	(??_crc32+1)& (0+255),b
  8884  005BDA  6B7C               	clrf	(??_crc32+1)& (0+255),b
  8885  005BDC  90D8               	bcf	status,0,c
  8886  005BDE  377B               	rlcf	??_crc32& (0+255),f,b
  8887  005BE0  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  8888  005BE2  90D8               	bcf	status,0,c
  8889  005BE4  377B               	rlcf	??_crc32& (0+255),f,b
  8890  005BE6  377C               	rlcf	(??_crc32+1)& (0+255),f,b
  8891  005BE8  0E1D               	movlw	low _crc32_table
  8892  005BEA  257B               	addwf	??_crc32& (0+255),w,b
  8893  005BEC  6EF6               	movwf	tblptrl,c
  8894  005BEE  0EFB               	movlw	high _crc32_table
  8895  005BF0  217C               	addwfc	(??_crc32+1)& (0+255),w,b
  8896  005BF2  6EF7               	movwf	tblptrh,c
  8897  005BF4                     	if	0	;There are less than 3 active tblptr bytes
  8898  005BF4                     	endif
  8899  005BF4  0009               	tblrd		*+
  8900  005BF6  CFF5 F07D          	movff	tablat,??_crc32+2
  8901  005BFA  0009               	tblrd		*+
  8902  005BFC  CFF5 F07E          	movff	tablat,??_crc32+3
  8903  005C00  0009               	tblrd		*+
  8904  005C02  CFF5 F07F          	movff	tablat,??_crc32+4
  8905  005C06  0009               	tblrd		*+
  8906  005C08  CFF5 F080          	movff	tablat,??_crc32+5
  8907  005C0C  5174               	movf	(crc32@crc+1)& (0+255),w,b
  8908  005C0E  6F81               	movwf	(??_crc32+6)& (0+255),b
  8909  005C10  5175               	movf	(crc32@crc+2)& (0+255),w,b
  8910  005C12  6F82               	movwf	(??_crc32+7)& (0+255),b
  8911  005C14  5176               	movf	(crc32@crc+3)& (0+255),w,b
  8912  005C16  6F83               	movwf	(??_crc32+8)& (0+255),b
  8913  005C18  6B84               	clrf	(??_crc32+9)& (0+255),b
  8914  005C1A  517D               	movf	(??_crc32+2)& (0+255),w,b
  8915  005C1C  1981               	xorwf	(??_crc32+6)& (0+255),w,b
  8916  005C1E  6F73               	movwf	crc32@crc& (0+255),b
  8917  005C20  517E               	movf	(??_crc32+3)& (0+255),w,b
  8918  005C22  1982               	xorwf	(??_crc32+7)& (0+255),w,b
  8919  005C24  6F74               	movwf	(crc32@crc+1)& (0+255),b
  8920  005C26  517F               	movf	(??_crc32+4)& (0+255),w,b
  8921  005C28  1983               	xorwf	(??_crc32+8)& (0+255),w,b
  8922  005C2A  6F75               	movwf	(crc32@crc+2)& (0+255),b
  8923  005C2C  5180               	movf	(??_crc32+5)& (0+255),w,b
  8924  005C2E  1984               	xorwf	(??_crc32+9)& (0+255),w,b
  8925  005C30  6F76               	movwf	(crc32@crc+3)& (0+255),b
  8926                           
  8927                           ; BSR set to: 0
  8928  005C32  4B85               	infsnz	crc32@p& (0+255),f,b
  8929  005C34  2B86               	incf	(crc32@p+1)& (0+255),f,b
  8930  005C36                     l16864:
  8931                           
  8932                           ; BSR set to: 0
  8933  005C36  0779               	decf	crc32@size& (0+255),f,b
  8934  005C38  A0D8               	btfss	status,0,c
  8935  005C3A  077A               	decf	(crc32@size+1)& (0+255),f,b
  8936  005C3C  2979               	incf	crc32@size& (0+255),w,b
  8937  005C3E  E1C3               	bnz	l16860
  8938  005C40  297A               	incf	(crc32@size+1)& (0+255),w,b
  8939  005C42  E1C1               	bnz	l16860
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;CRC32.c: 62: return crc ^ ~0U;
  8943  005C44  0EFF               	movlw	255
  8944  005C46  1973               	xorwf	crc32@crc& (0+255),w,b
  8945  005C48  6F73               	movwf	?_crc32& (0+255),b
  8946  005C4A  0EFF               	movlw	255
  8947  005C4C  1974               	xorwf	(crc32@crc+1)& (0+255),w,b
  8948  005C4E  6F74               	movwf	(?_crc32+1)& (0+255),b
  8949  005C50  0E00               	movlw	0
  8950  005C52  1975               	xorwf	(crc32@crc+2)& (0+255),w,b
  8951  005C54  6F75               	movwf	(?_crc32+2)& (0+255),b
  8952  005C56  0E00               	movlw	0
  8953  005C58  1976               	xorwf	(crc32@crc+3)& (0+255),w,b
  8954  005C5A  6F76               	movwf	(?_crc32+3)& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957  005C5C  0012               	return		;funcret
  8958  005C5E                     __end_of_crc32:
  8959                           	opt stack 0
  8960                           tblptru	equ	0xFF8
  8961                           tblptrh	equ	0xFF7
  8962                           tblptrl	equ	0xFF6
  8963                           tablat	equ	0xFF5
  8964                           prodh	equ	0xFF4
  8965                           prodl	equ	0xFF3
  8966                           intcon3	equ	0xFF0
  8967                           postinc0	equ	0xFEE
  8968                           plusw0	equ	0xFEB
  8969                           wreg	equ	0xFE8
  8970                           postdec1	equ	0xFE5
  8971                           plusw1	equ	0xFE3
  8972                           fsr1h	equ	0xFE2
  8973                           fsr1l	equ	0xFE1
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           plusw2	equ	0xFDB
  8978                           fsr2h	equ	0xFDA
  8979                           fsr2l	equ	0xFD9
  8980                           status	equ	0xFD8
  8981                           
  8982 ;; *************** function _TunnelManagerSetTunnel *****************
  8983 ;; Defined at:
  8984 ;;		line 22 in file "../TunnelManager.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  device          2   47[BANK0 ] PTR struct addr_t_def
  8987 ;;		 -> radioReceivedPacket@child(2), 
  8988 ;;  parent          2   49[BANK0 ] PTR struct addr_t_def
  8989 ;;		 -> radioReceivedPacket@parent(2), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  OldestTick      8   63[BANK0 ] struct TickMS_t_def
  8992 ;;  trec            8    0        struct TickMS_t_def
  8993 ;;  i               2   71[BANK0 ] unsigned int 
  8994 ;;  index           2   61[BANK0 ] unsigned int 
  8995 ;;  emptyindex      2   59[BANK0 ] unsigned int 
  8996 ;;  oldestindex     2   57[BANK0 ] unsigned int 
  8997 ;;  unknown         1    0        unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : F/0
  9004 ;;		On exit  : F/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;Total ram usage:       26 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    8
  9014 ;; This function calls:
  9015 ;;		_MSTickGet
  9016 ;;		_NetworkAddressSizeGet
  9017 ;;		_isSameAddress
  9018 ;;		_memcpy
  9019 ;;		_memset
  9020 ;; This function is called by:
  9021 ;;		_radioReceivedPacket
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text34
  9026  002124                     __ptext34:
  9027                           	opt stack 0
  9028  002124                     _TunnelManagerSetTunnel:
  9029                           	opt stack 20
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;TunnelManager.c: 24: uint16_t i;
  9033                           ;TunnelManager.c: 25: uint16_t oldestindex=0xffff;
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  002124  6999               	setf	TunnelManagerSetTunnel@oldestindex& (0+255),b
  9038  002126  699A               	setf	(TunnelManagerSetTunnel@oldestindex+1)& (0+255),b
  9039                           
  9040                           ;TunnelManager.c: 26: uint16_t emptyindex=0xffff;
  9041  002128  699B               	setf	TunnelManagerSetTunnel@emptyindex& (0+255),b
  9042  00212A  699C               	setf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),b
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;TunnelManager.c: 29: TickMS trec;
  9046                           ;TunnelManager.c: 31: TickMS OldestTick;
  9047                           ;TunnelManager.c: 33: memset(&OldestTick,0xff,sizeof(OldestTick));
  9048  00212C  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  9049  00212E  6F73               	movwf	memset@p1& (0+255),b
  9050  002130  6B74               	clrf	(memset@p1+1)& (0+255),b
  9051  002132  6B76               	clrf	(memset@c+1)& (0+255),b
  9052  002134  6975               	setf	memset@c& (0+255),b
  9053  002136  6B78               	clrf	(memset@n+1)& (0+255),b
  9054  002138  0E08               	movlw	8
  9055  00213A  6F77               	movwf	memset@n& (0+255),b
  9056  00213C  EC47  F039         	call	_memset	;wreg free
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;TunnelManager.c: 35: for(i=0;i<10;i++)
  9060  002140  6BA7               	clrf	TunnelManagerSetTunnel@i& (0+255),b
  9061  002142  6BA8               	clrf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9062  002144                     l17036:
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;TunnelManager.c: 36: {
  9066                           ;TunnelManager.c: 37: if(((OldestTick.msb>tunnels[i].TxTime.msb) || ((OldestTick.msb==tu
      +                          nnels[i].TxTime.msb) && (OldestTick.lsb>=tunnels[i].TxTime.lsb) ) )==1)
  9067  002144  0E0C               	movlw	12
  9068  002146  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9069  002148  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9070  00214C  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9071  002150  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9072  002152  50F3               	movf	prodl,w,c
  9073  002154  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9074  002156  0E04               	movlw	low (_tunnels+4)
  9075  002158  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9076  00215A  6ED9               	movwf	fsr2l,c
  9077  00215C  0E04               	movlw	high (_tunnels+4)
  9078  00215E  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9079  002160  6EDA               	movwf	fsr2h,c
  9080  002162  51A3               	movf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  9081  002164  5CDE               	subwf	postinc2,w,c
  9082  002166  51A4               	movf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  9083  002168  58DE               	subwfb	postinc2,w,c
  9084  00216A  51A5               	movf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  9085  00216C  58DE               	subwfb	postinc2,w,c
  9086  00216E  51A6               	movf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  9087  002170  58DE               	subwfb	postinc2,w,c
  9088  002172  E333               	bnc	l17042
  9089                           
  9090                           ; BSR set to: 0
  9091  002174  0E0C               	movlw	12
  9092  002176  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9093  002178  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9094  00217C  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9095  002180  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9096  002182  50F3               	movf	prodl,w,c
  9097  002184  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9098  002186  0E04               	movlw	low (_tunnels+4)
  9099  002188  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9100  00218A  6ED9               	movwf	fsr2l,c
  9101  00218C  0E04               	movlw	high (_tunnels+4)
  9102  00218E  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9103  002190  6EDA               	movwf	fsr2h,c
  9104  002192  50DE               	movf	postinc2,w,c
  9105  002194  19A3               	xorwf	(TunnelManagerSetTunnel@OldestTick+4)& (0+255),w,b
  9106  002196  E13C               	bnz	l17046
  9107  002198  50DE               	movf	postinc2,w,c
  9108  00219A  19A4               	xorwf	(TunnelManagerSetTunnel@OldestTick+5)& (0+255),w,b
  9109  00219C  E139               	bnz	l17046
  9110  00219E  50DE               	movf	postinc2,w,c
  9111  0021A0  19A5               	xorwf	(TunnelManagerSetTunnel@OldestTick+6)& (0+255),w,b
  9112  0021A2  E136               	bnz	l17046
  9113  0021A4  50DE               	movf	postinc2,w,c
  9114  0021A6  19A6               	xorwf	(TunnelManagerSetTunnel@OldestTick+7)& (0+255),w,b
  9115  0021A8  E133               	bnz	l17046
  9116                           
  9117                           ; BSR set to: 0
  9118  0021AA  0E0C               	movlw	12
  9119  0021AC  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9120  0021AE  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9121  0021B2  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9122  0021B6  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9123  0021B8  50F3               	movf	prodl,w,c
  9124  0021BA  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9125  0021BC  0E00               	movlw	low _tunnels
  9126  0021BE  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9127  0021C0  6ED9               	movwf	fsr2l,c
  9128  0021C2  0E04               	movlw	high _tunnels
  9129  0021C4  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9130  0021C6  6EDA               	movwf	fsr2h,c
  9131  0021C8  50DE               	movf	postinc2,w,c
  9132  0021CA  5D9F               	subwf	TunnelManagerSetTunnel@OldestTick& (0+255),w,b
  9133  0021CC  50DE               	movf	postinc2,w,c
  9134  0021CE  59A0               	subwfb	(TunnelManagerSetTunnel@OldestTick+1)& (0+255),w,b
  9135  0021D0  50DE               	movf	postinc2,w,c
  9136  0021D2  59A1               	subwfb	(TunnelManagerSetTunnel@OldestTick+2)& (0+255),w,b
  9137  0021D4  50DE               	movf	postinc2,w,c
  9138  0021D6  59A2               	subwfb	(TunnelManagerSetTunnel@OldestTick+3)& (0+255),w,b
  9139  0021D8  E31B               	bnc	l17046
  9140  0021DA                     l17042:
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;TunnelManager.c: 38: {
  9144                           ;TunnelManager.c: 39: memcpy(&OldestTick,&tunnels[i].TxTime,sizeof(TickMS));
  9145  0021DA  0E9F               	movlw	low TunnelManagerSetTunnel@OldestTick
  9146  0021DC  6F75               	movwf	memcpy@d1& (0+255),b
  9147  0021DE  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  9148  0021E0  0E0C               	movlw	12
  9149  0021E2  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9150  0021E4  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9151  0021E8  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9152  0021EC  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9153  0021EE  50F3               	movf	prodl,w,c
  9154  0021F0  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9155  0021F2  0E00               	movlw	low _tunnels
  9156  0021F4  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9157  0021F6  6F77               	movwf	memcpy@s1& (0+255),b
  9158  0021F8  0E04               	movlw	high _tunnels
  9159  0021FA  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9160  0021FC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
  9161  0021FE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  9162  002200  0E08               	movlw	8
  9163  002202  6F79               	movwf	memcpy@n& (0+255),b
  9164  002204  EC05  F035         	call	_memcpy	;wreg free
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;TunnelManager.c: 40: oldestindex=i;
  9168  002208  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  9169  00220C  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  9170  002210                     l17046:
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;TunnelManager.c: 41: }
  9174                           ;TunnelManager.c: 42: if( (emptyindex==0xffff) && (((tunnels[i].TxTime.msb==0) && (tunne
      +                          ls[i].TxTime.lsb==0))==1) )
  9175  002210  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  9176  002212  E12E               	bnz	l17054
  9177  002214  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  9178  002216  E12C               	bnz	l17054
  9179                           
  9180                           ; BSR set to: 0
  9181  002218  0E0C               	movlw	12
  9182  00221A  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9183  00221C  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9184  002220  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9185  002224  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9186  002226  50F3               	movf	prodl,w,c
  9187  002228  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9188  00222A  0E04               	movlw	low (_tunnels+4)
  9189  00222C  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9190  00222E  6ED9               	movwf	fsr2l,c
  9191  002230  0E04               	movlw	high (_tunnels+4)
  9192  002232  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9193  002234  6EDA               	movwf	fsr2h,c
  9194  002236  50DE               	movf	postinc2,w,c
  9195  002238  10DE               	iorwf	postinc2,w,c
  9196  00223A  10DE               	iorwf	postinc2,w,c
  9197  00223C  10DE               	iorwf	postinc2,w,c
  9198  00223E  E118               	bnz	l17054
  9199                           
  9200                           ; BSR set to: 0
  9201  002240  0E0C               	movlw	12
  9202  002242  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9203  002244  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9204  002248  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9205  00224C  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9206  00224E  50F3               	movf	prodl,w,c
  9207  002250  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9208  002252  0E00               	movlw	low _tunnels
  9209  002254  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9210  002256  6ED9               	movwf	fsr2l,c
  9211  002258  0E04               	movlw	high _tunnels
  9212  00225A  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9213  00225C  6EDA               	movwf	fsr2h,c
  9214  00225E  50DE               	movf	postinc2,w,c
  9215  002260  10DE               	iorwf	postinc2,w,c
  9216  002262  10DE               	iorwf	postinc2,w,c
  9217  002264  10DE               	iorwf	postinc2,w,c
  9218  002266  E104               	bnz	l17054
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;TunnelManager.c: 43: {
  9222                           ;TunnelManager.c: 44: emptyindex=i;
  9223  002268  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  9224  00226C  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  9225  002270                     l17054:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;TunnelManager.c: 47: {
  9229                           ;TunnelManager.c: 48: trec=tunnels[i].TxTime;
  9230  002270  C08F  FFD9         	movff	TunnelManagerSetTunnel@device,fsr2l
  9231  002274  C090  FFDA         	movff	TunnelManagerSetTunnel@device+1,fsr2h
  9232  002278  CFDE F07D          	movff	postinc2,isSameAddress@a1
  9233  00227C  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
  9234  002280  0E0C               	movlw	12
  9235  002282  03A7               	mulwf	TunnelManagerSetTunnel@i& (0+255),b
  9236  002284  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9237  002288  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9238  00228C  03A8               	mulwf	(TunnelManagerSetTunnel@i+1)& (0+255),b
  9239  00228E  50F3               	movf	prodl,w,c
  9240  002290  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9241  002292  0E08               	movlw	low (_tunnels+8)
  9242  002294  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9243  002296  6ED9               	movwf	fsr2l,c
  9244  002298  0E04               	movlw	high (_tunnels+8)
  9245  00229A  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9246  00229C  6EDA               	movwf	fsr2h,c
  9247  00229E  CFDE F07F          	movff	postinc2,isSameAddress@a2
  9248  0022A2  CFDD F080          	movff	postdec2,isSameAddress@a2+1
  9249  0022A6  ECBD  F039         	call	_isSameAddress	;wreg free
  9250  0022AA  06E8               	decf	wreg,f,c
  9251  0022AC  E109               	bnz	l17058
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;TunnelManager.c: 49: emptyindex=i;
  9255  0022AE  C0A7  F09B         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@emptyindex
  9256  0022B2  C0A8  F09C         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@emptyindex+1
  9257                           
  9258                           ;TunnelManager.c: 51: unknown=0;
  9259  0022B6  C0A7  F099         	movff	TunnelManagerSetTunnel@i,TunnelManagerSetTunnel@oldestindex
  9260  0022BA  C0A8  F09A         	movff	TunnelManagerSetTunnel@i+1,TunnelManagerSetTunnel@oldestindex+1
  9261                           
  9262                           ;TunnelManager.c: 52: break;
  9263  0022BE  D008               	goto	l17062
  9264  0022C0                     l17058:
  9265                           
  9266                           ; BSR set to: 0
  9267  0022C0  4BA7               	infsnz	TunnelManagerSetTunnel@i& (0+255),f,b
  9268  0022C2  2BA8               	incf	(TunnelManagerSetTunnel@i+1)& (0+255),f,b
  9269                           
  9270                           ; BSR set to: 0
  9271  0022C4  51A8               	movf	(TunnelManagerSetTunnel@i+1)& (0+255),w,b
  9272  0022C6  E104               	bnz	u20860
  9273  0022C8  0E0A               	movlw	10
  9274  0022CA  5DA7               	subwf	TunnelManagerSetTunnel@i& (0+255),w,b
  9275  0022CC  E201 D73A          	bnc	l17036
  9276  0022D0                     u20860:
  9277  0022D0                     l17062:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;TunnelManager.c: 53: }
  9281                           ;TunnelManager.c: 54: }
  9282                           ;TunnelManager.c: 55: if(emptyindex!=0xffff)
  9283  0022D0  299B               	incf	TunnelManagerSetTunnel@emptyindex& (0+255),w,b
  9284  0022D2  E102               	bnz	u20870
  9285  0022D4  299C               	incf	(TunnelManagerSetTunnel@emptyindex+1)& (0+255),w,b
  9286  0022D6  E005               	bz	l1631
  9287  0022D8                     u20870:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;TunnelManager.c: 56: {
  9291                           ;TunnelManager.c: 57: index=emptyindex;
  9292  0022D8  C09B  F09D         	movff	TunnelManagerSetTunnel@emptyindex,TunnelManagerSetTunnel@index
  9293  0022DC  C09C  F09E         	movff	TunnelManagerSetTunnel@emptyindex+1,TunnelManagerSetTunnel@index+1
  9294                           
  9295                           ;TunnelManager.c: 58: }else
  9296  0022E0  D004               	goto	l17066
  9297  0022E2                     l1631:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;TunnelManager.c: 59: {
  9301                           ;TunnelManager.c: 60: index=oldestindex;
  9302  0022E2  C099  F09D         	movff	TunnelManagerSetTunnel@oldestindex,TunnelManagerSetTunnel@index
  9303  0022E6  C09A  F09E         	movff	TunnelManagerSetTunnel@oldestindex+1,TunnelManagerSetTunnel@index+1
  9304  0022EA                     l17066:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;TunnelManager.c: 61: }
  9308                           ;TunnelManager.c: 62: if(index!=0xffff)
  9309  0022EA  299D               	incf	TunnelManagerSetTunnel@index& (0+255),w,b
  9310  0022EC  E103               	bnz	u20880
  9311  0022EE  299E               	incf	(TunnelManagerSetTunnel@index+1)& (0+255),w,b
  9312  0022F0  B4D8               	btfsc	status,2,c
  9313  0022F2  0012               	return	
  9314  0022F4                     u20880:
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;TunnelManager.c: 63: {
  9318                           ;TunnelManager.c: 64: memcpy(&tunnels[index].devAddress,device,NetworkAddressSizeGet());
  9319  0022F4  0E0C               	movlw	12
  9320  0022F6  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  9321  0022F8  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9322  0022FC  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9323  002300  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  9324  002302  50F3               	movf	prodl,w,c
  9325  002304  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9326  002306  0E08               	movlw	low (_tunnels+8)
  9327  002308  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9328  00230A  6F75               	movwf	memcpy@d1& (0+255),b
  9329  00230C  0E04               	movlw	high (_tunnels+8)
  9330  00230E  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9331  002310  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9332  002312  C08F  F077         	movff	TunnelManagerSetTunnel@device,memcpy@s1
  9333  002316  C090  F078         	movff	TunnelManagerSetTunnel@device+1,memcpy@s1+1
  9334  00231A  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  9335  00231E  0100               	movlb	0	; () banked
  9336  002320  6F79               	movwf	memcpy@n& (0+255),b
  9337  002322  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  9338  002324  EC05  F035         	call	_memcpy	;wreg free
  9339                           
  9340                           ;TunnelManager.c: 65: memcpy(&tunnels[index].parent,parent,NetworkAddressSizeGet());
  9341  002328  0E0C               	movlw	12
  9342  00232A  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  9343  00232C  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9344  002330  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9345  002334  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  9346  002336  50F3               	movf	prodl,w,c
  9347  002338  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9348  00233A  0E0A               	movlw	low (_tunnels+10)
  9349  00233C  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9350  00233E  6F75               	movwf	memcpy@d1& (0+255),b
  9351  002340  0E04               	movlw	high (_tunnels+10)
  9352  002342  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9353  002344  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  9354  002346  C091  F077         	movff	TunnelManagerSetTunnel@parent,memcpy@s1
  9355  00234A  C092  F078         	movff	TunnelManagerSetTunnel@parent+1,memcpy@s1+1
  9356  00234E  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  9357  002352  0100               	movlb	0	; () banked
  9358  002354  6F79               	movwf	memcpy@n& (0+255),b
  9359  002356  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  9360  002358  EC05  F035         	call	_memcpy	;wreg free
  9361                           
  9362                           ;TunnelManager.c: 66: tunnels[index].TxTime=MSTickGet();
  9363  00235C  EC27  F038         	call	_MSTickGet	;wreg free
  9364  002360  0E0C               	movlw	12
  9365  002362  039D               	mulwf	TunnelManagerSetTunnel@index& (0+255),b
  9366  002364  CFF3 F093          	movff	prodl,??_TunnelManagerSetTunnel
  9367  002368  CFF4 F094          	movff	prodh,??_TunnelManagerSetTunnel+1
  9368  00236C  039E               	mulwf	(TunnelManagerSetTunnel@index+1)& (0+255),b
  9369  00236E  50F3               	movf	prodl,w,c
  9370  002370  2794               	addwf	(??_TunnelManagerSetTunnel+1)& (0+255),f,b
  9371  002372  0E00               	movlw	low _tunnels
  9372  002374  2593               	addwf	??_TunnelManagerSetTunnel& (0+255),w,b
  9373  002376  6ED9               	movwf	fsr2l,c
  9374  002378  0E04               	movlw	high _tunnels
  9375  00237A  2194               	addwfc	(??_TunnelManagerSetTunnel+1)& (0+255),w,b
  9376  00237C  6EDA               	movwf	fsr2h,c
  9377  00237E  0E07               	movlw	7
  9378  002380                     u20891:
  9379  002380  CFEB FFDB          	movff	plusw0,plusw2
  9380  002384  06E8               	decf	wreg,f,c
  9381  002386  E2FC               	bc	u20891
  9382                           
  9383                           ; BSR set to: 0
  9384  002388  0012               	return		;funcret
  9385  00238A                     __end_of_TunnelManagerSetTunnel:
  9386                           	opt stack 0
  9387                           tblptru	equ	0xFF8
  9388                           tblptrh	equ	0xFF7
  9389                           tblptrl	equ	0xFF6
  9390                           tablat	equ	0xFF5
  9391                           prodh	equ	0xFF4
  9392                           prodl	equ	0xFF3
  9393                           intcon3	equ	0xFF0
  9394                           postinc0	equ	0xFEE
  9395                           plusw0	equ	0xFEB
  9396                           wreg	equ	0xFE8
  9397                           postdec1	equ	0xFE5
  9398                           plusw1	equ	0xFE3
  9399                           fsr1h	equ	0xFE2
  9400                           fsr1l	equ	0xFE1
  9401                           indf2	equ	0xFDF
  9402                           postinc2	equ	0xFDE
  9403                           postdec2	equ	0xFDD
  9404                           plusw2	equ	0xFDB
  9405                           fsr2h	equ	0xFDA
  9406                           fsr2l	equ	0xFD9
  9407                           status	equ	0xFD8
  9408                           
  9409 ;; *************** function _RouteManagerProcessReceive *****************
  9410 ;; Defined at:
  9411 ;;		line 310 in file "../RouteManager.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  source          2   60[BANK0 ] PTR struct addr_t_def
  9414 ;;		 -> radioReceivedPacket@source(2), 
  9415 ;;  data            2   62[BANK0 ] PTR unsigned char 
  9416 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9417 ;;  len             1   64[BANK0 ] unsigned char 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  rcvBeacon       2   71[BANK0 ] PTR struct net_routing_h
  9420 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
  9421 ;;  from            2   69[BANK0 ] struct addr_t_def
  9422 ;;  congested       1   68[BANK0 ] unsigned char 
  9423 ;;  res             1    0        enum E180
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      enum E179
  9426 ;; Registers used:
  9427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : F/0
  9430 ;;		On exit  : E/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9433 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;Total ram usage:       13 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:   11
  9440 ;; This function calls:
  9441 ;;		_BeaconManagerTrigger
  9442 ;;		_LE_InsertNeighbor
  9443 ;;		_LE_PinNeighbor
  9444 ;;		_NetworkAddressSizeGet
  9445 ;;		_RouteManagerSetNeighborCongested
  9446 ;;		_RouterEvicted
  9447 ;;		_isInvalidAddress
  9448 ;;		_memcpy
  9449 ;;		_routingTableUpdateEntry
  9450 ;; This function is called by:
  9451 ;;		_radioReceivedPacket
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text35
  9456  004610                     __ptext35:
  9457                           	opt stack 0
  9458  004610                     _RouteManagerProcessReceive:
  9459                           	opt stack 17
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;RouteManager.c: 313: addr_t from;
  9463                           ;RouteManager.c: 314: net_routing_header_t* rcvBeacon;
  9464                           ;RouteManager.c: 315: bool congested;
  9465                           ;RouteManager.c: 316: rcvBeacon=(net_routing_header_t*)data;
  9466                           
  9467                           ; BSR set to: 0
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;incstack = 0
  9471  004610  C09E  F0A7         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  9472  004614  C09F  F0A8         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;RouteManager.c: 318: if ( (len >= sizeof (net_routing_header_t)) && (rcvBeacon->packett
      +                          ype==PacketRouting) )
  9476  004618  0E09               	movlw	9
  9477  00461A  65A0               	cpfsgt	RouteManagerProcessReceive@len& (0+255),b
  9478  00461C  0C09               	retlw	9
  9479                           
  9480                           ; BSR set to: 0
  9481  00461E  EE20 F002          	lfsr	2,2
  9482  004622  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9483  004624  26D9               	addwf	fsr2l,f,c
  9484  004626  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9485  004628  22DA               	addwfc	fsr2h,f,c
  9486  00462A  0E22               	movlw	34
  9487  00462C  18DE               	xorwf	postinc2,w,c
  9488  00462E  A4D8               	btfss	status,2,c
  9489  004630  0012               	return	
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;RouteManager.c: 319: {
  9493                           ;RouteManager.c: 321: memcpy(&from,source,NetworkAddressSizeGet());
  9494  004632  0EA5               	movlw	low RouteManagerProcessReceive@from
  9495  004634  6F75               	movwf	memcpy@d1& (0+255),b
  9496  004636  6B76               	clrf	(memcpy@d1+1)& (0+255),b
  9497  004638  C09C  F077         	movff	RouteManagerProcessReceive@source,memcpy@s1
  9498  00463C  C09D  F078         	movff	RouteManagerProcessReceive@source+1,memcpy@s1+1
  9499  004640  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
  9500  004644  0100               	movlb	0	; () banked
  9501  004646  6F79               	movwf	memcpy@n& (0+255),b
  9502  004648  6B7A               	clrf	(memcpy@n+1)& (0+255),b
  9503  00464A  EC05  F035         	call	_memcpy	;wreg free
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;RouteManager.c: 322: rcvBeacon = (net_routing_header_t*) data;
  9507  00464E  C09E  F0A7         	movff	RouteManagerProcessReceive@data,RouteManagerProcessReceive@rcvBeacon
  9508  004652  C09F  F0A8         	movff	RouteManagerProcessReceive@data+1,RouteManagerProcessReceive@rcvBeacon+1
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;RouteManager.c: 324: congested = (rcvBeacon->options.congested==1);
  9512  004656  EE20 F003          	lfsr	2,3
  9513  00465A  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9514  00465C  26D9               	addwf	fsr2l,f,c
  9515  00465E  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9516  004660  22DA               	addwfc	fsr2h,f,c
  9517  004662  0E00               	movlw	0
  9518  004664  B8DF               	btfsc	indf2,4,c
  9519  004666  0E01               	movlw	1
  9520  004668  6FA4               	movwf	RouteManagerProcessReceive@congested& (0+255),b
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;RouteManager.c: 331: if( (!isInvalidAddress(rcvBeacon->parent)) && (rcvBeacon->options.
      +                          deviceType!=DeviceSleepingRFD) && (rcvBeacon->options.hasroute==1) )
  9524  00466A  EE20 F004          	lfsr	2,4
  9525  00466E  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9526  004670  26D9               	addwf	fsr2l,f,c
  9527  004672  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9528  004674  22DA               	addwfc	fsr2h,f,c
  9529  004676  CFDE F085          	movff	postinc2,isInvalidAddress@address
  9530  00467A  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
  9531  00467E  ECC1  F03A         	call	_isInvalidAddress	;wreg free
  9532  004682  0900               	iorlw	0
  9533  004684  E153               	bnz	l17006
  9534                           
  9535                           ; BSR set to: 0
  9536  004686  EE20 F003          	lfsr	2,3
  9537  00468A  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9538  00468C  26D9               	addwf	fsr2l,f,c
  9539  00468E  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9540  004690  22DA               	addwfc	fsr2h,f,c
  9541  004692  50DF               	movf	223,w,c
  9542  004694  0B07               	andlw	7
  9543  004696  0A02               	xorlw	2
  9544  004698  E049               	bz	l17006
  9545                           
  9546                           ; BSR set to: 0
  9547  00469A  EE20 F003          	lfsr	2,3
  9548  00469E  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9549  0046A0  26D9               	addwf	fsr2l,f,c
  9550  0046A2  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9551  0046A4  22DA               	addwfc	fsr2h,f,c
  9552  0046A6  A6DF               	btfss	indf2,3,c
  9553  0046A8  D041               	goto	l17006
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;RouteManager.c: 332: {
  9557                           ;RouteManager.c: 335: if (rcvBeacon->etx == 0)
  9558  0046AA  EE20 F006          	lfsr	2,6
  9559  0046AE  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9560  0046B0  26D9               	addwf	fsr2l,f,c
  9561  0046B2  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9562  0046B4  22DA               	addwfc	fsr2h,f,c
  9563  0046B6  50DE               	movf	postinc2,w,c
  9564  0046B8  10DE               	iorwf	postinc2,w,c
  9565  0046BA  E115               	bnz	l17002
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;RouteManager.c: 336: {
  9569                           ;RouteManager.c: 338: LE_InsertNeighbor(from, rcvBeacon->options.deviceType);
  9570  0046BC  C0A5  F096         	movff	RouteManagerProcessReceive@from,LE_InsertNeighbor@neighbor
  9571  0046C0  C0A6  F097         	movff	RouteManagerProcessReceive@from+1,LE_InsertNeighbor@neighbor+1
  9572  0046C4  EE20 F003          	lfsr	2,3
  9573  0046C8  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9574  0046CA  26D9               	addwf	fsr2l,f,c
  9575  0046CC  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9576  0046CE  22DA               	addwfc	fsr2h,f,c
  9577  0046D0  50DF               	movf	223,w,c
  9578  0046D2  0B07               	andlw	7
  9579  0046D4  6F98               	movwf	LE_InsertNeighbor@devType& (0+255),b
  9580  0046D6  ECED  F02F         	call	_LE_InsertNeighbor	;wreg free
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;RouteManager.c: 339: LE_PinNeighbor(from);
  9584  0046DA  C0A5  F085         	movff	RouteManagerProcessReceive@from,LE_PinNeighbor@neighbor
  9585  0046DE  C0A6  F086         	movff	RouteManagerProcessReceive@from+1,LE_PinNeighbor@neighbor+1
  9586  0046E2  ECB5  F037         	call	_LE_PinNeighbor	;wreg free
  9587  0046E6                     l17002:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;RouteManager.c: 340: }
  9591                           ;RouteManager.c: 343: routingTableUpdateEntry(from, rcvBeacon->parent, rcvBeacon->etx);
  9592  0046E6  C0A5  F08E         	movff	RouteManagerProcessReceive@from,routingTableUpdateEntry@from
  9593  0046EA  C0A6  F08F         	movff	RouteManagerProcessReceive@from+1,routingTableUpdateEntry@from+1
  9594  0046EE  EE20 F004          	lfsr	2,4
  9595  0046F2  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9596  0046F4  26D9               	addwf	fsr2l,f,c
  9597  0046F6  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9598  0046F8  22DA               	addwfc	fsr2h,f,c
  9599  0046FA  CFDE F090          	movff	postinc2,routingTableUpdateEntry@parent
  9600  0046FE  CFDD F091          	movff	postdec2,routingTableUpdateEntry@parent+1
  9601  004702  EE20 F006          	lfsr	2,6
  9602  004706  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9603  004708  26D9               	addwf	fsr2l,f,c
  9604  00470A  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9605  00470C  22DA               	addwfc	fsr2h,f,c
  9606  00470E  CFDE F092          	movff	postinc2,routingTableUpdateEntry@etx
  9607  004712  CFDD F093          	movff	postdec2,routingTableUpdateEntry@etx+1
  9608  004716  EC3D  F027         	call	_routingTableUpdateEntry	;wreg free
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;RouteManager.c: 344: RouteManagerSetNeighborCongested(from, congested);
  9612  00471A  C0A5  F073         	movff	RouteManagerProcessReceive@from,RouteManagerSetNeighborCongested@n
  9613  00471E  C0A6  F074         	movff	RouteManagerProcessReceive@from+1,RouteManagerSetNeighborCongested@n+1
  9614  004722  C0A4  F075         	movff	RouteManagerProcessReceive@congested,RouteManagerSetNeighborCongested@congested
  9615  004726  EC1F  F03B         	call	_RouteManagerSetNeighborCongested	;wreg free
  9616                           
  9617                           ;RouteManager.c: 345: }else
  9618  00472A  D006               	goto	l17008
  9619  00472C                     l17006:
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;RouteManager.c: 346: {
  9623                           ;RouteManager.c: 348: RouterEvicted(from);
  9624  00472C  C0A5  F08E         	movff	RouteManagerProcessReceive@from,RouterEvicted@address
  9625  004730  C0A6  F08F         	movff	RouteManagerProcessReceive@from+1,RouterEvicted@address+1
  9626  004734  EC2F  F02E         	call	_RouterEvicted	;wreg free
  9627  004738                     l17008:
  9628                           
  9629                           ;RouteManager.c: 349: }
  9630                           ;RouteManager.c: 351: if (rcvBeacon->options.pull==1)
  9631  004738  0100               	movlb	0	; () banked
  9632  00473A  EE20 F003          	lfsr	2,3
  9633  00473E  51A7               	movf	RouteManagerProcessReceive@rcvBeacon& (0+255),w,b
  9634  004740  26D9               	addwf	fsr2l,f,c
  9635  004742  51A8               	movf	(RouteManagerProcessReceive@rcvBeacon+1)& (0+255),w,b
  9636  004744  22DA               	addwfc	fsr2h,f,c
  9637  004746  BADF               	btfsc	indf2,5,c
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;RouteManager.c: 352: {
  9641                           ;RouteManager.c: 353: BeaconManagerTrigger();
  9642  004748  EC13  F03B         	call	_BeaconManagerTrigger	;wreg free
  9643  00474C  0012               	return		;funcret
  9644  00474E                     __end_of_RouteManagerProcessReceive:
  9645                           	opt stack 0
  9646                           tblptru	equ	0xFF8
  9647                           tblptrh	equ	0xFF7
  9648                           tblptrl	equ	0xFF6
  9649                           tablat	equ	0xFF5
  9650                           prodh	equ	0xFF4
  9651                           prodl	equ	0xFF3
  9652                           intcon3	equ	0xFF0
  9653                           postinc0	equ	0xFEE
  9654                           plusw0	equ	0xFEB
  9655                           wreg	equ	0xFE8
  9656                           postdec1	equ	0xFE5
  9657                           plusw1	equ	0xFE3
  9658                           fsr1h	equ	0xFE2
  9659                           fsr1l	equ	0xFE1
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           plusw2	equ	0xFDB
  9664                           fsr2h	equ	0xFDA
  9665                           fsr2l	equ	0xFD9
  9666                           status	equ	0xFD8
  9667                           
  9668 ;; *************** function _routingTableUpdateEntry *****************
  9669 ;; Defined at:
  9670 ;;		line 247 in file "../RouteManager.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  from            2   46[BANK0 ] struct addr_t_def
  9673 ;;  parent          2   48[BANK0 ] struct addr_t_def
  9674 ;;  etx             2   50[BANK0 ] unsigned int 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;  linkEtx         2   52[BANK0 ] unsigned int 
  9677 ;;  idx             1   54[BANK0 ] unsigned char 
  9678 ;;  res             1    0        enum E180
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      enum E180
  9681 ;; Registers used:
  9682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : F/0
  9685 ;;		On exit  : F/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9688 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9691 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9692 ;;Total ram usage:        9 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    9
  9695 ;; This function calls:
  9696 ;;		_LELinkQualityGet
  9697 ;;		_passLinkEtxThreshold
  9698 ;;		_routingTableFind
  9699 ;; This function is called by:
  9700 ;;		_RouteManagerProcessReceive
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text36
  9705  004E7A                     __ptext36:
  9706                           	opt stack 0
  9707  004E7A                     _routingTableUpdateEntry:
  9708                           	opt stack 18
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;RouteManager.c: 249: uint8_t idx;
  9712                           ;RouteManager.c: 250: error_t res;
  9713                           ;RouteManager.c: 251: uint16_t linkEtx;
  9714                           ;RouteManager.c: 252: linkEtx = LELinkQualityGet(from,0);
  9715                           
  9716                           ;incstack = 0
  9717  004E7A  C08E  F085         	movff	routingTableUpdateEntry@from,LELinkQualityGet@address
  9718  004E7E  C08F  F086         	movff	routingTableUpdateEntry@from+1,LELinkQualityGet@address+1
  9719  004E82  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
  9720  004E84  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
  9721  004E86  EC95  F032         	call	_LELinkQualityGet	;wreg free
  9722  004E8A  C085  F094         	movff	?_LELinkQualityGet,routingTableUpdateEntry@linkEtx
  9723  004E8E  C086  F095         	movff	?_LELinkQualityGet+1,routingTableUpdateEntry@linkEtx+1
  9724                           
  9725                           ;RouteManager.c: 254: idx = routingTableFind(from);
  9726  004E92  C08E  F087         	movff	routingTableUpdateEntry@from,routingTableFind@neighbor
  9727  004E96  C08F  F088         	movff	routingTableUpdateEntry@from+1,routingTableFind@neighbor+1
  9728  004E9A  EC68  F033         	call	_routingTableFind	;wreg free
  9729  004E9E  6F96               	movwf	routingTableUpdateEntry@idx& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;RouteManager.c: 256: {
  9733                           ;RouteManager.c: 258: res=err_FAIL;
  9734  004EA0  0E0A               	movlw	10
  9735  004EA2  1996               	xorwf	routingTableUpdateEntry@idx& (0+255),w,b
  9736  004EA4  E101               	bnz	l16530
  9737  004EA6  0012               	return	
  9738  004EA8                     l16530:
  9739                           
  9740                           ; BSR set to: 0
  9741  004EA8  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9742  004EAA  19EB               	xorwf	_routingTableActive& (0+255),w,b
  9743  004EAC  11EC               	iorwf	(_routingTableActive+1)& (0+255),w,b
  9744  004EAE  E143               	bnz	l16538
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;RouteManager.c: 260: {
  9748                           ;RouteManager.c: 262: if (passLinkEtxThreshold(linkEtx))
  9749  004EB0  C094  F073         	movff	routingTableUpdateEntry@linkEtx,passLinkEtxThreshold@etx
  9750  004EB4  C095  F074         	movff	routingTableUpdateEntry@linkEtx+1,passLinkEtxThreshold@etx+1
  9751  004EB8  ECA2  F03A         	call	_passLinkEtxThreshold	;wreg free
  9752  004EBC  0900               	iorlw	0
  9753  004EBE  B4D8               	btfsc	status,2,c
  9754  004EC0  0012               	return	
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;RouteManager.c: 263: {
  9758                           ;RouteManager.c: 264: routingTable[idx].neighbor = from;
  9759  004EC2  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9760  004EC4  0D09               	mullw	9
  9761  004EC6  0E78               	movlw	low _routingTable
  9762  004EC8  24F3               	addwf	prodl,w,c
  9763  004ECA  6ED9               	movwf	fsr2l,c
  9764  004ECC  0E04               	movlw	high _routingTable
  9765  004ECE  20F4               	addwfc	prodh,w,c
  9766  004ED0  6EDA               	movwf	fsr2h,c
  9767  004ED2  C08E  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  9768  004ED6  C08F  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  9769                           
  9770                           ;RouteManager.c: 265: routingTable[idx].info.parent = parent;
  9771  004EDA  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9772  004EDC  0D09               	mullw	9
  9773  004EDE  0E7A               	movlw	low (_routingTable+2)
  9774  004EE0  24F3               	addwf	prodl,w,c
  9775  004EE2  6ED9               	movwf	fsr2l,c
  9776  004EE4  0E04               	movlw	high (_routingTable+2)
  9777  004EE6  20F4               	addwfc	prodh,w,c
  9778  004EE8  6EDA               	movwf	fsr2h,c
  9779  004EEA  C090  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  9780  004EEE  C091  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  9781                           
  9782                           ;RouteManager.c: 266: routingTable[idx].info.etx = etx;
  9783  004EF2  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9784  004EF4  0D09               	mullw	9
  9785  004EF6  0E7C               	movlw	low (_routingTable+4)
  9786  004EF8  24F3               	addwf	prodl,w,c
  9787  004EFA  6ED9               	movwf	fsr2l,c
  9788  004EFC  0E04               	movlw	high (_routingTable+4)
  9789  004EFE  20F4               	addwfc	prodh,w,c
  9790  004F00  6EDA               	movwf	fsr2h,c
  9791  004F02  C092  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9792  004F06  C093  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9793                           
  9794                           ;RouteManager.c: 267: routingTable[idx].info.haveHeard = 1;
  9795  004F0A  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9796  004F0C  0D09               	mullw	9
  9797  004F0E  0E7E               	movlw	low (_routingTable+6)
  9798  004F10  24F3               	addwf	prodl,w,c
  9799  004F12  6ED9               	movwf	fsr2l,c
  9800  004F14  0E04               	movlw	high (_routingTable+6)
  9801  004F16  20F4               	addwfc	prodh,w,c
  9802  004F18  6EDA               	movwf	fsr2h,c
  9803  004F1A  0E01               	movlw	1
  9804  004F1C  6EDF               	movwf	indf2,c
  9805                           
  9806                           ;RouteManager.c: 268: routingTable[idx].info.congested = 0;
  9807  004F1E  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9808  004F20  0D09               	mullw	9
  9809  004F22  0E7F               	movlw	low (_routingTable+7)
  9810  004F24  24F3               	addwf	prodl,w,c
  9811  004F26  6ED9               	movwf	fsr2l,c
  9812  004F28  0E04               	movlw	high (_routingTable+7)
  9813  004F2A  20F4               	addwfc	prodh,w,c
  9814  004F2C  6EDA               	movwf	fsr2h,c
  9815  004F2E  6ADF               	clrf	indf2,c
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;RouteManager.c: 269: routingTableActive++;
  9819  004F30  4BEB               	infsnz	_routingTableActive& (0+255),f,b
  9820  004F32  2BEC               	incf	(_routingTableActive+1)& (0+255),f,b
  9821  004F34  0C00               	retlw	0
  9822  004F36                     l16538:
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;RouteManager.c: 272: {
  9826                           ;RouteManager.c: 274: routingTable[idx].neighbor = from;
  9827  004F36  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9828  004F38  0D09               	mullw	9
  9829  004F3A  0E78               	movlw	low _routingTable
  9830  004F3C  24F3               	addwf	prodl,w,c
  9831  004F3E  6ED9               	movwf	fsr2l,c
  9832  004F40  0E04               	movlw	high _routingTable
  9833  004F42  20F4               	addwfc	prodh,w,c
  9834  004F44  6EDA               	movwf	fsr2h,c
  9835  004F46  C08E  FFDE         	movff	routingTableUpdateEntry@from,postinc2
  9836  004F4A  C08F  FFDD         	movff	routingTableUpdateEntry@from+1,postdec2
  9837                           
  9838                           ;RouteManager.c: 275: routingTable[idx].info.parent = parent;
  9839  004F4E  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9840  004F50  0D09               	mullw	9
  9841  004F52  0E7A               	movlw	low (_routingTable+2)
  9842  004F54  24F3               	addwf	prodl,w,c
  9843  004F56  6ED9               	movwf	fsr2l,c
  9844  004F58  0E04               	movlw	high (_routingTable+2)
  9845  004F5A  20F4               	addwfc	prodh,w,c
  9846  004F5C  6EDA               	movwf	fsr2h,c
  9847  004F5E  C090  FFDE         	movff	routingTableUpdateEntry@parent,postinc2
  9848  004F62  C091  FFDD         	movff	routingTableUpdateEntry@parent+1,postdec2
  9849                           
  9850                           ;RouteManager.c: 276: routingTable[idx].info.etx = etx;
  9851  004F66  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9852  004F68  0D09               	mullw	9
  9853  004F6A  0E7C               	movlw	low (_routingTable+4)
  9854  004F6C  24F3               	addwf	prodl,w,c
  9855  004F6E  6ED9               	movwf	fsr2l,c
  9856  004F70  0E04               	movlw	high (_routingTable+4)
  9857  004F72  20F4               	addwfc	prodh,w,c
  9858  004F74  6EDA               	movwf	fsr2h,c
  9859  004F76  C092  FFDE         	movff	routingTableUpdateEntry@etx,postinc2
  9860  004F7A  C093  FFDD         	movff	routingTableUpdateEntry@etx+1,postdec2
  9861                           
  9862                           ;RouteManager.c: 277: routingTable[idx].info.haveHeard = 1;
  9863  004F7E  5196               	movf	routingTableUpdateEntry@idx& (0+255),w,b
  9864  004F80  0D09               	mullw	9
  9865  004F82  0E7E               	movlw	low (_routingTable+6)
  9866  004F84  24F3               	addwf	prodl,w,c
  9867  004F86  6ED9               	movwf	fsr2l,c
  9868  004F88  0E04               	movlw	high (_routingTable+6)
  9869  004F8A  20F4               	addwfc	prodh,w,c
  9870  004F8C  6EDA               	movwf	fsr2h,c
  9871  004F8E  0E01               	movlw	1
  9872  004F90  6EDF               	movwf	indf2,c
  9873  004F92  0C01               	retlw	1
  9874  004F94                     __end_of_routingTableUpdateEntry:
  9875                           	opt stack 0
  9876                           tblptru	equ	0xFF8
  9877                           tblptrh	equ	0xFF7
  9878                           tblptrl	equ	0xFF6
  9879                           tablat	equ	0xFF5
  9880                           prodh	equ	0xFF4
  9881                           prodl	equ	0xFF3
  9882                           intcon3	equ	0xFF0
  9883                           postinc0	equ	0xFEE
  9884                           plusw0	equ	0xFEB
  9885                           wreg	equ	0xFE8
  9886                           postdec1	equ	0xFE5
  9887                           plusw1	equ	0xFE3
  9888                           fsr1h	equ	0xFE2
  9889                           fsr1l	equ	0xFE1
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           postdec2	equ	0xFDD
  9893                           plusw2	equ	0xFDB
  9894                           fsr2h	equ	0xFDA
  9895                           fsr2l	equ	0xFD9
  9896                           status	equ	0xFD8
  9897                           
  9898 ;; *************** function _RouteManagerSetNeighborCongested *****************
  9899 ;; Defined at:
  9900 ;;		line 294 in file "../RouteManager.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  n               2   19[BANK0 ] struct addr_t_def
  9903 ;;  congested       1   21[BANK0 ] unsigned char 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		None
  9910 ;; Tracked objects:
  9911 ;;		On entry : F/0
  9912 ;;		On exit  : F/0
  9913 ;;		Unchanged: F/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9915 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;Total ram usage:        3 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    5
  9922 ;; This function calls:
  9923 ;;		Nothing
  9924 ;; This function is called by:
  9925 ;;		_RouteManagerProcessReceive
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text37
  9930  00763E                     __ptext37:
  9931                           	opt stack 0
  9932  00763E                     _RouteManagerSetNeighborCongested:
  9933                           	opt stack 22
  9934                           
  9935                           ; BSR set to: 0
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;incstack = 0
  9939  00763E  0012               	return		;funcret
  9940  007640                     __end_of_RouteManagerSetNeighborCongested:
  9941                           	opt stack 0
  9942                           tblptru	equ	0xFF8
  9943                           tblptrh	equ	0xFF7
  9944                           tblptrl	equ	0xFF6
  9945                           tablat	equ	0xFF5
  9946                           prodh	equ	0xFF4
  9947                           prodl	equ	0xFF3
  9948                           intcon3	equ	0xFF0
  9949                           postinc0	equ	0xFEE
  9950                           plusw0	equ	0xFEB
  9951                           wreg	equ	0xFE8
  9952                           postdec1	equ	0xFE5
  9953                           plusw1	equ	0xFE3
  9954                           fsr1h	equ	0xFE2
  9955                           fsr1l	equ	0xFE1
  9956                           indf2	equ	0xFDF
  9957                           postinc2	equ	0xFDE
  9958                           postdec2	equ	0xFDD
  9959                           plusw2	equ	0xFDB
  9960                           fsr2h	equ	0xFDA
  9961                           fsr2l	equ	0xFD9
  9962                           status	equ	0xFD8
  9963                           
  9964 ;; *************** function _LE_InsertNeighbor *****************
  9965 ;; Defined at:
  9966 ;;		line 240 in file "../LinkEstimator.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  neighbor        2   54[BANK0 ] struct addr_t_def
  9969 ;;  devType         1   56[BANK0 ] enum E144
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  nidx            1   59[BANK0 ] unsigned char 
  9972 ;;  res             1    0        enum E179
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      enum E180
  9975 ;; Registers used:
  9976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : F/0
  9979 ;;		On exit  : F/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9982 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;Total ram usage:        6 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:   10
  9989 ;; This function calls:
  9990 ;;		_RouterEvicted
  9991 ;;		_le_findEmptyNeighborIdx
  9992 ;;		_le_findIdx
  9993 ;;		_le_findWorstNeighborIdx
  9994 ;;		_le_initNeighborIdx
  9995 ;; This function is called by:
  9996 ;;		_RouteManagerProcessReceive
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text38
 10001  005FDA                     __ptext38:
 10002                           	opt stack 0
 10003  005FDA                     _LE_InsertNeighbor:
 10004                           	opt stack 17
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;LinkEstimator.c: 244: nidx = le_findIdx(neighbor);
 10008                           
 10009                           ; BSR set to: 0
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;incstack = 0
 10013  005FDA  C096  F081         	movff	LE_InsertNeighbor@neighbor,le_findIdx@ll_addr
 10014  005FDE  C097  F082         	movff	LE_InsertNeighbor@neighbor+1,le_findIdx@ll_addr+1
 10015  005FE2  EC83  F034         	call	_le_findIdx	;wreg free
 10016  005FE6  6F9B               	movwf	LE_InsertNeighbor@nidx& (0+255),b
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;LinkEstimator.c: 245: if (nidx != 0xff)
 10020  005FE8  299B               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
 10021  005FEA  E001               	bz	l16550
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;LinkEstimator.c: 249: }else
 10025  005FEC  0012               	return	
 10026  005FEE                     l16550:
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;LinkEstimator.c: 250: {
 10030                           ;LinkEstimator.c: 251: nidx = le_findEmptyNeighborIdx();
 10031  005FEE  ECD5  F035         	call	_le_findEmptyNeighborIdx	;wreg free
 10032  005FF2  0100               	movlb	0	; () banked
 10033  005FF4  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
 10034  005FF6  6F9B               	movwf	LE_InsertNeighbor@nidx& (0+255),b
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;LinkEstimator.c: 252: if (nidx != 0xff)
 10038  005FF8  299B               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
 10039  005FFA  E017               	bz	l16560
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;LinkEstimator.c: 253: {
 10043                           ;LinkEstimator.c: 255: le_initNeighborIdx(nidx, neighbor);
 10044  005FFC  C096  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
 10045  006000  C097  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
 10046  006004  519B               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
 10047  006006  ECB9  F030         	call	_le_initNeighborIdx
 10048  00600A                     l16556:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;LinkEstimator.c: 256: neighbor_tbl[nidx].flags|=(devType<<4);
 10052  00600A  C098  F099         	movff	LE_InsertNeighbor@devType,??_LE_InsertNeighbor
 10053  00600E  3B99               	swapf	??_LE_InsertNeighbor& (0+255),f,b
 10054  006010  0EF0               	movlw	240
 10055  006012  1799               	andwf	??_LE_InsertNeighbor& (0+255),f,b
 10056  006014  519B               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
 10057  006016  0D0B               	mullw	11
 10058  006018  0E05               	movlw	low (_neighbor_tbl+5)
 10059  00601A  24F3               	addwf	prodl,w,c
 10060  00601C  6ED9               	movwf	fsr2l,c
 10061  00601E  0E05               	movlw	high (_neighbor_tbl+5)
 10062  006020  20F4               	addwfc	prodh,w,c
 10063  006022  6EDA               	movwf	fsr2h,c
 10064  006024  5199               	movf	??_LE_InsertNeighbor& (0+255),w,b
 10065  006026  12DF               	iorwf	indf2,f,c
 10066  006028  0012               	return	
 10067  00602A                     l16560:
 10068                           
 10069                           ; BSR set to: 0
 10070                           ;LinkEstimator.c: 259: {
 10071                           ;LinkEstimator.c: 260: nidx = le_findWorstNeighborIdx(10);
 10072  00602A  0E0A               	movlw	10
 10073  00602C  EC15  F026         	call	_le_findWorstNeighborIdx
 10074  006030  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
 10075  006032  6F9B               	movwf	LE_InsertNeighbor@nidx& (0+255),b
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;LinkEstimator.c: 261: if (nidx != 0xff)
 10079  006034  299B               	incf	LE_InsertNeighbor@nidx& (0+255),w,b
 10080  006036  B4D8               	btfsc	status,2,c
 10081  006038  0012               	return	
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;LinkEstimator.c: 262: {
 10085                           ;LinkEstimator.c: 265: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 10086  00603A  519B               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
 10087  00603C  0D0B               	mullw	11
 10088  00603E  0E00               	movlw	low _neighbor_tbl
 10089  006040  24F3               	addwf	prodl,w,c
 10090  006042  6ED9               	movwf	fsr2l,c
 10091  006044  0E05               	movlw	high _neighbor_tbl
 10092  006046  20F4               	addwfc	prodh,w,c
 10093  006048  6EDA               	movwf	fsr2h,c
 10094  00604A  CFDE F08E          	movff	postinc2,RouterEvicted@address
 10095  00604E  CFDD F08F          	movff	postdec2,RouterEvicted@address+1
 10096  006052  EC2F  F02E         	call	_RouterEvicted	;wreg free
 10097                           
 10098                           ;LinkEstimator.c: 266: le_initNeighborIdx(nidx, neighbor);
 10099  006056  C096  F073         	movff	LE_InsertNeighbor@neighbor,le_initNeighborIdx@ll_addr
 10100  00605A  C097  F074         	movff	LE_InsertNeighbor@neighbor+1,le_initNeighborIdx@ll_addr+1
 10101  00605E  0100               	movlb	0	; () banked
 10102  006060  519B               	movf	LE_InsertNeighbor@nidx& (0+255),w,b
 10103  006062  ECB9  F030         	call	_le_initNeighborIdx
 10104  006066  D7D1               	goto	l16556
 10105  006068                     __end_of_LE_InsertNeighbor:
 10106                           	opt stack 0
 10107                           tblptru	equ	0xFF8
 10108                           tblptrh	equ	0xFF7
 10109                           tblptrl	equ	0xFF6
 10110                           tablat	equ	0xFF5
 10111                           prodh	equ	0xFF4
 10112                           prodl	equ	0xFF3
 10113                           intcon3	equ	0xFF0
 10114                           postinc0	equ	0xFEE
 10115                           plusw0	equ	0xFEB
 10116                           wreg	equ	0xFE8
 10117                           postdec1	equ	0xFE5
 10118                           plusw1	equ	0xFE3
 10119                           fsr1h	equ	0xFE2
 10120                           fsr1l	equ	0xFE1
 10121                           indf2	equ	0xFDF
 10122                           postinc2	equ	0xFDE
 10123                           postdec2	equ	0xFDD
 10124                           plusw2	equ	0xFDB
 10125                           fsr2h	equ	0xFDA
 10126                           fsr2l	equ	0xFD9
 10127                           status	equ	0xFD8
 10128                           
 10129 ;; *************** function _NetworkSendDiscoverResponse *****************
 10130 ;; Defined at:
 10131 ;;		line 407 in file "../NetworkManager.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 10136 ;;  address         2   68[BANK1 ] struct addr_t_def
 10137 ;;  dhdr            2   66[BANK1 ] PTR struct net_data_head
 10138 ;;		 -> NetworkSendDiscoverResponse@databuff(64), 
 10139 ;;  size            2   64[BANK1 ] unsigned int 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : F/0
 10146 ;;		On exit  : F/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10150 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10152 ;;      Totals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10153 ;;Total ram usage:       70 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    9
 10156 ;; This function calls:
 10157 ;;		_BroadcastManagerDelaySend
 10158 ;;		_NetworkAddressSizeGet
 10159 ;;		_NetworkPrepareSendPacket
 10160 ;;		_isNetworkSecurityEnabled
 10161 ;;		_memset
 10162 ;; This function is called by:
 10163 ;;		_radioReceivedPacket
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text39
 10168  0061F0                     __ptext39:
 10169                           	opt stack 0
 10170  0061F0                     _NetworkSendDiscoverResponse:
 10171                           	opt stack 19
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;NetworkManager.c: 409: addr_t address;
 10175                           ;NetworkManager.c: 410: uint16_t size;
 10176                           ;NetworkManager.c: 411: uint8_t databuff[64];
 10177                           ;NetworkManager.c: 412: net_data_header_t *dhdr=(net_data_header_t*)databuff;
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;incstack = 0
 10181  0061F0  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
 10182  0061F2  0101               	movlb	1	; () banked
 10183  0061F4  6F42               	movwf	NetworkSendDiscoverResponse@dhdr& (0+255),b
 10184  0061F6  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
 10185  0061F8  6F43               	movwf	(NetworkSendDiscoverResponse@dhdr+1)& (0+255),b
 10186                           
 10187                           ; BSR set to: 1
 10188                           ;NetworkManager.c: 413: memset(address.bytes,0xff,NetworkAddressSizeGet());
 10189  0061FA  0E44               	movlw	low NetworkSendDiscoverResponse@address
 10190  0061FC  0100               	movlb	0	; () banked
 10191  0061FE  6F73               	movwf	memset@p1& (0+255),b
 10192  006200  0E01               	movlw	high NetworkSendDiscoverResponse@address
 10193  006202  6F74               	movwf	(memset@p1+1)& (0+255),b
 10194  006204  6B76               	clrf	(memset@c+1)& (0+255),b
 10195  006206  6975               	setf	memset@c& (0+255),b
 10196  006208  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 10197  00620C  0100               	movlb	0	; () banked
 10198  00620E  6F77               	movwf	memset@n& (0+255),b
 10199  006210  6B78               	clrf	(memset@n+1)& (0+255),b
 10200  006212  EC47  F039         	call	_memset	;wreg free
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;NetworkManager.c: 414: size=NetworkPrepareSendPacket(address,databuff,PacketScanRespons
      +                          e,(0),0);
 10204  006216  C144  F07F         	movff	NetworkSendDiscoverResponse@address,NetworkPrepareSendPacket@address
 10205  00621A  C145  F080         	movff	NetworkSendDiscoverResponse@address+1,NetworkPrepareSendPacket@address+1
 10206  00621E  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
 10207  006220  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 10208  006222  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
 10209  006224  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 10210  006226  0E28               	movlw	40
 10211  006228  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 10212  00622A  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 10213  00622C  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 10214  00622E  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 10215  006230  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 10216  006232  EC27  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 10217  006236  C07F  F140         	movff	?_NetworkPrepareSendPacket,NetworkSendDiscoverResponse@size
 10218  00623A  C080  F141         	movff	?_NetworkPrepareSendPacket+1,NetworkSendDiscoverResponse@size+1
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;NetworkManager.c: 415: dhdr->Hops=0;
 10222  00623E  C142  FFD9         	movff	NetworkSendDiscoverResponse@dhdr,fsr2l
 10223  006242  C143  FFDA         	movff	NetworkSendDiscoverResponse@dhdr+1,fsr2h
 10224  006246  6ADF               	clrf	indf2,c
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;NetworkManager.c: 416: BroadcastManagerDelaySend(databuff,size,isNetworkSecurityEnabled
      +                          (),1);
 10228  006248  0E00               	movlw	low NetworkSendDiscoverResponse@databuff
 10229  00624A  6F9F               	movwf	BroadcastManagerDelaySend@pkt& (0+255),b
 10230  00624C  0E01               	movlw	high NetworkSendDiscoverResponse@databuff
 10231  00624E  6FA0               	movwf	(BroadcastManagerDelaySend@pkt+1)& (0+255),b
 10232  006250  C140  F0A1         	movff	NetworkSendDiscoverResponse@size,BroadcastManagerDelaySend@size
 10233  006254  C141  F0A2         	movff	NetworkSendDiscoverResponse@size+1,BroadcastManagerDelaySend@size+1
 10234  006258  EC06  F03B         	call	_isNetworkSecurityEnabled	;wreg free
 10235  00625C  0100               	movlb	0	; () banked
 10236  00625E  6FA3               	movwf	BroadcastManagerDelaySend@isSecure& (0+255),b
 10237  006260  0E01               	movlw	1
 10238  006262  6FA4               	movwf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10239  006264  EF39  F01B         	goto	_BroadcastManagerDelaySend	;wreg free
 10240  006268                     __end_of_NetworkSendDiscoverResponse:
 10241                           	opt stack 0
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon3	equ	0xFF0
 10249                           postinc0	equ	0xFEE
 10250                           plusw0	equ	0xFEB
 10251                           wreg	equ	0xFE8
 10252                           postdec1	equ	0xFE5
 10253                           plusw1	equ	0xFE3
 10254                           fsr1h	equ	0xFE2
 10255                           fsr1l	equ	0xFE1
 10256                           indf2	equ	0xFDF
 10257                           postinc2	equ	0xFDE
 10258                           postdec2	equ	0xFDD
 10259                           plusw2	equ	0xFDB
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function _NetworkManagerProcessIncomingData *****************
 10265 ;; Defined at:
 10266 ;;		line 276 in file "../NetworkManager.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  data            2  124[BANK0 ] PTR unsigned char 
 10269 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 10270 ;;  size            2  126[BANK0 ] unsigned int 
 10271 ;;  isBroadcast     1  128[BANK0 ] unsigned char 
 10272 ;;  isSecure        1  129[BANK0 ] unsigned char 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  buffer         64   64[BANK1 ] unsigned char [64]
 10275 ;;  dHdr            2  132[BANK1 ] PTR struct net_data_head
 10276 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 10277 ;;  packetsize      2  129[BANK1 ] unsigned int 
 10278 ;;  isSecurePack    1  131[BANK1 ] unsigned char 
 10279 ;;  isFormed        1  128[BANK1 ] unsigned char 
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : F/2
 10286 ;;		On exit  : E/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10289 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10292 ;;      Totals:         0       7      70       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;Total ram usage:       77 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:   14
 10296 ;; This function calls:
 10297 ;;		_BeaconManagerTrigger
 10298 ;;		_DeviceManagerGetDeviceData
 10299 ;;		_IsNetworkDevice
 10300 ;;		_NetworkDataArrivedEvent
 10301 ;;		_NetworkGetDeviceType
 10302 ;;		_TMSendDataToRFD
 10303 ;;		_TMSendFormedPacketToRFD
 10304 ;;		_isInvalidAddress
 10305 ;;		_memcpy
 10306 ;; This function is called by:
 10307 ;;		_radioReceivedPacket
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text40
 10312  002826                     __ptext40:
 10313                           	opt stack 0
 10314  002826                     _NetworkManagerProcessIncomingData:
 10315                           	opt stack 14
 10316                           
 10317                           ; BSR set to: 2
 10318                           ;NetworkManager.c: 278: net_data_header_t *dHdr=(net_data_header_t*)data;
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;incstack = 0
 10322  002826  C0DC  F184         	movff	NetworkManagerProcessIncomingData@data,NetworkManagerProcessIncomingData@dHdr
 10323  00282A  C0DD  F185         	movff	NetworkManagerProcessIncomingData@data+1,NetworkManagerProcessIncomingData@dHdr+1
 10324                           
 10325                           ; BSR set to: 2
 10326                           ;NetworkManager.c: 279: uint16_t packetsize;
 10327                           ;NetworkManager.c: 280: uint8_t buffer[64];
 10328                           ;NetworkManager.c: 281: bool isSecurePacket;
 10329                           ;NetworkManager.c: 282: bool isFormed;
 10330                           ;NetworkManager.c: 284: if(NetworkGetDeviceType()==DeviceCoordinator)
 10331  00282E  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 10332  002832  0900               	iorlw	0
 10333  002834  E001 D0B3          	bnz	l17104
 10334                           
 10335                           ; BSR set to: 1
 10336                           ;NetworkManager.c: 285: {
 10337                           ;NetworkManager.c: 286: if(IsNetworkDevice(dHdr->origin,(dHdr->flags & 0x07))==1)
 10338  002838  EE20 F006          	lfsr	2,6
 10339  00283C  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10340  00283E  26D9               	addwf	fsr2l,f,c
 10341  002840  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10342  002842  22DA               	addwfc	fsr2h,f,c
 10343  002844  CFDE F08F          	movff	postinc2,IsNetworkDevice@address
 10344  002848  CFDD F090          	movff	postdec2,IsNetworkDevice@address+1
 10345  00284C  EE20 F003          	lfsr	2,3
 10346  002850  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10347  002852  26D9               	addwf	fsr2l,f,c
 10348  002854  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10349  002856  22DA               	addwfc	fsr2h,f,c
 10350  002858  50DF               	movf	indf2,w,c
 10351  00285A  0B07               	andlw	7
 10352  00285C  0100               	movlb	0	; () banked
 10353  00285E  6F91               	movwf	IsNetworkDevice@devType& (0+255),b
 10354  002860  EC71  F01A         	call	_IsNetworkDevice	;wreg free
 10355  002864  06E8               	decf	wreg,f,c
 10356  002866  E101 D087          	bz	l17102
 10357  00286A  0012               	return	
 10358  00286C                     l17078:
 10359                           
 10360                           ; BSR set to: 1
 10361                           ;NetworkManager.c: 293: packetsize=DeviceManagerGetDeviceData(dHdr->origin,buffer,&isSec
      +                          urePacket,&isFormed);
 10362  00286C  EE20 F006          	lfsr	2,6
 10363  002870  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10364  002872  26D9               	addwf	fsr2l,f,c
 10365  002874  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10366  002876  22DA               	addwfc	fsr2h,f,c
 10367  002878  CFDE F081          	movff	postinc2,DeviceManagerGetDeviceData@address
 10368  00287C  CFDD F082          	movff	postdec2,DeviceManagerGetDeviceData@address+1
 10369  002880  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
 10370  002882  0100               	movlb	0	; () banked
 10371  002884  6F83               	movwf	DeviceManagerGetDeviceData@data& (0+255),b
 10372  002886  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
 10373  002888  6F84               	movwf	(DeviceManagerGetDeviceData@data+1)& (0+255),b
 10374  00288A  0E83               	movlw	low NetworkManagerProcessIncomingData@isSecurePacket
 10375  00288C  6F85               	movwf	DeviceManagerGetDeviceData@isSecure& (0+255),b
 10376  00288E  0E01               	movlw	high NetworkManagerProcessIncomingData@isSecurePacket
 10377  002890  6F86               	movwf	(DeviceManagerGetDeviceData@isSecure+1)& (0+255),b
 10378  002892  0E80               	movlw	low NetworkManagerProcessIncomingData@isFormed
 10379  002894  6F87               	movwf	DeviceManagerGetDeviceData@isFormed& (0+255),b
 10380  002896  0E01               	movlw	high NetworkManagerProcessIncomingData@isFormed
 10381  002898  6F88               	movwf	(DeviceManagerGetDeviceData@isFormed+1)& (0+255),b
 10382  00289A  ECC3  F01C         	call	_DeviceManagerGetDeviceData	;wreg free
 10383  00289E  C081  F181         	movff	?_DeviceManagerGetDeviceData,NetworkManagerProcessIncomingData@packetsize
 10384  0028A2  C082  F182         	movff	?_DeviceManagerGetDeviceData+1,NetworkManagerProcessIncomingData@packetsize+1
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;NetworkManager.c: 294: if(packetsize>0)
 10388  0028A6  0101               	movlb	1	; () banked
 10389  0028A8  5181               	movf	NetworkManagerProcessIncomingData@packetsize& (0+255),w,b
 10390  0028AA  1182               	iorwf	(NetworkManagerProcessIncomingData@packetsize+1)& (0+255),w,b
 10391  0028AC  B4D8               	btfsc	status,2,c
 10392  0028AE  0012               	return	
 10393                           
 10394                           ; BSR set to: 1
 10395                           ;NetworkManager.c: 295: {
 10396                           ;NetworkManager.c: 296: if(isFormed==1)
 10397  0028B0  0580               	decf	NetworkManagerProcessIncomingData@isFormed& (0+255),w,b
 10398  0028B2  E117               	bnz	l17086
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;NetworkManager.c: 297: {
 10402                           ;NetworkManager.c: 298: TMSendFormedPacketToRFD(dHdr->origin, buffer, packetsize, isSecu
      +                          rePacket);
 10403  0028B4  EE20 F006          	lfsr	2,6
 10404  0028B8  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10405  0028BA  26D9               	addwf	fsr2l,f,c
 10406  0028BC  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10407  0028BE  22DA               	addwfc	fsr2h,f,c
 10408  0028C0  CFDE F0C5          	movff	postinc2,TMSendFormedPacketToRFD@device
 10409  0028C4  CFDD F0C6          	movff	postdec2,TMSendFormedPacketToRFD@device+1
 10410  0028C8  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
 10411  0028CA  0100               	movlb	0	; () banked
 10412  0028CC  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
 10413  0028CE  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
 10414  0028D0  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
 10415  0028D2  C181  F0C9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendFormedPacketToRFD@size
 10416  0028D6  C182  F0CA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendFormedPacketToRFD@size+1
 10417  0028DA  C183  F0CB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendFormedPacketToRFD@isSecure
 10418  0028DE  EFC5  F011         	goto	_TMSendFormedPacketToRFD	;wreg free
 10419  0028E2                     l17086:
 10420                           
 10421                           ; BSR set to: 1
 10422                           ;NetworkManager.c: 300: {
 10423                           ;NetworkManager.c: 301: TMSendDataToRFD(dHdr->origin,PacketData,buffer,packetsize,isSecu
      +                          rePacket);
 10424  0028E2  EE20 F006          	lfsr	2,6
 10425  0028E6  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10426  0028E8  26D9               	addwf	fsr2l,f,c
 10427  0028EA  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10428  0028EC  22DA               	addwfc	fsr2h,f,c
 10429  0028EE  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
 10430  0028F2  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
 10431  0028F6  0E23               	movlw	35
 10432  0028F8  0100               	movlb	0	; () banked
 10433  0028FA  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
 10434  0028FC  0E40               	movlw	low NetworkManagerProcessIncomingData@buffer
 10435  0028FE  6FD7               	movwf	TMSendDataToRFD@data& (0+255),b
 10436  002900  0E01               	movlw	high NetworkManagerProcessIncomingData@buffer
 10437  002902  6FD8               	movwf	(TMSendDataToRFD@data+1)& (0+255),b
 10438  002904  C181  F0D9         	movff	NetworkManagerProcessIncomingData@packetsize,TMSendDataToRFD@size
 10439  002908  C182  F0DA         	movff	NetworkManagerProcessIncomingData@packetsize+1,TMSendDataToRFD@size+1
 10440  00290C  C183  F0DB         	movff	NetworkManagerProcessIncomingData@isSecurePacket,TMSendDataToRFD@isSecure
 10441  002910  EFAD  F035         	goto	_TMSendDataToRFD	;wreg free
 10442  002914                     l17088:
 10443                           
 10444                           ; BSR set to: 1
 10445                           ;NetworkManager.c: 307: TMSendDataToRFD(dHdr->origin,PacketCheckinReply,(0),0, isSecure)
      +                          ;
 10446  002914  EE20 F006          	lfsr	2,6
 10447  002918  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10448  00291A  26D9               	addwf	fsr2l,f,c
 10449  00291C  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10450  00291E  22DA               	addwfc	fsr2h,f,c
 10451  002920  CFDE F0D4          	movff	postinc2,TMSendDataToRFD@device
 10452  002924  CFDD F0D5          	movff	postdec2,TMSendDataToRFD@device+1
 10453  002928  0E25               	movlw	37
 10454  00292A  0100               	movlb	0	; () banked
 10455  00292C  6FD6               	movwf	TMSendDataToRFD@pType& (0+255),b
 10456  00292E  6BD7               	clrf	TMSendDataToRFD@data& (0+255),b
 10457  002930  6BD8               	clrf	(TMSendDataToRFD@data+1)& (0+255),b
 10458  002932  6BDA               	clrf	(TMSendDataToRFD@size+1)& (0+255),b
 10459  002934  6BD9               	clrf	TMSendDataToRFD@size& (0+255),b
 10460  002936  C0E1  F0DB         	movff	NetworkManagerProcessIncomingData@isSecure,TMSendDataToRFD@isSecure
 10461  00293A  EFAD  F035         	goto	_TMSendDataToRFD	;wreg free
 10462  00293E                     l17090:
 10463                           
 10464                           ; BSR set to: 1
 10465                           ;NetworkManager.c: 315: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
 10466  00293E  51C7               	movf	_userDataAvailable& (0+255),w,b
 10467  002940  A4D8               	btfss	status,2,c
 10468  002942  0012               	return	
 10469                           
 10470                           ; BSR set to: 1
 10471  002944  0100               	movlb	0	; () banked
 10472  002946  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10473  002948  E104               	bnz	u20950
 10474  00294A  0E0B               	movlw	11
 10475  00294C  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10476  00294E  A0D8               	btfss	status,0,c
 10477  002950  0012               	return	
 10478  002952                     u20950:
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;NetworkManager.c: 316: {
 10482                           ;NetworkManager.c: 317: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
 10483  002952  0E98               	movlw	low _userdata
 10484  002954  6F75               	movwf	memcpy@d1& (0+255),b
 10485  002956  0E06               	movlw	high _userdata
 10486  002958  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 10487  00295A  0E0A               	movlw	10
 10488  00295C  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
 10489  00295E  6F77               	movwf	memcpy@s1& (0+255),b
 10490  002960  0E00               	movlw	0
 10491  002962  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
 10492  002964  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 10493  002966  0EF6               	movlw	246
 10494  002968  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10495  00296A  6F79               	movwf	memcpy@n& (0+255),b
 10496  00296C  0EFF               	movlw	255
 10497  00296E  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10498  002970  6F7A               	movwf	(memcpy@n+1)& (0+255),b
 10499  002972  EC05  F035         	call	_memcpy	;wreg free
 10500  002976  D054               	goto	L17
 10501  002978                     l17102:
 10502                           
 10503                           ; BSR set to: 0
 10504  002978  0101               	movlb	1	; () banked
 10505  00297A  EE20 F002          	lfsr	2,2
 10506  00297E  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10507  002980  26D9               	addwf	fsr2l,f,c
 10508  002982  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10509  002984  22DA               	addwfc	fsr2h,f,c
 10510  002986  50DF               	movf	indf2,w,c
 10511                           
 10512                           ; Switch size 1, requested type "speed"
 10513                           ; Number of cases is 4, Range of values is 35 to 41
 10514                           ; switch strategies available:
 10515                           ; Name         Instructions Cycles
 10516                           ; simple_byte           13     7 (average)
 10517                           ;	Chosen strategy is simple_byte
 10518  002988  0A23               	xorlw	35	; case 35
 10519  00298A  E0D9               	bz	l17090
 10520  00298C  0A07               	xorlw	7	; case 36
 10521  00298E  E0C2               	bz	l17088
 10522  002990  0A01               	xorlw	1	; case 37
 10523  002992  B4D8               	btfsc	status,2,c
 10524  002994  0012               	return	
 10525  002996  0A0C               	xorlw	12	; case 41
 10526  002998  E101 D768          	bz	l17078
 10527                           
 10528                           ;NetworkManager.c: 327: }
 10529                           ;NetworkManager.c: 328: }else
 10530  00299C  0012               	return	
 10531  00299E                     l17104:
 10532                           
 10533                           ; BSR set to: 1
 10534                           ;NetworkManager.c: 329: {
 10535                           ;NetworkManager.c: 330: if(dHdr->packettype==PacketCheckinReply)
 10536  00299E  EE20 F002          	lfsr	2,2
 10537  0029A2  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10538  0029A4  26D9               	addwf	fsr2l,f,c
 10539  0029A6  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10540  0029A8  22DA               	addwfc	fsr2h,f,c
 10541  0029AA  0E25               	movlw	37
 10542  0029AC  18DE               	xorwf	postinc2,w,c
 10543  0029AE  E11C               	bnz	l17118
 10544                           
 10545                           ; BSR set to: 1
 10546                           ;NetworkManager.c: 331: {
 10547                           ;NetworkManager.c: 332: if( (routeInfo.hasCheckedIn==0) && (isInvalidAddress(routeInfo.p
      +                          arent)==0) )
 10548  0029B0  51DA               	movf	(_routeInfo+6)& (0+255),w,b
 10549  0029B2  E10C               	bnz	l17114
 10550                           
 10551                           ; BSR set to: 1
 10552  0029B4  C1D4  F085         	movff	_routeInfo,isInvalidAddress@address
 10553  0029B8  C1D5  F086         	movff	_routeInfo+1,isInvalidAddress@address+1
 10554  0029BC  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 10555  0029C0  0900               	iorlw	0
 10556  0029C2  E104               	bnz	l17114
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;NetworkManager.c: 333: {
 10560                           ;NetworkManager.c: 335: BeaconManagerTrigger();
 10561  0029C4  EC13  F03B         	call	_BeaconManagerTrigger	;wreg free
 10562                           
 10563                           ; BSR set to: 1
 10564                           ;NetworkManager.c: 336: routeInfo.hasCheckedIn=1;
 10565  0029C8  0E01               	movlw	1
 10566  0029CA  6FDA               	movwf	(_routeInfo+6)& (0+255),b
 10567  0029CC                     l17114:
 10568                           
 10569                           ;NetworkManager.c: 337: }
 10570                           ;NetworkManager.c: 338: CoordinatorAddr=dHdr->origin;
 10571  0029CC  0101               	movlb	1	; () banked
 10572  0029CE  EE20 F006          	lfsr	2,6
 10573  0029D2  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10574  0029D4  26D9               	addwf	fsr2l,f,c
 10575  0029D6  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10576  0029D8  22DA               	addwfc	fsr2h,f,c
 10577  0029DA  CFDE F1E1          	movff	postinc2,_CoordinatorAddr
 10578  0029DE  CFDD F1E2          	movff	postdec2,_CoordinatorAddr+1
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;NetworkManager.c: 339: nState=netOperating;
 10582  0029E2  0E04               	movlw	4
 10583  0029E4  6FC3               	movwf	_nState& (0+255),b
 10584                           
 10585                           ;NetworkManager.c: 340: }else
 10586  0029E6  0C04               	retlw	4
 10587  0029E8                     l17118:
 10588                           
 10589                           ; BSR set to: 1
 10590                           ;NetworkManager.c: 341: {
 10591                           ;NetworkManager.c: 343: if( (userDataAvailable==0) && (size>sizeof(net_data_header_t)) )
 10592  0029E8  51C7               	movf	_userDataAvailable& (0+255),w,b
 10593  0029EA  A4D8               	btfss	status,2,c
 10594  0029EC  0012               	return	
 10595                           
 10596                           ; BSR set to: 1
 10597  0029EE  0100               	movlb	0	; () banked
 10598  0029F0  51DF               	movf	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10599  0029F2  E104               	bnz	u21000
 10600  0029F4  0E0B               	movlw	11
 10601  0029F6  5DDE               	subwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10602  0029F8  A0D8               	btfss	status,0,c
 10603  0029FA  0012               	return	
 10604  0029FC                     u21000:
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;NetworkManager.c: 344: {
 10608                           ;NetworkManager.c: 345: memcpy(userdata,&data[sizeof(net_data_header_t)],size-sizeof(net
      +                          _data_header_t));
 10609  0029FC  0E98               	movlw	low _userdata
 10610  0029FE  6F75               	movwf	memcpy@d1& (0+255),b
 10611  002A00  0E06               	movlw	high _userdata
 10612  002A02  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 10613  002A04  0E0A               	movlw	10
 10614  002A06  25DC               	addwf	NetworkManagerProcessIncomingData@data& (0+255),w,b
 10615  002A08  6F77               	movwf	memcpy@s1& (0+255),b
 10616  002A0A  0E00               	movlw	0
 10617  002A0C  21DD               	addwfc	(NetworkManagerProcessIncomingData@data+1)& (0+255),w,b
 10618  002A0E  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 10619  002A10  0EF6               	movlw	246
 10620  002A12  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10621  002A14  6F79               	movwf	memcpy@n& (0+255),b
 10622  002A16  0EFF               	movlw	255
 10623  002A18  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10624  002A1A  6F7A               	movwf	(memcpy@n+1)& (0+255),b
 10625  002A1C  EC05  F035         	call	_memcpy	;wreg free
 10626  002A20                     L17:
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;NetworkManager.c: 346: userDataAvailable=1;
 10630  002A20  0E01               	movlw	1
 10631  002A22  0101               	movlb	1	; () banked
 10632  002A24  6FC7               	movwf	_userDataAvailable& (0+255),b
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;NetworkManager.c: 347: NetworkDataArrivedEvent(dHdr->origin,userdata,size-sizeof(net_da
      +                          ta_header_t),isBroadcast);
 10636  002A26  EE20 F006          	lfsr	2,6
 10637  002A2A  5184               	movf	NetworkManagerProcessIncomingData@dHdr& (0+255),w,b
 10638  002A2C  26D9               	addwf	fsr2l,f,c
 10639  002A2E  5185               	movf	(NetworkManagerProcessIncomingData@dHdr+1)& (0+255),w,b
 10640  002A30  22DA               	addwfc	fsr2h,f,c
 10641  002A32  CFDE F07B          	movff	postinc2,NetworkDataArrivedEvent@source
 10642  002A36  CFDD F07C          	movff	postdec2,NetworkDataArrivedEvent@source+1
 10643  002A3A  0E98               	movlw	low _userdata
 10644  002A3C  0100               	movlb	0	; () banked
 10645  002A3E  6F7D               	movwf	NetworkDataArrivedEvent@data& (0+255),b
 10646  002A40  0E06               	movlw	high _userdata
 10647  002A42  6F7E               	movwf	(NetworkDataArrivedEvent@data+1)& (0+255),b
 10648  002A44  0EF6               	movlw	246
 10649  002A46  25DE               	addwf	NetworkManagerProcessIncomingData@size& (0+255),w,b
 10650  002A48  6F7F               	movwf	NetworkDataArrivedEvent@size& (0+255),b
 10651  002A4A  0EFF               	movlw	255
 10652  002A4C  21DF               	addwfc	(NetworkManagerProcessIncomingData@size+1)& (0+255),w,b
 10653  002A4E  6F80               	movwf	(NetworkDataArrivedEvent@size+1)& (0+255),b
 10654  002A50  C0E0  F081         	movff	NetworkManagerProcessIncomingData@isBroadcast,NetworkDataArrivedEvent@isBroadcast
 10655  002A54  EF30  F035         	goto	_NetworkDataArrivedEvent	;wreg free
 10656  002A58                     __end_of_NetworkManagerProcessIncomingData:
 10657                           	opt stack 0
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon3	equ	0xFF0
 10665                           postinc0	equ	0xFEE
 10666                           plusw0	equ	0xFEB
 10667                           wreg	equ	0xFE8
 10668                           postdec1	equ	0xFE5
 10669                           plusw1	equ	0xFE3
 10670                           fsr1h	equ	0xFE2
 10671                           fsr1l	equ	0xFE1
 10672                           indf2	equ	0xFDF
 10673                           postinc2	equ	0xFDE
 10674                           postdec2	equ	0xFDD
 10675                           plusw2	equ	0xFDB
 10676                           fsr2h	equ	0xFDA
 10677                           fsr2l	equ	0xFD9
 10678                           status	equ	0xFD8
 10679                           
 10680 ;; *************** function _TMSendDataToRFD *****************
 10681 ;; Defined at:
 10682 ;;		line 195 in file "../TransportManager.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  device          2  116[BANK0 ] struct addr_t_def
 10685 ;;  pType           1  118[BANK0 ] enum E232
 10686 ;;  data            2  119[BANK0 ] PTR unsigned char 
 10687 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), NULL(0), TxBuffer(64), 
 10688 ;;  size            2  121[BANK0 ] unsigned int 
 10689 ;;  isSecure        1  123[BANK0 ] unsigned char 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      unsigned char 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : F/0
 10698 ;;		On exit  : F/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10701 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10702 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Totals:         0       8      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;Total ram usage:       72 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:   13
 10708 ;; This function calls:
 10709 ;;		_NetworkPrepareSendPacket
 10710 ;;		_TMSendFormedPacketToRFD
 10711 ;; This function is called by:
 10712 ;;		_NetworkUnicastData
 10713 ;;		_NetworkManagerProcessIncomingData
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text41
 10718  006B5A                     __ptext41:
 10719                           	opt stack 0
 10720  006B5A                     _TMSendDataToRFD:
 10721                           	opt stack 15
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;TransportManager.c: 197: uint8_t databuff[64];
 10725                           ;TransportManager.c: 198: size=NetworkPrepareSendPacket(device,databuff,pType,data,size)
      +                          ;
 10726                           
 10727                           ;incstack = 0
 10728  006B5A  C0D4  F07F         	movff	TMSendDataToRFD@device,NetworkPrepareSendPacket@address
 10729  006B5E  C0D5  F080         	movff	TMSendDataToRFD@device+1,NetworkPrepareSendPacket@address+1
 10730  006B62  0E00               	movlw	low TMSendDataToRFD@databuff
 10731  006B64  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 10732  006B66  0E01               	movlw	high TMSendDataToRFD@databuff
 10733  006B68  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 10734  006B6A  C0D6  F083         	movff	TMSendDataToRFD@pType,NetworkPrepareSendPacket@pType
 10735  006B6E  C0D7  F084         	movff	TMSendDataToRFD@data,NetworkPrepareSendPacket@data
 10736  006B72  C0D8  F085         	movff	TMSendDataToRFD@data+1,NetworkPrepareSendPacket@data+1
 10737  006B76  C0D9  F086         	movff	TMSendDataToRFD@size,NetworkPrepareSendPacket@size
 10738  006B7A  C0DA  F087         	movff	TMSendDataToRFD@size+1,NetworkPrepareSendPacket@size+1
 10739  006B7E  EC27  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 10740  006B82  C07F  F0D9         	movff	?_NetworkPrepareSendPacket,TMSendDataToRFD@size
 10741  006B86  C080  F0DA         	movff	?_NetworkPrepareSendPacket+1,TMSendDataToRFD@size+1
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;TransportManager.c: 199: return(TMSendFormedPacketToRFD(device, databuff, size, isSecur
      +                          e));
 10745  006B8A  C0D4  F0C5         	movff	TMSendDataToRFD@device,TMSendFormedPacketToRFD@device
 10746  006B8E  C0D5  F0C6         	movff	TMSendDataToRFD@device+1,TMSendFormedPacketToRFD@device+1
 10747  006B92  0E00               	movlw	low TMSendDataToRFD@databuff
 10748  006B94  6FC7               	movwf	TMSendFormedPacketToRFD@data& (0+255),b
 10749  006B96  0E01               	movlw	high TMSendDataToRFD@databuff
 10750  006B98  6FC8               	movwf	(TMSendFormedPacketToRFD@data+1)& (0+255),b
 10751  006B9A  C0D9  F0C9         	movff	TMSendDataToRFD@size,TMSendFormedPacketToRFD@size
 10752  006B9E  C0DA  F0CA         	movff	TMSendDataToRFD@size+1,TMSendFormedPacketToRFD@size+1
 10753  006BA2  C0DB  F0CB         	movff	TMSendDataToRFD@isSecure,TMSendFormedPacketToRFD@isSecure
 10754  006BA6  EFC5  F011         	goto	_TMSendFormedPacketToRFD	;wreg free
 10755  006BAA                     __end_of_TMSendDataToRFD:
 10756                           	opt stack 0
 10757                           tblptru	equ	0xFF8
 10758                           tblptrh	equ	0xFF7
 10759                           tblptrl	equ	0xFF6
 10760                           tablat	equ	0xFF5
 10761                           prodh	equ	0xFF4
 10762                           prodl	equ	0xFF3
 10763                           intcon3	equ	0xFF0
 10764                           postinc0	equ	0xFEE
 10765                           plusw0	equ	0xFEB
 10766                           wreg	equ	0xFE8
 10767                           postdec1	equ	0xFE5
 10768                           plusw1	equ	0xFE3
 10769                           fsr1h	equ	0xFE2
 10770                           fsr1l	equ	0xFE1
 10771                           indf2	equ	0xFDF
 10772                           postinc2	equ	0xFDE
 10773                           postdec2	equ	0xFDD
 10774                           plusw2	equ	0xFDB
 10775                           fsr2h	equ	0xFDA
 10776                           fsr2l	equ	0xFD9
 10777                           status	equ	0xFD8
 10778                           
 10779 ;; *************** function _TMSendFormedPacketToRFD *****************
 10780 ;; Defined at:
 10781 ;;		line 202 in file "../TransportManager.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  device          2  101[BANK0 ] struct addr_t_def
 10784 ;;  data            2  103[BANK0 ] PTR unsigned char 
 10785 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10786 ;;  size            2  105[BANK0 ] unsigned int 
 10787 ;;  isSecure        1  107[BANK0 ] unsigned char 
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;  parent          2  114[BANK0 ] struct addr_t_def
 10790 ;;  dhdr            2  112[BANK0 ] PTR struct net_data_head
 10791 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), 
 10792 ;;  myaddr          2  109[BANK0 ] PTR struct addr_t_def
 10793 ;;		 -> MyAddress(2), 
 10794 ;;  res             1  111[BANK0 ] unsigned char 
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      unsigned char 
 10797 ;; Registers used:
 10798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : F/0
 10801 ;;		On exit  : F/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10804 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10807 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;Total ram usage:       15 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:   12
 10811 ;; This function calls:
 10812 ;;		_BroadcastManagerDelaySend
 10813 ;;		_GetRouteAddressOfChild
 10814 ;;		_LE_RemoveNeighborDevice
 10815 ;;		_NetworkGetDeviceType
 10816 ;;		_NetworkGetPANID
 10817 ;;		_NetworkGetParentAddress
 10818 ;;		_NetworkManagerGetMyAddress
 10819 ;;		_TMSendFormedPacketTowardsCoordinator
 10820 ;;		_TunnelManagerGetTunnel
 10821 ;;		_TunnelManagerInvalidateTunnel
 10822 ;;		_isBroadcastAddress
 10823 ;;		_isSameAddress
 10824 ;;		_radioUnicast
 10825 ;; This function is called by:
 10826 ;;		_TMSendDataToRFD
 10827 ;;		_NetworkManagerProcessIncomingData
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text42
 10832  00238A                     __ptext42:
 10833                           	opt stack 0
 10834  00238A                     _TMSendFormedPacketToRFD:
 10835                           	opt stack 15
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;TransportManager.c: 204: bool res=1;
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;incstack = 0
 10842  00238A  0E01               	movlw	1
 10843  00238C  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;TransportManager.c: 205: addr_t parent;
 10847                           ;TransportManager.c: 206: addr_t *myaddr=NetworkManagerGetMyAddress();
 10848  00238E  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 10849  002392  C073  F0CD         	movff	?_NetworkManagerGetMyAddress,TMSendFormedPacketToRFD@myaddr
 10850  002396  C074  F0CE         	movff	?_NetworkManagerGetMyAddress+1,TMSendFormedPacketToRFD@myaddr+1
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;TransportManager.c: 207: net_data_header_t *dhdr=(net_data_header_t*)data;
 10854  00239A  C0C7  F0D0         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketToRFD@dhdr
 10855  00239E  C0C8  F0D1         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketToRFD@dhdr+1
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;TransportManager.c: 209: parent = TunnelManagerGetTunnel(device);
 10859  0023A2  C0C5  F0AB         	movff	TMSendFormedPacketToRFD@device,TunnelManagerGetTunnel@device
 10860  0023A6  C0C6  F0AC         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerGetTunnel@device+1
 10861  0023AA  EC67  F020         	call	_TunnelManagerGetTunnel	;wreg free
 10862  0023AE  C0AB  F0D2         	movff	?_TunnelManagerGetTunnel,TMSendFormedPacketToRFD@parent
 10863  0023B2  C0AC  F0D3         	movff	?_TunnelManagerGetTunnel+1,TMSendFormedPacketToRFD@parent+1
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;TransportManager.c: 210: if(isBroadcastAddress(parent)==1)
 10867  0023B6  C0D2  F07A         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
 10868  0023BA  C0D3  F07B         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
 10869  0023BE  ECDC  F036         	call	_isBroadcastAddress	;wreg free
 10870  0023C2  06E8               	decf	wreg,f,c
 10871  0023C4  E001 D0AB          	bnz	l16340
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;TransportManager.c: 211: {
 10875                           ;TransportManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 10876  0023C8  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 10877  0023CC  0900               	iorlw	0
 10878  0023CE  E115               	bnz	l16312
 10879                           
 10880                           ; BSR set to: 1
 10881                           ;TransportManager.c: 213: {
 10882                           ;TransportManager.c: 214: dhdr->Hops=20;
 10883  0023D0  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 10884  0023D4  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 10885  0023D8  0E14               	movlw	20
 10886  0023DA  6EDF               	movwf	indf2,c
 10887                           
 10888                           ; BSR set to: 1
 10889                           ;TransportManager.c: 215: BroadcastManagerDelaySend(data,size,isSecure,0);
 10890  0023DC  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 10891  0023E0  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 10892  0023E4  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 10893  0023E8  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 10894  0023EC  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 10895  0023F0  0100               	movlb	0	; () banked
 10896  0023F2  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 10897  0023F4  EC39  F01B         	call	_BroadcastManagerDelaySend	;wreg free
 10898                           
 10899                           ;TransportManager.c: 216: }else
 10900  0023F8  D0F9               	goto	l16360
 10901  0023FA                     l16312:
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;TransportManager.c: 217: {
 10905                           ;TransportManager.c: 219: parent=GetRouteAddressOfChild(device);
 10906  0023FA  C0C5  F08B         	movff	TMSendFormedPacketToRFD@device,GetRouteAddressOfChild@child
 10907  0023FE  C0C6  F08C         	movff	TMSendFormedPacketToRFD@device+1,GetRouteAddressOfChild@child+1
 10908  002402  EC56  F034         	call	_GetRouteAddressOfChild	;wreg free
 10909  002406  C08B  F0D2         	movff	?_GetRouteAddressOfChild,TMSendFormedPacketToRFD@parent
 10910  00240A  C08C  F0D3         	movff	?_GetRouteAddressOfChild+1,TMSendFormedPacketToRFD@parent+1
 10911                           
 10912                           ;TransportManager.c: 220: if(isBroadcastAddress(parent)==0)
 10913  00240E  C0D2  F07A         	movff	TMSendFormedPacketToRFD@parent,isBroadcastAddress@address
 10914  002412  C0D3  F07B         	movff	TMSendFormedPacketToRFD@parent+1,isBroadcastAddress@address+1
 10915  002416  ECDC  F036         	call	_isBroadcastAddress	;wreg free
 10916  00241A  0900               	iorlw	0
 10917  00241C  E160               	bnz	l16334
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;TransportManager.c: 221: {
 10921                           ;TransportManager.c: 224: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 10922  00241E  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 10923  002422  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 10924  002426  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 10925  00242A  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 10926  00242E  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 10927  002432  ECBD  F039         	call	_isSameAddress	;wreg free
 10928  002436  0900               	iorlw	0
 10929  002438  E014               	bz	l16322
 10930                           
 10931                           ; BSR set to: 0
 10932  00243A  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 10933  00243E  0900               	iorlw	0
 10934  002440  E010               	bz	l16322
 10935                           
 10936                           ; BSR set to: 1
 10937                           ;TransportManager.c: 225: {
 10938                           ;TransportManager.c: 226: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 10939  002442  C0C7  F089         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 10940  002446  C0C8  F08A         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 10941  00244A  C0C9  F08B         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 10942  00244E  C0CA  F08C         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 10943  002452  0E01               	movlw	1
 10944  002454  0100               	movlb	0	; () banked
 10945  002456  6F8D               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 10946  002458  C0CB  F08E         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 10947  00245C  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 10948  002460  D093               	goto	L4
 10949  002462                     l16322:
 10950                           
 10951                           ;TransportManager.c: 228: {
 10952                           ;TransportManager.c: 229: res=radioUnicast(parent,NetworkGetPANID(),data,size, isSecure)
      +                          ;
 10953  002462  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
 10954  002466  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
 10955  00246A  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 10956  00246E  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 10957  002472  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 10958  002476  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 10959  00247A  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 10960  00247E  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 10961  002482  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 10962  002486  EC84  F035         	call	_radioUnicast	;wreg free
 10963  00248A  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;TransportManager.c: 230: if(res==0)
 10967  00248C  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 10968  00248E  E001 D0AD          	bnz	l16360
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;TransportManager.c: 231: {
 10972                           ;TransportManager.c: 232: LE_RemoveNeighborDevice(parent);
 10973  002492  C0D2  F096         	movff	TMSendFormedPacketToRFD@parent,LE_RemoveNeighborDevice@device
 10974  002496  C0D3  F097         	movff	TMSendFormedPacketToRFD@parent+1,LE_RemoveNeighborDevice@device+1
 10975  00249A  EC35  F033         	call	_LE_RemoveNeighborDevice	;wreg free
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;TransportManager.c: 233: if(dhdr->packettype==PacketData)
 10979  00249E  EE20 F002          	lfsr	2,2
 10980  0024A2  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10981  0024A4  26D9               	addwf	fsr2l,f,c
 10982  0024A6  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10983  0024A8  22DA               	addwfc	fsr2h,f,c
 10984  0024AA  0E23               	movlw	35
 10985  0024AC  18DE               	xorwf	postinc2,w,c
 10986  0024AE  E108               	bnz	l16332
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;TransportManager.c: 234: {
 10990                           ;TransportManager.c: 235: dhdr->packettype=PacketRoutedData;
 10991  0024B0  EE20 F002          	lfsr	2,2
 10992  0024B4  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 10993  0024B6  26D9               	addwf	fsr2l,f,c
 10994  0024B8  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 10995  0024BA  22DA               	addwfc	fsr2h,f,c
 10996  0024BC  0E26               	movlw	38
 10997  0024BE  6EDF               	movwf	indf2,c
 10998  0024C0                     l16332:
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;TransportManager.c: 236: }
 11002                           ;TransportManager.c: 237: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 11003  0024C0  C0C7  F089         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 11004  0024C4  C0C8  F08A         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 11005  0024C8  C0C9  F08B         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 11006  0024CC  C0CA  F08C         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 11007  0024D0  0E01               	movlw	1
 11008  0024D2  6F8D               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 11009  0024D4  C0CB  F08E         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 11010  0024D8  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 11011  0024DC  D055               	goto	L4
 11012  0024DE                     l16334:
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;TransportManager.c: 241: {
 11016                           ;TransportManager.c: 242: if(dhdr->packettype==PacketData)
 11017  0024DE  EE20 F002          	lfsr	2,2
 11018  0024E2  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 11019  0024E4  26D9               	addwf	fsr2l,f,c
 11020  0024E6  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 11021  0024E8  22DA               	addwfc	fsr2h,f,c
 11022  0024EA  0E23               	movlw	35
 11023  0024EC  18DE               	xorwf	postinc2,w,c
 11024  0024EE  E108               	bnz	l16338
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;TransportManager.c: 243: {
 11028                           ;TransportManager.c: 244: dhdr->packettype=PacketRoutedData;
 11029  0024F0  EE20 F002          	lfsr	2,2
 11030  0024F4  51D0               	movf	TMSendFormedPacketToRFD@dhdr& (0+255),w,b
 11031  0024F6  26D9               	addwf	fsr2l,f,c
 11032  0024F8  51D1               	movf	(TMSendFormedPacketToRFD@dhdr+1)& (0+255),w,b
 11033  0024FA  22DA               	addwfc	fsr2h,f,c
 11034  0024FC  0E26               	movlw	38
 11035  0024FE  6EDF               	movwf	indf2,c
 11036  002500                     l16338:
 11037                           
 11038                           ; BSR set to: 0
 11039                           ;TransportManager.c: 245: }
 11040                           ;TransportManager.c: 246: TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecure);
 11041  002500  C0C7  F089         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 11042  002504  C0C8  F08A         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 11043  002508  C0C9  F08B         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 11044  00250C  C0CA  F08C         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 11045  002510  0E01               	movlw	1
 11046  002512  6F8D               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 11047  002514  C0CB  F08E         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 11048  002518  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;TransportManager.c: 247: }
 11052                           ;TransportManager.c: 248: }
 11053                           ;TransportManager.c: 249: }else
 11054  00251C  D067               	goto	l16360
 11055  00251E                     l16340:
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;TransportManager.c: 250: {
 11059                           ;TransportManager.c: 252: if(isSameAddress(parent,*myaddr))
 11060  00251E  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 11061  002522  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 11062  002526  C0CD  FFD9         	movff	TMSendFormedPacketToRFD@myaddr,fsr2l
 11063  00252A  C0CE  FFDA         	movff	TMSendFormedPacketToRFD@myaddr+1,fsr2h
 11064  00252E  CFDE F07F          	movff	postinc2,isSameAddress@a2
 11065  002532  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 11066  002536  ECBD  F039         	call	_isSameAddress	;wreg free
 11067  00253A  0900               	iorlw	0
 11068  00253C  E004               	bz	l16344
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;TransportManager.c: 253: {
 11072                           ;TransportManager.c: 254: parent=device;
 11073  00253E  C0C5  F0D2         	movff	TMSendFormedPacketToRFD@device,TMSendFormedPacketToRFD@parent
 11074  002542  C0C6  F0D3         	movff	TMSendFormedPacketToRFD@device+1,TMSendFormedPacketToRFD@parent+1
 11075  002546                     l16344:
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;TransportManager.c: 255: }
 11079                           ;TransportManager.c: 256: if( (isSameAddress(parent,NetworkGetParentAddress())) && (Netw
      +                          orkGetDeviceType()!=DeviceCoordinator) )
 11080  002546  C0D2  F07D         	movff	TMSendFormedPacketToRFD@parent,isSameAddress@a1
 11081  00254A  C0D3  F07E         	movff	TMSendFormedPacketToRFD@parent+1,isSameAddress@a1+1
 11082  00254E  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 11083  002552  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 11084  002556  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 11085  00255A  ECBD  F039         	call	_isSameAddress	;wreg free
 11086  00255E  0900               	iorlw	0
 11087  002560  E015               	bz	l16350
 11088                           
 11089                           ; BSR set to: 0
 11090  002562  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 11091  002566  0900               	iorlw	0
 11092  002568  E011               	bz	l16350
 11093                           
 11094                           ; BSR set to: 1
 11095                           ;TransportManager.c: 257: {
 11096                           ;TransportManager.c: 258: res=TMSendFormedPacketTowardsCoordinator(data, size, 1, isSecu
      +                          re);
 11097  00256A  C0C7  F089         	movff	TMSendFormedPacketToRFD@data,TMSendFormedPacketTowardsCoordinator@data
 11098  00256E  C0C8  F08A         	movff	TMSendFormedPacketToRFD@data+1,TMSendFormedPacketTowardsCoordinator@data+1
 11099  002572  C0C9  F08B         	movff	TMSendFormedPacketToRFD@size,TMSendFormedPacketTowardsCoordinator@size
 11100  002576  C0CA  F08C         	movff	TMSendFormedPacketToRFD@size+1,TMSendFormedPacketTowardsCoordinator@size+1
 11101  00257A  0E01               	movlw	1
 11102  00257C  0100               	movlb	0	; () banked
 11103  00257E  6F8D               	movwf	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),b
 11104  002580  C0CB  F08E         	movff	TMSendFormedPacketToRFD@isSecure,TMSendFormedPacketTowardsCoordinator@isSecure
 11105  002584  ECBF  F021         	call	_TMSendFormedPacketTowardsCoordinator	;wreg free
 11106  002588                     L4:
 11107  002588  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 11108                           
 11109                           ;TransportManager.c: 259: }else
 11110  00258A  D030               	goto	l16360
 11111  00258C                     l16350:
 11112                           
 11113                           ;TransportManager.c: 260: {
 11114                           ;TransportManager.c: 261: res=radioUnicast(parent,NetworkGetPANID(),data,size,isSecure);
 11115  00258C  C0D2  F0BC         	movff	TMSendFormedPacketToRFD@parent,radioUnicast@dest
 11116  002590  C0D3  F0BD         	movff	TMSendFormedPacketToRFD@parent+1,radioUnicast@dest+1
 11117  002594  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 11118  002598  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 11119  00259C  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 11120  0025A0  C0C7  F0C0         	movff	TMSendFormedPacketToRFD@data,radioUnicast@data
 11121  0025A4  C0C8  F0C1         	movff	TMSendFormedPacketToRFD@data+1,radioUnicast@data+1
 11122  0025A8  C0C9  F0C2         	movff	TMSendFormedPacketToRFD@size,radioUnicast@datasize
 11123  0025AC  C0CB  F0C3         	movff	TMSendFormedPacketToRFD@isSecure,radioUnicast@isSecure
 11124  0025B0  EC84  F035         	call	_radioUnicast	;wreg free
 11125  0025B4  6FCF               	movwf	TMSendFormedPacketToRFD@res& (0+255),b
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;TransportManager.c: 262: if(res==0)
 11129  0025B6  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 11130  0025B8  E119               	bnz	l16360
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;TransportManager.c: 263: {
 11134                           ;TransportManager.c: 264: TunnelManagerInvalidateTunnel(device);
 11135  0025BA  C0C5  F081         	movff	TMSendFormedPacketToRFD@device,TunnelManagerInvalidateTunnel@device
 11136  0025BE  C0C6  F082         	movff	TMSendFormedPacketToRFD@device+1,TunnelManagerInvalidateTunnel@device+1
 11137  0025C2  EC5D  F02F         	call	_TunnelManagerInvalidateTunnel	;wreg free
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;TransportManager.c: 265: dhdr->Hops=20;
 11141  0025C6  C0D0  FFD9         	movff	TMSendFormedPacketToRFD@dhdr,fsr2l
 11142  0025CA  C0D1  FFDA         	movff	TMSendFormedPacketToRFD@dhdr+1,fsr2h
 11143  0025CE  0E14               	movlw	20
 11144  0025D0  6EDF               	movwf	indf2,c
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;TransportManager.c: 266: BroadcastManagerDelaySend(data,size,isSecure,0);
 11148  0025D2  C0C7  F09F         	movff	TMSendFormedPacketToRFD@data,BroadcastManagerDelaySend@pkt
 11149  0025D6  C0C8  F0A0         	movff	TMSendFormedPacketToRFD@data+1,BroadcastManagerDelaySend@pkt+1
 11150  0025DA  C0C9  F0A1         	movff	TMSendFormedPacketToRFD@size,BroadcastManagerDelaySend@size
 11151  0025DE  C0CA  F0A2         	movff	TMSendFormedPacketToRFD@size+1,BroadcastManagerDelaySend@size+1
 11152  0025E2  C0CB  F0A3         	movff	TMSendFormedPacketToRFD@isSecure,BroadcastManagerDelaySend@isSecure
 11153  0025E6  6BA4               	clrf	BroadcastManagerDelaySend@isInterPan& (0+255),b
 11154  0025E8  EC39  F01B         	call	_BroadcastManagerDelaySend	;wreg free
 11155  0025EC                     l16360:
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;TransportManager.c: 267: }
 11159                           ;TransportManager.c: 268: }
 11160                           ;TransportManager.c: 269: }
 11161                           ;TransportManager.c: 270: return(res);
 11162  0025EC  51CF               	movf	TMSendFormedPacketToRFD@res& (0+255),w,b
 11163                           
 11164                           ; BSR set to: 0
 11165  0025EE  0012               	return		;funcret
 11166  0025F0                     __end_of_TMSendFormedPacketToRFD:
 11167                           	opt stack 0
 11168                           tblptru	equ	0xFF8
 11169                           tblptrh	equ	0xFF7
 11170                           tblptrl	equ	0xFF6
 11171                           tablat	equ	0xFF5
 11172                           prodh	equ	0xFF4
 11173                           prodl	equ	0xFF3
 11174                           intcon3	equ	0xFF0
 11175                           postinc0	equ	0xFEE
 11176                           plusw0	equ	0xFEB
 11177                           wreg	equ	0xFE8
 11178                           postdec1	equ	0xFE5
 11179                           plusw1	equ	0xFE3
 11180                           fsr1h	equ	0xFE2
 11181                           fsr1l	equ	0xFE1
 11182                           indf2	equ	0xFDF
 11183                           postinc2	equ	0xFDE
 11184                           postdec2	equ	0xFDD
 11185                           plusw2	equ	0xFDB
 11186                           fsr2h	equ	0xFDA
 11187                           fsr2l	equ	0xFD9
 11188                           status	equ	0xFD8
 11189                           
 11190 ;; *************** function _TunnelManagerInvalidateTunnel *****************
 11191 ;; Defined at:
 11192 ;;		line 96 in file "../TunnelManager.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  device          2   33[BANK0 ] struct addr_t_def
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  i               2   39[BANK0 ] unsigned int 
 11197 ;;  addr            2   37[BANK0 ] struct addr_t_def
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : F/0
 11204 ;;		On exit  : F/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11208 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11210 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11211 ;;Total ram usage:        8 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    7
 11214 ;; This function calls:
 11215 ;;		_NetworkAddressSizeGet
 11216 ;;		_isSameAddress
 11217 ;;		_memcpy
 11218 ;;		_memset
 11219 ;; This function is called by:
 11220 ;;		_radioReceivedPacket
 11221 ;;		_TMSendFormedPacketToRFD
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text43
 11226  005EBA                     __ptext43:
 11227                           	opt stack 0
 11228  005EBA                     _TunnelManagerInvalidateTunnel:
 11229                           	opt stack 19
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;TunnelManager.c: 98: uint16_t i;
 11233                           ;TunnelManager.c: 99: addr_t addr;
 11234                           ;TunnelManager.c: 101: memcpy((uint8_t*)&addr,&device,NetworkAddressSizeGet());
 11235                           
 11236                           ; BSR set to: 0
 11237                           ;incstack = 0
 11238  005EBA  0E85               	movlw	low TunnelManagerInvalidateTunnel@addr
 11239  005EBC  6F75               	movwf	memcpy@d1& (0+255),b
 11240  005EBE  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 11241  005EC0  0E81               	movlw	low TunnelManagerInvalidateTunnel@device
 11242  005EC2  6F77               	movwf	memcpy@s1& (0+255),b
 11243  005EC4  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 11244  005EC6  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 11245  005ECA  0100               	movlb	0	; () banked
 11246  005ECC  6F79               	movwf	memcpy@n& (0+255),b
 11247  005ECE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 11248  005ED0  EC05  F035         	call	_memcpy	;wreg free
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;TunnelManager.c: 103: for(i=0;i<10;i++)
 11252  005ED4  6B87               	clrf	TunnelManagerInvalidateTunnel@i& (0+255),b
 11253  005ED6  6B88               	clrf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 11254  005ED8                     l15952:
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;TunnelManager.c: 104: {
 11258                           ;TunnelManager.c: 105: if(isSameAddress(addr,tunnels[i].devAddress)==1)
 11259  005ED8  C085  F07D         	movff	TunnelManagerInvalidateTunnel@addr,isSameAddress@a1
 11260  005EDC  C086  F07E         	movff	TunnelManagerInvalidateTunnel@addr+1,isSameAddress@a1+1
 11261  005EE0  0E0C               	movlw	12
 11262  005EE2  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 11263  005EE4  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 11264  005EE8  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 11265  005EEC  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 11266  005EEE  50F3               	movf	prodl,w,c
 11267  005EF0  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 11268  005EF2  0E08               	movlw	low (_tunnels+8)
 11269  005EF4  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 11270  005EF6  6ED9               	movwf	fsr2l,c
 11271  005EF8  0E04               	movlw	high (_tunnels+8)
 11272  005EFA  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 11273  005EFC  6EDA               	movwf	fsr2h,c
 11274  005EFE  CFDE F07F          	movff	postinc2,isSameAddress@a2
 11275  005F02  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 11276  005F06  ECBD  F039         	call	_isSameAddress	;wreg free
 11277  005F0A  06E8               	decf	wreg,f,c
 11278  005F0C  E116               	bnz	l15956
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;TunnelManager.c: 106: {
 11282                           ;TunnelManager.c: 107: memset(&tunnels[i].TxTime,0x00,sizeof(TickMS));
 11283  005F0E  0E0C               	movlw	12
 11284  005F10  0387               	mulwf	TunnelManagerInvalidateTunnel@i& (0+255),b
 11285  005F12  CFF3 F083          	movff	prodl,??_TunnelManagerInvalidateTunnel
 11286  005F16  CFF4 F084          	movff	prodh,??_TunnelManagerInvalidateTunnel+1
 11287  005F1A  0388               	mulwf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),b
 11288  005F1C  50F3               	movf	prodl,w,c
 11289  005F1E  2784               	addwf	(??_TunnelManagerInvalidateTunnel+1)& (0+255),f,b
 11290  005F20  0E00               	movlw	low _tunnels
 11291  005F22  2583               	addwf	??_TunnelManagerInvalidateTunnel& (0+255),w,b
 11292  005F24  6F73               	movwf	memset@p1& (0+255),b
 11293  005F26  0E04               	movlw	high _tunnels
 11294  005F28  2184               	addwfc	(??_TunnelManagerInvalidateTunnel+1)& (0+255),w,b
 11295  005F2A  6F74               	movwf	(memset@p1+1)& (0+255),b
 11296  005F2C  6B76               	clrf	(memset@c+1)& (0+255),b
 11297  005F2E  6B75               	clrf	memset@c& (0+255),b
 11298  005F30  6B78               	clrf	(memset@n+1)& (0+255),b
 11299  005F32  0E08               	movlw	8
 11300  005F34  6F77               	movwf	memset@n& (0+255),b
 11301  005F36  EC47  F039         	call	_memset	;wreg free
 11302  005F3A                     l15956:
 11303                           
 11304                           ; BSR set to: 0
 11305  005F3A  4B87               	infsnz	TunnelManagerInvalidateTunnel@i& (0+255),f,b
 11306  005F3C  2B88               	incf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),f,b
 11307                           
 11308                           ; BSR set to: 0
 11309  005F3E  5188               	movf	(TunnelManagerInvalidateTunnel@i+1)& (0+255),w,b
 11310  005F40  E103               	bnz	u19140
 11311  005F42  0E0A               	movlw	10
 11312  005F44  5D87               	subwf	TunnelManagerInvalidateTunnel@i& (0+255),w,b
 11313  005F46  E3C8               	bnc	l15952
 11314  005F48                     u19140:
 11315                           
 11316                           ; BSR set to: 0
 11317  005F48  0012               	return		;funcret
 11318  005F4A                     __end_of_TunnelManagerInvalidateTunnel:
 11319                           	opt stack 0
 11320                           tblptru	equ	0xFF8
 11321                           tblptrh	equ	0xFF7
 11322                           tblptrl	equ	0xFF6
 11323                           tablat	equ	0xFF5
 11324                           prodh	equ	0xFF4
 11325                           prodl	equ	0xFF3
 11326                           intcon3	equ	0xFF0
 11327                           postinc0	equ	0xFEE
 11328                           plusw0	equ	0xFEB
 11329                           wreg	equ	0xFE8
 11330                           postdec1	equ	0xFE5
 11331                           plusw1	equ	0xFE3
 11332                           fsr1h	equ	0xFE2
 11333                           fsr1l	equ	0xFE1
 11334                           indf2	equ	0xFDF
 11335                           postinc2	equ	0xFDE
 11336                           postdec2	equ	0xFDD
 11337                           plusw2	equ	0xFDB
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342 ;; *************** function _TunnelManagerGetTunnel *****************
 11343 ;; Defined at:
 11344 ;;		line 70 in file "../TunnelManager.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  device          2   75[BANK0 ] struct addr_t_def
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  trec            8   83[BANK0 ] struct TickMS_t_def
 11349 ;;  i               2   95[BANK0 ] unsigned int 
 11350 ;;  retAddr         2   93[BANK0 ] struct addr_t_def
 11351 ;;  addr            2   91[BANK0 ] struct addr_t_def
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  2   75[BANK0 ] struct addr_t_def
 11354 ;; Registers used:
 11355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11356 ;; Tracked objects:
 11357 ;;		On entry : F/0
 11358 ;;		On exit  : F/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11361 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11362 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;Total ram usage:       22 bytes
 11366 ;; Hardware stack levels used:    1
 11367 ;; Hardware stack levels required when called:    9
 11368 ;; This function calls:
 11369 ;;		_MSTickGetDiffNow
 11370 ;;		_NetworkAddressSizeGet
 11371 ;;		_isSameAddress
 11372 ;;		_memcpy
 11373 ;;		_memset
 11374 ;; This function is called by:
 11375 ;;		_radioReceivedPacket
 11376 ;;		_TMSendFormedPacketToRFD
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text44
 11381  0040CE                     __ptext44:
 11382                           	opt stack 0
 11383  0040CE                     _TunnelManagerGetTunnel:
 11384                           	opt stack 17
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;TunnelManager.c: 72: addr_t retAddr;
 11388                           ;TunnelManager.c: 73: uint16_t i;
 11389                           ;TunnelManager.c: 74: TickMS trec;
 11390                           ;TunnelManager.c: 75: addr_t addr;
 11391                           ;TunnelManager.c: 77: memset(&retAddr,0xff,sizeof(retAddr));
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;incstack = 0
 11395  0040CE  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 11396  0040D0  6F73               	movwf	memset@p1& (0+255),b
 11397  0040D2  6B74               	clrf	(memset@p1+1)& (0+255),b
 11398  0040D4  6B76               	clrf	(memset@c+1)& (0+255),b
 11399  0040D6  6975               	setf	memset@c& (0+255),b
 11400  0040D8  6B78               	clrf	(memset@n+1)& (0+255),b
 11401  0040DA  0E02               	movlw	2
 11402  0040DC  6F77               	movwf	memset@n& (0+255),b
 11403  0040DE  EC47  F039         	call	_memset	;wreg free
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;TunnelManager.c: 78: memcpy((uint8_t*)&addr,(uint8_t*)&device,NetworkAddressSizeGet());
 11407  0040E2  0EBB               	movlw	low TunnelManagerGetTunnel@addr
 11408  0040E4  6F75               	movwf	memcpy@d1& (0+255),b
 11409  0040E6  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 11410  0040E8  0EAB               	movlw	low TunnelManagerGetTunnel@device
 11411  0040EA  6F77               	movwf	memcpy@s1& (0+255),b
 11412  0040EC  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 11413  0040EE  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 11414  0040F2  0100               	movlb	0	; () banked
 11415  0040F4  6F79               	movwf	memcpy@n& (0+255),b
 11416  0040F6  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 11417  0040F8  EC05  F035         	call	_memcpy	;wreg free
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;TunnelManager.c: 80: for(i=0;i<10;i++)
 11421  0040FC  6BBF               	clrf	TunnelManagerGetTunnel@i& (0+255),b
 11422  0040FE  6BC0               	clrf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11423  004100                     l15902:
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;TunnelManager.c: 81: {
 11427                           ;TunnelManager.c: 82: if((isSameAddress(addr,tunnels[i].devAddress)==1) && (((tunnels[i]
      +                          .TxTime.msb==0) && (tunnels[i].TxTime.lsb==0))==0))
 11428  004100  C0BB  F07D         	movff	TunnelManagerGetTunnel@addr,isSameAddress@a1
 11429  004104  C0BC  F07E         	movff	TunnelManagerGetTunnel@addr+1,isSameAddress@a1+1
 11430  004108  0E0C               	movlw	12
 11431  00410A  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11432  00410C  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 11433  004110  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 11434  004114  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11435  004116  50F3               	movf	prodl,w,c
 11436  004118  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11437  00411A  0E08               	movlw	low (_tunnels+8)
 11438  00411C  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11439  00411E  6ED9               	movwf	fsr2l,c
 11440  004120  0E04               	movlw	high (_tunnels+8)
 11441  004122  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11442  004124  6EDA               	movwf	fsr2h,c
 11443  004126  CFDE F07F          	movff	postinc2,isSameAddress@a2
 11444  00412A  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 11445  00412E  ECBD  F039         	call	_isSameAddress	;wreg free
 11446  004132  06E8               	decf	wreg,f,c
 11447  004134  E16C               	bnz	l15914
 11448                           
 11449                           ; BSR set to: 0
 11450  004136  0E0C               	movlw	12
 11451  004138  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11452  00413A  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 11453  00413E  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 11454  004142  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11455  004144  50F3               	movf	prodl,w,c
 11456  004146  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11457  004148  0E04               	movlw	low (_tunnels+4)
 11458  00414A  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11459  00414C  6ED9               	movwf	fsr2l,c
 11460  00414E  0E04               	movlw	high (_tunnels+4)
 11461  004150  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11462  004152  6EDA               	movwf	fsr2h,c
 11463  004154  50DE               	movf	postinc2,w,c
 11464  004156  10DE               	iorwf	postinc2,w,c
 11465  004158  10DE               	iorwf	postinc2,w,c
 11466  00415A  10DE               	iorwf	postinc2,w,c
 11467  00415C  E114               	bnz	l15908
 11468                           
 11469                           ; BSR set to: 0
 11470  00415E  0E0C               	movlw	12
 11471  004160  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11472  004162  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 11473  004166  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 11474  00416A  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11475  00416C  50F3               	movf	prodl,w,c
 11476  00416E  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11477  004170  0E00               	movlw	low _tunnels
 11478  004172  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11479  004174  6ED9               	movwf	fsr2l,c
 11480  004176  0E04               	movlw	high _tunnels
 11481  004178  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11482  00417A  6EDA               	movwf	fsr2h,c
 11483  00417C  50DE               	movf	postinc2,w,c
 11484  00417E  10DE               	iorwf	postinc2,w,c
 11485  004180  10DE               	iorwf	postinc2,w,c
 11486  004182  10DE               	iorwf	postinc2,w,c
 11487  004184  E044               	bz	l15914
 11488  004186                     l15908:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;TunnelManager.c: 83: {
 11492                           ;TunnelManager.c: 84: trec=tunnels[i].TxTime;
 11493  004186  0E0C               	movlw	12
 11494  004188  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11495  00418A  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 11496  00418E  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 11497  004192  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11498  004194  50F3               	movf	prodl,w,c
 11499  004196  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11500  004198  0E00               	movlw	low _tunnels
 11501  00419A  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11502  00419C  6ED9               	movwf	fsr2l,c
 11503  00419E  0E04               	movlw	high _tunnels
 11504  0041A0  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11505  0041A2  6EDA               	movwf	fsr2h,c
 11506  0041A4  EE10  F0B3         	lfsr	1,TunnelManagerGetTunnel@trec
 11507  0041A8  0E07               	movlw	7
 11508  0041AA                     u19061:
 11509  0041AA  CFDB FFE3          	movff	plusw2,plusw1
 11510  0041AE  06E8               	decf	wreg,f,c
 11511  0041B0  E2FC               	bc	u19061
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;TunnelManager.c: 86: if(MSTickGetDiffNow(trec)<tmTimeout)
 11515  0041B2  EE20  F0B3         	lfsr	2,TunnelManagerGetTunnel@trec
 11516  0041B6  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 11517  0041BA  0E07               	movlw	7
 11518  0041BC                     u19071:
 11519  0041BC  CFDB FFEB          	movff	plusw2,plusw0
 11520  0041C0  06E8               	decf	wreg,f,c
 11521  0041C2  E2FC               	bc	u19071
 11522  0041C4  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 11523  0041C8  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 11524  0041CA  E121               	bnz	l15914
 11525  0041CC  0E60               	movlw	96
 11526  0041CE  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 11527  0041D0  0E5B               	movlw	91
 11528  0041D2  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 11529  0041D4  0E03               	movlw	3
 11530  0041D6  5991               	subwfb	(?_MSTickGetDiffNow+2)& (0+255),w,b
 11531  0041D8  E21A               	bc	l15914
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;TunnelManager.c: 87: {
 11535                           ;TunnelManager.c: 88: memcpy((uint8_t*)&retAddr,(uint8_t*)&tunnels[i].parent,NetworkAddr
      +                          essSizeGet());
 11536  0041DA  0EBD               	movlw	low TunnelManagerGetTunnel@retAddr
 11537  0041DC  6F75               	movwf	memcpy@d1& (0+255),b
 11538  0041DE  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 11539  0041E0  0E0C               	movlw	12
 11540  0041E2  03BF               	mulwf	TunnelManagerGetTunnel@i& (0+255),b
 11541  0041E4  CFF3 F0AD          	movff	prodl,??_TunnelManagerGetTunnel
 11542  0041E8  CFF4 F0AE          	movff	prodh,??_TunnelManagerGetTunnel+1
 11543  0041EC  03C0               	mulwf	(TunnelManagerGetTunnel@i+1)& (0+255),b
 11544  0041EE  50F3               	movf	prodl,w,c
 11545  0041F0  27AE               	addwf	(??_TunnelManagerGetTunnel+1)& (0+255),f,b
 11546  0041F2  0E0A               	movlw	low (_tunnels+10)
 11547  0041F4  25AD               	addwf	??_TunnelManagerGetTunnel& (0+255),w,b
 11548  0041F6  6F77               	movwf	memcpy@s1& (0+255),b
 11549  0041F8  0E04               	movlw	high (_tunnels+10)
 11550  0041FA  21AE               	addwfc	(??_TunnelManagerGetTunnel+1)& (0+255),w,b
 11551  0041FC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 11552  0041FE  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 11553  004202  0100               	movlb	0	; () banked
 11554  004204  6F79               	movwf	memcpy@n& (0+255),b
 11555  004206  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 11556  004208  EC05  F035         	call	_memcpy	;wreg free
 11557                           
 11558                           ;TunnelManager.c: 89: break;
 11559  00420C  D008               	goto	l1638
 11560  00420E                     l15914:
 11561                           
 11562                           ; BSR set to: 0
 11563  00420E  4BBF               	infsnz	TunnelManagerGetTunnel@i& (0+255),f,b
 11564  004210  2BC0               	incf	(TunnelManagerGetTunnel@i+1)& (0+255),f,b
 11565                           
 11566                           ; BSR set to: 0
 11567  004212  51C0               	movf	(TunnelManagerGetTunnel@i+1)& (0+255),w,b
 11568  004214  E104               	bnz	u19090
 11569  004216  0E0A               	movlw	10
 11570  004218  5DBF               	subwf	TunnelManagerGetTunnel@i& (0+255),w,b
 11571  00421A  E201 D771          	bnc	l15902
 11572  00421E                     u19090:
 11573  00421E                     l1638:
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;TunnelManager.c: 90: }
 11577                           ;TunnelManager.c: 91: }
 11578                           ;TunnelManager.c: 92: }
 11579                           ;TunnelManager.c: 93: return(retAddr);
 11580  00421E  C0BD  F0AB         	movff	TunnelManagerGetTunnel@retAddr,?_TunnelManagerGetTunnel
 11581  004222  C0BE  F0AC         	movff	TunnelManagerGetTunnel@retAddr+1,?_TunnelManagerGetTunnel+1
 11582                           
 11583                           ; BSR set to: 0
 11584  004226  0012               	return		;funcret
 11585  004228                     __end_of_TunnelManagerGetTunnel:
 11586                           	opt stack 0
 11587                           tblptru	equ	0xFF8
 11588                           tblptrh	equ	0xFF7
 11589                           tblptrl	equ	0xFF6
 11590                           tablat	equ	0xFF5
 11591                           prodh	equ	0xFF4
 11592                           prodl	equ	0xFF3
 11593                           intcon3	equ	0xFF0
 11594                           postinc0	equ	0xFEE
 11595                           plusw0	equ	0xFEB
 11596                           wreg	equ	0xFE8
 11597                           postdec1	equ	0xFE5
 11598                           plusw1	equ	0xFE3
 11599                           fsr1h	equ	0xFE2
 11600                           fsr1l	equ	0xFE1
 11601                           indf2	equ	0xFDF
 11602                           postinc2	equ	0xFDE
 11603                           postdec2	equ	0xFDD
 11604                           plusw2	equ	0xFDB
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function _TMSendFormedPacketTowardsCoordinator *****************
 11610 ;; Defined at:
 11611 ;;		line 151 in file "../TransportManager.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  data            2   41[BANK0 ] PTR unsigned char 
 11614 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMSendDataToRFD@databuff(64), RxPacket.Payload(64), RxPacket(142),
      + 
 11615 ;;		 -> TxBuffer(64), 
 11616 ;;  size            2   43[BANK0 ] unsigned int 
 11617 ;;  isFormed        1   45[BANK0 ] unsigned char 
 11618 ;;  isSecure        1   46[BANK0 ] unsigned char 
 11619 ;; Auto vars:     Size  Location     Type
 11620 ;;  i               2   50[BANK0 ] unsigned int 
 11621 ;;  res             1   49[BANK0 ] unsigned char 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      unsigned char 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : F/0
 11628 ;;		On exit  : F/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11631 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11633 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11634 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;Total ram usage:       11 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    9
 11638 ;; This function calls:
 11639 ;;		_NetworkHasRoute
 11640 ;;		_memcpy
 11641 ;; This function is called by:
 11642 ;;		_radioReceivedPacket
 11643 ;;		_NetworkUnicastData
 11644 ;;		_TMSendFormedPacketToRFD
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text45
 11649  00437E                     __ptext45:
 11650                           	opt stack 0
 11651  00437E                     _TMSendFormedPacketTowardsCoordinator:
 11652                           	opt stack 19
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;TransportManager.c: 153: bool res=0;
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;incstack = 0
 11659  00437E  6B91               	clrf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;TransportManager.c: 154: uint16_t i;
 11663                           ;TransportManager.c: 155: if(size>64-1)
 11664  004380  518C               	movf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),w,b
 11665  004382  E103               	bnz	u18960
 11666  004384  0E40               	movlw	64
 11667  004386  5D8B               	subwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),w,b
 11668  004388  E303               	bnc	l15856
 11669  00438A                     u18960:
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;TransportManager.c: 156: {
 11673                           ;TransportManager.c: 157: size=64-1;
 11674  00438A  6B8C               	clrf	(TMSendFormedPacketTowardsCoordinator@size+1)& (0+255),b
 11675  00438C  0E3F               	movlw	63
 11676  00438E  6F8B               	movwf	TMSendFormedPacketTowardsCoordinator@size& (0+255),b
 11677  004390                     l15856:
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;TransportManager.c: 158: }
 11681                           ;TransportManager.c: 160: for(i=0;i<2;i++)
 11682  004390  6B92               	clrf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11683  004392  6B93               	clrf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11684  004394                     l15862:
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;TransportManager.c: 161: {
 11688                           ;TransportManager.c: 162: if(TMQ[i].TMQState==TMQIdle)
 11689  004394  0E4C               	movlw	76
 11690  004396  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11691  004398  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11692  00439C  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11693  0043A0  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11694  0043A2  50F3               	movf	prodl,w,c
 11695  0043A4  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11696  0043A6  0E4B               	movlw	low (_TMQ+75)
 11697  0043A8  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11698  0043AA  6ED9               	movwf	fsr2l,c
 11699  0043AC  0E06               	movlw	high (_TMQ+75)
 11700  0043AE  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11701  0043B0  6EDA               	movwf	fsr2h,c
 11702  0043B2  50DF               	movf	indf2,w,c
 11703  0043B4  E007               	bz	l15870
 11704                           
 11705                           ; BSR set to: 0
 11706  0043B6  4B92               	infsnz	TMSendFormedPacketTowardsCoordinator@i& (0+255),f,b
 11707  0043B8  2B93               	incf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),f,b
 11708                           
 11709                           ; BSR set to: 0
 11710  0043BA  5193               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 11711  0043BC  E103               	bnz	u18980
 11712  0043BE  0E02               	movlw	2
 11713  0043C0  5D92               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 11714  0043C2  E3E8               	bnc	l15862
 11715  0043C4                     u18980:
 11716  0043C4                     l15870:
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;TransportManager.c: 165: }
 11720                           ;TransportManager.c: 166: }
 11721                           ;TransportManager.c: 167: if( (i<2) && (NetworkHasRoute()==1) )
 11722  0043C4  5193               	movf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),w,b
 11723  0043C6  E17E               	bnz	l15888
 11724  0043C8  0E02               	movlw	2
 11725  0043CA  5D92               	subwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),w,b
 11726  0043CC  E27B               	bc	l15888
 11727                           
 11728                           ; BSR set to: 0
 11729  0043CE  ECF0  F037         	call	_NetworkHasRoute	;wreg free
 11730  0043D2  06E8               	decf	wreg,f,c
 11731  0043D4  E177               	bnz	l15888
 11732                           
 11733                           ; BSR set to: 0
 11734                           ;TransportManager.c: 168: {
 11735                           ;TransportManager.c: 169: memcpy(TMQ[i].data,data,size);
 11736  0043D6  0E4C               	movlw	76
 11737  0043D8  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11738  0043DA  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11739  0043DE  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11740  0043E2  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11741  0043E4  50F3               	movf	prodl,w,c
 11742  0043E6  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11743  0043E8  0E00               	movlw	low _TMQ
 11744  0043EA  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11745  0043EC  6F75               	movwf	memcpy@d1& (0+255),b
 11746  0043EE  0E06               	movlw	high _TMQ
 11747  0043F0  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11748  0043F2  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 11749  0043F4  C089  F077         	movff	TMSendFormedPacketTowardsCoordinator@data,memcpy@s1
 11750  0043F8  C08A  F078         	movff	TMSendFormedPacketTowardsCoordinator@data+1,memcpy@s1+1
 11751  0043FC  C08B  F079         	movff	TMSendFormedPacketTowardsCoordinator@size,memcpy@n
 11752  004400  C08C  F07A         	movff	TMSendFormedPacketTowardsCoordinator@size+1,memcpy@n+1
 11753  004404  EC05  F035         	call	_memcpy	;wreg free
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;TransportManager.c: 170: TMQ[i].datasize=size;
 11757  004408  0E4C               	movlw	76
 11758  00440A  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11759  00440C  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11760  004410  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11761  004414  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11762  004416  50F3               	movf	prodl,w,c
 11763  004418  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11764  00441A  0E40               	movlw	low (_TMQ+64)
 11765  00441C  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11766  00441E  6ED9               	movwf	fsr2l,c
 11767  004420  0E06               	movlw	high (_TMQ+64)
 11768  004422  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11769  004424  6EDA               	movwf	fsr2h,c
 11770  004426  C08B  FFDF         	movff	TMSendFormedPacketTowardsCoordinator@size,indf2
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;TransportManager.c: 171: TMQ[i].retryCount=0;
 11774  00442A  0E4C               	movlw	76
 11775  00442C  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11776  00442E  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11777  004432  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11778  004436  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11779  004438  50F3               	movf	prodl,w,c
 11780  00443A  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11781  00443C  0E49               	movlw	low (_TMQ+73)
 11782  00443E  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11783  004440  6ED9               	movwf	fsr2l,c
 11784  004442  0E06               	movlw	high (_TMQ+73)
 11785  004444  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11786  004446  6EDA               	movwf	fsr2h,c
 11787  004448  6ADF               	clrf	indf2,c
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;TransportManager.c: 172: TMQ[i].TMQState=TMQSend;
 11791  00444A  0E4C               	movlw	76
 11792  00444C  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11793  00444E  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11794  004452  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11795  004456  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11796  004458  50F3               	movf	prodl,w,c
 11797  00445A  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11798  00445C  0E4B               	movlw	low (_TMQ+75)
 11799  00445E  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11800  004460  6ED9               	movwf	fsr2l,c
 11801  004462  0E06               	movlw	high (_TMQ+75)
 11802  004464  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11803  004466  6EDA               	movwf	fsr2h,c
 11804  004468  0E01               	movlw	1
 11805  00446A  6EDF               	movwf	indf2,c
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;TransportManager.c: 173: TMQ[i].flags.isFormedPacket=isFormed;
 11809  00446C  0E4C               	movlw	76
 11810  00446E  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11811  004470  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11812  004474  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11813  004478  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11814  00447A  50F3               	movf	prodl,w,c
 11815  00447C  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11816  00447E  0E4A               	movlw	low (_TMQ+74)
 11817  004480  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11818  004482  6ED9               	movwf	fsr2l,c
 11819  004484  0E06               	movlw	high (_TMQ+74)
 11820  004486  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11821  004488  6EDA               	movwf	fsr2h,c
 11822  00448A  B18D               	btfsc	TMSendFormedPacketTowardsCoordinator@isFormed& (0+255),0,b
 11823  00448C  D002               	bra	u19015
 11824  00448E  90DF               	bcf	indf2,0,c
 11825  004490  D001               	bra	u19016
 11826  004492                     u19015:
 11827  004492  80DF               	bsf	indf2,0,c
 11828  004494                     u19016:
 11829                           
 11830                           ; BSR set to: 6
 11831                           ;TransportManager.c: 174: TMQ[i].flags.isSecure=isSecure;
 11832  004494  0E4C               	movlw	76
 11833  004496  0100               	movlb	0	; () banked
 11834  004498  0392               	mulwf	TMSendFormedPacketTowardsCoordinator@i& (0+255),b
 11835  00449A  CFF3 F08F          	movff	prodl,??_TMSendFormedPacketTowardsCoordinator
 11836  00449E  CFF4 F090          	movff	prodh,??_TMSendFormedPacketTowardsCoordinator+1
 11837  0044A2  0393               	mulwf	(TMSendFormedPacketTowardsCoordinator@i+1)& (0+255),b
 11838  0044A4  50F3               	movf	prodl,w,c
 11839  0044A6  2790               	addwf	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),f,b
 11840  0044A8  0E4A               	movlw	low (_TMQ+74)
 11841  0044AA  258F               	addwf	??_TMSendFormedPacketTowardsCoordinator& (0+255),w,b
 11842  0044AC  6ED9               	movwf	fsr2l,c
 11843  0044AE  0E06               	movlw	high (_TMQ+74)
 11844  0044B0  2190               	addwfc	(??_TMSendFormedPacketTowardsCoordinator+1)& (0+255),w,b
 11845  0044B2  6EDA               	movwf	fsr2h,c
 11846  0044B4  B18E               	btfsc	TMSendFormedPacketTowardsCoordinator@isSecure& (0+255),0,b
 11847  0044B6  D002               	bra	u19025
 11848  0044B8  92DF               	bcf	indf2,1,c
 11849  0044BA  D001               	bra	u19026
 11850  0044BC                     u19025:
 11851  0044BC  82DF               	bsf	indf2,1,c
 11852  0044BE                     u19026:
 11853                           
 11854                           ; BSR set to: 6
 11855                           ;TransportManager.c: 175: res=1;
 11856  0044BE  0E01               	movlw	1
 11857  0044C0  0100               	movlb	0	; () banked
 11858  0044C2  6F91               	movwf	TMSendFormedPacketTowardsCoordinator@res& (0+255),b
 11859  0044C4                     l15888:
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;TransportManager.c: 176: }
 11863                           ;TransportManager.c: 177: return(res);
 11864  0044C4  5191               	movf	TMSendFormedPacketTowardsCoordinator@res& (0+255),w,b
 11865                           
 11866                           ; BSR set to: 0
 11867  0044C6  0012               	return		;funcret
 11868  0044C8                     __end_of_TMSendFormedPacketTowardsCoordinator:
 11869                           	opt stack 0
 11870                           tblptru	equ	0xFF8
 11871                           tblptrh	equ	0xFF7
 11872                           tblptrl	equ	0xFF6
 11873                           tablat	equ	0xFF5
 11874                           prodh	equ	0xFF4
 11875                           prodl	equ	0xFF3
 11876                           intcon3	equ	0xFF0
 11877                           postinc0	equ	0xFEE
 11878                           plusw0	equ	0xFEB
 11879                           wreg	equ	0xFE8
 11880                           postdec1	equ	0xFE5
 11881                           plusw1	equ	0xFE3
 11882                           fsr1h	equ	0xFE2
 11883                           fsr1l	equ	0xFE1
 11884                           indf2	equ	0xFDF
 11885                           postinc2	equ	0xFDE
 11886                           postdec2	equ	0xFDD
 11887                           plusw2	equ	0xFDB
 11888                           fsr2h	equ	0xFDA
 11889                           fsr2l	equ	0xFD9
 11890                           status	equ	0xFD8
 11891                           
 11892 ;; *************** function _LE_RemoveNeighborDevice *****************
 11893 ;; Defined at:
 11894 ;;		line 519 in file "../LinkEstimator.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  device          2   54[BANK0 ] struct addr_t_def
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;  i               2   58[BANK0 ] unsigned int 
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11903 ;; Tracked objects:
 11904 ;;		On entry : F/0
 11905 ;;		On exit  : F/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11911 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11912 ;;Total ram usage:        6 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:   10
 11915 ;; This function calls:
 11916 ;;		_RouterEvicted
 11917 ;;		_le_findIdx
 11918 ;; This function is called by:
 11919 ;;		_radioReceivedPacket
 11920 ;;		_TMSendFormedPacketToRFD
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text46
 11925  00666A                     __ptext46:
 11926                           	opt stack 0
 11927  00666A                     _LE_RemoveNeighborDevice:
 11928                           	opt stack 16
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;LinkEstimator.c: 521: uint16_t i=le_findIdx(device);
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;incstack = 0
 11935  00666A  C096  F081         	movff	LE_RemoveNeighborDevice@device,le_findIdx@ll_addr
 11936  00666E  C097  F082         	movff	LE_RemoveNeighborDevice@device+1,le_findIdx@ll_addr+1
 11937  006672  EC83  F034         	call	_le_findIdx	;wreg free
 11938  006676  6F9A               	movwf	LE_RemoveNeighborDevice@i& (0+255),b
 11939  006678  6B9B               	clrf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;LinkEstimator.c: 522: if(i != 0xff)
 11943  00667A  299A               	incf	LE_RemoveNeighborDevice@i& (0+255),w,b
 11944  00667C  119B               	iorwf	(LE_RemoveNeighborDevice@i+1)& (0+255),w,b
 11945  00667E  B4D8               	btfsc	status,2,c
 11946  006680  0012               	return	
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;LinkEstimator.c: 523: {
 11950                           ;LinkEstimator.c: 524: RouterEvicted(neighbor_tbl[i].ll_addr);
 11951  006682  0E0B               	movlw	11
 11952  006684  039A               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11953  006686  CFF3 F098          	movff	prodl,??_LE_RemoveNeighborDevice
 11954  00668A  CFF4 F099          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11955  00668E  039B               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11956  006690  50F3               	movf	prodl,w,c
 11957  006692  2799               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11958  006694  0E00               	movlw	low _neighbor_tbl
 11959  006696  2598               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11960  006698  6ED9               	movwf	fsr2l,c
 11961  00669A  0E05               	movlw	high _neighbor_tbl
 11962  00669C  2199               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11963  00669E  6EDA               	movwf	fsr2h,c
 11964  0066A0  CFDE F08E          	movff	postinc2,RouterEvicted@address
 11965  0066A4  CFDD F08F          	movff	postdec2,RouterEvicted@address+1
 11966  0066A8  EC2F  F02E         	call	_RouterEvicted	;wreg free
 11967                           
 11968                           ;LinkEstimator.c: 525: neighbor_tbl[i].flags=0;
 11969  0066AC  0E0B               	movlw	11
 11970  0066AE  0100               	movlb	0	; () banked
 11971  0066B0  039A               	mulwf	LE_RemoveNeighborDevice@i& (0+255),b
 11972  0066B2  CFF3 F098          	movff	prodl,??_LE_RemoveNeighborDevice
 11973  0066B6  CFF4 F099          	movff	prodh,??_LE_RemoveNeighborDevice+1
 11974  0066BA  039B               	mulwf	(LE_RemoveNeighborDevice@i+1)& (0+255),b
 11975  0066BC  50F3               	movf	prodl,w,c
 11976  0066BE  2799               	addwf	(??_LE_RemoveNeighborDevice+1)& (0+255),f,b
 11977  0066C0  0E05               	movlw	low (_neighbor_tbl+5)
 11978  0066C2  2598               	addwf	??_LE_RemoveNeighborDevice& (0+255),w,b
 11979  0066C4  6ED9               	movwf	fsr2l,c
 11980  0066C6  0E05               	movlw	high (_neighbor_tbl+5)
 11981  0066C8  2199               	addwfc	(??_LE_RemoveNeighborDevice+1)& (0+255),w,b
 11982  0066CA  6EDA               	movwf	fsr2h,c
 11983  0066CC  6ADF               	clrf	indf2,c
 11984                           
 11985                           ; BSR set to: 0
 11986  0066CE  0C00               	retlw	0	;funcret
 11987  0066D0                     __end_of_LE_RemoveNeighborDevice:
 11988                           	opt stack 0
 11989                           tblptru	equ	0xFF8
 11990                           tblptrh	equ	0xFF7
 11991                           tblptrl	equ	0xFF6
 11992                           tablat	equ	0xFF5
 11993                           prodh	equ	0xFF4
 11994                           prodl	equ	0xFF3
 11995                           intcon3	equ	0xFF0
 11996                           postinc0	equ	0xFEE
 11997                           plusw0	equ	0xFEB
 11998                           wreg	equ	0xFE8
 11999                           postdec1	equ	0xFE5
 12000                           plusw1	equ	0xFE3
 12001                           fsr1h	equ	0xFE2
 12002                           fsr1l	equ	0xFE1
 12003                           indf2	equ	0xFDF
 12004                           postinc2	equ	0xFDE
 12005                           postdec2	equ	0xFDD
 12006                           plusw2	equ	0xFDB
 12007                           fsr2h	equ	0xFDA
 12008                           fsr2l	equ	0xFD9
 12009                           status	equ	0xFD8
 12010                           
 12011 ;; *************** function _GetRouteAddressOfChild *****************
 12012 ;; Defined at:
 12013 ;;		line 438 in file "../RouteManager.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  child           2   43[BANK0 ] struct addr_t_def
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;  i               2   47[BANK0 ] unsigned int 
 12018 ;;  res             2   45[BANK0 ] struct addr_t_def
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  2   43[BANK0 ] struct addr_t_def
 12021 ;; Registers used:
 12022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : C/2
 12025 ;;		On exit  : E/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12029 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;Total ram usage:        6 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    8
 12035 ;; This function calls:
 12036 ;;		_CoordinatorAddress
 12037 ;;		_LE_GetNeighborDeviceType
 12038 ;;		_RoutingTableFindDeviceOrParent
 12039 ;;		_le_findIdx
 12040 ;; This function is called by:
 12041 ;;		_radioReceivedPacket
 12042 ;;		_TMSendFormedPacketToRFD
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text47
 12047  0068AC                     __ptext47:
 12048                           	opt stack 0
 12049  0068AC                     _GetRouteAddressOfChild:
 12050                           	opt stack 18
 12051                           
 12052                           ;RouteManager.c: 440: uint16_t i;
 12053                           ;RouteManager.c: 441: addr_t res;
 12054                           ;RouteManager.c: 442: i=le_findIdx(child);
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;incstack = 0
 12058  0068AC  C08B  F081         	movff	GetRouteAddressOfChild@child,le_findIdx@ll_addr
 12059  0068B0  C08C  F082         	movff	GetRouteAddressOfChild@child+1,le_findIdx@ll_addr+1
 12060  0068B4  EC83  F034         	call	_le_findIdx	;wreg free
 12061  0068B8  6F8F               	movwf	GetRouteAddressOfChild@i& (0+255),b
 12062  0068BA  6B90               	clrf	(GetRouteAddressOfChild@i+1)& (0+255),b
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;RouteManager.c: 443: res=child;
 12066  0068BC  C08B  F08D         	movff	GetRouteAddressOfChild@child,GetRouteAddressOfChild@res
 12067  0068C0  C08C  F08E         	movff	GetRouteAddressOfChild@child+1,GetRouteAddressOfChild@res+1
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;RouteManager.c: 444: if(i==0xff)
 12071  0068C4  298F               	incf	GetRouteAddressOfChild@i& (0+255),w,b
 12072  0068C6  1190               	iorwf	(GetRouteAddressOfChild@i+1)& (0+255),w,b
 12073  0068C8  E10B               	bnz	l15926
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;RouteManager.c: 445: {
 12077                           ;RouteManager.c: 447: res=RoutingTableFindDeviceOrParent(child);
 12078  0068CA  C08B  F081         	movff	GetRouteAddressOfChild@child,RoutingTableFindDeviceOrParent@address
 12079  0068CE  C08C  F082         	movff	GetRouteAddressOfChild@child+1,RoutingTableFindDeviceOrParent@address+1
 12080  0068D2  EC30  F02D         	call	_RoutingTableFindDeviceOrParent	;wreg free
 12081  0068D6  C081  F08D         	movff	?_RoutingTableFindDeviceOrParent,GetRouteAddressOfChild@res
 12082  0068DA  C082  F08E         	movff	?_RoutingTableFindDeviceOrParent+1,GetRouteAddressOfChild@res+1
 12083                           
 12084                           ;RouteManager.c: 448: }else if(LE_GetNeighborDeviceType(i)==DeviceSleepingRFD)
 12085  0068DE  D00E               	goto	l15930
 12086  0068E0                     l15926:
 12087                           
 12088                           ; BSR set to: 0
 12089  0068E0  C08F  F073         	movff	GetRouteAddressOfChild@i,LE_GetNeighborDeviceType@index
 12090  0068E4  C090  F074         	movff	GetRouteAddressOfChild@i+1,LE_GetNeighborDeviceType@index+1
 12091  0068E8  EC5B  F037         	call	_LE_GetNeighborDeviceType	;wreg free
 12092  0068EC  0A02               	xorlw	2
 12093  0068EE  E106               	bnz	l15930
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;RouteManager.c: 449: {
 12097                           ;RouteManager.c: 450: res=CoordinatorAddress();
 12098  0068F0  ECDC  F03A         	call	_CoordinatorAddress	;wreg free
 12099  0068F4  C073  F08D         	movff	?_CoordinatorAddress,GetRouteAddressOfChild@res
 12100  0068F8  C074  F08E         	movff	?_CoordinatorAddress+1,GetRouteAddressOfChild@res+1
 12101  0068FC                     l15930:
 12102                           
 12103                           ;RouteManager.c: 451: }
 12104                           ;RouteManager.c: 452: return(res);
 12105  0068FC  C08D  F08B         	movff	GetRouteAddressOfChild@res,?_GetRouteAddressOfChild
 12106  006900  C08E  F08C         	movff	GetRouteAddressOfChild@res+1,?_GetRouteAddressOfChild+1
 12107  006904  0012               	return		;funcret
 12108  006906                     __end_of_GetRouteAddressOfChild:
 12109                           	opt stack 0
 12110                           tblptru	equ	0xFF8
 12111                           tblptrh	equ	0xFF7
 12112                           tblptrl	equ	0xFF6
 12113                           tablat	equ	0xFF5
 12114                           prodh	equ	0xFF4
 12115                           prodl	equ	0xFF3
 12116                           intcon3	equ	0xFF0
 12117                           postinc0	equ	0xFEE
 12118                           plusw0	equ	0xFEB
 12119                           wreg	equ	0xFE8
 12120                           postdec1	equ	0xFE5
 12121                           plusw1	equ	0xFE3
 12122                           fsr1h	equ	0xFE2
 12123                           fsr1l	equ	0xFE1
 12124                           indf2	equ	0xFDF
 12125                           postinc2	equ	0xFDE
 12126                           postdec2	equ	0xFDD
 12127                           plusw2	equ	0xFDB
 12128                           fsr2h	equ	0xFDA
 12129                           fsr2l	equ	0xFD9
 12130                           status	equ	0xFD8
 12131                           
 12132 ;; *************** function _RoutingTableFindDeviceOrParent *****************
 12133 ;; Defined at:
 12134 ;;		line 413 in file "../RouteManager.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;  address         2   33[BANK0 ] struct addr_t_def
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  entry           2   41[BANK0 ] PTR struct routing_table
 12139 ;;		 -> routingTable(90), 
 12140 ;;  res             2   39[BANK0 ] struct addr_t_def
 12141 ;;  i               2   37[BANK0 ] unsigned int 
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  2   33[BANK0 ] struct addr_t_def
 12144 ;; Registers used:
 12145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12146 ;; Tracked objects:
 12147 ;;		On entry : F/0
 12148 ;;		On exit  : F/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12154 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12155 ;;Total ram usage:       10 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    7
 12158 ;; This function calls:
 12159 ;;		_NetworkAddressSizeGet
 12160 ;;		_isSameAddress
 12161 ;;		_memset
 12162 ;; This function is called by:
 12163 ;;		_GetRouteAddressOfChild
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text48
 12168  005A60                     __ptext48:
 12169                           	opt stack 0
 12170  005A60                     _RoutingTableFindDeviceOrParent:
 12171                           	opt stack 18
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;RouteManager.c: 415: uint16_t i;
 12175                           ;RouteManager.c: 416: routing_table_entry_t *entry;
 12176                           ;RouteManager.c: 417: addr_t res;
 12177                           ;RouteManager.c: 419: memset(res.bytes,0xff,NetworkAddressSizeGet());
 12178                           
 12179                           ;incstack = 0
 12180  005A60  0E87               	movlw	low RoutingTableFindDeviceOrParent@res
 12181  005A62  6F73               	movwf	memset@p1& (0+255),b
 12182  005A64  6B74               	clrf	(memset@p1+1)& (0+255),b
 12183  005A66  6B76               	clrf	(memset@c+1)& (0+255),b
 12184  005A68  6975               	setf	memset@c& (0+255),b
 12185  005A6A  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 12186  005A6E  0100               	movlb	0	; () banked
 12187  005A70  6F77               	movwf	memset@n& (0+255),b
 12188  005A72  6B78               	clrf	(memset@n+1)& (0+255),b
 12189  005A74  EC47  F039         	call	_memset	;wreg free
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;RouteManager.c: 421: for (i = 0; i < routingTableActive; i++)
 12193  005A78  6B85               	clrf	RoutingTableFindDeviceOrParent@i& (0+255),b
 12194  005A7A  6B86               	clrf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 12195  005A7C  D03D               	goto	l15662
 12196  005A7E                     l15648:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;RouteManager.c: 422: {
 12200                           ;RouteManager.c: 423: entry = &routingTable[i];
 12201  005A7E  0E09               	movlw	9
 12202  005A80  0385               	mulwf	RoutingTableFindDeviceOrParent@i& (0+255),b
 12203  005A82  CFF3 F083          	movff	prodl,??_RoutingTableFindDeviceOrParent
 12204  005A86  CFF4 F084          	movff	prodh,??_RoutingTableFindDeviceOrParent+1
 12205  005A8A  0386               	mulwf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),b
 12206  005A8C  50F3               	movf	prodl,w,c
 12207  005A8E  2784               	addwf	(??_RoutingTableFindDeviceOrParent+1)& (0+255),f,b
 12208  005A90  0E78               	movlw	low _routingTable
 12209  005A92  2583               	addwf	??_RoutingTableFindDeviceOrParent& (0+255),w,b
 12210  005A94  6F89               	movwf	RoutingTableFindDeviceOrParent@entry& (0+255),b
 12211  005A96  0E04               	movlw	high _routingTable
 12212  005A98  2184               	addwfc	(??_RoutingTableFindDeviceOrParent+1)& (0+255),w,b
 12213  005A9A  6F8A               	movwf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),b
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;RouteManager.c: 425: if (isSameAddress(entry->neighbor, address)==1)
 12217  005A9C  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 12218  005AA0  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 12219  005AA4  CFDE F07D          	movff	postinc2,isSameAddress@a1
 12220  005AA8  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 12221  005AAC  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 12222  005AB0  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 12223  005AB4  ECBD  F039         	call	_isSameAddress	;wreg free
 12224  005AB8  06E8               	decf	wreg,f,c
 12225  005ABA  E101               	bnz	l15656
 12226  005ABC  D012               	goto	l15658
 12227  005ABE                     l15656:
 12228                           
 12229                           ; BSR set to: 0
 12230  005ABE  EE20 F002          	lfsr	2,2
 12231  005AC2  5189               	movf	RoutingTableFindDeviceOrParent@entry& (0+255),w,b
 12232  005AC4  26D9               	addwf	fsr2l,f,c
 12233  005AC6  518A               	movf	(RoutingTableFindDeviceOrParent@entry+1)& (0+255),w,b
 12234  005AC8  22DA               	addwfc	fsr2h,f,c
 12235  005ACA  CFDE F07D          	movff	postinc2,isSameAddress@a1
 12236  005ACE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 12237  005AD2  C081  F07F         	movff	RoutingTableFindDeviceOrParent@address,isSameAddress@a2
 12238  005AD6  C082  F080         	movff	RoutingTableFindDeviceOrParent@address+1,isSameAddress@a2+1
 12239  005ADA  ECBD  F039         	call	_isSameAddress	;wreg free
 12240  005ADE  06E8               	decf	wreg,f,c
 12241  005AE0  E109               	bnz	l15660
 12242  005AE2                     l15658:
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;RouteManager.c: 430: {
 12246                           ;RouteManager.c: 431: res=entry->neighbor;
 12247  005AE2  C089  FFD9         	movff	RoutingTableFindDeviceOrParent@entry,fsr2l
 12248  005AE6  C08A  FFDA         	movff	RoutingTableFindDeviceOrParent@entry+1,fsr2h
 12249  005AEA  CFDE F087          	movff	postinc2,RoutingTableFindDeviceOrParent@res
 12250  005AEE  CFDD F088          	movff	postdec2,RoutingTableFindDeviceOrParent@res+1
 12251                           
 12252                           ;RouteManager.c: 432: break;
 12253  005AF2  D007               	goto	l1312
 12254  005AF4                     l15660:
 12255                           
 12256                           ; BSR set to: 0
 12257  005AF4  4B85               	infsnz	RoutingTableFindDeviceOrParent@i& (0+255),f,b
 12258  005AF6  2B86               	incf	(RoutingTableFindDeviceOrParent@i+1)& (0+255),f,b
 12259  005AF8                     l15662:
 12260                           
 12261                           ; BSR set to: 0
 12262  005AF8  51EB               	movf	_routingTableActive& (0+255),w,b
 12263  005AFA  5D85               	subwf	RoutingTableFindDeviceOrParent@i& (0+255),w,b
 12264  005AFC  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 12265  005AFE  5986               	subwfb	(RoutingTableFindDeviceOrParent@i+1)& (0+255),w,b
 12266  005B00  E3BE               	bnc	l15648
 12267  005B02                     l1312:
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;RouteManager.c: 433: }
 12271                           ;RouteManager.c: 434: }
 12272                           ;RouteManager.c: 435: return(res);
 12273  005B02  C087  F081         	movff	RoutingTableFindDeviceOrParent@res,?_RoutingTableFindDeviceOrParent
 12274  005B06  C088  F082         	movff	RoutingTableFindDeviceOrParent@res+1,?_RoutingTableFindDeviceOrParent+1
 12275                           
 12276                           ; BSR set to: 0
 12277  005B0A  0012               	return		;funcret
 12278  005B0C                     __end_of_RoutingTableFindDeviceOrParent:
 12279                           	opt stack 0
 12280                           tblptru	equ	0xFF8
 12281                           tblptrh	equ	0xFF7
 12282                           tblptrl	equ	0xFF6
 12283                           tablat	equ	0xFF5
 12284                           prodh	equ	0xFF4
 12285                           prodl	equ	0xFF3
 12286                           intcon3	equ	0xFF0
 12287                           postinc0	equ	0xFEE
 12288                           plusw0	equ	0xFEB
 12289                           wreg	equ	0xFE8
 12290                           postdec1	equ	0xFE5
 12291                           plusw1	equ	0xFE3
 12292                           fsr1h	equ	0xFE2
 12293                           fsr1l	equ	0xFE1
 12294                           indf2	equ	0xFDF
 12295                           postinc2	equ	0xFDE
 12296                           postdec2	equ	0xFDD
 12297                           plusw2	equ	0xFDB
 12298                           fsr2h	equ	0xFDA
 12299                           fsr2l	equ	0xFD9
 12300                           status	equ	0xFD8
 12301                           
 12302 ;; *************** function _LE_GetNeighborDeviceType *****************
 12303 ;; Defined at:
 12304 ;;		line 509 in file "../LinkEstimator.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;  index           2   19[BANK0 ] unsigned int 
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;  dev             1   24[BANK0 ] enum E144
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      enum E145
 12311 ;; Registers used:
 12312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12313 ;; Tracked objects:
 12314 ;;		On entry : F/0
 12315 ;;		On exit  : F/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12320 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12321 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12322 ;;Total ram usage:        6 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; Hardware stack levels required when called:    5
 12325 ;; This function calls:
 12326 ;;		Nothing
 12327 ;; This function is called by:
 12328 ;;		_GetRouteAddressOfChild
 12329 ;; This function uses a non-reentrant model
 12330 ;;
 12331                           
 12332                           	psect	text49
 12333  006EB6                     __ptext49:
 12334                           	opt stack 0
 12335  006EB6                     _LE_GetNeighborDeviceType:
 12336                           	opt stack 20
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;LinkEstimator.c: 511: DeviceType_t dev=DeviceRFD;
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;incstack = 0
 12343  006EB6  0E01               	movlw	1
 12344  006EB8  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;LinkEstimator.c: 512: if(index<=20)
 12348  006EBA  5174               	movf	(LE_GetNeighborDeviceType@index+1)& (0+255),w,b
 12349  006EBC  E118               	bnz	l15690
 12350  006EBE  0E15               	movlw	21
 12351  006EC0  5D73               	subwf	LE_GetNeighborDeviceType@index& (0+255),w,b
 12352  006EC2  E215               	bc	l15690
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;LinkEstimator.c: 513: {
 12356                           ;LinkEstimator.c: 514: dev=(DeviceType_t)((neighbor_tbl[index].flags & 0x70)>>4);
 12357  006EC4  0E0B               	movlw	11
 12358  006EC6  0373               	mulwf	LE_GetNeighborDeviceType@index& (0+255),b
 12359  006EC8  CFF3 F075          	movff	prodl,??_LE_GetNeighborDeviceType
 12360  006ECC  CFF4 F076          	movff	prodh,??_LE_GetNeighborDeviceType+1
 12361  006ED0  0374               	mulwf	(LE_GetNeighborDeviceType@index+1)& (0+255),b
 12362  006ED2  50F3               	movf	prodl,w,c
 12363  006ED4  2776               	addwf	(??_LE_GetNeighborDeviceType+1)& (0+255),f,b
 12364  006ED6  0E05               	movlw	low (_neighbor_tbl+5)
 12365  006ED8  2575               	addwf	??_LE_GetNeighborDeviceType& (0+255),w,b
 12366  006EDA  6ED9               	movwf	fsr2l,c
 12367  006EDC  0E05               	movlw	high (_neighbor_tbl+5)
 12368  006EDE  2176               	addwfc	(??_LE_GetNeighborDeviceType+1)& (0+255),w,b
 12369  006EE0  6EDA               	movwf	fsr2h,c
 12370  006EE2  50DF               	movf	indf2,w,c
 12371  006EE4  6F77               	movwf	(??_LE_GetNeighborDeviceType+2)& (0+255),b
 12372  006EE6  3977               	swapf	(??_LE_GetNeighborDeviceType+2)& (0+255),w,b
 12373  006EE8  0B0F               	andlw	15
 12374  006EEA  0B07               	andlw	7
 12375  006EEC  6F78               	movwf	LE_GetNeighborDeviceType@dev& (0+255),b
 12376  006EEE                     l15690:
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;LinkEstimator.c: 515: }
 12380                           ;LinkEstimator.c: 516: return(dev);
 12381  006EEE  5178               	movf	LE_GetNeighborDeviceType@dev& (0+255),w,b
 12382                           
 12383                           ; BSR set to: 0
 12384  006EF0  0012               	return		;funcret
 12385  006EF2                     __end_of_LE_GetNeighborDeviceType:
 12386                           	opt stack 0
 12387                           tblptru	equ	0xFF8
 12388                           tblptrh	equ	0xFF7
 12389                           tblptrl	equ	0xFF6
 12390                           tablat	equ	0xFF5
 12391                           prodh	equ	0xFF4
 12392                           prodl	equ	0xFF3
 12393                           intcon3	equ	0xFF0
 12394                           postinc0	equ	0xFEE
 12395                           plusw0	equ	0xFEB
 12396                           wreg	equ	0xFE8
 12397                           postdec1	equ	0xFE5
 12398                           plusw1	equ	0xFE3
 12399                           fsr1h	equ	0xFE2
 12400                           fsr1l	equ	0xFE1
 12401                           indf2	equ	0xFDF
 12402                           postinc2	equ	0xFDE
 12403                           postdec2	equ	0xFDD
 12404                           plusw2	equ	0xFDB
 12405                           fsr2h	equ	0xFDA
 12406                           fsr2l	equ	0xFD9
 12407                           status	equ	0xFD8
 12408                           
 12409 ;; *************** function _CoordinatorAddress *****************
 12410 ;; Defined at:
 12411 ;;		line 265 in file "../NetworkManager.c"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;		None
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;		None
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  2   19[BANK0 ] struct addr_t_def
 12418 ;; Registers used:
 12419 ;;		None
 12420 ;; Tracked objects:
 12421 ;;		On entry : E/1
 12422 ;;		On exit  : E/0
 12423 ;;		Unchanged: E/0
 12424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12429 ;;Total ram usage:        2 bytes
 12430 ;; Hardware stack levels used:    1
 12431 ;; Hardware stack levels required when called:    5
 12432 ;; This function calls:
 12433 ;;		Nothing
 12434 ;; This function is called by:
 12435 ;;		_NetworkUnicastData
 12436 ;;		_GetRouteAddressOfChild
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text50
 12441  0075B8                     __ptext50:
 12442                           	opt stack 0
 12443  0075B8                     _CoordinatorAddress:
 12444                           	opt stack 20
 12445                           
 12446                           ;NetworkManager.c: 267: return(CoordinatorAddr);
 12447                           
 12448                           ; BSR set to: 0
 12449                           ;incstack = 0
 12450  0075B8  C1E1  F073         	movff	_CoordinatorAddr,?_CoordinatorAddress
 12451  0075BC  C1E2  F074         	movff	_CoordinatorAddr+1,?_CoordinatorAddress+1
 12452  0075C0  0012               	return		;funcret
 12453  0075C2                     __end_of_CoordinatorAddress:
 12454                           	opt stack 0
 12455                           tblptru	equ	0xFF8
 12456                           tblptrh	equ	0xFF7
 12457                           tblptrl	equ	0xFF6
 12458                           tablat	equ	0xFF5
 12459                           prodh	equ	0xFF4
 12460                           prodl	equ	0xFF3
 12461                           intcon3	equ	0xFF0
 12462                           postinc0	equ	0xFEE
 12463                           plusw0	equ	0xFEB
 12464                           wreg	equ	0xFE8
 12465                           postdec1	equ	0xFE5
 12466                           plusw1	equ	0xFE3
 12467                           fsr1h	equ	0xFE2
 12468                           fsr1l	equ	0xFE1
 12469                           indf2	equ	0xFDF
 12470                           postinc2	equ	0xFDE
 12471                           postdec2	equ	0xFDD
 12472                           plusw2	equ	0xFDB
 12473                           fsr2h	equ	0xFDA
 12474                           fsr2l	equ	0xFD9
 12475                           status	equ	0xFD8
 12476                           
 12477 ;; *************** function _BroadcastManagerDelaySend *****************
 12478 ;; Defined at:
 12479 ;;		line 52 in file "../BroadcastManager.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  pkt             2   63[BANK0 ] PTR unsigned char 
 12482 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), TMSendDataToRFD@databuff(64), 
 12483 ;;		 -> NetworkBroadcastData@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 12484 ;;  size            2   65[BANK0 ] unsigned int 
 12485 ;;  isSecure        1   67[BANK0 ] unsigned char 
 12486 ;;  isInterPan      1   68[BANK0 ] unsigned char 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  i               2   76[BANK0 ] unsigned int 
 12489 ;;  res             1   75[BANK0 ] unsigned char 
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  1    wreg      unsigned char 
 12492 ;; Registers used:
 12493 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : F/0
 12496 ;;		On exit  : F/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12499 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12502 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12503 ;;Total ram usage:       15 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; Hardware stack levels required when called:    8
 12506 ;; This function calls:
 12507 ;;		_AddMSToTick
 12508 ;;		_MSTickGet
 12509 ;;		_krnd
 12510 ;;		_memcpy
 12511 ;; This function is called by:
 12512 ;;		_radioReceivedPacket
 12513 ;;		_TMSendFormedPacketToRFD
 12514 ;;		_NetworkSendDiscoverResponse
 12515 ;;		_NetworkBroadcastData
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text51
 12520  003672                     __ptext51:
 12521                           	opt stack 0
 12522  003672                     _BroadcastManagerDelaySend:
 12523                           	opt stack 18
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;BroadcastManager.c: 54: bool res=0;
 12527                           
 12528                           ;incstack = 0
 12529  003672  6BAB               	clrf	BroadcastManagerDelaySend@res& (0+255),b
 12530                           
 12531                           ;BroadcastManager.c: 55: uint16_t i;
 12532                           ;BroadcastManager.c: 56: for(i=0;i<6;i++)
 12533  003674  6BAC               	clrf	BroadcastManagerDelaySend@i& (0+255),b
 12534  003676  6BAD               	clrf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12535  003678                     l15822:
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;BroadcastManager.c: 57: {
 12539                           ;BroadcastManager.c: 58: if(((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==1)
 12540  003678  0E4A               	movlw	74
 12541  00367A  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12542  00367C  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12543  003680  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12544  003684  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12545  003686  50F3               	movf	prodl,w,c
 12546  003688  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12547  00368A  0E4F               	movlw	low (_RbcQ+4)
 12548  00368C  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12549  00368E  6ED9               	movwf	fsr2l,c
 12550  003690  0E09               	movlw	high (_RbcQ+4)
 12551  003692  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12552  003694  6EDA               	movwf	fsr2h,c
 12553  003696  50DE               	movf	postinc2,w,c
 12554  003698  10DE               	iorwf	postinc2,w,c
 12555  00369A  10DE               	iorwf	postinc2,w,c
 12556  00369C  10DE               	iorwf	postinc2,w,c
 12557  00369E  E001 D0A3          	bnz	l15842
 12558                           
 12559                           ; BSR set to: 0
 12560  0036A2  0E4A               	movlw	74
 12561  0036A4  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12562  0036A6  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12563  0036AA  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12564  0036AE  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12565  0036B0  50F3               	movf	prodl,w,c
 12566  0036B2  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12567  0036B4  0E4B               	movlw	low _RbcQ
 12568  0036B6  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12569  0036B8  6ED9               	movwf	fsr2l,c
 12570  0036BA  0E09               	movlw	high _RbcQ
 12571  0036BC  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12572  0036BE  6EDA               	movwf	fsr2h,c
 12573  0036C0  50DE               	movf	postinc2,w,c
 12574  0036C2  10DE               	iorwf	postinc2,w,c
 12575  0036C4  10DE               	iorwf	postinc2,w,c
 12576  0036C6  10DE               	iorwf	postinc2,w,c
 12577  0036C8  E001 D08E          	bnz	l15842
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;BroadcastManager.c: 59: {
 12581                           ;BroadcastManager.c: 60: memcpy(RbcQ[i].pkt,pkt,size);
 12582  0036CC  0E4A               	movlw	74
 12583  0036CE  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12584  0036D0  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12585  0036D4  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12586  0036D8  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12587  0036DA  50F3               	movf	prodl,w,c
 12588  0036DC  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12589  0036DE  0E53               	movlw	low (_RbcQ+8)
 12590  0036E0  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12591  0036E2  6F75               	movwf	memcpy@d1& (0+255),b
 12592  0036E4  0E09               	movlw	high (_RbcQ+8)
 12593  0036E6  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12594  0036E8  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 12595  0036EA  C09F  F077         	movff	BroadcastManagerDelaySend@pkt,memcpy@s1
 12596  0036EE  C0A0  F078         	movff	BroadcastManagerDelaySend@pkt+1,memcpy@s1+1
 12597  0036F2  C0A1  F079         	movff	BroadcastManagerDelaySend@size,memcpy@n
 12598  0036F6  C0A2  F07A         	movff	BroadcastManagerDelaySend@size+1,memcpy@n+1
 12599  0036FA  EC05  F035         	call	_memcpy	;wreg free
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;BroadcastManager.c: 61: RbcQ[i].pktSize=size;
 12603  0036FE  0E4A               	movlw	74
 12604  003700  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12605  003702  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12606  003706  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12607  00370A  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12608  00370C  50F3               	movf	prodl,w,c
 12609  00370E  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12610  003710  0E93               	movlw	low (_RbcQ+72)
 12611  003712  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12612  003714  6ED9               	movwf	fsr2l,c
 12613  003716  0E09               	movlw	high (_RbcQ+72)
 12614  003718  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12615  00371A  6EDA               	movwf	fsr2h,c
 12616  00371C  C0A1  FFDF         	movff	BroadcastManagerDelaySend@size,indf2
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;BroadcastManager.c: 62: RbcQ[i].TxTime=AddMSToTick(MSTickGet(),(krnd() & 0x3f));
 12620  003720  EC27  F038         	call	_MSTickGet	;wreg free
 12621  003724  CFE9 FFD9          	movff	fsr0l,fsr2l
 12622  003728  CFEA FFDA          	movff	fsr0h,fsr2h
 12623  00372C  EE00  F08F         	lfsr	0,AddMSToTick@tick
 12624  003730  0E07               	movlw	7
 12625  003732                     u18911:
 12626  003732  CFDB FFEB          	movff	plusw2,plusw0
 12627  003736  06E8               	decf	wreg,f,c
 12628  003738  E2FC               	bc	u18911
 12629  00373A  EC45  F01E         	call	_krnd	;wreg free
 12630  00373E  0E3F               	movlw	63
 12631  003740  1573               	andwf	?_krnd& (0+255),w,b
 12632  003742  6F97               	movwf	AddMSToTick@ms& (0+255),b
 12633  003744  6B98               	clrf	(AddMSToTick@ms+1)& (0+255),b
 12634  003746  6B99               	clrf	(AddMSToTick@ms+2)& (0+255),b
 12635  003748  6B9A               	clrf	(AddMSToTick@ms+3)& (0+255),b
 12636  00374A  EC34  F030         	call	_AddMSToTick	;wreg free
 12637  00374E  0E4A               	movlw	74
 12638  003750  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12639  003752  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12640  003756  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12641  00375A  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12642  00375C  50F3               	movf	prodl,w,c
 12643  00375E  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12644  003760  0E4B               	movlw	low _RbcQ
 12645  003762  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12646  003764  6ED9               	movwf	fsr2l,c
 12647  003766  0E09               	movlw	high _RbcQ
 12648  003768  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12649  00376A  6EDA               	movwf	fsr2h,c
 12650  00376C  0E07               	movlw	7
 12651  00376E                     u18921:
 12652  00376E  CFEB FFDB          	movff	plusw0,plusw2
 12653  003772  06E8               	decf	wreg,f,c
 12654  003774  E2FC               	bc	u18921
 12655                           
 12656                           ;BroadcastManager.c: 63: RbcQ[i].Flags=0;
 12657  003776  0E4A               	movlw	74
 12658  003778  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12659  00377A  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12660  00377E  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12661  003782  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12662  003784  50F3               	movf	prodl,w,c
 12663  003786  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12664  003788  0E94               	movlw	low (_RbcQ+73)
 12665  00378A  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12666  00378C  6ED9               	movwf	fsr2l,c
 12667  00378E  0E09               	movlw	high (_RbcQ+73)
 12668  003790  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12669  003792  6EDA               	movwf	fsr2h,c
 12670  003794  6ADF               	clrf	indf2,c
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;BroadcastManager.c: 64: if(isSecure==1)
 12674  003796  05A3               	decf	BroadcastManagerDelaySend@isSecure& (0+255),w,b
 12675  003798  E111               	bnz	l15836
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;BroadcastManager.c: 65: {
 12679                           ;BroadcastManager.c: 66: RbcQ[i].Flags|=(1<<0);
 12680  00379A  0E4A               	movlw	74
 12681  00379C  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12682  00379E  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12683  0037A2  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12684  0037A6  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12685  0037A8  50F3               	movf	prodl,w,c
 12686  0037AA  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12687  0037AC  0E94               	movlw	low (_RbcQ+73)
 12688  0037AE  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12689  0037B0  6ED9               	movwf	fsr2l,c
 12690  0037B2  0E09               	movlw	high (_RbcQ+73)
 12691  0037B4  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12692  0037B6  6EDA               	movwf	fsr2h,c
 12693  0037B8  0E00               	movlw	0
 12694  0037BA  80DB               	bsf	plusw2,0,c
 12695  0037BC                     l15836:
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;BroadcastManager.c: 67: }
 12699                           ;BroadcastManager.c: 68: if(isInterPan==1)
 12700  0037BC  05A4               	decf	BroadcastManagerDelaySend@isInterPan& (0+255),w,b
 12701  0037BE  E111               	bnz	l15840
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;BroadcastManager.c: 69: {
 12705                           ;BroadcastManager.c: 70: RbcQ[i].Flags|=(1<<1);
 12706  0037C0  0E4A               	movlw	74
 12707  0037C2  03AC               	mulwf	BroadcastManagerDelaySend@i& (0+255),b
 12708  0037C4  CFF3 F0A5          	movff	prodl,??_BroadcastManagerDelaySend
 12709  0037C8  CFF4 F0A6          	movff	prodh,??_BroadcastManagerDelaySend+1
 12710  0037CC  03AD               	mulwf	(BroadcastManagerDelaySend@i+1)& (0+255),b
 12711  0037CE  50F3               	movf	prodl,w,c
 12712  0037D0  27A6               	addwf	(??_BroadcastManagerDelaySend+1)& (0+255),f,b
 12713  0037D2  0E94               	movlw	low (_RbcQ+73)
 12714  0037D4  25A5               	addwf	??_BroadcastManagerDelaySend& (0+255),w,b
 12715  0037D6  6ED9               	movwf	fsr2l,c
 12716  0037D8  0E09               	movlw	high (_RbcQ+73)
 12717  0037DA  21A6               	addwfc	(??_BroadcastManagerDelaySend+1)& (0+255),w,b
 12718  0037DC  6EDA               	movwf	fsr2h,c
 12719  0037DE  0E00               	movlw	0
 12720  0037E0  82DB               	bsf	plusw2,1,c
 12721  0037E2                     l15840:
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;BroadcastManager.c: 71: }
 12725                           ;BroadcastManager.c: 72: res=1;
 12726  0037E2  0E01               	movlw	1
 12727  0037E4  6FAB               	movwf	BroadcastManagerDelaySend@res& (0+255),b
 12728                           
 12729                           ;BroadcastManager.c: 73: break;
 12730  0037E6  D008               	goto	l15846
 12731  0037E8                     l15842:
 12732                           
 12733                           ; BSR set to: 0
 12734  0037E8  4BAC               	infsnz	BroadcastManagerDelaySend@i& (0+255),f,b
 12735  0037EA  2BAD               	incf	(BroadcastManagerDelaySend@i+1)& (0+255),f,b
 12736                           
 12737                           ; BSR set to: 0
 12738  0037EC  51AD               	movf	(BroadcastManagerDelaySend@i+1)& (0+255),w,b
 12739  0037EE  E104               	bnz	u18950
 12740  0037F0  0E06               	movlw	6
 12741  0037F2  5DAC               	subwf	BroadcastManagerDelaySend@i& (0+255),w,b
 12742  0037F4  E201 D740          	bnc	l15822
 12743  0037F8                     u18950:
 12744  0037F8                     l15846:
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;BroadcastManager.c: 74: }
 12748                           ;BroadcastManager.c: 75: }
 12749                           ;BroadcastManager.c: 76: return(res);
 12750  0037F8  51AB               	movf	BroadcastManagerDelaySend@res& (0+255),w,b
 12751                           
 12752                           ; BSR set to: 0
 12753  0037FA  0012               	return		;funcret
 12754  0037FC                     __end_of_BroadcastManagerDelaySend:
 12755                           	opt stack 0
 12756                           tblptru	equ	0xFF8
 12757                           tblptrh	equ	0xFF7
 12758                           tblptrl	equ	0xFF6
 12759                           tablat	equ	0xFF5
 12760                           prodh	equ	0xFF4
 12761                           prodl	equ	0xFF3
 12762                           intcon3	equ	0xFF0
 12763                           postinc0	equ	0xFEE
 12764                           plusw0	equ	0xFEB
 12765                           fsr0h	equ	0xFEA
 12766                           fsr0l	equ	0xFE9
 12767                           wreg	equ	0xFE8
 12768                           postdec1	equ	0xFE5
 12769                           plusw1	equ	0xFE3
 12770                           fsr1h	equ	0xFE2
 12771                           fsr1l	equ	0xFE1
 12772                           indf2	equ	0xFDF
 12773                           postinc2	equ	0xFDE
 12774                           postdec2	equ	0xFDD
 12775                           plusw2	equ	0xFDB
 12776                           fsr2h	equ	0xFDA
 12777                           fsr2l	equ	0xFD9
 12778                           status	equ	0xFD8
 12779                           
 12780 ;; *************** function _AddMSToTick *****************
 12781 ;; Defined at:
 12782 ;;		line 57 in file "../TimeTick.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 12785 ;;  ms              4   55[BANK0 ] unsigned long 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;		None
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  8   47[BANK0 ] struct TickMS_t_def
 12790 ;; Registers used:
 12791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 12792 ;; Tracked objects:
 12793 ;;		On entry : F/0
 12794 ;;		On exit  : F/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12797 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12799 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;Total ram usage:       16 bytes
 12802 ;; Hardware stack levels used:    1
 12803 ;; Hardware stack levels required when called:    5
 12804 ;; This function calls:
 12805 ;;		Nothing
 12806 ;; This function is called by:
 12807 ;;		_BroadcastManagerDelaySend
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text52
 12812  006068                     __ptext52:
 12813                           	opt stack 0
 12814  006068                     _AddMSToTick:
 12815                           	opt stack 20
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;TimeTick.c: 59: if((0xffffffff-tick.lsb)>=ms)
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;incstack = 0
 12822  006068  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 12823  00606C  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12824  006070  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12825  006074  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12826  006078  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 12827  00607A  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12828  00607C  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12829  00607E  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12830  006080  5197               	movf	AddMSToTick@ms& (0+255),w,b
 12831  006082  5D9B               	subwf	??_AddMSToTick& (0+255),w,b
 12832  006084  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12833  006086  599C               	subwfb	(??_AddMSToTick+1)& (0+255),w,b
 12834  006088  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12835  00608A  599D               	subwfb	(??_AddMSToTick+2)& (0+255),w,b
 12836  00608C  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12837  00608E  599E               	subwfb	(??_AddMSToTick+3)& (0+255),w,b
 12838  006090  E309               	bnc	l15724
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;TimeTick.c: 60: {
 12842                           ;TimeTick.c: 61: tick.lsb+=ms;
 12843  006092  5197               	movf	AddMSToTick@ms& (0+255),w,b
 12844  006094  278F               	addwf	AddMSToTick@tick& (0+255),f,b
 12845  006096  5198               	movf	(AddMSToTick@ms+1)& (0+255),w,b
 12846  006098  2390               	addwfc	(AddMSToTick@tick+1)& (0+255),f,b
 12847  00609A  5199               	movf	(AddMSToTick@ms+2)& (0+255),w,b
 12848  00609C  2391               	addwfc	(AddMSToTick@tick+2)& (0+255),f,b
 12849  00609E  519A               	movf	(AddMSToTick@ms+3)& (0+255),w,b
 12850  0060A0  2392               	addwfc	(AddMSToTick@tick+3)& (0+255),f,b
 12851                           
 12852                           ;TimeTick.c: 62: }else
 12853  0060A2  D01D               	goto	l15726
 12854  0060A4                     l15724:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;TimeTick.c: 63: {
 12858                           ;TimeTick.c: 64: tick.lsb=ms-(0xffffffff-tick.lsb);
 12859  0060A4  C08F  F09B         	movff	AddMSToTick@tick,??_AddMSToTick
 12860  0060A8  C090  F09C         	movff	AddMSToTick@tick+1,??_AddMSToTick+1
 12861  0060AC  C091  F09D         	movff	AddMSToTick@tick+2,??_AddMSToTick+2
 12862  0060B0  C092  F09E         	movff	AddMSToTick@tick+3,??_AddMSToTick+3
 12863  0060B4  1F9B               	comf	??_AddMSToTick& (0+255),f,b
 12864  0060B6  1F9C               	comf	(??_AddMSToTick+1)& (0+255),f,b
 12865  0060B8  1F9D               	comf	(??_AddMSToTick+2)& (0+255),f,b
 12866  0060BA  1F9E               	comf	(??_AddMSToTick+3)& (0+255),f,b
 12867  0060BC  519B               	movf	??_AddMSToTick& (0+255),w,b
 12868  0060BE  5D97               	subwf	AddMSToTick@ms& (0+255),w,b
 12869  0060C0  6F8F               	movwf	AddMSToTick@tick& (0+255),b
 12870  0060C2  519C               	movf	(??_AddMSToTick+1)& (0+255),w,b
 12871  0060C4  5998               	subwfb	(AddMSToTick@ms+1)& (0+255),w,b
 12872  0060C6  6F90               	movwf	(AddMSToTick@tick+1)& (0+255),b
 12873  0060C8  519D               	movf	(??_AddMSToTick+2)& (0+255),w,b
 12874  0060CA  5999               	subwfb	(AddMSToTick@ms+2)& (0+255),w,b
 12875  0060CC  6F91               	movwf	(AddMSToTick@tick+2)& (0+255),b
 12876  0060CE  519E               	movf	(??_AddMSToTick+3)& (0+255),w,b
 12877  0060D0  599A               	subwfb	(AddMSToTick@ms+3)& (0+255),w,b
 12878  0060D2  6F92               	movwf	(AddMSToTick@tick+3)& (0+255),b
 12879                           
 12880                           ;TimeTick.c: 65: tick.msb++;
 12881  0060D4  2B93               	incf	(AddMSToTick@tick+4)& (0+255),f,b
 12882  0060D6  0E00               	movlw	0
 12883  0060D8  2394               	addwfc	(AddMSToTick@tick+5)& (0+255),f,b
 12884  0060DA  2395               	addwfc	(AddMSToTick@tick+6)& (0+255),f,b
 12885  0060DC  2396               	addwfc	(AddMSToTick@tick+7)& (0+255),f,b
 12886  0060DE                     l15726:
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;TimeTick.c: 66: }
 12890                           ;TimeTick.c: 67: return(tick);
 12891  0060DE  EE20  F08F         	lfsr	2,AddMSToTick@tick
 12892  0060E2  EE00  F08F         	lfsr	0,?_AddMSToTick
 12893  0060E6  0E07               	movlw	7
 12894  0060E8                     u18781:
 12895  0060E8  CFDB FFEB          	movff	plusw2,plusw0
 12896  0060EC  06E8               	decf	wreg,f,c
 12897  0060EE  E2FC               	bc	u18781
 12898                           
 12899                           ; BSR set to: 0
 12900  0060F0  0012               	return		;funcret
 12901  0060F2                     __end_of_AddMSToTick:
 12902                           	opt stack 0
 12903                           tblptru	equ	0xFF8
 12904                           tblptrh	equ	0xFF7
 12905                           tblptrl	equ	0xFF6
 12906                           tablat	equ	0xFF5
 12907                           prodh	equ	0xFF4
 12908                           prodl	equ	0xFF3
 12909                           intcon3	equ	0xFF0
 12910                           postinc0	equ	0xFEE
 12911                           plusw0	equ	0xFEB
 12912                           fsr0h	equ	0xFEA
 12913                           fsr0l	equ	0xFE9
 12914                           wreg	equ	0xFE8
 12915                           postdec1	equ	0xFE5
 12916                           plusw1	equ	0xFE3
 12917                           fsr1h	equ	0xFE2
 12918                           fsr1l	equ	0xFE1
 12919                           indf2	equ	0xFDF
 12920                           postinc2	equ	0xFDE
 12921                           postdec2	equ	0xFDD
 12922                           plusw2	equ	0xFDB
 12923                           fsr2h	equ	0xFDA
 12924                           fsr2l	equ	0xFD9
 12925                           status	equ	0xFD8
 12926                           
 12927 ;; *************** function _NetworkDataArrivedEvent *****************
 12928 ;; Defined at:
 12929 ;;		line 268 in file "../src/Bridge.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;  source          2   27[BANK0 ] struct addr_t_def
 12932 ;;  data            2   29[BANK0 ] PTR unsigned char 
 12933 ;;		 -> userdata(54), 
 12934 ;;  size            2   31[BANK0 ] unsigned int 
 12935 ;;  isBroadcast     1   33[BANK0 ] unsigned char 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      void 
 12940 ;; Registers used:
 12941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : F/0
 12944 ;;		On exit  : F/1
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12947 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12950 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12951 ;;Total ram usage:        7 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    6
 12954 ;; This function calls:
 12955 ;;		_memset
 12956 ;; This function is called by:
 12957 ;;		_NetworkManagerProcessIncomingData
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text53
 12962  006A60                     __ptext53:
 12963                           	opt stack 0
 12964  006A60                     _NetworkDataArrivedEvent:
 12965                           	opt stack 21
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;Bridge.c: 270: srcAddress=source;
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;incstack = 0
 12972  006A60  C07B  F1E9         	movff	NetworkDataArrivedEvent@source,_srcAddress
 12973  006A64  C07C  F1EA         	movff	NetworkDataArrivedEvent@source+1,_srcAddress+1
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;Bridge.c: 271: memset(&rxMessage,0x00,sizeof(rxMessage));
 12977  006A68  0EBA               	movlw	low _rxMessage
 12978  006A6A  6F73               	movwf	memset@p1& (0+255),b
 12979  006A6C  0E02               	movlw	high _rxMessage
 12980  006A6E  6F74               	movwf	(memset@p1+1)& (0+255),b
 12981  006A70  6B76               	clrf	(memset@c+1)& (0+255),b
 12982  006A72  6B75               	clrf	memset@c& (0+255),b
 12983  006A74  6B78               	clrf	(memset@n+1)& (0+255),b
 12984  006A76  0E0A               	movlw	10
 12985  006A78  6F77               	movwf	memset@n& (0+255),b
 12986  006A7A  EC47  F039         	call	_memset	;wreg free
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;Bridge.c: 272: rxMessage.Payload=data;
 12990  006A7E  C07D  F2BF         	movff	NetworkDataArrivedEvent@data,_rxMessage+5
 12991  006A82  C07E  F2C0         	movff	NetworkDataArrivedEvent@data+1,_rxMessage+6
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;Bridge.c: 273: rxMessage.PayloadSize=size;
 12995  006A86  C07F  F2C1         	movff	NetworkDataArrivedEvent@size,_rxMessage+7
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;Bridge.c: 274: rxMessage.SourceAddress=srcAddress.bytes;
 12999  006A8A  0EE9               	movlw	low _srcAddress
 13000  006A8C  0102               	movlb	2	; () banked
 13001  006A8E  6FBD               	movwf	(_rxMessage+3)& (0+255),b
 13002  006A90  0E01               	movlw	high _srcAddress
 13003  006A92  6FBE               	movwf	(_rxMessage+4)& (0+255),b
 13004                           
 13005                           ; BSR set to: 2
 13006                           ;Bridge.c: 275: rxMessage.SourcePANID.Val=myPANID;
 13007  006A94  C04D  F2BB         	movff	_myPANID,_rxMessage+1
 13008  006A98  C04E  F2BC         	movff	_myPANID+1,_rxMessage+2
 13009                           
 13010                           ; BSR set to: 2
 13011                           ;Bridge.c: 276: rxMessage.flags.bits.broadcast=isBroadcast;
 13012  006A9C  51BA               	movf	_rxMessage& (0+255),w,b
 13013  006A9E  0100               	movlb	0	; () banked
 13014  006AA0  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 13015  006AA2  0BFC               	andlw	-4
 13016  006AA4  1981               	xorwf	NetworkDataArrivedEvent@isBroadcast& (0+255),w,b
 13017  006AA6  0102               	movlb	2	; () banked
 13018  006AA8  6FBA               	movwf	_rxMessage& (0+255),b
 13019                           
 13020                           ; BSR set to: 2
 13021                           ;Bridge.c: 277: rxMessage.flags.bits.srcPrsnt=1;
 13022  006AAA  8DBA               	bsf	_rxMessage& (0+255),6,b
 13023                           
 13024                           ; BSR set to: 2
 13025                           ;Bridge.c: 278: UserMessageAvailable=1;
 13026  006AAC  0E01               	movlw	1
 13027  006AAE  0101               	movlb	1	; () banked
 13028  006AB0  6FC0               	movwf	_UserMessageAvailable& (0+255),b
 13029                           
 13030                           ; BSR set to: 1
 13031  006AB2  0C01               	retlw	1	;funcret
 13032  006AB4                     __end_of_NetworkDataArrivedEvent:
 13033                           	opt stack 0
 13034                           tblptru	equ	0xFF8
 13035                           tblptrh	equ	0xFF7
 13036                           tblptrl	equ	0xFF6
 13037                           tablat	equ	0xFF5
 13038                           prodh	equ	0xFF4
 13039                           prodl	equ	0xFF3
 13040                           intcon3	equ	0xFF0
 13041                           postinc0	equ	0xFEE
 13042                           plusw0	equ	0xFEB
 13043                           fsr0h	equ	0xFEA
 13044                           fsr0l	equ	0xFE9
 13045                           wreg	equ	0xFE8
 13046                           postdec1	equ	0xFE5
 13047                           plusw1	equ	0xFE3
 13048                           fsr1h	equ	0xFE2
 13049                           fsr1l	equ	0xFE1
 13050                           indf2	equ	0xFDF
 13051                           postinc2	equ	0xFDE
 13052                           postdec2	equ	0xFDD
 13053                           plusw2	equ	0xFDB
 13054                           fsr2h	equ	0xFDA
 13055                           fsr2l	equ	0xFD9
 13056                           status	equ	0xFD8
 13057                           
 13058 ;; *************** function _IsNetworkDevice *****************
 13059 ;; Defined at:
 13060 ;;		line 47 in file "../DeviceManager.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;  address         2   47[BANK0 ] struct addr_t_def
 13063 ;;  devType         1   49[BANK0 ] enum E145
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  oldest          8   52[BANK0 ] struct TickMS_t_def
 13066 ;;  i               2   63[BANK0 ] unsigned int 
 13067 ;;  empty           2   61[BANK0 ] unsigned int 
 13068 ;;  res             1   60[BANK0 ] unsigned char 
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      unsigned char 
 13071 ;; Registers used:
 13072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : F/0
 13075 ;;		On exit  : F/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13078 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13079 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13081 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13082 ;;Total ram usage:       18 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    8
 13085 ;; This function calls:
 13086 ;;		_MSTickGet
 13087 ;;		_NetworkAddressSizeGet
 13088 ;;		_isInvalidAddress
 13089 ;;		_isSameAddress
 13090 ;;		_memcpy
 13091 ;;		_memset
 13092 ;; This function is called by:
 13093 ;;		_radioReceivedPacket
 13094 ;;		_NetworkManagerProcessIncomingData
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text54
 13099  0034E2                     __ptext54:
 13100                           	opt stack 0
 13101  0034E2                     _IsNetworkDevice:
 13102                           	opt stack 19
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;DeviceManager.c: 49: uint16_t i;
 13106                           ;DeviceManager.c: 50: uint16_t empty=0xffff;
 13107                           
 13108                           ; BSR set to: 1
 13109                           ;incstack = 0
 13110  0034E2  699D               	setf	IsNetworkDevice@empty& (0+255),b
 13111  0034E4  699E               	setf	(IsNetworkDevice@empty+1)& (0+255),b
 13112                           
 13113                           ;DeviceManager.c: 51: TickMS oldest;
 13114                           ;DeviceManager.c: 52: bool res=0;
 13115  0034E6  6B9C               	clrf	IsNetworkDevice@res& (0+255),b
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;DeviceManager.c: 54: memset(&oldest,0x00,sizeof(oldest));
 13119  0034E8  0E94               	movlw	low IsNetworkDevice@oldest
 13120  0034EA  6F73               	movwf	memset@p1& (0+255),b
 13121  0034EC  6B74               	clrf	(memset@p1+1)& (0+255),b
 13122  0034EE  6B76               	clrf	(memset@c+1)& (0+255),b
 13123  0034F0  6B75               	clrf	memset@c& (0+255),b
 13124  0034F2  6B78               	clrf	(memset@n+1)& (0+255),b
 13125  0034F4  0E08               	movlw	8
 13126  0034F6  6F77               	movwf	memset@n& (0+255),b
 13127  0034F8  EC47  F039         	call	_memset	;wreg free
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;DeviceManager.c: 56: for(i=0;i<20;i++)
 13131  0034FC  6B9F               	clrf	IsNetworkDevice@i& (0+255),b
 13132  0034FE  6BA0               	clrf	(IsNetworkDevice@i+1)& (0+255),b
 13133  003500                     l16404:
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;DeviceManager.c: 57: {
 13137                           ;DeviceManager.c: 58: if(isSameAddress(address,list[i].address)==1)
 13138  003500  C08F  F07D         	movff	IsNetworkDevice@address,isSameAddress@a1
 13139  003504  C090  F07E         	movff	IsNetworkDevice@address+1,isSameAddress@a1+1
 13140  003508  0E0B               	movlw	11
 13141  00350A  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 13142  00350C  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13143  003510  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13144  003514  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13145  003516  50F3               	movf	prodl,w,c
 13146  003518  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13147  00351A  0E00               	movlw	low _list
 13148  00351C  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13149  00351E  6ED9               	movwf	fsr2l,c
 13150  003520  0E08               	movlw	high _list
 13151  003522  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13152  003524  6EDA               	movwf	fsr2h,c
 13153  003526  CFDE F07F          	movff	postinc2,isSameAddress@a2
 13154  00352A  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 13155  00352E  ECBD  F039         	call	_isSameAddress	;wreg free
 13156  003532  06E8               	decf	wreg,f,c
 13157  003534  E12A               	bnz	l16414
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;DeviceManager.c: 59: {
 13161                           ;DeviceManager.c: 60: list[i].LastHeard=MSTickGet();
 13162  003536  EC27  F038         	call	_MSTickGet	;wreg free
 13163  00353A  0E0B               	movlw	11
 13164  00353C  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 13165  00353E  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13166  003542  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13167  003546  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13168  003548  50F3               	movf	prodl,w,c
 13169  00354A  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13170  00354C  0E02               	movlw	low (_list+2)
 13171  00354E  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13172  003550  6ED9               	movwf	fsr2l,c
 13173  003552  0E08               	movlw	high (_list+2)
 13174  003554  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13175  003556  6EDA               	movwf	fsr2h,c
 13176  003558  0E07               	movlw	7
 13177  00355A                     u19681:
 13178  00355A  CFEB FFDB          	movff	plusw0,plusw2
 13179  00355E  06E8               	decf	wreg,f,c
 13180  003560  E2FC               	bc	u19681
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;DeviceManager.c: 61: list[i].devType=devType;
 13184  003562  0E0B               	movlw	11
 13185  003564  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 13186  003566  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13187  00356A  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13188  00356E  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13189  003570  50F3               	movf	prodl,w,c
 13190  003572  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13191  003574  0E0A               	movlw	low (_list+10)
 13192  003576  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13193  003578  6ED9               	movwf	fsr2l,c
 13194  00357A  0E08               	movlw	high (_list+10)
 13195  00357C  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13196  00357E  6EDA               	movwf	fsr2h,c
 13197  003580  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;DeviceManager.c: 62: res=1;
 13201  003584  0E01               	movlw	1
 13202  003586  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 13203                           
 13204                           ;DeviceManager.c: 63: break;
 13205  003588  D026               	goto	l16424
 13206  00358A                     l16414:
 13207                           
 13208                           ; BSR set to: 0
 13209  00358A  0E0B               	movlw	11
 13210  00358C  039F               	mulwf	IsNetworkDevice@i& (0+255),b
 13211  00358E  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13212  003592  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13213  003596  03A0               	mulwf	(IsNetworkDevice@i+1)& (0+255),b
 13214  003598  50F3               	movf	prodl,w,c
 13215  00359A  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13216  00359C  0E00               	movlw	low _list
 13217  00359E  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13218  0035A0  6ED9               	movwf	fsr2l,c
 13219  0035A2  0E08               	movlw	high _list
 13220  0035A4  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13221  0035A6  6EDA               	movwf	fsr2h,c
 13222  0035A8  CFDE F085          	movff	postinc2,isInvalidAddress@address
 13223  0035AC  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
 13224  0035B0  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 13225  0035B4  0900               	iorlw	0
 13226  0035B6  E008               	bz	l16420
 13227                           
 13228                           ; BSR set to: 0
 13229  0035B8  299D               	incf	IsNetworkDevice@empty& (0+255),w,b
 13230  0035BA  E106               	bnz	l16420
 13231  0035BC  299E               	incf	(IsNetworkDevice@empty+1)& (0+255),w,b
 13232  0035BE  E104               	bnz	l16420
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;DeviceManager.c: 65: {
 13236                           ;DeviceManager.c: 66: empty=i;
 13237  0035C0  C09F  F09D         	movff	IsNetworkDevice@i,IsNetworkDevice@empty
 13238  0035C4  C0A0  F09E         	movff	IsNetworkDevice@i+1,IsNetworkDevice@empty+1
 13239  0035C8                     l16420:
 13240                           
 13241                           ; BSR set to: 0
 13242  0035C8  4B9F               	infsnz	IsNetworkDevice@i& (0+255),f,b
 13243  0035CA  2BA0               	incf	(IsNetworkDevice@i+1)& (0+255),f,b
 13244                           
 13245                           ; BSR set to: 0
 13246  0035CC  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 13247  0035CE  E103               	bnz	u19710
 13248  0035D0  0E14               	movlw	20
 13249  0035D2  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 13250  0035D4  E395               	bnc	l16404
 13251  0035D6                     u19710:
 13252  0035D6                     l16424:
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;DeviceManager.c: 67: }
 13256                           ;DeviceManager.c: 68: }
 13257                           ;DeviceManager.c: 69: if(i>=20)
 13258  0035D6  51A0               	movf	(IsNetworkDevice@i+1)& (0+255),w,b
 13259  0035D8  E103               	bnz	u19720
 13260  0035DA  0E14               	movlw	20
 13261  0035DC  5D9F               	subwf	IsNetworkDevice@i& (0+255),w,b
 13262  0035DE  E347               	bnc	l16434
 13263  0035E0                     u19720:
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;DeviceManager.c: 70: {
 13267                           ;DeviceManager.c: 72: if(empty<20)
 13268  0035E0  519E               	movf	(IsNetworkDevice@empty+1)& (0+255),w,b
 13269  0035E2  E145               	bnz	l16434
 13270  0035E4  0E14               	movlw	20
 13271  0035E6  5D9D               	subwf	IsNetworkDevice@empty& (0+255),w,b
 13272  0035E8  E242               	bc	l16434
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;DeviceManager.c: 73: {
 13276                           ;DeviceManager.c: 74: memcpy(list[empty].address.bytes,address.bytes,NetworkAddressSizeG
      +                          et());
 13277  0035EA  0E0B               	movlw	11
 13278  0035EC  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 13279  0035EE  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13280  0035F2  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13281  0035F6  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13282  0035F8  50F3               	movf	prodl,w,c
 13283  0035FA  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13284  0035FC  0E00               	movlw	low _list
 13285  0035FE  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13286  003600  6F75               	movwf	memcpy@d1& (0+255),b
 13287  003602  0E08               	movlw	high _list
 13288  003604  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13289  003606  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 13290  003608  0E8F               	movlw	low IsNetworkDevice@address
 13291  00360A  6F77               	movwf	memcpy@s1& (0+255),b
 13292  00360C  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 13293  00360E  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 13294  003612  0100               	movlb	0	; () banked
 13295  003614  6F79               	movwf	memcpy@n& (0+255),b
 13296  003616  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 13297  003618  EC05  F035         	call	_memcpy	;wreg free
 13298                           
 13299                           ;DeviceManager.c: 75: list[empty].LastHeard=MSTickGet();
 13300  00361C  EC27  F038         	call	_MSTickGet	;wreg free
 13301  003620  0E0B               	movlw	11
 13302  003622  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 13303  003624  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13304  003628  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13305  00362C  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13306  00362E  50F3               	movf	prodl,w,c
 13307  003630  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13308  003632  0E02               	movlw	low (_list+2)
 13309  003634  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13310  003636  6ED9               	movwf	fsr2l,c
 13311  003638  0E08               	movlw	high (_list+2)
 13312  00363A  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13313  00363C  6EDA               	movwf	fsr2h,c
 13314  00363E  0E07               	movlw	7
 13315  003640                     u19741:
 13316  003640  CFEB FFDB          	movff	plusw0,plusw2
 13317  003644  06E8               	decf	wreg,f,c
 13318  003646  E2FC               	bc	u19741
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;DeviceManager.c: 76: list[empty].devType=devType;
 13322  003648  0E0B               	movlw	11
 13323  00364A  039D               	mulwf	IsNetworkDevice@empty& (0+255),b
 13324  00364C  CFF3 F092          	movff	prodl,??_IsNetworkDevice
 13325  003650  CFF4 F093          	movff	prodh,??_IsNetworkDevice+1
 13326  003654  039E               	mulwf	(IsNetworkDevice@empty+1)& (0+255),b
 13327  003656  50F3               	movf	prodl,w,c
 13328  003658  2793               	addwf	(??_IsNetworkDevice+1)& (0+255),f,b
 13329  00365A  0E0A               	movlw	low (_list+10)
 13330  00365C  2592               	addwf	??_IsNetworkDevice& (0+255),w,b
 13331  00365E  6ED9               	movwf	fsr2l,c
 13332  003660  0E08               	movlw	high (_list+10)
 13333  003662  2193               	addwfc	(??_IsNetworkDevice+1)& (0+255),w,b
 13334  003664  6EDA               	movwf	fsr2h,c
 13335  003666  C091  FFDF         	movff	IsNetworkDevice@devType,indf2
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;DeviceManager.c: 77: res=1;
 13339  00366A  0E01               	movlw	1
 13340  00366C  6F9C               	movwf	IsNetworkDevice@res& (0+255),b
 13341  00366E                     l16434:
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;DeviceManager.c: 78: }
 13345                           ;DeviceManager.c: 79: }
 13346                           ;DeviceManager.c: 83: return(res);
 13347  00366E  519C               	movf	IsNetworkDevice@res& (0+255),w,b
 13348                           
 13349                           ; BSR set to: 0
 13350  003670  0012               	return		;funcret
 13351  003672                     __end_of_IsNetworkDevice:
 13352                           	opt stack 0
 13353                           tblptru	equ	0xFF8
 13354                           tblptrh	equ	0xFF7
 13355                           tblptrl	equ	0xFF6
 13356                           tablat	equ	0xFF5
 13357                           prodh	equ	0xFF4
 13358                           prodl	equ	0xFF3
 13359                           intcon3	equ	0xFF0
 13360                           postinc0	equ	0xFEE
 13361                           plusw0	equ	0xFEB
 13362                           fsr0h	equ	0xFEA
 13363                           fsr0l	equ	0xFE9
 13364                           wreg	equ	0xFE8
 13365                           postdec1	equ	0xFE5
 13366                           plusw1	equ	0xFE3
 13367                           fsr1h	equ	0xFE2
 13368                           fsr1l	equ	0xFE1
 13369                           indf2	equ	0xFDF
 13370                           postinc2	equ	0xFDE
 13371                           postdec2	equ	0xFDD
 13372                           plusw2	equ	0xFDB
 13373                           fsr2h	equ	0xFDA
 13374                           fsr2l	equ	0xFD9
 13375                           status	equ	0xFD8
 13376                           
 13377 ;; *************** function _DeviceManagerGetDeviceData *****************
 13378 ;; Defined at:
 13379 ;;		line 185 in file "../DeviceManager.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  address         2   33[BANK0 ] struct addr_t_def
 13382 ;;  data            2   35[BANK0 ] PTR unsigned char 
 13383 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), 
 13384 ;;  isSecure        2   37[BANK0 ] PTR unsigned char 
 13385 ;;		 -> NetworkManagerProcessIncomingData@isSecurePacket(1), 
 13386 ;;  isFormed        2   39[BANK0 ] PTR unsigned char 
 13387 ;;		 -> NetworkManagerProcessIncomingData@isFormed(1), 
 13388 ;; Auto vars:     Size  Location     Type
 13389 ;;  j               2   53[BANK0 ] unsigned int 
 13390 ;;  devBuffer       2   51[BANK0 ] PTR struct devDataBuffer
 13391 ;;		 -> NULL(0), sleepRFDData(75), 
 13392 ;;  recordLen       2   49[BANK0 ] unsigned int 
 13393 ;;  index           2   47[BANK0 ] unsigned int 
 13394 ;;  size            2   45[BANK0 ] unsigned int 
 13395 ;;  i               2   43[BANK0 ] unsigned int 
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  2   33[BANK0 ] unsigned int 
 13398 ;; Registers used:
 13399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13400 ;; Tracked objects:
 13401 ;;		On entry : F/0
 13402 ;;		On exit  : F/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13405 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13406 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13407 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13408 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13409 ;;Total ram usage:       22 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:    7
 13412 ;; This function calls:
 13413 ;;		_NetworkAddressSizeGet
 13414 ;;		_isSameAddress
 13415 ;;		_memcpy
 13416 ;; This function is called by:
 13417 ;;		_NetworkManagerProcessIncomingData
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text55
 13422  003986                     __ptext55:
 13423                           	opt stack 0
 13424  003986                     _DeviceManagerGetDeviceData:
 13425                           	opt stack 20
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;DeviceManager.c: 187: uint16_t i;
 13429                           ;DeviceManager.c: 188: uint16_t size=0;
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;incstack = 0
 13433  003986  6B8D               	clrf	DeviceManagerGetDeviceData@size& (0+255),b
 13434  003988  6B8E               	clrf	(DeviceManagerGetDeviceData@size+1)& (0+255),b
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;DeviceManager.c: 189: devDataBuffer_t *devBuffer;
 13438                           ;DeviceManager.c: 190: uint16_t recordLen=NetworkAddressSizeGet()+(1+2)+sleepRFDMaxBuffe
      +                          rLen;
 13439  00398A  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 13440  00398E  25B1               	addwf	_sleepRFDMaxBufferLen& (0+255),w,b
 13441  003990  0100               	movlb	0	; () banked
 13442  003992  6F89               	movwf	??_DeviceManagerGetDeviceData& (0+255),b
 13443  003994  0E00               	movlw	0
 13444  003996  0101               	movlb	1	; () banked
 13445  003998  21B2               	addwfc	(_sleepRFDMaxBufferLen+1)& (0+255),w,b
 13446  00399A  0100               	movlb	0	; () banked
 13447  00399C  6F8A               	movwf	(??_DeviceManagerGetDeviceData+1)& (0+255),b
 13448  00399E  0E03               	movlw	3
 13449  0039A0  2589               	addwf	??_DeviceManagerGetDeviceData& (0+255),w,b
 13450  0039A2  6F91               	movwf	DeviceManagerGetDeviceData@recordLen& (0+255),b
 13451  0039A4  0E00               	movlw	0
 13452  0039A6  218A               	addwfc	(??_DeviceManagerGetDeviceData+1)& (0+255),w,b
 13453  0039A8  6F92               	movwf	(DeviceManagerGetDeviceData@recordLen+1)& (0+255),b
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;DeviceManager.c: 191: uint16_t index=0;
 13457  0039AA  6B8F               	clrf	DeviceManagerGetDeviceData@index& (0+255),b
 13458  0039AC  6B90               	clrf	(DeviceManagerGetDeviceData@index+1)& (0+255),b
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;DeviceManager.c: 192: uint16_t j;
 13462                           ;DeviceManager.c: 194: for(i=0;i<sleepRFDBufferCount;i++)
 13463  0039AE  6B8B               	clrf	DeviceManagerGetDeviceData@i& (0+255),b
 13464  0039B0  6B8C               	clrf	(DeviceManagerGetDeviceData@i+1)& (0+255),b
 13465  0039B2  D0A0               	goto	l16762
 13466  0039B4                     l16732:
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;DeviceManager.c: 195: {
 13470                           ;DeviceManager.c: 196: devBuffer=(devDataBuffer_t*)&devBuffers[index];
 13471  0039B4  518F               	movf	DeviceManagerGetDeviceData@index& (0+255),w,b
 13472  0039B6  25E9               	addwf	_devBuffers& (0+255),w,b
 13473  0039B8  6F93               	movwf	DeviceManagerGetDeviceData@devBuffer& (0+255),b
 13474  0039BA  5190               	movf	(DeviceManagerGetDeviceData@index+1)& (0+255),w,b
 13475  0039BC  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 13476  0039BE  6F94               	movwf	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),b
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;DeviceManager.c: 197: if(isSameAddress(devBuffer->address,address)==1)
 13480  0039C0  C093  FFD9         	movff	DeviceManagerGetDeviceData@devBuffer,fsr2l
 13481  0039C4  C094  FFDA         	movff	DeviceManagerGetDeviceData@devBuffer+1,fsr2h
 13482  0039C8  CFDE F07D          	movff	postinc2,isSameAddress@a1
 13483  0039CC  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 13484  0039D0  C081  F07F         	movff	DeviceManagerGetDeviceData@address,isSameAddress@a2
 13485  0039D4  C082  F080         	movff	DeviceManagerGetDeviceData@address+1,isSameAddress@a2+1
 13486  0039D8  ECBD  F039         	call	_isSameAddress	;wreg free
 13487  0039DC  06E8               	decf	wreg,f,c
 13488  0039DE  E001 D083          	bnz	l16758
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;DeviceManager.c: 198: {
 13492                           ;DeviceManager.c: 199: memcpy(data,devBuffer->data,devBuffer->size);
 13493  0039E2  C083  F075         	movff	DeviceManagerGetDeviceData@data,memcpy@d1
 13494  0039E6  C084  F076         	movff	DeviceManagerGetDeviceData@data+1,memcpy@d1+1
 13495  0039EA  0E05               	movlw	5
 13496  0039EC  2593               	addwf	DeviceManagerGetDeviceData@devBuffer& (0+255),w,b
 13497  0039EE  6F77               	movwf	memcpy@s1& (0+255),b
 13498  0039F0  0E00               	movlw	0
 13499  0039F2  2194               	addwfc	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),w,b
 13500  0039F4  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 13501  0039F6  EE20 F002          	lfsr	2,2
 13502  0039FA  5193               	movf	DeviceManagerGetDeviceData@devBuffer& (0+255),w,b
 13503  0039FC  26D9               	addwf	fsr2l,f,c
 13504  0039FE  5194               	movf	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),w,b
 13505  003A00  22DA               	addwfc	fsr2h,f,c
 13506  003A02  CFDE F079          	movff	postinc2,memcpy@n
 13507  003A06  CFDD F07A          	movff	postdec2,memcpy@n+1
 13508  003A0A  EC05  F035         	call	_memcpy	;wreg free
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;DeviceManager.c: 200: size=devBuffer->size;
 13512  003A0E  EE20 F002          	lfsr	2,2
 13513  003A12  5193               	movf	DeviceManagerGetDeviceData@devBuffer& (0+255),w,b
 13514  003A14  26D9               	addwf	fsr2l,f,c
 13515  003A16  5194               	movf	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),w,b
 13516  003A18  22DA               	addwfc	fsr2h,f,c
 13517  003A1A  CFDE F08D          	movff	postinc2,DeviceManagerGetDeviceData@size
 13518  003A1E  CFDD F08E          	movff	postdec2,DeviceManagerGetDeviceData@size+1
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;DeviceManager.c: 201: *isSecure=(devBuffer->flags & 1)>0;
 13522  003A22  EE20 F004          	lfsr	2,4
 13523  003A26  5193               	movf	DeviceManagerGetDeviceData@devBuffer& (0+255),w,b
 13524  003A28  26D9               	addwf	fsr2l,f,c
 13525  003A2A  5194               	movf	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),w,b
 13526  003A2C  22DA               	addwfc	fsr2h,f,c
 13527  003A2E  0E01               	movlw	1
 13528  003A30  A0DF               	btfss	indf2,0,c
 13529  003A32  0E00               	movlw	0
 13530  003A34  C085  FFD9         	movff	DeviceManagerGetDeviceData@isSecure,fsr2l
 13531  003A38  C086  FFDA         	movff	DeviceManagerGetDeviceData@isSecure+1,fsr2h
 13532  003A3C  6EDF               	movwf	indf2,c
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;DeviceManager.c: 202: *isFormed=(devBuffer->flags & 2)>0;
 13536  003A3E  EE20 F004          	lfsr	2,4
 13537  003A42  5193               	movf	DeviceManagerGetDeviceData@devBuffer& (0+255),w,b
 13538  003A44  26D9               	addwf	fsr2l,f,c
 13539  003A46  5194               	movf	(DeviceManagerGetDeviceData@devBuffer+1)& (0+255),w,b
 13540  003A48  22DA               	addwfc	fsr2h,f,c
 13541  003A4A  0E01               	movlw	1
 13542  003A4C  A2DF               	btfss	indf2,1,c
 13543  003A4E  0E00               	movlw	0
 13544  003A50  C087  FFD9         	movff	DeviceManagerGetDeviceData@isFormed,fsr2l
 13545  003A54  C088  FFDA         	movff	DeviceManagerGetDeviceData@isFormed+1,fsr2h
 13546  003A58  6EDF               	movwf	indf2,c
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;DeviceManager.c: 204: for(j=index;j<sleepRFDTotalBufferLen;j++)
 13550  003A5A  C08F  F095         	movff	DeviceManagerGetDeviceData@index,DeviceManagerGetDeviceData@j
 13551  003A5E  C090  F096         	movff	DeviceManagerGetDeviceData@index+1,DeviceManagerGetDeviceData@j+1
 13552  003A62  D038               	goto	l16756
 13553  003A64                     l16746:
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;DeviceManager.c: 205: {
 13557                           ;DeviceManager.c: 206: if((j+recordLen)<sleepRFDTotalBufferLen)
 13558  003A64  5191               	movf	DeviceManagerGetDeviceData@recordLen& (0+255),w,b
 13559  003A66  2595               	addwf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13560  003A68  6F89               	movwf	??_DeviceManagerGetDeviceData& (0+255),b
 13561  003A6A  5192               	movf	(DeviceManagerGetDeviceData@recordLen+1)& (0+255),w,b
 13562  003A6C  2196               	addwfc	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13563  003A6E  6F8A               	movwf	(??_DeviceManagerGetDeviceData+1)& (0+255),b
 13564  003A70  0101               	movlb	1	; () banked
 13565  003A72  51B3               	movf	_sleepRFDTotalBufferLen& (0+255),w,b
 13566  003A74  0100               	movlb	0	; () banked
 13567  003A76  5D89               	subwf	??_DeviceManagerGetDeviceData& (0+255),w,b
 13568  003A78  0101               	movlb	1	; () banked
 13569  003A7A  51B4               	movf	(_sleepRFDTotalBufferLen+1)& (0+255),w,b
 13570  003A7C  0100               	movlb	0	; () banked
 13571  003A7E  598A               	subwfb	(??_DeviceManagerGetDeviceData+1)& (0+255),w,b
 13572  003A80  E220               	bc	l16752
 13573                           
 13574                           ; BSR set to: 0
 13575                           ;DeviceManager.c: 207: {
 13576                           ;DeviceManager.c: 208: devBuffers[j]=devBuffers[j+recordLen];
 13577  003A82  5195               	movf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13578  003A84  25E9               	addwf	_devBuffers& (0+255),w,b
 13579  003A86  6F89               	movwf	??_DeviceManagerGetDeviceData& (0+255),b
 13580  003A88  5196               	movf	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13581  003A8A  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 13582  003A8C  6F8A               	movwf	(??_DeviceManagerGetDeviceData+1)& (0+255),b
 13583  003A8E  5191               	movf	DeviceManagerGetDeviceData@recordLen& (0+255),w,b
 13584  003A90  2589               	addwf	??_DeviceManagerGetDeviceData& (0+255),w,b
 13585  003A92  6ED9               	movwf	fsr2l,c
 13586  003A94  5192               	movf	(DeviceManagerGetDeviceData@recordLen+1)& (0+255),w,b
 13587  003A96  218A               	addwfc	(??_DeviceManagerGetDeviceData+1)& (0+255),w,b
 13588  003A98  6EDA               	movwf	fsr2h,c
 13589  003A9A  5195               	movf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13590  003A9C  25E9               	addwf	_devBuffers& (0+255),w,b
 13591  003A9E  6EE1               	movwf	fsr1l,c
 13592  003AA0  5196               	movf	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13593  003AA2  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 13594  003AA4  6EE2               	movwf	fsr1h,c
 13595  003AA6  CFDF FFE7          	movff	indf2,indf1
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;DeviceManager.c: 209: devBuffers[j+recordLen]=0;
 13599  003AAA  5195               	movf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13600  003AAC  25E9               	addwf	_devBuffers& (0+255),w,b
 13601  003AAE  6F89               	movwf	??_DeviceManagerGetDeviceData& (0+255),b
 13602  003AB0  5196               	movf	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13603  003AB2  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 13604  003AB4  6F8A               	movwf	(??_DeviceManagerGetDeviceData+1)& (0+255),b
 13605  003AB6  5191               	movf	DeviceManagerGetDeviceData@recordLen& (0+255),w,b
 13606  003AB8  2589               	addwf	??_DeviceManagerGetDeviceData& (0+255),w,b
 13607  003ABA  6ED9               	movwf	fsr2l,c
 13608  003ABC  5192               	movf	(DeviceManagerGetDeviceData@recordLen+1)& (0+255),w,b
 13609  003ABE  218A               	addwfc	(??_DeviceManagerGetDeviceData+1)& (0+255),w,b
 13610  003AC0  D005               	goto	L5
 13611  003AC2                     l16752:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;DeviceManager.c: 211: {
 13615                           ;DeviceManager.c: 212: devBuffers[j]=0;
 13616  003AC2  5195               	movf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13617  003AC4  25E9               	addwf	_devBuffers& (0+255),w,b
 13618  003AC6  6ED9               	movwf	fsr2l,c
 13619  003AC8  5196               	movf	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13620  003ACA  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 13621  003ACC                     L5:
 13622  003ACC  6EDA               	movwf	fsr2h,c
 13623  003ACE  6ADF               	clrf	indf2,c
 13624                           
 13625                           ; BSR set to: 0
 13626  003AD0  4B95               	infsnz	DeviceManagerGetDeviceData@j& (0+255),f,b
 13627  003AD2  2B96               	incf	(DeviceManagerGetDeviceData@j+1)& (0+255),f,b
 13628  003AD4                     l16756:
 13629                           
 13630                           ; BSR set to: 0
 13631  003AD4  0101               	movlb	1	; () banked
 13632  003AD6  51B3               	movf	_sleepRFDTotalBufferLen& (0+255),w,b
 13633  003AD8  0100               	movlb	0	; () banked
 13634  003ADA  5D95               	subwf	DeviceManagerGetDeviceData@j& (0+255),w,b
 13635  003ADC  0101               	movlb	1	; () banked
 13636  003ADE  51B4               	movf	(_sleepRFDTotalBufferLen+1)& (0+255),w,b
 13637  003AE0  0100               	movlb	0	; () banked
 13638  003AE2  5996               	subwfb	(DeviceManagerGetDeviceData@j+1)& (0+255),w,b
 13639  003AE4  E20D               	bc	l2121
 13640  003AE6  D7BE               	goto	l16746
 13641  003AE8                     l16758:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;DeviceManager.c: 216: }
 13645                           ;DeviceManager.c: 217: index+=recordLen;
 13646  003AE8  5191               	movf	DeviceManagerGetDeviceData@recordLen& (0+255),w,b
 13647  003AEA  278F               	addwf	DeviceManagerGetDeviceData@index& (0+255),f,b
 13648  003AEC  5192               	movf	(DeviceManagerGetDeviceData@recordLen+1)& (0+255),w,b
 13649  003AEE  2390               	addwfc	(DeviceManagerGetDeviceData@index+1)& (0+255),f,b
 13650                           
 13651                           ; BSR set to: 0
 13652  003AF0  4B8B               	infsnz	DeviceManagerGetDeviceData@i& (0+255),f,b
 13653  003AF2  2B8C               	incf	(DeviceManagerGetDeviceData@i+1)& (0+255),f,b
 13654  003AF4                     l16762:
 13655                           
 13656                           ; BSR set to: 0
 13657  003AF4  5039               	movf	_sleepRFDBufferCount,w,c
 13658  003AF6  5D8B               	subwf	DeviceManagerGetDeviceData@i& (0+255),w,b
 13659  003AF8  503A               	movf	_sleepRFDBufferCount+1,w,c
 13660  003AFA  598C               	subwfb	(DeviceManagerGetDeviceData@i+1)& (0+255),w,b
 13661  003AFC  E201 D75A          	bnc	l16732
 13662  003B00                     l2121:
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;DeviceManager.c: 218: }
 13666                           ;DeviceManager.c: 219: return(size);
 13667  003B00  C08D  F081         	movff	DeviceManagerGetDeviceData@size,?_DeviceManagerGetDeviceData
 13668  003B04  C08E  F082         	movff	DeviceManagerGetDeviceData@size+1,?_DeviceManagerGetDeviceData+1
 13669                           
 13670                           ; BSR set to: 0
 13671  003B08  0012               	return		;funcret
 13672  003B0A                     __end_of_DeviceManagerGetDeviceData:
 13673                           	opt stack 0
 13674                           tblptru	equ	0xFF8
 13675                           tblptrh	equ	0xFF7
 13676                           tblptrl	equ	0xFF6
 13677                           tablat	equ	0xFF5
 13678                           prodh	equ	0xFF4
 13679                           prodl	equ	0xFF3
 13680                           intcon3	equ	0xFF0
 13681                           postinc0	equ	0xFEE
 13682                           plusw0	equ	0xFEB
 13683                           fsr0h	equ	0xFEA
 13684                           fsr0l	equ	0xFE9
 13685                           wreg	equ	0xFE8
 13686                           indf1	equ	0xFE7
 13687                           postdec1	equ	0xFE5
 13688                           plusw1	equ	0xFE3
 13689                           fsr1h	equ	0xFE2
 13690                           fsr1l	equ	0xFE1
 13691                           indf2	equ	0xFDF
 13692                           postinc2	equ	0xFDE
 13693                           postdec2	equ	0xFDD
 13694                           plusw2	equ	0xFDB
 13695                           fsr2h	equ	0xFDA
 13696                           fsr2l	equ	0xFD9
 13697                           status	equ	0xFD8
 13698                           
 13699 ;; *************** function _NetworkDiscoveredEvent *****************
 13700 ;; Defined at:
 13701 ;;		line 385 in file "../src/Bridge.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  PANID           2   19[BANK0 ] unsigned int 
 13704 ;;  rssi            2   21[BANK0 ] unsigned int 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  i               2   29[BANK0 ] unsigned int 
 13707 ;;  empty           2   27[BANK0 ] unsigned int 
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1    wreg      void 
 13710 ;; Registers used:
 13711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13712 ;; Tracked objects:
 13713 ;;		On entry : F/0
 13714 ;;		On exit  : F/0
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13718 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13720 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13721 ;;Total ram usage:       12 bytes
 13722 ;; Hardware stack levels used:    1
 13723 ;; Hardware stack levels required when called:    5
 13724 ;; This function calls:
 13725 ;;		Nothing
 13726 ;; This function is called by:
 13727 ;;		_radioReceivedPacket
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           	psect	text56
 13732  00334A                     __ptext56:
 13733                           	opt stack 0
 13734  00334A                     _NetworkDiscoveredEvent:
 13735                           	opt stack 23
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;Bridge.c: 387: uint16_t i;
 13739                           ;Bridge.c: 388: uint16_t empty=0xffff;
 13740                           
 13741                           ; BSR set to: 0
 13742                           ;incstack = 0
 13743  00334A  697B               	setf	NetworkDiscoveredEvent@empty& (0+255),b
 13744  00334C  697C               	setf	(NetworkDiscoveredEvent@empty+1)& (0+255),b
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;Bridge.c: 389: pcnt1++;
 13748  00334E  0101               	movlb	1	; () banked
 13749  003350  4BAD               	infsnz	_pcnt1& (0+255),f,b	;volatile
 13750  003352  2BAE               	incf	(_pcnt1+1)& (0+255),f,b	;volatile
 13751                           
 13752                           ; BSR set to: 1
 13753                           ;Bridge.c: 390: for(i=0;i<5;i++)
 13754  003354  0100               	movlb	0	; () banked
 13755  003356  6B7D               	clrf	NetworkDiscoveredEvent@i& (0+255),b
 13756  003358  6B7E               	clrf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13757  00335A                     l16792:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;Bridge.c: 391: {
 13761                           ;Bridge.c: 392: if( (ActiveScanResults[i].PANID.Val==PANID) && (ActiveScanResults[i].Cha
      +                          nnel==ActiveScanChannel) )
 13762  00335A  0E05               	movlw	5
 13763  00335C  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13764  00335E  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13765  003362  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13766  003366  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13767  003368  50F3               	movf	prodl,w,c
 13768  00336A  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13769  00336C  0EB7               	movlw	low (_ActiveScanResults+1)
 13770  00336E  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13771  003370  6ED9               	movwf	fsr2l,c
 13772  003372  0E03               	movlw	high (_ActiveScanResults+1)
 13773  003374  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13774  003376  6EDA               	movwf	fsr2h,c
 13775  003378  5173               	movf	NetworkDiscoveredEvent@PANID& (0+255),w,b
 13776  00337A  18DE               	xorwf	postinc2,w,c
 13777  00337C  E13D               	bnz	l16800
 13778  00337E  5174               	movf	(NetworkDiscoveredEvent@PANID+1)& (0+255),w,b
 13779  003380  18DE               	xorwf	postinc2,w,c
 13780  003382  E13A               	bnz	l16800
 13781                           
 13782                           ; BSR set to: 0
 13783  003384  0E05               	movlw	5
 13784  003386  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13785  003388  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13786  00338C  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13787  003390  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13788  003392  50F3               	movf	prodl,w,c
 13789  003394  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13790  003396  0EB6               	movlw	low _ActiveScanResults
 13791  003398  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13792  00339A  6ED9               	movwf	fsr2l,c
 13793  00339C  0E03               	movlw	high _ActiveScanResults
 13794  00339E  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13795  0033A0  6EDA               	movwf	fsr2h,c
 13796  0033A2  50DF               	movf	indf2,w,c
 13797  0033A4  E129               	bnz	l16800
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;Bridge.c: 393: {
 13801                           ;Bridge.c: 394: if(ActiveScanResults[i].RSSIValue<rssi)
 13802  0033A6  0E05               	movlw	5
 13803  0033A8  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13804  0033AA  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13805  0033AE  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13806  0033B2  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13807  0033B4  50F3               	movf	prodl,w,c
 13808  0033B6  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13809  0033B8  0EB9               	movlw	low (_ActiveScanResults+3)
 13810  0033BA  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13811  0033BC  6ED9               	movwf	fsr2l,c
 13812  0033BE  0E03               	movlw	high (_ActiveScanResults+3)
 13813  0033C0  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13814  0033C2  6EDA               	movwf	fsr2h,c
 13815  0033C4  50DF               	movf	indf2,w,c
 13816  0033C6  6F79               	movwf	(??_NetworkDiscoveredEvent+2)& (0+255),b
 13817  0033C8  6B7A               	clrf	(??_NetworkDiscoveredEvent+3)& (0+255),b
 13818  0033CA  5175               	movf	NetworkDiscoveredEvent@rssi& (0+255),w,b
 13819  0033CC  5D79               	subwf	(??_NetworkDiscoveredEvent+2)& (0+255),w,b
 13820  0033CE  5176               	movf	(NetworkDiscoveredEvent@rssi+1)& (0+255),w,b
 13821  0033D0  597A               	subwfb	(??_NetworkDiscoveredEvent+3)& (0+255),w,b
 13822  0033D2  E232               	bc	l16810
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;Bridge.c: 395: {
 13826                           ;Bridge.c: 396: ActiveScanResults[i].RSSIValue=rssi;
 13827  0033D4  0E05               	movlw	5
 13828  0033D6  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13829  0033D8  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13830  0033DC  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13831  0033E0  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13832  0033E2  50F3               	movf	prodl,w,c
 13833  0033E4  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13834  0033E6  0EB9               	movlw	low (_ActiveScanResults+3)
 13835  0033E8  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13836  0033EA  6ED9               	movwf	fsr2l,c
 13837  0033EC  0E03               	movlw	high (_ActiveScanResults+3)
 13838  0033EE  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13839  0033F0  6EDA               	movwf	fsr2h,c
 13840  0033F2  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 13841  0033F6  D020               	goto	l16810
 13842  0033F8                     l16800:
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;Bridge.c: 399: }
 13846                           ;Bridge.c: 400: if( (ActiveScanResults[i].Flags==0) && (empty==0xffff) )
 13847  0033F8  0E05               	movlw	5
 13848  0033FA  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13849  0033FC  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13850  003400  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13851  003404  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13852  003406  50F3               	movf	prodl,w,c
 13853  003408  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13854  00340A  0EBA               	movlw	low (_ActiveScanResults+4)
 13855  00340C  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13856  00340E  6ED9               	movwf	fsr2l,c
 13857  003410  0E03               	movlw	high (_ActiveScanResults+4)
 13858  003412  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13859  003414  6EDA               	movwf	fsr2h,c
 13860  003416  50DF               	movf	indf2,w,c
 13861  003418  E108               	bnz	l16806
 13862                           
 13863                           ; BSR set to: 0
 13864  00341A  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 13865  00341C  E106               	bnz	l16806
 13866  00341E  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 13867  003420  E104               	bnz	l16806
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;Bridge.c: 401: {
 13871                           ;Bridge.c: 402: empty=i;
 13872  003422  C07D  F07B         	movff	NetworkDiscoveredEvent@i,NetworkDiscoveredEvent@empty
 13873  003426  C07E  F07C         	movff	NetworkDiscoveredEvent@i+1,NetworkDiscoveredEvent@empty+1
 13874  00342A                     l16806:
 13875                           
 13876                           ; BSR set to: 0
 13877  00342A  4B7D               	infsnz	NetworkDiscoveredEvent@i& (0+255),f,b
 13878  00342C  2B7E               	incf	(NetworkDiscoveredEvent@i+1)& (0+255),f,b
 13879                           
 13880                           ; BSR set to: 0
 13881  00342E  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 13882  003430  E103               	bnz	u20410
 13883  003432  0E05               	movlw	5
 13884  003434  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 13885  003436  E391               	bnc	l16792
 13886  003438                     u20410:
 13887  003438                     l16810:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;Bridge.c: 403: }
 13891                           ;Bridge.c: 404: }
 13892                           ;Bridge.c: 405: if(i>=5)
 13893  003438  517E               	movf	(NetworkDiscoveredEvent@i+1)& (0+255),w,b
 13894  00343A  E104               	bnz	u20420
 13895  00343C  0E05               	movlw	5
 13896  00343E  5D7D               	subwf	NetworkDiscoveredEvent@i& (0+255),w,b
 13897  003440  A0D8               	btfss	status,0,c
 13898  003442  0012               	return	
 13899  003444                     u20420:
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;Bridge.c: 406: {
 13903                           ;Bridge.c: 407: if(empty!=0xffff)
 13904  003444  297B               	incf	NetworkDiscoveredEvent@empty& (0+255),w,b
 13905  003446  E103               	bnz	u20430
 13906  003448  297C               	incf	(NetworkDiscoveredEvent@empty+1)& (0+255),w,b
 13907  00344A  B4D8               	btfsc	status,2,c
 13908  00344C  0012               	return	
 13909  00344E                     u20430:
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;Bridge.c: 408: {
 13913                           ;Bridge.c: 409: i=empty;
 13914  00344E  C07B  F07D         	movff	NetworkDiscoveredEvent@empty,NetworkDiscoveredEvent@i
 13915  003452  C07C  F07E         	movff	NetworkDiscoveredEvent@empty+1,NetworkDiscoveredEvent@i+1
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;Bridge.c: 411: ActiveScanResults[i].Flags=1;
 13919  003456  0E05               	movlw	5
 13920  003458  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13921  00345A  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13922  00345E  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13923  003462  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13924  003464  50F3               	movf	prodl,w,c
 13925  003466  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13926  003468  0EBA               	movlw	low (_ActiveScanResults+4)
 13927  00346A  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13928  00346C  6ED9               	movwf	fsr2l,c
 13929  00346E  0E03               	movlw	high (_ActiveScanResults+4)
 13930  003470  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13931  003472  6EDA               	movwf	fsr2h,c
 13932  003474  0E01               	movlw	1
 13933  003476  6EDF               	movwf	indf2,c
 13934                           
 13935                           ;Bridge.c: 412: ActiveScanResults[i].PANID.Val=PANID;
 13936  003478  0E05               	movlw	5
 13937  00347A  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13938  00347C  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13939  003480  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13940  003484  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13941  003486  50F3               	movf	prodl,w,c
 13942  003488  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13943  00348A  0EB7               	movlw	low (_ActiveScanResults+1)
 13944  00348C  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13945  00348E  6ED9               	movwf	fsr2l,c
 13946  003490  0E03               	movlw	high (_ActiveScanResults+1)
 13947  003492  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13948  003494  6EDA               	movwf	fsr2h,c
 13949  003496  C073  FFDE         	movff	NetworkDiscoveredEvent@PANID,postinc2
 13950  00349A  C074  FFDD         	movff	NetworkDiscoveredEvent@PANID+1,postdec2
 13951                           
 13952                           ;Bridge.c: 413: ActiveScanResults[i].RSSIValue=rssi;
 13953  00349E  0E05               	movlw	5
 13954  0034A0  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13955  0034A2  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13956  0034A6  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13957  0034AA  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13958  0034AC  50F3               	movf	prodl,w,c
 13959  0034AE  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13960  0034B0  0EB9               	movlw	low (_ActiveScanResults+3)
 13961  0034B2  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13962  0034B4  6ED9               	movwf	fsr2l,c
 13963  0034B6  0E03               	movlw	high (_ActiveScanResults+3)
 13964  0034B8  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13965  0034BA  6EDA               	movwf	fsr2h,c
 13966  0034BC  C075  FFDF         	movff	NetworkDiscoveredEvent@rssi,indf2
 13967                           
 13968                           ;Bridge.c: 414: ActiveScanResults[i].Channel=ActiveScanChannel;
 13969  0034C0  0E05               	movlw	5
 13970  0034C2  037D               	mulwf	NetworkDiscoveredEvent@i& (0+255),b
 13971  0034C4  CFF3 F077          	movff	prodl,??_NetworkDiscoveredEvent
 13972  0034C8  CFF4 F078          	movff	prodh,??_NetworkDiscoveredEvent+1
 13973  0034CC  037E               	mulwf	(NetworkDiscoveredEvent@i+1)& (0+255),b
 13974  0034CE  50F3               	movf	prodl,w,c
 13975  0034D0  2778               	addwf	(??_NetworkDiscoveredEvent+1)& (0+255),f,b
 13976  0034D2  0EB6               	movlw	low _ActiveScanResults
 13977  0034D4  2577               	addwf	??_NetworkDiscoveredEvent& (0+255),w,b
 13978  0034D6  6ED9               	movwf	fsr2l,c
 13979  0034D8  0E03               	movlw	high _ActiveScanResults
 13980  0034DA  2178               	addwfc	(??_NetworkDiscoveredEvent+1)& (0+255),w,b
 13981  0034DC  6EDA               	movwf	fsr2h,c
 13982  0034DE  6ADF               	clrf	indf2,c
 13983                           
 13984                           ; BSR set to: 0
 13985  0034E0  0C00               	retlw	0	;funcret
 13986  0034E2                     __end_of_NetworkDiscoveredEvent:
 13987                           	opt stack 0
 13988                           tblptru	equ	0xFF8
 13989                           tblptrh	equ	0xFF7
 13990                           tblptrl	equ	0xFF6
 13991                           tablat	equ	0xFF5
 13992                           prodh	equ	0xFF4
 13993                           prodl	equ	0xFF3
 13994                           intcon3	equ	0xFF0
 13995                           postinc0	equ	0xFEE
 13996                           plusw0	equ	0xFEB
 13997                           fsr0h	equ	0xFEA
 13998                           fsr0l	equ	0xFE9
 13999                           wreg	equ	0xFE8
 14000                           indf1	equ	0xFE7
 14001                           postdec1	equ	0xFE5
 14002                           plusw1	equ	0xFE3
 14003                           fsr1h	equ	0xFE2
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           postinc2	equ	0xFDE
 14007                           postdec2	equ	0xFDD
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function _LE_processReceivedMessage *****************
 14014 ;; Defined at:
 14015 ;;		line 425 in file "../LinkEstimator.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  source          2   63[BANK0 ] PTR struct addr_t_def
 14018 ;;		 -> radioReceivedPacket@source(2), 
 14019 ;;  data            2   65[BANK0 ] PTR unsigned char 
 14020 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 14021 ;;  len             1   67[BANK0 ] unsigned char 
 14022 ;;  rssi            1   68[BANK0 ] unsigned char 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  ll_addr         2   75[BANK0 ] struct addr_t_def
 14025 ;;  bhdr            2   73[BANK0 ] PTR struct net_routing_h
 14026 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 14027 ;;  hdr             2   71[BANK0 ] PTR struct linkest_heade
 14028 ;;		 -> RxPacket.lnk_header(2), RxPacket(142), 
 14029 ;;  nidx            1   77[BANK0 ] unsigned char 
 14030 ;;  res             1    0        enum E179
 14031 ;;  num_entries     1    0        unsigned char 
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      enum E179
 14034 ;; Registers used:
 14035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : F/0
 14038 ;;		On exit  : F/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14041 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14044 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14045 ;;Total ram usage:       15 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:   10
 14048 ;; This function calls:
 14049 ;;		_NetworkAddressSizeGet
 14050 ;;		_RouteManagerShouldInsert
 14051 ;;		_RouterEvicted
 14052 ;;		_le_findEmptyNeighborIdx
 14053 ;;		_le_findIdx
 14054 ;;		_le_findRandomNeighborIdx
 14055 ;;		_le_findWorstNeighborIdx
 14056 ;;		_le_initNeighborIdx
 14057 ;;		_le_updateNeighborEntryIdx
 14058 ;;		_memcpy
 14059 ;; This function is called by:
 14060 ;;		_radioReceivedPacket
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           	psect	text57
 14065  0049C6                     __ptext57:
 14066                           	opt stack 0
 14067  0049C6                     _LE_processReceivedMessage:
 14068                           	opt stack 18
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;LinkEstimator.c: 428: uint8_t nidx;
 14072                           ;LinkEstimator.c: 429: uint8_t num_entries;
 14073                           ;LinkEstimator.c: 430: net_routing_header_t *bhdr;
 14074                           ;LinkEstimator.c: 431: linkest_header_t* hdr;
 14075                           ;LinkEstimator.c: 432: addr_t ll_addr;
 14076                           ;LinkEstimator.c: 434: bhdr=(net_routing_header_t*)data;
 14077                           
 14078                           ; BSR set to: 0
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;incstack = 0
 14082  0049C6  C0A1  F0A9         	movff	LE_processReceivedMessage@data,LE_processReceivedMessage@bhdr
 14083  0049CA  C0A2  F0AA         	movff	LE_processReceivedMessage@data+1,LE_processReceivedMessage@bhdr+1
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;LinkEstimator.c: 436: if ( (len >= sizeof (net_routing_header_t)) && (bhdr->packettype=
      +                          =PacketRouting) )
 14087  0049CE  0E09               	movlw	9
 14088  0049D0  65A3               	cpfsgt	LE_processReceivedMessage@len& (0+255),b
 14089  0049D2  0C09               	retlw	9
 14090                           
 14091                           ; BSR set to: 0
 14092  0049D4  EE20 F002          	lfsr	2,2
 14093  0049D8  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 14094  0049DA  26D9               	addwf	fsr2l,f,c
 14095  0049DC  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 14096  0049DE  22DA               	addwfc	fsr2h,f,c
 14097  0049E0  0E22               	movlw	34
 14098  0049E2  18DE               	xorwf	postinc2,w,c
 14099  0049E4  A4D8               	btfss	status,2,c
 14100  0049E6  0012               	return	
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;LinkEstimator.c: 437: {
 14104                           ;LinkEstimator.c: 438: hdr = &bhdr->lnk_header;
 14105  0049E8  0E08               	movlw	8
 14106  0049EA  25A9               	addwf	LE_processReceivedMessage@bhdr& (0+255),w,b
 14107  0049EC  6FA7               	movwf	LE_processReceivedMessage@hdr& (0+255),b
 14108  0049EE  0E00               	movlw	0
 14109  0049F0  21AA               	addwfc	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 14110  0049F2  6FA8               	movwf	(LE_processReceivedMessage@hdr+1)& (0+255),b
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;LinkEstimator.c: 441: num_entries = hdr->count;
 14114  0049F4  0EAB               	movlw	low LE_processReceivedMessage@ll_addr
 14115  0049F6  6F75               	movwf	memcpy@d1& (0+255),b
 14116  0049F8  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 14117  0049FA  C09F  F077         	movff	LE_processReceivedMessage@source,memcpy@s1
 14118  0049FE  C0A0  F078         	movff	LE_processReceivedMessage@source+1,memcpy@s1+1
 14119  004A02  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 14120  004A06  0100               	movlb	0	; () banked
 14121  004A08  6F79               	movwf	memcpy@n& (0+255),b
 14122  004A0A  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 14123  004A0C  EC05  F035         	call	_memcpy	;wreg free
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;LinkEstimator.c: 457: nidx = le_findIdx(ll_addr);
 14127  004A10  C0AB  F081         	movff	LE_processReceivedMessage@ll_addr,le_findIdx@ll_addr
 14128  004A14  C0AC  F082         	movff	LE_processReceivedMessage@ll_addr+1,le_findIdx@ll_addr+1
 14129  004A18  EC83  F034         	call	_le_findIdx	;wreg free
 14130  004A1C  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;LinkEstimator.c: 458: if (nidx != 0xff)
 14134  004A1E  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 14135  004A20  E001               	bz	l16942
 14136  004A22  D01C               	goto	l16950
 14137  004A24                     l16942:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;LinkEstimator.c: 463: {
 14141                           ;LinkEstimator.c: 464: nidx = le_findEmptyNeighborIdx();
 14142  004A24  ECD5  F035         	call	_le_findEmptyNeighborIdx	;wreg free
 14143  004A28  0100               	movlb	0	; () banked
 14144  004A2A  5173               	movf	?_le_findEmptyNeighborIdx& (0+255),w,b
 14145  004A2C  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;LinkEstimator.c: 465: if (nidx != 0xff)
 14149  004A2E  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 14150  004A30  E027               	bz	l16952
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;LinkEstimator.c: 466: {
 14154                           ;LinkEstimator.c: 468: le_initNeighborIdx(nidx, ll_addr);
 14155  004A32  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 14156  004A36  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 14157  004A3A  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14158  004A3C  ECB9  F030         	call	_le_initNeighborIdx
 14159                           
 14160                           ; BSR set to: 0
 14161                           ;LinkEstimator.c: 469: neighbor_tbl[nidx].lastseq = hdr->lnkSeqNum;
 14162  004A40  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 14163  004A44  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 14164  004A48  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14165  004A4A  0D0B               	mullw	11
 14166  004A4C  0E02               	movlw	low (_neighbor_tbl+2)
 14167  004A4E  24F3               	addwf	prodl,w,c
 14168  004A50  6EE1               	movwf	fsr1l,c
 14169  004A52  0E05               	movlw	high (_neighbor_tbl+2)
 14170  004A54  20F4               	addwfc	prodh,w,c
 14171  004A56  6EE2               	movwf	fsr1h,c
 14172  004A58  CFDF FFE7          	movff	indf2,indf1
 14173  004A5C                     l16950:
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;LinkEstimator.c: 470: le_updateNeighborEntryIdx(nidx, hdr->lnkSeqNum, bhdr->options.dev
      +                          iceType);
 14177  004A5C  C0A7  FFD9         	movff	LE_processReceivedMessage@hdr,fsr2l
 14178  004A60  C0A8  FFDA         	movff	LE_processReceivedMessage@hdr+1,fsr2h
 14179  004A64  50DF               	movf	indf2,w,c
 14180  004A66  6F99               	movwf	le_updateNeighborEntryIdx@seq& (0+255),b
 14181  004A68  EE20 F003          	lfsr	2,3
 14182  004A6C  51A9               	movf	LE_processReceivedMessage@bhdr& (0+255),w,b
 14183  004A6E  26D9               	addwf	fsr2l,f,c
 14184  004A70  51AA               	movf	(LE_processReceivedMessage@bhdr+1)& (0+255),w,b
 14185  004A72  22DA               	addwfc	fsr2h,f,c
 14186  004A74  50DF               	movf	223,w,c
 14187  004A76  0B07               	andlw	7
 14188  004A78  6F9A               	movwf	le_updateNeighborEntryIdx@dev& (0+255),b
 14189  004A7A  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14190  004A7C  EF14  F021         	goto	_le_updateNeighborEntryIdx
 14191  004A80                     l16952:
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;LinkEstimator.c: 472: {
 14195                           ;LinkEstimator.c: 473: nidx = le_findWorstNeighborIdx(EvictETXThreshold);
 14196  004A80  0E41               	movlw	65
 14197  004A82  EC15  F026         	call	_le_findWorstNeighborIdx
 14198  004A86  5181               	movf	?_le_findWorstNeighborIdx& (0+255),w,b
 14199  004A88  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;LinkEstimator.c: 474: if (nidx != 0xff)
 14203  004A8A  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 14204  004A8C  E00F               	bz	l16960
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;LinkEstimator.c: 475: {
 14208                           ;LinkEstimator.c: 478: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 14209  004A8E  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14210  004A90  0D0B               	mullw	11
 14211  004A92  0E00               	movlw	low _neighbor_tbl
 14212  004A94  24F3               	addwf	prodl,w,c
 14213  004A96  6ED9               	movwf	fsr2l,c
 14214  004A98  0E05               	movlw	high _neighbor_tbl
 14215  004A9A  20F4               	addwfc	prodh,w,c
 14216  004A9C  6EDA               	movwf	fsr2h,c
 14217  004A9E  CFDE F08E          	movff	postinc2,RouterEvicted@address
 14218  004AA2  CFDD F08F          	movff	postdec2,RouterEvicted@address+1
 14219  004AA6  EC2F  F02E         	call	_RouterEvicted	;wreg free
 14220  004AAA  D021               	goto	l16970
 14221  004AAC                     l16960:
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;LinkEstimator.c: 481: {
 14225                           ;LinkEstimator.c: 488: if (rssi>=rssiThreshold)
 14226  004AAC  0E18               	movlw	24
 14227  004AAE  65A4               	cpfsgt	LE_processReceivedMessage@rssi& (0+255),b
 14228  004AB0  0C18               	retlw	24
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;LinkEstimator.c: 489: {
 14232                           ;LinkEstimator.c: 490: if(RouteManagerShouldInsert(bhdr)==1)
 14233  004AB2  C0A9  F087         	movff	LE_processReceivedMessage@bhdr,RouteManagerShouldInsert@hdr
 14234  004AB6  C0AA  F088         	movff	LE_processReceivedMessage@bhdr+1,RouteManagerShouldInsert@hdr+1
 14235  004ABA  EC97  F02A         	call	_RouteManagerShouldInsert	;wreg free
 14236  004ABE  06E8               	decf	wreg,f,c
 14237  004AC0  A4D8               	btfss	status,2,c
 14238  004AC2  0012               	return	
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;LinkEstimator.c: 491: {
 14242                           ;LinkEstimator.c: 492: nidx = le_findRandomNeighborIdx();
 14243  004AC4  ECCF  F018         	call	_le_findRandomNeighborIdx	;wreg free
 14244  004AC8  5184               	movf	?_le_findRandomNeighborIdx& (0+255),w,b
 14245  004ACA  6FAD               	movwf	LE_processReceivedMessage@nidx& (0+255),b
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;LinkEstimator.c: 493: if (nidx != 0xff)
 14249  004ACC  29AD               	incf	LE_processReceivedMessage@nidx& (0+255),w,b
 14250  004ACE  B4D8               	btfsc	status,2,c
 14251  004AD0  0012               	return	
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;LinkEstimator.c: 494: {
 14255                           ;LinkEstimator.c: 495: RouterEvicted(neighbor_tbl[nidx].ll_addr);
 14256  004AD2  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14257  004AD4  0D0B               	mullw	11
 14258  004AD6  0E00               	movlw	low _neighbor_tbl
 14259  004AD8  24F3               	addwf	prodl,w,c
 14260  004ADA  6ED9               	movwf	fsr2l,c
 14261  004ADC  0E05               	movlw	high _neighbor_tbl
 14262  004ADE  20F4               	addwfc	prodh,w,c
 14263  004AE0  6EDA               	movwf	fsr2h,c
 14264  004AE2  CFDE F08E          	movff	postinc2,RouterEvicted@address
 14265  004AE6  CFDD F08F          	movff	postdec2,RouterEvicted@address+1
 14266  004AEA  EC2F  F02E         	call	_RouterEvicted	;wreg free
 14267  004AEE                     l16970:
 14268                           
 14269                           ;LinkEstimator.c: 496: le_initNeighborIdx(nidx, ll_addr);
 14270  004AEE  C0AB  F073         	movff	LE_processReceivedMessage@ll_addr,le_initNeighborIdx@ll_addr
 14271  004AF2  C0AC  F074         	movff	LE_processReceivedMessage@ll_addr+1,le_initNeighborIdx@ll_addr+1
 14272  004AF6  0100               	movlb	0	; () banked
 14273  004AF8  51AD               	movf	LE_processReceivedMessage@nidx& (0+255),w,b
 14274  004AFA  EFB9  F030         	goto	_le_initNeighborIdx
 14275  004AFE                     __end_of_LE_processReceivedMessage:
 14276                           	opt stack 0
 14277                           tblptru	equ	0xFF8
 14278                           tblptrh	equ	0xFF7
 14279                           tblptrl	equ	0xFF6
 14280                           tablat	equ	0xFF5
 14281                           prodh	equ	0xFF4
 14282                           prodl	equ	0xFF3
 14283                           intcon3	equ	0xFF0
 14284                           postinc0	equ	0xFEE
 14285                           plusw0	equ	0xFEB
 14286                           fsr0h	equ	0xFEA
 14287                           fsr0l	equ	0xFE9
 14288                           wreg	equ	0xFE8
 14289                           indf1	equ	0xFE7
 14290                           postdec1	equ	0xFE5
 14291                           plusw1	equ	0xFE3
 14292                           fsr1h	equ	0xFE2
 14293                           fsr1l	equ	0xFE1
 14294                           indf2	equ	0xFDF
 14295                           postinc2	equ	0xFDE
 14296                           postdec2	equ	0xFDD
 14297                           plusw2	equ	0xFDB
 14298                           fsr2h	equ	0xFDA
 14299                           fsr2l	equ	0xFD9
 14300                           status	equ	0xFD8
 14301                           
 14302 ;; *************** function _le_updateNeighborEntryIdx *****************
 14303 ;; Defined at:
 14304 ;;		line 339 in file "../LinkEstimator.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;  idx             1    wreg     unsigned char 
 14307 ;;  seq             1   57[BANK0 ] unsigned char 
 14308 ;;  dev             1   58[BANK0 ] enum E144
 14309 ;; Auto vars:     Size  Location     Type
 14310 ;;  idx             1   62[BANK0 ] unsigned char 
 14311 ;;  packetGap       1   61[BANK0 ] unsigned char 
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  1    wreg      void 
 14314 ;; Registers used:
 14315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14316 ;; Tracked objects:
 14317 ;;		On entry : F/0
 14318 ;;		On exit  : F/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14322 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14324 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14325 ;;Total ram usage:        6 bytes
 14326 ;; Hardware stack levels used:    1
 14327 ;; Hardware stack levels required when called:    8
 14328 ;; This function calls:
 14329 ;;		_le_initNeighborIdx
 14330 ;;		_le_updateNeighborTableEst
 14331 ;; This function is called by:
 14332 ;;		_LE_processReceivedMessage
 14333 ;; This function uses a non-reentrant model
 14334 ;;
 14335                           
 14336                           	psect	text58
 14337  004228                     __ptext58:
 14338                           	opt stack 0
 14339  004228                     _le_updateNeighborEntryIdx:
 14340                           	opt stack 19
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;incstack = 0
 14344                           ;le_updateNeighborEntryIdx@idx stored from wreg
 14345  004228  6F9E               	movwf	le_updateNeighborEntryIdx@idx& (0+255),b
 14346                           
 14347                           ;LinkEstimator.c: 341: uint8_t packetGap;
 14348                           ;LinkEstimator.c: 343: if (neighbor_tbl[idx].flags & 0x4)
 14349  00422A  0100               	movlb	0	; () banked
 14350  00422C  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14351  00422E  0D0B               	mullw	11
 14352  004230  0E05               	movlw	low (_neighbor_tbl+5)
 14353  004232  24F3               	addwf	prodl,w,c
 14354  004234  6ED9               	movwf	fsr2l,c
 14355  004236  0E05               	movlw	high (_neighbor_tbl+5)
 14356  004238  20F4               	addwfc	prodh,w,c
 14357  00423A  6EDA               	movwf	fsr2h,c
 14358  00423C  A4DF               	btfss	indf2,2,c
 14359  00423E  D00A               	goto	l1519
 14360                           
 14361                           ; BSR set to: 5
 14362                           ;LinkEstimator.c: 344: {
 14363                           ;LinkEstimator.c: 346: neighbor_tbl[idx].flags &= ~0x4;
 14364  004240  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14365  004242  0D0B               	mullw	11
 14366  004244  0E05               	movlw	low (_neighbor_tbl+5)
 14367  004246  24F3               	addwf	prodl,w,c
 14368  004248  6ED9               	movwf	fsr2l,c
 14369  00424A  0E05               	movlw	high (_neighbor_tbl+5)
 14370  00424C  20F4               	addwfc	prodh,w,c
 14371  00424E  6EDA               	movwf	fsr2h,c
 14372  004250  0EFB               	movlw	251
 14373  004252  16DF               	andwf	indf2,f,c
 14374  004254                     l1519:
 14375                           
 14376                           ;LinkEstimator.c: 347: }
 14377                           ;LinkEstimator.c: 349: neighbor_tbl[idx].flags|=(dev<<4);
 14378  004254  C09A  F09B         	movff	le_updateNeighborEntryIdx@dev,??_le_updateNeighborEntryIdx
 14379  004258  0100               	movlb	0	; () banked
 14380  00425A  3B9B               	swapf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14381  00425C  0EF0               	movlw	240
 14382  00425E  179B               	andwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14383  004260  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14384  004262  0D0B               	mullw	11
 14385  004264  0E05               	movlw	low (_neighbor_tbl+5)
 14386  004266  24F3               	addwf	prodl,w,c
 14387  004268  6ED9               	movwf	fsr2l,c
 14388  00426A  0E05               	movlw	high (_neighbor_tbl+5)
 14389  00426C  20F4               	addwfc	prodh,w,c
 14390  00426E  6EDA               	movwf	fsr2h,c
 14391  004270  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14392  004272  12DF               	iorwf	indf2,f,c
 14393                           
 14394                           ;LinkEstimator.c: 351: packetGap = seq - neighbor_tbl[idx].lastseq;
 14395  004274  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14396  004276  0D0B               	mullw	11
 14397  004278  0E02               	movlw	low (_neighbor_tbl+2)
 14398  00427A  24F3               	addwf	prodl,w,c
 14399  00427C  6ED9               	movwf	fsr2l,c
 14400  00427E  0E05               	movlw	high (_neighbor_tbl+2)
 14401  004280  20F4               	addwfc	prodh,w,c
 14402  004282  6EDA               	movwf	fsr2h,c
 14403  004284  50DF               	movf	indf2,w,c
 14404  004286  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 14405  004288  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14406  00428A  5D99               	subwf	le_updateNeighborEntryIdx@seq& (0+255),w,b
 14407  00428C  6F9D               	movwf	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14408                           
 14409                           ;LinkEstimator.c: 354: neighbor_tbl[idx].lastseq = seq;
 14410  00428E  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14411  004290  0D0B               	mullw	11
 14412  004292  0E02               	movlw	low (_neighbor_tbl+2)
 14413  004294  24F3               	addwf	prodl,w,c
 14414  004296  6ED9               	movwf	fsr2l,c
 14415  004298  0E05               	movlw	high (_neighbor_tbl+2)
 14416  00429A  20F4               	addwfc	prodh,w,c
 14417  00429C  6EDA               	movwf	fsr2h,c
 14418  00429E  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 14419                           
 14420                           ;LinkEstimator.c: 355: neighbor_tbl[idx].rcvcnt++;
 14421  0042A2  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14422  0042A4  0D0B               	mullw	11
 14423  0042A6  0E03               	movlw	low (_neighbor_tbl+3)
 14424  0042A8  24F3               	addwf	prodl,w,c
 14425  0042AA  6ED9               	movwf	fsr2l,c
 14426  0042AC  0E05               	movlw	high (_neighbor_tbl+3)
 14427  0042AE  20F4               	addwfc	prodh,w,c
 14428  0042B0  6EDA               	movwf	fsr2h,c
 14429  0042B2  2ADF               	incf	indf2,f,c
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;LinkEstimator.c: 356: if (packetGap > 0)
 14433  0042B4  519D               	movf	le_updateNeighborEntryIdx@packetGap& (0+255),w,b
 14434  0042B6  E00D               	bz	l16660
 14435                           
 14436                           ; BSR set to: 0
 14437                           ;LinkEstimator.c: 357: {
 14438                           ;LinkEstimator.c: 358: neighbor_tbl[idx].failcnt += packetGap - 1;
 14439  0042B8  C09D  F09B         	movff	le_updateNeighborEntryIdx@packetGap,??_le_updateNeighborEntryIdx
 14440  0042BC  079B               	decf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14441  0042BE  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14442  0042C0  0D0B               	mullw	11
 14443  0042C2  0E04               	movlw	low (_neighbor_tbl+4)
 14444  0042C4  24F3               	addwf	prodl,w,c
 14445  0042C6  6ED9               	movwf	fsr2l,c
 14446  0042C8  0E05               	movlw	high (_neighbor_tbl+4)
 14447  0042CA  20F4               	addwfc	prodh,w,c
 14448  0042CC  6EDA               	movwf	fsr2h,c
 14449  0042CE  519B               	movf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14450  0042D0  26DF               	addwf	indf2,f,c
 14451  0042D2                     l16660:
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;LinkEstimator.c: 359: }
 14455                           ;LinkEstimator.c: 361: if (packetGap > 10)
 14456  0042D2  0E0A               	movlw	10
 14457  0042D4  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14458  0042D6  D024               	goto	l16668
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;LinkEstimator.c: 362: {
 14462                           ;LinkEstimator.c: 363: le_initNeighborIdx(idx, neighbor_tbl[idx].ll_addr);
 14463  0042D8  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14464  0042DA  0D0B               	mullw	11
 14465  0042DC  0E00               	movlw	low _neighbor_tbl
 14466  0042DE  24F3               	addwf	prodl,w,c
 14467  0042E0  6ED9               	movwf	fsr2l,c
 14468  0042E2  0E05               	movlw	high _neighbor_tbl
 14469  0042E4  20F4               	addwfc	prodh,w,c
 14470  0042E6  6EDA               	movwf	fsr2h,c
 14471  0042E8  CFDE F073          	movff	postinc2,le_initNeighborIdx@ll_addr
 14472  0042EC  CFDD F074          	movff	postdec2,le_initNeighborIdx@ll_addr+1
 14473  0042F0  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14474  0042F2  ECB9  F030         	call	_le_initNeighborIdx
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;LinkEstimator.c: 364: neighbor_tbl[idx].lastseq = seq;
 14478  0042F6  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14479  0042F8  0D0B               	mullw	11
 14480  0042FA  0E02               	movlw	low (_neighbor_tbl+2)
 14481  0042FC  24F3               	addwf	prodl,w,c
 14482  0042FE  6ED9               	movwf	fsr2l,c
 14483  004300  0E05               	movlw	high (_neighbor_tbl+2)
 14484  004302  20F4               	addwfc	prodh,w,c
 14485  004304  6EDA               	movwf	fsr2h,c
 14486  004306  C099  FFDF         	movff	le_updateNeighborEntryIdx@seq,indf2
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;LinkEstimator.c: 365: neighbor_tbl[idx].rcvcnt = 1;
 14490  00430A  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14491  00430C  0D0B               	mullw	11
 14492  00430E  0E03               	movlw	low (_neighbor_tbl+3)
 14493  004310  24F3               	addwf	prodl,w,c
 14494  004312  6ED9               	movwf	fsr2l,c
 14495  004314  0E05               	movlw	high (_neighbor_tbl+3)
 14496  004316  20F4               	addwfc	prodh,w,c
 14497  004318  6EDA               	movwf	fsr2h,c
 14498  00431A  0E01               	movlw	1
 14499  00431C  6EDF               	movwf	indf2,c
 14500                           
 14501                           ;LinkEstimator.c: 366: } else if (((neighbor_tbl[idx].rcvcnt + neighbor_tbl[idx].failcnt
      +                          ) >= 3)
 14502  00431E  0C01               	retlw	1
 14503  004320                     l16668:
 14504                           
 14505                           ; BSR set to: 0
 14506                           ;LinkEstimator.c: 367: || (packetGap >= 3))
 14507  004320  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14508  004322  0D0B               	mullw	11
 14509  004324  0E03               	movlw	low (_neighbor_tbl+3)
 14510  004326  24F3               	addwf	prodl,w,c
 14511  004328  6ED9               	movwf	fsr2l,c
 14512  00432A  0E05               	movlw	high (_neighbor_tbl+3)
 14513  00432C  20F4               	addwfc	prodh,w,c
 14514  00432E  6EDA               	movwf	fsr2h,c
 14515  004330  50DF               	movf	indf2,w,c
 14516  004332  6F9B               	movwf	??_le_updateNeighborEntryIdx& (0+255),b
 14517  004334  6B9C               	clrf	(??_le_updateNeighborEntryIdx+1)& (0+255),b
 14518  004336  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14519  004338  0D0B               	mullw	11
 14520  00433A  0E04               	movlw	low (_neighbor_tbl+4)
 14521  00433C  24F3               	addwf	prodl,w,c
 14522  00433E  6ED9               	movwf	fsr2l,c
 14523  004340  0E05               	movlw	high (_neighbor_tbl+4)
 14524  004342  20F4               	addwfc	prodh,w,c
 14525  004344  6EDA               	movwf	fsr2h,c
 14526  004346  50DF               	movf	indf2,w,c
 14527  004348  279B               	addwf	??_le_updateNeighborEntryIdx& (0+255),f,b
 14528  00434A  0E00               	movlw	0
 14529  00434C  239C               	addwfc	(??_le_updateNeighborEntryIdx+1)& (0+255),f,b
 14530  00434E  BF9C               	btfsc	(??_le_updateNeighborEntryIdx+1)& (0+255),7,b
 14531  004350  D005               	goto	l16670
 14532  004352  519C               	movf	(??_le_updateNeighborEntryIdx+1)& (0+255),w,b
 14533  004354  E106               	bnz	l16672
 14534  004356  0E03               	movlw	3
 14535  004358  5D9B               	subwf	??_le_updateNeighborEntryIdx& (0+255),w,b
 14536  00435A  E203               	bc	l16672
 14537  00435C                     l16670:
 14538                           
 14539                           ; BSR set to: 0
 14540  00435C  0E02               	movlw	2
 14541  00435E  659D               	cpfsgt	le_updateNeighborEntryIdx@packetGap& (0+255),b
 14542  004360  0C02               	retlw	2
 14543  004362                     l16672:
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;LinkEstimator.c: 368: {
 14547                           ;LinkEstimator.c: 369: le_updateNeighborTableEst(neighbor_tbl[idx].ll_addr);
 14548  004362  519E               	movf	le_updateNeighborEntryIdx@idx& (0+255),w,b
 14549  004364  0D0B               	mullw	11
 14550  004366  0E00               	movlw	low _neighbor_tbl
 14551  004368  24F3               	addwf	prodl,w,c
 14552  00436A  6ED9               	movwf	fsr2l,c
 14553  00436C  0E05               	movlw	high _neighbor_tbl
 14554  00436E  20F4               	addwfc	prodh,w,c
 14555  004370  6EDA               	movwf	fsr2h,c
 14556  004372  CFDE F088          	movff	postinc2,le_updateNeighborTableEst@n
 14557  004376  CFDD F089          	movff	postdec2,le_updateNeighborTableEst@n+1
 14558  00437A  EF06  F00E         	goto	_le_updateNeighborTableEst	;wreg free
 14559  00437E                     __end_of_le_updateNeighborEntryIdx:
 14560                           	opt stack 0
 14561                           tblptru	equ	0xFF8
 14562                           tblptrh	equ	0xFF7
 14563                           tblptrl	equ	0xFF6
 14564                           tablat	equ	0xFF5
 14565                           prodh	equ	0xFF4
 14566                           prodl	equ	0xFF3
 14567                           intcon3	equ	0xFF0
 14568                           postinc0	equ	0xFEE
 14569                           plusw0	equ	0xFEB
 14570                           fsr0h	equ	0xFEA
 14571                           fsr0l	equ	0xFE9
 14572                           wreg	equ	0xFE8
 14573                           indf1	equ	0xFE7
 14574                           postdec1	equ	0xFE5
 14575                           plusw1	equ	0xFE3
 14576                           fsr1h	equ	0xFE2
 14577                           fsr1l	equ	0xFE1
 14578                           indf2	equ	0xFDF
 14579                           postinc2	equ	0xFDE
 14580                           postdec2	equ	0xFDD
 14581                           plusw2	equ	0xFDB
 14582                           fsr2h	equ	0xFDA
 14583                           fsr2l	equ	0xFD9
 14584                           status	equ	0xFD8
 14585                           
 14586 ;; *************** function _le_updateNeighborTableEst *****************
 14587 ;; Defined at:
 14588 ;;		line 297 in file "../LinkEstimator.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;  n               2   40[BANK0 ] struct addr_t_def
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;  ne              2   55[BANK0 ] PTR struct neighbor_tabl
 14593 ;;		 -> neighbor_tbl(220), 
 14594 ;;  newEst          2   52[BANK0 ] unsigned int 
 14595 ;;  i               1   54[BANK0 ] unsigned char 
 14596 ;;  totalPkt        1   51[BANK0 ] unsigned char 
 14597 ;;  minPkt          1    0        unsigned char 
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  1    wreg      void 
 14600 ;; Registers used:
 14601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : F/0
 14604 ;;		On exit  : F/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14610 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14611 ;;Total ram usage:       17 bytes
 14612 ;; Hardware stack levels used:    1
 14613 ;; Hardware stack levels required when called:    7
 14614 ;; This function calls:
 14615 ;;		___lldiv
 14616 ;;		___lwdiv
 14617 ;;		_isSameAddress
 14618 ;;		_le_computeETX
 14619 ;;		_le_updateETX
 14620 ;; This function is called by:
 14621 ;;		_le_updateNeighborEntryIdx
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625                           	psect	text59
 14626  001C0C                     __ptext59:
 14627                           	opt stack 0
 14628  001C0C                     _le_updateNeighborTableEst:
 14629                           	opt stack 19
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;LinkEstimator.c: 306: for (i = 0; i < 20; i++)
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;incstack = 0
 14636  001C0C  6B96               	clrf	le_updateNeighborTableEst@i& (0+255),b
 14637  001C0E                     l16266:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;LinkEstimator.c: 307: {
 14641                           ;LinkEstimator.c: 308: ne = &neighbor_tbl[i];
 14642  001C0E  5196               	movf	le_updateNeighborTableEst@i& (0+255),w,b
 14643  001C10  0D0B               	mullw	11
 14644  001C12  0E00               	movlw	low _neighbor_tbl
 14645  001C14  24F3               	addwf	prodl,w,c
 14646  001C16  6F97               	movwf	le_updateNeighborTableEst@ne& (0+255),b
 14647  001C18  0E05               	movlw	high _neighbor_tbl
 14648  001C1A  20F4               	addwfc	prodh,w,c
 14649  001C1C  6F98               	movwf	(le_updateNeighborTableEst@ne+1)& (0+255),b
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;LinkEstimator.c: 309: if (isSameAddress(ne->ll_addr, n))
 14653  001C1E  C097  FFD9         	movff	le_updateNeighborTableEst@ne,fsr2l
 14654  001C22  C098  FFDA         	movff	le_updateNeighborTableEst@ne+1,fsr2h
 14655  001C26  CFDE F07D          	movff	postinc2,isSameAddress@a1
 14656  001C2A  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 14657  001C2E  C088  F07F         	movff	le_updateNeighborTableEst@n,isSameAddress@a2
 14658  001C32  C089  F080         	movff	le_updateNeighborTableEst@n+1,isSameAddress@a2+1
 14659  001C36  ECBD  F039         	call	_isSameAddress	;wreg free
 14660  001C3A  0900               	iorlw	0
 14661  001C3C  E101 D137          	bz	l16292
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;LinkEstimator.c: 310: {
 14665                           ;LinkEstimator.c: 311: if (ne->flags & 0x1)
 14666  001C40  EE20 F005          	lfsr	2,5
 14667  001C44  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14668  001C46  26D9               	addwf	fsr2l,f,c
 14669  001C48  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14670  001C4A  22DA               	addwfc	fsr2h,f,c
 14671  001C4C  A0DF               	btfss	indf2,0,c
 14672  001C4E  D12F               	goto	l16292
 14673                           
 14674                           ; BSR set to: 0
 14675                           ;LinkEstimator.c: 312: {
 14676                           ;LinkEstimator.c: 314: totalPkt = ne->rcvcnt + ne->failcnt;
 14677  001C50  EE20 F004          	lfsr	2,4
 14678  001C54  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14679  001C56  26D9               	addwf	fsr2l,f,c
 14680  001C58  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14681  001C5A  22DA               	addwfc	fsr2h,f,c
 14682  001C5C  50DF               	movf	indf2,w,c
 14683  001C5E  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14684  001C60  EE20 F003          	lfsr	2,3
 14685  001C64  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14686  001C66  26D9               	addwf	fsr2l,f,c
 14687  001C68  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14688  001C6A  22DA               	addwfc	fsr2h,f,c
 14689  001C6C  50DF               	movf	indf2,w,c
 14690  001C6E  258A               	addwf	??_le_updateNeighborTableEst& (0+255),w,b
 14691  001C70  6F93               	movwf	le_updateNeighborTableEst@totalPkt& (0+255),b
 14692                           
 14693                           ;LinkEstimator.c: 316: if ((ne->flags & 0x2)==0)
 14694  001C72  EE20 F005          	lfsr	2,5
 14695  001C76  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14696  001C78  26D9               	addwf	fsr2l,f,c
 14697  001C7A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14698  001C7C  22DA               	addwfc	fsr2h,f,c
 14699  001C7E  B2DF               	btfsc	indf2,1,c
 14700  001C80  D073               	goto	l16280
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;LinkEstimator.c: 317: {
 14704                           ;LinkEstimator.c: 318: newEst = (250UL * ne->rcvcnt) / totalPkt;
 14705  001C82  EE20 F003          	lfsr	2,3
 14706  001C86  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14707  001C88  26D9               	addwf	fsr2l,f,c
 14708  001C8A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14709  001C8C  22DA               	addwfc	fsr2h,f,c
 14710  001C8E  50DF               	movf	indf2,w,c
 14711  001C90  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14712  001C92  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 14713  001C96  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14714  001C98  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14715  001C9A  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14716  001C9C  0EFA               	movlw	250
 14717  001C9E  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14718  001CA0  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 14719  001CA4  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 14720  001CA8  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 14721  001CAA  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 14722  001CAC  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14723  001CAE  50F3               	movf	prodl,w,c
 14724  001CB0  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14725  001CB2  50F4               	movf	prodh,w,c
 14726  001CB4  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14727  001CB6  0E00               	movlw	0
 14728  001CB8  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14729  001CBA  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14730  001CBC  50F3               	movf	prodl,w,c
 14731  001CBE  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14732  001CC0  50F4               	movf	prodh,w,c
 14733  001CC2  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14734  001CC4  0E00               	movlw	0
 14735  001CC6  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14736  001CC8  0EFA               	movlw	250
 14737  001CCA  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14738  001CCC  50F3               	movf	prodl,w,c
 14739  001CCE  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14740  001CD0  50F4               	movf	prodh,w,c
 14741  001CD2  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14742  001CD4  0E00               	movlw	0
 14743  001CD6  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14744  001CD8  50F3               	movf	prodl,w,c
 14745  001CDA  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14746  001CDC  50F4               	movf	prodh,w,c
 14747  001CDE  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14748  001CE0  0E00               	movlw	0
 14749  001CE2  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14750  001CE4  50F3               	movf	prodl,w,c
 14751  001CE6  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14752  001CE8  50F4               	movf	prodh,w,c
 14753  001CEA  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14754  001CEC  0EFA               	movlw	250
 14755  001CEE  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14756  001CF0  50F3               	movf	prodl,w,c
 14757  001CF2  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14758  001CF4  0E00               	movlw	0
 14759  001CF6  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14760  001CF8  50F3               	movf	prodl,w,c
 14761  001CFA  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14762  001CFC  0E00               	movlw	0
 14763  001CFE  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14764  001D00  50F3               	movf	prodl,w,c
 14765  001D02  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14766  001D04  0E00               	movlw	0
 14767  001D06  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14768  001D08  50F3               	movf	prodl,w,c
 14769  001D0A  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14770  001D0C  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 14771  001D10  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 14772  001D14  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 14773  001D18  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 14774  001D1C  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 14775  001D1E  6F77               	movwf	___lldiv@divisor& (0+255),b
 14776  001D20  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 14777  001D22  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 14778  001D24  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 14779  001D26  ECAC  F031         	call	___lldiv	;wreg free
 14780  001D2A  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 14781  001D2E  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 14782                           
 14783                           ; BSR set to: 0
 14784                           ;LinkEstimator.c: 319: ne->inquality = newEst;
 14785  001D32  EE20 F006          	lfsr	2,6
 14786  001D36  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14787  001D38  26D9               	addwf	fsr2l,f,c
 14788  001D3A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14789  001D3C  22DA               	addwfc	fsr2h,f,c
 14790  001D3E  C094  FFDF         	movff	le_updateNeighborTableEst@newEst,indf2
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;LinkEstimator.c: 320: ne->etx = le_computeETX(ne->inquality);
 14794  001D42  EE20 F006          	lfsr	2,6
 14795  001D46  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14796  001D48  26D9               	addwf	fsr2l,f,c
 14797  001D4A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14798  001D4C  22DA               	addwfc	fsr2h,f,c
 14799  001D4E  50DF               	movf	indf2,w,c
 14800  001D50  EC1D  F037         	call	_le_computeETX
 14801  001D54  EE20 F007          	lfsr	2,7
 14802  001D58  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14803  001D5A  26D9               	addwf	fsr2l,f,c
 14804  001D5C  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14805  001D5E  22DA               	addwfc	fsr2h,f,c
 14806  001D60  C07B  FFDE         	movff	?_le_computeETX,postinc2
 14807  001D64  C07C  FFDD         	movff	?_le_computeETX+1,postdec2
 14808  001D68                     l16280:
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;LinkEstimator.c: 321: }
 14812                           ;LinkEstimator.c: 323: ne->flags |= 0x2;
 14813  001D68  EE20 F005          	lfsr	2,5
 14814  001D6C  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14815  001D6E  26D9               	addwf	fsr2l,f,c
 14816  001D70  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14817  001D72  22DA               	addwfc	fsr2h,f,c
 14818  001D74  0E00               	movlw	0
 14819  001D76  82DB               	bsf	plusw2,1,c
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;LinkEstimator.c: 325: newEst = (250UL * ne->rcvcnt) / totalPkt;
 14823  001D78  EE20 F003          	lfsr	2,3
 14824  001D7C  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14825  001D7E  26D9               	addwf	fsr2l,f,c
 14826  001D80  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14827  001D82  22DA               	addwfc	fsr2h,f,c
 14828  001D84  50DF               	movf	indf2,w,c
 14829  001D86  6F8A               	movwf	??_le_updateNeighborTableEst& (0+255),b
 14830  001D88  C08A  F08B         	movff	??_le_updateNeighborTableEst,??_le_updateNeighborTableEst+1
 14831  001D8C  6B8C               	clrf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14832  001D8E  6B8D               	clrf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14833  001D90  6B8E               	clrf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14834  001D92  0EFA               	movlw	250
 14835  001D94  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14836  001D96  CFF3 F08F          	movff	prodl,??_le_updateNeighborTableEst+5
 14837  001D9A  CFF4 F090          	movff	prodh,??_le_updateNeighborTableEst+6
 14838  001D9E  6B91               	clrf	(??_le_updateNeighborTableEst+7)& (0+255),b
 14839  001DA0  6B92               	clrf	(??_le_updateNeighborTableEst+8)& (0+255),b
 14840  001DA2  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14841  001DA4  50F3               	movf	prodl,w,c
 14842  001DA6  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14843  001DA8  50F4               	movf	prodh,w,c
 14844  001DAA  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14845  001DAC  0E00               	movlw	0
 14846  001DAE  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14847  001DB0  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14848  001DB2  50F3               	movf	prodl,w,c
 14849  001DB4  2790               	addwf	(??_le_updateNeighborTableEst+6)& (0+255),f,b
 14850  001DB6  50F4               	movf	prodh,w,c
 14851  001DB8  2391               	addwfc	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14852  001DBA  0E00               	movlw	0
 14853  001DBC  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14854  001DBE  0EFA               	movlw	250
 14855  001DC0  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14856  001DC2  50F3               	movf	prodl,w,c
 14857  001DC4  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14858  001DC6  50F4               	movf	prodh,w,c
 14859  001DC8  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14860  001DCA  0E00               	movlw	0
 14861  001DCC  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14862  001DCE  50F3               	movf	prodl,w,c
 14863  001DD0  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14864  001DD2  50F4               	movf	prodh,w,c
 14865  001DD4  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14866  001DD6  0E00               	movlw	0
 14867  001DD8  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14868  001DDA  50F3               	movf	prodl,w,c
 14869  001DDC  2791               	addwf	(??_le_updateNeighborTableEst+7)& (0+255),f,b
 14870  001DDE  50F4               	movf	prodh,w,c
 14871  001DE0  2392               	addwfc	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14872  001DE2  0EFA               	movlw	250
 14873  001DE4  038E               	mulwf	(??_le_updateNeighborTableEst+4)& (0+255),b
 14874  001DE6  50F3               	movf	prodl,w,c
 14875  001DE8  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14876  001DEA  0E00               	movlw	0
 14877  001DEC  038D               	mulwf	(??_le_updateNeighborTableEst+3)& (0+255),b
 14878  001DEE  50F3               	movf	prodl,w,c
 14879  001DF0  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14880  001DF2  0E00               	movlw	0
 14881  001DF4  038C               	mulwf	(??_le_updateNeighborTableEst+2)& (0+255),b
 14882  001DF6  50F3               	movf	prodl,w,c
 14883  001DF8  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14884  001DFA  0E00               	movlw	0
 14885  001DFC  038B               	mulwf	(??_le_updateNeighborTableEst+1)& (0+255),b
 14886  001DFE  50F3               	movf	prodl,w,c
 14887  001E00  2792               	addwf	(??_le_updateNeighborTableEst+8)& (0+255),f,b
 14888  001E02  C08F  F073         	movff	??_le_updateNeighborTableEst+5,___lldiv@dividend
 14889  001E06  C090  F074         	movff	??_le_updateNeighborTableEst+6,___lldiv@dividend+1
 14890  001E0A  C091  F075         	movff	??_le_updateNeighborTableEst+7,___lldiv@dividend+2
 14891  001E0E  C092  F076         	movff	??_le_updateNeighborTableEst+8,___lldiv@dividend+3
 14892  001E12  5193               	movf	le_updateNeighborTableEst@totalPkt& (0+255),w,b
 14893  001E14  6F77               	movwf	___lldiv@divisor& (0+255),b
 14894  001E16  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
 14895  001E18  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
 14896  001E1A  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
 14897  001E1C  ECAC  F031         	call	___lldiv	;wreg free
 14898  001E20  C073  F094         	movff	?___lldiv,le_updateNeighborTableEst@newEst
 14899  001E24  C074  F095         	movff	?___lldiv+1,le_updateNeighborTableEst@newEst+1
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;LinkEstimator.c: 327: ne->inquality = (8 * (uint16_t) ne->inquality + (10 - 8) * newEst
      +                          ) / 10;
 14903  001E28  EE20 F006          	lfsr	2,6
 14904  001E2C  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14905  001E2E  26D9               	addwf	fsr2l,f,c
 14906  001E30  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14907  001E32  22DA               	addwfc	fsr2h,f,c
 14908  001E34  C094  F08A         	movff	le_updateNeighborTableEst@newEst,??_le_updateNeighborTableEst
 14909  001E38  C095  F08B         	movff	le_updateNeighborTableEst@newEst+1,??_le_updateNeighborTableEst+1
 14910  001E3C  90D8               	bcf	status,0,c
 14911  001E3E  378A               	rlcf	??_le_updateNeighborTableEst& (0+255),f,b
 14912  001E40  378B               	rlcf	(??_le_updateNeighborTableEst+1)& (0+255),f,b
 14913  001E42  EE10 F006          	lfsr	1,6
 14914  001E46  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14915  001E48  26E1               	addwf	fsr1l,f,c
 14916  001E4A  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14917  001E4C  22E2               	addwfc	fsr1h,f,c
 14918  001E4E  50E7               	movf	indf1,w,c
 14919  001E50  0D08               	mullw	8
 14920  001E52  518A               	movf	??_le_updateNeighborTableEst& (0+255),w,b
 14921  001E54  24F3               	addwf	prodl,w,c
 14922  001E56  6F73               	movwf	___lwdiv@dividend& (0+255),b
 14923  001E58  518B               	movf	(??_le_updateNeighborTableEst+1)& (0+255),w,b
 14924  001E5A  20F4               	addwfc	prodh,w,c
 14925  001E5C  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 14926  001E5E  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 14927  001E60  0E0A               	movlw	10
 14928  001E62  6F75               	movwf	___lwdiv@divisor& (0+255),b
 14929  001E64  EC71  F036         	call	___lwdiv	;wreg free
 14930  001E68  5173               	movf	?___lwdiv& (0+255),w,b
 14931  001E6A  6EDF               	movwf	indf2,c
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;LinkEstimator.c: 328: ne->rcvcnt = 0;
 14935  001E6C  EE20 F003          	lfsr	2,3
 14936  001E70  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14937  001E72  26D9               	addwf	fsr2l,f,c
 14938  001E74  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14939  001E76  22DA               	addwfc	fsr2h,f,c
 14940  001E78  6ADF               	clrf	indf2,c
 14941                           
 14942                           ; BSR set to: 0
 14943                           ;LinkEstimator.c: 329: ne->failcnt = 0;
 14944  001E7A  EE20 F004          	lfsr	2,4
 14945  001E7E  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14946  001E80  26D9               	addwf	fsr2l,f,c
 14947  001E82  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14948  001E84  22DA               	addwfc	fsr2h,f,c
 14949  001E86  6ADF               	clrf	indf2,c
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;LinkEstimator.c: 330: le_updateETX(ne, le_computeETX(ne->inquality));
 14953  001E88  C097  F080         	movff	le_updateNeighborTableEst@ne,le_updateETX@ne
 14954  001E8C  C098  F081         	movff	le_updateNeighborTableEst@ne+1,le_updateETX@ne+1
 14955  001E90  EE20 F006          	lfsr	2,6
 14956  001E94  5197               	movf	le_updateNeighborTableEst@ne& (0+255),w,b
 14957  001E96  26D9               	addwf	fsr2l,f,c
 14958  001E98  5198               	movf	(le_updateNeighborTableEst@ne+1)& (0+255),w,b
 14959  001E9A  22DA               	addwfc	fsr2h,f,c
 14960  001E9C  50DF               	movf	indf2,w,c
 14961  001E9E  EC1D  F037         	call	_le_computeETX
 14962  001EA2  C07B  F082         	movff	?_le_computeETX,le_updateETX@newEst
 14963  001EA6  C07C  F083         	movff	?_le_computeETX+1,le_updateETX@newEst+1
 14964  001EAA  ECCA  F033         	call	_le_updateETX	;wreg free
 14965  001EAE                     l16292:
 14966                           
 14967                           ; BSR set to: 0
 14968  001EAE  2B96               	incf	le_updateNeighborTableEst@i& (0+255),f,b
 14969                           
 14970                           ; BSR set to: 0
 14971  001EB0  0E13               	movlw	19
 14972  001EB2  6596               	cpfsgt	le_updateNeighborTableEst@i& (0+255),b
 14973  001EB4  D6AC               	goto	l16266
 14974  001EB6  0C13               	retlw	19
 14975  001EB8                     __end_of_le_updateNeighborTableEst:
 14976                           	opt stack 0
 14977                           tblptru	equ	0xFF8
 14978                           tblptrh	equ	0xFF7
 14979                           tblptrl	equ	0xFF6
 14980                           tablat	equ	0xFF5
 14981                           prodh	equ	0xFF4
 14982                           prodl	equ	0xFF3
 14983                           intcon3	equ	0xFF0
 14984                           postinc0	equ	0xFEE
 14985                           plusw0	equ	0xFEB
 14986                           fsr0h	equ	0xFEA
 14987                           fsr0l	equ	0xFE9
 14988                           wreg	equ	0xFE8
 14989                           indf1	equ	0xFE7
 14990                           postdec1	equ	0xFE5
 14991                           plusw1	equ	0xFE3
 14992                           fsr1h	equ	0xFE2
 14993                           fsr1l	equ	0xFE1
 14994                           indf2	equ	0xFDF
 14995                           postinc2	equ	0xFDE
 14996                           postdec2	equ	0xFDD
 14997                           plusw2	equ	0xFDB
 14998                           fsr2h	equ	0xFDA
 14999                           fsr2l	equ	0xFD9
 15000                           status	equ	0xFD8
 15001                           
 15002 ;; *************** function _le_updateETX *****************
 15003 ;; Defined at:
 15004 ;;		line 292 in file "../LinkEstimator.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;  ne              2   32[BANK0 ] PTR struct neighbor_tabl
 15007 ;;		 -> neighbor_tbl(220), 
 15008 ;;  newEst          2   34[BANK0 ] unsigned int 
 15009 ;; Auto vars:     Size  Location     Type
 15010 ;;		None
 15011 ;; Return value:  Size  Location     Type
 15012 ;;                  1    wreg      void 
 15013 ;; Registers used:
 15014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15015 ;; Tracked objects:
 15016 ;;		On entry : F/0
 15017 ;;		On exit  : F/0
 15018 ;;		Unchanged: 0/0
 15019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15023 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15024 ;;Total ram usage:        8 bytes
 15025 ;; Hardware stack levels used:    1
 15026 ;; Hardware stack levels required when called:    6
 15027 ;; This function calls:
 15028 ;;		___lwdiv
 15029 ;; This function is called by:
 15030 ;;		_le_updateNeighborTableEst
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           	psect	text60
 15035  006794                     __ptext60:
 15036                           	opt stack 0
 15037  006794                     _le_updateETX:
 15038                           	opt stack 19
 15039                           
 15040                           ; BSR set to: 0
 15041                           ;LinkEstimator.c: 294: ne->etx = ((uint16_t) 8 * ne->etx + (uint16_t) (10 - 8) * newEst)
      +                           / 10;
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;incstack = 0
 15045  006794  C082  F084         	movff	le_updateETX@newEst,??_le_updateETX
 15046  006798  C083  F085         	movff	le_updateETX@newEst+1,??_le_updateETX+1
 15047  00679C  90D8               	bcf	status,0,c
 15048  00679E  3784               	rlcf	??_le_updateETX& (0+255),f,b
 15049  0067A0  3785               	rlcf	(??_le_updateETX+1)& (0+255),f,b
 15050  0067A2  EE20 F007          	lfsr	2,7
 15051  0067A6  5180               	movf	le_updateETX@ne& (0+255),w,b
 15052  0067A8  26D9               	addwf	fsr2l,f,c
 15053  0067AA  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 15054  0067AC  22DA               	addwfc	fsr2h,f,c
 15055  0067AE  CFDE F086          	movff	postinc2,??_le_updateETX+2
 15056  0067B2  CFDD F087          	movff	postdec2,??_le_updateETX+3
 15057  0067B6  90D8               	bcf	status,0,c
 15058  0067B8  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 15059  0067BA  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 15060  0067BC  90D8               	bcf	status,0,c
 15061  0067BE  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 15062  0067C0  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 15063  0067C2  90D8               	bcf	status,0,c
 15064  0067C4  3786               	rlcf	(??_le_updateETX+2)& (0+255),f,b
 15065  0067C6  3787               	rlcf	(??_le_updateETX+3)& (0+255),f,b
 15066  0067C8  5184               	movf	??_le_updateETX& (0+255),w,b
 15067  0067CA  2586               	addwf	(??_le_updateETX+2)& (0+255),w,b
 15068  0067CC  6F73               	movwf	___lwdiv@dividend& (0+255),b
 15069  0067CE  5185               	movf	(??_le_updateETX+1)& (0+255),w,b
 15070  0067D0  2187               	addwfc	(??_le_updateETX+3)& (0+255),w,b
 15071  0067D2  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
 15072  0067D4  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 15073  0067D6  0E0A               	movlw	10
 15074  0067D8  6F75               	movwf	___lwdiv@divisor& (0+255),b
 15075  0067DA  EC71  F036         	call	___lwdiv	;wreg free
 15076  0067DE  EE20 F007          	lfsr	2,7
 15077  0067E2  5180               	movf	le_updateETX@ne& (0+255),w,b
 15078  0067E4  26D9               	addwf	fsr2l,f,c
 15079  0067E6  5181               	movf	(le_updateETX@ne+1)& (0+255),w,b
 15080  0067E8  22DA               	addwfc	fsr2h,f,c
 15081  0067EA  C073  FFDE         	movff	?___lwdiv,postinc2
 15082  0067EE  C074  FFDD         	movff	?___lwdiv+1,postdec2
 15083                           
 15084                           ; BSR set to: 0
 15085  0067F2  0012               	return		;funcret
 15086  0067F4                     __end_of_le_updateETX:
 15087                           	opt stack 0
 15088                           tblptru	equ	0xFF8
 15089                           tblptrh	equ	0xFF7
 15090                           tblptrl	equ	0xFF6
 15091                           tablat	equ	0xFF5
 15092                           prodh	equ	0xFF4
 15093                           prodl	equ	0xFF3
 15094                           intcon3	equ	0xFF0
 15095                           postinc0	equ	0xFEE
 15096                           plusw0	equ	0xFEB
 15097                           fsr0h	equ	0xFEA
 15098                           fsr0l	equ	0xFE9
 15099                           wreg	equ	0xFE8
 15100                           indf1	equ	0xFE7
 15101                           postdec1	equ	0xFE5
 15102                           plusw1	equ	0xFE3
 15103                           fsr1h	equ	0xFE2
 15104                           fsr1l	equ	0xFE1
 15105                           indf2	equ	0xFDF
 15106                           postinc2	equ	0xFDE
 15107                           postdec2	equ	0xFDD
 15108                           plusw2	equ	0xFDB
 15109                           fsr2h	equ	0xFDA
 15110                           fsr2l	equ	0xFD9
 15111                           status	equ	0xFD8
 15112                           
 15113 ;; *************** function _le_computeETX *****************
 15114 ;; Defined at:
 15115 ;;		line 278 in file "../LinkEstimator.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;  q1              1    wreg     unsigned char 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  q1              1   29[BANK0 ] unsigned char 
 15120 ;;  q               2   30[BANK0 ] unsigned int 
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  2   27[BANK0 ] unsigned int 
 15123 ;; Registers used:
 15124 ;;		wreg, status,2, status,0, cstack
 15125 ;; Tracked objects:
 15126 ;;		On entry : F/0
 15127 ;;		On exit  : F/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;Total ram usage:        5 bytes
 15135 ;; Hardware stack levels used:    1
 15136 ;; Hardware stack levels required when called:    6
 15137 ;; This function calls:
 15138 ;;		___awdiv
 15139 ;; This function is called by:
 15140 ;;		_le_updateNeighborTableEst
 15141 ;; This function uses a non-reentrant model
 15142 ;;
 15143                           
 15144                           	psect	text61
 15145  006E3A                     __ptext61:
 15146                           	opt stack 0
 15147  006E3A                     _le_computeETX:
 15148                           	opt stack 19
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;incstack = 0
 15152                           ;le_computeETX@q1 stored from wreg
 15153  006E3A  6F7D               	movwf	le_computeETX@q1& (0+255),b
 15154                           
 15155                           ;LinkEstimator.c: 280: uint16_t q=0xffff;
 15156  006E3C  0100               	movlb	0	; () banked
 15157  006E3E  697E               	setf	le_computeETX@q& (0+255),b
 15158  006E40  697F               	setf	(le_computeETX@q+1)& (0+255),b
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;LinkEstimator.c: 281: if (q1 > 0)
 15162  006E42  517D               	movf	le_computeETX@q1& (0+255),w,b
 15163  006E44  E014               	bz	l1502
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;LinkEstimator.c: 282: {
 15167                           ;LinkEstimator.c: 283: q = 2500 / q1;
 15168  006E46  0E09               	movlw	9
 15169  006E48  6F74               	movwf	(___awdiv@dividend+1)& (0+255),b
 15170  006E4A  0EC4               	movlw	196
 15171  006E4C  6F73               	movwf	___awdiv@dividend& (0+255),b
 15172  006E4E  C07D  F075         	movff	le_computeETX@q1,___awdiv@divisor
 15173  006E52  6B76               	clrf	(___awdiv@divisor+1)& (0+255),b
 15174  006E54  EC34  F031         	call	___awdiv	;wreg free
 15175  006E58  C073  F07E         	movff	?___awdiv,le_computeETX@q
 15176  006E5C  C074  F07F         	movff	?___awdiv+1,le_computeETX@q+1
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;LinkEstimator.c: 284: if (q > 250)
 15180  006E60  517F               	movf	(le_computeETX@q+1)& (0+255),w,b
 15181  006E62  E103               	bnz	u19160
 15182  006E64  0EFB               	movlw	251
 15183  006E66  5D7E               	subwf	le_computeETX@q& (0+255),w,b
 15184  006E68  E302               	bnc	l1502
 15185  006E6A                     u19160:
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;LinkEstimator.c: 285: {
 15189                           ;LinkEstimator.c: 286: q = 0xffff;
 15190  006E6A  697E               	setf	le_computeETX@q& (0+255),b
 15191  006E6C  697F               	setf	(le_computeETX@q+1)& (0+255),b
 15192  006E6E                     l1502:
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;LinkEstimator.c: 287: }
 15196                           ;LinkEstimator.c: 288: }
 15197                           ;LinkEstimator.c: 289: return(q);
 15198  006E6E  C07E  F07B         	movff	le_computeETX@q,?_le_computeETX
 15199  006E72  C07F  F07C         	movff	le_computeETX@q+1,?_le_computeETX+1
 15200                           
 15201                           ; BSR set to: 0
 15202  006E76  0012               	return		;funcret
 15203  006E78                     __end_of_le_computeETX:
 15204                           	opt stack 0
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon3	equ	0xFF0
 15212                           postinc0	equ	0xFEE
 15213                           plusw0	equ	0xFEB
 15214                           fsr0h	equ	0xFEA
 15215                           fsr0l	equ	0xFE9
 15216                           wreg	equ	0xFE8
 15217                           indf1	equ	0xFE7
 15218                           postdec1	equ	0xFE5
 15219                           plusw1	equ	0xFE3
 15220                           fsr1h	equ	0xFE2
 15221                           fsr1l	equ	0xFE1
 15222                           indf2	equ	0xFDF
 15223                           postinc2	equ	0xFDE
 15224                           postdec2	equ	0xFDD
 15225                           plusw2	equ	0xFDB
 15226                           fsr2h	equ	0xFDA
 15227                           fsr2l	equ	0xFD9
 15228                           status	equ	0xFD8
 15229                           
 15230 ;; *************** function ___awdiv *****************
 15231 ;; Defined at:
 15232 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  dividend        2   19[BANK0 ] int 
 15235 ;;  divisor         2   21[BANK0 ] int 
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;  quotient        2   25[BANK0 ] int 
 15238 ;;  sign            1   24[BANK0 ] unsigned char 
 15239 ;;  counter         1   23[BANK0 ] unsigned char 
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  2   19[BANK0 ] int 
 15242 ;; Registers used:
 15243 ;;		wreg, status,2, status,0
 15244 ;; Tracked objects:
 15245 ;;		On entry : F/0
 15246 ;;		On exit  : F/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15250 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15253 ;;Total ram usage:        8 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:    5
 15256 ;; This function calls:
 15257 ;;		Nothing
 15258 ;; This function is called by:
 15259 ;;		_le_computeETX
 15260 ;; This function uses a non-reentrant model
 15261 ;;
 15262                           
 15263                           	psect	text62
 15264  006268                     __ptext62:
 15265                           	opt stack 0
 15266  006268                     ___awdiv:
 15267                           	opt stack 19
 15268                           
 15269                           ; BSR set to: 0
 15270                           
 15271                           ; BSR set to: 0
 15272                           ;incstack = 0
 15273  006268  6B78               	clrf	___awdiv@sign& (0+255),b
 15274                           
 15275                           ; BSR set to: 0
 15276  00626A  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15277  00626C  D006               	goto	l15738
 15278                           
 15279                           ; BSR set to: 0
 15280  00626E  6D75               	negf	___awdiv@divisor& (0+255),b
 15281  006270  1F76               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15282  006272  B0D8               	btfsc	status,0,c
 15283  006274  2B76               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15284                           
 15285                           ; BSR set to: 0
 15286  006276  0E01               	movlw	1
 15287  006278  6F78               	movwf	___awdiv@sign& (0+255),b
 15288  00627A                     l15738:
 15289                           
 15290                           ; BSR set to: 0
 15291  00627A  AF74               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 15292  00627C  D006               	goto	l15744
 15293                           
 15294                           ; BSR set to: 0
 15295  00627E  6D73               	negf	___awdiv@dividend& (0+255),b
 15296  006280  1F74               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15297  006282  B0D8               	btfsc	status,0,c
 15298  006284  2B74               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15299                           
 15300                           ; BSR set to: 0
 15301  006286  0E01               	movlw	1
 15302  006288  1B78               	xorwf	___awdiv@sign& (0+255),f,b
 15303  00628A                     l15744:
 15304                           
 15305                           ; BSR set to: 0
 15306  00628A  6B79               	clrf	___awdiv@quotient& (0+255),b
 15307  00628C  6B7A               	clrf	(___awdiv@quotient+1)& (0+255),b
 15308                           
 15309                           ; BSR set to: 0
 15310  00628E  5175               	movf	___awdiv@divisor& (0+255),w,b
 15311  006290  1176               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 15312  006292  E01B               	bz	l15766
 15313                           
 15314                           ; BSR set to: 0
 15315  006294  0E01               	movlw	1
 15316  006296  6F77               	movwf	___awdiv@counter& (0+255),b
 15317  006298  D004               	goto	l15752
 15318  00629A                     l15750:
 15319                           
 15320                           ; BSR set to: 0
 15321  00629A  90D8               	bcf	status,0,c
 15322  00629C  3775               	rlcf	___awdiv@divisor& (0+255),f,b
 15323  00629E  3776               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15324  0062A0  2B77               	incf	___awdiv@counter& (0+255),f,b
 15325  0062A2                     l15752:
 15326                           
 15327                           ; BSR set to: 0
 15328  0062A2  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15329  0062A4  D7FA               	goto	l15750
 15330  0062A6                     l15754:
 15331                           
 15332                           ; BSR set to: 0
 15333  0062A6  90D8               	bcf	status,0,c
 15334  0062A8  3779               	rlcf	___awdiv@quotient& (0+255),f,b
 15335  0062AA  377A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 15336                           
 15337                           ; BSR set to: 0
 15338  0062AC  5175               	movf	___awdiv@divisor& (0+255),w,b
 15339  0062AE  5D73               	subwf	___awdiv@dividend& (0+255),w,b
 15340  0062B0  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15341  0062B2  5974               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15342  0062B4  E305               	bnc	l15762
 15343                           
 15344                           ; BSR set to: 0
 15345  0062B6  5175               	movf	___awdiv@divisor& (0+255),w,b
 15346  0062B8  5F73               	subwf	___awdiv@dividend& (0+255),f,b
 15347  0062BA  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15348  0062BC  5B74               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  0062BE  8179               	bsf	___awdiv@quotient& (0+255),0,b
 15352  0062C0                     l15762:
 15353                           
 15354                           ; BSR set to: 0
 15355  0062C0  90D8               	bcf	status,0,c
 15356  0062C2  3376               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15357  0062C4  3375               	rrcf	___awdiv@divisor& (0+255),f,b
 15358                           
 15359                           ; BSR set to: 0
 15360  0062C6  2F77               	decfsz	___awdiv@counter& (0+255),f,b
 15361  0062C8  D7EE               	goto	l15754
 15362  0062CA                     l15766:
 15363                           
 15364                           ; BSR set to: 0
 15365  0062CA  5178               	movf	___awdiv@sign& (0+255),w,b
 15366  0062CC  E004               	bz	l15770
 15367                           
 15368                           ; BSR set to: 0
 15369  0062CE  6D79               	negf	___awdiv@quotient& (0+255),b
 15370  0062D0  1F7A               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15371  0062D2  B0D8               	btfsc	status,0,c
 15372  0062D4  2B7A               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15373  0062D6                     l15770:
 15374                           
 15375                           ; BSR set to: 0
 15376  0062D6  C079  F073         	movff	___awdiv@quotient,?___awdiv
 15377  0062DA  C07A  F074         	movff	___awdiv@quotient+1,?___awdiv+1
 15378                           
 15379                           ; BSR set to: 0
 15380  0062DE  0012               	return		;funcret
 15381  0062E0                     __end_of___awdiv:
 15382                           	opt stack 0
 15383                           tblptru	equ	0xFF8
 15384                           tblptrh	equ	0xFF7
 15385                           tblptrl	equ	0xFF6
 15386                           tablat	equ	0xFF5
 15387                           prodh	equ	0xFF4
 15388                           prodl	equ	0xFF3
 15389                           intcon3	equ	0xFF0
 15390                           postinc0	equ	0xFEE
 15391                           plusw0	equ	0xFEB
 15392                           fsr0h	equ	0xFEA
 15393                           fsr0l	equ	0xFE9
 15394                           wreg	equ	0xFE8
 15395                           indf1	equ	0xFE7
 15396                           postdec1	equ	0xFE5
 15397                           plusw1	equ	0xFE3
 15398                           fsr1h	equ	0xFE2
 15399                           fsr1l	equ	0xFE1
 15400                           indf2	equ	0xFDF
 15401                           postinc2	equ	0xFDE
 15402                           postdec2	equ	0xFDD
 15403                           plusw2	equ	0xFDB
 15404                           fsr2h	equ	0xFDA
 15405                           fsr2l	equ	0xFD9
 15406                           status	equ	0xFD8
 15407                           
 15408 ;; *************** function ___lldiv *****************
 15409 ;; Defined at:
 15410 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 15411 ;; Parameters:    Size  Location     Type
 15412 ;;  dividend        4   19[BANK0 ] unsigned long 
 15413 ;;  divisor         4   23[BANK0 ] unsigned long 
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;  quotient        4   28[BANK0 ] unsigned long 
 15416 ;;  counter         1   27[BANK0 ] unsigned char 
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  4   19[BANK0 ] unsigned long 
 15419 ;; Registers used:
 15420 ;;		wreg, status,2, status,0
 15421 ;; Tracked objects:
 15422 ;;		On entry : F/0
 15423 ;;		On exit  : F/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15427 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15429 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15430 ;;Total ram usage:       13 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    5
 15433 ;; This function calls:
 15434 ;;		Nothing
 15435 ;; This function is called by:
 15436 ;;		_le_updateNeighborTableEst
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text63
 15441  006358                     __ptext63:
 15442                           	opt stack 0
 15443  006358                     ___lldiv:
 15444                           	opt stack 20
 15445                           
 15446                           ; BSR set to: 0
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;incstack = 0
 15450  006358  6B7C               	clrf	___lldiv@quotient& (0+255),b
 15451  00635A  6B7D               	clrf	(___lldiv@quotient+1)& (0+255),b
 15452  00635C  6B7E               	clrf	(___lldiv@quotient+2)& (0+255),b
 15453  00635E  6B7F               	clrf	(___lldiv@quotient+3)& (0+255),b
 15454                           
 15455                           ; BSR set to: 0
 15456  006360  5177               	movf	___lldiv@divisor& (0+255),w,b
 15457  006362  1178               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15458  006364  1179               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15459  006366  117A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15460  006368  E029               	bz	l2535
 15461                           
 15462                           ; BSR set to: 0
 15463  00636A  0E01               	movlw	1
 15464  00636C  6F7B               	movwf	___lldiv@counter& (0+255),b
 15465  00636E  D006               	goto	l15990
 15466  006370                     l15988:
 15467                           
 15468                           ; BSR set to: 0
 15469  006370  90D8               	bcf	status,0,c
 15470  006372  3777               	rlcf	___lldiv@divisor& (0+255),f,b
 15471  006374  3778               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15472  006376  3779               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15473  006378  377A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15474  00637A  2B7B               	incf	___lldiv@counter& (0+255),f,b
 15475  00637C                     l15990:
 15476                           
 15477                           ; BSR set to: 0
 15478  00637C  AF7A               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15479  00637E  D7F8               	goto	l15988
 15480  006380                     l15992:
 15481                           
 15482                           ; BSR set to: 0
 15483  006380  90D8               	bcf	status,0,c
 15484  006382  377C               	rlcf	___lldiv@quotient& (0+255),f,b
 15485  006384  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15486  006386  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15487  006388  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15488                           
 15489                           ; BSR set to: 0
 15490  00638A  5177               	movf	___lldiv@divisor& (0+255),w,b
 15491  00638C  5D73               	subwf	___lldiv@dividend& (0+255),w,b
 15492  00638E  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15493  006390  5974               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15494  006392  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15495  006394  5975               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15496  006396  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15497  006398  5976               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15498  00639A  E309               	bnc	l16000
 15499                           
 15500                           ; BSR set to: 0
 15501  00639C  5177               	movf	___lldiv@divisor& (0+255),w,b
 15502  00639E  5F73               	subwf	___lldiv@dividend& (0+255),f,b
 15503  0063A0  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15504  0063A2  5B74               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15505  0063A4  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15506  0063A6  5B75               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15507  0063A8  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15508  0063AA  5B76               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15509                           
 15510                           ; BSR set to: 0
 15511  0063AC  817C               	bsf	___lldiv@quotient& (0+255),0,b
 15512  0063AE                     l16000:
 15513                           
 15514                           ; BSR set to: 0
 15515  0063AE  90D8               	bcf	status,0,c
 15516  0063B0  337A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15517  0063B2  3379               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15518  0063B4  3378               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15519  0063B6  3377               	rrcf	___lldiv@divisor& (0+255),f,b
 15520                           
 15521                           ; BSR set to: 0
 15522  0063B8  2F7B               	decfsz	___lldiv@counter& (0+255),f,b
 15523  0063BA  D7E2               	goto	l15992
 15524  0063BC                     l2535:
 15525                           
 15526                           ; BSR set to: 0
 15527  0063BC  C07C  F073         	movff	___lldiv@quotient,?___lldiv
 15528  0063C0  C07D  F074         	movff	___lldiv@quotient+1,?___lldiv+1
 15529  0063C4  C07E  F075         	movff	___lldiv@quotient+2,?___lldiv+2
 15530  0063C8  C07F  F076         	movff	___lldiv@quotient+3,?___lldiv+3
 15531                           
 15532                           ; BSR set to: 0
 15533  0063CC  0012               	return		;funcret
 15534  0063CE                     __end_of___lldiv:
 15535                           	opt stack 0
 15536                           tblptru	equ	0xFF8
 15537                           tblptrh	equ	0xFF7
 15538                           tblptrl	equ	0xFF6
 15539                           tablat	equ	0xFF5
 15540                           prodh	equ	0xFF4
 15541                           prodl	equ	0xFF3
 15542                           intcon3	equ	0xFF0
 15543                           postinc0	equ	0xFEE
 15544                           plusw0	equ	0xFEB
 15545                           fsr0h	equ	0xFEA
 15546                           fsr0l	equ	0xFE9
 15547                           wreg	equ	0xFE8
 15548                           indf1	equ	0xFE7
 15549                           postdec1	equ	0xFE5
 15550                           plusw1	equ	0xFE3
 15551                           fsr1h	equ	0xFE2
 15552                           fsr1l	equ	0xFE1
 15553                           indf2	equ	0xFDF
 15554                           postinc2	equ	0xFDE
 15555                           postdec2	equ	0xFDD
 15556                           plusw2	equ	0xFDB
 15557                           fsr2h	equ	0xFDA
 15558                           fsr2l	equ	0xFD9
 15559                           status	equ	0xFD8
 15560                           
 15561 ;; *************** function _le_initNeighborIdx *****************
 15562 ;; Defined at:
 15563 ;;		line 160 in file "../LinkEstimator.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  i               1    wreg     unsigned char 
 15566 ;;  ll_addr         2   19[BANK0 ] struct addr_t_def
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;  i               1   21[BANK0 ] unsigned char 
 15569 ;;  ne              2   22[BANK0 ] PTR struct neighbor_tabl
 15570 ;;		 -> neighbor_tbl(220), 
 15571 ;; Return value:  Size  Location     Type
 15572 ;;                  1    wreg      void 
 15573 ;; Registers used:
 15574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15575 ;; Tracked objects:
 15576 ;;		On entry : F/0
 15577 ;;		On exit  : F/0
 15578 ;;		Unchanged: 0/0
 15579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15581 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;Total ram usage:        5 bytes
 15585 ;; Hardware stack levels used:    1
 15586 ;; Hardware stack levels required when called:    5
 15587 ;; This function calls:
 15588 ;;		Nothing
 15589 ;; This function is called by:
 15590 ;;		_LE_InsertNeighbor
 15591 ;;		_le_updateNeighborEntryIdx
 15592 ;;		_LE_processReceivedMessage
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text64
 15597  006172                     __ptext64:
 15598                           	opt stack 0
 15599  006172                     _le_initNeighborIdx:
 15600                           	opt stack 21
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;incstack = 0
 15604                           ;le_initNeighborIdx@i stored from wreg
 15605  006172  6F75               	movwf	le_initNeighborIdx@i& (0+255),b
 15606                           
 15607                           ;LinkEstimator.c: 162: neighbor_table_entry_t *ne;
 15608                           ;LinkEstimator.c: 163: ne = &neighbor_tbl[i];
 15609  006174  0100               	movlb	0	; () banked
 15610  006176  5175               	movf	le_initNeighborIdx@i& (0+255),w,b
 15611  006178  0D0B               	mullw	11
 15612  00617A  0E00               	movlw	low _neighbor_tbl
 15613  00617C  24F3               	addwf	prodl,w,c
 15614  00617E  6F76               	movwf	le_initNeighborIdx@ne& (0+255),b
 15615  006180  0E05               	movlw	high _neighbor_tbl
 15616  006182  20F4               	addwfc	prodh,w,c
 15617  006184  6F77               	movwf	(le_initNeighborIdx@ne+1)& (0+255),b
 15618                           
 15619                           ; BSR set to: 0
 15620                           ;LinkEstimator.c: 164: ne->ll_addr = ll_addr;
 15621  006186  C076  FFD9         	movff	le_initNeighborIdx@ne,fsr2l
 15622  00618A  C077  FFDA         	movff	le_initNeighborIdx@ne+1,fsr2h
 15623  00618E  C073  FFDE         	movff	le_initNeighborIdx@ll_addr,postinc2
 15624  006192  C074  FFDD         	movff	le_initNeighborIdx@ll_addr+1,postdec2
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;LinkEstimator.c: 165: ne->lastseq = 0;
 15628  006196  EE20 F002          	lfsr	2,2
 15629  00619A  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15630  00619C  26D9               	addwf	fsr2l,f,c
 15631  00619E  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15632  0061A0  22DA               	addwfc	fsr2h,f,c
 15633  0061A2  6ADF               	clrf	indf2,c
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;LinkEstimator.c: 166: ne->rcvcnt = 0;
 15637  0061A4  EE20 F003          	lfsr	2,3
 15638  0061A8  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15639  0061AA  26D9               	addwf	fsr2l,f,c
 15640  0061AC  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15641  0061AE  22DA               	addwfc	fsr2h,f,c
 15642  0061B0  6ADF               	clrf	indf2,c
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;LinkEstimator.c: 167: ne->failcnt = 0;
 15646  0061B2  EE20 F004          	lfsr	2,4
 15647  0061B6  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15648  0061B8  26D9               	addwf	fsr2l,f,c
 15649  0061BA  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15650  0061BC  22DA               	addwfc	fsr2h,f,c
 15651  0061BE  6ADF               	clrf	indf2,c
 15652                           
 15653                           ; BSR set to: 0
 15654                           ;LinkEstimator.c: 168: ne->flags = (0x4 | 0x1);
 15655  0061C0  EE20 F005          	lfsr	2,5
 15656  0061C4  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15657  0061C6  26D9               	addwf	fsr2l,f,c
 15658  0061C8  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15659  0061CA  22DA               	addwfc	fsr2h,f,c
 15660  0061CC  0E05               	movlw	5
 15661  0061CE  6EDF               	movwf	indf2,c
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;LinkEstimator.c: 169: ne->inquality = 0;
 15665  0061D0  EE20 F006          	lfsr	2,6
 15666  0061D4  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15667  0061D6  26D9               	addwf	fsr2l,f,c
 15668  0061D8  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15669  0061DA  22DA               	addwfc	fsr2h,f,c
 15670  0061DC  6ADF               	clrf	indf2,c
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;LinkEstimator.c: 170: ne->etx = 0;
 15674  0061DE  EE20 F007          	lfsr	2,7
 15675  0061E2  5176               	movf	le_initNeighborIdx@ne& (0+255),w,b
 15676  0061E4  26D9               	addwf	fsr2l,f,c
 15677  0061E6  5177               	movf	(le_initNeighborIdx@ne+1)& (0+255),w,b
 15678  0061E8  22DA               	addwfc	fsr2h,f,c
 15679  0061EA  6ADE               	clrf	postinc2,c
 15680  0061EC  6ADD               	clrf	postdec2,c
 15681                           
 15682                           ; BSR set to: 0
 15683  0061EE  0C00               	retlw	0	;funcret
 15684  0061F0                     __end_of_le_initNeighborIdx:
 15685                           	opt stack 0
 15686                           tblptru	equ	0xFF8
 15687                           tblptrh	equ	0xFF7
 15688                           tblptrl	equ	0xFF6
 15689                           tablat	equ	0xFF5
 15690                           prodh	equ	0xFF4
 15691                           prodl	equ	0xFF3
 15692                           intcon3	equ	0xFF0
 15693                           postinc0	equ	0xFEE
 15694                           plusw0	equ	0xFEB
 15695                           fsr0h	equ	0xFEA
 15696                           fsr0l	equ	0xFE9
 15697                           wreg	equ	0xFE8
 15698                           indf1	equ	0xFE7
 15699                           postdec1	equ	0xFE5
 15700                           plusw1	equ	0xFE3
 15701                           fsr1h	equ	0xFE2
 15702                           fsr1l	equ	0xFE1
 15703                           indf2	equ	0xFDF
 15704                           postinc2	equ	0xFDE
 15705                           postdec2	equ	0xFDD
 15706                           plusw2	equ	0xFDB
 15707                           fsr2h	equ	0xFDA
 15708                           fsr2l	equ	0xFD9
 15709                           status	equ	0xFD8
 15710                           
 15711 ;; *************** function _le_findWorstNeighborIdx *****************
 15712 ;; Defined at:
 15713 ;;		line 173 in file "../LinkEstimator.c"
 15714 ;; Parameters:    Size  Location     Type
 15715 ;;  thresholdETX    1    wreg     unsigned char 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  thresholdETX    1   37[BANK0 ] unsigned char 
 15718 ;;  i               2   46[BANK0 ] unsigned int 
 15719 ;;  worstETX        2   44[BANK0 ] unsigned int 
 15720 ;;  thisETX         2   42[BANK0 ] unsigned int 
 15721 ;;  res             2   40[BANK0 ] unsigned int 
 15722 ;;  worstNeighbo    2   38[BANK0 ] unsigned int 
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  2   33[BANK0 ] unsigned int 
 15725 ;; Registers used:
 15726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : F/0
 15729 ;;		On exit  : F/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15733 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15736 ;;Total ram usage:       15 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    7
 15739 ;; This function calls:
 15740 ;;		_NetworkGetParentAddress
 15741 ;;		_isSameAddress
 15742 ;; This function is called by:
 15743 ;;		_LE_InsertNeighbor
 15744 ;;		_LE_processReceivedMessage
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           	psect	text65
 15749  004C2A                     __ptext65:
 15750                           	opt stack 0
 15751  004C2A                     _le_findWorstNeighborIdx:
 15752                           	opt stack 19
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;incstack = 0
 15756                           ;le_findWorstNeighborIdx@thresholdETX stored from wreg
 15757  004C2A  6F85               	movwf	le_findWorstNeighborIdx@thresholdETX& (0+255),b
 15758                           
 15759                           ;LinkEstimator.c: 179: worstNeighborIdx = 0xff;
 15760  004C2C  0100               	movlb	0	; () banked
 15761  004C2E  6B87               	clrf	(le_findWorstNeighborIdx@worstNeighborIdx+1)& (0+255),b
 15762  004C30  6986               	setf	le_findWorstNeighborIdx@worstNeighborIdx& (0+255),b
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;LinkEstimator.c: 180: worstETX = 0;
 15766  004C32  6B8C               	clrf	le_findWorstNeighborIdx@worstETX& (0+255),b
 15767  004C34  6B8D               	clrf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),b
 15768                           
 15769                           ; BSR set to: 0
 15770                           ;LinkEstimator.c: 181: for (i = 0; i < 20; i++)
 15771  004C36  6B8E               	clrf	le_findWorstNeighborIdx@i& (0+255),b
 15772  004C38  6B8F               	clrf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15773  004C3A                     l16208:
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;LinkEstimator.c: 182: {
 15777                           ;LinkEstimator.c: 183: if (!(neighbor_tbl[i].flags & 0x1))
 15778  004C3A  0E0B               	movlw	11
 15779  004C3C  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15780  004C3E  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 15781  004C42  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 15782  004C46  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15783  004C48  50F3               	movf	prodl,w,c
 15784  004C4A  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15785  004C4C  0E05               	movlw	low (_neighbor_tbl+5)
 15786  004C4E  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15787  004C50  6ED9               	movwf	fsr2l,c
 15788  004C52  0E05               	movlw	high (_neighbor_tbl+5)
 15789  004C54  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15790  004C56  6EDA               	movwf	fsr2h,c
 15791  004C58  A0DF               	btfss	indf2,0,c
 15792  004C5A  D060               	goto	l16230
 15793                           
 15794                           ; BSR set to: 5
 15795                           ;LinkEstimator.c: 187: }
 15796                           ;LinkEstimator.c: 188: if (!(neighbor_tbl[i].flags & 0x2))
 15797  004C5C  0E0B               	movlw	11
 15798  004C5E  0100               	movlb	0	; () banked
 15799  004C60  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15800  004C62  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 15801  004C66  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 15802  004C6A  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15803  004C6C  50F3               	movf	prodl,w,c
 15804  004C6E  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15805  004C70  0E05               	movlw	low (_neighbor_tbl+5)
 15806  004C72  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15807  004C74  6ED9               	movwf	fsr2l,c
 15808  004C76  0E05               	movlw	high (_neighbor_tbl+5)
 15809  004C78  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15810  004C7A  6EDA               	movwf	fsr2h,c
 15811  004C7C  A2DF               	btfss	indf2,1,c
 15812  004C7E  D04E               	goto	l16230
 15813                           
 15814                           ; BSR set to: 5
 15815                           ;LinkEstimator.c: 192: }
 15816                           ;LinkEstimator.c: 193: if (neighbor_tbl[i].flags & 0x8)
 15817  004C80  0E0B               	movlw	11
 15818  004C82  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15819  004C84  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 15820  004C88  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 15821  004C8C  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15822  004C8E  50F3               	movf	prodl,w,c
 15823  004C90  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15824  004C92  0E05               	movlw	low (_neighbor_tbl+5)
 15825  004C94  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15826  004C96  6ED9               	movwf	fsr2l,c
 15827  004C98  0E05               	movlw	high (_neighbor_tbl+5)
 15828  004C9A  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15829  004C9C  6EDA               	movwf	fsr2h,c
 15830  004C9E  B6DF               	btfsc	indf2,3,c
 15831  004CA0  D03D               	goto	l16230
 15832                           
 15833                           ; BSR set to: 5
 15834                           ;LinkEstimator.c: 197: }
 15835                           ;LinkEstimator.c: 198: if(isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress(
      +                          )) )
 15836  004CA2  0E0B               	movlw	11
 15837  004CA4  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15838  004CA6  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 15839  004CAA  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 15840  004CAE  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15841  004CB0  50F3               	movf	prodl,w,c
 15842  004CB2  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15843  004CB4  0E00               	movlw	low _neighbor_tbl
 15844  004CB6  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15845  004CB8  6ED9               	movwf	fsr2l,c
 15846  004CBA  0E05               	movlw	high _neighbor_tbl
 15847  004CBC  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15848  004CBE  6EDA               	movwf	fsr2h,c
 15849  004CC0  CFDE F07D          	movff	postinc2,isSameAddress@a1
 15850  004CC4  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 15851  004CC8  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 15852  004CCC  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 15853  004CD0  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 15854  004CD4  ECBD  F039         	call	_isSameAddress	;wreg free
 15855  004CD8  0900               	iorlw	0
 15856  004CDA  E120               	bnz	l16230
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;LinkEstimator.c: 201: }
 15860                           ;LinkEstimator.c: 203: thisETX = neighbor_tbl[i].etx;
 15861  004CDC  0E0B               	movlw	11
 15862  004CDE  038E               	mulwf	le_findWorstNeighborIdx@i& (0+255),b
 15863  004CE0  CFF3 F083          	movff	prodl,??_le_findWorstNeighborIdx
 15864  004CE4  CFF4 F084          	movff	prodh,??_le_findWorstNeighborIdx+1
 15865  004CE8  038F               	mulwf	(le_findWorstNeighborIdx@i+1)& (0+255),b
 15866  004CEA  50F3               	movf	prodl,w,c
 15867  004CEC  2784               	addwf	(??_le_findWorstNeighborIdx+1)& (0+255),f,b
 15868  004CEE  0E07               	movlw	low (_neighbor_tbl+7)
 15869  004CF0  2583               	addwf	??_le_findWorstNeighborIdx& (0+255),w,b
 15870  004CF2  6ED9               	movwf	fsr2l,c
 15871  004CF4  0E05               	movlw	high (_neighbor_tbl+7)
 15872  004CF6  2184               	addwfc	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15873  004CF8  6EDA               	movwf	fsr2h,c
 15874  004CFA  CFDE F08A          	movff	postinc2,le_findWorstNeighborIdx@thisETX
 15875  004CFE  CFDD F08B          	movff	postdec2,le_findWorstNeighborIdx@thisETX+1
 15876                           
 15877                           ; BSR set to: 0
 15878                           ;LinkEstimator.c: 204: if (thisETX >= worstETX)
 15879  004D02  518C               	movf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 15880  004D04  5D8A               	subwf	le_findWorstNeighborIdx@thisETX& (0+255),w,b
 15881  004D06  518D               	movf	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 15882  004D08  598B               	subwfb	(le_findWorstNeighborIdx@thisETX+1)& (0+255),w,b
 15883  004D0A  E308               	bnc	l16230
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;LinkEstimator.c: 205: {
 15887                           ;LinkEstimator.c: 206: worstNeighborIdx = i;
 15888  004D0C  C08E  F086         	movff	le_findWorstNeighborIdx@i,le_findWorstNeighborIdx@worstNeighborIdx
 15889  004D10  C08F  F087         	movff	le_findWorstNeighborIdx@i+1,le_findWorstNeighborIdx@worstNeighborIdx+1
 15890                           
 15891                           ;LinkEstimator.c: 207: worstETX = thisETX;
 15892  004D14  C08A  F08C         	movff	le_findWorstNeighborIdx@thisETX,le_findWorstNeighborIdx@worstETX
 15893  004D18  C08B  F08D         	movff	le_findWorstNeighborIdx@thisETX+1,le_findWorstNeighborIdx@worstETX+1
 15894  004D1C                     l16230:
 15895  004D1C  0100               	movlb	0	; () banked
 15896  004D1E  4B8E               	infsnz	le_findWorstNeighborIdx@i& (0+255),f,b
 15897  004D20  2B8F               	incf	(le_findWorstNeighborIdx@i+1)& (0+255),f,b
 15898                           
 15899                           ; BSR set to: 0
 15900  004D22  518F               	movf	(le_findWorstNeighborIdx@i+1)& (0+255),w,b
 15901  004D24  E103               	bnz	u19440
 15902  004D26  0E14               	movlw	20
 15903  004D28  5D8E               	subwf	le_findWorstNeighborIdx@i& (0+255),w,b
 15904  004D2A  E387               	bnc	l16208
 15905  004D2C                     u19440:
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;LinkEstimator.c: 208: }
 15909                           ;LinkEstimator.c: 209: }
 15910                           ;LinkEstimator.c: 211: if (worstETX >= thresholdETX)
 15911  004D2C  5185               	movf	le_findWorstNeighborIdx@thresholdETX& (0+255),w,b
 15912  004D2E  6F83               	movwf	??_le_findWorstNeighborIdx& (0+255),b
 15913  004D30  6B84               	clrf	(??_le_findWorstNeighborIdx+1)& (0+255),b
 15914  004D32  5183               	movf	??_le_findWorstNeighborIdx& (0+255),w,b
 15915  004D34  5D8C               	subwf	le_findWorstNeighborIdx@worstETX& (0+255),w,b
 15916  004D36  5184               	movf	(??_le_findWorstNeighborIdx+1)& (0+255),w,b
 15917  004D38  598D               	subwfb	(le_findWorstNeighborIdx@worstETX+1)& (0+255),w,b
 15918  004D3A  E305               	bnc	l16238
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;LinkEstimator.c: 212: {
 15922                           ;LinkEstimator.c: 213: res=worstNeighborIdx;
 15923  004D3C  C086  F088         	movff	le_findWorstNeighborIdx@worstNeighborIdx,le_findWorstNeighborIdx@res
 15924  004D40  C087  F089         	movff	le_findWorstNeighborIdx@worstNeighborIdx+1,le_findWorstNeighborIdx@res+1
 15925                           
 15926                           ;LinkEstimator.c: 214: } else
 15927  004D44  D003               	goto	l16240
 15928  004D46                     l16238:
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;LinkEstimator.c: 215: {
 15932                           ;LinkEstimator.c: 216: res=0xff;
 15933  004D46  0E00               	movlw	0
 15934  004D48  6B89               	clrf	(le_findWorstNeighborIdx@res+1)& (0+255),b
 15935  004D4A  6988               	setf	le_findWorstNeighborIdx@res& (0+255),b
 15936  004D4C                     l16240:
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;LinkEstimator.c: 217: }
 15940                           ;LinkEstimator.c: 219: return(res);
 15941  004D4C  C088  F081         	movff	le_findWorstNeighborIdx@res,?_le_findWorstNeighborIdx
 15942  004D50  C089  F082         	movff	le_findWorstNeighborIdx@res+1,?_le_findWorstNeighborIdx+1
 15943                           
 15944                           ; BSR set to: 0
 15945  004D54  0012               	return		;funcret
 15946  004D56                     __end_of_le_findWorstNeighborIdx:
 15947                           	opt stack 0
 15948                           tblptru	equ	0xFF8
 15949                           tblptrh	equ	0xFF7
 15950                           tblptrl	equ	0xFF6
 15951                           tablat	equ	0xFF5
 15952                           prodh	equ	0xFF4
 15953                           prodl	equ	0xFF3
 15954                           intcon3	equ	0xFF0
 15955                           postinc0	equ	0xFEE
 15956                           plusw0	equ	0xFEB
 15957                           fsr0h	equ	0xFEA
 15958                           fsr0l	equ	0xFE9
 15959                           wreg	equ	0xFE8
 15960                           indf1	equ	0xFE7
 15961                           postdec1	equ	0xFE5
 15962                           plusw1	equ	0xFE3
 15963                           fsr1h	equ	0xFE2
 15964                           fsr1l	equ	0xFE1
 15965                           indf2	equ	0xFDF
 15966                           postinc2	equ	0xFDE
 15967                           postdec2	equ	0xFDD
 15968                           plusw2	equ	0xFDB
 15969                           fsr2h	equ	0xFDA
 15970                           fsr2l	equ	0xFD9
 15971                           status	equ	0xFD8
 15972                           
 15973 ;; *************** function _le_findRandomNeighborIdx *****************
 15974 ;; Defined at:
 15975 ;;		line 373 in file "../LinkEstimator.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;		None
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;  i               2   44[BANK0 ] unsigned int 
 15980 ;;  res             2   41[BANK0 ] unsigned int 
 15981 ;;  num_eligible    1   43[BANK0 ] unsigned char 
 15982 ;;  cnt             1   40[BANK0 ] unsigned char 
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  2   36[BANK0 ] unsigned int 
 15985 ;; Registers used:
 15986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15987 ;; Tracked objects:
 15988 ;;		On entry : F/0
 15989 ;;		On exit  : F/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15995 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;Total ram usage:       10 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; Hardware stack levels required when called:    7
 15999 ;; This function calls:
 16000 ;;		_NetworkGetParentAddress
 16001 ;;		___lwmod
 16002 ;;		_isSameAddress
 16003 ;;		_krnd
 16004 ;; This function is called by:
 16005 ;;		_LE_processReceivedMessage
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           	psect	text66
 16010  00319E                     __ptext66:
 16011                           	opt stack 0
 16012  00319E                     _le_findRandomNeighborIdx:
 16013                           	opt stack 20
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;LinkEstimator.c: 375: uint16_t i;
 16017                           ;LinkEstimator.c: 376: uint16_t res=0xff;
 16018                           
 16019                           ; BSR set to: 0
 16020                           ;incstack = 0
 16021  00319E  6B8A               	clrf	(le_findRandomNeighborIdx@res+1)& (0+255),b
 16022  0031A0  6989               	setf	le_findRandomNeighborIdx@res& (0+255),b
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;LinkEstimator.c: 377: uint8_t cnt;
 16026                           ;LinkEstimator.c: 378: uint8_t num_eligible_eviction;
 16027                           ;LinkEstimator.c: 380: num_eligible_eviction = 0;
 16028  0031A2  6B8B               	clrf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),b
 16029                           
 16030                           ; BSR set to: 0
 16031                           ;LinkEstimator.c: 381: for (i = 0; i < 20; i++)
 16032  0031A4  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 16033  0031A6  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16034  0031A8                     l16684:
 16035                           
 16036                           ; BSR set to: 0
 16037                           ;LinkEstimator.c: 382: {
 16038                           ;LinkEstimator.c: 383: if (neighbor_tbl[i].flags & 0x1)
 16039  0031A8  0E0B               	movlw	11
 16040  0031AA  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16041  0031AC  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16042  0031B0  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16043  0031B4  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16044  0031B6  50F3               	movf	prodl,w,c
 16045  0031B8  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16046  0031BA  0E05               	movlw	low (_neighbor_tbl+5)
 16047  0031BC  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16048  0031BE  6ED9               	movwf	fsr2l,c
 16049  0031C0  0E05               	movlw	high (_neighbor_tbl+5)
 16050  0031C2  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16051  0031C4  6EDA               	movwf	fsr2h,c
 16052  0031C6  A0DF               	btfss	indf2,0,c
 16053  0031C8  D041               	goto	l1531
 16054                           
 16055                           ; BSR set to: 5
 16056                           ;LinkEstimator.c: 384: {
 16057                           ;LinkEstimator.c: 385: if((isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddress
      +                          ()) ) )
 16058  0031CA  0E0B               	movlw	11
 16059  0031CC  0100               	movlb	0	; () banked
 16060  0031CE  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16061  0031D0  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16062  0031D4  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16063  0031D8  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16064  0031DA  50F3               	movf	prodl,w,c
 16065  0031DC  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16066  0031DE  0E00               	movlw	low _neighbor_tbl
 16067  0031E0  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16068  0031E2  6ED9               	movwf	fsr2l,c
 16069  0031E4  0E05               	movlw	high _neighbor_tbl
 16070  0031E6  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16071  0031E8  6EDA               	movwf	fsr2h,c
 16072  0031EA  CFDE F07D          	movff	postinc2,isSameAddress@a1
 16073  0031EE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 16074  0031F2  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 16075  0031F6  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 16076  0031FA  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 16077  0031FE  ECBD  F039         	call	_isSameAddress	;wreg free
 16078  003202  0900               	iorlw	0
 16079  003204  E123               	bnz	l1531
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;LinkEstimator.c: 389: neighbor_tbl[i].flags & 0x2)
 16083  003206  0E0B               	movlw	11
 16084  003208  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16085  00320A  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16086  00320E  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16087  003212  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16088  003214  50F3               	movf	prodl,w,c
 16089  003216  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16090  003218  0E05               	movlw	low (_neighbor_tbl+5)
 16091  00321A  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16092  00321C  6ED9               	movwf	fsr2l,c
 16093  00321E  0E05               	movlw	high (_neighbor_tbl+5)
 16094  003220  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16095  003222  6EDA               	movwf	fsr2h,c
 16096  003224  B6DF               	btfsc	indf2,3,c
 16097  003226  D012               	goto	l1531
 16098                           
 16099                           ; BSR set to: 5
 16100  003228  0E0B               	movlw	11
 16101  00322A  0100               	movlb	0	; () banked
 16102  00322C  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16103  00322E  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16104  003232  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16105  003236  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16106  003238  50F3               	movf	prodl,w,c
 16107  00323A  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16108  00323C  0E05               	movlw	low (_neighbor_tbl+5)
 16109  00323E  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16110  003240  6ED9               	movwf	fsr2l,c
 16111  003242  0E05               	movlw	high (_neighbor_tbl+5)
 16112  003244  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16113  003246  6EDA               	movwf	fsr2h,c
 16114  003248  A2DF               	btfss	indf2,1,c
 16115                           
 16116                           ; BSR set to: 5
 16117                           ;LinkEstimator.c: 392: {
 16118                           ;LinkEstimator.c: 393: num_eligible_eviction++;
 16119  00324A  2B8B               	incf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),f,b
 16120  00324C                     l1531:
 16121  00324C  0100               	movlb	0	; () banked
 16122  00324E  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 16123  003250  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 16124                           
 16125                           ; BSR set to: 0
 16126  003252  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 16127  003254  E103               	bnz	u20190
 16128  003256  0E14               	movlw	20
 16129  003258  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 16130  00325A  E3A6               	bnc	l16684
 16131  00325C                     u20190:
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;LinkEstimator.c: 394: }
 16135                           ;LinkEstimator.c: 395: }
 16136                           ;LinkEstimator.c: 396: }
 16137                           ;LinkEstimator.c: 398: if (num_eligible_eviction > 0)
 16138  00325C  518B               	movf	le_findRandomNeighborIdx@num_eligible_eviction& (0+255),w,b
 16139  00325E  E070               	bz	l1538
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;LinkEstimator.c: 399: {
 16143                           ;LinkEstimator.c: 400: cnt = ((uint16_t)krnd()) % num_eligible_eviction;
 16144  003260  EC45  F01E         	call	_krnd	;wreg free
 16145  003264  C073  F07F         	movff	?_krnd,___lwmod@dividend
 16146  003268  C074  F080         	movff	?_krnd+1,___lwmod@dividend+1
 16147  00326C  C08B  F081         	movff	le_findRandomNeighborIdx@num_eligible_eviction,___lwmod@divisor
 16148  003270  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 16149  003272  EC3C  F037         	call	___lwmod	;wreg free
 16150  003276  517F               	movf	?___lwmod& (0+255),w,b
 16151  003278  6F88               	movwf	le_findRandomNeighborIdx@cnt& (0+255),b
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;LinkEstimator.c: 402: for (i = 0; i < 20; i++)
 16155  00327A  6B8C               	clrf	le_findRandomNeighborIdx@i& (0+255),b
 16156  00327C  6B8D               	clrf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16157  00327E                     l16708:
 16158                           
 16159                           ; BSR set to: 0
 16160                           ;LinkEstimator.c: 403: {
 16161                           ;LinkEstimator.c: 404: if ((neighbor_tbl[i].flags & 0x1)>0)
 16162  00327E  0E0B               	movlw	11
 16163  003280  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16164  003282  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16165  003286  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16166  00328A  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16167  00328C  50F3               	movf	prodl,w,c
 16168  00328E  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16169  003290  0E05               	movlw	low (_neighbor_tbl+5)
 16170  003292  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16171  003294  6ED9               	movwf	fsr2l,c
 16172  003296  0E05               	movlw	high (_neighbor_tbl+5)
 16173  003298  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16174  00329A  6EDA               	movwf	fsr2h,c
 16175  00329C  A0DF               	btfss	indf2,0,c
 16176  00329E  D048               	goto	l16720
 16177                           
 16178                           ; BSR set to: 5
 16179                           ;LinkEstimator.c: 405: {
 16180                           ;LinkEstimator.c: 406: if ( ((neighbor_tbl[i].flags & 0x8)>0) &&
 16181                           ;LinkEstimator.c: 407: ((neighbor_tbl[i].flags & 0x2)>0) )
 16182  0032A0  0E0B               	movlw	11
 16183  0032A2  0100               	movlb	0	; () banked
 16184  0032A4  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16185  0032A6  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16186  0032AA  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16187  0032AE  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16188  0032B0  50F3               	movf	prodl,w,c
 16189  0032B2  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16190  0032B4  0E05               	movlw	low (_neighbor_tbl+5)
 16191  0032B6  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16192  0032B8  6ED9               	movwf	fsr2l,c
 16193  0032BA  0E05               	movlw	high (_neighbor_tbl+5)
 16194  0032BC  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16195  0032BE  6EDA               	movwf	fsr2h,c
 16196  0032C0  A6DF               	btfss	indf2,3,c
 16197  0032C2  D036               	goto	l16720
 16198                           
 16199                           ; BSR set to: 5
 16200  0032C4  0E0B               	movlw	11
 16201  0032C6  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16202  0032C8  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16203  0032CC  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16204  0032D0  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16205  0032D2  50F3               	movf	prodl,w,c
 16206  0032D4  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16207  0032D6  0E05               	movlw	low (_neighbor_tbl+5)
 16208  0032D8  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16209  0032DA  6ED9               	movwf	fsr2l,c
 16210  0032DC  0E05               	movlw	high (_neighbor_tbl+5)
 16211  0032DE  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16212  0032E0  6EDA               	movwf	fsr2h,c
 16213  0032E2  A2DF               	btfss	indf2,1,c
 16214  0032E4  D025               	goto	l16720
 16215                           
 16216                           ; BSR set to: 5
 16217                           ;LinkEstimator.c: 408: {
 16218                           ;LinkEstimator.c: 409: if( (isSameAddress(neighbor_tbl[i].ll_addr,NetworkGetParentAddres
      +                          s()) )==0)
 16219  0032E6  0E0B               	movlw	11
 16220  0032E8  038C               	mulwf	le_findRandomNeighborIdx@i& (0+255),b
 16221  0032EA  CFF3 F086          	movff	prodl,??_le_findRandomNeighborIdx
 16222  0032EE  CFF4 F087          	movff	prodh,??_le_findRandomNeighborIdx+1
 16223  0032F2  038D               	mulwf	(le_findRandomNeighborIdx@i+1)& (0+255),b
 16224  0032F4  50F3               	movf	prodl,w,c
 16225  0032F6  2787               	addwf	(??_le_findRandomNeighborIdx+1)& (0+255),f,b
 16226  0032F8  0E00               	movlw	low _neighbor_tbl
 16227  0032FA  2586               	addwf	??_le_findRandomNeighborIdx& (0+255),w,b
 16228  0032FC  6ED9               	movwf	fsr2l,c
 16229  0032FE  0E05               	movlw	high _neighbor_tbl
 16230  003300  2187               	addwfc	(??_le_findRandomNeighborIdx+1)& (0+255),w,b
 16231  003302  6EDA               	movwf	fsr2h,c
 16232  003304  CFDE F07D          	movff	postinc2,isSameAddress@a1
 16233  003308  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 16234  00330C  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 16235  003310  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 16236  003314  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 16237  003318  ECBD  F039         	call	_isSameAddress	;wreg free
 16238  00331C  0900               	iorlw	0
 16239  00331E  E108               	bnz	l16720
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;LinkEstimator.c: 410: {
 16243                           ;LinkEstimator.c: 411: if (cnt-- == 0)
 16244  003320  0788               	decf	le_findRandomNeighborIdx@cnt& (0+255),f,b
 16245  003322  2988               	incf	le_findRandomNeighborIdx@cnt& (0+255),w,b
 16246  003324  E105               	bnz	l16720
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;LinkEstimator.c: 412: {
 16250                           ;LinkEstimator.c: 413: res=i;
 16251  003326  C08C  F089         	movff	le_findRandomNeighborIdx@i,le_findRandomNeighborIdx@res
 16252  00332A  C08D  F08A         	movff	le_findRandomNeighborIdx@i+1,le_findRandomNeighborIdx@res+1
 16253                           
 16254                           ;LinkEstimator.c: 414: break;
 16255  00332E  D008               	goto	l1538
 16256  003330                     l16720:
 16257  003330  0100               	movlb	0	; () banked
 16258  003332  4B8C               	infsnz	le_findRandomNeighborIdx@i& (0+255),f,b
 16259  003334  2B8D               	incf	(le_findRandomNeighborIdx@i+1)& (0+255),f,b
 16260                           
 16261                           ; BSR set to: 0
 16262  003336  518D               	movf	(le_findRandomNeighborIdx@i+1)& (0+255),w,b
 16263  003338  E103               	bnz	u20260
 16264  00333A  0E14               	movlw	20
 16265  00333C  5D8C               	subwf	le_findRandomNeighborIdx@i& (0+255),w,b
 16266  00333E  E39F               	bnc	l16708
 16267  003340                     u20260:
 16268  003340                     l1538:
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;LinkEstimator.c: 415: }
 16272                           ;LinkEstimator.c: 416: }
 16273                           ;LinkEstimator.c: 417: }
 16274                           ;LinkEstimator.c: 418: }
 16275                           ;LinkEstimator.c: 419: }
 16276                           ;LinkEstimator.c: 420: }
 16277                           ;LinkEstimator.c: 421: return res;
 16278  003340  C089  F084         	movff	le_findRandomNeighborIdx@res,?_le_findRandomNeighborIdx
 16279  003344  C08A  F085         	movff	le_findRandomNeighborIdx@res+1,?_le_findRandomNeighborIdx+1
 16280                           
 16281                           ; BSR set to: 0
 16282  003348  0012               	return		;funcret
 16283  00334A                     __end_of_le_findRandomNeighborIdx:
 16284                           	opt stack 0
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           prodh	equ	0xFF4
 16290                           prodl	equ	0xFF3
 16291                           intcon3	equ	0xFF0
 16292                           postinc0	equ	0xFEE
 16293                           plusw0	equ	0xFEB
 16294                           fsr0h	equ	0xFEA
 16295                           fsr0l	equ	0xFE9
 16296                           wreg	equ	0xFE8
 16297                           indf1	equ	0xFE7
 16298                           postdec1	equ	0xFE5
 16299                           plusw1	equ	0xFE3
 16300                           fsr1h	equ	0xFE2
 16301                           fsr1l	equ	0xFE1
 16302                           indf2	equ	0xFDF
 16303                           postinc2	equ	0xFDE
 16304                           postdec2	equ	0xFDD
 16305                           plusw2	equ	0xFDB
 16306                           fsr2h	equ	0xFDA
 16307                           fsr2l	equ	0xFD9
 16308                           status	equ	0xFD8
 16309                           
 16310 ;; *************** function _le_findEmptyNeighborIdx *****************
 16311 ;; Defined at:
 16312 ;;		line 222 in file "../LinkEstimator.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;		None
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;  i               2   25[BANK0 ] unsigned int 
 16317 ;;  res             2   23[BANK0 ] unsigned int 
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  2   19[BANK0 ] unsigned int 
 16320 ;; Registers used:
 16321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16322 ;; Tracked objects:
 16323 ;;		On entry : F/0
 16324 ;;		On exit  : A/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16328 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16329 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16330 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16331 ;;Total ram usage:        8 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    5
 16334 ;; This function calls:
 16335 ;;		Nothing
 16336 ;; This function is called by:
 16337 ;;		_LE_InsertNeighbor
 16338 ;;		_LE_processReceivedMessage
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           	psect	text67
 16343  006BAA                     __ptext67:
 16344                           	opt stack 0
 16345  006BAA                     _le_findEmptyNeighborIdx:
 16346                           	opt stack 21
 16347                           
 16348                           ; BSR set to: 0
 16349                           ;LinkEstimator.c: 224: uint16_t i;
 16350                           ;LinkEstimator.c: 225: uint16_t res=0xff;
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;incstack = 0
 16354  006BAA  6B78               	clrf	(le_findEmptyNeighborIdx@res+1)& (0+255),b
 16355  006BAC  6977               	setf	le_findEmptyNeighborIdx@res& (0+255),b
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;LinkEstimator.c: 226: for (i = 0; i < 20; i++)
 16359  006BAE  6B79               	clrf	le_findEmptyNeighborIdx@i& (0+255),b
 16360  006BB0  6B7A               	clrf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 16361  006BB2                     l16252:
 16362                           
 16363                           ; BSR set to: 0
 16364                           ;LinkEstimator.c: 227: {
 16365                           ;LinkEstimator.c: 228: if (neighbor_tbl[i].flags & 0x1)
 16366  006BB2  0E0B               	movlw	11
 16367  006BB4  0379               	mulwf	le_findEmptyNeighborIdx@i& (0+255),b
 16368  006BB6  CFF3 F075          	movff	prodl,??_le_findEmptyNeighborIdx
 16369  006BBA  CFF4 F076          	movff	prodh,??_le_findEmptyNeighborIdx+1
 16370  006BBE  037A               	mulwf	(le_findEmptyNeighborIdx@i+1)& (0+255),b
 16371  006BC0  50F3               	movf	prodl,w,c
 16372  006BC2  2776               	addwf	(??_le_findEmptyNeighborIdx+1)& (0+255),f,b
 16373  006BC4  0E05               	movlw	low (_neighbor_tbl+5)
 16374  006BC6  2575               	addwf	??_le_findEmptyNeighborIdx& (0+255),w,b
 16375  006BC8  6ED9               	movwf	fsr2l,c
 16376  006BCA  0E05               	movlw	high (_neighbor_tbl+5)
 16377  006BCC  2176               	addwfc	(??_le_findEmptyNeighborIdx+1)& (0+255),w,b
 16378  006BCE  6EDA               	movwf	fsr2h,c
 16379  006BD0  0105               	movlb	5	; () banked
 16380  006BD2  B0DF               	btfsc	indf2,0,c
 16381  006BD4  D005               	goto	l16256
 16382                           
 16383                           ; BSR set to: 5
 16384                           ;LinkEstimator.c: 231: else
 16385                           ;LinkEstimator.c: 232: {
 16386                           ;LinkEstimator.c: 233: res=i;
 16387  006BD6  C079  F077         	movff	le_findEmptyNeighborIdx@i,le_findEmptyNeighborIdx@res
 16388  006BDA  C07A  F078         	movff	le_findEmptyNeighborIdx@i+1,le_findEmptyNeighborIdx@res+1
 16389                           
 16390                           ;LinkEstimator.c: 234: break;
 16391  006BDE  D008               	goto	l1488
 16392  006BE0                     l16256:
 16393                           
 16394                           ; BSR set to: 5
 16395  006BE0  0100               	movlb	0	; () banked
 16396  006BE2  4B79               	infsnz	le_findEmptyNeighborIdx@i& (0+255),f,b
 16397  006BE4  2B7A               	incf	(le_findEmptyNeighborIdx@i+1)& (0+255),f,b
 16398                           
 16399                           ; BSR set to: 0
 16400  006BE6  517A               	movf	(le_findEmptyNeighborIdx@i+1)& (0+255),w,b
 16401  006BE8  E103               	bnz	u19470
 16402  006BEA  0E14               	movlw	20
 16403  006BEC  5D79               	subwf	le_findEmptyNeighborIdx@i& (0+255),w,b
 16404  006BEE  E3E1               	bnc	l16252
 16405  006BF0                     u19470:
 16406  006BF0                     l1488:
 16407                           
 16408                           ;LinkEstimator.c: 235: }
 16409                           ;LinkEstimator.c: 236: }
 16410                           ;LinkEstimator.c: 237: return res;
 16411  006BF0  C077  F073         	movff	le_findEmptyNeighborIdx@res,?_le_findEmptyNeighborIdx
 16412  006BF4  C078  F074         	movff	le_findEmptyNeighborIdx@res+1,?_le_findEmptyNeighborIdx+1
 16413  006BF8  0012               	return		;funcret
 16414  006BFA                     __end_of_le_findEmptyNeighborIdx:
 16415                           	opt stack 0
 16416                           tblptru	equ	0xFF8
 16417                           tblptrh	equ	0xFF7
 16418                           tblptrl	equ	0xFF6
 16419                           tablat	equ	0xFF5
 16420                           prodh	equ	0xFF4
 16421                           prodl	equ	0xFF3
 16422                           intcon3	equ	0xFF0
 16423                           postinc0	equ	0xFEE
 16424                           plusw0	equ	0xFEB
 16425                           fsr0h	equ	0xFEA
 16426                           fsr0l	equ	0xFE9
 16427                           wreg	equ	0xFE8
 16428                           indf1	equ	0xFE7
 16429                           postdec1	equ	0xFE5
 16430                           plusw1	equ	0xFE3
 16431                           fsr1h	equ	0xFE2
 16432                           fsr1l	equ	0xFE1
 16433                           indf2	equ	0xFDF
 16434                           postinc2	equ	0xFDE
 16435                           postdec2	equ	0xFDD
 16436                           plusw2	equ	0xFDB
 16437                           fsr2h	equ	0xFDA
 16438                           fsr2l	equ	0xFD9
 16439                           status	equ	0xFD8
 16440                           
 16441 ;; *************** function _RouteManagerShouldInsert *****************
 16442 ;; Defined at:
 16443 ;;		line 371 in file "../RouteManager.c"
 16444 ;; Parameters:    Size  Location     Type
 16445 ;;  hdr             2   39[BANK0 ] PTR struct net_routing_h
 16446 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;  rcvBeacon       2   52[BANK0 ] PTR struct net_routing_h
 16449 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 16450 ;;  i               2   49[BANK0 ] int 
 16451 ;;  entry           2   47[BANK0 ] PTR struct routing_table
 16452 ;;		 -> routingTable(90), 
 16453 ;;  neighEtx        2   45[BANK0 ] unsigned int 
 16454 ;;  pathEtx         2   43[BANK0 ] unsigned int 
 16455 ;;  found           1   51[BANK0 ] unsigned char 
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      unsigned char 
 16458 ;; Registers used:
 16459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16460 ;; Tracked objects:
 16461 ;;		On entry : F/0
 16462 ;;		On exit  : F/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16468 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16469 ;;Total ram usage:       15 bytes
 16470 ;; Hardware stack levels used:    1
 16471 ;; Hardware stack levels required when called:    8
 16472 ;; This function calls:
 16473 ;;		_NetworkGetParentAddress
 16474 ;;		_isInvalidAddress
 16475 ;;		_isSameAddress
 16476 ;; This function is called by:
 16477 ;;		_LE_processReceivedMessage
 16478 ;; This function uses a non-reentrant model
 16479 ;;
 16480                           
 16481                           	psect	text68
 16482  00552E                     __ptext68:
 16483                           	opt stack 0
 16484  00552E                     _RouteManagerShouldInsert:
 16485                           	opt stack 19
 16486                           
 16487                           ; BSR set to: 0
 16488                           ;RouteManager.c: 373: bool found = 0;
 16489                           
 16490                           ;incstack = 0
 16491  00552E  6B93               	clrf	RouteManagerShouldInsert@found& (0+255),b
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;RouteManager.c: 374: uint16_t pathEtx;
 16495                           ;RouteManager.c: 375: uint16_t neighEtx;
 16496                           ;RouteManager.c: 376: int i;
 16497                           ;RouteManager.c: 377: routing_table_entry_t* entry;
 16498                           ;RouteManager.c: 378: net_routing_header_t* rcvBeacon=hdr;
 16499  005530  C087  F094         	movff	RouteManagerShouldInsert@hdr,RouteManagerShouldInsert@rcvBeacon
 16500  005534  C088  F095         	movff	RouteManagerShouldInsert@hdr+1,RouteManagerShouldInsert@rcvBeacon+1
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;RouteManager.c: 382: if (isInvalidAddress(rcvBeacon->parent)==0)
 16504  005538  EE20 F004          	lfsr	2,4
 16505  00553C  5194               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16506  00553E  26D9               	addwf	fsr2l,f,c
 16507  005540  5195               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16508  005542  22DA               	addwfc	fsr2h,f,c
 16509  005544  CFDE F085          	movff	postinc2,isInvalidAddress@address
 16510  005548  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
 16511  00554C  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 16512  005550  0900               	iorlw	0
 16513  005552  E156               	bnz	l16602
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;RouteManager.c: 383: {
 16517                           ;RouteManager.c: 385: if (rcvBeacon->etx == 0)
 16518  005554  EE20 F006          	lfsr	2,6
 16519  005558  5194               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16520  00555A  26D9               	addwf	fsr2l,f,c
 16521  00555C  5195               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16522  00555E  22DA               	addwfc	fsr2h,f,c
 16523  005560  50DE               	movf	postinc2,w,c
 16524  005562  10DE               	iorwf	postinc2,w,c
 16525  005564  E103               	bnz	l16584
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;RouteManager.c: 386: {
 16529                           ;RouteManager.c: 387: found=1;
 16530  005566  0E01               	movlw	1
 16531  005568  6F93               	movwf	RouteManagerShouldInsert@found& (0+255),b
 16532                           
 16533                           ;RouteManager.c: 388: }else
 16534  00556A  D04A               	goto	l16602
 16535  00556C                     l16584:
 16536                           
 16537                           ; BSR set to: 0
 16538                           ;RouteManager.c: 389: {
 16539                           ;RouteManager.c: 390: pathEtx = rcvBeacon->etx;
 16540  00556C  EE20 F006          	lfsr	2,6
 16541  005570  5194               	movf	RouteManagerShouldInsert@rcvBeacon& (0+255),w,b
 16542  005572  26D9               	addwf	fsr2l,f,c
 16543  005574  5195               	movf	(RouteManagerShouldInsert@rcvBeacon+1)& (0+255),w,b
 16544  005576  22DA               	addwfc	fsr2h,f,c
 16545  005578  CFDE F08B          	movff	postinc2,RouteManagerShouldInsert@pathEtx
 16546  00557C  CFDD F08C          	movff	postdec2,RouteManagerShouldInsert@pathEtx+1
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;RouteManager.c: 393: for (i = 0; i < routingTableActive && !found; i++)
 16550  005580  6B91               	clrf	RouteManagerShouldInsert@i& (0+255),b
 16551  005582  6B92               	clrf	(RouteManagerShouldInsert@i+1)& (0+255),b
 16552  005584  D035               	goto	l16598
 16553  005586                     l16588:
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;RouteManager.c: 394: {
 16557                           ;RouteManager.c: 395: entry = &routingTable[i];
 16558  005586  0E09               	movlw	9
 16559  005588  0391               	mulwf	RouteManagerShouldInsert@i& (0+255),b
 16560  00558A  CFF3 F089          	movff	prodl,??_RouteManagerShouldInsert
 16561  00558E  CFF4 F08A          	movff	prodh,??_RouteManagerShouldInsert+1
 16562  005592  0392               	mulwf	(RouteManagerShouldInsert@i+1)& (0+255),b
 16563  005594  50F3               	movf	prodl,w,c
 16564  005596  278A               	addwf	(??_RouteManagerShouldInsert+1)& (0+255),f,b
 16565  005598  0E78               	movlw	low _routingTable
 16566  00559A  2589               	addwf	??_RouteManagerShouldInsert& (0+255),w,b
 16567  00559C  6F8F               	movwf	RouteManagerShouldInsert@entry& (0+255),b
 16568  00559E  0E04               	movlw	high _routingTable
 16569  0055A0  218A               	addwfc	(??_RouteManagerShouldInsert+1)& (0+255),w,b
 16570  0055A2  6F90               	movwf	(RouteManagerShouldInsert@entry+1)& (0+255),b
 16571                           
 16572                           ; BSR set to: 0
 16573                           ;RouteManager.c: 397: if (isSameAddress(entry->neighbor, NetworkGetParentAddress())==0)
 16574  0055A4  C08F  FFD9         	movff	RouteManagerShouldInsert@entry,fsr2l
 16575  0055A8  C090  FFDA         	movff	RouteManagerShouldInsert@entry+1,fsr2h
 16576  0055AC  CFDE F07D          	movff	postinc2,isSameAddress@a1
 16577  0055B0  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 16578  0055B4  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 16579  0055B8  C073  F07F         	movff	?_NetworkGetParentAddress,isSameAddress@a2
 16580  0055BC  C074  F080         	movff	?_NetworkGetParentAddress+1,isSameAddress@a2+1
 16581  0055C0  ECBD  F039         	call	_isSameAddress	;wreg free
 16582  0055C4  0900               	iorlw	0
 16583  0055C6  E112               	bnz	l16596
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;RouteManager.c: 398: {
 16587                           ;RouteManager.c: 399: neighEtx = entry->info.etx;
 16588  0055C8  EE20 F004          	lfsr	2,4
 16589  0055CC  518F               	movf	RouteManagerShouldInsert@entry& (0+255),w,b
 16590  0055CE  26D9               	addwf	fsr2l,f,c
 16591  0055D0  5190               	movf	(RouteManagerShouldInsert@entry+1)& (0+255),w,b
 16592  0055D2  22DA               	addwfc	fsr2h,f,c
 16593  0055D4  CFDE F08D          	movff	postinc2,RouteManagerShouldInsert@neighEtx
 16594  0055D8  CFDD F08E          	movff	postdec2,RouteManagerShouldInsert@neighEtx+1
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;RouteManager.c: 400: found |= (pathEtx < neighEtx);
 16598  0055DC  518D               	movf	RouteManagerShouldInsert@neighEtx& (0+255),w,b
 16599  0055DE  5D8B               	subwf	RouteManagerShouldInsert@pathEtx& (0+255),w,b
 16600  0055E0  518E               	movf	(RouteManagerShouldInsert@neighEtx+1)& (0+255),w,b
 16601  0055E2  598C               	subwfb	(RouteManagerShouldInsert@pathEtx+1)& (0+255),w,b
 16602  0055E4  0E01               	movlw	1
 16603  0055E6  B0D8               	btfsc	status,0,c
 16604  0055E8  0E00               	movlw	0
 16605  0055EA  1393               	iorwf	RouteManagerShouldInsert@found& (0+255),f,b
 16606  0055EC                     l16596:
 16607                           
 16608                           ; BSR set to: 0
 16609  0055EC  4B91               	infsnz	RouteManagerShouldInsert@i& (0+255),f,b
 16610  0055EE  2B92               	incf	(RouteManagerShouldInsert@i+1)& (0+255),f,b
 16611  0055F0                     l16598:
 16612                           
 16613                           ; BSR set to: 0
 16614  0055F0  51EB               	movf	_routingTableActive& (0+255),w,b
 16615  0055F2  5D91               	subwf	RouteManagerShouldInsert@i& (0+255),w,b
 16616  0055F4  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 16617  0055F6  5992               	subwfb	(RouteManagerShouldInsert@i+1)& (0+255),w,b
 16618  0055F8  E203               	bc	l16602
 16619                           
 16620                           ; BSR set to: 0
 16621  0055FA  5193               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 16622  0055FC  E101               	bnz	l16602
 16623  0055FE  D7C3               	goto	l16588
 16624  005600                     l16602:
 16625                           
 16626                           ; BSR set to: 0
 16627                           ;RouteManager.c: 401: }
 16628                           ;RouteManager.c: 402: }
 16629                           ;RouteManager.c: 403: }
 16630                           ;RouteManager.c: 404: }
 16631                           ;RouteManager.c: 405: return found;
 16632  005600  5193               	movf	RouteManagerShouldInsert@found& (0+255),w,b
 16633                           
 16634                           ; BSR set to: 0
 16635  005602  0012               	return		;funcret
 16636  005604                     __end_of_RouteManagerShouldInsert:
 16637                           	opt stack 0
 16638                           tblptru	equ	0xFF8
 16639                           tblptrh	equ	0xFF7
 16640                           tblptrl	equ	0xFF6
 16641                           tablat	equ	0xFF5
 16642                           prodh	equ	0xFF4
 16643                           prodl	equ	0xFF3
 16644                           intcon3	equ	0xFF0
 16645                           postinc0	equ	0xFEE
 16646                           plusw0	equ	0xFEB
 16647                           fsr0h	equ	0xFEA
 16648                           fsr0l	equ	0xFE9
 16649                           wreg	equ	0xFE8
 16650                           indf1	equ	0xFE7
 16651                           postdec1	equ	0xFE5
 16652                           plusw1	equ	0xFE3
 16653                           fsr1h	equ	0xFE2
 16654                           fsr1l	equ	0xFE1
 16655                           indf2	equ	0xFDF
 16656                           postinc2	equ	0xFDE
 16657                           postdec2	equ	0xFDD
 16658                           plusw2	equ	0xFDB
 16659                           fsr2h	equ	0xFDA
 16660                           fsr2l	equ	0xFD9
 16661                           status	equ	0xFD8
 16662                           
 16663 ;; *************** function _IsMemberOfNetwork *****************
 16664 ;; Defined at:
 16665 ;;		line 380 in file "../NetworkManager.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;		None
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;		None
 16670 ;; Return value:  Size  Location     Type
 16671 ;;                  1    wreg      unsigned char 
 16672 ;; Registers used:
 16673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16674 ;; Tracked objects:
 16675 ;;		On entry : F/2
 16676 ;;		On exit  : F/0
 16677 ;;		Unchanged: 0/0
 16678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;Total ram usage:        0 bytes
 16684 ;; Hardware stack levels used:    1
 16685 ;; Hardware stack levels required when called:    9
 16686 ;; This function calls:
 16687 ;;		_NetworkHasRoute
 16688 ;; This function is called by:
 16689 ;;		_radioReceivedPacket
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text69
 16694  007622                     __ptext69:
 16695                           	opt stack 0
 16696  007622                     _IsMemberOfNetwork:
 16697                           	opt stack 19
 16698                           
 16699                           ; BSR set to: 2
 16700                           ;NetworkManager.c: 382: return(NetworkHasRoute());
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;incstack = 0
 16704  007622  EFF0  F037         	goto	_NetworkHasRoute	;wreg free
 16705  007626                     __end_of_IsMemberOfNetwork:
 16706                           	opt stack 0
 16707                           tblptru	equ	0xFF8
 16708                           tblptrh	equ	0xFF7
 16709                           tblptrl	equ	0xFF6
 16710                           tablat	equ	0xFF5
 16711                           prodh	equ	0xFF4
 16712                           prodl	equ	0xFF3
 16713                           intcon3	equ	0xFF0
 16714                           postinc0	equ	0xFEE
 16715                           plusw0	equ	0xFEB
 16716                           fsr0h	equ	0xFEA
 16717                           fsr0l	equ	0xFE9
 16718                           wreg	equ	0xFE8
 16719                           indf1	equ	0xFE7
 16720                           postdec1	equ	0xFE5
 16721                           plusw1	equ	0xFE3
 16722                           fsr1h	equ	0xFE2
 16723                           fsr1l	equ	0xFE1
 16724                           indf2	equ	0xFDF
 16725                           postinc2	equ	0xFDE
 16726                           postdec2	equ	0xFDD
 16727                           plusw2	equ	0xFDB
 16728                           fsr2h	equ	0xFDA
 16729                           fsr2l	equ	0xFD9
 16730                           status	equ	0xFD8
 16731                           
 16732 ;; *************** function _DeviceManagerGetDeviceType *****************
 16733 ;; Defined at:
 16734 ;;		line 106 in file "../DeviceManager.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;  address         2   33[BANK0 ] struct addr_t_def
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  i               2   38[BANK0 ] unsigned int 
 16739 ;;  dev             1   37[BANK0 ] enum E145
 16740 ;; Return value:  Size  Location     Type
 16741 ;;                  1    wreg      enum E144
 16742 ;; Registers used:
 16743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16744 ;; Tracked objects:
 16745 ;;		On entry : D/0
 16746 ;;		On exit  : F/0
 16747 ;;		Unchanged: 0/0
 16748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16753 ;;Total ram usage:        7 bytes
 16754 ;; Hardware stack levels used:    1
 16755 ;; Hardware stack levels required when called:    7
 16756 ;; This function calls:
 16757 ;;		_isSameAddress
 16758 ;; This function is called by:
 16759 ;;		_radioReceivedPacket
 16760 ;;		_NetworkUnicastData
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           	psect	text70
 16765  006444                     __ptext70:
 16766                           	opt stack 0
 16767  006444                     _DeviceManagerGetDeviceType:
 16768                           	opt stack 21
 16769                           
 16770                           ;DeviceManager.c: 108: uint16_t i;
 16771                           ;DeviceManager.c: 109: DeviceType_t dev=DeviceRFD;
 16772                           
 16773                           ; BSR set to: 0
 16774                           ;incstack = 0
 16775  006444  0E01               	movlw	1
 16776  006446  0100               	movlb	0	; () banked
 16777  006448  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 16778                           
 16779                           ; BSR set to: 0
 16780                           ;DeviceManager.c: 110: for(i=0;i<20;i++)
 16781  00644A  6B86               	clrf	DeviceManagerGetDeviceType@i& (0+255),b
 16782  00644C  6B87               	clrf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16783  00644E                     l17136:
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;DeviceManager.c: 111: {
 16787                           ;DeviceManager.c: 112: if(isSameAddress(address,list[i].address)==1)
 16788  00644E  C081  F07D         	movff	DeviceManagerGetDeviceType@address,isSameAddress@a1
 16789  006452  C082  F07E         	movff	DeviceManagerGetDeviceType@address+1,isSameAddress@a1+1
 16790  006456  0E0B               	movlw	11
 16791  006458  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 16792  00645A  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 16793  00645E  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 16794  006462  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16795  006464  50F3               	movf	prodl,w,c
 16796  006466  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 16797  006468  0E00               	movlw	low _list
 16798  00646A  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 16799  00646C  6ED9               	movwf	fsr2l,c
 16800  00646E  0E08               	movlw	high _list
 16801  006470  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 16802  006472  6EDA               	movwf	fsr2h,c
 16803  006474  CFDE F07F          	movff	postinc2,isSameAddress@a2
 16804  006478  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 16805  00647C  ECBD  F039         	call	_isSameAddress	;wreg free
 16806  006480  06E8               	decf	wreg,f,c
 16807  006482  E111               	bnz	l17140
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;DeviceManager.c: 113: {
 16811                           ;DeviceManager.c: 114: dev=list[i].devType;
 16812  006484  0E0B               	movlw	11
 16813  006486  0386               	mulwf	DeviceManagerGetDeviceType@i& (0+255),b
 16814  006488  CFF3 F083          	movff	prodl,??_DeviceManagerGetDeviceType
 16815  00648C  CFF4 F084          	movff	prodh,??_DeviceManagerGetDeviceType+1
 16816  006490  0387               	mulwf	(DeviceManagerGetDeviceType@i+1)& (0+255),b
 16817  006492  50F3               	movf	prodl,w,c
 16818  006494  2784               	addwf	(??_DeviceManagerGetDeviceType+1)& (0+255),f,b
 16819  006496  0E0A               	movlw	low (_list+10)
 16820  006498  2583               	addwf	??_DeviceManagerGetDeviceType& (0+255),w,b
 16821  00649A  6ED9               	movwf	fsr2l,c
 16822  00649C  0E08               	movlw	high (_list+10)
 16823  00649E  2184               	addwfc	(??_DeviceManagerGetDeviceType+1)& (0+255),w,b
 16824  0064A0  6EDA               	movwf	fsr2h,c
 16825  0064A2  50DF               	movf	indf2,w,c
 16826  0064A4  6F85               	movwf	DeviceManagerGetDeviceType@dev& (0+255),b
 16827  0064A6                     l17140:
 16828                           
 16829                           ; BSR set to: 0
 16830  0064A6  4B86               	infsnz	DeviceManagerGetDeviceType@i& (0+255),f,b
 16831  0064A8  2B87               	incf	(DeviceManagerGetDeviceType@i+1)& (0+255),f,b
 16832                           
 16833                           ; BSR set to: 0
 16834  0064AA  5187               	movf	(DeviceManagerGetDeviceType@i+1)& (0+255),w,b
 16835  0064AC  E103               	bnz	u21020
 16836  0064AE  0E14               	movlw	20
 16837  0064B0  5D86               	subwf	DeviceManagerGetDeviceType@i& (0+255),w,b
 16838  0064B2  E3CD               	bnc	l17136
 16839  0064B4                     u21020:
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;DeviceManager.c: 115: }
 16843                           ;DeviceManager.c: 116: }
 16844                           ;DeviceManager.c: 117: return(dev);
 16845  0064B4  5185               	movf	DeviceManagerGetDeviceType@dev& (0+255),w,b
 16846                           
 16847                           ; BSR set to: 0
 16848  0064B6  0012               	return		;funcret
 16849  0064B8                     __end_of_DeviceManagerGetDeviceType:
 16850                           	opt stack 0
 16851                           tblptru	equ	0xFF8
 16852                           tblptrh	equ	0xFF7
 16853                           tblptrl	equ	0xFF6
 16854                           tablat	equ	0xFF5
 16855                           prodh	equ	0xFF4
 16856                           prodl	equ	0xFF3
 16857                           intcon3	equ	0xFF0
 16858                           postinc0	equ	0xFEE
 16859                           plusw0	equ	0xFEB
 16860                           fsr0h	equ	0xFEA
 16861                           fsr0l	equ	0xFE9
 16862                           wreg	equ	0xFE8
 16863                           indf1	equ	0xFE7
 16864                           postdec1	equ	0xFE5
 16865                           plusw1	equ	0xFE3
 16866                           fsr1h	equ	0xFE2
 16867                           fsr1l	equ	0xFE1
 16868                           indf2	equ	0xFDF
 16869                           postinc2	equ	0xFDE
 16870                           postdec2	equ	0xFDD
 16871                           plusw2	equ	0xFDB
 16872                           fsr2h	equ	0xFDA
 16873                           fsr2l	equ	0xFD9
 16874                           status	equ	0xFD8
 16875                           
 16876 ;; *************** function _DeviceManagerBufferDeviceData *****************
 16877 ;; Defined at:
 16878 ;;		line 120 in file "../DeviceManager.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;  address         2   31[BANK0 ] struct addr_t_def
 16881 ;;  data            2   33[BANK0 ] PTR unsigned char 
 16882 ;;		 -> RxPacket.Payload(64), RxPacket(142), TxBuffer(64), 
 16883 ;;  size            2   35[BANK0 ] unsigned int 
 16884 ;;  isSecure        1   37[BANK0 ] unsigned char 
 16885 ;;  isFormed        1   38[BANK0 ] unsigned char 
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  devBuffer       2   50[BANK0 ] PTR struct devDataBuffer
 16888 ;;		 -> NULL(0), sleepRFDData(75), 
 16889 ;;  i               2   48[BANK0 ] unsigned int 
 16890 ;;  empty           2   46[BANK0 ] unsigned int 
 16891 ;;  recordLen       2   44[BANK0 ] unsigned int 
 16892 ;;  index           2   41[BANK0 ] unsigned int 
 16893 ;;  res             1   43[BANK0 ] unsigned char 
 16894 ;; Return value:  Size  Location     Type
 16895 ;;                  1    wreg      unsigned char 
 16896 ;; Registers used:
 16897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16898 ;; Tracked objects:
 16899 ;;		On entry : F/0
 16900 ;;		On exit  : F/0
 16901 ;;		Unchanged: 0/0
 16902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16904 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16906 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;Total ram usage:       21 bytes
 16908 ;; Hardware stack levels used:    1
 16909 ;; Hardware stack levels required when called:    6
 16910 ;; This function calls:
 16911 ;;		_NetworkAddressSizeGet
 16912 ;;		_memcpy
 16913 ;; This function is called by:
 16914 ;;		_radioReceivedPacket
 16915 ;;		_NetworkUnicastData
 16916 ;; This function uses a non-reentrant model
 16917 ;;
 16918                           
 16919                           	psect	text71
 16920  003F6A                     __ptext71:
 16921                           	opt stack 0
 16922  003F6A                     _DeviceManagerBufferDeviceData:
 16923                           	opt stack 22
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;DeviceManager.c: 122: bool res=0;
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;incstack = 0
 16930  003F6A  6B8B               	clrf	DeviceManagerBufferDeviceData@res& (0+255),b
 16931                           
 16932                           ;DeviceManager.c: 123: uint16_t i;
 16933                           ;DeviceManager.c: 124: uint16_t empty=0xffff;
 16934  003F6C  698E               	setf	DeviceManagerBufferDeviceData@empty& (0+255),b
 16935  003F6E  698F               	setf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),b
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;DeviceManager.c: 125: devDataBuffer_t *devBuffer;
 16939                           ;DeviceManager.c: 126: uint16_t recordLen=NetworkAddressSizeGet()+(1+2)+sleepRFDMaxBuffe
      +                          rLen;
 16940  003F70  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 16941  003F74  25B1               	addwf	_sleepRFDMaxBufferLen& (0+255),w,b
 16942  003F76  0100               	movlb	0	; () banked
 16943  003F78  6F87               	movwf	??_DeviceManagerBufferDeviceData& (0+255),b
 16944  003F7A  0E00               	movlw	0
 16945  003F7C  0101               	movlb	1	; () banked
 16946  003F7E  21B2               	addwfc	(_sleepRFDMaxBufferLen+1)& (0+255),w,b
 16947  003F80  0100               	movlb	0	; () banked
 16948  003F82  6F88               	movwf	(??_DeviceManagerBufferDeviceData+1)& (0+255),b
 16949  003F84  0E03               	movlw	3
 16950  003F86  2587               	addwf	??_DeviceManagerBufferDeviceData& (0+255),w,b
 16951  003F88  6F8C               	movwf	DeviceManagerBufferDeviceData@recordLen& (0+255),b
 16952  003F8A  0E00               	movlw	0
 16953  003F8C  2188               	addwfc	(??_DeviceManagerBufferDeviceData+1)& (0+255),w,b
 16954  003F8E  6F8D               	movwf	(DeviceManagerBufferDeviceData@recordLen+1)& (0+255),b
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;DeviceManager.c: 127: uint16_t index=0;
 16958  003F90  6B89               	clrf	DeviceManagerBufferDeviceData@index& (0+255),b
 16959  003F92  6B8A               	clrf	(DeviceManagerBufferDeviceData@index+1)& (0+255),b
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;DeviceManager.c: 129: if(devBuffers!=(0))
 16963  003F94  51E9               	movf	_devBuffers& (0+255),w,b
 16964  003F96  11EA               	iorwf	(_devBuffers+1)& (0+255),w,b
 16965  003F98  E101 D096          	bz	l17196
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;DeviceManager.c: 130: {
 16969                           ;DeviceManager.c: 131: if(size<=sleepRFDMaxBufferLen)
 16970  003F9C  5183               	movf	DeviceManagerBufferDeviceData@size& (0+255),w,b
 16971  003F9E  0101               	movlb	1	; () banked
 16972  003FA0  5DB1               	subwf	_sleepRFDMaxBufferLen& (0+255),w,b
 16973  003FA2  0100               	movlb	0	; () banked
 16974  003FA4  5184               	movf	(DeviceManagerBufferDeviceData@size+1)& (0+255),w,b
 16975  003FA6  0101               	movlb	1	; () banked
 16976  003FA8  59B2               	subwfb	(_sleepRFDMaxBufferLen+1)& (0+255),w,b
 16977  003FAA  E201 D08D          	bnc	l17196
 16978                           
 16979                           ; BSR set to: 1
 16980                           ;DeviceManager.c: 132: {
 16981                           ;DeviceManager.c: 133: for(i=0;i<sleepRFDBufferCount;i++)
 16982  003FAE  0100               	movlb	0	; () banked
 16983  003FB0  6B90               	clrf	DeviceManagerBufferDeviceData@i& (0+255),b
 16984  003FB2  6B91               	clrf	(DeviceManagerBufferDeviceData@i+1)& (0+255),b
 16985  003FB4  D01D               	goto	l17168
 16986  003FB6                     l17160:
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;DeviceManager.c: 134: {
 16990                           ;DeviceManager.c: 135: devBuffer=(devDataBuffer_t*)&devBuffers[index];
 16991  003FB6  5189               	movf	DeviceManagerBufferDeviceData@index& (0+255),w,b
 16992  003FB8  25E9               	addwf	_devBuffers& (0+255),w,b
 16993  003FBA  6F92               	movwf	DeviceManagerBufferDeviceData@devBuffer& (0+255),b
 16994  003FBC  518A               	movf	(DeviceManagerBufferDeviceData@index+1)& (0+255),w,b
 16995  003FBE  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 16996  003FC0  6F93               	movwf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),b
 16997                           
 16998                           ;DeviceManager.c: 136: index+=recordLen;
 16999  003FC2  518C               	movf	DeviceManagerBufferDeviceData@recordLen& (0+255),w,b
 17000  003FC4  2789               	addwf	DeviceManagerBufferDeviceData@index& (0+255),f,b
 17001  003FC6  518D               	movf	(DeviceManagerBufferDeviceData@recordLen+1)& (0+255),w,b
 17002  003FC8  238A               	addwfc	(DeviceManagerBufferDeviceData@index+1)& (0+255),f,b
 17003                           
 17004                           ;DeviceManager.c: 153: if( (empty==0xffff) && (devBuffer->size==0) )
 17005  003FCA  298E               	incf	DeviceManagerBufferDeviceData@empty& (0+255),w,b
 17006  003FCC  E10F               	bnz	l17166
 17007  003FCE  298F               	incf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),w,b
 17008  003FD0  E10D               	bnz	l17166
 17009                           
 17010                           ; BSR set to: 0
 17011  003FD2  EE20 F002          	lfsr	2,2
 17012  003FD6  5192               	movf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17013  003FD8  26D9               	addwf	fsr2l,f,c
 17014  003FDA  5193               	movf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17015  003FDC  22DA               	addwfc	fsr2h,f,c
 17016  003FDE  50DE               	movf	postinc2,w,c
 17017  003FE0  10DE               	iorwf	postinc2,w,c
 17018  003FE2  E104               	bnz	l17166
 17019                           
 17020                           ; BSR set to: 0
 17021                           ;DeviceManager.c: 154: {
 17022                           ;DeviceManager.c: 155: empty=i;
 17023  003FE4  C090  F08E         	movff	DeviceManagerBufferDeviceData@i,DeviceManagerBufferDeviceData@empty
 17024  003FE8  C091  F08F         	movff	DeviceManagerBufferDeviceData@i+1,DeviceManagerBufferDeviceData@empty+1
 17025  003FEC                     l17166:
 17026                           
 17027                           ; BSR set to: 0
 17028  003FEC  4B90               	infsnz	DeviceManagerBufferDeviceData@i& (0+255),f,b
 17029  003FEE  2B91               	incf	(DeviceManagerBufferDeviceData@i+1)& (0+255),f,b
 17030  003FF0                     l17168:
 17031                           
 17032                           ; BSR set to: 0
 17033  003FF0  5039               	movf	_sleepRFDBufferCount,w,c
 17034  003FF2  5D90               	subwf	DeviceManagerBufferDeviceData@i& (0+255),w,b
 17035  003FF4  503A               	movf	_sleepRFDBufferCount+1,w,c
 17036  003FF6  5991               	subwfb	(DeviceManagerBufferDeviceData@i+1)& (0+255),w,b
 17037  003FF8  E3DE               	bnc	l17160
 17038                           
 17039                           ; BSR set to: 0
 17040                           ;DeviceManager.c: 156: }
 17041                           ;DeviceManager.c: 157: }
 17042                           ;DeviceManager.c: 158: if(i>=sleepRFDBufferCount)
 17043  003FFA  5039               	movf	_sleepRFDBufferCount,w,c
 17044  003FFC  5D90               	subwf	DeviceManagerBufferDeviceData@i& (0+255),w,b
 17045  003FFE  503A               	movf	_sleepRFDBufferCount+1,w,c
 17046  004000  5991               	subwfb	(DeviceManagerBufferDeviceData@i+1)& (0+255),w,b
 17047  004002  E362               	bnc	l17196
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;DeviceManager.c: 159: {
 17051                           ;DeviceManager.c: 160: if(empty<sleepRFDBufferCount)
 17052  004004  5039               	movf	_sleepRFDBufferCount,w,c
 17053  004006  5D8E               	subwf	DeviceManagerBufferDeviceData@empty& (0+255),w,b
 17054  004008  503A               	movf	_sleepRFDBufferCount+1,w,c
 17055  00400A  598F               	subwfb	(DeviceManagerBufferDeviceData@empty+1)& (0+255),w,b
 17056  00400C  E25D               	bc	l17196
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;DeviceManager.c: 161: {
 17060                           ;DeviceManager.c: 162: i=empty*recordLen;
 17061  00400E  518C               	movf	DeviceManagerBufferDeviceData@recordLen& (0+255),w,b
 17062  004010  038E               	mulwf	DeviceManagerBufferDeviceData@empty& (0+255),b
 17063  004012  CFF3 F087          	movff	prodl,??_DeviceManagerBufferDeviceData
 17064  004016  CFF4 F088          	movff	prodh,??_DeviceManagerBufferDeviceData+1
 17065  00401A  038F               	mulwf	(DeviceManagerBufferDeviceData@empty+1)& (0+255),b
 17066  00401C  50F3               	movf	prodl,w,c
 17067  00401E  2788               	addwf	(??_DeviceManagerBufferDeviceData+1)& (0+255),f,b
 17068  004020  518D               	movf	(DeviceManagerBufferDeviceData@recordLen+1)& (0+255),w,b
 17069  004022  038E               	mulwf	DeviceManagerBufferDeviceData@empty& (0+255),b
 17070  004024  50F3               	movf	prodl,w,c
 17071  004026  2788               	addwf	(??_DeviceManagerBufferDeviceData+1)& (0+255),f,b
 17072  004028  C087  F090         	movff	??_DeviceManagerBufferDeviceData,DeviceManagerBufferDeviceData@i
 17073  00402C  C088  F091         	movff	??_DeviceManagerBufferDeviceData+1,DeviceManagerBufferDeviceData@i+1
 17074                           
 17075                           ; BSR set to: 0
 17076                           ;DeviceManager.c: 163: devBuffer=(devDataBuffer_t*)&devBuffers[i];
 17077  004030  5190               	movf	DeviceManagerBufferDeviceData@i& (0+255),w,b
 17078  004032  25E9               	addwf	_devBuffers& (0+255),w,b
 17079  004034  6F92               	movwf	DeviceManagerBufferDeviceData@devBuffer& (0+255),b
 17080  004036  5191               	movf	(DeviceManagerBufferDeviceData@i+1)& (0+255),w,b
 17081  004038  21EA               	addwfc	(_devBuffers+1)& (0+255),w,b
 17082  00403A  6F93               	movwf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),b
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;DeviceManager.c: 165: memcpy(devBuffer->address.bytes,address.bytes,NetworkAddressSizeG
      +                          et());
 17086  00403C  C092  F075         	movff	DeviceManagerBufferDeviceData@devBuffer,memcpy@d1
 17087  004040  C093  F076         	movff	DeviceManagerBufferDeviceData@devBuffer+1,memcpy@d1+1
 17088  004044  0E7F               	movlw	low DeviceManagerBufferDeviceData@address
 17089  004046  6F77               	movwf	memcpy@s1& (0+255),b
 17090  004048  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 17091  00404A  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 17092  00404E  0100               	movlb	0	; () banked
 17093  004050  6F79               	movwf	memcpy@n& (0+255),b
 17094  004052  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 17095  004054  EC05  F035         	call	_memcpy	;wreg free
 17096                           
 17097                           ; BSR set to: 0
 17098                           ;DeviceManager.c: 166: memcpy(devBuffer->data,data,size);
 17099  004058  0E05               	movlw	5
 17100  00405A  2592               	addwf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17101  00405C  6F75               	movwf	memcpy@d1& (0+255),b
 17102  00405E  0E00               	movlw	0
 17103  004060  2193               	addwfc	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17104  004062  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 17105  004064  C081  F077         	movff	DeviceManagerBufferDeviceData@data,memcpy@s1
 17106  004068  C082  F078         	movff	DeviceManagerBufferDeviceData@data+1,memcpy@s1+1
 17107  00406C  C083  F079         	movff	DeviceManagerBufferDeviceData@size,memcpy@n
 17108  004070  C084  F07A         	movff	DeviceManagerBufferDeviceData@size+1,memcpy@n+1
 17109  004074  EC05  F035         	call	_memcpy	;wreg free
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;DeviceManager.c: 167: devBuffer->size=size;
 17113  004078  EE20 F002          	lfsr	2,2
 17114  00407C  5192               	movf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17115  00407E  26D9               	addwf	fsr2l,f,c
 17116  004080  5193               	movf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17117  004082  22DA               	addwfc	fsr2h,f,c
 17118  004084  C083  FFDE         	movff	DeviceManagerBufferDeviceData@size,postinc2
 17119  004088  C084  FFDD         	movff	DeviceManagerBufferDeviceData@size+1,postdec2
 17120                           
 17121                           ; BSR set to: 0
 17122                           ;DeviceManager.c: 168: devBuffer->flags=0;
 17123  00408C  EE20 F004          	lfsr	2,4
 17124  004090  5192               	movf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17125  004092  26D9               	addwf	fsr2l,f,c
 17126  004094  5193               	movf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17127  004096  22DA               	addwfc	fsr2h,f,c
 17128  004098  0E00               	movlw	0
 17129  00409A  6EDF               	movwf	indf2,c
 17130                           
 17131                           ; BSR set to: 0
 17132                           ;DeviceManager.c: 169: if(isSecure)
 17133  00409C  5185               	movf	DeviceManagerBufferDeviceData@isSecure& (0+255),w,b
 17134  00409E  E008               	bz	l17190
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;DeviceManager.c: 170: {
 17138                           ;DeviceManager.c: 171: devBuffer->flags |=1;
 17139  0040A0  EE20 F004          	lfsr	2,4
 17140  0040A4  5192               	movf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17141  0040A6  26D9               	addwf	fsr2l,f,c
 17142  0040A8  5193               	movf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17143  0040AA  22DA               	addwfc	fsr2h,f,c
 17144  0040AC  0E00               	movlw	0
 17145  0040AE  80DB               	bsf	plusw2,0,c
 17146  0040B0                     l17190:
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;DeviceManager.c: 172: }
 17150                           ;DeviceManager.c: 173: if(isFormed)
 17151  0040B0  5186               	movf	DeviceManagerBufferDeviceData@isFormed& (0+255),w,b
 17152  0040B2  E008               	bz	l17194
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;DeviceManager.c: 174: {
 17156                           ;DeviceManager.c: 175: devBuffer->flags |=2;
 17157  0040B4  EE20 F004          	lfsr	2,4
 17158  0040B8  5192               	movf	DeviceManagerBufferDeviceData@devBuffer& (0+255),w,b
 17159  0040BA  26D9               	addwf	fsr2l,f,c
 17160  0040BC  5193               	movf	(DeviceManagerBufferDeviceData@devBuffer+1)& (0+255),w,b
 17161  0040BE  22DA               	addwfc	fsr2h,f,c
 17162  0040C0  0E00               	movlw	0
 17163  0040C2  82DB               	bsf	plusw2,1,c
 17164  0040C4                     l17194:
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;DeviceManager.c: 176: }
 17168                           ;DeviceManager.c: 177: res=1;
 17169  0040C4  0E01               	movlw	1
 17170  0040C6  6F8B               	movwf	DeviceManagerBufferDeviceData@res& (0+255),b
 17171  0040C8                     l17196:
 17172                           
 17173                           ;DeviceManager.c: 178: }
 17174                           ;DeviceManager.c: 179: }
 17175                           ;DeviceManager.c: 180: }
 17176                           ;DeviceManager.c: 181: }
 17177                           ;DeviceManager.c: 182: return(res);
 17178  0040C8  0100               	movlb	0	; () banked
 17179  0040CA  518B               	movf	DeviceManagerBufferDeviceData@res& (0+255),w,b
 17180                           
 17181                           ; BSR set to: 0
 17182  0040CC  0012               	return		;funcret
 17183  0040CE                     __end_of_DeviceManagerBufferDeviceData:
 17184                           	opt stack 0
 17185                           tblptru	equ	0xFF8
 17186                           tblptrh	equ	0xFF7
 17187                           tblptrl	equ	0xFF6
 17188                           tablat	equ	0xFF5
 17189                           prodh	equ	0xFF4
 17190                           prodl	equ	0xFF3
 17191                           intcon3	equ	0xFF0
 17192                           postinc0	equ	0xFEE
 17193                           plusw0	equ	0xFEB
 17194                           fsr0h	equ	0xFEA
 17195                           fsr0l	equ	0xFE9
 17196                           wreg	equ	0xFE8
 17197                           indf1	equ	0xFE7
 17198                           postdec1	equ	0xFE5
 17199                           plusw1	equ	0xFE3
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           plusw2	equ	0xFDB
 17206                           fsr2h	equ	0xFDA
 17207                           fsr2l	equ	0xFD9
 17208                           status	equ	0xFD8
 17209                           
 17210 ;; *************** function _BlinkRedLED *****************
 17211 ;; Defined at:
 17212 ;;		line 584 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;		None
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;		None
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  1    wreg      void 
 17219 ;; Registers used:
 17220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : F/2
 17223 ;;		On exit  : F/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;Total ram usage:        0 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    6
 17233 ;; This function calls:
 17234 ;;		_LEDCommand
 17235 ;; This function is called by:
 17236 ;;		_radioReceivedPacket
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text72
 17241  00756A                     __ptext72:
 17242                           	opt stack 0
 17243  00756A                     _BlinkRedLED:
 17244                           	opt stack 22
 17245                           
 17246                           ; BSR set to: 2
 17247                           ;system.c: 586: LEDCommand(LEDRed,lCMD_Blink);
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;incstack = 0
 17251  00756A  0E03               	movlw	3
 17252  00756C  0100               	movlb	0	; () banked
 17253  00756E  6F73               	movwf	LEDCommand@cmd& (0+255),b
 17254  007570  0E02               	movlw	2
 17255  007572  EF79  F037         	goto	_LEDCommand
 17256  007576                     __end_of_BlinkRedLED:
 17257                           	opt stack 0
 17258                           tblptru	equ	0xFF8
 17259                           tblptrh	equ	0xFF7
 17260                           tblptrl	equ	0xFF6
 17261                           tablat	equ	0xFF5
 17262                           prodh	equ	0xFF4
 17263                           prodl	equ	0xFF3
 17264                           intcon3	equ	0xFF0
 17265                           postinc0	equ	0xFEE
 17266                           plusw0	equ	0xFEB
 17267                           fsr0h	equ	0xFEA
 17268                           fsr0l	equ	0xFE9
 17269                           wreg	equ	0xFE8
 17270                           indf1	equ	0xFE7
 17271                           postdec1	equ	0xFE5
 17272                           plusw1	equ	0xFE3
 17273                           fsr1h	equ	0xFE2
 17274                           fsr1l	equ	0xFE1
 17275                           indf2	equ	0xFDF
 17276                           postinc2	equ	0xFDE
 17277                           postdec2	equ	0xFDD
 17278                           plusw2	equ	0xFDB
 17279                           fsr2h	equ	0xFDA
 17280                           fsr2l	equ	0xFD9
 17281                           status	equ	0xFD8
 17282                           
 17283 ;; *************** function _LEDCommand *****************
 17284 ;; Defined at:
 17285 ;;		line 576 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 17286 ;; Parameters:    Size  Location     Type
 17287 ;;  led             1    wreg     enum E7918
 17288 ;;  cmd             1   19[BANK0 ] enum E7924
 17289 ;; Auto vars:     Size  Location     Type
 17290 ;;  led             1   21[BANK0 ] enum E7918
 17291 ;; Return value:  Size  Location     Type
 17292 ;;                  1    wreg      void 
 17293 ;; Registers used:
 17294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17295 ;; Tracked objects:
 17296 ;;		On entry : F/0
 17297 ;;		On exit  : F/0
 17298 ;;		Unchanged: 0/0
 17299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17300 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17304 ;;Total ram usage:        3 bytes
 17305 ;; Hardware stack levels used:    1
 17306 ;; Hardware stack levels required when called:    5
 17307 ;; This function calls:
 17308 ;;		Nothing
 17309 ;; This function is called by:
 17310 ;;		_BlinkRedLED
 17311 ;;		_main
 17312 ;; This function uses a non-reentrant model
 17313 ;;
 17314                           
 17315                           	psect	text73
 17316  006EF2                     __ptext73:
 17317                           	opt stack 0
 17318  006EF2                     _LEDCommand:
 17319                           	opt stack 22
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;incstack = 0
 17323                           ;LEDCommand@led stored from wreg
 17324  006EF2  6F75               	movwf	LEDCommand@led& (0+255),b
 17325                           
 17326                           ;system.c: 578: if( (LEDCmd[led]!=lCMD_On) && (LEDCmd[led]!=lCMD_Off) )
 17327  006EF4  0EA5               	movlw	low _LEDCmd
 17328  006EF6  0100               	movlb	0	; () banked
 17329  006EF8  2575               	addwf	LEDCommand@led& (0+255),w,b
 17330  006EFA  6ED9               	movwf	fsr2l,c
 17331  006EFC  6ADA               	clrf	fsr2h,c
 17332  006EFE  0E01               	movlw	high _LEDCmd
 17333  006F00  22DA               	addwfc	fsr2h,f,c
 17334  006F02  0E02               	movlw	2
 17335  006F04  18DE               	xorwf	postinc2,w,c
 17336  006F06  B4D8               	btfsc	status,2,c
 17337  006F08  0012               	return	
 17338                           
 17339                           ; BSR set to: 0
 17340  006F0A  0EA5               	movlw	low _LEDCmd
 17341  006F0C  2575               	addwf	LEDCommand@led& (0+255),w,b
 17342  006F0E  6ED9               	movwf	fsr2l,c
 17343  006F10  6ADA               	clrf	fsr2h,c
 17344  006F12  0E01               	movlw	high _LEDCmd
 17345  006F14  22DA               	addwfc	fsr2h,f,c
 17346  006F16  04DE               	decf	postinc2,w,c
 17347  006F18  B4D8               	btfsc	status,2,c
 17348  006F1A  0012               	return	
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;system.c: 579: {
 17352                           ;system.c: 580: LEDCmd[led]=cmd;
 17353  006F1C  0EA5               	movlw	low _LEDCmd
 17354  006F1E  2575               	addwf	LEDCommand@led& (0+255),w,b
 17355  006F20  6ED9               	movwf	fsr2l,c
 17356  006F22  6ADA               	clrf	fsr2h,c
 17357  006F24  0E01               	movlw	high _LEDCmd
 17358  006F26  22DA               	addwfc	fsr2h,f,c
 17359  006F28  C073  FFDF         	movff	LEDCommand@cmd,indf2
 17360                           
 17361                           ; BSR set to: 0
 17362  006F2C  0012               	return		;funcret
 17363  006F2E                     __end_of_LEDCommand:
 17364                           	opt stack 0
 17365                           tblptru	equ	0xFF8
 17366                           tblptrh	equ	0xFF7
 17367                           tblptrl	equ	0xFF6
 17368                           tablat	equ	0xFF5
 17369                           prodh	equ	0xFF4
 17370                           prodl	equ	0xFF3
 17371                           intcon3	equ	0xFF0
 17372                           postinc0	equ	0xFEE
 17373                           plusw0	equ	0xFEB
 17374                           fsr0h	equ	0xFEA
 17375                           fsr0l	equ	0xFE9
 17376                           wreg	equ	0xFE8
 17377                           indf1	equ	0xFE7
 17378                           postdec1	equ	0xFE5
 17379                           plusw1	equ	0xFE3
 17380                           fsr1h	equ	0xFE2
 17381                           fsr1l	equ	0xFE1
 17382                           indf2	equ	0xFDF
 17383                           postinc2	equ	0xFDE
 17384                           postdec2	equ	0xFDD
 17385                           plusw2	equ	0xFDB
 17386                           fsr2h	equ	0xFDA
 17387                           fsr2l	equ	0xFD9
 17388                           status	equ	0xFD8
 17389                           
 17390 ;; *************** function _TimeTickISR *****************
 17391 ;; Defined at:
 17392 ;;		line 10 in file "../TimeTick.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;		None
 17395 ;; Auto vars:     Size  Location     Type
 17396 ;;		None
 17397 ;; Return value:  Size  Location     Type
 17398 ;;                  1    wreg      void 
 17399 ;; Registers used:
 17400 ;;		wreg, status,2, status,0
 17401 ;; Tracked objects:
 17402 ;;		On entry : F/0
 17403 ;;		On exit  : F/2
 17404 ;;		Unchanged: 0/0
 17405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;Total ram usage:        0 bytes
 17411 ;; Hardware stack levels used:    1
 17412 ;; Hardware stack levels required when called:    5
 17413 ;; This function calls:
 17414 ;;		Nothing
 17415 ;; This function is called by:
 17416 ;;		_MiApp_MessageAvailable
 17417 ;; This function uses a non-reentrant model
 17418 ;;
 17419                           
 17420                           	psect	text74
 17421  0070F0                     __ptext74:
 17422                           	opt stack 0
 17423  0070F0                     _TimeTickISR:
 17424                           	opt stack 24
 17425                           
 17426                           ; BSR set to: 0
 17427                           ;TimeTick.c: 15: if(Tick_MS.lsb<0xffffffff)
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;incstack = 0
 17431  0070F0  0102               	movlb	2	; () banked
 17432  0070F2  29C4               	incf	_Tick_MS& (0+255),w,b
 17433  0070F4  E106               	bnz	u15680
 17434  0070F6  29C5               	incf	(_Tick_MS+1)& (0+255),w,b
 17435  0070F8  E104               	bnz	u15680
 17436  0070FA  29C6               	incf	(_Tick_MS+2)& (0+255),w,b
 17437  0070FC  E102               	bnz	u15680
 17438  0070FE  29C7               	incf	(_Tick_MS+3)& (0+255),w,b
 17439  007100  E006               	bz	l2155
 17440  007102                     u15680:
 17441                           
 17442                           ; BSR set to: 2
 17443                           ;TimeTick.c: 16: {
 17444                           ;TimeTick.c: 17: Tick_MS.lsb++;
 17445  007102  2BC4               	incf	_Tick_MS& (0+255),f,b
 17446  007104  0E00               	movlw	0
 17447  007106  23C5               	addwfc	(_Tick_MS+1)& (0+255),f,b
 17448  007108  23C6               	addwfc	(_Tick_MS+2)& (0+255),f,b
 17449  00710A  23C7               	addwfc	(_Tick_MS+3)& (0+255),f,b
 17450                           
 17451                           ;TimeTick.c: 18: }
 17452  00710C  0C00               	retlw	0
 17453  00710E                     l2155:
 17454                           
 17455                           ; BSR set to: 2
 17456                           ;TimeTick.c: 19: else
 17457                           ;TimeTick.c: 20: {
 17458                           ;TimeTick.c: 21: Tick_MS.lsb=0;
 17459  00710E  6BC4               	clrf	_Tick_MS& (0+255),b
 17460  007110  6BC5               	clrf	(_Tick_MS+1)& (0+255),b
 17461  007112  6BC6               	clrf	(_Tick_MS+2)& (0+255),b
 17462  007114  6BC7               	clrf	(_Tick_MS+3)& (0+255),b
 17463                           
 17464                           ; BSR set to: 2
 17465                           ;TimeTick.c: 22: Tick_MS.msb++;
 17466  007116  2BC8               	incf	(_Tick_MS+4)& (0+255),f,b
 17467  007118  0E00               	movlw	0
 17468  00711A  23C9               	addwfc	(_Tick_MS+5)& (0+255),f,b
 17469  00711C  23CA               	addwfc	(_Tick_MS+6)& (0+255),f,b
 17470  00711E  23CB               	addwfc	(_Tick_MS+7)& (0+255),f,b
 17471                           
 17472                           ; BSR set to: 2
 17473  007120  0C00               	retlw	0	;funcret
 17474  007122                     __end_of_TimeTickISR:
 17475                           	opt stack 0
 17476                           tblptru	equ	0xFF8
 17477                           tblptrh	equ	0xFF7
 17478                           tblptrl	equ	0xFF6
 17479                           tablat	equ	0xFF5
 17480                           prodh	equ	0xFF4
 17481                           prodl	equ	0xFF3
 17482                           intcon3	equ	0xFF0
 17483                           postinc0	equ	0xFEE
 17484                           plusw0	equ	0xFEB
 17485                           fsr0h	equ	0xFEA
 17486                           fsr0l	equ	0xFE9
 17487                           wreg	equ	0xFE8
 17488                           indf1	equ	0xFE7
 17489                           postdec1	equ	0xFE5
 17490                           plusw1	equ	0xFE3
 17491                           fsr1h	equ	0xFE2
 17492                           fsr1l	equ	0xFE1
 17493                           indf2	equ	0xFDF
 17494                           postinc2	equ	0xFDE
 17495                           postdec2	equ	0xFDD
 17496                           plusw2	equ	0xFDB
 17497                           fsr2h	equ	0xFDA
 17498                           fsr2l	equ	0xFD9
 17499                           status	equ	0xFD8
 17500                           
 17501 ;; *************** function _NetworkManagerTask *****************
 17502 ;; Defined at:
 17503 ;;		line 53 in file "../NetworkManager.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;		None
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;  data           19   68[BANK1 ] unsigned char [19]
 17508 ;;  sz              2   87[BANK1 ] unsigned int 
 17509 ;; Return value:  Size  Location     Type
 17510 ;;                  1    wreg      void 
 17511 ;; Registers used:
 17512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17513 ;; Tracked objects:
 17514 ;;		On entry : C/1
 17515 ;;		On exit  : C/0
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17522 ;;Total ram usage:       25 bytes
 17523 ;; Hardware stack levels used:    1
 17524 ;; Hardware stack levels required when called:   14
 17525 ;; This function calls:
 17526 ;;		_BeaconManagerTask
 17527 ;;		_BroadcastManagerTask
 17528 ;;		_CoordinatorGenericAddress
 17529 ;;		_MSTickGet
 17530 ;;		_MSTickGetDiffNow
 17531 ;;		_MiApp_IsNetworkBusy
 17532 ;;		_NetworkGetDeviceType
 17533 ;;		_NetworkGetPANID
 17534 ;;		_NetworkGetParentAddress
 17535 ;;		_NetworkPrepareSendPacket
 17536 ;;		_RMRoutingTableCount
 17537 ;;		_RouteManagerPerformUpdate
 17538 ;;		_RouteManagerTask
 17539 ;;		_RouterEvicted
 17540 ;;		_TransportManagerTask
 17541 ;;		_isInvalidAddress
 17542 ;;		_isNetworkSecurityEnabled
 17543 ;;		_krnd
 17544 ;;		_radioUnicast
 17545 ;; This function is called by:
 17546 ;;		_MiApp_MessageAvailable
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text75
 17551  001940                     __ptext75:
 17552                           	opt stack 0
 17553  001940                     _NetworkManagerTask:
 17554                           	opt stack 15
 17555                           
 17556                           ;NetworkManager.c: 55: static TickMS tStart;
 17557                           ;NetworkManager.c: 56: static SPAN delay;
 17558                           ;NetworkManager.c: 57: uint8_t data[sizeof(net_data_header_t)+8+1];
 17559                           ;NetworkManager.c: 58: uint16_t sz;
 17560                           ;NetworkManager.c: 60: BeaconManagerTask();
 17561                           
 17562                           ; BSR set to: 2
 17563                           ;incstack = 0
 17564  001940  EC41  F029         	call	_BeaconManagerTask	;wreg free
 17565                           
 17566                           ;NetworkManager.c: 61: RouteManagerTask();
 17567  001944  EC96  F036         	call	_RouteManagerTask	;wreg free
 17568                           
 17569                           ;NetworkManager.c: 62: BroadcastManagerTask();
 17570  001948  EC24  F016         	call	_BroadcastManagerTask	;wreg free
 17571                           
 17572                           ;NetworkManager.c: 63: TransportManagerTask();
 17573  00194C  EC99  F005         	call	_TransportManagerTask	;wreg free
 17574                           
 17575                           ;NetworkManager.c: 65: switch(nState)
 17576  001950  D147               	goto	l17668
 17577  001952                     l17586:
 17578                           
 17579                           ; BSR set to: 1
 17580                           ;NetworkManager.c: 68: if(NetworkGetDeviceType()==DeviceCoordinator)
 17581  001952  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 17582  001956  0900               	iorlw	0
 17583  001958  E103               	bnz	l17590
 17584                           
 17585                           ; BSR set to: 1
 17586                           ;NetworkManager.c: 69: {
 17587                           ;NetworkManager.c: 70: nState=netOperating;
 17588  00195A  0E04               	movlw	4
 17589  00195C  6FC3               	movwf	_nState& (0+255),b
 17590                           
 17591                           ;NetworkManager.c: 71: }else
 17592  00195E  0C04               	retlw	4
 17593  001960                     l17590:
 17594                           
 17595                           ;NetworkManager.c: 72: {
 17596                           ;NetworkManager.c: 73: nState=netWaitRoutes;
 17597  001960  0E01               	movlw	1
 17598  001962  0101               	movlb	1	; () banked
 17599  001964  6FC3               	movwf	_nState& (0+255),b
 17600  001966  0C01               	retlw	1
 17601  001968                     l17592:
 17602                           
 17603                           ; BSR set to: 1
 17604                           ;NetworkManager.c: 78: if(NetworkGetDeviceType()!=DeviceCoordinator)
 17605  001968  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 17606  00196C  0900               	iorlw	0
 17607  00196E  B4D8               	btfsc	status,2,c
 17608  001970  0012               	return	
 17609                           
 17610                           ; BSR set to: 1
 17611                           ;NetworkManager.c: 79: {
 17612                           ;NetworkManager.c: 80: if( (NetworkGetDeviceType()!=DeviceCoordinator) && isInvalidAddre
      +                          ss(NetworkGetParentAddress()) )
 17613  001972  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 17614  001976  0900               	iorlw	0
 17615  001978  E00A               	bz	l17600
 17616                           
 17617                           ; BSR set to: 1
 17618  00197A  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 17619  00197E  C073  F085         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 17620  001982  C074  F086         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 17621  001986  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 17622  00198A  0900               	iorlw	0
 17623  00198C  E1E9               	bnz	l17590
 17624  00198E                     l17600:
 17625  00198E  0101               	movlb	1	; () banked
 17626  001990  51DA               	movf	(_routeInfo+6)& (0+255),w,b
 17627  001992  A4D8               	btfss	status,2,c
 17628  001994  0012               	return	
 17629  001996                     l17602:
 17630                           
 17631                           ;NetworkManager.c: 84: {
 17632                           ;NetworkManager.c: 85: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 17633  001996  EC45  F01E         	call	_krnd	;wreg free
 17634  00199A  5173               	movf	?_krnd& (0+255),w,b
 17635  00199C  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 17636  00199E  0E03               	movlw	3
 17637  0019A0  1574               	andwf	(?_krnd+1)& (0+255),w,b
 17638  0019A2  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 17639  0019A4  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 17640  0019A6  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 17641  0019A8  0EE8               	movlw	232
 17642  0019AA  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 17643  0019AC  0102               	movlb	2	; () banked
 17644  0019AE  6F28               	movwf	NetworkManagerTask@delay& (0+255),b
 17645  0019B0  0E03               	movlw	3
 17646  0019B2  0100               	movlb	0	; () banked
 17647  0019B4  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 17648  0019B6  0102               	movlb	2	; () banked
 17649  0019B8  6F29               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 17650  0019BA  0E00               	movlw	0
 17651  0019BC  0100               	movlb	0	; () banked
 17652  0019BE  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 17653  0019C0  0102               	movlb	2	; () banked
 17654  0019C2  6F2A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 17655  0019C4  0E00               	movlw	0
 17656  0019C6  0100               	movlb	0	; () banked
 17657  0019C8  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 17658  0019CA  0102               	movlb	2	; () banked
 17659  0019CC  6F2B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 17660                           
 17661                           ; BSR set to: 2
 17662                           ;NetworkManager.c: 86: tStart=MSTickGet();
 17663  0019CE  EC27  F038         	call	_MSTickGet	;wreg free
 17664  0019D2  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17665  0019D6  0E07               	movlw	7
 17666  0019D8                     u21611:
 17667  0019D8  CFEB FFDB          	movff	plusw0,plusw2
 17668  0019DC  06E8               	decf	wreg,f,c
 17669  0019DE  E2FC               	bc	u21611
 17670  0019E0                     l17606:
 17671                           
 17672                           ;NetworkManager.c: 87: nState=netDelayBeforeCheckin;
 17673  0019E0  0E05               	movlw	5
 17674  0019E2  0101               	movlb	1	; () banked
 17675  0019E4  6FC3               	movwf	_nState& (0+255),b
 17676  0019E6  0C05               	retlw	5
 17677  0019E8                     l17608:
 17678                           
 17679                           ; BSR set to: 1
 17680                           ;NetworkManager.c: 93: if(RMRoutingTableCount()>0)
 17681  0019E8  ECE6  F03A         	call	_RMRoutingTableCount	;wreg free
 17682  0019EC  0100               	movlb	0	; () banked
 17683  0019EE  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 17684  0019F0  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 17685  0019F2  B4D8               	btfsc	status,2,c
 17686  0019F4  0012               	return	
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;NetworkManager.c: 94: {
 17690                           ;NetworkManager.c: 95: tStart=MSTickGet();
 17691  0019F6  EC27  F038         	call	_MSTickGet	;wreg free
 17692  0019FA  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17693  0019FE  0E07               	movlw	7
 17694  001A00                     u21631:
 17695  001A00  CFEB FFDB          	movff	plusw0,plusw2
 17696  001A04  06E8               	decf	wreg,f,c
 17697  001A06  E2FC               	bc	u21631
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;NetworkManager.c: 96: nState=netWaitBeforeRouteUpdates;
 17701  001A08  0E02               	movlw	2
 17702  001A0A  0101               	movlb	1	; () banked
 17703  001A0C  6FC3               	movwf	_nState& (0+255),b
 17704  001A0E  0C02               	retlw	2
 17705  001A10                     l17614:
 17706                           
 17707                           ; BSR set to: 1
 17708                           ;NetworkManager.c: 101: if(MSTickGetDiffNow(tStart)>((SPAN)2000))
 17709  001A10  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17710  001A14  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 17711  001A18  0E07               	movlw	7
 17712  001A1A                     u21641:
 17713  001A1A  CFDB FFEB          	movff	plusw2,plusw0
 17714  001A1E  06E8               	decf	wreg,f,c
 17715  001A20  E2FC               	bc	u21641
 17716  001A22  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 17717  001A26  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17718  001A28  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17719  001A2A  E107               	bnz	u21650
 17720  001A2C  0ED1               	movlw	209
 17721  001A2E  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17722  001A30  0E07               	movlw	7
 17723  001A32  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17724  001A34  E202 EFE6  F03A    	bnc	_RMRoutingTableCount
 17725  001A3A                     u21650:
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;NetworkManager.c: 102: {
 17729                           ;NetworkManager.c: 103: RouteManagerPerformUpdate();
 17730  001A3A  EC2C  F00B         	call	_RouteManagerPerformUpdate	;wreg free
 17731  001A3E                     l17618:
 17732                           
 17733                           ;NetworkManager.c: 104: nState=netWaitParent;
 17734  001A3E  0E03               	movlw	3
 17735  001A40  0101               	movlb	1	; () banked
 17736  001A42  6FC3               	movwf	_nState& (0+255),b
 17737                           
 17738                           ;NetworkManager.c: 105: }else if(RMRoutingTableCount()>2)
 17739  001A44  0C03               	retlw	3
 17740  001A46                     l17622:
 17741                           
 17742                           ; BSR set to: 1
 17743                           ;NetworkManager.c: 113: if(isInvalidAddress(NetworkGetParentAddress())==0)
 17744  001A46  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 17745  001A4A  C073  F085         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 17746  001A4E  C074  F086         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 17747  001A52  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 17748  001A56  0900               	iorlw	0
 17749  001A58  E126               	bnz	l17630
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;NetworkManager.c: 114: {
 17753                           ;NetworkManager.c: 115: tStart=MSTickGet();
 17754  001A5A  EC27  F038         	call	_MSTickGet	;wreg free
 17755  001A5E  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17756  001A62  0E07               	movlw	7
 17757  001A64                     u21671:
 17758  001A64  CFEB FFDB          	movff	plusw0,plusw2
 17759  001A68  06E8               	decf	wreg,f,c
 17760  001A6A  E2FC               	bc	u21671
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;NetworkManager.c: 117: delay=((SPAN)(krnd() & 0x3ff) + 1000);
 17764  001A6C  EC45  F01E         	call	_krnd	;wreg free
 17765  001A70  5173               	movf	?_krnd& (0+255),w,b
 17766  001A72  6FD3               	movwf	??_NetworkManagerTask& (0+255),b
 17767  001A74  0E03               	movlw	3
 17768  001A76  1574               	andwf	(?_krnd+1)& (0+255),w,b
 17769  001A78  6FD4               	movwf	(??_NetworkManagerTask+1)& (0+255),b
 17770  001A7A  6BD5               	clrf	(??_NetworkManagerTask+2)& (0+255),b
 17771  001A7C  6BD6               	clrf	(??_NetworkManagerTask+3)& (0+255),b
 17772  001A7E  0EE8               	movlw	232
 17773  001A80  25D3               	addwf	??_NetworkManagerTask& (0+255),w,b
 17774  001A82  0102               	movlb	2	; () banked
 17775  001A84  6F28               	movwf	NetworkManagerTask@delay& (0+255),b
 17776  001A86  0E03               	movlw	3
 17777  001A88  0100               	movlb	0	; () banked
 17778  001A8A  21D4               	addwfc	(??_NetworkManagerTask+1)& (0+255),w,b
 17779  001A8C  0102               	movlb	2	; () banked
 17780  001A8E  6F29               	movwf	(NetworkManagerTask@delay+1)& (0+255),b
 17781  001A90  0E00               	movlw	0
 17782  001A92  0100               	movlb	0	; () banked
 17783  001A94  21D5               	addwfc	(??_NetworkManagerTask+2)& (0+255),w,b
 17784  001A96  0102               	movlb	2	; () banked
 17785  001A98  6F2A               	movwf	(NetworkManagerTask@delay+2)& (0+255),b
 17786  001A9A  0E00               	movlw	0
 17787  001A9C  0100               	movlb	0	; () banked
 17788  001A9E  21D6               	addwfc	(??_NetworkManagerTask+3)& (0+255),w,b
 17789  001AA0  0102               	movlb	2	; () banked
 17790  001AA2  6F2B               	movwf	(NetworkManagerTask@delay+3)& (0+255),b
 17791  001AA4  D79D               	goto	l17606
 17792  001AA6                     l17630:
 17793                           
 17794                           ; BSR set to: 0
 17795  001AA6  ECE6  F03A         	call	_RMRoutingTableCount	;wreg free
 17796  001AAA  0100               	movlb	0	; () banked
 17797  001AAC  5173               	movf	?_RMRoutingTableCount& (0+255),w,b
 17798  001AAE  1174               	iorwf	(?_RMRoutingTableCount+1)& (0+255),w,b
 17799  001AB0  E101 D756          	bz	l17590
 17800  001AB4  0012               	return	
 17801  001AB6                     l17634:
 17802                           
 17803                           ; BSR set to: 1
 17804                           ;NetworkManager.c: 126: if(isInvalidAddress(NetworkGetParentAddress())==1)
 17805  001AB6  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 17806  001ABA  C073  F085         	movff	?_NetworkGetParentAddress,isInvalidAddress@address
 17807  001ABE  C074  F086         	movff	?_NetworkGetParentAddress+1,isInvalidAddress@address+1
 17808  001AC2  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 17809  001AC6  06E8               	decf	wreg,f,c
 17810  001AC8  E0BA               	bz	l17618
 17811                           
 17812                           ; BSR set to: 0
 17813  001ACA  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17814  001ACE  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 17815  001AD2  0E07               	movlw	7
 17816  001AD4                     u21701:
 17817  001AD4  CFDB FFEB          	movff	plusw2,plusw0
 17818  001AD8  06E8               	decf	wreg,f,c
 17819  001ADA  E2FC               	bc	u21701
 17820  001ADC  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 17821  001AE0  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 17822  001AE2  0102               	movlb	2	; () banked
 17823  001AE4  5D28               	subwf	NetworkManagerTask@delay& (0+255),w,b
 17824  001AE6  0100               	movlb	0	; () banked
 17825  001AE8  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17826  001AEA  0102               	movlb	2	; () banked
 17827  001AEC  5929               	subwfb	(NetworkManagerTask@delay+1)& (0+255),w,b
 17828  001AEE  0100               	movlb	0	; () banked
 17829  001AF0  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17830  001AF2  0102               	movlb	2	; () banked
 17831  001AF4  592A               	subwfb	(NetworkManagerTask@delay+2)& (0+255),w,b
 17832  001AF6  0100               	movlb	0	; () banked
 17833  001AF8  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17834  001AFA  0102               	movlb	2	; () banked
 17835  001AFC  592B               	subwfb	(NetworkManagerTask@delay+3)& (0+255),w,b
 17836  001AFE  B0D8               	btfsc	status,0,c
 17837  001B00  0012               	return	
 17838                           
 17839                           ; BSR set to: 2
 17840  001B02  EC22  F03B         	call	_MiApp_IsNetworkBusy	;wreg free
 17841  001B06  0900               	iorlw	0
 17842  001B08  A4D8               	btfss	status,2,c
 17843  001B0A  0012               	return	
 17844                           
 17845                           ; BSR set to: 2
 17846                           ;NetworkManager.c: 130: {
 17847                           ;NetworkManager.c: 131: nst--;
 17848  001B0C  0101               	movlb	1	; () banked
 17849  001B0E  07C5               	decf	_nst& (0+255),f,b	;volatile
 17850                           
 17851                           ; BSR set to: 1
 17852                           ;NetworkManager.c: 132: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),data,Pac
      +                          ketCheckin,(0),0);
 17853  001B10  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
 17854  001B14  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 17855  001B18  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 17856  001B1C  0E44               	movlw	low NetworkManagerTask@data
 17857  001B1E  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 17858  001B20  0E01               	movlw	high NetworkManagerTask@data
 17859  001B22  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 17860  001B24  0E24               	movlw	36
 17861  001B26  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 17862  001B28  6B84               	clrf	NetworkPrepareSendPacket@data& (0+255),b
 17863  001B2A  6B85               	clrf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 17864  001B2C  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 17865  001B2E  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 17866  001B30  EC27  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 17867  001B34  C07F  F157         	movff	?_NetworkPrepareSendPacket,NetworkManagerTask@sz
 17868  001B38  C080  F158         	movff	?_NetworkPrepareSendPacket+1,NetworkManagerTask@sz+1
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;NetworkManager.c: 133: data[sz++]=NetworkGetDeviceType();
 17872  001B3C  0E44               	movlw	low NetworkManagerTask@data
 17873  001B3E  0101               	movlb	1	; () banked
 17874  001B40  2557               	addwf	NetworkManagerTask@sz& (0+255),w,b
 17875  001B42  6ED9               	movwf	fsr2l,c
 17876  001B44  0E01               	movlw	high NetworkManagerTask@data
 17877  001B46  2158               	addwfc	(NetworkManagerTask@sz+1)& (0+255),w,b
 17878  001B48  6EDA               	movwf	fsr2h,c
 17879  001B4A  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 17880  001B4E  6EDF               	movwf	indf2,c
 17881                           
 17882                           ; BSR set to: 1
 17883  001B50  4B57               	infsnz	NetworkManagerTask@sz& (0+255),f,b
 17884  001B52  2B58               	incf	(NetworkManagerTask@sz+1)& (0+255),f,b
 17885                           
 17886                           ; BSR set to: 1
 17887                           ;NetworkManager.c: 135: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),data
      +                          ,sz,isNetworkSecurityEnabled())==0)
 17888  001B54  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 17889  001B58  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 17890  001B5C  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 17891  001B60  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 17892  001B64  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 17893  001B68  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 17894  001B6C  0E44               	movlw	low NetworkManagerTask@data
 17895  001B6E  0100               	movlb	0	; () banked
 17896  001B70  6FC0               	movwf	radioUnicast@data& (0+255),b
 17897  001B72  0E01               	movlw	high NetworkManagerTask@data
 17898  001B74  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 17899  001B76  C157  F0C2         	movff	NetworkManagerTask@sz,radioUnicast@datasize
 17900  001B7A  EC06  F03B         	call	_isNetworkSecurityEnabled	;wreg free
 17901  001B7E  0100               	movlb	0	; () banked
 17902  001B80  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 17903  001B82  EC84  F035         	call	_radioUnicast	;wreg free
 17904  001B86  0900               	iorlw	0
 17905  001B88  E108               	bnz	l17654
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;NetworkManager.c: 136: {
 17909                           ;NetworkManager.c: 137: RouterEvicted(NetworkGetParentAddress());
 17910  001B8A  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 17911  001B8E  C073  F08E         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 17912  001B92  C074  F08F         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 17913  001B96  EC2F  F02E         	call	_RouterEvicted	;wreg free
 17914  001B9A                     l17654:
 17915                           
 17916                           ;NetworkManager.c: 138: }
 17917                           ;NetworkManager.c: 139: nState=netWaitReply;
 17918  001B9A  0E06               	movlw	6
 17919  001B9C  0101               	movlb	1	; () banked
 17920  001B9E  6FC3               	movwf	_nState& (0+255),b
 17921                           
 17922                           ; BSR set to: 1
 17923                           ;NetworkManager.c: 140: tStart=MSTickGet();
 17924  001BA0  EC27  F038         	call	_MSTickGet	;wreg free
 17925  001BA4  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17926  001BA8  0E07               	movlw	7
 17927  001BAA                     u21741:
 17928  001BAA  CFEB FFDB          	movff	plusw0,plusw2
 17929  001BAE  06E8               	decf	wreg,f,c
 17930  001BB0  E2FC               	bc	u21741
 17931  001BB2  0012               	return	
 17932  001BB4                     l17658:
 17933                           
 17934                           ; BSR set to: 1
 17935                           ;NetworkManager.c: 145: if(MSTickGetDiffNow(tStart)>((SPAN)1*1000ULL))
 17936  001BB4  EE22  F00C         	lfsr	2,NetworkManagerTask@tStart
 17937  001BB8  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 17938  001BBC  0E07               	movlw	7
 17939  001BBE                     u21751:
 17940  001BBE  CFDB FFEB          	movff	plusw2,plusw0
 17941  001BC2  06E8               	decf	wreg,f,c
 17942  001BC4  E2FC               	bc	u21751
 17943  001BC6  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 17944  001BCA  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 17945  001BCC  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 17946  001BCE  E107               	bnz	u21760
 17947  001BD0  0EE9               	movlw	233
 17948  001BD2  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 17949  001BD4  0E03               	movlw	3
 17950  001BD6  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 17951  001BD8  E301 D6DD          	bc	l17602
 17952  001BDC  0012               	return	
 17953  001BDE                     u21760:
 17954  001BDE  D6DB               	goto	l17602
 17955  001BE0                     l17668:
 17956  001BE0  0101               	movlb	1	; () banked
 17957  001BE2  51C3               	movf	_nState& (0+255),w,b
 17958                           
 17959                           ; Switch size 1, requested type "speed"
 17960                           ; Number of cases is 7, Range of values is 0 to 6
 17961                           ; switch strategies available:
 17962                           ; Name         Instructions Cycles
 17963                           ; simple_byte           22    12 (average)
 17964                           ;	Chosen strategy is simple_byte
 17965  001BE4  E101 D6B5          	bz	l17586
 17966  001BE8  0A01               	xorlw	1	; case 1
 17967  001BEA  E101 D6FD          	bz	l17608
 17968  001BEE  0A03               	xorlw	3	; case 2
 17969  001BF0  E101 D70E          	bz	l17614
 17970  001BF4  0A01               	xorlw	1	; case 3
 17971  001BF6  E101 D726          	bz	l17622
 17972  001BFA  0A07               	xorlw	7	; case 4
 17973  001BFC  E101 D6B4          	bz	l17592
 17974  001C00  0A01               	xorlw	1	; case 5
 17975  001C02  E101 D758          	bz	l17634
 17976  001C06  0A03               	xorlw	3	; case 6
 17977  001C08  E0D5               	bz	l17658
 17978  001C0A  0012               	return		;funcret
 17979  001C0C                     __end_of_NetworkManagerTask:
 17980                           	opt stack 0
 17981                           tblptru	equ	0xFF8
 17982                           tblptrh	equ	0xFF7
 17983                           tblptrl	equ	0xFF6
 17984                           tablat	equ	0xFF5
 17985                           prodh	equ	0xFF4
 17986                           prodl	equ	0xFF3
 17987                           intcon3	equ	0xFF0
 17988                           postinc0	equ	0xFEE
 17989                           plusw0	equ	0xFEB
 17990                           fsr0h	equ	0xFEA
 17991                           fsr0l	equ	0xFE9
 17992                           wreg	equ	0xFE8
 17993                           indf1	equ	0xFE7
 17994                           postdec1	equ	0xFE5
 17995                           plusw1	equ	0xFE3
 17996                           fsr1h	equ	0xFE2
 17997                           fsr1l	equ	0xFE1
 17998                           indf2	equ	0xFDF
 17999                           postinc2	equ	0xFDE
 18000                           postdec2	equ	0xFDD
 18001                           plusw2	equ	0xFDB
 18002                           fsr2h	equ	0xFDA
 18003                           fsr2l	equ	0xFD9
 18004                           status	equ	0xFD8
 18005                           
 18006 ;; *************** function _TransportManagerTask *****************
 18007 ;; Defined at:
 18008 ;;		line 59 in file "../TransportManager.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;		None
 18011 ;; Auto vars:     Size  Location     Type
 18012 ;;  databuff       64    0[BANK1 ] unsigned char [64]
 18013 ;;  i               2   66[BANK1 ] unsigned int 
 18014 ;;  sz              2   64[BANK1 ] unsigned int 
 18015 ;; Return value:  Size  Location     Type
 18016 ;;                  1    wreg      void 
 18017 ;; Registers used:
 18018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18019 ;; Tracked objects:
 18020 ;;		On entry : F/0
 18021 ;;		On exit  : E/0
 18022 ;;		Unchanged: 0/0
 18023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18025 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18026 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18027 ;;      Totals:         0       4      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18028 ;;Total ram usage:       72 bytes
 18029 ;; Hardware stack levels used:    1
 18030 ;; Hardware stack levels required when called:   12
 18031 ;; This function calls:
 18032 ;;		_CoordinatorGenericAddress
 18033 ;;		_MSTickGet
 18034 ;;		_MSTickGetDiffNow
 18035 ;;		_NetworkGetPANID
 18036 ;;		_NetworkGetParentAddress
 18037 ;;		_NetworkHasRoute
 18038 ;;		_NetworkPrepareSendPacket
 18039 ;;		_RouterEvicted
 18040 ;;		_memcpy
 18041 ;;		_radioUnicast
 18042 ;; This function is called by:
 18043 ;;		_NetworkManagerTask
 18044 ;; This function uses a non-reentrant model
 18045 ;;
 18046                           
 18047                           	psect	text76
 18048  000B32                     __ptext76:
 18049                           	opt stack 0
 18050  000B32                     _TransportManagerTask:
 18051                           	opt stack 16
 18052                           
 18053                           ; BSR set to: 0
 18054                           ;TransportManager.c: 61: uint8_t databuff[64];
 18055                           ;TransportManager.c: 62: uint16_t i;
 18056                           ;TransportManager.c: 63: uint16_t sz;
 18057                           ;TransportManager.c: 64: switch(TMState)
 18058                           
 18059                           ;incstack = 0
 18060  000B32  D051               	goto	l17316
 18061  000B34                     l17290:
 18062                           
 18063                           ;TransportManager.c: 67: TMState=TMWaitRoute;
 18064  000B34  0E01               	movlw	1
 18065  000B36  D005               	goto	L6
 18066  000B38                     l17292:
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;TransportManager.c: 71: if(NetworkHasRoute()==1)
 18070  000B38  ECF0  F037         	call	_NetworkHasRoute	;wreg free
 18071  000B3C  06E8               	decf	wreg,f,c
 18072  000B3E  E151               	bnz	l17318
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;TransportManager.c: 72: {
 18076                           ;TransportManager.c: 73: TMState=TMOperating;
 18077  000B40  0E02               	movlw	2
 18078  000B42                     L6:
 18079  000B42  6E3F               	movwf	_TMState,c
 18080  000B44  D04E               	goto	l17318
 18081  000B46                     l17296:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;TransportManager.c: 78: if(NetworkHasRoute()==0)
 18085  000B46  ECF0  F037         	call	_NetworkHasRoute	;wreg free
 18086  000B4A  0900               	iorlw	0
 18087  000B4C  E14A               	bnz	l17318
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;TransportManager.c: 79: {
 18091                           ;TransportManager.c: 80: for(i=0;i<2;i++)
 18092  000B4E  0101               	movlb	1	; () banked
 18093  000B50  6B42               	clrf	TransportManagerTask@i& (0+255),b
 18094  000B52  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 18095  000B54                     l17304:
 18096                           
 18097                           ; BSR set to: 1
 18098                           ;TransportManager.c: 81: {
 18099                           ;TransportManager.c: 82: if(TMQ[i].TMQState!=TMQIdle)
 18100  000B54  0E4C               	movlw	76
 18101  000B56  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18102  000B58  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18103  000B5C  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18104  000B60  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18105  000B62  50F3               	movf	prodl,w,c
 18106  000B64  0100               	movlb	0	; () banked
 18107  000B66  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18108  000B68  0E4B               	movlw	low (_TMQ+75)
 18109  000B6A  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18110  000B6C  6ED9               	movwf	fsr2l,c
 18111  000B6E  0E06               	movlw	high (_TMQ+75)
 18112  000B70  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18113  000B72  6EDA               	movwf	fsr2h,c
 18114  000B74  50DF               	movf	indf2,w,c
 18115  000B76  E026               	bz	l17308
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;TransportManager.c: 83: {
 18119                           ;TransportManager.c: 84: TMQ[i].TMQState=TMQSend;
 18120  000B78  0E4C               	movlw	76
 18121  000B7A  0101               	movlb	1	; () banked
 18122  000B7C  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18123  000B7E  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18124  000B82  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18125  000B86  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18126  000B88  50F3               	movf	prodl,w,c
 18127  000B8A  0100               	movlb	0	; () banked
 18128  000B8C  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18129  000B8E  0E4B               	movlw	low (_TMQ+75)
 18130  000B90  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18131  000B92  6ED9               	movwf	fsr2l,c
 18132  000B94  0E06               	movlw	high (_TMQ+75)
 18133  000B96  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18134  000B98  6EDA               	movwf	fsr2h,c
 18135  000B9A  0E01               	movlw	1
 18136  000B9C  6EDF               	movwf	indf2,c
 18137                           
 18138                           ;TransportManager.c: 85: TMQ[i].retryCount=0;
 18139  000B9E  0E4C               	movlw	76
 18140  000BA0  0101               	movlb	1	; () banked
 18141  000BA2  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18142  000BA4  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18143  000BA8  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18144  000BAC  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18145  000BAE  50F3               	movf	prodl,w,c
 18146  000BB0  0100               	movlb	0	; () banked
 18147  000BB2  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18148  000BB4  0E49               	movlw	low (_TMQ+73)
 18149  000BB6  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18150  000BB8  6ED9               	movwf	fsr2l,c
 18151  000BBA  0E06               	movlw	high (_TMQ+73)
 18152  000BBC  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18153  000BBE  6EDA               	movwf	fsr2h,c
 18154  000BC0  0E00               	movlw	0
 18155  000BC2  6EDF               	movwf	indf2,c
 18156  000BC4                     l17308:
 18157                           
 18158                           ; BSR set to: 0
 18159  000BC4  0101               	movlb	1	; () banked
 18160  000BC6  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 18161  000BC8  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 18162                           
 18163                           ; BSR set to: 1
 18164  000BCA  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 18165  000BCC  E1B3               	bnz	l17290
 18166  000BCE  0E02               	movlw	2
 18167  000BD0  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 18168  000BD2  E2B0               	bc	l17290
 18169  000BD4  D7BF               	goto	l17304
 18170  000BD6                     l17316:
 18171                           
 18172                           ; BSR set to: 0
 18173  000BD6  503F               	movf	_TMState,w,c
 18174                           
 18175                           ; Switch size 1, requested type "speed"
 18176                           ; Number of cases is 3, Range of values is 0 to 2
 18177                           ; switch strategies available:
 18178                           ; Name         Instructions Cycles
 18179                           ; simple_byte           10     6 (average)
 18180                           ;	Chosen strategy is simple_byte
 18181  000BD8  E0AD               	bz	l17290
 18182  000BDA  0A01               	xorlw	1	; case 1
 18183  000BDC  E0AD               	bz	l17292
 18184  000BDE  0A03               	xorlw	3	; case 2
 18185  000BE0  E0B2               	bz	l17296
 18186  000BE2                     l17318:
 18187                           
 18188                           ;TransportManager.c: 93: if(TMState==TMOperating)
 18189  000BE2  0E02               	movlw	2
 18190  000BE4  183F               	xorwf	_TMState,w,c
 18191  000BE6  A4D8               	btfss	status,2,c
 18192  000BE8  0012               	return	
 18193                           
 18194                           ;TransportManager.c: 94: {
 18195                           ;TransportManager.c: 95: for(i=0;i<2;i++)
 18196  000BEA  0101               	movlb	1	; () banked
 18197  000BEC  6B42               	clrf	TransportManagerTask@i& (0+255),b
 18198  000BEE  6B43               	clrf	(TransportManagerTask@i+1)& (0+255),b
 18199  000BF0  D195               	goto	l17360
 18200  000BF2                     l17326:
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;TransportManager.c: 103: if(TMQ[i].datasize>0)
 18204  000BF2  0E4C               	movlw	76
 18205  000BF4  0101               	movlb	1	; () banked
 18206  000BF6  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18207  000BF8  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18208  000BFC  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18209  000C00  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18210  000C02  50F3               	movf	prodl,w,c
 18211  000C04  0100               	movlb	0	; () banked
 18212  000C06  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18213  000C08  0E40               	movlw	low (_TMQ+64)
 18214  000C0A  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18215  000C0C  6ED9               	movwf	fsr2l,c
 18216  000C0E  0E06               	movlw	high (_TMQ+64)
 18217  000C10  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18218  000C12  6EDA               	movwf	fsr2h,c
 18219  000C14  50DF               	movf	indf2,w,c
 18220  000C16  E101 D199          	bz	l17362
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;TransportManager.c: 104: {
 18224                           ;TransportManager.c: 105: if(TMQ[i].flags.isFormedPacket==0)
 18225  000C1A  0E4C               	movlw	76
 18226  000C1C  0101               	movlb	1	; () banked
 18227  000C1E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18228  000C20  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18229  000C24  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18230  000C28  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18231  000C2A  50F3               	movf	prodl,w,c
 18232  000C2C  0100               	movlb	0	; () banked
 18233  000C2E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18234  000C30  0E4A               	movlw	low (_TMQ+74)
 18235  000C32  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18236  000C34  6ED9               	movwf	fsr2l,c
 18237  000C36  0E06               	movlw	high (_TMQ+74)
 18238  000C38  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18239  000C3A  6EDA               	movwf	fsr2h,c
 18240  000C3C  0106               	movlb	6	; () banked
 18241  000C3E  B0DF               	btfsc	indf2,0,c
 18242  000C40  D038               	goto	l17332
 18243                           
 18244                           ; BSR set to: 6
 18245                           ;TransportManager.c: 106: {
 18246                           ;TransportManager.c: 107: sz=NetworkPrepareSendPacket(CoordinatorGenericAddress(),databu
      +                          ff,PacketData,TMQ[i].data,TMQ[i].datasize);
 18247  000C42  EC84  F039         	call	_CoordinatorGenericAddress	;wreg free
 18248  000C46  C07B  F07F         	movff	?_CoordinatorGenericAddress,NetworkPrepareSendPacket@address
 18249  000C4A  C07C  F080         	movff	?_CoordinatorGenericAddress+1,NetworkPrepareSendPacket@address+1
 18250  000C4E  0E00               	movlw	low TransportManagerTask@databuff
 18251  000C50  6F81               	movwf	NetworkPrepareSendPacket@buffer& (0+255),b
 18252  000C52  0E01               	movlw	high TransportManagerTask@databuff
 18253  000C54  6F82               	movwf	(NetworkPrepareSendPacket@buffer+1)& (0+255),b
 18254  000C56  0E23               	movlw	35
 18255  000C58  6F83               	movwf	NetworkPrepareSendPacket@pType& (0+255),b
 18256  000C5A  0E4C               	movlw	76
 18257  000C5C  0101               	movlb	1	; () banked
 18258  000C5E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18259  000C60  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18260  000C64  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18261  000C68  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18262  000C6A  50F3               	movf	prodl,w,c
 18263  000C6C  0100               	movlb	0	; () banked
 18264  000C6E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18265  000C70  0E00               	movlw	low _TMQ
 18266  000C72  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18267  000C74  6F84               	movwf	NetworkPrepareSendPacket@data& (0+255),b
 18268  000C76  0E06               	movlw	high _TMQ
 18269  000C78  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18270  000C7A  6F85               	movwf	(NetworkPrepareSendPacket@data+1)& (0+255),b
 18271  000C7C  0E4C               	movlw	76
 18272  000C7E  0101               	movlb	1	; () banked
 18273  000C80  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18274  000C82  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 18275  000C86  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 18276  000C8A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18277  000C8C  50F3               	movf	prodl,w,c
 18278  000C8E  0100               	movlb	0	; () banked
 18279  000C90  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 18280  000C92  0E40               	movlw	low (_TMQ+64)
 18281  000C94  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 18282  000C96  6ED9               	movwf	fsr2l,c
 18283  000C98  0E06               	movlw	high (_TMQ+64)
 18284  000C9A  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 18285  000C9C  6EDA               	movwf	fsr2h,c
 18286  000C9E  50DF               	movf	indf2,w,c
 18287  000CA0  6F86               	movwf	NetworkPrepareSendPacket@size& (0+255),b
 18288  000CA2  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 18289  000CA4  EC27  F02A         	call	_NetworkPrepareSendPacket	;wreg free
 18290  000CA8  C07F  F140         	movff	?_NetworkPrepareSendPacket,TransportManagerTask@sz
 18291  000CAC  C080  F141         	movff	?_NetworkPrepareSendPacket+1,TransportManagerTask@sz+1
 18292                           
 18293                           ;TransportManager.c: 108: }else
 18294  000CB0  D041               	goto	l17336
 18295  000CB2                     l17332:
 18296                           
 18297                           ; BSR set to: 6
 18298                           ;TransportManager.c: 109: {
 18299                           ;TransportManager.c: 110: memcpy(databuff,TMQ[i].data,TMQ[i].datasize);
 18300  000CB2  0E00               	movlw	low TransportManagerTask@databuff
 18301  000CB4  0100               	movlb	0	; () banked
 18302  000CB6  6F75               	movwf	memcpy@d1& (0+255),b
 18303  000CB8  0E01               	movlw	high TransportManagerTask@databuff
 18304  000CBA  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 18305  000CBC  0E4C               	movlw	76
 18306  000CBE  0101               	movlb	1	; () banked
 18307  000CC0  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18308  000CC2  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18309  000CC6  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18310  000CCA  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18311  000CCC  50F3               	movf	prodl,w,c
 18312  000CCE  0100               	movlb	0	; () banked
 18313  000CD0  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18314  000CD2  0E00               	movlw	low _TMQ
 18315  000CD4  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18316  000CD6  6F77               	movwf	memcpy@s1& (0+255),b
 18317  000CD8  0E06               	movlw	high _TMQ
 18318  000CDA  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18319  000CDC  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 18320  000CDE  0E4C               	movlw	76
 18321  000CE0  0101               	movlb	1	; () banked
 18322  000CE2  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18323  000CE4  CFF3 F0C7          	movff	prodl,??_TransportManagerTask+2
 18324  000CE8  CFF4 F0C8          	movff	prodh,??_TransportManagerTask+3
 18325  000CEC  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18326  000CEE  50F3               	movf	prodl,w,c
 18327  000CF0  0100               	movlb	0	; () banked
 18328  000CF2  27C8               	addwf	(??_TransportManagerTask+3)& (0+255),f,b
 18329  000CF4  0E40               	movlw	low (_TMQ+64)
 18330  000CF6  25C7               	addwf	(??_TransportManagerTask+2)& (0+255),w,b
 18331  000CF8  6ED9               	movwf	fsr2l,c
 18332  000CFA  0E06               	movlw	high (_TMQ+64)
 18333  000CFC  21C8               	addwfc	(??_TransportManagerTask+3)& (0+255),w,b
 18334  000CFE  6EDA               	movwf	fsr2h,c
 18335  000D00  50DF               	movf	indf2,w,c
 18336  000D02  6F79               	movwf	memcpy@n& (0+255),b
 18337  000D04  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 18338  000D06  EC05  F035         	call	_memcpy	;wreg free
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;TransportManager.c: 111: sz=TMQ[i].datasize;
 18342  000D0A  0E4C               	movlw	76
 18343  000D0C  0101               	movlb	1	; () banked
 18344  000D0E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18345  000D10  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18346  000D14  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18347  000D18  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18348  000D1A  50F3               	movf	prodl,w,c
 18349  000D1C  0100               	movlb	0	; () banked
 18350  000D1E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18351  000D20  0E40               	movlw	low (_TMQ+64)
 18352  000D22  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18353  000D24  6ED9               	movwf	fsr2l,c
 18354  000D26  0E06               	movlw	high (_TMQ+64)
 18355  000D28  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18356  000D2A  6EDA               	movwf	fsr2h,c
 18357  000D2C  50DF               	movf	indf2,w,c
 18358  000D2E  0101               	movlb	1	; () banked
 18359  000D30  6F40               	movwf	TransportManagerTask@sz& (0+255),b
 18360  000D32  6B41               	clrf	(TransportManagerTask@sz+1)& (0+255),b
 18361  000D34                     l17336:
 18362                           
 18363                           ;TransportManager.c: 112: }
 18364                           ;TransportManager.c: 113: if(radioUnicast(NetworkGetParentAddress(),NetworkGetPANID(),da
      +                          tabuff,sz, TMQ[i].flags.isSecure)==1)
 18365  000D34  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 18366  000D38  C073  F0BC         	movff	?_NetworkGetParentAddress,radioUnicast@dest
 18367  000D3C  C074  F0BD         	movff	?_NetworkGetParentAddress+1,radioUnicast@dest+1
 18368  000D40  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 18369  000D44  C073  F0BE         	movff	?_NetworkGetPANID,radioUnicast@PANID
 18370  000D48  C074  F0BF         	movff	?_NetworkGetPANID+1,radioUnicast@PANID+1
 18371  000D4C  0E00               	movlw	low TransportManagerTask@databuff
 18372  000D4E  0100               	movlb	0	; () banked
 18373  000D50  6FC0               	movwf	radioUnicast@data& (0+255),b
 18374  000D52  0E01               	movlw	high TransportManagerTask@databuff
 18375  000D54  6FC1               	movwf	(radioUnicast@data+1)& (0+255),b
 18376  000D56  C140  F0C2         	movff	TransportManagerTask@sz,radioUnicast@datasize
 18377  000D5A  0E4C               	movlw	76
 18378  000D5C  0101               	movlb	1	; () banked
 18379  000D5E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18380  000D60  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18381  000D64  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18382  000D68  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18383  000D6A  50F3               	movf	prodl,w,c
 18384  000D6C  0100               	movlb	0	; () banked
 18385  000D6E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18386  000D70  0E4A               	movlw	low (_TMQ+74)
 18387  000D72  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18388  000D74  6ED9               	movwf	fsr2l,c
 18389  000D76  0E06               	movlw	high (_TMQ+74)
 18390  000D78  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18391  000D7A  6EDA               	movwf	fsr2h,c
 18392  000D7C  0E00               	movlw	0
 18393  000D7E  B2DF               	btfsc	indf2,1,c
 18394  000D80  0E01               	movlw	1
 18395  000D82  6FC3               	movwf	radioUnicast@isSecure& (0+255),b
 18396  000D84  EC84  F035         	call	_radioUnicast	;wreg free
 18397  000D88  06E8               	decf	wreg,f,c
 18398  000D8A  E113               	bnz	l17340
 18399  000D8C                     l17338:
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;TransportManager.c: 114: {
 18403                           ;TransportManager.c: 116: TMQ[i].TMQState=TMQIdle;
 18404  000D8C  0E4C               	movlw	76
 18405  000D8E  0101               	movlb	1	; () banked
 18406  000D90  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18407  000D92  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18408  000D96  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18409  000D9A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18410  000D9C  50F3               	movf	prodl,w,c
 18411  000D9E  0100               	movlb	0	; () banked
 18412  000DA0  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18413  000DA2  0E4B               	movlw	low (_TMQ+75)
 18414  000DA4  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18415  000DA6  6ED9               	movwf	fsr2l,c
 18416  000DA8  0E06               	movlw	high (_TMQ+75)
 18417  000DAA  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18418  000DAC  6EDA               	movwf	fsr2h,c
 18419  000DAE  0E00               	movlw	0
 18420  000DB0  D0B3               	goto	L8
 18421  000DB2                     l17340:
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;TransportManager.c: 118: {
 18425                           ;TransportManager.c: 120: TMQ[i].tick=MSTickGet();
 18426  000DB2  EC27  F038         	call	_MSTickGet	;wreg free
 18427  000DB6  0E4C               	movlw	76
 18428  000DB8  0101               	movlb	1	; () banked
 18429  000DBA  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18430  000DBC  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18431  000DC0  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18432  000DC4  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18433  000DC6  50F3               	movf	prodl,w,c
 18434  000DC8  0100               	movlb	0	; () banked
 18435  000DCA  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18436  000DCC  0E41               	movlw	low (_TMQ+65)
 18437  000DCE  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18438  000DD0  6ED9               	movwf	fsr2l,c
 18439  000DD2  0E06               	movlw	high (_TMQ+65)
 18440  000DD4  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18441  000DD6  6EDA               	movwf	fsr2h,c
 18442  000DD8  0E07               	movlw	7
 18443  000DDA                     u21401:
 18444  000DDA  CFEB FFDB          	movff	plusw0,plusw2
 18445  000DDE  06E8               	decf	wreg,f,c
 18446  000DE0  E2FC               	bc	u21401
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;TransportManager.c: 121: TMQ[i].retryCount++;
 18450  000DE2  0E4C               	movlw	76
 18451  000DE4  0101               	movlb	1	; () banked
 18452  000DE6  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18453  000DE8  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18454  000DEC  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18455  000DF0  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18456  000DF2  50F3               	movf	prodl,w,c
 18457  000DF4  0100               	movlb	0	; () banked
 18458  000DF6  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18459  000DF8  0E49               	movlw	low (_TMQ+73)
 18460  000DFA  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18461  000DFC  6ED9               	movwf	fsr2l,c
 18462  000DFE  0E06               	movlw	high (_TMQ+73)
 18463  000E00  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18464  000E02  6EDA               	movwf	fsr2h,c
 18465  000E04  2ADF               	incf	indf2,f,c
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;TransportManager.c: 122: if(TMQ[i].retryCount<3)
 18469  000E06  0E4C               	movlw	76
 18470  000E08  0101               	movlb	1	; () banked
 18471  000E0A  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18472  000E0C  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18473  000E10  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18474  000E14  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18475  000E16  50F3               	movf	prodl,w,c
 18476  000E18  0100               	movlb	0	; () banked
 18477  000E1A  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18478  000E1C  0E49               	movlw	low (_TMQ+73)
 18479  000E1E  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18480  000E20  6ED9               	movwf	fsr2l,c
 18481  000E22  0E06               	movlw	high (_TMQ+73)
 18482  000E24  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18483  000E26  6EDA               	movwf	fsr2h,c
 18484  000E28  0E03               	movlw	3
 18485  000E2A  60DF               	cpfslt	indf2,c
 18486  000E2C  D013               	goto	l17348
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;TransportManager.c: 123: {
 18490                           ;TransportManager.c: 124: TMQ[i].TMQState=TMQWaitRetry;
 18491  000E2E  0E4C               	movlw	76
 18492  000E30  0101               	movlb	1	; () banked
 18493  000E32  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18494  000E34  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18495  000E38  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18496  000E3C  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18497  000E3E  50F3               	movf	prodl,w,c
 18498  000E40  0100               	movlb	0	; () banked
 18499  000E42  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18500  000E44  0E4B               	movlw	low (_TMQ+75)
 18501  000E46  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18502  000E48  6ED9               	movwf	fsr2l,c
 18503  000E4A  0E06               	movlw	high (_TMQ+75)
 18504  000E4C  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18505  000E4E  6EDA               	movwf	fsr2h,c
 18506  000E50  0E02               	movlw	2
 18507  000E52  D062               	goto	L8
 18508  000E54                     l17348:
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;TransportManager.c: 126: {
 18512                           ;TransportManager.c: 128: TMQ[i].TMQState=TMQWaitRetry;
 18513  000E54  0E4C               	movlw	76
 18514  000E56  0101               	movlb	1	; () banked
 18515  000E58  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18516  000E5A  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18517  000E5E  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18518  000E62  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18519  000E64  50F3               	movf	prodl,w,c
 18520  000E66  0100               	movlb	0	; () banked
 18521  000E68  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18522  000E6A  0E4B               	movlw	low (_TMQ+75)
 18523  000E6C  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18524  000E6E  6ED9               	movwf	fsr2l,c
 18525  000E70  0E06               	movlw	high (_TMQ+75)
 18526  000E72  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18527  000E74  6EDA               	movwf	fsr2h,c
 18528  000E76  0E02               	movlw	2
 18529  000E78  6EDF               	movwf	indf2,c
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;TransportManager.c: 129: RouterEvicted(NetworkGetParentAddress());
 18533  000E7A  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 18534  000E7E  C073  F08E         	movff	?_NetworkGetParentAddress,RouterEvicted@address
 18535  000E82  C074  F08F         	movff	?_NetworkGetParentAddress+1,RouterEvicted@address+1
 18536  000E86  EC2F  F02E         	call	_RouterEvicted	;wreg free
 18537  000E8A  D060               	goto	l17362
 18538  000E8C                     l17352:
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;TransportManager.c: 136: if(MSTickGetDiffNow(TMQ[i].tick)>((SPAN)4000))
 18542  000E8C  0E4C               	movlw	76
 18543  000E8E  0101               	movlb	1	; () banked
 18544  000E90  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18545  000E92  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18546  000E96  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18547  000E9A  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18548  000E9C  50F3               	movf	prodl,w,c
 18549  000E9E  0100               	movlb	0	; () banked
 18550  000EA0  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18551  000EA2  0E41               	movlw	low (_TMQ+65)
 18552  000EA4  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18553  000EA6  6ED9               	movwf	fsr2l,c
 18554  000EA8  0E06               	movlw	high (_TMQ+65)
 18555  000EAA  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18556  000EAC  6EDA               	movwf	fsr2h,c
 18557  000EAE  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 18558  000EB2  0E07               	movlw	7
 18559  000EB4                     u21421:
 18560  000EB4  CFDB FFEB          	movff	plusw2,plusw0
 18561  000EB8  06E8               	decf	wreg,f,c
 18562  000EBA  E2FC               	bc	u21421
 18563  000EBC  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 18564  000EC0  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 18565  000EC2  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 18566  000EC4  E105               	bnz	u21430
 18567  000EC6  0EA1               	movlw	161
 18568  000EC8  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 18569  000ECA  0E0F               	movlw	15
 18570  000ECC  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 18571  000ECE  E33E               	bnc	l17362
 18572  000ED0                     u21430:
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;TransportManager.c: 137: {
 18576                           ;TransportManager.c: 138: TMQ[i].retryCount++;
 18577  000ED0  0E4C               	movlw	76
 18578  000ED2  0101               	movlb	1	; () banked
 18579  000ED4  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18580  000ED6  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18581  000EDA  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18582  000EDE  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18583  000EE0  50F3               	movf	prodl,w,c
 18584  000EE2  0100               	movlb	0	; () banked
 18585  000EE4  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18586  000EE6  0E49               	movlw	low (_TMQ+73)
 18587  000EE8  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18588  000EEA  6ED9               	movwf	fsr2l,c
 18589  000EEC  0E06               	movlw	high (_TMQ+73)
 18590  000EEE  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18591  000EF0  6EDA               	movwf	fsr2h,c
 18592  000EF2  2ADF               	incf	indf2,f,c
 18593                           
 18594                           ;TransportManager.c: 139: TMQ[i].TMQState=TMQSend;
 18595  000EF4  0E4C               	movlw	76
 18596  000EF6  0101               	movlb	1	; () banked
 18597  000EF8  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18598  000EFA  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18599  000EFE  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18600  000F02  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18601  000F04  50F3               	movf	prodl,w,c
 18602  000F06  0100               	movlb	0	; () banked
 18603  000F08  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18604  000F0A  0E4B               	movlw	low (_TMQ+75)
 18605  000F0C  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18606  000F0E  6ED9               	movwf	fsr2l,c
 18607  000F10  0E06               	movlw	high (_TMQ+75)
 18608  000F12  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18609  000F14  6EDA               	movwf	fsr2h,c
 18610  000F16  0E01               	movlw	1
 18611  000F18                     L8:
 18612  000F18  6EDF               	movwf	indf2,c
 18613  000F1A  D018               	goto	l17362
 18614  000F1C                     l17360:
 18615                           
 18616                           ; BSR set to: 1
 18617  000F1C  0E4C               	movlw	76
 18618  000F1E  0342               	mulwf	TransportManagerTask@i& (0+255),b
 18619  000F20  CFF3 F0C5          	movff	prodl,??_TransportManagerTask
 18620  000F24  CFF4 F0C6          	movff	prodh,??_TransportManagerTask+1
 18621  000F28  0343               	mulwf	(TransportManagerTask@i+1)& (0+255),b
 18622  000F2A  50F3               	movf	prodl,w,c
 18623  000F2C  0100               	movlb	0	; () banked
 18624  000F2E  27C6               	addwf	(??_TransportManagerTask+1)& (0+255),f,b
 18625  000F30  0E4B               	movlw	low (_TMQ+75)
 18626  000F32  25C5               	addwf	??_TransportManagerTask& (0+255),w,b
 18627  000F34  6ED9               	movwf	fsr2l,c
 18628  000F36  0E06               	movlw	high (_TMQ+75)
 18629  000F38  21C6               	addwfc	(??_TransportManagerTask+1)& (0+255),w,b
 18630  000F3A  6EDA               	movwf	fsr2h,c
 18631  000F3C  50DF               	movf	indf2,w,c
 18632                           
 18633                           ; Switch size 1, requested type "speed"
 18634                           ; Number of cases is 3, Range of values is 0 to 2
 18635                           ; switch strategies available:
 18636                           ; Name         Instructions Cycles
 18637                           ; simple_byte           10     6 (average)
 18638                           ;	Chosen strategy is simple_byte
 18639  000F3E  E006               	bz	l17362
 18640  000F40  0A01               	xorlw	1	; case 1
 18641  000F42  E101 D656          	bz	l17326
 18642  000F46  0A03               	xorlw	3	; case 2
 18643  000F48  E0A1               	bz	l17352
 18644  000F4A  D720               	goto	l17338
 18645  000F4C                     l17362:
 18646  000F4C  0101               	movlb	1	; () banked
 18647  000F4E  4B42               	infsnz	TransportManagerTask@i& (0+255),f,b
 18648  000F50  2B43               	incf	(TransportManagerTask@i+1)& (0+255),f,b
 18649                           
 18650                           ; BSR set to: 1
 18651  000F52  5143               	movf	(TransportManagerTask@i+1)& (0+255),w,b
 18652  000F54  E103               	bnz	u21440
 18653  000F56  0E02               	movlw	2
 18654  000F58  5D42               	subwf	TransportManagerTask@i& (0+255),w,b
 18655  000F5A  E3E0               	bnc	l17360
 18656  000F5C                     u21440:
 18657  000F5C  0012               	return		;funcret
 18658  000F5E                     __end_of_TransportManagerTask:
 18659                           	opt stack 0
 18660                           tblptru	equ	0xFF8
 18661                           tblptrh	equ	0xFF7
 18662                           tblptrl	equ	0xFF6
 18663                           tablat	equ	0xFF5
 18664                           prodh	equ	0xFF4
 18665                           prodl	equ	0xFF3
 18666                           intcon3	equ	0xFF0
 18667                           postinc0	equ	0xFEE
 18668                           plusw0	equ	0xFEB
 18669                           fsr0h	equ	0xFEA
 18670                           fsr0l	equ	0xFE9
 18671                           wreg	equ	0xFE8
 18672                           indf1	equ	0xFE7
 18673                           postdec1	equ	0xFE5
 18674                           plusw1	equ	0xFE3
 18675                           fsr1h	equ	0xFE2
 18676                           fsr1l	equ	0xFE1
 18677                           indf2	equ	0xFDF
 18678                           postinc2	equ	0xFDE
 18679                           postdec2	equ	0xFDD
 18680                           plusw2	equ	0xFDB
 18681                           fsr2h	equ	0xFDA
 18682                           fsr2l	equ	0xFD9
 18683                           status	equ	0xFD8
 18684                           
 18685 ;; *************** function _radioUnicast *****************
 18686 ;; Defined at:
 18687 ;;		line 129 in file "../src/Bridge.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  dest            2   92[BANK0 ] struct addr_t_def
 18690 ;;  PANID           2   94[BANK0 ] unsigned int 
 18691 ;;  data            2   96[BANK0 ] PTR unsigned char 
 18692 ;;		 -> NetworkIssueDataRequest@data(10), NetworkManagerProcessIncomingData@buffer(64), NetworkManagerTask@data(19), TMS
      +endDataToRFD@databuff(64), 
 18693 ;;		 -> TransportManagerTask@databuff(64), RxPacket.Payload(64), RxPacket(142), 
 18694 ;;  datasize        1   98[BANK0 ] unsigned char 
 18695 ;;  isSecure        1   99[BANK0 ] unsigned char 
 18696 ;; Auto vars:     Size  Location     Type
 18697 ;;  i               1  100[BANK0 ] unsigned char 
 18698 ;; Return value:  Size  Location     Type
 18699 ;;                  1    wreg      unsigned char 
 18700 ;; Registers used:
 18701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18702 ;; Tracked objects:
 18703 ;;		On entry : C/1
 18704 ;;		On exit  : F/0
 18705 ;;		Unchanged: 0/0
 18706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18707 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18710 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18711 ;;Total ram usage:        9 bytes
 18712 ;; Hardware stack levels used:    1
 18713 ;; Hardware stack levels required when called:   11
 18714 ;; This function calls:
 18715 ;;		_SendPacket
 18716 ;; This function is called by:
 18717 ;;		_radioReceivedPacket
 18718 ;;		_TransportManagerTask
 18719 ;;		_TMSendFormedPacketToRFD
 18720 ;;		_NetworkManagerTask
 18721 ;; This function uses a non-reentrant model
 18722 ;;
 18723                           
 18724                           	psect	text77
 18725  006B08                     __ptext77:
 18726                           	opt stack 0
 18727  006B08                     _radioUnicast:
 18728                           	opt stack 15
 18729                           
 18730                           ;Bridge.c: 131: static addr_t addr;
 18731                           ;Bridge.c: 132: uint8_t i;
 18732                           ;Bridge.c: 133: addr=dest;
 18733                           
 18734                           ;incstack = 0
 18735  006B08  C0BC  F1ED         	movff	radioUnicast@dest,radioUnicast@addr
 18736  006B0C  C0BD  F1EE         	movff	radioUnicast@dest+1,radioUnicast@addr+1
 18737                           
 18738                           ;Bridge.c: 134: TxIndex=0;
 18739  006B10  6A40               	clrf	_TxIndex,c
 18740                           
 18741                           ;Bridge.c: 135: for(i=0;i<datasize;i++)
 18742  006B12  0100               	movlb	0	; () banked
 18743  006B14  6BC4               	clrf	radioUnicast@i& (0+255),b
 18744  006B16  D010               	goto	l15804
 18745  006B18                     l15798:
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;Bridge.c: 136: {
 18749                           ;Bridge.c: 137: TxBuff[TxIndex++]=data[i];
 18750  006B18  51C4               	movf	radioUnicast@i& (0+255),w,b
 18751  006B1A  25C0               	addwf	radioUnicast@data& (0+255),w,b
 18752  006B1C  6ED9               	movwf	fsr2l,c
 18753  006B1E  0E00               	movlw	0
 18754  006B20  21C1               	addwfc	(radioUnicast@data+1)& (0+255),w,b
 18755  006B22  6EDA               	movwf	fsr2h,c
 18756  006B24  0E48               	movlw	low _TxBuff
 18757  006B26  2440               	addwf	_TxIndex,w,c
 18758  006B28  6EE1               	movwf	fsr1l,c
 18759  006B2A  6AE2               	clrf	fsr1h,c
 18760  006B2C  0E07               	movlw	high _TxBuff
 18761  006B2E  22E2               	addwfc	fsr1h,f,c
 18762  006B30  CFDF FFE7          	movff	indf2,indf1
 18763                           
 18764                           ; BSR set to: 0
 18765  006B34  2A40               	incf	_TxIndex,f,c
 18766                           
 18767                           ; BSR set to: 0
 18768  006B36  2BC4               	incf	radioUnicast@i& (0+255),f,b
 18769  006B38                     l15804:
 18770                           
 18771                           ; BSR set to: 0
 18772  006B38  51C2               	movf	radioUnicast@datasize& (0+255),w,b
 18773  006B3A  5DC4               	subwf	radioUnicast@i& (0+255),w,b
 18774  006B3C  E3ED               	bnc	l15798
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;Bridge.c: 138: }
 18778                           ;Bridge.c: 139: return SendPacket(0,addr.bytes,PANID,0,isSecure);
 18779  006B3E  0EED               	movlw	low radioUnicast@addr
 18780  006B40  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 18781  006B42  0E01               	movlw	high radioUnicast@addr
 18782  006B44  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 18783  006B46  C0BE  F0B0         	movff	radioUnicast@PANID,SendPacket@destinationPANID
 18784  006B4A  C0BF  F0B1         	movff	radioUnicast@PANID+1,SendPacket@destinationPANID+1
 18785  006B4E  0E00               	movlw	0
 18786  006B50  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 18787  006B52  C0C3  F0B3         	movff	radioUnicast@isSecure,SendPacket@SecurityEnabled
 18788  006B56  EFA5  F02F         	goto	_SendPacket
 18789  006B5A                     __end_of_radioUnicast:
 18790                           	opt stack 0
 18791                           tblptru	equ	0xFF8
 18792                           tblptrh	equ	0xFF7
 18793                           tblptrl	equ	0xFF6
 18794                           tablat	equ	0xFF5
 18795                           prodh	equ	0xFF4
 18796                           prodl	equ	0xFF3
 18797                           intcon3	equ	0xFF0
 18798                           postinc0	equ	0xFEE
 18799                           plusw0	equ	0xFEB
 18800                           fsr0h	equ	0xFEA
 18801                           fsr0l	equ	0xFE9
 18802                           wreg	equ	0xFE8
 18803                           indf1	equ	0xFE7
 18804                           postdec1	equ	0xFE5
 18805                           plusw1	equ	0xFE3
 18806                           fsr1h	equ	0xFE2
 18807                           fsr1l	equ	0xFE1
 18808                           indf2	equ	0xFDF
 18809                           postinc2	equ	0xFDE
 18810                           postdec2	equ	0xFDD
 18811                           plusw2	equ	0xFDB
 18812                           fsr2h	equ	0xFDA
 18813                           fsr2l	equ	0xFD9
 18814                           status	equ	0xFD8
 18815                           
 18816 ;; *************** function _RouterEvicted *****************
 18817 ;; Defined at:
 18818 ;;		line 223 in file "../RouteManager.c"
 18819 ;; Parameters:    Size  Location     Type
 18820 ;;  address         2   46[BANK0 ] struct addr_t_def
 18821 ;; Auto vars:     Size  Location     Type
 18822 ;;  r               2   50[BANK0 ] PTR struct route_info_t_
 18823 ;;		 -> routeInfo(7), 
 18824 ;;  i               1   53[BANK0 ] unsigned char 
 18825 ;;  idx             1   52[BANK0 ] unsigned char 
 18826 ;; Return value:  Size  Location     Type
 18827 ;;                  1    wreg      void 
 18828 ;; Registers used:
 18829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : C/0
 18832 ;;		On exit  : E/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;Total ram usage:        8 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:    9
 18842 ;; This function calls:
 18843 ;;		_NetworkGetMyRouteInfo
 18844 ;;		_RouteManagerRequestUpdate
 18845 ;;		_isSameAddress
 18846 ;;		_routeInfoInit
 18847 ;;		_routingTableFind
 18848 ;; This function is called by:
 18849 ;;		_RouteManagerProcessReceive
 18850 ;;		_LE_InsertNeighbor
 18851 ;;		_LE_processReceivedMessage
 18852 ;;		_LE_RemoveNeighborDevice
 18853 ;;		_TransportManagerTask
 18854 ;;		_NetworkManagerTask
 18855 ;; This function uses a non-reentrant model
 18856 ;;
 18857                           
 18858                           	psect	text78
 18859  005C5E                     __ptext78:
 18860                           	opt stack 0
 18861  005C5E                     _RouterEvicted:
 18862                           	opt stack 16
 18863                           
 18864                           ;RouteManager.c: 225: uint8_t idx, i;
 18865                           ;RouteManager.c: 226: route_info_t *r=NetworkGetMyRouteInfo();
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;incstack = 0
 18869  005C5E  ECC7  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 18870  005C62  C073  F092         	movff	?_NetworkGetMyRouteInfo,RouterEvicted@r
 18871  005C66  C074  F093         	movff	?_NetworkGetMyRouteInfo+1,RouterEvicted@r+1
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;RouteManager.c: 227: idx = routingTableFind(address);
 18875  005C6A  C08E  F087         	movff	RouterEvicted@address,routingTableFind@neighbor
 18876  005C6E  C08F  F088         	movff	RouterEvicted@address+1,routingTableFind@neighbor+1
 18877  005C72  EC68  F033         	call	_routingTableFind	;wreg free
 18878  005C76  6F94               	movwf	RouterEvicted@idx& (0+255),b
 18879                           
 18880                           ; BSR set to: 0
 18881                           ;RouteManager.c: 229: if (idx != routingTableActive)
 18882  005C78  5194               	movf	RouterEvicted@idx& (0+255),w,b
 18883  005C7A  19EB               	xorwf	_routingTableActive& (0+255),w,b
 18884  005C7C  11EC               	iorwf	(_routingTableActive+1)& (0+255),w,b
 18885  005C7E  E024               	bz	l15636
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;RouteManager.c: 230: {
 18889                           ;RouteManager.c: 231: routingTableActive--;
 18890  005C80  07EB               	decf	_routingTableActive& (0+255),f,b
 18891  005C82  A0D8               	btfss	status,0,c
 18892  005C84  07EC               	decf	(_routingTableActive+1)& (0+255),f,b
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;RouteManager.c: 232: for (i = idx; i < routingTableActive; i++)
 18896  005C86  C094  F095         	movff	RouterEvicted@idx,RouterEvicted@i
 18897  005C8A  D016               	goto	l15634
 18898  005C8C                     l15630:
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;RouteManager.c: 233: {
 18902                           ;RouteManager.c: 234: routingTable[i] = routingTable[i + 1];
 18903  005C8C  5195               	movf	RouterEvicted@i& (0+255),w,b
 18904  005C8E  0D09               	mullw	9
 18905  005C90  0E81               	movlw	low (_routingTable+9)
 18906  005C92  24F3               	addwf	prodl,w,c
 18907  005C94  6ED9               	movwf	fsr2l,c
 18908  005C96  0E04               	movlw	high (_routingTable+9)
 18909  005C98  20F4               	addwfc	prodh,w,c
 18910  005C9A  6EDA               	movwf	fsr2h,c
 18911  005C9C  5195               	movf	RouterEvicted@i& (0+255),w,b
 18912  005C9E  0D09               	mullw	9
 18913  005CA0  0E78               	movlw	low _routingTable
 18914  005CA2  24F3               	addwf	prodl,w,c
 18915  005CA4  6EE1               	movwf	fsr1l,c
 18916  005CA6  0E04               	movlw	high _routingTable
 18917  005CA8  20F4               	addwfc	prodh,w,c
 18918  005CAA  6EE2               	movwf	fsr1h,c
 18919  005CAC  0E08               	movlw	8
 18920  005CAE                     u18631:
 18921  005CAE  CFDB FFE3          	movff	plusw2,plusw1
 18922  005CB2  06E8               	decf	wreg,f,c
 18923  005CB4  E2FC               	bc	u18631
 18924                           
 18925                           ; BSR set to: 0
 18926  005CB6  2B95               	incf	RouterEvicted@i& (0+255),f,b
 18927  005CB8                     l15634:
 18928                           
 18929                           ; BSR set to: 0
 18930  005CB8  5195               	movf	RouterEvicted@i& (0+255),w,b
 18931  005CBA  6F90               	movwf	??_RouterEvicted& (0+255),b
 18932  005CBC  6B91               	clrf	(??_RouterEvicted+1)& (0+255),b
 18933  005CBE  51EB               	movf	_routingTableActive& (0+255),w,b
 18934  005CC0  5D90               	subwf	??_RouterEvicted& (0+255),w,b
 18935  005CC2  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 18936  005CC4  5991               	subwfb	(??_RouterEvicted+1)& (0+255),w,b
 18937  005CC6  E3E2               	bnc	l15630
 18938  005CC8                     l15636:
 18939                           
 18940                           ; BSR set to: 0
 18941                           ;RouteManager.c: 235: }
 18942                           ;RouteManager.c: 236: }
 18943                           ;RouteManager.c: 238: if (isSameAddress(r->parent, address))
 18944  005CC8  C092  FFD9         	movff	RouterEvicted@r,fsr2l
 18945  005CCC  C093  FFDA         	movff	RouterEvicted@r+1,fsr2h
 18946  005CD0  CFDE F07D          	movff	postinc2,isSameAddress@a1
 18947  005CD4  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 18948  005CD8  C08E  F07F         	movff	RouterEvicted@address,isSameAddress@a2
 18949  005CDC  C08F  F080         	movff	RouterEvicted@address+1,isSameAddress@a2+1
 18950  005CE0  ECBD  F039         	call	_isSameAddress	;wreg free
 18951  005CE4  0900               	iorlw	0
 18952  005CE6  B4D8               	btfsc	status,2,c
 18953  005CE8  0012               	return	
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;RouteManager.c: 239: {
 18957                           ;RouteManager.c: 240: routeInfoInit(r);
 18958  005CEA  C092  F07B         	movff	RouterEvicted@r,routeInfoInit@ri
 18959  005CEE  C093  F07C         	movff	RouterEvicted@r+1,routeInfoInit@ri+1
 18960  005CF2  ECDA  F034         	call	_routeInfoInit	;wreg free
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;RouteManager.c: 241: justEvictedParent = 1;
 18964  005CF6  0E01               	movlw	1
 18965  005CF8  6E42               	movwf	_justEvictedParent,c
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;RouteManager.c: 242: RouteManagerRequestUpdate();
 18969  005CFA  EFFA  F03A         	goto	_RouteManagerRequestUpdate	;wreg free
 18970  005CFE                     __end_of_RouterEvicted:
 18971                           	opt stack 0
 18972                           tblptru	equ	0xFF8
 18973                           tblptrh	equ	0xFF7
 18974                           tblptrl	equ	0xFF6
 18975                           tablat	equ	0xFF5
 18976                           prodh	equ	0xFF4
 18977                           prodl	equ	0xFF3
 18978                           intcon3	equ	0xFF0
 18979                           postinc0	equ	0xFEE
 18980                           plusw0	equ	0xFEB
 18981                           fsr0h	equ	0xFEA
 18982                           fsr0l	equ	0xFE9
 18983                           wreg	equ	0xFE8
 18984                           indf1	equ	0xFE7
 18985                           postdec1	equ	0xFE5
 18986                           plusw1	equ	0xFE3
 18987                           fsr1h	equ	0xFE2
 18988                           fsr1l	equ	0xFE1
 18989                           indf2	equ	0xFDF
 18990                           postinc2	equ	0xFDE
 18991                           postdec2	equ	0xFDD
 18992                           plusw2	equ	0xFDB
 18993                           fsr2h	equ	0xFDA
 18994                           fsr2l	equ	0xFD9
 18995                           status	equ	0xFD8
 18996                           
 18997 ;; *************** function _routingTableFind *****************
 18998 ;; Defined at:
 18999 ;;		line 204 in file "../RouteManager.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;  neighbor        2   39[BANK0 ] struct addr_t_def
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;  res             2   43[BANK0 ] unsigned int 
 19004 ;;  i               1   45[BANK0 ] unsigned char 
 19005 ;; Return value:  Size  Location     Type
 19006 ;;                  1    wreg      unsigned char 
 19007 ;; Registers used:
 19008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19009 ;; Tracked objects:
 19010 ;;		On entry : A/0
 19011 ;;		On exit  : F/0
 19012 ;;		Unchanged: 0/0
 19013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19016 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19017 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19018 ;;Total ram usage:        7 bytes
 19019 ;; Hardware stack levels used:    1
 19020 ;; Hardware stack levels required when called:    8
 19021 ;; This function calls:
 19022 ;;		_isInvalidAddress
 19023 ;;		_isSameAddress
 19024 ;; This function is called by:
 19025 ;;		_RouterEvicted
 19026 ;;		_routingTableUpdateEntry
 19027 ;; This function uses a non-reentrant model
 19028 ;;
 19029                           
 19030                           	psect	text79
 19031  0066D0                     __ptext79:
 19032                           	opt stack 0
 19033  0066D0                     _routingTableFind:
 19034                           	opt stack 16
 19035                           
 19036                           ;RouteManager.c: 208: if (isInvalidAddress(neighbor))
 19037                           
 19038                           ;incstack = 0
 19039  0066D0  C087  F085         	movff	routingTableFind@neighbor,isInvalidAddress@address
 19040  0066D4  C088  F086         	movff	routingTableFind@neighbor+1,isInvalidAddress@address+1
 19041  0066D8  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 19042  0066DC  0900               	iorlw	0
 19043  0066DE  E005               	bz	l1255
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;RouteManager.c: 209: {
 19047                           ;RouteManager.c: 210: res=routingTableActive;
 19048  0066E0  C0EB  F08B         	movff	_routingTableActive,routingTableFind@res
 19049  0066E4  C0EC  F08C         	movff	_routingTableActive+1,routingTableFind@res+1
 19050                           
 19051                           ;RouteManager.c: 211: }else
 19052  0066E8  D022               	goto	l15558
 19053  0066EA                     l1255:
 19054                           
 19055                           ; BSR set to: 0
 19056                           ;RouteManager.c: 212: {
 19057                           ;RouteManager.c: 213: for (i = 0; i < routingTableActive; i++)
 19058  0066EA  6B8D               	clrf	routingTableFind@i& (0+255),b
 19059  0066EC  D015               	goto	l15556
 19060  0066EE                     l15550:
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;RouteManager.c: 214: {
 19064                           ;RouteManager.c: 215: if (isSameAddress(routingTable[i].neighbor, neighbor))
 19065  0066EE  518D               	movf	routingTableFind@i& (0+255),w,b
 19066  0066F0  0D09               	mullw	9
 19067  0066F2  0E78               	movlw	low _routingTable
 19068  0066F4  24F3               	addwf	prodl,w,c
 19069  0066F6  6ED9               	movwf	fsr2l,c
 19070  0066F8  0E04               	movlw	high _routingTable
 19071  0066FA  20F4               	addwfc	prodh,w,c
 19072  0066FC  6EDA               	movwf	fsr2h,c
 19073  0066FE  CFDE F07D          	movff	postinc2,isSameAddress@a1
 19074  006702  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 19075  006706  C087  F07F         	movff	routingTableFind@neighbor,isSameAddress@a2
 19076  00670A  C088  F080         	movff	routingTableFind@neighbor+1,isSameAddress@a2+1
 19077  00670E  ECBD  F039         	call	_isSameAddress	;wreg free
 19078  006712  0900               	iorlw	0
 19079  006714  E109               	bnz	l1260
 19080                           
 19081                           ; BSR set to: 0
 19082  006716  2B8D               	incf	routingTableFind@i& (0+255),f,b
 19083  006718                     l15556:
 19084                           
 19085                           ; BSR set to: 0
 19086  006718  518D               	movf	routingTableFind@i& (0+255),w,b
 19087  00671A  6F89               	movwf	??_routingTableFind& (0+255),b
 19088  00671C  6B8A               	clrf	(??_routingTableFind+1)& (0+255),b
 19089  00671E  51EB               	movf	_routingTableActive& (0+255),w,b
 19090  006720  5D89               	subwf	??_routingTableFind& (0+255),w,b
 19091  006722  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 19092  006724  598A               	subwfb	(??_routingTableFind+1)& (0+255),w,b
 19093  006726  E3E3               	bnc	l15550
 19094  006728                     l1260:
 19095                           
 19096                           ; BSR set to: 0
 19097                           ;RouteManager.c: 217: }
 19098                           ;RouteManager.c: 218: res=i;
 19099  006728  C08D  F08B         	movff	routingTableFind@i,routingTableFind@res
 19100  00672C  6B8C               	clrf	(routingTableFind@res+1)& (0+255),b
 19101  00672E                     l15558:
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;RouteManager.c: 219: }
 19105                           ;RouteManager.c: 220: return res;
 19106  00672E  518B               	movf	routingTableFind@res& (0+255),w,b
 19107                           
 19108                           ; BSR set to: 0
 19109  006730  0012               	return		;funcret
 19110  006732                     __end_of_routingTableFind:
 19111                           	opt stack 0
 19112                           tblptru	equ	0xFF8
 19113                           tblptrh	equ	0xFF7
 19114                           tblptrl	equ	0xFF6
 19115                           tablat	equ	0xFF5
 19116                           prodh	equ	0xFF4
 19117                           prodl	equ	0xFF3
 19118                           intcon3	equ	0xFF0
 19119                           postinc0	equ	0xFEE
 19120                           plusw0	equ	0xFEB
 19121                           fsr0h	equ	0xFEA
 19122                           fsr0l	equ	0xFE9
 19123                           wreg	equ	0xFE8
 19124                           indf1	equ	0xFE7
 19125                           postdec1	equ	0xFE5
 19126                           plusw1	equ	0xFE3
 19127                           fsr1h	equ	0xFE2
 19128                           fsr1l	equ	0xFE1
 19129                           indf2	equ	0xFDF
 19130                           postinc2	equ	0xFDE
 19131                           postdec2	equ	0xFDD
 19132                           plusw2	equ	0xFDB
 19133                           fsr2h	equ	0xFDA
 19134                           fsr2l	equ	0xFD9
 19135                           status	equ	0xFD8
 19136                           
 19137 ;; *************** function _routeInfoInit *****************
 19138 ;; Defined at:
 19139 ;;		line 195 in file "../RouteManager.c"
 19140 ;; Parameters:    Size  Location     Type
 19141 ;;  ri              2   27[BANK0 ] PTR struct route_info_t_
 19142 ;;		 -> routeInfo(7), 
 19143 ;; Auto vars:     Size  Location     Type
 19144 ;;		None
 19145 ;; Return value:  Size  Location     Type
 19146 ;;                  1    wreg      void 
 19147 ;; Registers used:
 19148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19149 ;; Tracked objects:
 19150 ;;		On entry : F/0
 19151 ;;		On exit  : F/0
 19152 ;;		Unchanged: 0/0
 19153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19157 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19158 ;;Total ram usage:        2 bytes
 19159 ;; Hardware stack levels used:    1
 19160 ;; Hardware stack levels required when called:    6
 19161 ;; This function calls:
 19162 ;;		_NetworkAddressSizeGet
 19163 ;;		_memset
 19164 ;; This function is called by:
 19165 ;;		_RouterEvicted
 19166 ;; This function uses a non-reentrant model
 19167 ;;
 19168                           
 19169                           	psect	text80
 19170  0069B4                     __ptext80:
 19171                           	opt stack 0
 19172  0069B4                     _routeInfoInit:
 19173                           	opt stack 18
 19174                           
 19175                           ; BSR set to: 0
 19176                           ;RouteManager.c: 197: memset(&ri->parent, 0xFF, NetworkAddressSizeGet());
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;incstack = 0
 19180  0069B4  C07B  F073         	movff	routeInfoInit@ri,memset@p1
 19181  0069B8  C07C  F074         	movff	routeInfoInit@ri+1,memset@p1+1
 19182  0069BC  6B76               	clrf	(memset@c+1)& (0+255),b
 19183  0069BE  6975               	setf	memset@c& (0+255),b
 19184  0069C0  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 19185  0069C4  0100               	movlb	0	; () banked
 19186  0069C6  6F77               	movwf	memset@n& (0+255),b
 19187  0069C8  6B78               	clrf	(memset@n+1)& (0+255),b
 19188  0069CA  EC47  F039         	call	_memset	;wreg free
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;RouteManager.c: 198: ri->etx = 0;
 19192  0069CE  EE20 F002          	lfsr	2,2
 19193  0069D2  517B               	movf	routeInfoInit@ri& (0+255),w,b
 19194  0069D4  26D9               	addwf	fsr2l,f,c
 19195  0069D6  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 19196  0069D8  22DA               	addwfc	fsr2h,f,c
 19197  0069DA  6ADE               	clrf	postinc2,c
 19198  0069DC  6ADD               	clrf	postdec2,c
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;RouteManager.c: 199: ri->haveHeard = 0;
 19202  0069DE  EE20 F004          	lfsr	2,4
 19203  0069E2  517B               	movf	routeInfoInit@ri& (0+255),w,b
 19204  0069E4  26D9               	addwf	fsr2l,f,c
 19205  0069E6  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 19206  0069E8  22DA               	addwfc	fsr2h,f,c
 19207  0069EA  6ADF               	clrf	indf2,c
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;RouteManager.c: 200: ri->congested = 0;
 19211  0069EC  EE20 F005          	lfsr	2,5
 19212  0069F0  517B               	movf	routeInfoInit@ri& (0+255),w,b
 19213  0069F2  26D9               	addwf	fsr2l,f,c
 19214  0069F4  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 19215  0069F6  22DA               	addwfc	fsr2h,f,c
 19216  0069F8  6ADF               	clrf	indf2,c
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;RouteManager.c: 201: ri->hasCheckedIn=0;
 19220  0069FA  EE20 F006          	lfsr	2,6
 19221  0069FE  517B               	movf	routeInfoInit@ri& (0+255),w,b
 19222  006A00  26D9               	addwf	fsr2l,f,c
 19223  006A02  517C               	movf	(routeInfoInit@ri+1)& (0+255),w,b
 19224  006A04  22DA               	addwfc	fsr2h,f,c
 19225  006A06  6ADF               	clrf	indf2,c
 19226                           
 19227                           ; BSR set to: 0
 19228  006A08  0C00               	retlw	0	;funcret
 19229  006A0A                     __end_of_routeInfoInit:
 19230                           	opt stack 0
 19231                           tblptru	equ	0xFF8
 19232                           tblptrh	equ	0xFF7
 19233                           tblptrl	equ	0xFF6
 19234                           tablat	equ	0xFF5
 19235                           prodh	equ	0xFF4
 19236                           prodl	equ	0xFF3
 19237                           intcon3	equ	0xFF0
 19238                           postinc0	equ	0xFEE
 19239                           plusw0	equ	0xFEB
 19240                           fsr0h	equ	0xFEA
 19241                           fsr0l	equ	0xFE9
 19242                           wreg	equ	0xFE8
 19243                           indf1	equ	0xFE7
 19244                           postdec1	equ	0xFE5
 19245                           plusw1	equ	0xFE3
 19246                           fsr1h	equ	0xFE2
 19247                           fsr1l	equ	0xFE1
 19248                           indf2	equ	0xFDF
 19249                           postinc2	equ	0xFDE
 19250                           postdec2	equ	0xFDD
 19251                           plusw2	equ	0xFDB
 19252                           fsr2h	equ	0xFDA
 19253                           fsr2l	equ	0xFD9
 19254                           status	equ	0xFD8
 19255                           
 19256 ;; *************** function _RouteManagerRequestUpdate *****************
 19257 ;; Defined at:
 19258 ;;		line 185 in file "../RouteManager.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;		None
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;		None
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  1    wreg      void 
 19265 ;; Registers used:
 19266 ;;		wreg, status,2
 19267 ;; Tracked objects:
 19268 ;;		On entry : F/0
 19269 ;;		On exit  : F/1
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19276 ;;Total ram usage:        0 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:    5
 19279 ;; This function calls:
 19280 ;;		Nothing
 19281 ;; This function is called by:
 19282 ;;		_RouterEvicted
 19283 ;; This function uses a non-reentrant model
 19284 ;;
 19285                           
 19286                           	psect	text81
 19287  0075F4                     __ptext81:
 19288                           	opt stack 0
 19289  0075F4                     _RouteManagerRequestUpdate:
 19290                           	opt stack 19
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;RouteManager.c: 187: RouteMgrUpdateRequired=1;
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;incstack = 0
 19297  0075F4  0E01               	movlw	1
 19298  0075F6  0101               	movlb	1	; () banked
 19299  0075F8  6FBD               	movwf	_RouteMgrUpdateRequired& (0+255),b
 19300                           
 19301                           ; BSR set to: 1
 19302  0075FA  0C01               	retlw	1	;funcret
 19303  0075FC                     __end_of_RouteManagerRequestUpdate:
 19304                           	opt stack 0
 19305                           tblptru	equ	0xFF8
 19306                           tblptrh	equ	0xFF7
 19307                           tblptrl	equ	0xFF6
 19308                           tablat	equ	0xFF5
 19309                           prodh	equ	0xFF4
 19310                           prodl	equ	0xFF3
 19311                           intcon3	equ	0xFF0
 19312                           postinc0	equ	0xFEE
 19313                           plusw0	equ	0xFEB
 19314                           fsr0h	equ	0xFEA
 19315                           fsr0l	equ	0xFE9
 19316                           wreg	equ	0xFE8
 19317                           indf1	equ	0xFE7
 19318                           postdec1	equ	0xFE5
 19319                           plusw1	equ	0xFE3
 19320                           fsr1h	equ	0xFE2
 19321                           fsr1l	equ	0xFE1
 19322                           indf2	equ	0xFDF
 19323                           postinc2	equ	0xFDE
 19324                           postdec2	equ	0xFDD
 19325                           plusw2	equ	0xFDB
 19326                           fsr2h	equ	0xFDA
 19327                           fsr2l	equ	0xFD9
 19328                           status	equ	0xFD8
 19329                           
 19330 ;; *************** function _NetworkPrepareSendPacket *****************
 19331 ;; Defined at:
 19332 ;;		line 358 in file "../NetworkManager.c"
 19333 ;; Parameters:    Size  Location     Type
 19334 ;;  address         2   31[BANK0 ] struct addr_t_def
 19335 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 19336 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 19337 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 19338 ;;  pType           1   35[BANK0 ] enum E200
 19339 ;;  data            2   36[BANK0 ] PTR unsigned char 
 19340 ;;		 -> NetworkManagerProcessIncomingData@buffer(64), TMQ(152), NULL(0), TxBuffer(64), 
 19341 ;;  size            2   38[BANK0 ] unsigned int 
 19342 ;; Auto vars:     Size  Location     Type
 19343 ;;  nHdr            2   40[BANK0 ] PTR struct net_data_head
 19344 ;;		 -> NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(
      +64), NetworkManagerTask@data(19), 
 19345 ;;		 -> TMSendDataToRFD@databuff(64), TransportManagerTask@databuff(64), NetworkBroadcastData@databuff(64), 
 19346 ;; Return value:  Size  Location     Type
 19347 ;;                  2   31[BANK0 ] unsigned int 
 19348 ;; Registers used:
 19349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19350 ;; Tracked objects:
 19351 ;;		On entry : F/0
 19352 ;;		On exit  : F/0
 19353 ;;		Unchanged: 0/0
 19354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19355 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19356 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19358 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19359 ;;Total ram usage:       11 bytes
 19360 ;; Hardware stack levels used:    1
 19361 ;; Hardware stack levels required when called:    6
 19362 ;; This function calls:
 19363 ;;		_NetworkAddressSizeGet
 19364 ;;		_NetworkGetDeviceType
 19365 ;;		_NetworkGetParentAddress
 19366 ;;		_NetworkManagerGetMyAddress
 19367 ;;		_NetworkSequence
 19368 ;;		_memcpy
 19369 ;; This function is called by:
 19370 ;;		_TransportManagerTask
 19371 ;;		_TMSendDataToRFD
 19372 ;;		_NetworkManagerTask
 19373 ;;		_NetworkSendDiscoverResponse
 19374 ;;		_NetworkBroadcastData
 19375 ;; This function uses a non-reentrant model
 19376 ;;
 19377                           
 19378                           	psect	text82
 19379  00544E                     __ptext82:
 19380                           	opt stack 0
 19381  00544E                     _NetworkPrepareSendPacket:
 19382                           	opt stack 21
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;NetworkManager.c: 360: net_data_header_t *nHdr;
 19386                           ;NetworkManager.c: 361: nHdr=(net_data_header_t*)buffer;
 19387                           
 19388                           ; BSR set to: 1
 19389                           ;incstack = 0
 19390  00544E  C081  F088         	movff	NetworkPrepareSendPacket@buffer,NetworkPrepareSendPacket@nHdr
 19391  005452  C082  F089         	movff	NetworkPrepareSendPacket@buffer+1,NetworkPrepareSendPacket@nHdr+1
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;NetworkManager.c: 363: nHdr->Hops=0;
 19395  005456  C088  FFD9         	movff	NetworkPrepareSendPacket@nHdr,fsr2l
 19396  00545A  C089  FFDA         	movff	NetworkPrepareSendPacket@nHdr+1,fsr2h
 19397  00545E  6ADF               	clrf	indf2,c
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;NetworkManager.c: 364: nHdr->flags=(NetworkGetDeviceType() & 0x07);
 19401  005460  EE20 F003          	lfsr	2,3
 19402  005464  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19403  005466  26D9               	addwf	fsr2l,f,c
 19404  005468  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19405  00546A  22DA               	addwfc	fsr2h,f,c
 19406  00546C  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 19407  005470  0B07               	andlw	7
 19408  005472  6EDF               	movwf	indf2,c
 19409                           
 19410                           ; BSR set to: 1
 19411                           ;NetworkManager.c: 365: memcpy(&nHdr->origin,NetworkManagerGetMyAddress(),NetworkAddress
      +                          SizeGet());
 19412  005474  0E06               	movlw	6
 19413  005476  0100               	movlb	0	; () banked
 19414  005478  2588               	addwf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19415  00547A  6F75               	movwf	memcpy@d1& (0+255),b
 19416  00547C  0E00               	movlw	0
 19417  00547E  2189               	addwfc	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19418  005480  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 19419  005482  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 19420  005486  C073  F077         	movff	?_NetworkManagerGetMyAddress,memcpy@s1
 19421  00548A  C074  F078         	movff	?_NetworkManagerGetMyAddress+1,memcpy@s1+1
 19422  00548E  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 19423  005492  0100               	movlb	0	; () banked
 19424  005494  6F79               	movwf	memcpy@n& (0+255),b
 19425  005496  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 19426  005498  EC05  F035         	call	_memcpy	;wreg free
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;NetworkManager.c: 366: nHdr->target=address;
 19430  00549C  EE20 F004          	lfsr	2,4
 19431  0054A0  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19432  0054A2  26D9               	addwf	fsr2l,f,c
 19433  0054A4  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19434  0054A6  22DA               	addwfc	fsr2h,f,c
 19435  0054A8  C07F  FFDE         	movff	NetworkPrepareSendPacket@address,postinc2
 19436  0054AC  C080  FFDD         	movff	NetworkPrepareSendPacket@address+1,postdec2
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;NetworkManager.c: 367: nHdr->sequenceNumber=NetworkSequence();
 19440  0054B0  EE20 F001          	lfsr	2,1
 19441  0054B4  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19442  0054B6  26D9               	addwf	fsr2l,f,c
 19443  0054B8  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19444  0054BA  22DA               	addwfc	fsr2h,f,c
 19445  0054BC  ECFE  F03A         	call	_NetworkSequence	;wreg free
 19446  0054C0  6EDF               	movwf	indf2,c
 19447                           
 19448                           ; BSR set to: 1
 19449                           ;NetworkManager.c: 368: nHdr->packettype=pType;
 19450  0054C2  0100               	movlb	0	; () banked
 19451  0054C4  EE20 F002          	lfsr	2,2
 19452  0054C8  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19453  0054CA  26D9               	addwf	fsr2l,f,c
 19454  0054CC  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19455  0054CE  22DA               	addwfc	fsr2h,f,c
 19456  0054D0  C083  FFDF         	movff	NetworkPrepareSendPacket@pType,indf2
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;NetworkManager.c: 369: nHdr->parent=NetworkGetParentAddress();
 19460  0054D4  ECE1  F03A         	call	_NetworkGetParentAddress	;wreg free
 19461  0054D8  0100               	movlb	0	; () banked
 19462  0054DA  EE20 F008          	lfsr	2,8
 19463  0054DE  5188               	movf	NetworkPrepareSendPacket@nHdr& (0+255),w,b
 19464  0054E0  26D9               	addwf	fsr2l,f,c
 19465  0054E2  5189               	movf	(NetworkPrepareSendPacket@nHdr+1)& (0+255),w,b
 19466  0054E4  22DA               	addwfc	fsr2h,f,c
 19467  0054E6  C073  FFDE         	movff	?_NetworkGetParentAddress,postinc2
 19468  0054EA  C074  FFDD         	movff	?_NetworkGetParentAddress+1,postdec2
 19469                           
 19470                           ; BSR set to: 0
 19471                           ;NetworkManager.c: 370: if((data!=(0)) && (size>0))
 19472  0054EE  5184               	movf	NetworkPrepareSendPacket@data& (0+255),w,b
 19473  0054F0  1185               	iorwf	(NetworkPrepareSendPacket@data+1)& (0+255),w,b
 19474  0054F2  E014               	bz	l2021
 19475                           
 19476                           ; BSR set to: 0
 19477  0054F4  5186               	movf	NetworkPrepareSendPacket@size& (0+255),w,b
 19478  0054F6  1187               	iorwf	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 19479  0054F8  E011               	bz	l2021
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;NetworkManager.c: 371: {
 19483                           ;NetworkManager.c: 372: memcpy(&buffer[sizeof(net_data_header_t)],data,size);
 19484  0054FA  0E0A               	movlw	10
 19485  0054FC  2581               	addwf	NetworkPrepareSendPacket@buffer& (0+255),w,b
 19486  0054FE  6F75               	movwf	memcpy@d1& (0+255),b
 19487  005500  0E00               	movlw	0
 19488  005502  2182               	addwfc	(NetworkPrepareSendPacket@buffer+1)& (0+255),w,b
 19489  005504  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 19490  005506  C084  F077         	movff	NetworkPrepareSendPacket@data,memcpy@s1
 19491  00550A  C085  F078         	movff	NetworkPrepareSendPacket@data+1,memcpy@s1+1
 19492  00550E  C086  F079         	movff	NetworkPrepareSendPacket@size,memcpy@n
 19493  005512  C087  F07A         	movff	NetworkPrepareSendPacket@size+1,memcpy@n+1
 19494  005516  EC05  F035         	call	_memcpy	;wreg free
 19495                           
 19496                           ;NetworkManager.c: 373: }else
 19497  00551A  D002               	goto	l16060
 19498  00551C                     l2021:
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;NetworkManager.c: 374: {
 19502                           ;NetworkManager.c: 375: size=0;
 19503  00551C  6B86               	clrf	NetworkPrepareSendPacket@size& (0+255),b
 19504  00551E  6B87               	clrf	(NetworkPrepareSendPacket@size+1)& (0+255),b
 19505  005520                     l16060:
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;NetworkManager.c: 376: }
 19509                           ;NetworkManager.c: 377: return(size+sizeof(net_data_header_t));
 19510  005520  0E0A               	movlw	10
 19511  005522  2586               	addwf	NetworkPrepareSendPacket@size& (0+255),w,b
 19512  005524  6F7F               	movwf	?_NetworkPrepareSendPacket& (0+255),b
 19513  005526  0E00               	movlw	0
 19514  005528  2187               	addwfc	(NetworkPrepareSendPacket@size+1)& (0+255),w,b
 19515  00552A  6F80               	movwf	(?_NetworkPrepareSendPacket+1)& (0+255),b
 19516                           
 19517                           ; BSR set to: 0
 19518  00552C  0012               	return		;funcret
 19519  00552E                     __end_of_NetworkPrepareSendPacket:
 19520                           	opt stack 0
 19521                           tblptru	equ	0xFF8
 19522                           tblptrh	equ	0xFF7
 19523                           tblptrl	equ	0xFF6
 19524                           tablat	equ	0xFF5
 19525                           prodh	equ	0xFF4
 19526                           prodl	equ	0xFF3
 19527                           intcon3	equ	0xFF0
 19528                           postinc0	equ	0xFEE
 19529                           plusw0	equ	0xFEB
 19530                           fsr0h	equ	0xFEA
 19531                           fsr0l	equ	0xFE9
 19532                           wreg	equ	0xFE8
 19533                           indf1	equ	0xFE7
 19534                           postdec1	equ	0xFE5
 19535                           plusw1	equ	0xFE3
 19536                           fsr1h	equ	0xFE2
 19537                           fsr1l	equ	0xFE1
 19538                           indf2	equ	0xFDF
 19539                           postinc2	equ	0xFDE
 19540                           postdec2	equ	0xFDD
 19541                           plusw2	equ	0xFDB
 19542                           fsr2h	equ	0xFDA
 19543                           fsr2l	equ	0xFD9
 19544                           status	equ	0xFD8
 19545                           
 19546 ;; *************** function _NetworkSequence *****************
 19547 ;; Defined at:
 19548 ;;		line 270 in file "../NetworkManager.c"
 19549 ;; Parameters:    Size  Location     Type
 19550 ;;		None
 19551 ;; Auto vars:     Size  Location     Type
 19552 ;;		None
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  1    wreg      unsigned char 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2, status,0
 19557 ;; Tracked objects:
 19558 ;;		On entry : F/0
 19559 ;;		On exit  : F/1
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;Total ram usage:        0 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:    5
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		_NetworkPrepareSendPacket
 19573 ;; This function uses a non-reentrant model
 19574 ;;
 19575                           
 19576                           	psect	text83
 19577  0075FC                     __ptext83:
 19578                           	opt stack 0
 19579  0075FC                     _NetworkSequence:
 19580                           	opt stack 21
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;NetworkManager.c: 272: return(NetSeq++);
 19584                           
 19585                           ; BSR set to: 0
 19586                           ;incstack = 0
 19587  0075FC  0101               	movlb	1	; () banked
 19588  0075FE  2BB9               	incf	_NetSeq& (0+255),f,b
 19589  007600  05B9               	decf	_NetSeq& (0+255),w,b
 19590                           
 19591                           ; BSR set to: 1
 19592  007602  0012               	return		;funcret
 19593  007604                     __end_of_NetworkSequence:
 19594                           	opt stack 0
 19595                           tblptru	equ	0xFF8
 19596                           tblptrh	equ	0xFF7
 19597                           tblptrl	equ	0xFF6
 19598                           tablat	equ	0xFF5
 19599                           prodh	equ	0xFF4
 19600                           prodl	equ	0xFF3
 19601                           intcon3	equ	0xFF0
 19602                           postinc0	equ	0xFEE
 19603                           plusw0	equ	0xFEB
 19604                           fsr0h	equ	0xFEA
 19605                           fsr0l	equ	0xFE9
 19606                           wreg	equ	0xFE8
 19607                           indf1	equ	0xFE7
 19608                           postdec1	equ	0xFE5
 19609                           plusw1	equ	0xFE3
 19610                           fsr1h	equ	0xFE2
 19611                           fsr1l	equ	0xFE1
 19612                           indf2	equ	0xFDF
 19613                           postinc2	equ	0xFDE
 19614                           postdec2	equ	0xFDD
 19615                           plusw2	equ	0xFDB
 19616                           fsr2h	equ	0xFDA
 19617                           fsr2l	equ	0xFD9
 19618                           status	equ	0xFD8
 19619                           
 19620 ;; *************** function _NetworkGetParentAddress *****************
 19621 ;; Defined at:
 19622 ;;		line 250 in file "../NetworkManager.c"
 19623 ;; Parameters:    Size  Location     Type
 19624 ;;		None
 19625 ;; Auto vars:     Size  Location     Type
 19626 ;;		None
 19627 ;; Return value:  Size  Location     Type
 19628 ;;                  2   19[BANK0 ] struct addr_t_def
 19629 ;; Registers used:
 19630 ;;		None
 19631 ;; Tracked objects:
 19632 ;;		On entry : C/1
 19633 ;;		On exit  : C/0
 19634 ;;		Unchanged: C/0
 19635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19636 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;Total ram usage:        2 bytes
 19641 ;; Hardware stack levels used:    1
 19642 ;; Hardware stack levels required when called:    5
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_radioReceivedPacket
 19647 ;;		_RouteManagerShouldInsert
 19648 ;;		_le_findWorstNeighborIdx
 19649 ;;		_le_findRandomNeighborIdx
 19650 ;;		_TransportManagerTask
 19651 ;;		_TMSendFormedPacketToRFD
 19652 ;;		_NetworkManagerTask
 19653 ;;		_NetworkPrepareSendPacket
 19654 ;; This function uses a non-reentrant model
 19655 ;;
 19656                           
 19657                           	psect	text84
 19658  0075C2                     __ptext84:
 19659                           	opt stack 0
 19660  0075C2                     _NetworkGetParentAddress:
 19661                           	opt stack 21
 19662                           
 19663                           ;NetworkManager.c: 252: return(routeInfo.parent);
 19664                           
 19665                           ; BSR set to: 1
 19666                           ;incstack = 0
 19667  0075C2  C1D4  F073         	movff	_routeInfo,?_NetworkGetParentAddress
 19668  0075C6  C1D5  F074         	movff	_routeInfo+1,?_NetworkGetParentAddress+1
 19669  0075CA  0012               	return		;funcret
 19670  0075CC                     __end_of_NetworkGetParentAddress:
 19671                           	opt stack 0
 19672                           tblptru	equ	0xFF8
 19673                           tblptrh	equ	0xFF7
 19674                           tblptrl	equ	0xFF6
 19675                           tablat	equ	0xFF5
 19676                           prodh	equ	0xFF4
 19677                           prodl	equ	0xFF3
 19678                           intcon3	equ	0xFF0
 19679                           postinc0	equ	0xFEE
 19680                           plusw0	equ	0xFEB
 19681                           fsr0h	equ	0xFEA
 19682                           fsr0l	equ	0xFE9
 19683                           wreg	equ	0xFE8
 19684                           indf1	equ	0xFE7
 19685                           postdec1	equ	0xFE5
 19686                           plusw1	equ	0xFE3
 19687                           fsr1h	equ	0xFE2
 19688                           fsr1l	equ	0xFE1
 19689                           indf2	equ	0xFDF
 19690                           postinc2	equ	0xFDE
 19691                           postdec2	equ	0xFDD
 19692                           plusw2	equ	0xFDB
 19693                           fsr2h	equ	0xFDA
 19694                           fsr2l	equ	0xFD9
 19695                           status	equ	0xFD8
 19696                           
 19697 ;; *************** function _CoordinatorGenericAddress *****************
 19698 ;; Defined at:
 19699 ;;		line 255 in file "../NetworkManager.c"
 19700 ;; Parameters:    Size  Location     Type
 19701 ;;		None
 19702 ;; Auto vars:     Size  Location     Type
 19703 ;;		None
 19704 ;; Return value:  Size  Location     Type
 19705 ;;                  2   27[BANK0 ] struct addr_t_def
 19706 ;; Registers used:
 19707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19708 ;; Tracked objects:
 19709 ;;		On entry : 8/0
 19710 ;;		On exit  : F/0
 19711 ;;		Unchanged: 0/0
 19712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19717 ;;Total ram usage:        2 bytes
 19718 ;; Hardware stack levels used:    1
 19719 ;; Hardware stack levels required when called:    6
 19720 ;; This function calls:
 19721 ;;		_NetworkAddressSizeGet
 19722 ;;		_memset
 19723 ;; This function is called by:
 19724 ;;		_radioReceivedPacket
 19725 ;;		_NetworkUnicastData
 19726 ;;		_TransportManagerTask
 19727 ;;		_NetworkManagerTask
 19728 ;; This function uses a non-reentrant model
 19729 ;;
 19730                           
 19731                           	psect	text85
 19732  007308                     __ptext85:
 19733                           	opt stack 0
 19734  007308                     _CoordinatorGenericAddress:
 19735                           	opt stack 22
 19736                           
 19737                           ;NetworkManager.c: 257: static addr_t address;
 19738                           ;NetworkManager.c: 261: memset(address.bytes,0x00,NetworkAddressSizeGet());
 19739                           
 19740                           ;incstack = 0
 19741  007308  0EDF               	movlw	low CoordinatorGenericAddress@address
 19742  00730A  0100               	movlb	0	; () banked
 19743  00730C  6F73               	movwf	memset@p1& (0+255),b
 19744  00730E  0E01               	movlw	high CoordinatorGenericAddress@address
 19745  007310  6F74               	movwf	(memset@p1+1)& (0+255),b
 19746  007312  6B76               	clrf	(memset@c+1)& (0+255),b
 19747  007314  6B75               	clrf	memset@c& (0+255),b
 19748  007316  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 19749  00731A  0100               	movlb	0	; () banked
 19750  00731C  6F77               	movwf	memset@n& (0+255),b
 19751  00731E  6B78               	clrf	(memset@n+1)& (0+255),b
 19752  007320  EC47  F039         	call	_memset	;wreg free
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;NetworkManager.c: 262: return(address);
 19756  007324  C1DF  F07B         	movff	CoordinatorGenericAddress@address,?_CoordinatorGenericAddress
 19757  007328  C1E0  F07C         	movff	CoordinatorGenericAddress@address+1,?_CoordinatorGenericAddress+1
 19758                           
 19759                           ; BSR set to: 0
 19760  00732C  0012               	return		;funcret
 19761  00732E                     __end_of_CoordinatorGenericAddress:
 19762                           	opt stack 0
 19763                           tblptru	equ	0xFF8
 19764                           tblptrh	equ	0xFF7
 19765                           tblptrl	equ	0xFF6
 19766                           tablat	equ	0xFF5
 19767                           prodh	equ	0xFF4
 19768                           prodl	equ	0xFF3
 19769                           intcon3	equ	0xFF0
 19770                           postinc0	equ	0xFEE
 19771                           plusw0	equ	0xFEB
 19772                           fsr0h	equ	0xFEA
 19773                           fsr0l	equ	0xFE9
 19774                           wreg	equ	0xFE8
 19775                           indf1	equ	0xFE7
 19776                           postdec1	equ	0xFE5
 19777                           plusw1	equ	0xFE3
 19778                           fsr1h	equ	0xFE2
 19779                           fsr1l	equ	0xFE1
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           plusw2	equ	0xFDB
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _RouteManagerTask *****************
 19789 ;; Defined at:
 19790 ;;		line 36 in file "../RouteManager.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;		None
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;		None
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  1    wreg      void 
 19797 ;; Registers used:
 19798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : F/1
 19801 ;;		On exit  : F/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;Total ram usage:        0 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:   12
 19811 ;; This function calls:
 19812 ;;		_MSTickGet
 19813 ;;		_MSTickGetDiffNow
 19814 ;;		_RouteManagerPerformUpdate
 19815 ;; This function is called by:
 19816 ;;		_NetworkManagerTask
 19817 ;; This function uses a non-reentrant model
 19818 ;;
 19819                           
 19820                           	psect	text86
 19821  006D2C                     __ptext86:
 19822                           	opt stack 0
 19823  006D2C                     _RouteManagerTask:
 19824                           	opt stack 16
 19825                           
 19826                           ; BSR set to: 1
 19827                           ;RouteManager.c: 38: if( (RouteMgrUpdateRequired==1) || (MSTickGetDiffNow(tRouteMgr)>((S
      +                          PAN)50*1000ULL)) )
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;incstack = 0
 19831  006D2C  05BD               	decf	_RouteMgrUpdateRequired& (0+255),w,b
 19832  006D2E  E014               	bz	l17210
 19833                           
 19834                           ; BSR set to: 1
 19835  006D30  EE22  F01C         	lfsr	2,_tRouteMgr
 19836  006D34  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 19837  006D38  0E07               	movlw	7
 19838  006D3A                     u21141:
 19839  006D3A  CFDB FFEB          	movff	plusw2,plusw0
 19840  006D3E  06E8               	decf	wreg,f,c
 19841  006D40  E2FC               	bc	u21141
 19842  006D42  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 19843  006D46  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 19844  006D48  1191               	iorwf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 19845  006D4A  E106               	bnz	u21150
 19846  006D4C  0E51               	movlw	81
 19847  006D4E  5D8F               	subwf	?_MSTickGetDiffNow& (0+255),w,b
 19848  006D50  0EC3               	movlw	195
 19849  006D52  5990               	subwfb	(?_MSTickGetDiffNow+1)& (0+255),w,b
 19850  006D54  A0D8               	btfss	status,0,c
 19851  006D56  0012               	return	
 19852  006D58                     u21150:
 19853  006D58                     l17210:
 19854                           
 19855                           ;RouteManager.c: 39: {
 19856                           ;RouteManager.c: 40: RouteManagerPerformUpdate();
 19857  006D58  EC2C  F00B         	call	_RouteManagerPerformUpdate	;wreg free
 19858                           
 19859                           ;RouteManager.c: 41: RouteMgrUpdateRequired=0;
 19860  006D5C  0101               	movlb	1	; () banked
 19861  006D5E  6BBD               	clrf	_RouteMgrUpdateRequired& (0+255),b
 19862                           
 19863                           ; BSR set to: 1
 19864                           ;RouteManager.c: 42: tRouteMgr=MSTickGet();
 19865  006D60  EC27  F038         	call	_MSTickGet	;wreg free
 19866  006D64  EE22  F01C         	lfsr	2,_tRouteMgr
 19867  006D68  0E07               	movlw	7
 19868  006D6A                     u21161:
 19869  006D6A  CFEB FFDB          	movff	plusw0,plusw2
 19870  006D6E  06E8               	decf	wreg,f,c
 19871  006D70  E2FC               	bc	u21161
 19872                           
 19873                           ; BSR set to: 0
 19874  006D72  0012               	return		;funcret
 19875  006D74                     __end_of_RouteManagerTask:
 19876                           	opt stack 0
 19877                           tblptru	equ	0xFF8
 19878                           tblptrh	equ	0xFF7
 19879                           tblptrl	equ	0xFF6
 19880                           tablat	equ	0xFF5
 19881                           prodh	equ	0xFF4
 19882                           prodl	equ	0xFF3
 19883                           intcon3	equ	0xFF0
 19884                           postinc0	equ	0xFEE
 19885                           plusw0	equ	0xFEB
 19886                           fsr0h	equ	0xFEA
 19887                           fsr0l	equ	0xFE9
 19888                           wreg	equ	0xFE8
 19889                           indf1	equ	0xFE7
 19890                           postdec1	equ	0xFE5
 19891                           plusw1	equ	0xFE3
 19892                           fsr1h	equ	0xFE2
 19893                           fsr1l	equ	0xFE1
 19894                           indf2	equ	0xFDF
 19895                           postinc2	equ	0xFDE
 19896                           postdec2	equ	0xFDD
 19897                           plusw2	equ	0xFDB
 19898                           fsr2h	equ	0xFDA
 19899                           fsr2l	equ	0xFD9
 19900                           status	equ	0xFD8
 19901                           
 19902 ;; *************** function _RouteManagerPerformUpdate *****************
 19903 ;; Defined at:
 19904 ;;		line 46 in file "../RouteManager.c"
 19905 ;; Parameters:    Size  Location     Type
 19906 ;;		None
 19907 ;; Auto vars:     Size  Location     Type
 19908 ;;  r               2   67[BANK0 ] PTR struct route_info_t_
 19909 ;;		 -> routeInfo(7), 
 19910 ;;  entry           2   65[BANK0 ] PTR struct routing_table
 19911 ;;		 -> routingTable(90), 
 19912 ;;  minEtx          2   63[BANK0 ] unsigned int 
 19913 ;;  best            2   61[BANK0 ] PTR struct routing_table
 19914 ;;		 -> routingTable(90), NULL(0), 
 19915 ;;  currentEtx      2   59[BANK0 ] unsigned int 
 19916 ;;  pathEtx         2   57[BANK0 ] unsigned int 
 19917 ;;  i               2   55[BANK0 ] unsigned int 
 19918 ;;  linkEtx         2   53[BANK0 ] unsigned int 
 19919 ;; Return value:  Size  Location     Type
 19920 ;;                  1    wreg      void 
 19921 ;; Registers used:
 19922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19923 ;; Tracked objects:
 19924 ;;		On entry : E/0
 19925 ;;		On exit  : E/0
 19926 ;;		Unchanged: 0/0
 19927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19929 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19931 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19932 ;;Total ram usage:       18 bytes
 19933 ;; Hardware stack levels used:    1
 19934 ;; Hardware stack levels required when called:   11
 19935 ;; This function calls:
 19936 ;;		_BeaconManagerTrigger
 19937 ;;		_LELinkQualityGet
 19938 ;;		_LE_ClearDLQ
 19939 ;;		_LE_PinNeighbor
 19940 ;;		_LE_UnpinNeighbor
 19941 ;;		_NetworkGetDeviceType
 19942 ;;		_NetworkGetMyRouteInfo
 19943 ;;		_NetworkManagerGetMyAddress
 19944 ;;		_TransportManagerNoRoute
 19945 ;;		_TransportManagerRouteFound
 19946 ;;		_isInvalidAddress
 19947 ;;		_isSameAddress
 19948 ;;		_passLinkEtxThreshold
 19949 ;; This function is called by:
 19950 ;;		_RouteManagerTask
 19951 ;;		_NetworkManagerTask
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           	psect	text87
 19956  001658                     __ptext87:
 19957                           	opt stack 0
 19958  001658                     _RouteManagerPerformUpdate:
 19959                           	opt stack 16
 19960                           
 19961                           ;RouteManager.c: 48: uint16_t i;
 19962                           ;RouteManager.c: 49: routing_table_entry_t* entry;
 19963                           ;RouteManager.c: 50: routing_table_entry_t* best;
 19964                           ;RouteManager.c: 51: uint16_t minEtx;
 19965                           ;RouteManager.c: 52: uint16_t currentEtx;
 19966                           ;RouteManager.c: 53: uint16_t linkEtx, pathEtx;
 19967                           ;RouteManager.c: 54: route_info_t *r=NetworkGetMyRouteInfo();
 19968                           
 19969                           ; BSR set to: 0
 19970                           ;incstack = 0
 19971  001658  ECC7  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 19972  00165C  C073  F0A3         	movff	?_NetworkGetMyRouteInfo,RouteManagerPerformUpdate@r
 19973  001660  C074  F0A4         	movff	?_NetworkGetMyRouteInfo+1,RouteManagerPerformUpdate@r+1
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;RouteManager.c: 56: if(NetworkGetDeviceType()!=DeviceCoordinator)
 19977  001664  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 19978  001668  0900               	iorlw	0
 19979  00166A  B4D8               	btfsc	status,2,c
 19980  00166C  0012               	return	
 19981                           
 19982                           ; BSR set to: 1
 19983                           ;RouteManager.c: 57: {
 19984                           ;RouteManager.c: 58: best = (0);
 19985  00166E  0100               	movlb	0	; () banked
 19986  001670  6B9D               	clrf	RouteManagerPerformUpdate@best& (0+255),b
 19987  001672  6B9E               	clrf	(RouteManagerPerformUpdate@best+1)& (0+255),b
 19988                           
 19989                           ;RouteManager.c: 60: minEtx = 0xffff;
 19990  001674  699F               	setf	RouteManagerPerformUpdate@minEtx& (0+255),b
 19991  001676  69A0               	setf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),b
 19992                           
 19993                           ;RouteManager.c: 62: currentEtx = 0xffff;
 19994  001678  699B               	setf	RouteManagerPerformUpdate@currentEtx& (0+255),b
 19995  00167A  699C               	setf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),b
 19996                           
 19997                           ;RouteManager.c: 65: for (i = 0; i < routingTableActive; i++)
 19998  00167C  6B97               	clrf	RouteManagerPerformUpdate@i& (0+255),b
 19999  00167E  6B98               	clrf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 20000  001680  D0B5               	goto	l16482
 20001  001682                     l16456:
 20002                           
 20003                           ; BSR set to: 0
 20004                           ;RouteManager.c: 66: {
 20005                           ;RouteManager.c: 67: entry = &routingTable[i];
 20006  001682  0E09               	movlw	9
 20007  001684  0397               	mulwf	RouteManagerPerformUpdate@i& (0+255),b
 20008  001686  CFF3 F093          	movff	prodl,??_RouteManagerPerformUpdate
 20009  00168A  CFF4 F094          	movff	prodh,??_RouteManagerPerformUpdate+1
 20010  00168E  0398               	mulwf	(RouteManagerPerformUpdate@i+1)& (0+255),b
 20011  001690  50F3               	movf	prodl,w,c
 20012  001692  2794               	addwf	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 20013  001694  0E78               	movlw	low _routingTable
 20014  001696  2593               	addwf	??_RouteManagerPerformUpdate& (0+255),w,b
 20015  001698  6FA1               	movwf	RouteManagerPerformUpdate@entry& (0+255),b
 20016  00169A  0E04               	movlw	high _routingTable
 20017  00169C  2194               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 20018  00169E  6FA2               	movwf	(RouteManagerPerformUpdate@entry+1)& (0+255),b
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;RouteManager.c: 70: if (isInvalidAddress(entry->info.parent) || (isSameAddress(entry->i
      +                          nfo.parent, *NetworkManagerGetMyAddress())))
 20022  0016A0  EE20 F002          	lfsr	2,2
 20023  0016A4  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20024  0016A6  26D9               	addwf	fsr2l,f,c
 20025  0016A8  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20026  0016AA  22DA               	addwfc	fsr2h,f,c
 20027  0016AC  CFDE F085          	movff	postinc2,isInvalidAddress@address
 20028  0016B0  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
 20029  0016B4  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 20030  0016B8  0900               	iorlw	0
 20031  0016BA  E001 D095          	bnz	l16480
 20032                           
 20033                           ; BSR set to: 0
 20034  0016BE  EE20 F002          	lfsr	2,2
 20035  0016C2  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20036  0016C4  26D9               	addwf	fsr2l,f,c
 20037  0016C6  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20038  0016C8  22DA               	addwfc	fsr2h,f,c
 20039  0016CA  CFDE F07D          	movff	postinc2,isSameAddress@a1
 20040  0016CE  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 20041  0016D2  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 20042  0016D6  C073  FFD9         	movff	?_NetworkManagerGetMyAddress,fsr2l
 20043  0016DA  C074  FFDA         	movff	?_NetworkManagerGetMyAddress+1,fsr2h
 20044  0016DE  CFDE F07F          	movff	postinc2,isSameAddress@a2
 20045  0016E2  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 20046  0016E6  ECBD  F039         	call	_isSameAddress	;wreg free
 20047  0016EA  0900               	iorlw	0
 20048  0016EC  E17D               	bnz	l16480
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;RouteManager.c: 74: {
 20052                           ;RouteManager.c: 75: linkEtx = LELinkQualityGet(entry->neighbor,0);
 20053  0016EE  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 20054  0016F2  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 20055  0016F6  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 20056  0016FA  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 20057  0016FE  6B88               	clrf	(LELinkQualityGet@offset+1)& (0+255),b
 20058  001700  6B87               	clrf	LELinkQualityGet@offset& (0+255),b
 20059  001702  EC95  F032         	call	_LELinkQualityGet	;wreg free
 20060  001706  C085  F095         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@linkEtx
 20061  00170A  C086  F096         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@linkEtx+1
 20062                           
 20063                           ;RouteManager.c: 76: pathEtx = LELinkQualityGet(entry->neighbor,entry->info.etx);
 20064  00170E  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 20065  001712  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 20066  001716  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 20067  00171A  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 20068  00171E  0100               	movlb	0	; () banked
 20069  001720  EE20 F004          	lfsr	2,4
 20070  001724  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20071  001726  26D9               	addwf	fsr2l,f,c
 20072  001728  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20073  00172A  22DA               	addwfc	fsr2h,f,c
 20074  00172C  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 20075  001730  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 20076  001734  EC95  F032         	call	_LELinkQualityGet	;wreg free
 20077  001738  C085  F099         	movff	?_LELinkQualityGet,RouteManagerPerformUpdate@pathEtx
 20078  00173C  C086  F09A         	movff	?_LELinkQualityGet+1,RouteManagerPerformUpdate@pathEtx+1
 20079                           
 20080                           ;RouteManager.c: 78: if (isSameAddress(entry->neighbor, r->parent))
 20081  001740  C0A1  FFD9         	movff	RouteManagerPerformUpdate@entry,fsr2l
 20082  001744  C0A2  FFDA         	movff	RouteManagerPerformUpdate@entry+1,fsr2h
 20083  001748  CFDE F07D          	movff	postinc2,isSameAddress@a1
 20084  00174C  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 20085  001750  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 20086  001754  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 20087  001758  CFDE F07F          	movff	postinc2,isSameAddress@a2
 20088  00175C  CFDD F080          	movff	postdec2,isSameAddress@a2+1
 20089  001760  ECBD  F039         	call	_isSameAddress	;wreg free
 20090  001764  0900               	iorlw	0
 20091  001766  E023               	bz	l16470
 20092                           
 20093                           ; BSR set to: 0
 20094                           ;RouteManager.c: 79: {
 20095                           ;RouteManager.c: 80: currentEtx = pathEtx;
 20096  001768  C099  F09B         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@currentEtx
 20097  00176C  C09A  F09C         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@currentEtx+1
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;RouteManager.c: 82: r->etx = entry->info.etx;
 20101  001770  EE20 F004          	lfsr	2,4
 20102  001774  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20103  001776  26D9               	addwf	fsr2l,f,c
 20104  001778  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20105  00177A  22DA               	addwfc	fsr2h,f,c
 20106  00177C  EE10 F002          	lfsr	1,2
 20107  001780  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20108  001782  26E1               	addwf	fsr1l,f,c
 20109  001784  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20110  001786  22E2               	addwfc	fsr1h,f,c
 20111  001788  CFDE FFE6          	movff	postinc2,postinc1
 20112  00178C  CFDD FFE5          	movff	postdec2,postdec1
 20113                           
 20114                           ;RouteManager.c: 83: r->congested = entry->info.congested;
 20115  001790  EE20 F007          	lfsr	2,7
 20116  001794  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20117  001796  26D9               	addwf	fsr2l,f,c
 20118  001798  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20119  00179A  22DA               	addwfc	fsr2h,f,c
 20120  00179C  EE10 F005          	lfsr	1,5
 20121  0017A0  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20122  0017A2  26E1               	addwf	fsr1l,f,c
 20123  0017A4  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20124  0017A6  22E2               	addwfc	fsr1h,f,c
 20125  0017A8  CFDF FFE7          	movff	indf2,indf1
 20126                           
 20127                           ;RouteManager.c: 84: }else if((entry->info.congested) || (passLinkEtxThreshold(linkEtx)=
      +                          =0) )
 20128  0017AC  D01D               	goto	l16480
 20129  0017AE                     l16470:
 20130                           
 20131                           ; BSR set to: 0
 20132  0017AE  EE20 F007          	lfsr	2,7
 20133  0017B2  51A1               	movf	RouteManagerPerformUpdate@entry& (0+255),w,b
 20134  0017B4  26D9               	addwf	fsr2l,f,c
 20135  0017B6  51A2               	movf	(RouteManagerPerformUpdate@entry+1)& (0+255),w,b
 20136  0017B8  22DA               	addwfc	fsr2h,f,c
 20137  0017BA  50DF               	movf	indf2,w,c
 20138  0017BC  E115               	bnz	l16480
 20139                           
 20140                           ; BSR set to: 0
 20141  0017BE  C095  F073         	movff	RouteManagerPerformUpdate@linkEtx,passLinkEtxThreshold@etx
 20142  0017C2  C096  F074         	movff	RouteManagerPerformUpdate@linkEtx+1,passLinkEtxThreshold@etx+1
 20143  0017C6  ECA2  F03A         	call	_passLinkEtxThreshold	;wreg free
 20144  0017CA  0900               	iorlw	0
 20145  0017CC  E00D               	bz	l16480
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;RouteManager.c: 88: {
 20149                           ;RouteManager.c: 113: if (pathEtx < minEtx)
 20150  0017CE  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20151  0017D0  5D99               	subwf	RouteManagerPerformUpdate@pathEtx& (0+255),w,b
 20152  0017D2  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20153  0017D4  599A               	subwfb	(RouteManagerPerformUpdate@pathEtx+1)& (0+255),w,b
 20154  0017D6  E208               	bc	l16480
 20155                           
 20156                           ; BSR set to: 0
 20157                           ;RouteManager.c: 115: {
 20158                           ;RouteManager.c: 116: minEtx = pathEtx;
 20159  0017D8  C099  F09F         	movff	RouteManagerPerformUpdate@pathEtx,RouteManagerPerformUpdate@minEtx
 20160  0017DC  C09A  F0A0         	movff	RouteManagerPerformUpdate@pathEtx+1,RouteManagerPerformUpdate@minEtx+1
 20161                           
 20162                           ; BSR set to: 0
 20163                           ;RouteManager.c: 117: best = entry;
 20164  0017E0  C0A1  F09D         	movff	RouteManagerPerformUpdate@entry,RouteManagerPerformUpdate@best
 20165  0017E4  C0A2  F09E         	movff	RouteManagerPerformUpdate@entry+1,RouteManagerPerformUpdate@best+1
 20166  0017E8                     l16480:
 20167                           
 20168                           ; BSR set to: 0
 20169  0017E8  4B97               	infsnz	RouteManagerPerformUpdate@i& (0+255),f,b
 20170  0017EA  2B98               	incf	(RouteManagerPerformUpdate@i+1)& (0+255),f,b
 20171  0017EC                     l16482:
 20172                           
 20173                           ; BSR set to: 0
 20174  0017EC  51EB               	movf	_routingTableActive& (0+255),w,b
 20175  0017EE  5D97               	subwf	RouteManagerPerformUpdate@i& (0+255),w,b
 20176  0017F0  51EC               	movf	(_routingTableActive+1)& (0+255),w,b
 20177  0017F2  5998               	subwfb	(RouteManagerPerformUpdate@i+1)& (0+255),w,b
 20178  0017F4  E201 D745          	bnc	l16456
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;RouteManager.c: 118: }
 20182                           ;RouteManager.c: 119: }
 20183                           ;RouteManager.c: 120: }
 20184                           ;RouteManager.c: 121: }
 20185                           ;RouteManager.c: 136: if (minEtx != 0xffff)
 20186  0017F8  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20187  0017FA  E103               	bnz	u19830
 20188  0017FC  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20189  0017FE  E101 D07F          	bz	l16506
 20190  001802                     u19830:
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;RouteManager.c: 137: {
 20194                           ;RouteManager.c: 138: if (currentEtx == 0xffff ||
 20195                           ;RouteManager.c: 139: ((1 == r->congested) && (minEtx < (r->etx + 10))) ||
 20196                           ;RouteManager.c: 140: ((minEtx + ParentSwitchThreshold) < currentEtx) )
 20197  001802  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 20198  001804  E102               	bnz	u19840
 20199  001806  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 20200  001808  E026               	bz	l16494
 20201  00180A                     u19840:
 20202                           
 20203                           ; BSR set to: 0
 20204  00180A  EE20 F005          	lfsr	2,5
 20205  00180E  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20206  001810  26D9               	addwf	fsr2l,f,c
 20207  001812  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20208  001814  22DA               	addwfc	fsr2h,f,c
 20209  001816  04DE               	decf	postinc2,w,c
 20210  001818  E113               	bnz	l16492
 20211                           
 20212                           ; BSR set to: 0
 20213  00181A  EE20 F002          	lfsr	2,2
 20214  00181E  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20215  001820  26D9               	addwf	fsr2l,f,c
 20216  001822  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20217  001824  22DA               	addwfc	fsr2h,f,c
 20218  001826  CFDE F093          	movff	postinc2,??_RouteManagerPerformUpdate
 20219  00182A  CFDD F094          	movff	postdec2,??_RouteManagerPerformUpdate+1
 20220  00182E  0E0A               	movlw	10
 20221  001830  2793               	addwf	??_RouteManagerPerformUpdate& (0+255),f,b
 20222  001832  0E00               	movlw	0
 20223  001834  2394               	addwfc	(??_RouteManagerPerformUpdate+1)& (0+255),f,b
 20224  001836  5193               	movf	??_RouteManagerPerformUpdate& (0+255),w,b
 20225  001838  5D9F               	subwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20226  00183A  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 20227  00183C  59A0               	subwfb	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20228  00183E  E30B               	bnc	l16494
 20229  001840                     l16492:
 20230                           
 20231                           ; BSR set to: 0
 20232  001840  0E0F               	movlw	15
 20233  001842  259F               	addwf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20234  001844  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 20235  001846  0E00               	movlw	0
 20236  001848  21A0               	addwfc	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20237  00184A  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 20238  00184C  519B               	movf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 20239  00184E  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 20240  001850  519C               	movf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 20241  001852  5994               	subwfb	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 20242  001854  E255               	bc	l16506
 20243  001856                     l16494:
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;RouteManager.c: 141: {
 20247                           ;RouteManager.c: 148: LE_UnpinNeighbor(r->parent);
 20248  001856  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 20249  00185A  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 20250  00185E  CFDE F085          	movff	postinc2,LE_UnpinNeighbor@neighbor
 20251  001862  CFDD F086          	movff	postdec2,LE_UnpinNeighbor@neighbor+1
 20252  001866  EC97  F037         	call	_LE_UnpinNeighbor	;wreg free
 20253                           
 20254                           ;RouteManager.c: 149: LE_PinNeighbor(best->neighbor);
 20255  00186A  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 20256  00186E  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 20257  001872  CFDE F085          	movff	postinc2,LE_PinNeighbor@neighbor
 20258  001876  CFDD F086          	movff	postdec2,LE_PinNeighbor@neighbor+1
 20259  00187A  ECB5  F037         	call	_LE_PinNeighbor	;wreg free
 20260                           
 20261                           ;RouteManager.c: 150: LE_ClearDLQ(best->neighbor);
 20262  00187E  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 20263  001882  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 20264  001886  CFDE F085          	movff	postinc2,LE_ClearDLQ@neighbor
 20265  00188A  CFDD F086          	movff	postdec2,LE_ClearDLQ@neighbor+1
 20266  00188E  EC5A  F035         	call	_LE_ClearDLQ	;wreg free
 20267                           
 20268                           ; BSR set to: 0
 20269                           ;RouteManager.c: 152: r->parent = best->neighbor;
 20270  001892  C09D  FFD9         	movff	RouteManagerPerformUpdate@best,fsr2l
 20271  001896  C09E  FFDA         	movff	RouteManagerPerformUpdate@best+1,fsr2h
 20272  00189A  C0A3  FFE1         	movff	RouteManagerPerformUpdate@r,fsr1l
 20273  00189E  C0A4  FFE2         	movff	RouteManagerPerformUpdate@r+1,fsr1h
 20274  0018A2  CFDE FFE6          	movff	postinc2,postinc1
 20275  0018A6  CFDD FFE5          	movff	postdec2,postdec1
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;RouteManager.c: 153: r->etx = best->info.etx;
 20279  0018AA  EE20 F004          	lfsr	2,4
 20280  0018AE  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 20281  0018B0  26D9               	addwf	fsr2l,f,c
 20282  0018B2  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 20283  0018B4  22DA               	addwfc	fsr2h,f,c
 20284  0018B6  EE10 F002          	lfsr	1,2
 20285  0018BA  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20286  0018BC  26E1               	addwf	fsr1l,f,c
 20287  0018BE  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20288  0018C0  22E2               	addwfc	fsr1h,f,c
 20289  0018C2  CFDE FFE6          	movff	postinc2,postinc1
 20290  0018C6  CFDD FFE5          	movff	postdec2,postdec1
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;RouteManager.c: 154: r->congested = best->info.congested;
 20294  0018CA  EE20 F007          	lfsr	2,7
 20295  0018CE  519D               	movf	RouteManagerPerformUpdate@best& (0+255),w,b
 20296  0018D0  26D9               	addwf	fsr2l,f,c
 20297  0018D2  519E               	movf	(RouteManagerPerformUpdate@best+1)& (0+255),w,b
 20298  0018D4  22DA               	addwfc	fsr2h,f,c
 20299  0018D6  EE10 F005          	lfsr	1,5
 20300  0018DA  51A3               	movf	RouteManagerPerformUpdate@r& (0+255),w,b
 20301  0018DC  26E1               	addwf	fsr1l,f,c
 20302  0018DE  51A4               	movf	(RouteManagerPerformUpdate@r+1)& (0+255),w,b
 20303  0018E0  22E2               	addwfc	fsr1h,f,c
 20304  0018E2  CFDF FFE7          	movff	indf2,indf1
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;RouteManager.c: 155: if (currentEtx - minEtx > 20)
 20308  0018E6  519F               	movf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20309  0018E8  5D9B               	subwf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 20310  0018EA  6F93               	movwf	??_RouteManagerPerformUpdate& (0+255),b
 20311  0018EC  51A0               	movf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20312  0018EE  599C               	subwfb	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 20313  0018F0  6F94               	movwf	(??_RouteManagerPerformUpdate+1)& (0+255),b
 20314  0018F2  5194               	movf	(??_RouteManagerPerformUpdate+1)& (0+255),w,b
 20315  0018F4  E103               	bnz	u19880
 20316  0018F6  0E15               	movlw	21
 20317  0018F8  5D93               	subwf	??_RouteManagerPerformUpdate& (0+255),w,b
 20318  0018FA  E302               	bnc	l16506
 20319  0018FC                     u19880:
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;RouteManager.c: 156: {
 20323                           ;RouteManager.c: 157: BeaconManagerTrigger();
 20324  0018FC  EC13  F03B         	call	_BeaconManagerTrigger	;wreg free
 20325  001900                     l16506:
 20326                           
 20327                           ;RouteManager.c: 158: }
 20328                           ;RouteManager.c: 159: }
 20329                           ;RouteManager.c: 160: }
 20330                           ;RouteManager.c: 165: if (justEvictedParent && isInvalidAddress(r->parent))
 20331  001900  5042               	movf	_justEvictedParent,w,c
 20332  001902  E00F               	bz	l16512
 20333  001904  C0A3  FFD9         	movff	RouteManagerPerformUpdate@r,fsr2l
 20334  001908  C0A4  FFDA         	movff	RouteManagerPerformUpdate@r+1,fsr2h
 20335  00190C  CFDE F085          	movff	postinc2,isInvalidAddress@address
 20336  001910  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
 20337  001914  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 20338  001918  0900               	iorlw	0
 20339  00191A  E003               	bz	l16512
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;RouteManager.c: 166: {
 20343                           ;RouteManager.c: 171: TransportManagerNoRoute();
 20344  00191C  EC21  F03B         	call	_TransportManagerNoRoute	;wreg free
 20345                           
 20346                           ;RouteManager.c: 172: }else if (!justEvictedParent && currentEtx == 0xffff && minEtx != 
      +                          0xffff)
 20347  001920  D00D               	goto	l16520
 20348  001922                     l16512:
 20349  001922  5042               	movf	_justEvictedParent,w,c
 20350  001924  E10B               	bnz	l16520
 20351  001926  0100               	movlb	0	; () banked
 20352  001928  299B               	incf	RouteManagerPerformUpdate@currentEtx& (0+255),w,b
 20353  00192A  E108               	bnz	l16520
 20354  00192C  299C               	incf	(RouteManagerPerformUpdate@currentEtx+1)& (0+255),w,b
 20355  00192E  E106               	bnz	l16520
 20356                           
 20357                           ; BSR set to: 0
 20358  001930  299F               	incf	RouteManagerPerformUpdate@minEtx& (0+255),w,b
 20359  001932  E102               	bnz	u19930
 20360  001934  29A0               	incf	(RouteManagerPerformUpdate@minEtx+1)& (0+255),w,b
 20361  001936  E002               	bz	l16520
 20362  001938                     u19930:
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;RouteManager.c: 173: {
 20366                           ;RouteManager.c: 178: TransportManagerRouteFound();
 20367  001938  EC20  F03B         	call	_TransportManagerRouteFound	;wreg free
 20368  00193C                     l16520:
 20369                           
 20370                           ;RouteManager.c: 179: }
 20371                           ;RouteManager.c: 180: justEvictedParent = 0;
 20372  00193C  6A42               	clrf	_justEvictedParent,c
 20373  00193E  0012               	return		;funcret
 20374  001940                     __end_of_RouteManagerPerformUpdate:
 20375                           	opt stack 0
 20376                           tblptru	equ	0xFF8
 20377                           tblptrh	equ	0xFF7
 20378                           tblptrl	equ	0xFF6
 20379                           tablat	equ	0xFF5
 20380                           prodh	equ	0xFF4
 20381                           prodl	equ	0xFF3
 20382                           intcon3	equ	0xFF0
 20383                           postinc0	equ	0xFEE
 20384                           plusw0	equ	0xFEB
 20385                           fsr0h	equ	0xFEA
 20386                           fsr0l	equ	0xFE9
 20387                           wreg	equ	0xFE8
 20388                           indf1	equ	0xFE7
 20389                           postinc1	equ	0xFE6
 20390                           postdec1	equ	0xFE5
 20391                           plusw1	equ	0xFE3
 20392                           fsr1h	equ	0xFE2
 20393                           fsr1l	equ	0xFE1
 20394                           indf2	equ	0xFDF
 20395                           postinc2	equ	0xFDE
 20396                           postdec2	equ	0xFDD
 20397                           plusw2	equ	0xFDB
 20398                           fsr2h	equ	0xFDA
 20399                           fsr2l	equ	0xFD9
 20400                           status	equ	0xFD8
 20401                           
 20402 ;; *************** function _passLinkEtxThreshold *****************
 20403 ;; Defined at:
 20404 ;;		line 190 in file "../RouteManager.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  etx             2   19[BANK0 ] unsigned int 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;		None
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  1    wreg      unsigned char 
 20411 ;; Registers used:
 20412 ;;		wreg, status,2, status,0
 20413 ;; Tracked objects:
 20414 ;;		On entry : F/0
 20415 ;;		On exit  : F/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20422 ;;Total ram usage:        2 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; Hardware stack levels required when called:    5
 20425 ;; This function calls:
 20426 ;;		Nothing
 20427 ;; This function is called by:
 20428 ;;		_RouteManagerPerformUpdate
 20429 ;;		_routingTableUpdateEntry
 20430 ;; This function uses a non-reentrant model
 20431 ;;
 20432                           
 20433                           	psect	text88
 20434  007544                     __ptext88:
 20435                           	opt stack 0
 20436  007544                     _passLinkEtxThreshold:
 20437                           	opt stack 21
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;RouteManager.c: 192: return (etx < rmETXThreshold);
 20441                           
 20442                           ;incstack = 0
 20443  007544  5174               	movf	(passLinkEtxThreshold@etx+1)& (0+255),w,b
 20444  007546  E104               	bnz	u19290
 20445  007548  0E32               	movlw	50
 20446  00754A  5D73               	subwf	passLinkEtxThreshold@etx& (0+255),w,b
 20447  00754C  A0D8               	btfss	status,0,c
 20448  00754E  0C01               	retlw	1
 20449  007550                     u19290:
 20450                           
 20451                           ; BSR set to: 0
 20452  007550  0C00               	retlw	0	;funcret
 20453  007552                     __end_of_passLinkEtxThreshold:
 20454                           	opt stack 0
 20455                           tblptru	equ	0xFF8
 20456                           tblptrh	equ	0xFF7
 20457                           tblptrl	equ	0xFF6
 20458                           tablat	equ	0xFF5
 20459                           prodh	equ	0xFF4
 20460                           prodl	equ	0xFF3
 20461                           intcon3	equ	0xFF0
 20462                           postinc0	equ	0xFEE
 20463                           plusw0	equ	0xFEB
 20464                           fsr0h	equ	0xFEA
 20465                           fsr0l	equ	0xFE9
 20466                           wreg	equ	0xFE8
 20467                           indf1	equ	0xFE7
 20468                           postinc1	equ	0xFE6
 20469                           postdec1	equ	0xFE5
 20470                           plusw1	equ	0xFE3
 20471                           fsr1h	equ	0xFE2
 20472                           fsr1l	equ	0xFE1
 20473                           indf2	equ	0xFDF
 20474                           postinc2	equ	0xFDE
 20475                           postdec2	equ	0xFDD
 20476                           plusw2	equ	0xFDB
 20477                           fsr2h	equ	0xFDA
 20478                           fsr2l	equ	0xFD9
 20479                           status	equ	0xFD8
 20480                           
 20481 ;; *************** function _TransportManagerRouteFound *****************
 20482 ;; Defined at:
 20483 ;;		line 278 in file "../TransportManager.c"
 20484 ;; Parameters:    Size  Location     Type
 20485 ;;		None
 20486 ;; Auto vars:     Size  Location     Type
 20487 ;;		None
 20488 ;; Return value:  Size  Location     Type
 20489 ;;                  1    wreg      void 
 20490 ;; Registers used:
 20491 ;;		None
 20492 ;; Tracked objects:
 20493 ;;		On entry : F/0
 20494 ;;		On exit  : F/0
 20495 ;;		Unchanged: F/0
 20496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20501 ;;Total ram usage:        0 bytes
 20502 ;; Hardware stack levels used:    1
 20503 ;; Hardware stack levels required when called:    5
 20504 ;; This function calls:
 20505 ;;		Nothing
 20506 ;; This function is called by:
 20507 ;;		_RouteManagerPerformUpdate
 20508 ;; This function uses a non-reentrant model
 20509 ;;
 20510                           
 20511                           	psect	text89
 20512  007640                     __ptext89:
 20513                           	opt stack 0
 20514  007640                     _TransportManagerRouteFound:
 20515                           	opt stack 21
 20516                           
 20517                           ; BSR set to: 0
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;incstack = 0
 20521  007640  0012               	return		;funcret
 20522  007642                     __end_of_TransportManagerRouteFound:
 20523                           	opt stack 0
 20524                           tblptru	equ	0xFF8
 20525                           tblptrh	equ	0xFF7
 20526                           tblptrl	equ	0xFF6
 20527                           tablat	equ	0xFF5
 20528                           prodh	equ	0xFF4
 20529                           prodl	equ	0xFF3
 20530                           intcon3	equ	0xFF0
 20531                           postinc0	equ	0xFEE
 20532                           plusw0	equ	0xFEB
 20533                           fsr0h	equ	0xFEA
 20534                           fsr0l	equ	0xFE9
 20535                           wreg	equ	0xFE8
 20536                           indf1	equ	0xFE7
 20537                           postinc1	equ	0xFE6
 20538                           postdec1	equ	0xFE5
 20539                           plusw1	equ	0xFE3
 20540                           fsr1h	equ	0xFE2
 20541                           fsr1l	equ	0xFE1
 20542                           indf2	equ	0xFDF
 20543                           postinc2	equ	0xFDE
 20544                           postdec2	equ	0xFDD
 20545                           plusw2	equ	0xFDB
 20546                           fsr2h	equ	0xFDA
 20547                           fsr2l	equ	0xFD9
 20548                           status	equ	0xFD8
 20549                           
 20550 ;; *************** function _TransportManagerNoRoute *****************
 20551 ;; Defined at:
 20552 ;;		line 273 in file "../TransportManager.c"
 20553 ;; Parameters:    Size  Location     Type
 20554 ;;		None
 20555 ;; Auto vars:     Size  Location     Type
 20556 ;;		None
 20557 ;; Return value:  Size  Location     Type
 20558 ;;                  1    wreg      void 
 20559 ;; Registers used:
 20560 ;;		None
 20561 ;; Tracked objects:
 20562 ;;		On entry : F/0
 20563 ;;		On exit  : F/0
 20564 ;;		Unchanged: F/0
 20565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20570 ;;Total ram usage:        0 bytes
 20571 ;; Hardware stack levels used:    1
 20572 ;; Hardware stack levels required when called:    5
 20573 ;; This function calls:
 20574 ;;		Nothing
 20575 ;; This function is called by:
 20576 ;;		_RouteManagerPerformUpdate
 20577 ;; This function uses a non-reentrant model
 20578 ;;
 20579                           
 20580                           	psect	text90
 20581  007642                     __ptext90:
 20582                           	opt stack 0
 20583  007642                     _TransportManagerNoRoute:
 20584                           	opt stack 21
 20585                           
 20586                           ; BSR set to: 0
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;incstack = 0
 20590  007642  0012               	return		;funcret
 20591  007644                     __end_of_TransportManagerNoRoute:
 20592                           	opt stack 0
 20593                           tblptru	equ	0xFF8
 20594                           tblptrh	equ	0xFF7
 20595                           tblptrl	equ	0xFF6
 20596                           tablat	equ	0xFF5
 20597                           prodh	equ	0xFF4
 20598                           prodl	equ	0xFF3
 20599                           intcon3	equ	0xFF0
 20600                           postinc0	equ	0xFEE
 20601                           plusw0	equ	0xFEB
 20602                           fsr0h	equ	0xFEA
 20603                           fsr0l	equ	0xFE9
 20604                           wreg	equ	0xFE8
 20605                           indf1	equ	0xFE7
 20606                           postinc1	equ	0xFE6
 20607                           postdec1	equ	0xFE5
 20608                           plusw1	equ	0xFE3
 20609                           fsr1h	equ	0xFE2
 20610                           fsr1l	equ	0xFE1
 20611                           indf2	equ	0xFDF
 20612                           postinc2	equ	0xFDE
 20613                           postdec2	equ	0xFDD
 20614                           plusw2	equ	0xFDB
 20615                           fsr2h	equ	0xFDA
 20616                           fsr2l	equ	0xFD9
 20617                           status	equ	0xFD8
 20618                           
 20619 ;; *************** function _LE_UnpinNeighbor *****************
 20620 ;; Defined at:
 20621 ;;		line 133 in file "../LinkEstimator.c"
 20622 ;; Parameters:    Size  Location     Type
 20623 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 20624 ;; Auto vars:     Size  Location     Type
 20625 ;;  nidx            2   42[BANK0 ] unsigned int 
 20626 ;;  res             1    0        enum E179
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      enum E180
 20629 ;; Registers used:
 20630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : F/0
 20633 ;;		On exit  : F/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20636 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20637 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20639 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20640 ;;Total ram usage:        7 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:    8
 20643 ;; This function calls:
 20644 ;;		_le_findIdx
 20645 ;; This function is called by:
 20646 ;;		_RouteManagerPerformUpdate
 20647 ;; This function uses a non-reentrant model
 20648 ;;
 20649                           
 20650                           	psect	text91
 20651  006F2E                     __ptext91:
 20652                           	opt stack 0
 20653  006F2E                     _LE_UnpinNeighbor:
 20654                           	opt stack 18
 20655                           
 20656                           ; BSR set to: 0
 20657                           ;LinkEstimator.c: 135: uint16_t nidx = le_findIdx(neighbor);
 20658                           
 20659                           ; BSR set to: 0
 20660                           ;incstack = 0
 20661  006F2E  C085  F081         	movff	LE_UnpinNeighbor@neighbor,le_findIdx@ll_addr
 20662  006F32  C086  F082         	movff	LE_UnpinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 20663  006F36  EC83  F034         	call	_le_findIdx	;wreg free
 20664  006F3A  6F8A               	movwf	LE_UnpinNeighbor@nidx& (0+255),b
 20665  006F3C  6B8B               	clrf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 20666                           
 20667                           ; BSR set to: 0
 20668                           ;LinkEstimator.c: 137: if (nidx != 0xff)
 20669                           
 20670                           ; BSR set to: 0
 20671  006F3E  298A               	incf	LE_UnpinNeighbor@nidx& (0+255),w,b
 20672  006F40  118B               	iorwf	(LE_UnpinNeighbor@nidx+1)& (0+255),w,b
 20673  006F42  B4D8               	btfsc	status,2,c
 20674  006F44  0012               	return	
 20675                           
 20676                           ; BSR set to: 0
 20677                           ;LinkEstimator.c: 138: {
 20678                           ;LinkEstimator.c: 139: neighbor_tbl[nidx].flags &= ~0x8;
 20679  006F46  0E0B               	movlw	11
 20680  006F48  038A               	mulwf	LE_UnpinNeighbor@nidx& (0+255),b
 20681  006F4A  CFF3 F087          	movff	prodl,??_LE_UnpinNeighbor
 20682  006F4E  CFF4 F088          	movff	prodh,??_LE_UnpinNeighbor+1
 20683  006F52  038B               	mulwf	(LE_UnpinNeighbor@nidx+1)& (0+255),b
 20684  006F54  50F3               	movf	prodl,w,c
 20685  006F56  2788               	addwf	(??_LE_UnpinNeighbor+1)& (0+255),f,b
 20686  006F58  0E05               	movlw	low (_neighbor_tbl+5)
 20687  006F5A  2587               	addwf	??_LE_UnpinNeighbor& (0+255),w,b
 20688  006F5C  6ED9               	movwf	fsr2l,c
 20689  006F5E  0E05               	movlw	high (_neighbor_tbl+5)
 20690  006F60  2188               	addwfc	(??_LE_UnpinNeighbor+1)& (0+255),w,b
 20691  006F62  6EDA               	movwf	fsr2h,c
 20692  006F64  0EF7               	movlw	247
 20693  006F66  16DF               	andwf	indf2,f,c
 20694                           
 20695                           ; BSR set to: 0
 20696                           
 20697                           ; BSR set to: 0
 20698  006F68  0CF7               	retlw	247	;funcret
 20699  006F6A                     __end_of_LE_UnpinNeighbor:
 20700                           	opt stack 0
 20701                           tblptru	equ	0xFF8
 20702                           tblptrh	equ	0xFF7
 20703                           tblptrl	equ	0xFF6
 20704                           tablat	equ	0xFF5
 20705                           prodh	equ	0xFF4
 20706                           prodl	equ	0xFF3
 20707                           intcon3	equ	0xFF0
 20708                           postinc0	equ	0xFEE
 20709                           plusw0	equ	0xFEB
 20710                           fsr0h	equ	0xFEA
 20711                           fsr0l	equ	0xFE9
 20712                           wreg	equ	0xFE8
 20713                           indf1	equ	0xFE7
 20714                           postinc1	equ	0xFE6
 20715                           postdec1	equ	0xFE5
 20716                           plusw1	equ	0xFE3
 20717                           fsr1h	equ	0xFE2
 20718                           fsr1l	equ	0xFE1
 20719                           indf2	equ	0xFDF
 20720                           postinc2	equ	0xFDE
 20721                           postdec2	equ	0xFDD
 20722                           plusw2	equ	0xFDB
 20723                           fsr2h	equ	0xFDA
 20724                           fsr2l	equ	0xFD9
 20725                           status	equ	0xFD8
 20726                           
 20727 ;; *************** function _LE_PinNeighbor *****************
 20728 ;; Defined at:
 20729 ;;		line 120 in file "../LinkEstimator.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 20732 ;; Auto vars:     Size  Location     Type
 20733 ;;  nidx            2   42[BANK0 ] unsigned int 
 20734 ;;  res             1    0        enum E179
 20735 ;; Return value:  Size  Location     Type
 20736 ;;                  1    wreg      enum E180
 20737 ;; Registers used:
 20738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20739 ;; Tracked objects:
 20740 ;;		On entry : F/0
 20741 ;;		On exit  : F/0
 20742 ;;		Unchanged: 0/0
 20743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20745 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20747 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20748 ;;Total ram usage:        7 bytes
 20749 ;; Hardware stack levels used:    1
 20750 ;; Hardware stack levels required when called:    8
 20751 ;; This function calls:
 20752 ;;		_le_findIdx
 20753 ;; This function is called by:
 20754 ;;		_RouteManagerPerformUpdate
 20755 ;;		_RouteManagerProcessReceive
 20756 ;; This function uses a non-reentrant model
 20757 ;;
 20758                           
 20759                           	psect	text92
 20760  006F6A                     __ptext92:
 20761                           	opt stack 0
 20762  006F6A                     _LE_PinNeighbor:
 20763                           	opt stack 19
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;LinkEstimator.c: 122: uint16_t nidx = le_findIdx(neighbor);
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;incstack = 0
 20770  006F6A  C085  F081         	movff	LE_PinNeighbor@neighbor,le_findIdx@ll_addr
 20771  006F6E  C086  F082         	movff	LE_PinNeighbor@neighbor+1,le_findIdx@ll_addr+1
 20772  006F72  EC83  F034         	call	_le_findIdx	;wreg free
 20773  006F76  6F8A               	movwf	LE_PinNeighbor@nidx& (0+255),b
 20774  006F78  6B8B               	clrf	(LE_PinNeighbor@nidx+1)& (0+255),b
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;LinkEstimator.c: 124: if (nidx != 0xff)
 20778                           
 20779                           ; BSR set to: 0
 20780  006F7A  298A               	incf	LE_PinNeighbor@nidx& (0+255),w,b
 20781  006F7C  118B               	iorwf	(LE_PinNeighbor@nidx+1)& (0+255),w,b
 20782  006F7E  B4D8               	btfsc	status,2,c
 20783  006F80  0012               	return	
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;LinkEstimator.c: 125: {
 20787                           ;LinkEstimator.c: 126: neighbor_tbl[nidx].flags |= 0x8;
 20788  006F82  0E0B               	movlw	11
 20789  006F84  038A               	mulwf	LE_PinNeighbor@nidx& (0+255),b
 20790  006F86  CFF3 F087          	movff	prodl,??_LE_PinNeighbor
 20791  006F8A  CFF4 F088          	movff	prodh,??_LE_PinNeighbor+1
 20792  006F8E  038B               	mulwf	(LE_PinNeighbor@nidx+1)& (0+255),b
 20793  006F90  50F3               	movf	prodl,w,c
 20794  006F92  2788               	addwf	(??_LE_PinNeighbor+1)& (0+255),f,b
 20795  006F94  0E05               	movlw	low (_neighbor_tbl+5)
 20796  006F96  2587               	addwf	??_LE_PinNeighbor& (0+255),w,b
 20797  006F98  6ED9               	movwf	fsr2l,c
 20798  006F9A  0E05               	movlw	high (_neighbor_tbl+5)
 20799  006F9C  2188               	addwfc	(??_LE_PinNeighbor+1)& (0+255),w,b
 20800  006F9E  6EDA               	movwf	fsr2h,c
 20801  006FA0  0E00               	movlw	0
 20802  006FA2  86DB               	bsf	plusw2,3,c
 20803                           
 20804                           ; BSR set to: 0
 20805  006FA4  0C00               	retlw	0	;funcret
 20806  006FA6                     __end_of_LE_PinNeighbor:
 20807                           	opt stack 0
 20808                           tblptru	equ	0xFF8
 20809                           tblptrh	equ	0xFF7
 20810                           tblptrl	equ	0xFF6
 20811                           tablat	equ	0xFF5
 20812                           prodh	equ	0xFF4
 20813                           prodl	equ	0xFF3
 20814                           intcon3	equ	0xFF0
 20815                           postinc0	equ	0xFEE
 20816                           plusw0	equ	0xFEB
 20817                           fsr0h	equ	0xFEA
 20818                           fsr0l	equ	0xFE9
 20819                           wreg	equ	0xFE8
 20820                           indf1	equ	0xFE7
 20821                           postinc1	equ	0xFE6
 20822                           postdec1	equ	0xFE5
 20823                           plusw1	equ	0xFE3
 20824                           fsr1h	equ	0xFE2
 20825                           fsr1l	equ	0xFE1
 20826                           indf2	equ	0xFDF
 20827                           postinc2	equ	0xFDE
 20828                           postdec2	equ	0xFDD
 20829                           plusw2	equ	0xFDB
 20830                           fsr2h	equ	0xFDA
 20831                           fsr2l	equ	0xFD9
 20832                           status	equ	0xFD8
 20833                           
 20834 ;; *************** function _LE_ClearDLQ *****************
 20835 ;; Defined at:
 20836 ;;		line 145 in file "../LinkEstimator.c"
 20837 ;; Parameters:    Size  Location     Type
 20838 ;;  neighbor        2   37[BANK0 ] struct addr_t_def
 20839 ;; Auto vars:     Size  Location     Type
 20840 ;;  nidx            2   44[BANK0 ] unsigned int 
 20841 ;;  ne              2   42[BANK0 ] PTR struct neighbor_tabl
 20842 ;;		 -> neighbor_tbl(220), 
 20843 ;;  res             1    0        enum E179
 20844 ;; Return value:  Size  Location     Type
 20845 ;;                  1    wreg      enum E180
 20846 ;; Registers used:
 20847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20848 ;; Tracked objects:
 20849 ;;		On entry : F/0
 20850 ;;		On exit  : F/0
 20851 ;;		Unchanged: 0/0
 20852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20854 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20855 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20856 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20857 ;;Total ram usage:        9 bytes
 20858 ;; Hardware stack levels used:    1
 20859 ;; Hardware stack levels required when called:    8
 20860 ;; This function calls:
 20861 ;;		_le_findIdx
 20862 ;; This function is called by:
 20863 ;;		_RouteManagerPerformUpdate
 20864 ;; This function uses a non-reentrant model
 20865 ;;
 20866                           
 20867                           	psect	text93
 20868  006AB4                     __ptext93:
 20869                           	opt stack 0
 20870  006AB4                     _LE_ClearDLQ:
 20871                           	opt stack 18
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;LinkEstimator.c: 149: uint16_t nidx = le_findIdx(neighbor);
 20875                           
 20876                           ; BSR set to: 0
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;incstack = 0
 20880  006AB4  C085  F081         	movff	LE_ClearDLQ@neighbor,le_findIdx@ll_addr
 20881  006AB8  C086  F082         	movff	LE_ClearDLQ@neighbor+1,le_findIdx@ll_addr+1
 20882  006ABC  EC83  F034         	call	_le_findIdx	;wreg free
 20883  006AC0  6F8C               	movwf	LE_ClearDLQ@nidx& (0+255),b
 20884  006AC2  6B8D               	clrf	(LE_ClearDLQ@nidx+1)& (0+255),b
 20885                           
 20886                           ; BSR set to: 0
 20887                           ;LinkEstimator.c: 150: if (nidx != 0xff)
 20888  006AC4  298C               	incf	LE_ClearDLQ@nidx& (0+255),w,b
 20889  006AC6  118D               	iorwf	(LE_ClearDLQ@nidx+1)& (0+255),w,b
 20890  006AC8  B4D8               	btfsc	status,2,c
 20891  006ACA  0012               	return	
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;LinkEstimator.c: 151: {
 20895                           ;LinkEstimator.c: 152: ne = &neighbor_tbl[nidx];
 20896  006ACC  0E0B               	movlw	11
 20897  006ACE  038C               	mulwf	LE_ClearDLQ@nidx& (0+255),b
 20898  006AD0  CFF3 F087          	movff	prodl,??_LE_ClearDLQ
 20899  006AD4  CFF4 F088          	movff	prodh,??_LE_ClearDLQ+1
 20900  006AD8  038D               	mulwf	(LE_ClearDLQ@nidx+1)& (0+255),b
 20901  006ADA  50F3               	movf	prodl,w,c
 20902  006ADC  2788               	addwf	(??_LE_ClearDLQ+1)& (0+255),f,b
 20903  006ADE  0E00               	movlw	low _neighbor_tbl
 20904  006AE0  2587               	addwf	??_LE_ClearDLQ& (0+255),w,b
 20905  006AE2  6F8A               	movwf	LE_ClearDLQ@ne& (0+255),b
 20906  006AE4  0E05               	movlw	high _neighbor_tbl
 20907  006AE6  2188               	addwfc	(??_LE_ClearDLQ+1)& (0+255),w,b
 20908  006AE8  6F8B               	movwf	(LE_ClearDLQ@ne+1)& (0+255),b
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;LinkEstimator.c: 153: ne->data_total = 0;
 20912  006AEA  EE20 F00A          	lfsr	2,10
 20913  006AEE  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 20914  006AF0  26D9               	addwf	fsr2l,f,c
 20915  006AF2  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 20916  006AF4  22DA               	addwfc	fsr2h,f,c
 20917  006AF6  6ADF               	clrf	indf2,c
 20918                           
 20919                           ; BSR set to: 0
 20920                           ;LinkEstimator.c: 154: ne->data_success = 0;
 20921  006AF8  EE20 F009          	lfsr	2,9
 20922  006AFC  518A               	movf	LE_ClearDLQ@ne& (0+255),w,b
 20923  006AFE  26D9               	addwf	fsr2l,f,c
 20924  006B00  518B               	movf	(LE_ClearDLQ@ne+1)& (0+255),w,b
 20925  006B02  22DA               	addwfc	fsr2h,f,c
 20926  006B04  6ADF               	clrf	indf2,c
 20927                           
 20928                           ; BSR set to: 0
 20929                           
 20930                           ; BSR set to: 0
 20931  006B06  0C00               	retlw	0	;funcret
 20932  006B08                     __end_of_LE_ClearDLQ:
 20933                           	opt stack 0
 20934                           tblptru	equ	0xFF8
 20935                           tblptrh	equ	0xFF7
 20936                           tblptrl	equ	0xFF6
 20937                           tablat	equ	0xFF5
 20938                           prodh	equ	0xFF4
 20939                           prodl	equ	0xFF3
 20940                           intcon3	equ	0xFF0
 20941                           postinc0	equ	0xFEE
 20942                           plusw0	equ	0xFEB
 20943                           fsr0h	equ	0xFEA
 20944                           fsr0l	equ	0xFE9
 20945                           wreg	equ	0xFE8
 20946                           indf1	equ	0xFE7
 20947                           postinc1	equ	0xFE6
 20948                           postdec1	equ	0xFE5
 20949                           plusw1	equ	0xFE3
 20950                           fsr1h	equ	0xFE2
 20951                           fsr1l	equ	0xFE1
 20952                           indf2	equ	0xFDF
 20953                           postinc2	equ	0xFDE
 20954                           postdec2	equ	0xFDD
 20955                           plusw2	equ	0xFDB
 20956                           fsr2h	equ	0xFDA
 20957                           fsr2l	equ	0xFD9
 20958                           status	equ	0xFD8
 20959                           
 20960 ;; *************** function _BeaconManagerTrigger *****************
 20961 ;; Defined at:
 20962 ;;		line 152 in file "../BeaconManager.c"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;		None
 20965 ;; Auto vars:     Size  Location     Type
 20966 ;;		None
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  1    wreg      void 
 20969 ;; Registers used:
 20970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20971 ;; Tracked objects:
 20972 ;;		On entry : F/0
 20973 ;;		On exit  : F/1
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20980 ;;Total ram usage:        0 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; Hardware stack levels required when called:   10
 20983 ;; This function calls:
 20984 ;;		_netResetInterval
 20985 ;; This function is called by:
 20986 ;;		_RouteManagerPerformUpdate
 20987 ;;		_RouteManagerProcessReceive
 20988 ;;		_NetworkManagerProcessIncomingData
 20989 ;; This function uses a non-reentrant model
 20990 ;;
 20991                           
 20992                           	psect	text94
 20993  007626                     __ptext94:
 20994                           	opt stack 0
 20995  007626                     _BeaconManagerTrigger:
 20996                           	opt stack 17
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;BeaconManager.c: 154: netResetInterval();
 21000                           
 21001                           ; BSR set to: 0
 21002                           ;incstack = 0
 21003  007626  EF3F  F03A         	goto	_netResetInterval	;wreg free
 21004  00762A                     __end_of_BeaconManagerTrigger:
 21005                           	opt stack 0
 21006                           tblptru	equ	0xFF8
 21007                           tblptrh	equ	0xFF7
 21008                           tblptrl	equ	0xFF6
 21009                           tablat	equ	0xFF5
 21010                           prodh	equ	0xFF4
 21011                           prodl	equ	0xFF3
 21012                           intcon3	equ	0xFF0
 21013                           postinc0	equ	0xFEE
 21014                           plusw0	equ	0xFEB
 21015                           fsr0h	equ	0xFEA
 21016                           fsr0l	equ	0xFE9
 21017                           wreg	equ	0xFE8
 21018                           indf1	equ	0xFE7
 21019                           postinc1	equ	0xFE6
 21020                           postdec1	equ	0xFE5
 21021                           plusw1	equ	0xFE3
 21022                           fsr1h	equ	0xFE2
 21023                           fsr1l	equ	0xFE1
 21024                           indf2	equ	0xFDF
 21025                           postinc2	equ	0xFDE
 21026                           postdec2	equ	0xFDD
 21027                           plusw2	equ	0xFDB
 21028                           fsr2h	equ	0xFDA
 21029                           fsr2l	equ	0xFD9
 21030                           status	equ	0xFD8
 21031                           
 21032 ;; *************** function _netResetInterval *****************
 21033 ;; Defined at:
 21034 ;;		line 135 in file "../BeaconManager.c"
 21035 ;; Parameters:    Size  Location     Type
 21036 ;;		None
 21037 ;; Auto vars:     Size  Location     Type
 21038 ;;		None
 21039 ;; Return value:  Size  Location     Type
 21040 ;;                  1    wreg      void 
 21041 ;; Registers used:
 21042 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21043 ;; Tracked objects:
 21044 ;;		On entry : E/1
 21045 ;;		On exit  : F/1
 21046 ;;		Unchanged: 0/0
 21047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21052 ;;Total ram usage:        0 bytes
 21053 ;; Hardware stack levels used:    1
 21054 ;; Hardware stack levels required when called:    9
 21055 ;; This function calls:
 21056 ;;		_netChooseAdvertiseTime
 21057 ;; This function is called by:
 21058 ;;		_BeaconManagerInit
 21059 ;;		_BeaconManagerTrigger
 21060 ;; This function uses a non-reentrant model
 21061 ;;
 21062                           
 21063                           	psect	text95
 21064  00747E                     __ptext95:
 21065                           	opt stack 0
 21066  00747E                     _netResetInterval:
 21067                           	opt stack 18
 21068                           
 21069                           ;BeaconManager.c: 137: currentInterval = ((SPAN)100);
 21070                           
 21071                           ; BSR set to: 1
 21072                           ;incstack = 0
 21073  00747E  0E64               	movlw	100
 21074  007480  0101               	movlb	1	; () banked
 21075  007482  6F92               	movwf	_currentInterval& (0+255),b
 21076  007484  6B93               	clrf	(_currentInterval+1)& (0+255),b
 21077  007486  6B94               	clrf	(_currentInterval+2)& (0+255),b
 21078  007488  6B95               	clrf	(_currentInterval+3)& (0+255),b
 21079                           
 21080                           ; BSR set to: 1
 21081                           ;BeaconManager.c: 138: netChooseAdvertiseTime();
 21082  00748A  EC70  F031         	call	_netChooseAdvertiseTime	;wreg free
 21083                           
 21084                           ; BSR set to: 0
 21085                           ;BeaconManager.c: 139: BMState=BM_WaitInitial;
 21086  00748E  0E02               	movlw	2
 21087  007490  0101               	movlb	1	; () banked
 21088  007492  6FB7               	movwf	_BMState& (0+255),b
 21089                           
 21090                           ; BSR set to: 1
 21091  007494  0C02               	retlw	2	;funcret
 21092  007496                     __end_of_netResetInterval:
 21093                           	opt stack 0
 21094                           tblptru	equ	0xFF8
 21095                           tblptrh	equ	0xFF7
 21096                           tblptrl	equ	0xFF6
 21097                           tablat	equ	0xFF5
 21098                           prodh	equ	0xFF4
 21099                           prodl	equ	0xFF3
 21100                           intcon3	equ	0xFF0
 21101                           postinc0	equ	0xFEE
 21102                           plusw0	equ	0xFEB
 21103                           fsr0h	equ	0xFEA
 21104                           fsr0l	equ	0xFE9
 21105                           wreg	equ	0xFE8
 21106                           indf1	equ	0xFE7
 21107                           postinc1	equ	0xFE6
 21108                           postdec1	equ	0xFE5
 21109                           plusw1	equ	0xFE3
 21110                           fsr1h	equ	0xFE2
 21111                           fsr1l	equ	0xFE1
 21112                           indf2	equ	0xFDF
 21113                           postinc2	equ	0xFDE
 21114                           postdec2	equ	0xFDD
 21115                           plusw2	equ	0xFDB
 21116                           fsr2h	equ	0xFDA
 21117                           fsr2l	equ	0xFD9
 21118                           status	equ	0xFD8
 21119                           
 21120 ;; *************** function _RMRoutingTableCount *****************
 21121 ;; Defined at:
 21122 ;;		line 408 in file "../RouteManager.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;		None
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  2   19[BANK0 ] unsigned int 
 21129 ;; Registers used:
 21130 ;;		None
 21131 ;; Tracked objects:
 21132 ;;		On entry : C/1
 21133 ;;		On exit  : C/0
 21134 ;;		Unchanged: C/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21140 ;;Total ram usage:        2 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:    5
 21143 ;; This function calls:
 21144 ;;		Nothing
 21145 ;; This function is called by:
 21146 ;;		_NetworkManagerTask
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150                           	psect	text96
 21151  0075CC                     __ptext96:
 21152                           	opt stack 0
 21153  0075CC                     _RMRoutingTableCount:
 21154                           	opt stack 23
 21155                           
 21156                           ;RouteManager.c: 410: return(routingTableActive);
 21157                           
 21158                           ; BSR set to: 1
 21159                           ;incstack = 0
 21160  0075CC  C0EB  F073         	movff	_routingTableActive,?_RMRoutingTableCount
 21161  0075D0  C0EC  F074         	movff	_routingTableActive+1,?_RMRoutingTableCount+1
 21162  0075D4  0012               	return		;funcret
 21163  0075D6                     __end_of_RMRoutingTableCount:
 21164                           	opt stack 0
 21165                           tblptru	equ	0xFF8
 21166                           tblptrh	equ	0xFF7
 21167                           tblptrl	equ	0xFF6
 21168                           tablat	equ	0xFF5
 21169                           prodh	equ	0xFF4
 21170                           prodl	equ	0xFF3
 21171                           intcon3	equ	0xFF0
 21172                           postinc0	equ	0xFEE
 21173                           plusw0	equ	0xFEB
 21174                           fsr0h	equ	0xFEA
 21175                           fsr0l	equ	0xFE9
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postinc1	equ	0xFE6
 21179                           postdec1	equ	0xFE5
 21180                           plusw1	equ	0xFE3
 21181                           fsr1h	equ	0xFE2
 21182                           fsr1l	equ	0xFE1
 21183                           indf2	equ	0xFDF
 21184                           postinc2	equ	0xFDE
 21185                           postdec2	equ	0xFDD
 21186                           plusw2	equ	0xFDB
 21187                           fsr2h	equ	0xFDA
 21188                           fsr2l	equ	0xFD9
 21189                           status	equ	0xFD8
 21190                           
 21191 ;; *************** function _MiApp_IsNetworkBusy *****************
 21192 ;; Defined at:
 21193 ;;		line 157 in file "../BeaconManager.c"
 21194 ;; Parameters:    Size  Location     Type
 21195 ;;		None
 21196 ;; Auto vars:     Size  Location     Type
 21197 ;;		None
 21198 ;; Return value:  Size  Location     Type
 21199 ;;                  1    wreg      unsigned char 
 21200 ;; Registers used:
 21201 ;;		wreg
 21202 ;; Tracked objects:
 21203 ;;		On entry : F/2
 21204 ;;		On exit  : F/2
 21205 ;;		Unchanged: F/0
 21206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21211 ;;Total ram usage:        0 bytes
 21212 ;; Hardware stack levels used:    1
 21213 ;; Hardware stack levels required when called:    5
 21214 ;; This function calls:
 21215 ;;		Nothing
 21216 ;; This function is called by:
 21217 ;;		_NetworkManagerTask
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text97
 21222  007644                     __ptext97:
 21223                           	opt stack 0
 21224  007644                     _MiApp_IsNetworkBusy:
 21225                           	opt stack 23
 21226                           
 21227                           ; BSR set to: 2
 21228                           
 21229                           ; BSR set to: 2
 21230                           ;BeaconManager.c: 159: return(0);
 21231                           
 21232                           ;incstack = 0
 21233  007644  0C00               	retlw	0	;funcret
 21234  007646                     __end_of_MiApp_IsNetworkBusy:
 21235                           	opt stack 0
 21236                           tblptru	equ	0xFF8
 21237                           tblptrh	equ	0xFF7
 21238                           tblptrl	equ	0xFF6
 21239                           tablat	equ	0xFF5
 21240                           prodh	equ	0xFF4
 21241                           prodl	equ	0xFF3
 21242                           intcon3	equ	0xFF0
 21243                           postinc0	equ	0xFEE
 21244                           plusw0	equ	0xFEB
 21245                           fsr0h	equ	0xFEA
 21246                           fsr0l	equ	0xFE9
 21247                           wreg	equ	0xFE8
 21248                           indf1	equ	0xFE7
 21249                           postinc1	equ	0xFE6
 21250                           postdec1	equ	0xFE5
 21251                           plusw1	equ	0xFE3
 21252                           fsr1h	equ	0xFE2
 21253                           fsr1l	equ	0xFE1
 21254                           indf2	equ	0xFDF
 21255                           postinc2	equ	0xFDE
 21256                           postdec2	equ	0xFDD
 21257                           plusw2	equ	0xFDB
 21258                           fsr2h	equ	0xFDA
 21259                           fsr2l	equ	0xFD9
 21260                           status	equ	0xFD8
 21261                           
 21262 ;; *************** function _BroadcastManagerTask *****************
 21263 ;; Defined at:
 21264 ;;		line 29 in file "../BroadcastManager.c"
 21265 ;; Parameters:    Size  Location     Type
 21266 ;;		None
 21267 ;; Auto vars:     Size  Location     Type
 21268 ;;  i               2  111[BANK0 ] unsigned int 
 21269 ;;  PANID           2  109[BANK0 ] unsigned int 
 21270 ;; Return value:  Size  Location     Type
 21271 ;;                  1    wreg      void 
 21272 ;; Registers used:
 21273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21274 ;; Tracked objects:
 21275 ;;		On entry : F/0
 21276 ;;		On exit  : F/0
 21277 ;;		Unchanged: 0/0
 21278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21280 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21281 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21282 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21283 ;;Total ram usage:       14 bytes
 21284 ;; Hardware stack levels used:    1
 21285 ;; Hardware stack levels required when called:   12
 21286 ;; This function calls:
 21287 ;;		_MSTickGet
 21288 ;;		_NetworkGetPANID
 21289 ;;		_memset
 21290 ;;		_radioBroadcast
 21291 ;; This function is called by:
 21292 ;;		_NetworkManagerTask
 21293 ;; This function uses a non-reentrant model
 21294 ;;
 21295                           
 21296                           	psect	text98
 21297  002C48                     __ptext98:
 21298                           	opt stack 0
 21299  002C48                     _BroadcastManagerTask:
 21300                           	opt stack 16
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;BroadcastManager.c: 31: uint16_t i;
 21304                           ;BroadcastManager.c: 32: uint16_t PANID;
 21305                           ;BroadcastManager.c: 34: for(i=0;i<6;i++)
 21306                           
 21307                           ; BSR set to: 2
 21308                           ;incstack = 0
 21309  002C48  6BCF               	clrf	BroadcastManagerTask@i& (0+255),b
 21310  002C4A  6BD0               	clrf	(BroadcastManagerTask@i+1)& (0+255),b
 21311  002C4C                     l17258:
 21312                           
 21313                           ; BSR set to: 0
 21314                           ;BroadcastManager.c: 35: {
 21315                           ;BroadcastManager.c: 36: if( (((RbcQ[i].TxTime.msb==0) && (RbcQ[i].TxTime.lsb==0))==0) &
      +                          & ((MSTickGet().msb>RbcQ[i].TxTime.msb) || ((MSTickGet().msb==RbcQ[i].TxTime.msb) && (MS
      +                          TickGet().lsb>=RbcQ[i].TxTime.lsb) ) ) )
 21316  002C4C  0E4A               	movlw	74
 21317  002C4E  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21318  002C50  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 21319  002C54  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 21320  002C58  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21321  002C5A  50F3               	movf	prodl,w,c
 21322  002C5C  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 21323  002C5E  0E4F               	movlw	low (_RbcQ+4)
 21324  002C60  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 21325  002C62  6ED9               	movwf	fsr2l,c
 21326  002C64  0E09               	movlw	high (_RbcQ+4)
 21327  002C66  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 21328  002C68  6EDA               	movwf	fsr2h,c
 21329  002C6A  50DE               	movf	postinc2,w,c
 21330  002C6C  10DE               	iorwf	postinc2,w,c
 21331  002C6E  10DE               	iorwf	postinc2,w,c
 21332  002C70  10DE               	iorwf	postinc2,w,c
 21333  002C72  E115               	bnz	l17262
 21334                           
 21335                           ; BSR set to: 0
 21336  002C74  0E4A               	movlw	74
 21337  002C76  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21338  002C78  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 21339  002C7C  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 21340  002C80  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21341  002C82  50F3               	movf	prodl,w,c
 21342  002C84  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 21343  002C86  0E4B               	movlw	low _RbcQ
 21344  002C88  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 21345  002C8A  6ED9               	movwf	fsr2l,c
 21346  002C8C  0E09               	movlw	high _RbcQ
 21347  002C8E  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 21348  002C90  6EDA               	movwf	fsr2h,c
 21349  002C92  50DE               	movf	postinc2,w,c
 21350  002C94  10DE               	iorwf	postinc2,w,c
 21351  002C96  10DE               	iorwf	postinc2,w,c
 21352  002C98  10DE               	iorwf	postinc2,w,c
 21353  002C9A  E101 D0C4          	bz	l17278
 21354  002C9E                     l17262:
 21355                           
 21356                           ; BSR set to: 0
 21357  002C9E  EC27  F038         	call	_MSTickGet	;wreg free
 21358  002CA2  0E04               	movlw	4
 21359  002CA4  26E9               	addwf	fsr0l,f,c
 21360  002CA6  0E00               	movlw	0
 21361  002CA8  22EA               	addwfc	fsr0h,f,c
 21362  002CAA  0E4A               	movlw	74
 21363  002CAC  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21364  002CAE  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 21365  002CB2  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 21366  002CB6  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21367  002CB8  50F3               	movf	prodl,w,c
 21368  002CBA  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 21369  002CBC  0E4F               	movlw	low (_RbcQ+4)
 21370  002CBE  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 21371  002CC0  6ED9               	movwf	fsr2l,c
 21372  002CC2  0E09               	movlw	high (_RbcQ+4)
 21373  002CC4  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 21374  002CC6  6EDA               	movwf	fsr2h,c
 21375  002CC8  50EE               	movf	postinc0,w,c
 21376  002CCA  5CDE               	subwf	postinc2,w,c
 21377  002CCC  50EE               	movf	postinc0,w,c
 21378  002CCE  58DE               	subwfb	postinc2,w,c
 21379  002CD0  50EE               	movf	postinc0,w,c
 21380  002CD2  58DE               	subwfb	postinc2,w,c
 21381  002CD4  50EE               	movf	postinc0,w,c
 21382  002CD6  58DE               	subwfb	postinc2,w,c
 21383  002CD8  E33C               	bnc	l17268
 21384                           
 21385                           ; BSR set to: 0
 21386  002CDA  EC27  F038         	call	_MSTickGet	;wreg free
 21387  002CDE  0E04               	movlw	4
 21388  002CE0  26E9               	addwf	fsr0l,f,c
 21389  002CE2  0E00               	movlw	0
 21390  002CE4  22EA               	addwfc	fsr0h,f,c
 21391  002CE6  0E4A               	movlw	74
 21392  002CE8  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21393  002CEA  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 21394  002CEE  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 21395  002CF2  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21396  002CF4  50F3               	movf	prodl,w,c
 21397  002CF6  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 21398  002CF8  0E4F               	movlw	low (_RbcQ+4)
 21399  002CFA  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 21400  002CFC  6ED9               	movwf	fsr2l,c
 21401  002CFE  0E09               	movlw	high (_RbcQ+4)
 21402  002D00  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 21403  002D02  6EDA               	movwf	fsr2h,c
 21404  002D04  50DE               	movf	postinc2,w,c
 21405  002D06  18EE               	xorwf	postinc0,w,c
 21406  002D08  E109               	bnz	u21261
 21407  002D0A  50DE               	movf	postinc2,w,c
 21408  002D0C  18EE               	xorwf	postinc0,w,c
 21409  002D0E  E106               	bnz	u21261
 21410  002D10  50DE               	movf	postinc2,w,c
 21411  002D12  18EE               	xorwf	postinc0,w,c
 21412  002D14  E103               	bnz	u21261
 21413  002D16  50DE               	movf	postinc2,w,c
 21414  002D18  18EE               	xorwf	postinc0,w,c
 21415  002D1A  A4D8               	btfss	status,2,c
 21416  002D1C                     u21261:
 21417  002D1C  D084               	goto	l17278
 21418                           
 21419                           ; BSR set to: 0
 21420  002D1E  EC27  F038         	call	_MSTickGet	;wreg free
 21421  002D22  0E4A               	movlw	74
 21422  002D24  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21423  002D26  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 21424  002D2A  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 21425  002D2E  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21426  002D30  50F3               	movf	prodl,w,c
 21427  002D32  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 21428  002D34  0E4B               	movlw	low _RbcQ
 21429  002D36  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 21430  002D38  6ED9               	movwf	fsr2l,c
 21431  002D3A  0E09               	movlw	high _RbcQ
 21432  002D3C  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 21433  002D3E  6EDA               	movwf	fsr2h,c
 21434  002D40  50DE               	movf	postinc2,w,c
 21435  002D42  5CEE               	subwf	postinc0,w,c
 21436  002D44  50DE               	movf	postinc2,w,c
 21437  002D46  58EE               	subwfb	postinc0,w,c
 21438  002D48  50DE               	movf	postinc2,w,c
 21439  002D4A  58EE               	subwfb	postinc0,w,c
 21440  002D4C  50DE               	movf	postinc2,w,c
 21441  002D4E  58EE               	subwfb	postinc0,w,c
 21442  002D50  E36A               	bnc	l17278
 21443  002D52                     l17268:
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;BroadcastManager.c: 37: {
 21447                           ;BroadcastManager.c: 39: if((RbcQ[i].Flags & (1<<1))>0)
 21448  002D52  0E4A               	movlw	74
 21449  002D54  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21450  002D56  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 21451  002D5A  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 21452  002D5E  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21453  002D60  50F3               	movf	prodl,w,c
 21454  002D62  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 21455  002D64  0E94               	movlw	low (_RbcQ+73)
 21456  002D66  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 21457  002D68  6ED9               	movwf	fsr2l,c
 21458  002D6A  0E09               	movlw	high (_RbcQ+73)
 21459  002D6C  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 21460  002D6E  6EDA               	movwf	fsr2h,c
 21461  002D70  A2DF               	btfss	indf2,1,c
 21462  002D72  D003               	goto	l17272
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;BroadcastManager.c: 40: {
 21466                           ;BroadcastManager.c: 41: PANID=0xffff;
 21467  002D74  69CD               	setf	BroadcastManagerTask@PANID& (0+255),b
 21468  002D76  69CE               	setf	(BroadcastManagerTask@PANID+1)& (0+255),b
 21469                           
 21470                           ;BroadcastManager.c: 42: }else
 21471  002D78  D006               	goto	l17274
 21472  002D7A                     l17272:
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;BroadcastManager.c: 43: {
 21476                           ;BroadcastManager.c: 44: PANID=NetworkGetPANID();
 21477  002D7A  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 21478  002D7E  C073  F0CD         	movff	?_NetworkGetPANID,BroadcastManagerTask@PANID
 21479  002D82  C074  F0CE         	movff	?_NetworkGetPANID+1,BroadcastManagerTask@PANID+1
 21480  002D86                     l17274:
 21481                           
 21482                           ;BroadcastManager.c: 45: }
 21483                           ;BroadcastManager.c: 46: radioBroadcast(RbcQ[i].pkt,RbcQ[i].pktSize,PANID,(RbcQ[i].Flags
      +                           & (1<<0))>0);
 21484  002D86  0E4A               	movlw	74
 21485  002D88  0100               	movlb	0	; () banked
 21486  002D8A  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21487  002D8C  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 21488  002D90  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 21489  002D94  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21490  002D96  50F3               	movf	prodl,w,c
 21491  002D98  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 21492  002D9A  0E53               	movlw	low (_RbcQ+8)
 21493  002D9C  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 21494  002D9E  6FBC               	movwf	radioBroadcast@data& (0+255),b
 21495  002DA0  0E09               	movlw	high (_RbcQ+8)
 21496  002DA2  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 21497  002DA4  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 21498  002DA6  0E4A               	movlw	74
 21499  002DA8  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21500  002DAA  CFF3 F0C5          	movff	prodl,??_BroadcastManagerTask+2
 21501  002DAE  CFF4 F0C6          	movff	prodh,??_BroadcastManagerTask+3
 21502  002DB2  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21503  002DB4  50F3               	movf	prodl,w,c
 21504  002DB6  27C6               	addwf	(??_BroadcastManagerTask+3)& (0+255),f,b
 21505  002DB8  0E93               	movlw	low (_RbcQ+72)
 21506  002DBA  25C5               	addwf	(??_BroadcastManagerTask+2)& (0+255),w,b
 21507  002DBC  6ED9               	movwf	fsr2l,c
 21508  002DBE  0E09               	movlw	high (_RbcQ+72)
 21509  002DC0  21C6               	addwfc	(??_BroadcastManagerTask+3)& (0+255),w,b
 21510  002DC2  6EDA               	movwf	fsr2h,c
 21511  002DC4  50DF               	movf	indf2,w,c
 21512  002DC6  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 21513  002DC8  C0CD  F0BF         	movff	BroadcastManagerTask@PANID,radioBroadcast@PANID
 21514  002DCC  C0CE  F0C0         	movff	BroadcastManagerTask@PANID+1,radioBroadcast@PANID+1
 21515  002DD0  0E4A               	movlw	74
 21516  002DD2  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21517  002DD4  CFF3 F0C7          	movff	prodl,??_BroadcastManagerTask+4
 21518  002DD8  CFF4 F0C8          	movff	prodh,??_BroadcastManagerTask+5
 21519  002DDC  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21520  002DDE  50F3               	movf	prodl,w,c
 21521  002DE0  27C8               	addwf	(??_BroadcastManagerTask+5)& (0+255),f,b
 21522  002DE2  0E94               	movlw	low (_RbcQ+73)
 21523  002DE4  25C7               	addwf	(??_BroadcastManagerTask+4)& (0+255),w,b
 21524  002DE6  6ED9               	movwf	fsr2l,c
 21525  002DE8  0E09               	movlw	high (_RbcQ+73)
 21526  002DEA  21C8               	addwfc	(??_BroadcastManagerTask+5)& (0+255),w,b
 21527  002DEC  6EDA               	movwf	fsr2h,c
 21528  002DEE  0E01               	movlw	1
 21529  002DF0  A0DF               	btfss	indf2,0,c
 21530  002DF2  0E00               	movlw	0
 21531  002DF4  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 21532  002DF6  ECFA  F033         	call	_radioBroadcast	;wreg free
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;BroadcastManager.c: 47: memset(&RbcQ[i].TxTime,0x00,sizeof(TickMS));
 21536  002DFA  0E4A               	movlw	74
 21537  002DFC  03CF               	mulwf	BroadcastManagerTask@i& (0+255),b
 21538  002DFE  CFF3 F0C3          	movff	prodl,??_BroadcastManagerTask
 21539  002E02  CFF4 F0C4          	movff	prodh,??_BroadcastManagerTask+1
 21540  002E06  03D0               	mulwf	(BroadcastManagerTask@i+1)& (0+255),b
 21541  002E08  50F3               	movf	prodl,w,c
 21542  002E0A  27C4               	addwf	(??_BroadcastManagerTask+1)& (0+255),f,b
 21543  002E0C  0E4B               	movlw	low _RbcQ
 21544  002E0E  25C3               	addwf	??_BroadcastManagerTask& (0+255),w,b
 21545  002E10  6F73               	movwf	memset@p1& (0+255),b
 21546  002E12  0E09               	movlw	high _RbcQ
 21547  002E14  21C4               	addwfc	(??_BroadcastManagerTask+1)& (0+255),w,b
 21548  002E16  6F74               	movwf	(memset@p1+1)& (0+255),b
 21549  002E18  6B76               	clrf	(memset@c+1)& (0+255),b
 21550  002E1A  6B75               	clrf	memset@c& (0+255),b
 21551  002E1C  6B78               	clrf	(memset@n+1)& (0+255),b
 21552  002E1E  0E08               	movlw	8
 21553  002E20  6F77               	movwf	memset@n& (0+255),b
 21554  002E22  EC47  F039         	call	_memset	;wreg free
 21555  002E26                     l17278:
 21556                           
 21557                           ; BSR set to: 0
 21558  002E26  4BCF               	infsnz	BroadcastManagerTask@i& (0+255),f,b
 21559  002E28  2BD0               	incf	(BroadcastManagerTask@i+1)& (0+255),f,b
 21560                           
 21561                           ; BSR set to: 0
 21562  002E2A  51D0               	movf	(BroadcastManagerTask@i+1)& (0+255),w,b
 21563  002E2C  E104               	bnz	u21310
 21564  002E2E  0E06               	movlw	6
 21565  002E30  5DCF               	subwf	BroadcastManagerTask@i& (0+255),w,b
 21566  002E32  E201 D70B          	bnc	l17258
 21567  002E36                     u21310:
 21568                           
 21569                           ; BSR set to: 0
 21570  002E36  0012               	return		;funcret
 21571  002E38                     __end_of_BroadcastManagerTask:
 21572                           	opt stack 0
 21573                           tblptru	equ	0xFF8
 21574                           tblptrh	equ	0xFF7
 21575                           tblptrl	equ	0xFF6
 21576                           tablat	equ	0xFF5
 21577                           prodh	equ	0xFF4
 21578                           prodl	equ	0xFF3
 21579                           intcon3	equ	0xFF0
 21580                           postinc0	equ	0xFEE
 21581                           plusw0	equ	0xFEB
 21582                           fsr0h	equ	0xFEA
 21583                           fsr0l	equ	0xFE9
 21584                           wreg	equ	0xFE8
 21585                           indf1	equ	0xFE7
 21586                           postinc1	equ	0xFE6
 21587                           postdec1	equ	0xFE5
 21588                           plusw1	equ	0xFE3
 21589                           fsr1h	equ	0xFE2
 21590                           fsr1l	equ	0xFE1
 21591                           indf2	equ	0xFDF
 21592                           postinc2	equ	0xFDE
 21593                           postdec2	equ	0xFDD
 21594                           plusw2	equ	0xFDB
 21595                           fsr2h	equ	0xFDA
 21596                           fsr2l	equ	0xFD9
 21597                           status	equ	0xFD8
 21598                           
 21599 ;; *************** function _BeaconManagerTask *****************
 21600 ;; Defined at:
 21601 ;;		line 46 in file "../BeaconManager.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;		None
 21604 ;; Auto vars:     Size  Location     Type
 21605 ;;		None
 21606 ;; Return value:  Size  Location     Type
 21607 ;;                  1    wreg      void 
 21608 ;; Registers used:
 21609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21610 ;; Tracked objects:
 21611 ;;		On entry : C/1
 21612 ;;		On exit  : F/1
 21613 ;;		Unchanged: 0/0
 21614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21619 ;;Total ram usage:        0 bytes
 21620 ;; Hardware stack levels used:    1
 21621 ;; Hardware stack levels required when called:   13
 21622 ;; This function calls:
 21623 ;;		_MSTickGet
 21624 ;;		_MSTickGetDiffNow
 21625 ;;		_netDecayInterval
 21626 ;;		_networkSendBeacon
 21627 ;; This function is called by:
 21628 ;;		_NetworkManagerTask
 21629 ;; This function uses a non-reentrant model
 21630 ;;
 21631                           
 21632                           	psect	text99
 21633  005282                     __ptext99:
 21634                           	opt stack 0
 21635  005282                     _BeaconManagerTask:
 21636                           	opt stack 15
 21637                           
 21638                           ;BeaconManager.c: 48: switch(BMState)
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;incstack = 0
 21642  005282  D068               	goto	l17248
 21643  005284                     l17224:
 21644                           
 21645                           ; BSR set to: 1
 21646                           ;BeaconManager.c: 51: BMState=BM_Idle;
 21647  005284  0E01               	movlw	1
 21648  005286  6FB7               	movwf	_BMState& (0+255),b
 21649                           
 21650                           ;BeaconManager.c: 52: break;
 21651  005288  0C01               	retlw	1
 21652  00528A                     l17226:
 21653                           
 21654                           ; BSR set to: 1
 21655                           ;BeaconManager.c: 58: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 21656  00528A  EE22  F014         	lfsr	2,_tInterval
 21657  00528E  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 21658  005292  0E07               	movlw	7
 21659  005294                     u21171:
 21660  005294  CFDB FFEB          	movff	plusw2,plusw0
 21661  005298  06E8               	decf	wreg,f,c
 21662  00529A  E2FC               	bc	u21171
 21663  00529C  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 21664  0052A0  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 21665  0052A2  0101               	movlb	1	; () banked
 21666  0052A4  5D9A               	subwf	_intervalDelay& (0+255),w,b
 21667  0052A6  0100               	movlb	0	; () banked
 21668  0052A8  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 21669  0052AA  0101               	movlb	1	; () banked
 21670  0052AC  599B               	subwfb	(_intervalDelay+1)& (0+255),w,b
 21671  0052AE  0100               	movlb	0	; () banked
 21672  0052B0  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 21673  0052B2  0101               	movlb	1	; () banked
 21674  0052B4  599C               	subwfb	(_intervalDelay+2)& (0+255),w,b
 21675  0052B6  0100               	movlb	0	; () banked
 21676  0052B8  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 21677  0052BA  0101               	movlb	1	; () banked
 21678  0052BC  599D               	subwfb	(_intervalDelay+3)& (0+255),w,b
 21679  0052BE  B0D8               	btfsc	status,0,c
 21680  0052C0  0012               	return	
 21681                           
 21682                           ; BSR set to: 1
 21683                           ;BeaconManager.c: 59: {
 21684                           ;BeaconManager.c: 62: networkSendBeacon();
 21685  0052C2  ECF8  F012         	call	_networkSendBeacon	;wreg free
 21686                           
 21687                           ; BSR set to: 0
 21688                           ;BeaconManager.c: 63: intervalDelay=(currentInterval-intervalDelay);
 21689  0052C6  0101               	movlb	1	; () banked
 21690  0052C8  519A               	movf	_intervalDelay& (0+255),w,b
 21691  0052CA  5D92               	subwf	_currentInterval& (0+255),w,b
 21692  0052CC  6F9A               	movwf	_intervalDelay& (0+255),b
 21693  0052CE  519B               	movf	(_intervalDelay+1)& (0+255),w,b
 21694  0052D0  5993               	subwfb	(_currentInterval+1)& (0+255),w,b
 21695  0052D2  6F9B               	movwf	(_intervalDelay+1)& (0+255),b
 21696  0052D4  519C               	movf	(_intervalDelay+2)& (0+255),w,b
 21697  0052D6  5994               	subwfb	(_currentInterval+2)& (0+255),w,b
 21698  0052D8  6F9C               	movwf	(_intervalDelay+2)& (0+255),b
 21699  0052DA  519D               	movf	(_intervalDelay+3)& (0+255),w,b
 21700  0052DC  5995               	subwfb	(_currentInterval+3)& (0+255),w,b
 21701  0052DE  6F9D               	movwf	(_intervalDelay+3)& (0+255),b
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;BeaconManager.c: 64: tInterval=MSTickGet();
 21705  0052E0  EC27  F038         	call	_MSTickGet	;wreg free
 21706  0052E4  EE22  F014         	lfsr	2,_tInterval
 21707  0052E8  0E07               	movlw	7
 21708  0052EA                     u21191:
 21709  0052EA  CFEB FFDB          	movff	plusw0,plusw2
 21710  0052EE  06E8               	decf	wreg,f,c
 21711  0052F0  E2FC               	bc	u21191
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;BeaconManager.c: 65: BMState=BM_WaitRemaining;
 21715  0052F2  0E03               	movlw	3
 21716  0052F4  0101               	movlb	1	; () banked
 21717  0052F6  6FB7               	movwf	_BMState& (0+255),b
 21718  0052F8  0C03               	retlw	3
 21719  0052FA                     l17236:
 21720                           
 21721                           ; BSR set to: 1
 21722                           ;BeaconManager.c: 70: if(MSTickGetDiffNow(tInterval)>intervalDelay)
 21723  0052FA  EE22  F014         	lfsr	2,_tInterval
 21724  0052FE  EE00  F08F         	lfsr	0,MSTickGetDiffNow@tick
 21725  005302  0E07               	movlw	7
 21726  005304                     u21201:
 21727  005304  CFDB FFEB          	movff	plusw2,plusw0
 21728  005308  06E8               	decf	wreg,f,c
 21729  00530A  E2FC               	bc	u21201
 21730  00530C  EC79  F030         	call	_MSTickGetDiffNow	;wreg free
 21731  005310  518F               	movf	?_MSTickGetDiffNow& (0+255),w,b
 21732  005312  0101               	movlb	1	; () banked
 21733  005314  5D9A               	subwf	_intervalDelay& (0+255),w,b
 21734  005316  0100               	movlb	0	; () banked
 21735  005318  5190               	movf	(?_MSTickGetDiffNow+1)& (0+255),w,b
 21736  00531A  0101               	movlb	1	; () banked
 21737  00531C  599B               	subwfb	(_intervalDelay+1)& (0+255),w,b
 21738  00531E  0100               	movlb	0	; () banked
 21739  005320  5191               	movf	(?_MSTickGetDiffNow+2)& (0+255),w,b
 21740  005322  0101               	movlb	1	; () banked
 21741  005324  599C               	subwfb	(_intervalDelay+2)& (0+255),w,b
 21742  005326  0100               	movlb	0	; () banked
 21743  005328  5192               	movf	(?_MSTickGetDiffNow+3)& (0+255),w,b
 21744  00532A  0101               	movlb	1	; () banked
 21745  00532C  599D               	subwfb	(_intervalDelay+3)& (0+255),w,b
 21746  00532E  B0D8               	btfsc	status,0,c
 21747  005330  0012               	return	
 21748                           
 21749                           ; BSR set to: 1
 21750                           ;BeaconManager.c: 71: {
 21751                           ;BeaconManager.c: 74: networkSendBeacon();
 21752  005332  ECF8  F012         	call	_networkSendBeacon	;wreg free
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;BeaconManager.c: 75: netDecayInterval();
 21756  005336  EC0C  F038         	call	_netDecayInterval	;wreg free
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;BeaconManager.c: 76: tInterval=MSTickGet();
 21760  00533A  EC27  F038         	call	_MSTickGet	;wreg free
 21761  00533E  EE22  F014         	lfsr	2,_tInterval
 21762  005342  0E07               	movlw	7
 21763  005344                     u21221:
 21764  005344  CFEB FFDB          	movff	plusw0,plusw2
 21765  005348  06E8               	decf	wreg,f,c
 21766  00534A  E2FC               	bc	u21221
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;BeaconManager.c: 77: BMState=BM_WaitInitial;
 21770  00534C  0E02               	movlw	2
 21771  00534E  0101               	movlb	1	; () banked
 21772  005350  6FB7               	movwf	_BMState& (0+255),b
 21773  005352  0C02               	retlw	2
 21774  005354                     l17248:
 21775  005354  0101               	movlb	1	; () banked
 21776  005356  51B7               	movf	_BMState& (0+255),w,b
 21777                           
 21778                           ; Switch size 1, requested type "speed"
 21779                           ; Number of cases is 4, Range of values is 0 to 3
 21780                           ; switch strategies available:
 21781                           ; Name         Instructions Cycles
 21782                           ; simple_byte           13     7 (average)
 21783                           ;	Chosen strategy is simple_byte
 21784  005358  E095               	bz	l17224
 21785  00535A  0A01               	xorlw	1	; case 1
 21786  00535C  B4D8               	btfsc	status,2,c
 21787  00535E  0012               	return	
 21788  005360  0A03               	xorlw	3	; case 2
 21789  005362  E093               	bz	l17226
 21790  005364  0A01               	xorlw	1	; case 3
 21791  005366  E0C9               	bz	l17236
 21792                           
 21793                           ; BSR set to: 1
 21794  005368  0012               	return		;funcret
 21795  00536A                     __end_of_BeaconManagerTask:
 21796                           	opt stack 0
 21797                           tblptru	equ	0xFF8
 21798                           tblptrh	equ	0xFF7
 21799                           tblptrl	equ	0xFF6
 21800                           tablat	equ	0xFF5
 21801                           prodh	equ	0xFF4
 21802                           prodl	equ	0xFF3
 21803                           intcon3	equ	0xFF0
 21804                           postinc0	equ	0xFEE
 21805                           plusw0	equ	0xFEB
 21806                           fsr0h	equ	0xFEA
 21807                           fsr0l	equ	0xFE9
 21808                           wreg	equ	0xFE8
 21809                           indf1	equ	0xFE7
 21810                           postinc1	equ	0xFE6
 21811                           postdec1	equ	0xFE5
 21812                           plusw1	equ	0xFE3
 21813                           fsr1h	equ	0xFE2
 21814                           fsr1l	equ	0xFE1
 21815                           indf2	equ	0xFDF
 21816                           postinc2	equ	0xFDE
 21817                           postdec2	equ	0xFDD
 21818                           plusw2	equ	0xFDB
 21819                           fsr2h	equ	0xFDA
 21820                           fsr2l	equ	0xFD9
 21821                           status	equ	0xFD8
 21822                           
 21823 ;; *************** function _networkSendBeacon *****************
 21824 ;; Defined at:
 21825 ;;		line 86 in file "../BeaconManager.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;		None
 21828 ;; Auto vars:     Size  Location     Type
 21829 ;;  hdr             2  113[BANK0 ] PTR struct net_routing_h
 21830 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 21831 ;;  r               2  111[BANK0 ] PTR struct route_info_t_
 21832 ;;		 -> routeInfo(7), 
 21833 ;;  bt              2  109[BANK0 ] unsigned int 
 21834 ;;  adr             2  107[BANK0 ] PTR struct addr_t_def
 21835 ;;		 -> MyAddress(2), 
 21836 ;;  last            2  105[BANK0 ] PTR unsigned char 
 21837 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 21838 ;;  parent          2    0        struct addr_t_def
 21839 ;; Return value:  Size  Location     Type
 21840 ;;                  1    wreg      void 
 21841 ;; Registers used:
 21842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21843 ;; Tracked objects:
 21844 ;;		On entry : F/1
 21845 ;;		On exit  : F/0
 21846 ;;		Unchanged: 0/0
 21847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21849 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21850 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21851 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21852 ;;Total ram usage:       16 bytes
 21853 ;; Hardware stack levels used:    1
 21854 ;; Hardware stack levels required when called:   12
 21855 ;; This function calls:
 21856 ;;		_LEAppendNeighborInfo
 21857 ;;		_LELinkQualityGet
 21858 ;;		_NetworkAddressSizeGet
 21859 ;;		_NetworkGetDeviceType
 21860 ;;		_NetworkGetMyRouteInfo
 21861 ;;		_NetworkGetPANID
 21862 ;;		_NetworkHasRoute
 21863 ;;		_NetworkManagerGetMyAddress
 21864 ;;		_isInvalidAddress
 21865 ;;		_isNetworkSecurityEnabled
 21866 ;;		_memcpy
 21867 ;;		_memset
 21868 ;;		_radioBroadcast
 21869 ;; This function is called by:
 21870 ;;		_BeaconManagerTask
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text100
 21875  0025F0                     __ptext100:
 21876                           	opt stack 0
 21877  0025F0                     _networkSendBeacon:
 21878                           	opt stack 15
 21879                           
 21880                           ; BSR set to: 1
 21881                           ;BeaconManager.c: 88: net_routing_header_t *hdr;
 21882                           ;BeaconManager.c: 89: route_info_t *r=NetworkGetMyRouteInfo();
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;incstack = 0
 21886  0025F0  ECC7  F03A         	call	_NetworkGetMyRouteInfo	;wreg free
 21887  0025F4  C073  F0CF         	movff	?_NetworkGetMyRouteInfo,networkSendBeacon@r
 21888  0025F8  C074  F0D0         	movff	?_NetworkGetMyRouteInfo+1,networkSendBeacon@r+1
 21889                           
 21890                           ; BSR set to: 0
 21891                           ;BeaconManager.c: 90: uint8_t* last;
 21892                           ;BeaconManager.c: 91: addr_t parent;
 21893                           ;BeaconManager.c: 93: memset(&beaconMessageBuffer,0x00,sizeof(beaconMessageBuffer));
 21894  0025FC  0E00               	movlw	low _beaconMessageBuffer
 21895  0025FE  6F73               	movwf	memset@p1& (0+255),b
 21896  002600  0E07               	movlw	high _beaconMessageBuffer
 21897  002602  6F74               	movwf	(memset@p1+1)& (0+255),b
 21898  002604  6B76               	clrf	(memset@c+1)& (0+255),b
 21899  002606  6B75               	clrf	memset@c& (0+255),b
 21900  002608  6B78               	clrf	(memset@n+1)& (0+255),b
 21901  00260A  0E48               	movlw	72
 21902  00260C  6F77               	movwf	memset@n& (0+255),b
 21903  00260E  EC47  F039         	call	_memset	;wreg free
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;BeaconManager.c: 95: hdr=(net_routing_header_t*)beaconMessageBuffer.data;
 21907  002612  0E00               	movlw	low _beaconMessageBuffer
 21908  002614  6FD1               	movwf	networkSendBeacon@hdr& (0+255),b
 21909  002616  0E07               	movlw	high _beaconMessageBuffer
 21910  002618  6FD2               	movwf	(networkSendBeacon@hdr+1)& (0+255),b
 21911                           
 21912                           ;BeaconManager.c: 96: hdr->packettype=PacketRouting;
 21913  00261A  EE20 F002          	lfsr	2,2
 21914  00261E  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 21915  002620  26D9               	addwf	fsr2l,f,c
 21916  002622  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 21917  002624  22DA               	addwfc	fsr2h,f,c
 21918  002626  0E22               	movlw	34
 21919  002628  6EDF               	movwf	indf2,c
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;BeaconManager.c: 97: hdr->options.deviceType=NetworkGetDeviceType();
 21923  00262A  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 21924  00262E  0100               	movlb	0	; () banked
 21925  002630  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 21926  002632  EE20 F003          	lfsr	2,3
 21927  002636  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 21928  002638  26D9               	addwf	fsr2l,f,c
 21929  00263A  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 21930  00263C  22DA               	addwfc	fsr2h,f,c
 21931  00263E  50DF               	movf	223,w,c
 21932  002640  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21933  002642  0BF8               	andlw	-8
 21934  002644  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21935  002646  6EDF               	movwf	223,c
 21936                           
 21937                           ; BSR set to: 0
 21938                           ;BeaconManager.c: 98: hdr->options.hasroute=NetworkHasRoute();
 21939  002648  ECF0  F037         	call	_NetworkHasRoute	;wreg free
 21940  00264C  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 21941  00264E  EE20 F003          	lfsr	2,3
 21942  002652  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 21943  002654  26D9               	addwf	fsr2l,f,c
 21944  002656  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 21945  002658  22DA               	addwfc	fsr2h,f,c
 21946  00265A  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 21947  00265C  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 21948  00265E  47C3               	rlncf	??_networkSendBeacon& (0+255),f,b
 21949  002660  50DF               	movf	223,w,c
 21950  002662  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21951  002664  0BF7               	andlw	-9
 21952  002666  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21953  002668  6EDF               	movwf	223,c
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;BeaconManager.c: 99: hdr->options.congested=r->congested;
 21957  00266A  EE20 F005          	lfsr	2,5
 21958  00266E  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 21959  002670  26D9               	addwf	fsr2l,f,c
 21960  002672  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 21961  002674  22DA               	addwfc	fsr2h,f,c
 21962  002676  50DF               	movf	indf2,w,c
 21963  002678  6FC3               	movwf	??_networkSendBeacon& (0+255),b
 21964  00267A  EE20 F003          	lfsr	2,3
 21965  00267E  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 21966  002680  26D9               	addwf	fsr2l,f,c
 21967  002682  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 21968  002684  22DA               	addwfc	fsr2h,f,c
 21969  002686  3BC3               	swapf	??_networkSendBeacon& (0+255),f,b
 21970  002688  50DF               	movf	223,w,c
 21971  00268A  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21972  00268C  0BEF               	andlw	-17
 21973  00268E  19C3               	xorwf	??_networkSendBeacon& (0+255),w,b
 21974  002690  6EDF               	movwf	223,c
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;BeaconManager.c: 100: hdr->sequenceNumber=netSequenceNumber++;
 21978  002692  EE20 F001          	lfsr	2,1
 21979  002696  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 21980  002698  26D9               	addwf	fsr2l,f,c
 21981  00269A  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 21982  00269C  22DA               	addwfc	fsr2h,f,c
 21983  00269E  C1C4  FFDF         	movff	_netSequenceNumber,indf2
 21984                           
 21985                           ; BSR set to: 0
 21986  0026A2  0101               	movlb	1	; () banked
 21987  0026A4  2BC4               	incf	_netSequenceNumber& (0+255),f,b
 21988                           
 21989                           ; BSR set to: 1
 21990                           ;BeaconManager.c: 101: memcpy(hdr->parent.bytes,r->parent.bytes,NetworkAddressSizeGet())
      +                          ;
 21991  0026A6  0E04               	movlw	4
 21992  0026A8  0100               	movlb	0	; () banked
 21993  0026AA  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 21994  0026AC  6F75               	movwf	memcpy@d1& (0+255),b
 21995  0026AE  0E00               	movlw	0
 21996  0026B0  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 21997  0026B2  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 21998  0026B4  C0CF  F077         	movff	networkSendBeacon@r,memcpy@s1
 21999  0026B8  C0D0  F078         	movff	networkSendBeacon@r+1,memcpy@s1+1
 22000  0026BC  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 22001  0026C0  0100               	movlb	0	; () banked
 22002  0026C2  6F79               	movwf	memcpy@n& (0+255),b
 22003  0026C4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22004  0026C6  EC05  F035         	call	_memcpy	;wreg free
 22005                           
 22006                           ; BSR set to: 0
 22007                           ;BeaconManager.c: 103: if(NetworkGetDeviceType()==DeviceCoordinator)
 22008  0026CA  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 22009  0026CE  0900               	iorlw	0
 22010  0026D0  E112               	bnz	l16628
 22011                           
 22012                           ; BSR set to: 1
 22013                           ;BeaconManager.c: 104: {
 22014                           ;BeaconManager.c: 105: hdr->etx=r->etx;
 22015  0026D2  0100               	movlb	0	; () banked
 22016  0026D4  EE20 F002          	lfsr	2,2
 22017  0026D8  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 22018  0026DA  26D9               	addwf	fsr2l,f,c
 22019  0026DC  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 22020  0026DE  22DA               	addwfc	fsr2h,f,c
 22021  0026E0  EE10 F006          	lfsr	1,6
 22022  0026E4  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22023  0026E6  26E1               	addwf	fsr1l,f,c
 22024  0026E8  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22025  0026EA  22E2               	addwfc	fsr1h,f,c
 22026  0026EC  CFDE FFE6          	movff	postinc2,postinc1
 22027  0026F0  CFDD FFE5          	movff	postdec2,postdec1
 22028                           
 22029                           ;BeaconManager.c: 106: }else if(isInvalidAddress(r->parent))
 22030  0026F4  D03B               	goto	l16634
 22031  0026F6                     l16628:
 22032                           
 22033                           ; BSR set to: 1
 22034  0026F6  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 22035  0026FA  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 22036  0026FE  CFDE F085          	movff	postinc2,isInvalidAddress@address
 22037  002702  CFDD F086          	movff	postdec2,isInvalidAddress@address+1
 22038  002706  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 22039  00270A  0900               	iorlw	0
 22040  00270C  E010               	bz	l16632
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;BeaconManager.c: 107: {
 22044                           ;BeaconManager.c: 108: hdr->etx=0xffff;
 22045  00270E  EE20 F006          	lfsr	2,6
 22046  002712  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22047  002714  26D9               	addwf	fsr2l,f,c
 22048  002716  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22049  002718  22DA               	addwfc	fsr2h,f,c
 22050  00271A  68DE               	setf	postinc2,c
 22051  00271C  68DD               	setf	postdec2,c
 22052                           
 22053                           ;BeaconManager.c: 109: hdr->options.pull=1;
 22054  00271E  EE20 F003          	lfsr	2,3
 22055  002722  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22056  002724  26D9               	addwf	fsr2l,f,c
 22057  002726  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22058  002728  22DA               	addwfc	fsr2h,f,c
 22059  00272A  8ADF               	bsf	indf2,5,c
 22060                           
 22061                           ;BeaconManager.c: 110: }else
 22062  00272C  D01F               	goto	l16634
 22063  00272E                     l16632:
 22064                           
 22065                           ; BSR set to: 0
 22066                           ;BeaconManager.c: 111: {
 22067                           ;BeaconManager.c: 112: hdr->etx=LELinkQualityGet(r->parent,r->etx);
 22068  00272E  C0CF  FFD9         	movff	networkSendBeacon@r,fsr2l
 22069  002732  C0D0  FFDA         	movff	networkSendBeacon@r+1,fsr2h
 22070  002736  CFDE F085          	movff	postinc2,LELinkQualityGet@address
 22071  00273A  CFDD F086          	movff	postdec2,LELinkQualityGet@address+1
 22072  00273E  EE20 F002          	lfsr	2,2
 22073  002742  51CF               	movf	networkSendBeacon@r& (0+255),w,b
 22074  002744  26D9               	addwf	fsr2l,f,c
 22075  002746  51D0               	movf	(networkSendBeacon@r+1)& (0+255),w,b
 22076  002748  22DA               	addwfc	fsr2h,f,c
 22077  00274A  CFDE F087          	movff	postinc2,LELinkQualityGet@offset
 22078  00274E  CFDD F088          	movff	postdec2,LELinkQualityGet@offset+1
 22079  002752  EC95  F032         	call	_LELinkQualityGet	;wreg free
 22080  002756  0100               	movlb	0	; () banked
 22081  002758  EE20 F006          	lfsr	2,6
 22082  00275C  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22083  00275E  26D9               	addwf	fsr2l,f,c
 22084  002760  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22085  002762  22DA               	addwfc	fsr2h,f,c
 22086  002764  C085  FFDE         	movff	?_LELinkQualityGet,postinc2
 22087  002768  C086  FFDD         	movff	?_LELinkQualityGet+1,postdec2
 22088  00276C                     l16634:
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;BeaconManager.c: 113: }
 22092                           ;BeaconManager.c: 115: uint16_t bt;
 22093                           ;BeaconManager.c: 116: addr_t *adr=NetworkManagerGetMyAddress();
 22094  00276C  ECBB  F03A         	call	_NetworkManagerGetMyAddress	;wreg free
 22095  002770  C073  F0CB         	movff	?_NetworkManagerGetMyAddress,networkSendBeacon@adr
 22096  002774  C074  F0CC         	movff	?_NetworkManagerGetMyAddress+1,networkSendBeacon@adr+1
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;BeaconManager.c: 117: memcpy(&bt,adr->bytes,2);
 22100  002778  0ECD               	movlw	low networkSendBeacon@bt
 22101  00277A  6F75               	movwf	memcpy@d1& (0+255),b
 22102  00277C  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 22103  00277E  C0CB  F077         	movff	networkSendBeacon@adr,memcpy@s1
 22104  002782  C0CC  F078         	movff	networkSendBeacon@adr+1,memcpy@s1+1
 22105  002786  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22106  002788  0E02               	movlw	2
 22107  00278A  6F79               	movwf	memcpy@n& (0+255),b
 22108  00278C  EC05  F035         	call	_memcpy	;wreg free
 22109                           
 22110                           ; BSR set to: 0
 22111                           ;BeaconManager.c: 118: hdr->etx=hdr->etx ^ ( ((uint16_t)(~bt)) + (uint16_t)0x3497 );
 22112  002790  EE20 F006          	lfsr	2,6
 22113  002794  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22114  002796  26D9               	addwf	fsr2l,f,c
 22115  002798  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22116  00279A  22DA               	addwfc	fsr2h,f,c
 22117  00279C  CFDE F0C3          	movff	postinc2,??_networkSendBeacon
 22118  0027A0  CFDD F0C4          	movff	postdec2,??_networkSendBeacon+1
 22119  0027A4  0E97               	movlw	151
 22120  0027A6  6FC5               	movwf	(??_networkSendBeacon+2)& (0+255),b
 22121  0027A8  0E34               	movlw	52
 22122  0027AA  6FC6               	movwf	(??_networkSendBeacon+3)& (0+255),b
 22123  0027AC  1DCD               	comf	networkSendBeacon@bt& (0+255),w,b
 22124  0027AE  6FC7               	movwf	(??_networkSendBeacon+4)& (0+255),b
 22125  0027B0  1DCE               	comf	(networkSendBeacon@bt+1)& (0+255),w,b
 22126  0027B2  6FC8               	movwf	(??_networkSendBeacon+5)& (0+255),b
 22127  0027B4  51C5               	movf	(??_networkSendBeacon+2)& (0+255),w,b
 22128  0027B6  27C7               	addwf	(??_networkSendBeacon+4)& (0+255),f,b
 22129  0027B8  51C6               	movf	(??_networkSendBeacon+3)& (0+255),w,b
 22130  0027BA  23C8               	addwfc	(??_networkSendBeacon+5)& (0+255),f,b
 22131  0027BC  51C3               	movf	??_networkSendBeacon& (0+255),w,b
 22132  0027BE  1BC7               	xorwf	(??_networkSendBeacon+4)& (0+255),f,b
 22133  0027C0  51C4               	movf	(??_networkSendBeacon+1)& (0+255),w,b
 22134  0027C2  1BC8               	xorwf	(??_networkSendBeacon+5)& (0+255),f,b
 22135  0027C4  EE20 F006          	lfsr	2,6
 22136  0027C8  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22137  0027CA  26D9               	addwf	fsr2l,f,c
 22138  0027CC  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22139  0027CE  22DA               	addwfc	fsr2h,f,c
 22140  0027D0  C0C7  FFDE         	movff	??_networkSendBeacon+4,postinc2
 22141  0027D4  C0C8  FFDD         	movff	??_networkSendBeacon+5,postdec2
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;BeaconManager.c: 120: last=LEAppendNeighborInfo((uint8_t*)&hdr->lnk_header,64-(uint32_t
      +                          )((uint8_t*)hdr-(uint8_t*)beaconMessageBuffer.data)-sizeof(net_routing_header_t)-14);
 22145  0027D8  0E08               	movlw	8
 22146  0027DA  25D1               	addwf	networkSendBeacon@hdr& (0+255),w,b
 22147  0027DC  6F84               	movwf	LEAppendNeighborInfo@data& (0+255),b
 22148  0027DE  0E00               	movlw	0
 22149  0027E0  21D2               	addwfc	(networkSendBeacon@hdr+1)& (0+255),w,b
 22150  0027E2  6F85               	movwf	(LEAppendNeighborInfo@data+1)& (0+255),b
 22151  0027E4  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22152  0027E6  0828               	sublw	low (_beaconMessageBuffer+40)
 22153  0027E8  6F86               	movwf	LEAppendNeighborInfo@size& (0+255),b
 22154  0027EA  51D2               	movf	(networkSendBeacon@hdr+1)& (0+255),w,b
 22155  0027EC  A0D8               	btfss	status,0,c
 22156  0027EE  2AE8               	incf	wreg,f,c
 22157  0027F0  0807               	sublw	high (_beaconMessageBuffer+40)
 22158  0027F2  6F87               	movwf	(LEAppendNeighborInfo@size+1)& (0+255),b
 22159  0027F4  ECFE  F01B         	call	_LEAppendNeighborInfo	;wreg free
 22160  0027F8  C084  F0C9         	movff	?_LEAppendNeighborInfo,networkSendBeacon@last
 22161  0027FC  C085  F0CA         	movff	?_LEAppendNeighborInfo+1,networkSendBeacon@last+1
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;BeaconManager.c: 122: radioBroadcast(beaconMessageBuffer.data,(uint16_t)(last-(uint8_t*
      +                          )hdr),NetworkGetPANID(),isNetworkSecurityEnabled());
 22165  002800  0E00               	movlw	low _beaconMessageBuffer
 22166  002802  6FBC               	movwf	radioBroadcast@data& (0+255),b
 22167  002804  0E07               	movlw	high _beaconMessageBuffer
 22168  002806  6FBD               	movwf	(radioBroadcast@data+1)& (0+255),b
 22169  002808  51D1               	movf	networkSendBeacon@hdr& (0+255),w,b
 22170  00280A  5DC9               	subwf	networkSendBeacon@last& (0+255),w,b
 22171  00280C  6FBE               	movwf	radioBroadcast@datasize& (0+255),b
 22172  00280E  ECF0  F03A         	call	_NetworkGetPANID	;wreg free
 22173  002812  C073  F0BF         	movff	?_NetworkGetPANID,radioBroadcast@PANID
 22174  002816  C074  F0C0         	movff	?_NetworkGetPANID+1,radioBroadcast@PANID+1
 22175  00281A  EC06  F03B         	call	_isNetworkSecurityEnabled	;wreg free
 22176  00281E  0100               	movlb	0	; () banked
 22177  002820  6FC1               	movwf	radioBroadcast@isSecure& (0+255),b
 22178  002822  EFFA  F033         	goto	_radioBroadcast	;wreg free
 22179  002826                     __end_of_networkSendBeacon:
 22180                           	opt stack 0
 22181                           tblptru	equ	0xFF8
 22182                           tblptrh	equ	0xFF7
 22183                           tblptrl	equ	0xFF6
 22184                           tablat	equ	0xFF5
 22185                           prodh	equ	0xFF4
 22186                           prodl	equ	0xFF3
 22187                           intcon3	equ	0xFF0
 22188                           postinc0	equ	0xFEE
 22189                           plusw0	equ	0xFEB
 22190                           fsr0h	equ	0xFEA
 22191                           fsr0l	equ	0xFE9
 22192                           wreg	equ	0xFE8
 22193                           indf1	equ	0xFE7
 22194                           postinc1	equ	0xFE6
 22195                           postdec1	equ	0xFE5
 22196                           plusw1	equ	0xFE3
 22197                           fsr1h	equ	0xFE2
 22198                           fsr1l	equ	0xFE1
 22199                           indf2	equ	0xFDF
 22200                           postinc2	equ	0xFDE
 22201                           postdec2	equ	0xFDD
 22202                           plusw2	equ	0xFDB
 22203                           fsr2h	equ	0xFDA
 22204                           fsr2l	equ	0xFD9
 22205                           status	equ	0xFD8
 22206                           
 22207 ;; *************** function _radioBroadcast *****************
 22208 ;; Defined at:
 22209 ;;		line 110 in file "../src/Bridge.c"
 22210 ;; Parameters:    Size  Location     Type
 22211 ;;  data            2   92[BANK0 ] PTR unsigned char 
 22212 ;;		 -> RbcQ(444), beaconMessageBuffer(72), 
 22213 ;;  datasize        1   94[BANK0 ] unsigned char 
 22214 ;;  PANID           2   95[BANK0 ] unsigned int 
 22215 ;;  isSecure        1   97[BANK0 ] unsigned char 
 22216 ;; Auto vars:     Size  Location     Type
 22217 ;;  i               1   98[BANK0 ] unsigned char 
 22218 ;; Return value:  Size  Location     Type
 22219 ;;                  1    wreg      unsigned char 
 22220 ;; Registers used:
 22221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22222 ;; Tracked objects:
 22223 ;;		On entry : F/0
 22224 ;;		On exit  : F/0
 22225 ;;		Unchanged: 0/0
 22226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22227 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22231 ;;Total ram usage:        7 bytes
 22232 ;; Hardware stack levels used:    1
 22233 ;; Hardware stack levels required when called:   11
 22234 ;; This function calls:
 22235 ;;		_SendPacket
 22236 ;;		_memset
 22237 ;; This function is called by:
 22238 ;;		_networkSendBeacon
 22239 ;;		_BroadcastManagerTask
 22240 ;; This function uses a non-reentrant model
 22241 ;;
 22242                           
 22243                           	psect	text101
 22244  0067F4                     __ptext101:
 22245                           	opt stack 0
 22246  0067F4                     _radioBroadcast:
 22247                           	opt stack 16
 22248                           
 22249                           ; BSR set to: 0
 22250                           ;Bridge.c: 112: static addr_t addr;
 22251                           ;Bridge.c: 113: uint8_t i;
 22252                           ;Bridge.c: 120: memset(addr.bytes,0xff,sizeof(addr));
 22253                           
 22254                           ; BSR set to: 0
 22255                           ;incstack = 0
 22256  0067F4  0EEB               	movlw	low radioBroadcast@addr
 22257  0067F6  6F73               	movwf	memset@p1& (0+255),b
 22258  0067F8  0E01               	movlw	high radioBroadcast@addr
 22259  0067FA  6F74               	movwf	(memset@p1+1)& (0+255),b
 22260  0067FC  6B76               	clrf	(memset@c+1)& (0+255),b
 22261  0067FE  6975               	setf	memset@c& (0+255),b
 22262  006800  6B78               	clrf	(memset@n+1)& (0+255),b
 22263  006802  0E02               	movlw	2
 22264  006804  6F77               	movwf	memset@n& (0+255),b
 22265  006806  EC47  F039         	call	_memset	;wreg free
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;Bridge.c: 121: TxIndex=0;
 22269  00680A  6A40               	clrf	_TxIndex,c
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;Bridge.c: 122: for(i=0;i<datasize;i++)
 22273  00680C  6BC2               	clrf	radioBroadcast@i& (0+255),b
 22274  00680E  D010               	goto	l16032
 22275  006810                     l16026:
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;Bridge.c: 123: {
 22279                           ;Bridge.c: 124: TxBuff[TxIndex++]=data[i];
 22280  006810  51C2               	movf	radioBroadcast@i& (0+255),w,b
 22281  006812  25BC               	addwf	radioBroadcast@data& (0+255),w,b
 22282  006814  6ED9               	movwf	fsr2l,c
 22283  006816  0E00               	movlw	0
 22284  006818  21BD               	addwfc	(radioBroadcast@data+1)& (0+255),w,b
 22285  00681A  6EDA               	movwf	fsr2h,c
 22286  00681C  0E48               	movlw	low _TxBuff
 22287  00681E  2440               	addwf	_TxIndex,w,c
 22288  006820  6EE1               	movwf	fsr1l,c
 22289  006822  6AE2               	clrf	fsr1h,c
 22290  006824  0E07               	movlw	high _TxBuff
 22291  006826  22E2               	addwfc	fsr1h,f,c
 22292  006828  CFDF FFE7          	movff	indf2,indf1
 22293                           
 22294                           ; BSR set to: 0
 22295  00682C  2A40               	incf	_TxIndex,f,c
 22296                           
 22297                           ; BSR set to: 0
 22298  00682E  2BC2               	incf	radioBroadcast@i& (0+255),f,b
 22299  006830                     l16032:
 22300                           
 22301                           ; BSR set to: 0
 22302  006830  51BE               	movf	radioBroadcast@datasize& (0+255),w,b
 22303  006832  5DC2               	subwf	radioBroadcast@i& (0+255),w,b
 22304  006834  E3ED               	bnc	l16026
 22305                           
 22306                           ; BSR set to: 0
 22307                           ;Bridge.c: 125: }
 22308                           ;Bridge.c: 126: return SendPacket(1,addr.bytes,PANID,0,isSecure);
 22309                           ;	Return value of _radioBroadcast is never used
 22310  006836  0EEB               	movlw	low radioBroadcast@addr
 22311  006838  6FAE               	movwf	SendPacket@DestinationAddress& (0+255),b
 22312  00683A  0E01               	movlw	high radioBroadcast@addr
 22313  00683C  6FAF               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 22314  00683E  C0BF  F0B0         	movff	radioBroadcast@PANID,SendPacket@destinationPANID
 22315  006842  C0C0  F0B1         	movff	radioBroadcast@PANID+1,SendPacket@destinationPANID+1
 22316  006846  6BB2               	clrf	SendPacket@isCommand& (0+255),b
 22317  006848  C0C1  F0B3         	movff	radioBroadcast@isSecure,SendPacket@SecurityEnabled
 22318  00684C  0E01               	movlw	1
 22319  00684E  EFA5  F02F         	goto	_SendPacket
 22320  006852                     __end_of_radioBroadcast:
 22321                           	opt stack 0
 22322                           tblptru	equ	0xFF8
 22323                           tblptrh	equ	0xFF7
 22324                           tblptrl	equ	0xFF6
 22325                           tablat	equ	0xFF5
 22326                           prodh	equ	0xFF4
 22327                           prodl	equ	0xFF3
 22328                           intcon3	equ	0xFF0
 22329                           postinc0	equ	0xFEE
 22330                           plusw0	equ	0xFEB
 22331                           fsr0h	equ	0xFEA
 22332                           fsr0l	equ	0xFE9
 22333                           wreg	equ	0xFE8
 22334                           indf1	equ	0xFE7
 22335                           postinc1	equ	0xFE6
 22336                           postdec1	equ	0xFE5
 22337                           plusw1	equ	0xFE3
 22338                           fsr1h	equ	0xFE2
 22339                           fsr1l	equ	0xFE1
 22340                           indf2	equ	0xFDF
 22341                           postinc2	equ	0xFDE
 22342                           postdec2	equ	0xFDD
 22343                           plusw2	equ	0xFDB
 22344                           fsr2h	equ	0xFDA
 22345                           fsr2l	equ	0xFD9
 22346                           status	equ	0xFD8
 22347                           
 22348 ;; *************** function _SendPacket *****************
 22349 ;; Defined at:
 22350 ;;		line 67 in file "../src/Bridge.c"
 22351 ;; Parameters:    Size  Location     Type
 22352 ;;  Broadcast       1    wreg     unsigned char 
 22353 ;;  DestinationA    2   78[BANK0 ] PTR unsigned char 
 22354 ;;		 -> radioUnicast@addr(2), radioBroadcast@addr(2), 
 22355 ;;  destinationP    2   80[BANK0 ] unsigned int 
 22356 ;;  isCommand       1   82[BANK0 ] unsigned char 
 22357 ;;  SecurityEnab    1   83[BANK0 ] unsigned char 
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;  Broadcast       1   86[BANK0 ] unsigned char 
 22360 ;;  tParam          5   87[BANK0 ] struct .
 22361 ;;  status          1   85[BANK0 ] unsigned char 
 22362 ;; Return value:  Size  Location     Type
 22363 ;;                  1    wreg      unsigned char 
 22364 ;; Registers used:
 22365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22366 ;; Tracked objects:
 22367 ;;		On entry : F/0
 22368 ;;		On exit  : F/0
 22369 ;;		Unchanged: 0/0
 22370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22371 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22372 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22374 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22375 ;;Total ram usage:       14 bytes
 22376 ;; Hardware stack levels used:    1
 22377 ;; Hardware stack levels required when called:   10
 22378 ;; This function calls:
 22379 ;;		_MiMAC_SendPacket
 22380 ;; This function is called by:
 22381 ;;		_radioBroadcast
 22382 ;;		_radioUnicast
 22383 ;; This function uses a non-reentrant model
 22384 ;;
 22385                           
 22386                           	psect	text102
 22387  005F4A                     __ptext102:
 22388                           	opt stack 0
 22389  005F4A                     _SendPacket:
 22390                           	opt stack 15
 22391                           
 22392                           ; BSR set to: 0
 22393                           ;incstack = 0
 22394                           ;SendPacket@Broadcast stored from wreg
 22395  005F4A  6FB6               	movwf	SendPacket@Broadcast& (0+255),b
 22396                           
 22397                           ;Bridge.c: 69: MAC_TRANS_PARAM tParam;
 22398                           ;Bridge.c: 70: bool status;
 22399                           ;Bridge.c: 72: tParam.flags.Val = 0;
 22400  005F4C  0100               	movlb	0	; () banked
 22401  005F4E  6BB7               	clrf	SendPacket@tParam& (0+255),b
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;Bridge.c: 73: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 22405  005F50  51B2               	movf	SendPacket@isCommand& (0+255),w,b
 22406  005F52  E003               	bz	u18530
 22407  005F54  6BB4               	clrf	??_SendPacket& (0+255),b
 22408  005F56  2BB4               	incf	??_SendPacket& (0+255),f,b
 22409  005F58  D002               	goto	u18548
 22410  005F5A                     u18530:
 22411  005F5A  0100               	movlb	0	; () banked
 22412  005F5C  6BB4               	clrf	??_SendPacket& (0+255),b
 22413  005F5E                     u18548:
 22414  005F5E  51B7               	movf	SendPacket@tParam& (0+255),w,b
 22415  005F60  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22416  005F62  0BFC               	andlw	-4
 22417  005F64  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22418  005F66  6FB7               	movwf	SendPacket@tParam& (0+255),b
 22419                           
 22420                           ;Bridge.c: 74: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 22421  005F68  51B6               	movf	SendPacket@Broadcast& (0+255),w,b
 22422  005F6A  E103               	bnz	u18550
 22423  005F6C  6BB4               	clrf	??_SendPacket& (0+255),b
 22424  005F6E  2BB4               	incf	??_SendPacket& (0+255),f,b
 22425  005F70  D002               	goto	u18568
 22426  005F72                     u18550:
 22427  005F72  0100               	movlb	0	; () banked
 22428  005F74  6BB4               	clrf	??_SendPacket& (0+255),b
 22429  005F76                     u18568:
 22430  005F76  3BB4               	swapf	??_SendPacket& (0+255),f,b
 22431  005F78  47B4               	rlncf	??_SendPacket& (0+255),f,b
 22432  005F7A  51B7               	movf	SendPacket@tParam& (0+255),w,b
 22433  005F7C  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22434  005F7E  0BDF               	andlw	-33
 22435  005F80  19B4               	xorwf	??_SendPacket& (0+255),w,b
 22436  005F82  6FB7               	movwf	SendPacket@tParam& (0+255),b
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;Bridge.c: 75: tParam.flags.bits.broadcast = Broadcast;
 22440  005F84  B1B6               	btfsc	SendPacket@Broadcast& (0+255),0,b
 22441  005F86  D002               	bra	u18575
 22442  005F88  95B7               	bcf	SendPacket@tParam& (0+255),2,b
 22443  005F8A  D002               	bra	u18576
 22444  005F8C                     u18575:
 22445  005F8C  0100               	movlb	0	; () banked
 22446  005F8E  85B7               	bsf	SendPacket@tParam& (0+255),2,b
 22447  005F90                     u18576:
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;Bridge.c: 76: tParam.flags.bits.secEn = SecurityEnabled;
 22451  005F90  B1B3               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 22452  005F92  D002               	bra	u18585
 22453  005F94  97B7               	bcf	SendPacket@tParam& (0+255),3,b
 22454  005F96  D002               	bra	u18586
 22455  005F98                     u18585:
 22456  005F98  0100               	movlb	0	; () banked
 22457  005F9A  87B7               	bsf	SendPacket@tParam& (0+255),3,b
 22458  005F9C                     u18586:
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;Bridge.c: 85: tParam.flags.bits.destPrsnt = 1;
 22462  005F9C  8DB7               	bsf	SendPacket@tParam& (0+255),6,b
 22463                           
 22464                           ; BSR set to: 0
 22465                           ;Bridge.c: 98: tParam.flags.bits.sourcePrsnt = 1;
 22466  005F9E  8FB7               	bsf	SendPacket@tParam& (0+255),7,b
 22467                           
 22468                           ;Bridge.c: 101: tParam.DestAddress = DestinationAddress;
 22469  005FA0  C0AE  F0B8         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 22470  005FA4  C0AF  F0B9         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;Bridge.c: 102: tParam.DestPANID.Val = destinationPANID;
 22474  005FA8  C0B0  F0BA         	movff	SendPacket@destinationPANID,SendPacket@tParam+3
 22475  005FAC  C0B1  F0BB         	movff	SendPacket@destinationPANID+1,SendPacket@tParam+4
 22476                           
 22477                           ; BSR set to: 0
 22478                           ;Bridge.c: 104: status = MiMAC_SendPacket(tParam, TxBuff, TxIndex);
 22479  005FB0  EE20  F0B7         	lfsr	2,SendPacket@tParam
 22480  005FB4  EE00  F0A2         	lfsr	0,MiMAC_SendPacket@transParam
 22481  005FB8  0E04               	movlw	4
 22482  005FBA                     u18591:
 22483  005FBA  CFDB FFEB          	movff	plusw2,plusw0
 22484  005FBE  06E8               	decf	wreg,f,c
 22485  005FC0  E2FC               	bc	u18591
 22486  005FC2  0E48               	movlw	low _TxBuff
 22487  005FC4  6FA7               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 22488  005FC6  0E07               	movlw	high _TxBuff
 22489  005FC8  6FA8               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 22490  005FCA  C040  F0A9         	movff	_TxIndex,MiMAC_SendPacket@MACPayloadLen
 22491  005FCE  ECF8  F017         	call	_MiMAC_SendPacket	;wreg free
 22492  005FD2  6FB5               	movwf	SendPacket@status& (0+255),b
 22493                           
 22494                           ; BSR set to: 0
 22495                           ;Bridge.c: 105: TxIndex = 0;
 22496  005FD4  6A40               	clrf	_TxIndex,c
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;Bridge.c: 107: return status;
 22500  005FD6  51B5               	movf	SendPacket@status& (0+255),w,b
 22501                           
 22502                           ; BSR set to: 0
 22503  005FD8  0012               	return		;funcret
 22504  005FDA                     __end_of_SendPacket:
 22505                           	opt stack 0
 22506                           tblptru	equ	0xFF8
 22507                           tblptrh	equ	0xFF7
 22508                           tblptrl	equ	0xFF6
 22509                           tablat	equ	0xFF5
 22510                           prodh	equ	0xFF4
 22511                           prodl	equ	0xFF3
 22512                           intcon3	equ	0xFF0
 22513                           postinc0	equ	0xFEE
 22514                           plusw0	equ	0xFEB
 22515                           fsr0h	equ	0xFEA
 22516                           fsr0l	equ	0xFE9
 22517                           wreg	equ	0xFE8
 22518                           indf1	equ	0xFE7
 22519                           postinc1	equ	0xFE6
 22520                           postdec1	equ	0xFE5
 22521                           plusw1	equ	0xFE3
 22522                           fsr1h	equ	0xFE2
 22523                           fsr1l	equ	0xFE1
 22524                           indf2	equ	0xFDF
 22525                           postinc2	equ	0xFDE
 22526                           postdec2	equ	0xFDD
 22527                           plusw2	equ	0xFDB
 22528                           fsr2h	equ	0xFDA
 22529                           fsr2l	equ	0xFD9
 22530                           status	equ	0xFD8
 22531                           
 22532 ;; *************** function _MiMAC_SendPacket *****************
 22533 ;; Defined at:
 22534 ;;		line 803 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 22535 ;; Parameters:    Size  Location     Type
 22536 ;;  transParam      5   66[BANK0 ] struct .
 22537 ;;  MACPayload      2   71[BANK0 ] PTR unsigned char 
 22538 ;;		 -> TxBuff(64), 
 22539 ;;  MACPayloadLe    1   73[BANK0 ] unsigned char 
 22540 ;; Auto vars:     Size  Location     Type
 22541 ;;  headerLen       1   75[BANK0 ] unsigned char 
 22542 ;;  TxIndex         1   77[BANK0 ] unsigned char 
 22543 ;;  i               1   76[BANK0 ] unsigned char 
 22544 ;; Return value:  Size  Location     Type
 22545 ;;                  1    wreg      unsigned char 
 22546 ;; Registers used:
 22547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22548 ;; Tracked objects:
 22549 ;;		On entry : F/0
 22550 ;;		On exit  : F/0
 22551 ;;		Unchanged: 0/0
 22552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22556 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22557 ;;Total ram usage:       12 bytes
 22558 ;; Hardware stack levels used:    1
 22559 ;; Hardware stack levels required when called:    9
 22560 ;; This function calls:
 22561 ;;		_CCM_Enc
 22562 ;;		_TxPacket
 22563 ;;		_memcpy
 22564 ;; This function is called by:
 22565 ;;		_SendPacket
 22566 ;; This function uses a non-reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text103
 22570  002FF0                     __ptext103:
 22571                           	opt stack 0
 22572  002FF0                     _MiMAC_SendPacket:
 22573                           	opt stack 15
 22574                           
 22575                           ; BSR set to: 0
 22576                           ;drv_mrf_miwi_mesh_89xa.c: 807: uint8_t i;
 22577                           ;drv_mrf_miwi_mesh_89xa.c: 808: uint8_t TxIndex;
 22578                           ;drv_mrf_miwi_mesh_89xa.c: 810: if( MACPayloadLen > 54 )
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;incstack = 0
 22582  002FF0  0E36               	movlw	54
 22583  002FF2  65A9               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 22584  002FF4  D001               	goto	l15436
 22585  002FF6  0C00               	retlw	0
 22586  002FF8                     l15436:
 22587                           
 22588                           ; BSR set to: 0
 22589                           ;drv_mrf_miwi_mesh_89xa.c: 813: }
 22590                           ;drv_mrf_miwi_mesh_89xa.c: 825: if( transParam.flags.bits.packetType == 0x01 )
 22591  002FF8  51A2               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 22592  002FFA  0B03               	andlw	3
 22593  002FFC  06E8               	decf	wreg,f,c
 22594  002FFE  E101               	bnz	l776
 22595                           
 22596                           ; BSR set to: 0
 22597                           ;drv_mrf_miwi_mesh_89xa.c: 826: {
 22598                           ;drv_mrf_miwi_mesh_89xa.c: 827: transParam.flags.bits.sourcePrsnt = 1;
 22599  003000  8FA2               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 22600  003002                     l776:
 22601                           
 22602                           ; BSR set to: 0
 22603                           ;drv_mrf_miwi_mesh_89xa.c: 828: }
 22604                           ;drv_mrf_miwi_mesh_89xa.c: 831: TxIndex = 0;
 22605  003002  6BAD               	clrf	MiMAC_SendPacket@TxIndex& (0+255),b
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;drv_mrf_miwi_mesh_89xa.c: 833: MACTxBuffer[TxIndex++] = transParam.flags.Val;
 22609  003004  C0A2  F31E         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 22610                           
 22611                           ; BSR set to: 0
 22612  003008  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22613                           
 22614                           ; BSR set to: 0
 22615                           ;drv_mrf_miwi_mesh_89xa.c: 834: MACTxBuffer[TxIndex++] = MACSeq++;
 22616  00300A  0E1E               	movlw	low _MACTxBuffer
 22617  00300C  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22618  00300E  6ED9               	movwf	fsr2l,c
 22619  003010  6ADA               	clrf	fsr2h,c
 22620  003012  0E03               	movlw	high _MACTxBuffer
 22621  003014  22DA               	addwfc	fsr2h,f,c
 22622  003016  C1B8  FFDF         	movff	_MACSeq,indf2
 22623  00301A  0101               	movlb	1	; () banked
 22624  00301C  2BB8               	incf	_MACSeq& (0+255),f,b
 22625  00301E  0100               	movlb	0	; () banked
 22626  003020  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;drv_mrf_miwi_mesh_89xa.c: 839: }
 22630                           ;drv_mrf_miwi_mesh_89xa.c: 841: if( transParam.flags.bits.destPrsnt )
 22631                           
 22632                           ;drv_mrf_miwi_mesh_89xa.c: 837: {
 22633  003022  ADA2               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 22634  003024  D02A               	goto	l778
 22635                           
 22636                           ; BSR set to: 0
 22637                           ;drv_mrf_miwi_mesh_89xa.c: 842: {
 22638                           ;drv_mrf_miwi_mesh_89xa.c: 843: memcpy((uint8_t*)&MACTxBuffer[TxIndex],transParam.DestPA
      +                          NID.v,2);
 22639  003026  0E1E               	movlw	low _MACTxBuffer
 22640  003028  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22641  00302A  6F75               	movwf	memcpy@d1& (0+255),b
 22642  00302C  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 22643  00302E  0E03               	movlw	high _MACTxBuffer
 22644  003030  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 22645  003032  0EA5               	movlw	low (MiMAC_SendPacket@transParam+3)
 22646  003034  6F77               	movwf	memcpy@s1& (0+255),b
 22647  003036  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 22648  003038  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22649  00303A  0E02               	movlw	2
 22650  00303C  6F79               	movwf	memcpy@n& (0+255),b
 22651  00303E  EC05  F035         	call	_memcpy	;wreg free
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;drv_mrf_miwi_mesh_89xa.c: 844: TxIndex+=2;
 22655  003042  0E02               	movlw	2
 22656  003044  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;drv_mrf_miwi_mesh_89xa.c: 845: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 22660  003046  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 22661  003048  D010               	goto	l15460
 22662  00304A                     l15454:
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;drv_mrf_miwi_mesh_89xa.c: 846: {
 22666                           ;drv_mrf_miwi_mesh_89xa.c: 847: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 22667  00304A  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22668  00304C  25A3               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 22669  00304E  6ED9               	movwf	fsr2l,c
 22670  003050  0E00               	movlw	0
 22671  003052  21A4               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 22672  003054  6EDA               	movwf	fsr2h,c
 22673  003056  0E1E               	movlw	low _MACTxBuffer
 22674  003058  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22675  00305A  6EE1               	movwf	fsr1l,c
 22676  00305C  6AE2               	clrf	fsr1h,c
 22677  00305E  0E03               	movlw	high _MACTxBuffer
 22678  003060  22E2               	addwfc	fsr1h,f,c
 22679  003062  CFDF FFE7          	movff	indf2,indf1
 22680                           
 22681                           ; BSR set to: 0
 22682  003066  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22683                           
 22684                           ; BSR set to: 0
 22685  003068  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22686  00306A                     l15460:
 22687                           
 22688                           ; BSR set to: 0
 22689  00306A  3036               	rrcf	_MACInitParams,w,c
 22690  00306C  32E8               	rrcf	wreg,f,c
 22691  00306E  32E8               	rrcf	wreg,f,c
 22692  003070  0B0F               	andlw	15
 22693  003072  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 22694  003074  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 22695  003076  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22696  003078  E3E8               	bnc	l15454
 22697  00307A                     l778:
 22698                           
 22699                           ; BSR set to: 0
 22700                           ;drv_mrf_miwi_mesh_89xa.c: 848: }
 22701                           ;drv_mrf_miwi_mesh_89xa.c: 849: }
 22702                           ;drv_mrf_miwi_mesh_89xa.c: 851: if( transParam.flags.bits.sourcePrsnt )
 22703  00307A  AFA2               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 22704  00307C  D02A               	goto	l782
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;drv_mrf_miwi_mesh_89xa.c: 852: {
 22708                           ;drv_mrf_miwi_mesh_89xa.c: 853: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&myPANID,2);
 22709  00307E  0E1E               	movlw	low _MACTxBuffer
 22710  003080  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22711  003082  6F75               	movwf	memcpy@d1& (0+255),b
 22712  003084  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 22713  003086  0E03               	movlw	high _MACTxBuffer
 22714  003088  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 22715  00308A  0E4D               	movlw	low _myPANID
 22716  00308C  6F77               	movwf	memcpy@s1& (0+255),b
 22717  00308E  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 22718  003090  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22719  003092  0E02               	movlw	2
 22720  003094  6F79               	movwf	memcpy@n& (0+255),b
 22721  003096  EC05  F035         	call	_memcpy	;wreg free
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;drv_mrf_miwi_mesh_89xa.c: 854: TxIndex+=2;
 22725  00309A  0E02               	movlw	2
 22726  00309C  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22727                           
 22728                           ; BSR set to: 0
 22729                           ;drv_mrf_miwi_mesh_89xa.c: 855: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLengt
      +                          h; i++)
 22730  00309E  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 22731  0030A0  D010               	goto	l15474
 22732  0030A2                     l15468:
 22733                           
 22734                           ; BSR set to: 0
 22735                           ;drv_mrf_miwi_mesh_89xa.c: 856: {
 22736                           ;drv_mrf_miwi_mesh_89xa.c: 857: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 22737  0030A2  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22738  0030A4  2437               	addwf	_MACInitParams+1,w,c
 22739  0030A6  6ED9               	movwf	fsr2l,c
 22740  0030A8  0E00               	movlw	0
 22741  0030AA  2038               	addwfc	_MACInitParams+2,w,c
 22742  0030AC  6EDA               	movwf	fsr2h,c
 22743  0030AE  0E1E               	movlw	low _MACTxBuffer
 22744  0030B0  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22745  0030B2  6EE1               	movwf	fsr1l,c
 22746  0030B4  6AE2               	clrf	fsr1h,c
 22747  0030B6  0E03               	movlw	high _MACTxBuffer
 22748  0030B8  22E2               	addwfc	fsr1h,f,c
 22749  0030BA  CFDF FFE7          	movff	indf2,indf1
 22750                           
 22751                           ; BSR set to: 0
 22752  0030BE  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22753                           
 22754                           ; BSR set to: 0
 22755  0030C0  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22756  0030C2                     l15474:
 22757                           
 22758                           ; BSR set to: 0
 22759  0030C2  3036               	rrcf	_MACInitParams,w,c
 22760  0030C4  32E8               	rrcf	wreg,f,c
 22761  0030C6  32E8               	rrcf	wreg,f,c
 22762  0030C8  0B0F               	andlw	15
 22763  0030CA  6FAA               	movwf	??_MiMAC_SendPacket& (0+255),b
 22764  0030CC  51AA               	movf	??_MiMAC_SendPacket& (0+255),w,b
 22765  0030CE  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22766  0030D0  E3E8               	bnc	l15468
 22767  0030D2                     l782:
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;drv_mrf_miwi_mesh_89xa.c: 858: }
 22771                           ;drv_mrf_miwi_mesh_89xa.c: 859: }
 22772                           ;drv_mrf_miwi_mesh_89xa.c: 862: if( transParam.flags.bits.secEn )
 22773  0030D2  A7A2               	btfss	MiMAC_SendPacket@transParam& (0+255),3,b
 22774  0030D4  D048               	goto	l786
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;drv_mrf_miwi_mesh_89xa.c: 863: {
 22778                           ;drv_mrf_miwi_mesh_89xa.c: 864: memcpy((uint8_t*)&MACTxBuffer[TxIndex],&OutgoingFrameCou
      +                          nter,4);
 22779  0030D6  0E1E               	movlw	low _MACTxBuffer
 22780  0030D8  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22781  0030DA  6F75               	movwf	memcpy@d1& (0+255),b
 22782  0030DC  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 22783  0030DE  0E03               	movlw	high _MACTxBuffer
 22784  0030E0  2376               	addwfc	(memcpy@d1+1)& (0+255),f,b
 22785  0030E2  0ED4               	movlw	low _OutgoingFrameCounter
 22786  0030E4  6F77               	movwf	memcpy@s1& (0+255),b
 22787  0030E6  0E02               	movlw	high _OutgoingFrameCounter
 22788  0030E8  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 22789  0030EA  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 22790  0030EC  0E04               	movlw	4
 22791  0030EE  6F79               	movwf	memcpy@n& (0+255),b
 22792  0030F0  EC05  F035         	call	_memcpy	;wreg free
 22793                           
 22794                           ; BSR set to: 0
 22795                           ;drv_mrf_miwi_mesh_89xa.c: 865: TxIndex+=4;
 22796  0030F4  0E04               	movlw	4
 22797  0030F6  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22798                           
 22799                           ; BSR set to: 0
 22800                           ;drv_mrf_miwi_mesh_89xa.c: 866: OutgoingFrameCounter++;
 22801  0030F8  0102               	movlb	2	; () banked
 22802  0030FA  2BD4               	incf	_OutgoingFrameCounter& (0+255),f,b
 22803  0030FC  0E00               	movlw	0
 22804  0030FE  23D5               	addwfc	(_OutgoingFrameCounter+1)& (0+255),f,b
 22805  003100  23D6               	addwfc	(_OutgoingFrameCounter+2)& (0+255),f,b
 22806  003102  23D7               	addwfc	(_OutgoingFrameCounter+3)& (0+255),f,b
 22807                           
 22808                           ; BSR set to: 2
 22809                           ;drv_mrf_miwi_mesh_89xa.c: 873: MACTxBuffer[TxIndex++] = 0x00;
 22810  003104  0E1E               	movlw	low _MACTxBuffer
 22811  003106  0100               	movlb	0	; () banked
 22812  003108  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22813  00310A  6ED9               	movwf	fsr2l,c
 22814  00310C  6ADA               	clrf	fsr2h,c
 22815  00310E  0E03               	movlw	high _MACTxBuffer
 22816  003110  22DA               	addwfc	fsr2h,f,c
 22817  003112  6ADF               	clrf	indf2,c
 22818                           
 22819                           ; BSR set to: 0
 22820  003114  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;drv_mrf_miwi_mesh_89xa.c: 875: {
 22824                           ;drv_mrf_miwi_mesh_89xa.c: 876: uint8_t headerLen;
 22825                           ;drv_mrf_miwi_mesh_89xa.c: 878: headerLen = TxIndex;
 22826  003116  C0AD  F0AB         	movff	MiMAC_SendPacket@TxIndex,MiMAC_SendPacket@headerLen
 22827                           
 22828                           ; BSR set to: 0
 22829                           ;drv_mrf_miwi_mesh_89xa.c: 880: for(i = 0; i < MACPayloadLen; i++)
 22830  00311A  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 22831  00311C  D010               	goto	l15496
 22832  00311E                     l15490:
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;drv_mrf_miwi_mesh_89xa.c: 881: {
 22836                           ;drv_mrf_miwi_mesh_89xa.c: 882: MACTxBuffer[TxIndex++] = MACPayload[i];
 22837  00311E  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22838  003120  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22839  003122  6ED9               	movwf	fsr2l,c
 22840  003124  0E00               	movlw	0
 22841  003126  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22842  003128  6EDA               	movwf	fsr2h,c
 22843  00312A  0E1E               	movlw	low _MACTxBuffer
 22844  00312C  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22845  00312E  6EE1               	movwf	fsr1l,c
 22846  003130  6AE2               	clrf	fsr1h,c
 22847  003132  0E03               	movlw	high _MACTxBuffer
 22848  003134  22E2               	addwfc	fsr1h,f,c
 22849  003136  CFDF FFE7          	movff	indf2,indf1
 22850                           
 22851                           ; BSR set to: 0
 22852  00313A  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22853                           
 22854                           ; BSR set to: 0
 22855  00313C  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22856  00313E                     l15496:
 22857                           
 22858                           ; BSR set to: 0
 22859  00313E  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22860  003140  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22861  003142  E3ED               	bnc	l15490
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;drv_mrf_miwi_mesh_89xa.c: 883: }
 22865                           ;drv_mrf_miwi_mesh_89xa.c: 903: CCM_Enc((uint8_t *)MACTxBuffer, headerLen, MACPayloadLen
      +                          , key);
 22866  003144  0E1E               	movlw	low _MACTxBuffer
 22867  003146  6F97               	movwf	CCM_Enc@text& (0+255),b
 22868  003148  0E03               	movlw	high _MACTxBuffer
 22869  00314A  6F98               	movwf	(CCM_Enc@text+1)& (0+255),b
 22870  00314C  C0AB  F099         	movff	MiMAC_SendPacket@headerLen,CCM_Enc@headerLen
 22871  003150  C0A9  F09A         	movff	MiMAC_SendPacket@MACPayloadLen,CCM_Enc@payloadLen
 22872  003154  0ECC               	movlw	low _key
 22873  003156  6F9B               	movwf	CCM_Enc@key& (0+255),b
 22874  003158  0E02               	movlw	high _key
 22875  00315A  6F9C               	movwf	(CCM_Enc@key+1)& (0+255),b
 22876  00315C  ECC4  F02B         	call	_CCM_Enc	;wreg free
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;drv_mrf_miwi_mesh_89xa.c: 904: TxIndex += 2;
 22880  003160  0E02               	movlw	2
 22881  003162  27AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22882                           
 22883                           ;drv_mrf_miwi_mesh_89xa.c: 911: }
 22884                           ;drv_mrf_miwi_mesh_89xa.c: 912: }
 22885  003164  D015               	goto	l15510
 22886  003166                     l786:
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;drv_mrf_miwi_mesh_89xa.c: 913: else
 22890                           ;drv_mrf_miwi_mesh_89xa.c: 917: for(i = 0; i < MACPayloadLen; i++)
 22891  003166  6BAC               	clrf	MiMAC_SendPacket@i& (0+255),b
 22892  003168  D010               	goto	l15508
 22893  00316A                     l15502:
 22894                           
 22895                           ; BSR set to: 0
 22896                           ;drv_mrf_miwi_mesh_89xa.c: 918: {
 22897                           ;drv_mrf_miwi_mesh_89xa.c: 919: MACTxBuffer[TxIndex++] = MACPayload[i];
 22898  00316A  51AC               	movf	MiMAC_SendPacket@i& (0+255),w,b
 22899  00316C  25A7               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 22900  00316E  6ED9               	movwf	fsr2l,c
 22901  003170  0E00               	movlw	0
 22902  003172  21A8               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 22903  003174  6EDA               	movwf	fsr2h,c
 22904  003176  0E1E               	movlw	low _MACTxBuffer
 22905  003178  25AD               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22906  00317A  6EE1               	movwf	fsr1l,c
 22907  00317C  6AE2               	clrf	fsr1h,c
 22908  00317E  0E03               	movlw	high _MACTxBuffer
 22909  003180  22E2               	addwfc	fsr1h,f,c
 22910  003182  CFDF FFE7          	movff	indf2,indf1
 22911                           
 22912                           ; BSR set to: 0
 22913  003186  2BAD               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 22914                           
 22915                           ; BSR set to: 0
 22916  003188  2BAC               	incf	MiMAC_SendPacket@i& (0+255),f,b
 22917  00318A                     l15508:
 22918                           
 22919                           ; BSR set to: 0
 22920  00318A  51A9               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 22921  00318C  5DAC               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 22922  00318E  E3ED               	bnc	l15502
 22923  003190                     l15510:
 22924                           
 22925                           ; BSR set to: 0
 22926                           ;drv_mrf_miwi_mesh_89xa.c: 920: }
 22927                           ;drv_mrf_miwi_mesh_89xa.c: 922: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.
      +                          CCAEnable);
 22928  003190  0E00               	movlw	0
 22929  003192  B236               	btfsc	_MACInitParams,1,c
 22930  003194  0E01               	movlw	1
 22931  003196  6F87               	movwf	TxPacket@CCA& (0+255),b
 22932  003198  51AD               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 22933  00319A  EF64  F022         	goto	_TxPacket
 22934  00319E                     __end_of_MiMAC_SendPacket:
 22935                           	opt stack 0
 22936                           tblptru	equ	0xFF8
 22937                           tblptrh	equ	0xFF7
 22938                           tblptrl	equ	0xFF6
 22939                           tablat	equ	0xFF5
 22940                           prodh	equ	0xFF4
 22941                           prodl	equ	0xFF3
 22942                           intcon3	equ	0xFF0
 22943                           postinc0	equ	0xFEE
 22944                           plusw0	equ	0xFEB
 22945                           fsr0h	equ	0xFEA
 22946                           fsr0l	equ	0xFE9
 22947                           wreg	equ	0xFE8
 22948                           indf1	equ	0xFE7
 22949                           postinc1	equ	0xFE6
 22950                           postdec1	equ	0xFE5
 22951                           plusw1	equ	0xFE3
 22952                           fsr1h	equ	0xFE2
 22953                           fsr1l	equ	0xFE1
 22954                           indf2	equ	0xFDF
 22955                           postinc2	equ	0xFDE
 22956                           postdec2	equ	0xFDD
 22957                           plusw2	equ	0xFDB
 22958                           fsr2h	equ	0xFDA
 22959                           fsr2l	equ	0xFD9
 22960                           status	equ	0xFD8
 22961                           
 22962 ;; *************** function _TxPacket *****************
 22963 ;; Defined at:
 22964 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 22965 ;; Parameters:    Size  Location     Type
 22966 ;;  TxPacketLen     1    wreg     unsigned char 
 22967 ;;  CCA             1   39[BANK0 ] unsigned char 
 22968 ;; Auto vars:     Size  Location     Type
 22969 ;;  TxPacketLen     1   59[BANK0 ] unsigned char 
 22970 ;;  j               2   56[BANK0 ] unsigned int 
 22971 ;;  delay           2   52[BANK0 ] unsigned int 
 22972 ;;  allowedTxFai    1   55[BANK0 ] unsigned char 
 22973 ;;  t2              4   48[BANK0 ] struct MIWI_TICK_t
 22974 ;;  t1              4   44[BANK0 ] struct MIWI_TICK_t
 22975 ;;  i               1   61[BANK0 ] unsigned char 
 22976 ;;  status          1   60[BANK0 ] unsigned char 
 22977 ;;  rssival         1   58[BANK0 ] unsigned char 
 22978 ;;  reTry           1   54[BANK0 ] unsigned char 
 22979 ;;  CCARetries      1    0        unsigned char 
 22980 ;; Return value:  Size  Location     Type
 22981 ;;                  1    wreg      unsigned char 
 22982 ;; Registers used:
 22983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22984 ;; Tracked objects:
 22985 ;;		On entry : F/0
 22986 ;;		On exit  : F/0
 22987 ;;		Unchanged: 0/0
 22988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22989 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22990 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22992 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22993 ;;Total ram usage:       23 bytes
 22994 ;; Hardware stack levels used:    1
 22995 ;; Hardware stack levels required when called:    8
 22996 ;; This function calls:
 22997 ;;		_DelayMs
 22998 ;;		_MiWi_TickGetMs
 22999 ;;		_RegisterRead
 23000 ;;		_RegisterSet
 23001 ;;		_SetRFMode
 23002 ;;		_WriteFIFO
 23003 ;;		_krnd
 23004 ;; This function is called by:
 23005 ;;		_MiMAC_SendPacket
 23006 ;; This function uses a non-reentrant model
 23007 ;;
 23008                           
 23009                           	psect	text104
 23010  0044C8                     __ptext104:
 23011                           	opt stack 0
 23012  0044C8                     _TxPacket:
 23013                           	opt stack 15
 23014                           
 23015                           ; BSR set to: 0
 23016                           ;incstack = 0
 23017                           ;TxPacket@TxPacketLen stored from wreg
 23018  0044C8  6F9B               	movwf	TxPacket@TxPacketLen& (0+255),b
 23019                           
 23020                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 23021                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 23022                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 23023                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 23024                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 23025                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 23026  0044CA  0E03               	movlw	3
 23027  0044CC  0100               	movlb	0	; () banked
 23028  0044CE  6F96               	movwf	TxPacket@reTry& (0+255),b
 23029                           
 23030                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 23031  0044D0  D098               	goto	l15390
 23032  0044D2                     l713:
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 23036                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 23037                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 23038  0044D2  6B97               	clrf	TxPacket@allowedTxFailure& (0+255),b
 23039  0044D4                     l714:
 23040                           
 23041                           ; BSR set to: 0
 23042                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 23043  0044D4  6A41               	clrf	_hasAck,c	;volatile
 23044                           
 23045                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 23046  0044D6  96F0               	bcf	intcon3,3,c	;volatile
 23047                           
 23048                           ; BSR set to: 0
 23049                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 23050  0044D8  0E20               	movlw	32
 23051  0044DA  ECE7  F031         	call	_SetRFMode
 23052                           
 23053                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 23054  0044DE  0E1A               	movlw	26
 23055  0044E0  0100               	movlb	0	; () banked
 23056  0044E2  6F76               	movwf	(RegisterSet@setting+1)& (0+255),b
 23057  0044E4  0EC9               	movlw	201
 23058  0044E6  6F75               	movwf	RegisterSet@setting& (0+255),b
 23059  0044E8  EC32  F039         	call	_RegisterSet	;wreg free
 23060                           
 23061                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 23062  0044EC  0100               	movlb	0	; () banked
 23063  0044EE  519B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 23064  0044F0  EC97  F039         	call	_WriteFIFO
 23065                           
 23066                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 23067  0044F4  0100               	movlb	0	; () banked
 23068  0044F6  6B9D               	clrf	TxPacket@i& (0+255),b
 23069  0044F8  D00B               	goto	l15328
 23070  0044FA                     l15324:
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 23074                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 23075  0044FA  0E1E               	movlw	low _MACTxBuffer
 23076  0044FC  259D               	addwf	TxPacket@i& (0+255),w,b
 23077  0044FE  6ED9               	movwf	fsr2l,c
 23078  004500  6ADA               	clrf	fsr2h,c
 23079  004502  0E03               	movlw	high _MACTxBuffer
 23080  004504  22DA               	addwfc	fsr2h,f,c
 23081  004506  50DF               	movf	indf2,w,c
 23082  004508  EC97  F039         	call	_WriteFIFO
 23083  00450C  0100               	movlb	0	; () banked
 23084  00450E  2B9D               	incf	TxPacket@i& (0+255),f,b
 23085  004510                     l15328:
 23086                           
 23087                           ; BSR set to: 0
 23088  004510  519B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 23089  004512  5D9D               	subwf	TxPacket@i& (0+255),w,b
 23090  004514  E3F2               	bnc	l15324
 23091                           
 23092                           ; BSR set to: 0
 23093                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 23094  004516  5187               	movf	TxPacket@CCA& (0+255),w,b
 23095  004518  E02C               	bz	l15358
 23096                           
 23097                           ; BSR set to: 0
 23098                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 23099                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 23100  00451A  6B9D               	clrf	TxPacket@i& (0+255),b
 23101  00451C                     l15338:
 23102                           
 23103                           ; BSR set to: 0
 23104                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 23105                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 23106  00451C  0E28               	movlw	40
 23107  00451E  EC91  F038         	call	_RegisterRead
 23108  004522  6F9A               	movwf	TxPacket@rssival& (0+255),b
 23109                           
 23110                           ; BSR set to: 0
 23111                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 23112  004524  90D8               	bcf	status,0,c
 23113  004526  339A               	rrcf	TxPacket@rssival& (0+255),f,b
 23114                           
 23115                           ; BSR set to: 0
 23116                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 23117  004528  0E41               	movlw	65
 23118  00452A  659A               	cpfsgt	TxPacket@rssival& (0+255),b
 23119  00452C  D022               	goto	l15358
 23120                           
 23121                           ; BSR set to: 0
 23122                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 23123                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 23124                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 23125                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 23126  00452E  EC45  F01E         	call	_krnd	;wreg free
 23127  004532  0E1F               	movlw	31
 23128  004534  1773               	andwf	?_krnd& (0+255),f,b
 23129  004536  6B74               	clrf	(?_krnd+1)& (0+255),b
 23130  004538  0E08               	movlw	8
 23131  00453A  2573               	addwf	?_krnd& (0+255),w,b
 23132  00453C  6F94               	movwf	TxPacket@delay& (0+255),b
 23133  00453E  0E00               	movlw	0
 23134  004540  2174               	addwfc	(?_krnd+1)& (0+255),w,b
 23135  004542  6F95               	movwf	(TxPacket@delay+1)& (0+255),b
 23136                           
 23137                           ; BSR set to: 0
 23138                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 23139  004544  6B98               	clrf	TxPacket@j& (0+255),b
 23140  004546  6B99               	clrf	(TxPacket@j+1)& (0+255),b
 23141  004548  D00B               	goto	l15352
 23142  00454A                     l723:
 23143                           
 23144                           ; BSR set to: 0
 23145  00454A  0004               	clrwdt		;# 
 23146                           
 23147                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 23148  00454C  0E01               	movlw	1
 23149  00454E  0100               	movlb	0	; () banked
 23150  004550  6F7B               	movwf	DelayMs@ms& (0+255),b
 23151  004552  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 23152  004554  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 23153  004556  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 23154  004558  EC7F  F02E         	call	_DelayMs	;wreg free
 23155                           
 23156                           ; BSR set to: 0
 23157  00455C  4B98               	infsnz	TxPacket@j& (0+255),f,b
 23158  00455E  2B99               	incf	(TxPacket@j+1)& (0+255),f,b
 23159  004560                     l15352:
 23160                           
 23161                           ; BSR set to: 0
 23162  004560  5194               	movf	TxPacket@delay& (0+255),w,b
 23163  004562  5D98               	subwf	TxPacket@j& (0+255),w,b
 23164  004564  5195               	movf	(TxPacket@delay+1)& (0+255),w,b
 23165  004566  5999               	subwfb	(TxPacket@j+1)& (0+255),w,b
 23166  004568  E3F0               	bnc	l723
 23167                           
 23168                           ; BSR set to: 0
 23169  00456A  2B9D               	incf	TxPacket@i& (0+255),f,b
 23170                           
 23171                           ; BSR set to: 0
 23172  00456C  0E03               	movlw	3
 23173  00456E  659D               	cpfsgt	TxPacket@i& (0+255),b
 23174  004570  D7D5               	goto	l15338
 23175  004572                     l15358:
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 23179                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 23180                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 23181                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 23182  004572  0E80               	movlw	128
 23183  004574  ECE7  F031         	call	_SetRFMode
 23184                           
 23185                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 23186  004578  86F0               	bsf	intcon3,3,c	;volatile
 23187  00457A                     l15362:
 23188  00457A  503D               	movf	_IRQ1_Received,w,c	;volatile
 23189  00457C  E102               	bnz	l730
 23190  00457E  A0F0               	btfss	intcon3,0,c	;volatile
 23191  004580  D7FC               	goto	l15362
 23192  004582                     l730:
 23193                           
 23194                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 23195                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 23196  004582  6A3D               	clrf	_IRQ1_Received,c	;volatile
 23197                           
 23198                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 23199  004584  0E20               	movlw	32
 23200  004586  ECE7  F031         	call	_SetRFMode
 23201                           
 23202                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 23203  00458A  0E60               	movlw	96
 23204  00458C  ECE7  F031         	call	_SetRFMode
 23205                           
 23206                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 23207  004590  0103               	movlb	3	; () banked
 23208  004592  AB1E               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 23209  004594  D00E               	goto	l15376
 23210                           
 23211                           ; BSR set to: 3
 23212                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 23213                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 23214  004596  C31F  F1BF         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 23215                           
 23216                           ; BSR set to: 3
 23217                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 23218  00459A  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 23219  00459E  C07F  F08C         	movff	?_MiWi_TickGetMs,TxPacket@t1
 23220  0045A2  C080  F08D         	movff	?_MiWi_TickGetMs+1,TxPacket@t1+1
 23221  0045A6  C081  F08E         	movff	?_MiWi_TickGetMs+2,TxPacket@t1+2
 23222  0045AA  C082  F08F         	movff	?_MiWi_TickGetMs+3,TxPacket@t1+3
 23223  0045AE                     l15374:
 23224                           
 23225                           ; BSR set to: 0
 23226                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 23227                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 23228  0045AE  5041               	movf	_hasAck,w,c	;volatile
 23229  0045B0  E004               	bz	l15378
 23230  0045B2                     l15376:
 23231                           
 23232                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 23233                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 23234  0045B2  0E01               	movlw	1
 23235  0045B4  0100               	movlb	0	; () banked
 23236  0045B6  6F9C               	movwf	TxPacket@status& (0+255),b
 23237                           
 23238                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 23239  0045B8  D029               	goto	l15392
 23240  0045BA                     l15378:
 23241                           
 23242                           ; BSR set to: 0
 23243                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 23244                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 23245  0045BA  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 23246  0045BE  C07F  F090         	movff	?_MiWi_TickGetMs,TxPacket@t2
 23247  0045C2  C080  F091         	movff	?_MiWi_TickGetMs+1,TxPacket@t2+1
 23248  0045C6  C081  F092         	movff	?_MiWi_TickGetMs+2,TxPacket@t2+2
 23249  0045CA  C082  F093         	movff	?_MiWi_TickGetMs+3,TxPacket@t2+3
 23250                           
 23251                           ; BSR set to: 0
 23252                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 23253  0045CE  518C               	movf	TxPacket@t1& (0+255),w,b
 23254  0045D0  5D90               	subwf	TxPacket@t2& (0+255),w,b
 23255  0045D2  6F88               	movwf	??_TxPacket& (0+255),b
 23256  0045D4  518D               	movf	(TxPacket@t1+1)& (0+255),w,b
 23257  0045D6  5991               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 23258  0045D8  6F89               	movwf	(??_TxPacket+1)& (0+255),b
 23259  0045DA  518E               	movf	(TxPacket@t1+2)& (0+255),w,b
 23260  0045DC  5992               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 23261  0045DE  6F8A               	movwf	(??_TxPacket+2)& (0+255),b
 23262  0045E0  518F               	movf	(TxPacket@t1+3)& (0+255),w,b
 23263  0045E2  5993               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 23264  0045E4  6F8B               	movwf	(??_TxPacket+3)& (0+255),b
 23265  0045E6  518B               	movf	(??_TxPacket+3)& (0+255),w,b
 23266  0045E8  118A               	iorwf	(??_TxPacket+2)& (0+255),w,b
 23267  0045EA  1189               	iorwf	(??_TxPacket+1)& (0+255),w,b
 23268  0045EC  E103               	bnz	u18310
 23269  0045EE  0E33               	movlw	51
 23270  0045F0  5D88               	subwf	??_TxPacket& (0+255),w,b
 23271  0045F2  E3DD               	bnc	l15374
 23272  0045F4                     u18310:
 23273                           
 23274                           ; BSR set to: 0
 23275                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 23276                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 23277                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 23278  0045F4  2B97               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 23279  0045F6  0597               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 23280  0045F8  6F88               	movwf	??_TxPacket& (0+255),b
 23281  0045FA  0E04               	movlw	4
 23282  0045FC  6188               	cpfslt	??_TxPacket& (0+255),b
 23283  0045FE  D001               	goto	l15390
 23284  004600  D769               	goto	l714
 23285  004602                     l15390:
 23286                           
 23287                           ; BSR set to: 0
 23288  004602  0796               	decf	TxPacket@reTry& (0+255),f,b
 23289  004604  2996               	incf	TxPacket@reTry& (0+255),w,b
 23290  004606  E001 D764          	bnz	l713
 23291                           
 23292                           ; BSR set to: 0
 23293                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 23294                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 23295                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 23296  00460A  6B9C               	clrf	TxPacket@status& (0+255),b
 23297  00460C                     l15392:
 23298                           
 23299                           ; BSR set to: 0
 23300                           ;drv_mrf_miwi_mesh_89xa.c: 468: return status;
 23301  00460C  519C               	movf	TxPacket@status& (0+255),w,b
 23302                           
 23303                           ; BSR set to: 0
 23304  00460E  0012               	return		;funcret
 23305  004610                     __end_of_TxPacket:
 23306                           	opt stack 0
 23307                           tblptru	equ	0xFF8
 23308                           tblptrh	equ	0xFF7
 23309                           tblptrl	equ	0xFF6
 23310                           tablat	equ	0xFF5
 23311                           prodh	equ	0xFF4
 23312                           prodl	equ	0xFF3
 23313                           intcon3	equ	0xFF0
 23314                           postinc0	equ	0xFEE
 23315                           plusw0	equ	0xFEB
 23316                           fsr0h	equ	0xFEA
 23317                           fsr0l	equ	0xFE9
 23318                           wreg	equ	0xFE8
 23319                           indf1	equ	0xFE7
 23320                           postinc1	equ	0xFE6
 23321                           postdec1	equ	0xFE5
 23322                           plusw1	equ	0xFE3
 23323                           fsr1h	equ	0xFE2
 23324                           fsr1l	equ	0xFE1
 23325                           indf2	equ	0xFDF
 23326                           postinc2	equ	0xFDE
 23327                           postdec2	equ	0xFDD
 23328                           plusw2	equ	0xFDB
 23329                           fsr2h	equ	0xFDA
 23330                           fsr2l	equ	0xFD9
 23331                           status	equ	0xFD8
 23332                           
 23333 ;; *************** function _WriteFIFO *****************
 23334 ;; Defined at:
 23335 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23336 ;; Parameters:    Size  Location     Type
 23337 ;;  Data            1    wreg     unsigned char 
 23338 ;; Auto vars:     Size  Location     Type
 23339 ;;  Data            1   21[BANK0 ] unsigned char 
 23340 ;;  IRQ1select      1   22[BANK0 ] unsigned char 
 23341 ;; Return value:  Size  Location     Type
 23342 ;;                  1    wreg      void 
 23343 ;; Registers used:
 23344 ;;		wreg, status,2, cstack
 23345 ;; Tracked objects:
 23346 ;;		On entry : F/0
 23347 ;;		On exit  : 0/0
 23348 ;;		Unchanged: 0/0
 23349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23354 ;;Total ram usage:        2 bytes
 23355 ;; Hardware stack levels used:    1
 23356 ;; Hardware stack levels required when called:    6
 23357 ;; This function calls:
 23358 ;;		_SPIPut
 23359 ;; This function is called by:
 23360 ;;		_TxPacket
 23361 ;; This function uses a non-reentrant model
 23362 ;;
 23363                           
 23364                           	psect	text105
 23365  00732E                     __ptext105:
 23366                           	opt stack 0
 23367  00732E                     _WriteFIFO:
 23368                           	opt stack 16
 23369                           
 23370                           ; BSR set to: 0
 23371                           ;incstack = 0
 23372                           ;WriteFIFO@Data stored from wreg
 23373  00732E  6F75               	movwf	WriteFIFO@Data& (0+255),b
 23374                           
 23375                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 23376  007330  0E00               	movlw	0
 23377  007332  B6F0               	btfsc	intcon3,3,c	;volatile
 23378  007334  0E01               	movlw	1
 23379  007336  0100               	movlb	0	; () banked
 23380  007338  6F76               	movwf	WriteFIFO@IRQ1select& (0+255),b
 23381                           
 23382                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 23383  00733A  96F0               	bcf	intcon3,3,c	;volatile
 23384                           
 23385                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 23386  00733C  9A89               	bcf	3977,5,c	;volatile
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 23390  00733E  5175               	movf	WriteFIFO@Data& (0+255),w,b
 23391  007340  EC0E  F03A         	call	_SPIPut
 23392                           
 23393                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 23394  007344  8A89               	bsf	3977,5,c	;volatile
 23395                           
 23396                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 23397  007346  0100               	movlb	0	; () banked
 23398  007348  B176               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 23399  00734A  D002               	bra	u18005
 23400  00734C  96F0               	bcf	intcon3,3,c	;volatile
 23401  00734E  D001               	bra	u18006
 23402  007350                     u18005:
 23403  007350  86F0               	bsf	intcon3,3,c	;volatile
 23404  007352                     u18006:
 23405  007352  0012               	return		;funcret
 23406  007354                     __end_of_WriteFIFO:
 23407                           	opt stack 0
 23408                           tblptru	equ	0xFF8
 23409                           tblptrh	equ	0xFF7
 23410                           tblptrl	equ	0xFF6
 23411                           tablat	equ	0xFF5
 23412                           prodh	equ	0xFF4
 23413                           prodl	equ	0xFF3
 23414                           intcon3	equ	0xFF0
 23415                           postinc0	equ	0xFEE
 23416                           plusw0	equ	0xFEB
 23417                           fsr0h	equ	0xFEA
 23418                           fsr0l	equ	0xFE9
 23419                           wreg	equ	0xFE8
 23420                           indf1	equ	0xFE7
 23421                           postinc1	equ	0xFE6
 23422                           postdec1	equ	0xFE5
 23423                           plusw1	equ	0xFE3
 23424                           fsr1h	equ	0xFE2
 23425                           fsr1l	equ	0xFE1
 23426                           indf2	equ	0xFDF
 23427                           postinc2	equ	0xFDE
 23428                           postdec2	equ	0xFDD
 23429                           plusw2	equ	0xFDB
 23430                           fsr2h	equ	0xFDA
 23431                           fsr2l	equ	0xFD9
 23432                           status	equ	0xFD8
 23433                           
 23434 ;; *************** function _SetRFMode *****************
 23435 ;; Defined at:
 23436 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23437 ;; Parameters:    Size  Location     Type
 23438 ;;  mode            1    wreg     unsigned char 
 23439 ;; Auto vars:     Size  Location     Type
 23440 ;;  mode            1   24[BANK0 ] unsigned char 
 23441 ;; Return value:  Size  Location     Type
 23442 ;;                  1    wreg      void 
 23443 ;; Registers used:
 23444 ;;		wreg, status,2, status,0, cstack
 23445 ;; Tracked objects:
 23446 ;;		On entry : 0/0
 23447 ;;		On exit  : E/0
 23448 ;;		Unchanged: 0/0
 23449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23454 ;;Total ram usage:        1 bytes
 23455 ;; Hardware stack levels used:    1
 23456 ;; Hardware stack levels required when called:    7
 23457 ;; This function calls:
 23458 ;;		_RegisterSet
 23459 ;; This function is called by:
 23460 ;;		_TxPacket
 23461 ;;		_MiMAC_SetChannel
 23462 ;;		_MiMAC_Init
 23463 ;; This function uses a non-reentrant model
 23464 ;;
 23465                           
 23466                           	psect	text106
 23467  0063CE                     __ptext106:
 23468                           	opt stack 0
 23469  0063CE                     _SetRFMode:
 23470                           	opt stack 15
 23471                           
 23472                           ;incstack = 0
 23473                           ;SetRFMode@mode stored from wreg
 23474  0063CE  0100               	movlb	0	; () banked
 23475  0063D0  6F78               	movwf	SetRFMode@mode& (0+255),b
 23476                           
 23477                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 23478  0063D2  D02C               	goto	l15202
 23479  0063D4                     l15180:
 23480                           
 23481                           ; BSR set to: 0
 23482                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 23483  0063D4  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 23484  0063D6  0E8E               	movlw	142
 23485  0063D8  6F75               	movwf	RegisterSet@setting& (0+255),b
 23486  0063DA  EC32  F039         	call	_RegisterSet	;wreg free
 23487                           
 23488                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 23489  0063DE  0E80               	movlw	128
 23490  0063E0  0101               	movlb	1	; () banked
 23491  0063E2  6FBA               	movwf	_RF_Mode& (0+255),b
 23492                           
 23493                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 23494  0063E4  0C80               	retlw	128
 23495  0063E6                     l15184:
 23496                           
 23497                           ; BSR set to: 0
 23498                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 23499  0063E6  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 23500  0063E8  0E6E               	movlw	110
 23501  0063EA  6F75               	movwf	RegisterSet@setting& (0+255),b
 23502  0063EC  EC32  F039         	call	_RegisterSet	;wreg free
 23503                           
 23504                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 23505  0063F0  0E60               	movlw	96
 23506  0063F2  0101               	movlb	1	; () banked
 23507  0063F4  6FBA               	movwf	_RF_Mode& (0+255),b
 23508                           
 23509                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 23510  0063F6  0C60               	retlw	96
 23511  0063F8                     l15188:
 23512                           
 23513                           ; BSR set to: 0
 23514                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 23515  0063F8  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 23516  0063FA  0E4E               	movlw	78
 23517  0063FC  6F75               	movwf	RegisterSet@setting& (0+255),b
 23518  0063FE  EC32  F039         	call	_RegisterSet	;wreg free
 23519                           
 23520                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 23521  006402  0E40               	movlw	64
 23522  006404  0101               	movlb	1	; () banked
 23523  006406  6FBA               	movwf	_RF_Mode& (0+255),b
 23524                           
 23525                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 23526  006408  0C40               	retlw	64
 23527  00640A                     l15192:
 23528                           
 23529                           ; BSR set to: 0
 23530                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 23531  00640A  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 23532  00640C  0E2E               	movlw	46
 23533  00640E  6F75               	movwf	RegisterSet@setting& (0+255),b
 23534  006410  EC32  F039         	call	_RegisterSet	;wreg free
 23535                           
 23536                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 23537  006414  0E20               	movlw	32
 23538  006416  0101               	movlb	1	; () banked
 23539  006418  6FBA               	movwf	_RF_Mode& (0+255),b
 23540                           
 23541                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 23542  00641A  0C20               	retlw	32
 23543  00641C                     l15196:
 23544                           
 23545                           ; BSR set to: 0
 23546                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 23547  00641C  6B76               	clrf	(RegisterSet@setting+1)& (0+255),b
 23548  00641E  0E0E               	movlw	14
 23549  006420  6F75               	movwf	RegisterSet@setting& (0+255),b
 23550  006422  EC32  F039         	call	_RegisterSet	;wreg free
 23551                           
 23552                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 23553  006426  0101               	movlb	1	; () banked
 23554  006428  6BBA               	clrf	_RF_Mode& (0+255),b
 23555                           
 23556                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 23557  00642A  0012               	return	
 23558  00642C                     l15202:
 23559  00642C  0100               	movlb	0	; () banked
 23560  00642E  5178               	movf	SetRFMode@mode& (0+255),w,b
 23561                           
 23562                           ; Switch size 1, requested type "speed"
 23563                           ; Number of cases is 5, Range of values is 0 to 128
 23564                           ; switch strategies available:
 23565                           ; Name         Instructions Cycles
 23566                           ; simple_byte           16     9 (average)
 23567                           ;	Chosen strategy is simple_byte
 23568  006430  E0F5               	bz	l15196
 23569  006432  0A20               	xorlw	32	; case 32
 23570  006434  E0EA               	bz	l15192
 23571  006436  0A60               	xorlw	96	; case 64
 23572  006438  E0DF               	bz	l15188
 23573  00643A  0A20               	xorlw	32	; case 96
 23574  00643C  E0D4               	bz	l15184
 23575  00643E  0AE0               	xorlw	224	; case 128
 23576  006440  E0C9               	bz	l15180
 23577  006442  0012               	return		;funcret
 23578  006444                     __end_of_SetRFMode:
 23579                           	opt stack 0
 23580                           tblptru	equ	0xFF8
 23581                           tblptrh	equ	0xFF7
 23582                           tblptrl	equ	0xFF6
 23583                           tablat	equ	0xFF5
 23584                           prodh	equ	0xFF4
 23585                           prodl	equ	0xFF3
 23586                           intcon3	equ	0xFF0
 23587                           postinc0	equ	0xFEE
 23588                           plusw0	equ	0xFEB
 23589                           fsr0h	equ	0xFEA
 23590                           fsr0l	equ	0xFE9
 23591                           wreg	equ	0xFE8
 23592                           indf1	equ	0xFE7
 23593                           postinc1	equ	0xFE6
 23594                           postdec1	equ	0xFE5
 23595                           plusw1	equ	0xFE3
 23596                           fsr1h	equ	0xFE2
 23597                           fsr1l	equ	0xFE1
 23598                           indf2	equ	0xFDF
 23599                           postinc2	equ	0xFDE
 23600                           postdec2	equ	0xFDD
 23601                           plusw2	equ	0xFDB
 23602                           fsr2h	equ	0xFDA
 23603                           fsr2l	equ	0xFD9
 23604                           status	equ	0xFD8
 23605                           
 23606 ;; *************** function _RegisterSet *****************
 23607 ;; Defined at:
 23608 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23609 ;; Parameters:    Size  Location     Type
 23610 ;;  setting         2   21[BANK0 ] unsigned int 
 23611 ;; Auto vars:     Size  Location     Type
 23612 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 23613 ;; Return value:  Size  Location     Type
 23614 ;;                  1    wreg      void 
 23615 ;; Registers used:
 23616 ;;		wreg, status,2, cstack
 23617 ;; Tracked objects:
 23618 ;;		On entry : F/0
 23619 ;;		On exit  : 0/0
 23620 ;;		Unchanged: 0/0
 23621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23626 ;;Total ram usage:        3 bytes
 23627 ;; Hardware stack levels used:    1
 23628 ;; Hardware stack levels required when called:    6
 23629 ;; This function calls:
 23630 ;;		_SPIPut
 23631 ;; This function is called by:
 23632 ;;		_TxPacket
 23633 ;;		_MiMAC_SetChannel
 23634 ;;		_MiMAC_Init
 23635 ;;		_SetRFMode
 23636 ;; This function uses a non-reentrant model
 23637 ;;
 23638                           
 23639                           	psect	text107
 23640  007264                     __ptext107:
 23641                           	opt stack 0
 23642  007264                     _RegisterSet:
 23643                           	opt stack 15
 23644                           
 23645                           ; BSR set to: 0
 23646                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 23647                           
 23648                           ;incstack = 0
 23649  007264  0E00               	movlw	0
 23650  007266  B6F0               	btfsc	intcon3,3,c	;volatile
 23651  007268  0E01               	movlw	1
 23652  00726A  6F77               	movwf	RegisterSet@IRQ1select& (0+255),b
 23653                           
 23654                           ; BSR set to: 0
 23655                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 23656  00726C  96F0               	bcf	intcon3,3,c	;volatile
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 23660  00726E  928C               	bcf	3980,1,c	;volatile
 23661                           
 23662                           ; BSR set to: 0
 23663                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 23664                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 23665  007270  5176               	movf	(RegisterSet@setting+1)& (0+255),w,b
 23666  007272  EC0E  F03A         	call	_SPIPut
 23667                           
 23668                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 23669  007276  0100               	movlb	0	; () banked
 23670  007278  5175               	movf	RegisterSet@setting& (0+255),w,b
 23671  00727A  EC0E  F03A         	call	_SPIPut
 23672                           
 23673                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 23674  00727E  828C               	bsf	3980,1,c	;volatile
 23675                           
 23676                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 23677  007280  0100               	movlb	0	; () banked
 23678  007282  B177               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 23679  007284  D002               	bra	u17925
 23680  007286  96F0               	bcf	intcon3,3,c	;volatile
 23681  007288  D001               	bra	u17926
 23682  00728A                     u17925:
 23683  00728A  86F0               	bsf	intcon3,3,c	;volatile
 23684  00728C                     u17926:
 23685  00728C  0012               	return		;funcret
 23686  00728E                     __end_of_RegisterSet:
 23687                           	opt stack 0
 23688                           tblptru	equ	0xFF8
 23689                           tblptrh	equ	0xFF7
 23690                           tblptrl	equ	0xFF6
 23691                           tablat	equ	0xFF5
 23692                           prodh	equ	0xFF4
 23693                           prodl	equ	0xFF3
 23694                           intcon3	equ	0xFF0
 23695                           postinc0	equ	0xFEE
 23696                           plusw0	equ	0xFEB
 23697                           fsr0h	equ	0xFEA
 23698                           fsr0l	equ	0xFE9
 23699                           wreg	equ	0xFE8
 23700                           indf1	equ	0xFE7
 23701                           postinc1	equ	0xFE6
 23702                           postdec1	equ	0xFE5
 23703                           plusw1	equ	0xFE3
 23704                           fsr1h	equ	0xFE2
 23705                           fsr1l	equ	0xFE1
 23706                           indf2	equ	0xFDF
 23707                           postinc2	equ	0xFDE
 23708                           postdec2	equ	0xFDD
 23709                           plusw2	equ	0xFDB
 23710                           fsr2h	equ	0xFDA
 23711                           fsr2l	equ	0xFD9
 23712                           status	equ	0xFD8
 23713                           
 23714 ;; *************** function _RegisterRead *****************
 23715 ;; Defined at:
 23716 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 23717 ;; Parameters:    Size  Location     Type
 23718 ;;  address         1    wreg     unsigned char 
 23719 ;; Auto vars:     Size  Location     Type
 23720 ;;  address         1   21[BANK0 ] unsigned char 
 23721 ;;  IRQ1select      1   23[BANK0 ] unsigned char 
 23722 ;;  value           1   22[BANK0 ] unsigned char 
 23723 ;; Return value:  Size  Location     Type
 23724 ;;                  1    wreg      unsigned char 
 23725 ;; Registers used:
 23726 ;;		wreg, status,2, status,0, cstack
 23727 ;; Tracked objects:
 23728 ;;		On entry : 0/0
 23729 ;;		On exit  : F/0
 23730 ;;		Unchanged: 0/0
 23731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23733 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23736 ;;Total ram usage:        3 bytes
 23737 ;; Hardware stack levels used:    1
 23738 ;; Hardware stack levels required when called:    7
 23739 ;; This function calls:
 23740 ;;		_SPIGet
 23741 ;;		_SPIPut
 23742 ;; This function is called by:
 23743 ;;		_TxPacket
 23744 ;;		_MiMAC_Init
 23745 ;; This function uses a non-reentrant model
 23746 ;;
 23747                           
 23748                           	psect	text108
 23749  007122                     __ptext108:
 23750                           	opt stack 0
 23751  007122                     _RegisterRead:
 23752                           	opt stack 15
 23753                           
 23754                           ;incstack = 0
 23755                           ;RegisterRead@address stored from wreg
 23756  007122  0100               	movlb	0	; () banked
 23757  007124  6F75               	movwf	RegisterRead@address& (0+255),b
 23758                           
 23759                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 23760                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 23761  007126  0E00               	movlw	0
 23762  007128  B6F0               	btfsc	intcon3,3,c	;volatile
 23763  00712A  0E01               	movlw	1
 23764  00712C  6F77               	movwf	RegisterRead@IRQ1select& (0+255),b
 23765                           
 23766                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 23767  00712E  96F0               	bcf	intcon3,3,c	;volatile
 23768                           
 23769                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 23770  007130  928C               	bcf	3980,1,c	;volatile
 23771                           
 23772                           ; BSR set to: 0
 23773                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 23774  007132  8D75               	bsf	RegisterRead@address& (0+255),6,b
 23775                           
 23776                           ; BSR set to: 0
 23777                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 23778  007134  5175               	movf	RegisterRead@address& (0+255),w,b
 23779  007136  EC0E  F03A         	call	_SPIPut
 23780                           
 23781                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 23782  00713A  ECEB  F03A         	call	_SPIGet	;wreg free
 23783  00713E  0100               	movlb	0	; () banked
 23784  007140  6F76               	movwf	RegisterRead@value& (0+255),b
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 23788  007142  828C               	bsf	3980,1,c	;volatile
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 23792  007144  B177               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 23793  007146  D002               	bra	u17995
 23794  007148  96F0               	bcf	intcon3,3,c	;volatile
 23795  00714A  D001               	bra	u17996
 23796  00714C                     u17995:
 23797  00714C  86F0               	bsf	intcon3,3,c	;volatile
 23798  00714E                     u17996:
 23799                           
 23800                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 23801  00714E  0100               	movlb	0	; () banked
 23802  007150  5176               	movf	RegisterRead@value& (0+255),w,b
 23803                           
 23804                           ; BSR set to: 0
 23805  007152  0012               	return		;funcret
 23806  007154                     __end_of_RegisterRead:
 23807                           	opt stack 0
 23808                           tblptru	equ	0xFF8
 23809                           tblptrh	equ	0xFF7
 23810                           tblptrl	equ	0xFF6
 23811                           tablat	equ	0xFF5
 23812                           prodh	equ	0xFF4
 23813                           prodl	equ	0xFF3
 23814                           intcon3	equ	0xFF0
 23815                           postinc0	equ	0xFEE
 23816                           plusw0	equ	0xFEB
 23817                           fsr0h	equ	0xFEA
 23818                           fsr0l	equ	0xFE9
 23819                           wreg	equ	0xFE8
 23820                           indf1	equ	0xFE7
 23821                           postinc1	equ	0xFE6
 23822                           postdec1	equ	0xFE5
 23823                           plusw1	equ	0xFE3
 23824                           fsr1h	equ	0xFE2
 23825                           fsr1l	equ	0xFE1
 23826                           indf2	equ	0xFDF
 23827                           postinc2	equ	0xFDE
 23828                           postdec2	equ	0xFDD
 23829                           plusw2	equ	0xFDB
 23830                           fsr2h	equ	0xFDA
 23831                           fsr2l	equ	0xFD9
 23832                           status	equ	0xFD8
 23833                           
 23834 ;; *************** function _SPIGet *****************
 23835 ;; Defined at:
 23836 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 23837 ;; Parameters:    Size  Location     Type
 23838 ;;		None
 23839 ;; Auto vars:     Size  Location     Type
 23840 ;;		None
 23841 ;; Return value:  Size  Location     Type
 23842 ;;                  1    wreg      unsigned char 
 23843 ;; Registers used:
 23844 ;;		wreg, status,2, cstack
 23845 ;; Tracked objects:
 23846 ;;		On entry : 0/0
 23847 ;;		On exit  : 0/0
 23848 ;;		Unchanged: 0/0
 23849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23854 ;;Total ram usage:        0 bytes
 23855 ;; Hardware stack levels used:    1
 23856 ;; Hardware stack levels required when called:    6
 23857 ;; This function calls:
 23858 ;;		_SPIPut
 23859 ;; This function is called by:
 23860 ;;		_RegisterRead
 23861 ;; This function uses a non-reentrant model
 23862 ;;
 23863                           
 23864                           	psect	text109
 23865  0075D6                     __ptext109:
 23866                           	opt stack 0
 23867  0075D6                     _SPIGet:
 23868                           	opt stack 15
 23869                           
 23870                           ;spi.c: 310: SPIPut(0x00);
 23871                           
 23872                           ; BSR set to: 0
 23873                           ;incstack = 0
 23874  0075D6  0E00               	movlw	0
 23875  0075D8  EC0E  F03A         	call	_SPIPut
 23876                           
 23877                           ;spi.c: 311: return SSPBUF;
 23878  0075DC  50C9               	movf	4041,w,c	;volatile
 23879  0075DE  0012               	return		;funcret
 23880  0075E0                     __end_of_SPIGet:
 23881                           	opt stack 0
 23882                           tblptru	equ	0xFF8
 23883                           tblptrh	equ	0xFF7
 23884                           tblptrl	equ	0xFF6
 23885                           tablat	equ	0xFF5
 23886                           prodh	equ	0xFF4
 23887                           prodl	equ	0xFF3
 23888                           intcon3	equ	0xFF0
 23889                           postinc0	equ	0xFEE
 23890                           plusw0	equ	0xFEB
 23891                           fsr0h	equ	0xFEA
 23892                           fsr0l	equ	0xFE9
 23893                           wreg	equ	0xFE8
 23894                           indf1	equ	0xFE7
 23895                           postinc1	equ	0xFE6
 23896                           postdec1	equ	0xFE5
 23897                           plusw1	equ	0xFE3
 23898                           fsr1h	equ	0xFE2
 23899                           fsr1l	equ	0xFE1
 23900                           indf2	equ	0xFDF
 23901                           postinc2	equ	0xFDE
 23902                           postdec2	equ	0xFDD
 23903                           plusw2	equ	0xFDB
 23904                           fsr2h	equ	0xFDA
 23905                           fsr2l	equ	0xFD9
 23906                           status	equ	0xFD8
 23907                           
 23908 ;; *************** function _SPIPut *****************
 23909 ;; Defined at:
 23910 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;  v               1    wreg     unsigned char 
 23913 ;; Auto vars:     Size  Location     Type
 23914 ;;  v               1   19[BANK0 ] unsigned char 
 23915 ;;  i               1   20[BANK0 ] volatile unsigned char 
 23916 ;; Return value:  Size  Location     Type
 23917 ;;                  1    wreg      void 
 23918 ;; Registers used:
 23919 ;;		wreg
 23920 ;; Tracked objects:
 23921 ;;		On entry : 0/0
 23922 ;;		On exit  : 0/0
 23923 ;;		Unchanged: 0/0
 23924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23929 ;;Total ram usage:        2 bytes
 23930 ;; Hardware stack levels used:    1
 23931 ;; Hardware stack levels required when called:    5
 23932 ;; This function calls:
 23933 ;;		Nothing
 23934 ;; This function is called by:
 23935 ;;		_SPIGet
 23936 ;;		_RegisterSet
 23937 ;;		_RegisterRead
 23938 ;;		_WriteFIFO
 23939 ;; This function uses a non-reentrant model
 23940 ;;
 23941                           
 23942                           	psect	text110
 23943  00741C                     __ptext110:
 23944                           	opt stack 0
 23945  00741C                     _SPIPut:
 23946                           	opt stack 16
 23947                           
 23948                           ;incstack = 0
 23949                           ;SPIPut@v stored from wreg
 23950  00741C  0100               	movlb	0	; () banked
 23951  00741E  6F73               	movwf	SPIPut@v& (0+255),b
 23952                           
 23953                           ;spi.c: 228: volatile uint8_t i;
 23954                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 23955  007420  969E               	bcf	3998,3,c	;volatile
 23956                           
 23957                           ;spi.c: 254: i = SSPBUF;
 23958  007422  CFC9 F074          	movff	4041,SPIPut@i	;volatile
 23959  007426                     l78:
 23960                           
 23961                           ;spi.c: 256: {
 23962                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 23963  007426  9EC6               	bcf	4038,7,c	;volatile
 23964                           
 23965                           ;spi.c: 258: SSPBUF = v;
 23966  007428  C073  FFC9         	movff	SPIPut@v,4041	;volatile
 23967                           
 23968                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 23969  00742C  BEC6               	btfsc	4038,7,c	;volatile
 23970  00742E  D7FB               	goto	l78
 23971  007430                     l80:
 23972  007430  B69E               	btfsc	3998,3,c	;volatile
 23973  007432  0012               	return		;funcret
 23974  007434  D7FD               	goto	l80
 23975  007436                     __end_of_SPIPut:
 23976                           	opt stack 0
 23977                           tblptru	equ	0xFF8
 23978                           tblptrh	equ	0xFF7
 23979                           tblptrl	equ	0xFF6
 23980                           tablat	equ	0xFF5
 23981                           prodh	equ	0xFF4
 23982                           prodl	equ	0xFF3
 23983                           intcon3	equ	0xFF0
 23984                           postinc0	equ	0xFEE
 23985                           plusw0	equ	0xFEB
 23986                           fsr0h	equ	0xFEA
 23987                           fsr0l	equ	0xFE9
 23988                           wreg	equ	0xFE8
 23989                           indf1	equ	0xFE7
 23990                           postinc1	equ	0xFE6
 23991                           postdec1	equ	0xFE5
 23992                           plusw1	equ	0xFE3
 23993                           fsr1h	equ	0xFE2
 23994                           fsr1l	equ	0xFE1
 23995                           indf2	equ	0xFDF
 23996                           postinc2	equ	0xFDE
 23997                           postdec2	equ	0xFDD
 23998                           plusw2	equ	0xFDB
 23999                           fsr2h	equ	0xFDA
 24000                           fsr2l	equ	0xFD9
 24001                           status	equ	0xFD8
 24002                           
 24003 ;; *************** function _CCM_Enc *****************
 24004 ;; Defined at:
 24005 ;;		line 272 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 24006 ;; Parameters:    Size  Location     Type
 24007 ;;  text            2   55[BANK0 ] PTR unsigned char 
 24008 ;;		 -> MACTxBuffer(64), 
 24009 ;;  headerLen       1   57[BANK0 ] unsigned char 
 24010 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 24011 ;;  key             2   59[BANK0 ] PTR unsigned char 
 24012 ;;		 -> key(8), 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;  i               1   65[BANK0 ] unsigned char 
 24015 ;; Return value:  Size  Location     Type
 24016 ;;                  1    wreg      void 
 24017 ;; Registers used:
 24018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24019 ;; Tracked objects:
 24020 ;;		On entry : F/0
 24021 ;;		On exit  : F/0
 24022 ;;		Unchanged: 0/0
 24023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24024 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24025 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24028 ;;Total ram usage:       11 bytes
 24029 ;; Hardware stack levels used:    1
 24030 ;; Hardware stack levels required when called:    7
 24031 ;; This function calls:
 24032 ;;		_CBC_MAC
 24033 ;;		_CTR
 24034 ;; This function is called by:
 24035 ;;		_MiMAC_SendPacket
 24036 ;; This function uses a non-reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text111
 24040  005788                     __ptext111:
 24041                           	opt stack 0
 24042  005788                     _CCM_Enc:
 24043                           	opt stack 16
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;drv_mrf_miwi_mesh_security.c: 277: uint8_t i;
 24047                           ;drv_mrf_miwi_mesh_security.c: 284: CBC_MAC(text, (headerLen + payloadLen), key, tmpBloc
      +                          k);
 24048                           
 24049                           ;incstack = 0
 24050  005788  C097  F08A         	movff	CCM_Enc@text,CBC_MAC@text
 24051  00578C  C098  F08B         	movff	CCM_Enc@text+1,CBC_MAC@text+1
 24052  005790  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 24053  005792  259A               	addwf	CCM_Enc@payloadLen& (0+255),w,b
 24054  005794  6F8C               	movwf	CBC_MAC@len& (0+255),b
 24055  005796  C09B  F08D         	movff	CCM_Enc@key,CBC_MAC@key
 24056  00579A  C09C  F08E         	movff	CCM_Enc@key+1,CBC_MAC@key+1
 24057  00579E  0EDB               	movlw	low _tmpBlock
 24058  0057A0  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 24059  0057A2  0E01               	movlw	high _tmpBlock
 24060  0057A4  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 24061  0057A6  EC86  F02D         	call	_CBC_MAC	;wreg free
 24062                           
 24063                           ; BSR set to: 0
 24064                           ;drv_mrf_miwi_mesh_security.c: 286: for(i = 0; i < 4; i++)
 24065  0057AA  6BA1               	clrf	CCM_Enc@i& (0+255),b
 24066  0057AC                     l15404:
 24067                           
 24068                           ; BSR set to: 0
 24069                           ;drv_mrf_miwi_mesh_security.c: 287: {
 24070                           ;drv_mrf_miwi_mesh_security.c: 288: text[headerLen + payloadLen + i] = tmpBlock[i];
 24071  0057AC  0EDB               	movlw	low _tmpBlock
 24072  0057AE  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 24073  0057B0  6ED9               	movwf	fsr2l,c
 24074  0057B2  6ADA               	clrf	fsr2h,c
 24075  0057B4  0E01               	movlw	high _tmpBlock
 24076  0057B6  22DA               	addwfc	fsr2h,f,c
 24077  0057B8  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 24078  0057BA  2597               	addwf	CCM_Enc@text& (0+255),w,b
 24079  0057BC  6F9D               	movwf	??_CCM_Enc& (0+255),b
 24080  0057BE  0E00               	movlw	0
 24081  0057C0  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 24082  0057C2  6F9E               	movwf	(??_CCM_Enc+1)& (0+255),b
 24083  0057C4  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 24084  0057C6  279D               	addwf	??_CCM_Enc& (0+255),f,b
 24085  0057C8  0E00               	movlw	0
 24086  0057CA  239E               	addwfc	(??_CCM_Enc+1)& (0+255),f,b
 24087  0057CC  51A1               	movf	CCM_Enc@i& (0+255),w,b
 24088  0057CE  259D               	addwf	??_CCM_Enc& (0+255),w,b
 24089  0057D0  6EE1               	movwf	fsr1l,c
 24090  0057D2  0E00               	movlw	0
 24091  0057D4  219E               	addwfc	(??_CCM_Enc+1)& (0+255),w,b
 24092  0057D6  6EE2               	movwf	fsr1h,c
 24093  0057D8  CFDF FFE7          	movff	indf2,indf1
 24094                           
 24095                           ; BSR set to: 0
 24096  0057DC  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 24097                           
 24098                           ; BSR set to: 0
 24099  0057DE  0E03               	movlw	3
 24100  0057E0  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 24101  0057E2  D7E4               	goto	l15404
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;drv_mrf_miwi_mesh_security.c: 289: }
 24105                           ;drv_mrf_miwi_mesh_security.c: 291: for(i = 0; i < 4-1; i++)
 24106  0057E4  6BA1               	clrf	CCM_Enc@i& (0+255),b
 24107  0057E6                     l15414:
 24108                           
 24109                           ; BSR set to: 0
 24110                           ;drv_mrf_miwi_mesh_security.c: 292: {
 24111                           ;drv_mrf_miwi_mesh_security.c: 293: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 24112  0057E6  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 24113  0057E8  5DA1               	subwf	CCM_Enc@i& (0+255),w,b
 24114  0057EA  E302               	bnc	l15418
 24115                           
 24116                           ; BSR set to: 0
 24117  0057EC  6B9F               	clrf	_CCM_Enc$2710& (0+255),b
 24118  0057EE  D008               	goto	L9
 24119  0057F0                     l15418:
 24120                           
 24121                           ; BSR set to: 0
 24122  0057F0  51A1               	movf	CCM_Enc@i& (0+255),w,b
 24123  0057F2  2597               	addwf	CCM_Enc@text& (0+255),w,b
 24124  0057F4  6ED9               	movwf	fsr2l,c
 24125  0057F6  0E00               	movlw	0
 24126  0057F8  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 24127  0057FA  6EDA               	movwf	fsr2h,c
 24128  0057FC  50DF               	movf	indf2,w,c
 24129  0057FE  6F9F               	movwf	_CCM_Enc$2710& (0+255),b
 24130  005800                     L9:
 24131  005800  6BA0               	clrf	(_CCM_Enc$2710+1)& (0+255),b
 24132                           
 24133                           ; BSR set to: 0
 24134  005802  0EDB               	movlw	low _tmpBlock
 24135  005804  25A1               	addwf	CCM_Enc@i& (0+255),w,b
 24136  005806  6ED9               	movwf	fsr2l,c
 24137  005808  6ADA               	clrf	fsr2h,c
 24138  00580A  0E01               	movlw	high _tmpBlock
 24139  00580C  22DA               	addwfc	fsr2h,f,c
 24140  00580E  C09F  FFDF         	movff	_CCM_Enc$2710,indf2
 24141                           
 24142                           ; BSR set to: 0
 24143  005812  2BA1               	incf	CCM_Enc@i& (0+255),f,b
 24144                           
 24145                           ; BSR set to: 0
 24146  005814  0E02               	movlw	2
 24147  005816  65A1               	cpfsgt	CCM_Enc@i& (0+255),b
 24148  005818  D7E6               	goto	l15414
 24149                           
 24150                           ; BSR set to: 0
 24151                           ;drv_mrf_miwi_mesh_security.c: 294: }
 24152                           ;drv_mrf_miwi_mesh_security.c: 296: CTR(&(text[headerLen]), (payloadLen + 4), key, tmpBl
      +                          ock);
 24153  00581A  5199               	movf	CCM_Enc@headerLen& (0+255),w,b
 24154  00581C  2597               	addwf	CCM_Enc@text& (0+255),w,b
 24155  00581E  6F8A               	movwf	CTR@text& (0+255),b
 24156  005820  0E00               	movlw	0
 24157  005822  2198               	addwfc	(CCM_Enc@text+1)& (0+255),w,b
 24158  005824  6F8B               	movwf	(CTR@text+1)& (0+255),b
 24159  005826  519A               	movf	CCM_Enc@payloadLen& (0+255),w,b
 24160  005828  0F04               	addlw	4
 24161  00582A  6F8C               	movwf	CTR@len& (0+255),b
 24162  00582C  C09B  F08D         	movff	CCM_Enc@key,CTR@key
 24163  005830  C09C  F08E         	movff	CCM_Enc@key+1,CTR@key+1
 24164  005834  0EDB               	movlw	low _tmpBlock
 24165  005836  6F8F               	movwf	CTR@nounce& (0+255),b
 24166  005838  0E01               	movlw	high _tmpBlock
 24167  00583A  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 24168  00583C  EF65  F02B         	goto	_CTR	;wreg free
 24169  005840                     __end_of_CCM_Enc:
 24170                           	opt stack 0
 24171                           tblptru	equ	0xFF8
 24172                           tblptrh	equ	0xFF7
 24173                           tblptrl	equ	0xFF6
 24174                           tablat	equ	0xFF5
 24175                           prodh	equ	0xFF4
 24176                           prodl	equ	0xFF3
 24177                           intcon3	equ	0xFF0
 24178                           postinc0	equ	0xFEE
 24179                           plusw0	equ	0xFEB
 24180                           fsr0h	equ	0xFEA
 24181                           fsr0l	equ	0xFE9
 24182                           wreg	equ	0xFE8
 24183                           indf1	equ	0xFE7
 24184                           postinc1	equ	0xFE6
 24185                           postdec1	equ	0xFE5
 24186                           plusw1	equ	0xFE3
 24187                           fsr1h	equ	0xFE2
 24188                           fsr1l	equ	0xFE1
 24189                           indf2	equ	0xFDF
 24190                           postinc2	equ	0xFDE
 24191                           postdec2	equ	0xFDD
 24192                           plusw2	equ	0xFDB
 24193                           fsr2h	equ	0xFDA
 24194                           fsr2l	equ	0xFD9
 24195                           status	equ	0xFD8
 24196                           
 24197 ;; *************** function _isNetworkSecurityEnabled *****************
 24198 ;; Defined at:
 24199 ;;		line 385 in file "../NetworkManager.c"
 24200 ;; Parameters:    Size  Location     Type
 24201 ;;		None
 24202 ;; Auto vars:     Size  Location     Type
 24203 ;;		None
 24204 ;; Return value:  Size  Location     Type
 24205 ;;                  1    wreg      unsigned char 
 24206 ;; Registers used:
 24207 ;;		wreg, status,2
 24208 ;; Tracked objects:
 24209 ;;		On entry : C/0
 24210 ;;		On exit  : F/1
 24211 ;;		Unchanged: 0/0
 24212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24217 ;;Total ram usage:        0 bytes
 24218 ;; Hardware stack levels used:    1
 24219 ;; Hardware stack levels required when called:    5
 24220 ;; This function calls:
 24221 ;;		Nothing
 24222 ;; This function is called by:
 24223 ;;		_networkSendBeacon
 24224 ;;		_NetworkManagerTask
 24225 ;;		_NetworkSendDiscoverResponse
 24226 ;; This function uses a non-reentrant model
 24227 ;;
 24228                           
 24229                           	psect	text112
 24230  00760C                     __ptext112:
 24231                           	opt stack 0
 24232  00760C                     _isNetworkSecurityEnabled:
 24233                           	opt stack 22
 24234                           
 24235                           ;NetworkManager.c: 387: return(isNetworkTrafficSecure);
 24236                           
 24237                           ; BSR set to: 0
 24238                           ;incstack = 0
 24239  00760C  0101               	movlb	1	; () banked
 24240  00760E  51C1               	movf	_isNetworkTrafficSecure& (0+255),w,b
 24241                           
 24242                           ; BSR set to: 1
 24243  007610  0012               	return		;funcret
 24244  007612                     __end_of_isNetworkSecurityEnabled:
 24245                           	opt stack 0
 24246                           tblptru	equ	0xFF8
 24247                           tblptrh	equ	0xFF7
 24248                           tblptrl	equ	0xFF6
 24249                           tablat	equ	0xFF5
 24250                           prodh	equ	0xFF4
 24251                           prodl	equ	0xFF3
 24252                           intcon3	equ	0xFF0
 24253                           postinc0	equ	0xFEE
 24254                           plusw0	equ	0xFEB
 24255                           fsr0h	equ	0xFEA
 24256                           fsr0l	equ	0xFE9
 24257                           wreg	equ	0xFE8
 24258                           indf1	equ	0xFE7
 24259                           postinc1	equ	0xFE6
 24260                           postdec1	equ	0xFE5
 24261                           plusw1	equ	0xFE3
 24262                           fsr1h	equ	0xFE2
 24263                           fsr1l	equ	0xFE1
 24264                           indf2	equ	0xFDF
 24265                           postinc2	equ	0xFDE
 24266                           postdec2	equ	0xFDD
 24267                           plusw2	equ	0xFDB
 24268                           fsr2h	equ	0xFDA
 24269                           fsr2l	equ	0xFD9
 24270                           status	equ	0xFD8
 24271                           
 24272 ;; *************** function _NetworkManagerGetMyAddress *****************
 24273 ;; Defined at:
 24274 ;;		line 235 in file "../NetworkManager.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;		None
 24277 ;; Auto vars:     Size  Location     Type
 24278 ;;		None
 24279 ;; Return value:  Size  Location     Type
 24280 ;;                  2   19[BANK0 ] PTR struct addr_t_def
 24281 ;; Registers used:
 24282 ;;		wreg, status,2, status,0
 24283 ;; Tracked objects:
 24284 ;;		On entry : D/0
 24285 ;;		On exit  : F/0
 24286 ;;		Unchanged: 0/0
 24287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24292 ;;Total ram usage:        2 bytes
 24293 ;; Hardware stack levels used:    1
 24294 ;; Hardware stack levels required when called:    5
 24295 ;; This function calls:
 24296 ;;		Nothing
 24297 ;; This function is called by:
 24298 ;;		_radioReceivedPacket
 24299 ;;		_NetworkUnicastData
 24300 ;;		_RouteManagerPerformUpdate
 24301 ;;		_networkSendBeacon
 24302 ;;		_TMSendFormedPacketToRFD
 24303 ;;		_NetworkPrepareSendPacket
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text113
 24308  007576                     __ptext113:
 24309                           	opt stack 0
 24310  007576                     _NetworkManagerGetMyAddress:
 24311                           	opt stack 21
 24312                           
 24313                           ;NetworkManager.c: 237: return (&MyAddress);
 24314                           
 24315                           ; BSR set to: 1
 24316                           ;incstack = 0
 24317  007576  0EFC               	movlw	low _MyAddress
 24318  007578  0100               	movlb	0	; () banked
 24319  00757A  6F73               	movwf	?_NetworkManagerGetMyAddress& (0+255),b
 24320  00757C  0E01               	movlw	high _MyAddress
 24321  00757E  6F74               	movwf	(?_NetworkManagerGetMyAddress+1)& (0+255),b
 24322                           
 24323                           ; BSR set to: 0
 24324  007580  0012               	return		;funcret
 24325  007582                     __end_of_NetworkManagerGetMyAddress:
 24326                           	opt stack 0
 24327                           tblptru	equ	0xFF8
 24328                           tblptrh	equ	0xFF7
 24329                           tblptrl	equ	0xFF6
 24330                           tablat	equ	0xFF5
 24331                           prodh	equ	0xFF4
 24332                           prodl	equ	0xFF3
 24333                           intcon3	equ	0xFF0
 24334                           postinc0	equ	0xFEE
 24335                           plusw0	equ	0xFEB
 24336                           fsr0h	equ	0xFEA
 24337                           fsr0l	equ	0xFE9
 24338                           wreg	equ	0xFE8
 24339                           indf1	equ	0xFE7
 24340                           postinc1	equ	0xFE6
 24341                           postdec1	equ	0xFE5
 24342                           plusw1	equ	0xFE3
 24343                           fsr1h	equ	0xFE2
 24344                           fsr1l	equ	0xFE1
 24345                           indf2	equ	0xFDF
 24346                           postinc2	equ	0xFDE
 24347                           postdec2	equ	0xFDD
 24348                           plusw2	equ	0xFDB
 24349                           fsr2h	equ	0xFDA
 24350                           fsr2l	equ	0xFD9
 24351                           status	equ	0xFD8
 24352                           
 24353 ;; *************** function _NetworkHasRoute *****************
 24354 ;; Defined at:
 24355 ;;		line 209 in file "../NetworkManager.c"
 24356 ;; Parameters:    Size  Location     Type
 24357 ;;		None
 24358 ;; Auto vars:     Size  Location     Type
 24359 ;;  res             1   40[BANK0 ] unsigned char 
 24360 ;; Return value:  Size  Location     Type
 24361 ;;                  1    wreg      unsigned char 
 24362 ;; Registers used:
 24363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24364 ;; Tracked objects:
 24365 ;;		On entry : D/0
 24366 ;;		On exit  : F/0
 24367 ;;		Unchanged: 0/0
 24368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24370 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24373 ;;Total ram usage:        2 bytes
 24374 ;; Hardware stack levels used:    1
 24375 ;; Hardware stack levels required when called:    8
 24376 ;; This function calls:
 24377 ;;		_NetworkGetDeviceType
 24378 ;;		_isInvalidAddress
 24379 ;; This function is called by:
 24380 ;;		_networkSendBeacon
 24381 ;;		_TransportManagerTask
 24382 ;;		_TMSendFormedPacketTowardsCoordinator
 24383 ;;		_IsMemberOfNetwork
 24384 ;; This function uses a non-reentrant model
 24385 ;;
 24386                           
 24387                           	psect	text114
 24388  006FE0                     __ptext114:
 24389                           	opt stack 0
 24390  006FE0                     _NetworkHasRoute:
 24391                           	opt stack 19
 24392                           
 24393                           ;NetworkManager.c: 212: if(NetworkGetDeviceType()==DeviceCoordinator)
 24394                           
 24395                           ; BSR set to: 0
 24396                           ;incstack = 0
 24397  006FE0  EC09  F03B         	call	_NetworkGetDeviceType	;wreg free
 24398  006FE4  0900               	iorlw	0
 24399  006FE6  E104               	bnz	l1959
 24400                           
 24401                           ; BSR set to: 1
 24402                           ;NetworkManager.c: 213: {
 24403                           ;NetworkManager.c: 214: res=1;
 24404  006FE8  0E01               	movlw	1
 24405  006FEA  0100               	movlb	0	; () banked
 24406  006FEC  6F88               	movwf	NetworkHasRoute@res& (0+255),b
 24407                           
 24408                           ;NetworkManager.c: 215: }else
 24409  006FEE  D011               	goto	l1960
 24410  006FF0                     l1959:
 24411                           
 24412                           ; BSR set to: 1
 24413                           ;NetworkManager.c: 216: {
 24414                           ;NetworkManager.c: 217: res=(routeInfo.hasCheckedIn && !isInvalidAddress(routeInfo.paren
      +                          t));
 24415  006FF0  0100               	movlb	0	; () banked
 24416  006FF2  6B87               	clrf	_NetworkHasRoute$4267& (0+255),b
 24417                           
 24418                           ; BSR set to: 0
 24419  006FF4  0101               	movlb	1	; () banked
 24420  006FF6  51DA               	movf	(_routeInfo+6)& (0+255),w,b
 24421  006FF8  E00A               	bz	l15706
 24422                           
 24423                           ; BSR set to: 1
 24424  006FFA  C1D4  F085         	movff	_routeInfo,isInvalidAddress@address
 24425  006FFE  C1D5  F086         	movff	_routeInfo+1,isInvalidAddress@address+1
 24426  007002  ECC1  F03A         	call	_isInvalidAddress	;wreg free
 24427  007006  0900               	iorlw	0
 24428  007008  E102               	bnz	l15706
 24429                           
 24430                           ; BSR set to: 0
 24431  00700A  0E01               	movlw	1
 24432  00700C  6F87               	movwf	_NetworkHasRoute$4267& (0+255),b
 24433  00700E                     l15706:
 24434  00700E  C087  F088         	movff	_NetworkHasRoute$4267,NetworkHasRoute@res
 24435  007012                     l1960:
 24436                           
 24437                           ;NetworkManager.c: 218: }
 24438                           ;NetworkManager.c: 219: return(res);
 24439  007012  0100               	movlb	0	; () banked
 24440  007014  5188               	movf	NetworkHasRoute@res& (0+255),w,b
 24441                           
 24442                           ; BSR set to: 0
 24443  007016  0012               	return		;funcret
 24444  007018                     __end_of_NetworkHasRoute:
 24445                           	opt stack 0
 24446                           tblptru	equ	0xFF8
 24447                           tblptrh	equ	0xFF7
 24448                           tblptrl	equ	0xFF6
 24449                           tablat	equ	0xFF5
 24450                           prodh	equ	0xFF4
 24451                           prodl	equ	0xFF3
 24452                           intcon3	equ	0xFF0
 24453                           postinc0	equ	0xFEE
 24454                           plusw0	equ	0xFEB
 24455                           fsr0h	equ	0xFEA
 24456                           fsr0l	equ	0xFE9
 24457                           wreg	equ	0xFE8
 24458                           indf1	equ	0xFE7
 24459                           postinc1	equ	0xFE6
 24460                           postdec1	equ	0xFE5
 24461                           plusw1	equ	0xFE3
 24462                           fsr1h	equ	0xFE2
 24463                           fsr1l	equ	0xFE1
 24464                           indf2	equ	0xFDF
 24465                           postinc2	equ	0xFDE
 24466                           postdec2	equ	0xFDD
 24467                           plusw2	equ	0xFDB
 24468                           fsr2h	equ	0xFDA
 24469                           fsr2l	equ	0xFD9
 24470                           status	equ	0xFD8
 24471                           
 24472 ;; *************** function _isInvalidAddress *****************
 24473 ;; Defined at:
 24474 ;;		line 230 in file "../NetworkManager.c"
 24475 ;; Parameters:    Size  Location     Type
 24476 ;;  address         2   37[BANK0 ] struct addr_t_def
 24477 ;; Auto vars:     Size  Location     Type
 24478 ;;		None
 24479 ;; Return value:  Size  Location     Type
 24480 ;;                  1    wreg      unsigned char 
 24481 ;; Registers used:
 24482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24483 ;; Tracked objects:
 24484 ;;		On entry : 8/0
 24485 ;;		On exit  : F/0
 24486 ;;		Unchanged: 0/0
 24487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24492 ;;Total ram usage:        2 bytes
 24493 ;; Hardware stack levels used:    1
 24494 ;; Hardware stack levels required when called:    7
 24495 ;; This function calls:
 24496 ;;		_isBroadcastAddress
 24497 ;; This function is called by:
 24498 ;;		_RouteManagerPerformUpdate
 24499 ;;		_routingTableFind
 24500 ;;		_RouteManagerProcessReceive
 24501 ;;		_RouteManagerShouldInsert
 24502 ;;		_networkSendBeacon
 24503 ;;		_NetworkManagerTask
 24504 ;;		_NetworkHasRoute
 24505 ;;		_NetworkManagerProcessIncomingData
 24506 ;;		_IsNetworkDevice
 24507 ;; This function uses a non-reentrant model
 24508 ;;
 24509                           
 24510                           	psect	text115
 24511  007582                     __ptext115:
 24512                           	opt stack 0
 24513  007582                     _isInvalidAddress:
 24514                           	opt stack 19
 24515                           
 24516                           ;NetworkManager.c: 232: return(isBroadcastAddress(address));
 24517                           
 24518                           ; BSR set to: 0
 24519                           ;incstack = 0
 24520  007582  C085  F07A         	movff	isInvalidAddress@address,isBroadcastAddress@address
 24521  007586  C086  F07B         	movff	isInvalidAddress@address+1,isBroadcastAddress@address+1
 24522  00758A  EFDC  F036         	goto	_isBroadcastAddress	;wreg free
 24523  00758E                     __end_of_isInvalidAddress:
 24524                           	opt stack 0
 24525                           tblptru	equ	0xFF8
 24526                           tblptrh	equ	0xFF7
 24527                           tblptrl	equ	0xFF6
 24528                           tablat	equ	0xFF5
 24529                           prodh	equ	0xFF4
 24530                           prodl	equ	0xFF3
 24531                           intcon3	equ	0xFF0
 24532                           postinc0	equ	0xFEE
 24533                           plusw0	equ	0xFEB
 24534                           fsr0h	equ	0xFEA
 24535                           fsr0l	equ	0xFE9
 24536                           wreg	equ	0xFE8
 24537                           indf1	equ	0xFE7
 24538                           postinc1	equ	0xFE6
 24539                           postdec1	equ	0xFE5
 24540                           plusw1	equ	0xFE3
 24541                           fsr1h	equ	0xFE2
 24542                           fsr1l	equ	0xFE1
 24543                           indf2	equ	0xFDF
 24544                           postinc2	equ	0xFDE
 24545                           postdec2	equ	0xFDD
 24546                           plusw2	equ	0xFDB
 24547                           fsr2h	equ	0xFDA
 24548                           fsr2l	equ	0xFD9
 24549                           status	equ	0xFD8
 24550                           
 24551 ;; *************** function _isBroadcastAddress *****************
 24552 ;; Defined at:
 24553 ;;		line 222 in file "../NetworkManager.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;  address         2   26[BANK0 ] struct addr_t_def
 24556 ;; Auto vars:     Size  Location     Type
 24557 ;;  addr            8   28[BANK0 ] const unsigned char [8]
 24558 ;;  res             1   36[BANK0 ] unsigned char 
 24559 ;; Return value:  Size  Location     Type
 24560 ;;                  1    wreg      unsigned char 
 24561 ;; Registers used:
 24562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24563 ;; Tracked objects:
 24564 ;;		On entry : 8/2
 24565 ;;		On exit  : F/0
 24566 ;;		Unchanged: 0/0
 24567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24569 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24571 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24572 ;;Total ram usage:       11 bytes
 24573 ;; Hardware stack levels used:    1
 24574 ;; Hardware stack levels required when called:    6
 24575 ;; This function calls:
 24576 ;;		_NetworkAddressSizeGet
 24577 ;;		_memcmp
 24578 ;; This function is called by:
 24579 ;;		_radioReceivedPacket
 24580 ;;		_TMSendFormedPacketToRFD
 24581 ;;		_isInvalidAddress
 24582 ;; This function uses a non-reentrant model
 24583 ;;
 24584                           
 24585                           	psect	text116
 24586  006DB8                     __ptext116:
 24587                           	opt stack 0
 24588  006DB8                     _isBroadcastAddress:
 24589                           	opt stack 19
 24590                           
 24591                           ;NetworkManager.c: 225: const uint8_t addr[8]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
 24592                           
 24593                           ; BSR set to: 0
 24594                           ;incstack = 0
 24595  006DB8  0EA5               	movlw	low isBroadcastAddress@F537
 24596  006DBA  6EF6               	movwf	tblptrl,c
 24597  006DBC                     	if	1	;There is more than 1 active tblptr byte
 24598  006DBC  0EFF               	movlw	high isBroadcastAddress@F537
 24599  006DBE  6EF7               	movwf	tblptrh,c
 24600  006DC0                     	endif
 24601  006DC0                     	if	0	;There are less than 3 active tblptr bytes
 24602  006DC0                     	endif
 24603  006DC0  EE20  F07C         	lfsr	2,isBroadcastAddress@addr
 24604  006DC4  0E07               	movlw	7
 24605  006DC6                     u18140:
 24606  006DC6  0009               	tblrd		*+
 24607  006DC8  CFF5 FFDE          	movff	tablat,postinc2
 24608  006DCC  06E8               	decf	wreg,f,c
 24609  006DCE  E2FB               	bc	u18140
 24610                           
 24611                           ;NetworkManager.c: 226: res=(memcmp(address.bytes,addr,NetworkAddressSizeGet())==0);
 24612  006DD0  0E7A               	movlw	low isBroadcastAddress@address
 24613  006DD2  0100               	movlb	0	; () banked
 24614  006DD4  6F73               	movwf	memcmp@s1& (0+255),b
 24615  006DD6  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 24616  006DD8  0E7C               	movlw	low isBroadcastAddress@addr
 24617  006DDA  6F75               	movwf	memcmp@s2& (0+255),b
 24618  006DDC  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 24619  006DE0  0100               	movlb	0	; () banked
 24620  006DE2  6F76               	movwf	memcmp@n& (0+255),b
 24621  006DE4  6B77               	clrf	(memcmp@n+1)& (0+255),b
 24622  006DE6  ECFD  F035         	call	_memcmp	;wreg free
 24623  006DEA  5173               	movf	?_memcmp& (0+255),w,b
 24624  006DEC  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 24625  006DEE  0E01               	movlw	1
 24626  006DF0  A4D8               	btfss	status,2,c
 24627  006DF2  0E00               	movlw	0
 24628  006DF4  6F84               	movwf	isBroadcastAddress@res& (0+255),b
 24629                           
 24630                           ; BSR set to: 0
 24631                           ;NetworkManager.c: 227: return(res);
 24632  006DF6  5184               	movf	isBroadcastAddress@res& (0+255),w,b
 24633                           
 24634                           ; BSR set to: 0
 24635  006DF8  0012               	return		;funcret
 24636  006DFA                     __end_of_isBroadcastAddress:
 24637                           	opt stack 0
 24638                           tblptru	equ	0xFF8
 24639                           tblptrh	equ	0xFF7
 24640                           tblptrl	equ	0xFF6
 24641                           tablat	equ	0xFF5
 24642                           prodh	equ	0xFF4
 24643                           prodl	equ	0xFF3
 24644                           intcon3	equ	0xFF0
 24645                           postinc0	equ	0xFEE
 24646                           plusw0	equ	0xFEB
 24647                           fsr0h	equ	0xFEA
 24648                           fsr0l	equ	0xFE9
 24649                           wreg	equ	0xFE8
 24650                           indf1	equ	0xFE7
 24651                           postinc1	equ	0xFE6
 24652                           postdec1	equ	0xFE5
 24653                           plusw1	equ	0xFE3
 24654                           fsr1h	equ	0xFE2
 24655                           fsr1l	equ	0xFE1
 24656                           indf2	equ	0xFDF
 24657                           postinc2	equ	0xFDE
 24658                           postdec2	equ	0xFDD
 24659                           plusw2	equ	0xFDB
 24660                           fsr2h	equ	0xFDA
 24661                           fsr2l	equ	0xFD9
 24662                           status	equ	0xFD8
 24663                           
 24664 ;; *************** function _NetworkGetDeviceType *****************
 24665 ;; Defined at:
 24666 ;;		line 204 in file "../NetworkManager.c"
 24667 ;; Parameters:    Size  Location     Type
 24668 ;;		None
 24669 ;; Auto vars:     Size  Location     Type
 24670 ;;		None
 24671 ;; Return value:  Size  Location     Type
 24672 ;;                  1    wreg      enum E8070
 24673 ;; Registers used:
 24674 ;;		wreg, status,2
 24675 ;; Tracked objects:
 24676 ;;		On entry : C/0
 24677 ;;		On exit  : F/1
 24678 ;;		Unchanged: 0/0
 24679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24684 ;;Total ram usage:        0 bytes
 24685 ;; Hardware stack levels used:    1
 24686 ;; Hardware stack levels required when called:    5
 24687 ;; This function calls:
 24688 ;;		Nothing
 24689 ;; This function is called by:
 24690 ;;		_radioReceivedPacket
 24691 ;;		_NetworkUnicastData
 24692 ;;		_RouteManagerPerformUpdate
 24693 ;;		_networkSendBeacon
 24694 ;;		_TMSendFormedPacketToRFD
 24695 ;;		_NetworkManagerTask
 24696 ;;		_NetworkHasRoute
 24697 ;;		_NetworkManagerProcessIncomingData
 24698 ;;		_NetworkPrepareSendPacket
 24699 ;;		_NetworkSetAddressPAN
 24700 ;; This function uses a non-reentrant model
 24701 ;;
 24702                           
 24703                           	psect	text117
 24704  007612                     __ptext117:
 24705                           	opt stack 0
 24706  007612                     _NetworkGetDeviceType:
 24707                           	opt stack 21
 24708                           
 24709                           ;NetworkManager.c: 206: return(DeviceType);
 24710                           
 24711                           ; BSR set to: 0
 24712                           ;incstack = 0
 24713  007612  0101               	movlb	1	; () banked
 24714  007614  51F9               	movf	_DeviceType& (0+255),w,b
 24715                           
 24716                           ; BSR set to: 1
 24717  007616  0012               	return		;funcret
 24718  007618                     __end_of_NetworkGetDeviceType:
 24719                           	opt stack 0
 24720                           tblptru	equ	0xFF8
 24721                           tblptrh	equ	0xFF7
 24722                           tblptrl	equ	0xFF6
 24723                           tablat	equ	0xFF5
 24724                           prodh	equ	0xFF4
 24725                           prodl	equ	0xFF3
 24726                           intcon3	equ	0xFF0
 24727                           postinc0	equ	0xFEE
 24728                           plusw0	equ	0xFEB
 24729                           fsr0h	equ	0xFEA
 24730                           fsr0l	equ	0xFE9
 24731                           wreg	equ	0xFE8
 24732                           indf1	equ	0xFE7
 24733                           postinc1	equ	0xFE6
 24734                           postdec1	equ	0xFE5
 24735                           plusw1	equ	0xFE3
 24736                           fsr1h	equ	0xFE2
 24737                           fsr1l	equ	0xFE1
 24738                           indf2	equ	0xFDF
 24739                           postinc2	equ	0xFDE
 24740                           postdec2	equ	0xFDD
 24741                           plusw2	equ	0xFDB
 24742                           fsr2h	equ	0xFDA
 24743                           fsr2l	equ	0xFD9
 24744                           status	equ	0xFD8
 24745                           
 24746 ;; *************** function _NetworkGetPANID *****************
 24747 ;; Defined at:
 24748 ;;		line 390 in file "../NetworkManager.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;		None
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;		None
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  2   19[BANK0 ] unsigned int 
 24755 ;; Registers used:
 24756 ;;		None
 24757 ;; Tracked objects:
 24758 ;;		On entry : C/1
 24759 ;;		On exit  : C/0
 24760 ;;		Unchanged: C/0
 24761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24766 ;;Total ram usage:        2 bytes
 24767 ;; Hardware stack levels used:    1
 24768 ;; Hardware stack levels required when called:    5
 24769 ;; This function calls:
 24770 ;;		Nothing
 24771 ;; This function is called by:
 24772 ;;		_radioReceivedPacket
 24773 ;;		_networkSendBeacon
 24774 ;;		_BroadcastManagerTask
 24775 ;;		_TransportManagerTask
 24776 ;;		_TMSendFormedPacketToRFD
 24777 ;;		_NetworkManagerTask
 24778 ;; This function uses a non-reentrant model
 24779 ;;
 24780                           
 24781                           	psect	text118
 24782  0075E0                     __ptext118:
 24783                           	opt stack 0
 24784  0075E0                     _NetworkGetPANID:
 24785                           	opt stack 21
 24786                           
 24787                           ;NetworkManager.c: 392: return(DEVPanID);
 24788                           
 24789                           ; BSR set to: 1
 24790                           ;incstack = 0
 24791  0075E0  C1F7  F073         	movff	_DEVPanID,?_NetworkGetPANID
 24792  0075E4  C1F8  F074         	movff	_DEVPanID+1,?_NetworkGetPANID+1
 24793  0075E8  0012               	return		;funcret
 24794  0075EA                     __end_of_NetworkGetPANID:
 24795                           	opt stack 0
 24796                           tblptru	equ	0xFF8
 24797                           tblptrh	equ	0xFF7
 24798                           tblptrl	equ	0xFF6
 24799                           tablat	equ	0xFF5
 24800                           prodh	equ	0xFF4
 24801                           prodl	equ	0xFF3
 24802                           intcon3	equ	0xFF0
 24803                           postinc0	equ	0xFEE
 24804                           plusw0	equ	0xFEB
 24805                           fsr0h	equ	0xFEA
 24806                           fsr0l	equ	0xFE9
 24807                           wreg	equ	0xFE8
 24808                           indf1	equ	0xFE7
 24809                           postinc1	equ	0xFE6
 24810                           postdec1	equ	0xFE5
 24811                           plusw1	equ	0xFE3
 24812                           fsr1h	equ	0xFE2
 24813                           fsr1l	equ	0xFE1
 24814                           indf2	equ	0xFDF
 24815                           postinc2	equ	0xFDE
 24816                           postdec2	equ	0xFDD
 24817                           plusw2	equ	0xFDB
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function _NetworkGetMyRouteInfo *****************
 24823 ;; Defined at:
 24824 ;;		line 240 in file "../NetworkManager.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;		None
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;		None
 24829 ;; Return value:  Size  Location     Type
 24830 ;;                  2   19[BANK0 ] PTR struct route_info_t_
 24831 ;; Registers used:
 24832 ;;		wreg, status,2, status,0
 24833 ;; Tracked objects:
 24834 ;;		On entry : C/0
 24835 ;;		On exit  : F/0
 24836 ;;		Unchanged: 0/0
 24837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24842 ;;Total ram usage:        2 bytes
 24843 ;; Hardware stack levels used:    1
 24844 ;; Hardware stack levels required when called:    5
 24845 ;; This function calls:
 24846 ;;		Nothing
 24847 ;; This function is called by:
 24848 ;;		_RouteManagerPerformUpdate
 24849 ;;		_RouterEvicted
 24850 ;;		_networkSendBeacon
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text119
 24855  00758E                     __ptext119:
 24856                           	opt stack 0
 24857  00758E                     _NetworkGetMyRouteInfo:
 24858                           	opt stack 19
 24859                           
 24860                           ;NetworkManager.c: 242: return(&routeInfo);
 24861                           
 24862                           ;incstack = 0
 24863  00758E  0ED4               	movlw	low _routeInfo
 24864  007590  0100               	movlb	0	; () banked
 24865  007592  6F73               	movwf	?_NetworkGetMyRouteInfo& (0+255),b
 24866  007594  0E01               	movlw	high _routeInfo
 24867  007596  6F74               	movwf	(?_NetworkGetMyRouteInfo+1)& (0+255),b
 24868                           
 24869                           ; BSR set to: 0
 24870  007598  0012               	return		;funcret
 24871  00759A                     __end_of_NetworkGetMyRouteInfo:
 24872                           	opt stack 0
 24873                           tblptru	equ	0xFF8
 24874                           tblptrh	equ	0xFF7
 24875                           tblptrl	equ	0xFF6
 24876                           tablat	equ	0xFF5
 24877                           prodh	equ	0xFF4
 24878                           prodl	equ	0xFF3
 24879                           intcon3	equ	0xFF0
 24880                           postinc0	equ	0xFEE
 24881                           plusw0	equ	0xFEB
 24882                           fsr0h	equ	0xFEA
 24883                           fsr0l	equ	0xFE9
 24884                           wreg	equ	0xFE8
 24885                           indf1	equ	0xFE7
 24886                           postinc1	equ	0xFE6
 24887                           postdec1	equ	0xFE5
 24888                           plusw1	equ	0xFE3
 24889                           fsr1h	equ	0xFE2
 24890                           fsr1l	equ	0xFE1
 24891                           indf2	equ	0xFDF
 24892                           postinc2	equ	0xFDE
 24893                           postdec2	equ	0xFDD
 24894                           plusw2	equ	0xFDB
 24895                           fsr2h	equ	0xFDA
 24896                           fsr2l	equ	0xFD9
 24897                           status	equ	0xFD8
 24898                           
 24899 ;; *************** function _LELinkQualityGet *****************
 24900 ;; Defined at:
 24901 ;;		line 70 in file "../LinkEstimator.c"
 24902 ;; Parameters:    Size  Location     Type
 24903 ;;  address         2   37[BANK0 ] struct addr_t_def
 24904 ;;  offset          2   39[BANK0 ] unsigned int 
 24905 ;; Auto vars:     Size  Location     Type
 24906 ;;  res             2   43[BANK0 ] unsigned int 
 24907 ;;  idx             1   45[BANK0 ] unsigned char 
 24908 ;; Return value:  Size  Location     Type
 24909 ;;                  2   37[BANK0 ] unsigned int 
 24910 ;; Registers used:
 24911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24912 ;; Tracked objects:
 24913 ;;		On entry : F/0
 24914 ;;		On exit  : A/0
 24915 ;;		Unchanged: 0/0
 24916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24918 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24919 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24920 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24921 ;;Total ram usage:        9 bytes
 24922 ;; Hardware stack levels used:    1
 24923 ;; Hardware stack levels required when called:    8
 24924 ;; This function calls:
 24925 ;;		_le_findIdx
 24926 ;; This function is called by:
 24927 ;;		_RouteManagerPerformUpdate
 24928 ;;		_routingTableUpdateEntry
 24929 ;;		_networkSendBeacon
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text120
 24934  00652A                     __ptext120:
 24935                           	opt stack 0
 24936  00652A                     _LELinkQualityGet:
 24937                           	opt stack 18
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;LinkEstimator.c: 72: uint8_t idx;
 24941                           ;LinkEstimator.c: 73: uint16_t res=0xffff;
 24942                           
 24943                           ; BSR set to: 0
 24944                           ;incstack = 0
 24945  00652A  698B               	setf	LELinkQualityGet@res& (0+255),b
 24946  00652C  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 24947                           
 24948                           ; BSR set to: 0
 24949                           ;LinkEstimator.c: 74: idx = le_findIdx(address);
 24950  00652E  C085  F081         	movff	LELinkQualityGet@address,le_findIdx@ll_addr
 24951  006532  C086  F082         	movff	LELinkQualityGet@address+1,le_findIdx@ll_addr+1
 24952  006536  EC83  F034         	call	_le_findIdx	;wreg free
 24953  00653A  6F8D               	movwf	LELinkQualityGet@idx& (0+255),b
 24954                           
 24955                           ; BSR set to: 0
 24956                           ;LinkEstimator.c: 75: if ( (idx != 0xff) && ((neighbor_tbl[idx].flags & 0x2)>0) )
 24957  00653C  298D               	incf	LELinkQualityGet@idx& (0+255),w,b
 24958  00653E  E028               	bz	l16080
 24959                           
 24960                           ; BSR set to: 0
 24961  006540  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 24962  006542  0D0B               	mullw	11
 24963  006544  0E05               	movlw	low (_neighbor_tbl+5)
 24964  006546  24F3               	addwf	prodl,w,c
 24965  006548  6ED9               	movwf	fsr2l,c
 24966  00654A  0E05               	movlw	high (_neighbor_tbl+5)
 24967  00654C  20F4               	addwfc	prodh,w,c
 24968  00654E  6EDA               	movwf	fsr2h,c
 24969  006550  0105               	movlb	5	; () banked
 24970  006552  A2DF               	btfss	indf2,1,c
 24971  006554  D01D               	goto	l16080
 24972                           
 24973                           ; BSR set to: 5
 24974                           ;LinkEstimator.c: 76: {
 24975                           ;LinkEstimator.c: 77: res=neighbor_tbl[idx].etx;
 24976  006556  0100               	movlb	0	; () banked
 24977  006558  518D               	movf	LELinkQualityGet@idx& (0+255),w,b
 24978  00655A  0D0B               	mullw	11
 24979  00655C  0E07               	movlw	low (_neighbor_tbl+7)
 24980  00655E  24F3               	addwf	prodl,w,c
 24981  006560  6ED9               	movwf	fsr2l,c
 24982  006562  0E05               	movlw	high (_neighbor_tbl+7)
 24983  006564  20F4               	addwfc	prodh,w,c
 24984  006566  6EDA               	movwf	fsr2h,c
 24985  006568  CFDE F08B          	movff	postinc2,LELinkQualityGet@res
 24986  00656C  CFDD F08C          	movff	postdec2,LELinkQualityGet@res+1
 24987                           
 24988                           ; BSR set to: 0
 24989                           ;LinkEstimator.c: 78: if((0xffff-res)<offset)
 24990  006570  1D8B               	comf	LELinkQualityGet@res& (0+255),w,b
 24991  006572  6F89               	movwf	??_LELinkQualityGet& (0+255),b
 24992  006574  1D8C               	comf	(LELinkQualityGet@res+1)& (0+255),w,b
 24993  006576  6F8A               	movwf	(??_LELinkQualityGet+1)& (0+255),b
 24994  006578  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 24995  00657A  5D89               	subwf	??_LELinkQualityGet& (0+255),w,b
 24996  00657C  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 24997  00657E  598A               	subwfb	(??_LELinkQualityGet+1)& (0+255),w,b
 24998  006580  E203               	bc	l16078
 24999                           
 25000                           ; BSR set to: 0
 25001                           ;LinkEstimator.c: 79: {
 25002                           ;LinkEstimator.c: 80: res=0xffff;
 25003  006582  698B               	setf	LELinkQualityGet@res& (0+255),b
 25004  006584  698C               	setf	(LELinkQualityGet@res+1)& (0+255),b
 25005                           
 25006                           ;LinkEstimator.c: 81: }else
 25007  006586  D004               	goto	l16080
 25008  006588                     l16078:
 25009                           
 25010                           ; BSR set to: 0
 25011                           ;LinkEstimator.c: 82: {
 25012                           ;LinkEstimator.c: 83: res+=offset;
 25013  006588  5187               	movf	LELinkQualityGet@offset& (0+255),w,b
 25014  00658A  278B               	addwf	LELinkQualityGet@res& (0+255),f,b
 25015  00658C  5188               	movf	(LELinkQualityGet@offset+1)& (0+255),w,b
 25016  00658E  238C               	addwfc	(LELinkQualityGet@res+1)& (0+255),f,b
 25017  006590                     l16080:
 25018                           
 25019                           ;LinkEstimator.c: 84: }
 25020                           ;LinkEstimator.c: 85: }
 25021                           ;LinkEstimator.c: 86: return(res);
 25022  006590  C08B  F085         	movff	LELinkQualityGet@res,?_LELinkQualityGet
 25023  006594  C08C  F086         	movff	LELinkQualityGet@res+1,?_LELinkQualityGet+1
 25024  006598  0012               	return		;funcret
 25025  00659A                     __end_of_LELinkQualityGet:
 25026                           	opt stack 0
 25027                           tblptru	equ	0xFF8
 25028                           tblptrh	equ	0xFF7
 25029                           tblptrl	equ	0xFF6
 25030                           tablat	equ	0xFF5
 25031                           prodh	equ	0xFF4
 25032                           prodl	equ	0xFF3
 25033                           intcon3	equ	0xFF0
 25034                           postinc0	equ	0xFEE
 25035                           plusw0	equ	0xFEB
 25036                           fsr0h	equ	0xFEA
 25037                           fsr0l	equ	0xFE9
 25038                           wreg	equ	0xFE8
 25039                           indf1	equ	0xFE7
 25040                           postinc1	equ	0xFE6
 25041                           postdec1	equ	0xFE5
 25042                           plusw1	equ	0xFE3
 25043                           fsr1h	equ	0xFE2
 25044                           fsr1l	equ	0xFE1
 25045                           indf2	equ	0xFDF
 25046                           postinc2	equ	0xFDE
 25047                           postdec2	equ	0xFDD
 25048                           plusw2	equ	0xFDB
 25049                           fsr2h	equ	0xFDA
 25050                           fsr2l	equ	0xFD9
 25051                           status	equ	0xFD8
 25052                           
 25053 ;; *************** function _le_findIdx *****************
 25054 ;; Defined at:
 25055 ;;		line 52 in file "../LinkEstimator.c"
 25056 ;; Parameters:    Size  Location     Type
 25057 ;;  ll_addr         2   33[BANK0 ] struct addr_t_def
 25058 ;; Auto vars:     Size  Location     Type
 25059 ;;  i               1   36[BANK0 ] unsigned char 
 25060 ;;  res             1   35[BANK0 ] unsigned char 
 25061 ;; Return value:  Size  Location     Type
 25062 ;;                  1    wreg      unsigned char 
 25063 ;; Registers used:
 25064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25065 ;; Tracked objects:
 25066 ;;		On entry : C/0
 25067 ;;		On exit  : F/0
 25068 ;;		Unchanged: 0/0
 25069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25071 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25073 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25074 ;;Total ram usage:        4 bytes
 25075 ;; Hardware stack levels used:    1
 25076 ;; Hardware stack levels required when called:    7
 25077 ;; This function calls:
 25078 ;;		_isSameAddress
 25079 ;; This function is called by:
 25080 ;;		_GetRouteAddressOfChild
 25081 ;;		_LELinkQualityGet
 25082 ;;		_LE_PinNeighbor
 25083 ;;		_LE_UnpinNeighbor
 25084 ;;		_LE_ClearDLQ
 25085 ;;		_LE_InsertNeighbor
 25086 ;;		_LE_processReceivedMessage
 25087 ;;		_LE_RemoveNeighborDevice
 25088 ;; This function uses a non-reentrant model
 25089 ;;
 25090                           
 25091                           	psect	text121
 25092  006906                     __ptext121:
 25093                           	opt stack 0
 25094  006906                     _le_findIdx:
 25095                           	opt stack 18
 25096                           
 25097                           ;LinkEstimator.c: 54: uint8_t i;
 25098                           ;LinkEstimator.c: 55: uint8_t res=0xff;
 25099                           
 25100                           ;incstack = 0
 25101  006906  0100               	movlb	0	; () banked
 25102  006908  6983               	setf	le_findIdx@res& (0+255),b
 25103                           
 25104                           ;LinkEstimator.c: 56: for (i = 0; i < 20; i++)
 25105  00690A  6B84               	clrf	le_findIdx@i& (0+255),b
 25106  00690C                     l15670:
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;LinkEstimator.c: 57: {
 25110                           ;LinkEstimator.c: 58: if (neighbor_tbl[i].flags & 0x1)
 25111  00690C  5184               	movf	le_findIdx@i& (0+255),w,b
 25112  00690E  0D0B               	mullw	11
 25113  006910  0E05               	movlw	low (_neighbor_tbl+5)
 25114  006912  24F3               	addwf	prodl,w,c
 25115  006914  6ED9               	movwf	fsr2l,c
 25116  006916  0E05               	movlw	high (_neighbor_tbl+5)
 25117  006918  20F4               	addwfc	prodh,w,c
 25118  00691A  6EDA               	movwf	fsr2h,c
 25119  00691C  A0DF               	btfss	indf2,0,c
 25120  00691E  D018               	goto	l15676
 25121                           
 25122                           ; BSR set to: 5
 25123                           ;LinkEstimator.c: 59: {
 25124                           ;LinkEstimator.c: 60: if (isSameAddress(neighbor_tbl[i].ll_addr, ll_addr))
 25125  006920  0100               	movlb	0	; () banked
 25126  006922  5184               	movf	le_findIdx@i& (0+255),w,b
 25127  006924  0D0B               	mullw	11
 25128  006926  0E00               	movlw	low _neighbor_tbl
 25129  006928  24F3               	addwf	prodl,w,c
 25130  00692A  6ED9               	movwf	fsr2l,c
 25131  00692C  0E05               	movlw	high _neighbor_tbl
 25132  00692E  20F4               	addwfc	prodh,w,c
 25133  006930  6EDA               	movwf	fsr2h,c
 25134  006932  CFDE F07D          	movff	postinc2,isSameAddress@a1
 25135  006936  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 25136  00693A  C081  F07F         	movff	le_findIdx@ll_addr,isSameAddress@a2
 25137  00693E  C082  F080         	movff	le_findIdx@ll_addr+1,isSameAddress@a2+1
 25138  006942  ECBD  F039         	call	_isSameAddress	;wreg free
 25139  006946  0900               	iorlw	0
 25140  006948  E003               	bz	l15676
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;LinkEstimator.c: 61: {
 25144                           ;LinkEstimator.c: 62: res=i;
 25145  00694A  C084  F083         	movff	le_findIdx@i,le_findIdx@res
 25146                           
 25147                           ;LinkEstimator.c: 63: break;
 25148  00694E  D005               	goto	l15680
 25149  006950                     l15676:
 25150  006950  0100               	movlb	0	; () banked
 25151  006952  2B84               	incf	le_findIdx@i& (0+255),f,b
 25152                           
 25153                           ; BSR set to: 0
 25154  006954  0E13               	movlw	19
 25155  006956  6584               	cpfsgt	le_findIdx@i& (0+255),b
 25156  006958  D7D9               	goto	l15670
 25157  00695A                     l15680:
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;LinkEstimator.c: 64: }
 25161                           ;LinkEstimator.c: 65: }
 25162                           ;LinkEstimator.c: 66: }
 25163                           ;LinkEstimator.c: 67: return res;
 25164  00695A  5183               	movf	le_findIdx@res& (0+255),w,b
 25165                           
 25166                           ; BSR set to: 0
 25167  00695C  0012               	return		;funcret
 25168  00695E                     __end_of_le_findIdx:
 25169                           	opt stack 0
 25170                           tblptru	equ	0xFF8
 25171                           tblptrh	equ	0xFF7
 25172                           tblptrl	equ	0xFF6
 25173                           tablat	equ	0xFF5
 25174                           prodh	equ	0xFF4
 25175                           prodl	equ	0xFF3
 25176                           intcon3	equ	0xFF0
 25177                           postinc0	equ	0xFEE
 25178                           plusw0	equ	0xFEB
 25179                           fsr0h	equ	0xFEA
 25180                           fsr0l	equ	0xFE9
 25181                           wreg	equ	0xFE8
 25182                           indf1	equ	0xFE7
 25183                           postinc1	equ	0xFE6
 25184                           postdec1	equ	0xFE5
 25185                           plusw1	equ	0xFE3
 25186                           fsr1h	equ	0xFE2
 25187                           fsr1l	equ	0xFE1
 25188                           indf2	equ	0xFDF
 25189                           postinc2	equ	0xFDE
 25190                           postdec2	equ	0xFDD
 25191                           plusw2	equ	0xFDB
 25192                           fsr2h	equ	0xFDA
 25193                           fsr2l	equ	0xFD9
 25194                           status	equ	0xFD8
 25195                           
 25196 ;; *************** function _LEAppendNeighborInfo *****************
 25197 ;; Defined at:
 25198 ;;		line 89 in file "../LinkEstimator.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;  data            2   36[BANK0 ] PTR unsigned char 
 25201 ;;		 -> beaconMessageBuffer.data(64), beaconMessageBuffer(72), 
 25202 ;;  size            2   38[BANK0 ] unsigned int 
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;  k               2   52[BANK0 ] unsigned int 
 25205 ;;  j               2   50[BANK0 ] unsigned int 
 25206 ;;  i               2   48[BANK0 ] unsigned int 
 25207 ;;  count           2   46[BANK0 ] unsigned int 
 25208 ;;  newPrevSentI    2   44[BANK0 ] unsigned int 
 25209 ;;  cnt             2   42[BANK0 ] unsigned int 
 25210 ;; Return value:  Size  Location     Type
 25211 ;;                  2   36[BANK0 ] PTR unsigned char 
 25212 ;; Registers used:
 25213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25214 ;; Tracked objects:
 25215 ;;		On entry : F/0
 25216 ;;		On exit  : F/0
 25217 ;;		Unchanged: 0/0
 25218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25220 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25222 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25223 ;;Total ram usage:       18 bytes
 25224 ;; Hardware stack levels used:    1
 25225 ;; Hardware stack levels required when called:    6
 25226 ;; This function calls:
 25227 ;;		_NetworkAddressSizeGet
 25228 ;;		___lwdiv
 25229 ;;		___lwmod
 25230 ;;		_memcpy
 25231 ;; This function is called by:
 25232 ;;		_networkSendBeacon
 25233 ;; This function uses a non-reentrant model
 25234 ;;
 25235                           
 25236                           	psect	text122
 25237  0037FC                     __ptext122:
 25238                           	opt stack 0
 25239  0037FC                     _LEAppendNeighborInfo:
 25240                           	opt stack 20
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;LinkEstimator.c: 91: uint16_t i,j,k,cnt;
 25244                           ;LinkEstimator.c: 92: uint16_t count=size/sizeof(neighbor_stat_entry_t);
 25245                           
 25246                           ; BSR set to: 0
 25247                           ;incstack = 0
 25248  0037FC  C086  F073         	movff	LEAppendNeighborInfo@size,___lwdiv@dividend
 25249  003800  C087  F074         	movff	LEAppendNeighborInfo@size+1,___lwdiv@dividend+1
 25250  003804  6B76               	clrf	(___lwdiv@divisor+1)& (0+255),b
 25251  003806  0E03               	movlw	3
 25252  003808  6F75               	movwf	___lwdiv@divisor& (0+255),b
 25253  00380A  EC71  F036         	call	___lwdiv	;wreg free
 25254  00380E  C073  F08E         	movff	?___lwdiv,LEAppendNeighborInfo@count
 25255  003812  C074  F08F         	movff	?___lwdiv+1,LEAppendNeighborInfo@count+1
 25256                           
 25257                           ; BSR set to: 0
 25258                           ;LinkEstimator.c: 93: uint16_t newPrevSentIdx=0;
 25259  003816  6B8C               	clrf	LEAppendNeighborInfo@newPrevSentIdx& (0+255),b
 25260  003818  6B8D               	clrf	(LEAppendNeighborInfo@newPrevSentIdx+1)& (0+255),b
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;LinkEstimator.c: 94: if(count>5)
 25264  00381A  518F               	movf	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 25265  00381C  E103               	bnz	u19340
 25266  00381E  0E06               	movlw	6
 25267  003820  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 25268  003822  E303               	bnc	l1452
 25269  003824                     u19340:
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;LinkEstimator.c: 95: {
 25273                           ;LinkEstimator.c: 96: count=5;
 25274  003824  6B8F               	clrf	(LEAppendNeighborInfo@count+1)& (0+255),b
 25275  003826  0E05               	movlw	5
 25276  003828  6F8E               	movwf	LEAppendNeighborInfo@count& (0+255),b
 25277  00382A                     l1452:
 25278                           
 25279                           ; BSR set to: 0
 25280                           ;LinkEstimator.c: 97: }
 25281                           ;LinkEstimator.c: 98: j=2;
 25282  00382A  6B93               	clrf	(LEAppendNeighborInfo@j+1)& (0+255),b
 25283  00382C  0E02               	movlw	2
 25284  00382E  6F92               	movwf	LEAppendNeighborInfo@j& (0+255),b
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;LinkEstimator.c: 99: cnt=0;
 25288  003830  6B8A               	clrf	LEAppendNeighborInfo@cnt& (0+255),b
 25289  003832  6B8B               	clrf	(LEAppendNeighborInfo@cnt+1)& (0+255),b
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;LinkEstimator.c: 100: for(i=0;i<20;i++)
 25293  003834  6B90               	clrf	LEAppendNeighborInfo@i& (0+255),b
 25294  003836  6B91               	clrf	(LEAppendNeighborInfo@i+1)& (0+255),b
 25295  003838                     l16144:
 25296                           
 25297                           ; BSR set to: 0
 25298                           ;LinkEstimator.c: 101: {
 25299                           ;LinkEstimator.c: 102: cnt++;
 25300  003838  4B8A               	infsnz	LEAppendNeighborInfo@cnt& (0+255),f,b
 25301  00383A  2B8B               	incf	(LEAppendNeighborInfo@cnt+1)& (0+255),f,b
 25302                           
 25303                           ; BSR set to: 0
 25304                           ;LinkEstimator.c: 103: k = (prevSentIdx + i + 1) % 20;
 25305  00383C  5190               	movf	LEAppendNeighborInfo@i& (0+255),w,b
 25306  00383E  0101               	movlb	1	; () banked
 25307  003840  25AF               	addwf	_prevSentIdx& (0+255),w,b
 25308  003842  0100               	movlb	0	; () banked
 25309  003844  6F88               	movwf	??_LEAppendNeighborInfo& (0+255),b
 25310  003846  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 25311  003848  0101               	movlb	1	; () banked
 25312  00384A  21B0               	addwfc	(_prevSentIdx+1)& (0+255),w,b
 25313  00384C  0100               	movlb	0	; () banked
 25314  00384E  6F89               	movwf	(??_LEAppendNeighborInfo+1)& (0+255),b
 25315  003850  2988               	incf	??_LEAppendNeighborInfo& (0+255),w,b
 25316  003852  6F7F               	movwf	___lwmod@dividend& (0+255),b
 25317  003854  0E00               	movlw	0
 25318  003856  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 25319  003858  6F80               	movwf	(___lwmod@dividend+1)& (0+255),b
 25320  00385A  6B82               	clrf	(___lwmod@divisor+1)& (0+255),b
 25321  00385C  0E14               	movlw	20
 25322  00385E  6F81               	movwf	___lwmod@divisor& (0+255),b
 25323  003860  EC3C  F037         	call	___lwmod	;wreg free
 25324  003864  C07F  F094         	movff	?___lwmod,LEAppendNeighborInfo@k
 25325  003868  C080  F095         	movff	?___lwmod+1,LEAppendNeighborInfo@k+1
 25326                           
 25327                           ; BSR set to: 0
 25328                           ;LinkEstimator.c: 104: if ((neighbor_tbl[k].flags & 0x1) && (neighbor_tbl[k].flags & 0x2
      +                          ) && (cnt<=count))
 25329  00386C  0E0B               	movlw	11
 25330  00386E  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 25331  003870  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 25332  003874  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 25333  003878  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 25334  00387A  50F3               	movf	prodl,w,c
 25335  00387C  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 25336  00387E  0E05               	movlw	low (_neighbor_tbl+5)
 25337  003880  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 25338  003882  6ED9               	movwf	fsr2l,c
 25339  003884  0E05               	movlw	high (_neighbor_tbl+5)
 25340  003886  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 25341  003888  6EDA               	movwf	fsr2h,c
 25342  00388A  A0DF               	btfss	indf2,0,c
 25343  00388C  D056               	goto	l16164
 25344                           
 25345                           ; BSR set to: 5
 25346  00388E  0E0B               	movlw	11
 25347  003890  0100               	movlb	0	; () banked
 25348  003892  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 25349  003894  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 25350  003898  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 25351  00389C  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 25352  00389E  50F3               	movf	prodl,w,c
 25353  0038A0  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 25354  0038A2  0E05               	movlw	low (_neighbor_tbl+5)
 25355  0038A4  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 25356  0038A6  6ED9               	movwf	fsr2l,c
 25357  0038A8  0E05               	movlw	high (_neighbor_tbl+5)
 25358  0038AA  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 25359  0038AC  6EDA               	movwf	fsr2h,c
 25360  0038AE  A2DF               	btfss	indf2,1,c
 25361  0038B0  D044               	goto	l16164
 25362                           
 25363                           ; BSR set to: 5
 25364  0038B2  518A               	movf	LEAppendNeighborInfo@cnt& (0+255),w,b
 25365  0038B4  5D8E               	subwf	LEAppendNeighborInfo@count& (0+255),w,b
 25366  0038B6  518B               	movf	(LEAppendNeighborInfo@cnt+1)& (0+255),w,b
 25367  0038B8  598F               	subwfb	(LEAppendNeighborInfo@count+1)& (0+255),w,b
 25368  0038BA  E33F               	bnc	l16164
 25369                           
 25370                           ; BSR set to: 0
 25371                           ;LinkEstimator.c: 105: {
 25372                           ;LinkEstimator.c: 106: memcpy(&data[j],neighbor_tbl[k].ll_addr.bytes, NetworkAddressSize
      +                          Get());
 25373  0038BC  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 25374  0038BE  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 25375  0038C0  6F75               	movwf	memcpy@d1& (0+255),b
 25376  0038C2  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 25377  0038C4  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 25378  0038C6  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 25379  0038C8  0E0B               	movlw	11
 25380  0038CA  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 25381  0038CC  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 25382  0038D0  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 25383  0038D4  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 25384  0038D6  50F3               	movf	prodl,w,c
 25385  0038D8  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 25386  0038DA  0E00               	movlw	low _neighbor_tbl
 25387  0038DC  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 25388  0038DE  6F77               	movwf	memcpy@s1& (0+255),b
 25389  0038E0  0E05               	movlw	high _neighbor_tbl
 25390  0038E2  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 25391  0038E4  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 25392  0038E6  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 25393  0038EA  0100               	movlb	0	; () banked
 25394  0038EC  6F79               	movwf	memcpy@n& (0+255),b
 25395  0038EE  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 25396  0038F0  EC05  F035         	call	_memcpy	;wreg free
 25397                           
 25398                           ; BSR set to: 0
 25399                           ;LinkEstimator.c: 107: j+=NetworkAddressSizeGet();
 25400  0038F4  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 25401  0038F8  0100               	movlb	0	; () banked
 25402  0038FA  2792               	addwf	LEAppendNeighborInfo@j& (0+255),f,b
 25403  0038FC  0E00               	movlw	0
 25404  0038FE  2393               	addwfc	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 25405                           
 25406                           ; BSR set to: 0
 25407                           ;LinkEstimator.c: 108: data[j]=neighbor_tbl[k].inquality;
 25408  003900  0E0B               	movlw	11
 25409  003902  0394               	mulwf	LEAppendNeighborInfo@k& (0+255),b
 25410  003904  CFF3 F088          	movff	prodl,??_LEAppendNeighborInfo
 25411  003908  CFF4 F089          	movff	prodh,??_LEAppendNeighborInfo+1
 25412  00390C  0395               	mulwf	(LEAppendNeighborInfo@k+1)& (0+255),b
 25413  00390E  50F3               	movf	prodl,w,c
 25414  003910  2789               	addwf	(??_LEAppendNeighborInfo+1)& (0+255),f,b
 25415  003912  0E06               	movlw	low (_neighbor_tbl+6)
 25416  003914  2588               	addwf	??_LEAppendNeighborInfo& (0+255),w,b
 25417  003916  6ED9               	movwf	fsr2l,c
 25418  003918  0E05               	movlw	high (_neighbor_tbl+6)
 25419  00391A  2189               	addwfc	(??_LEAppendNeighborInfo+1)& (0+255),w,b
 25420  00391C  6EDA               	movwf	fsr2h,c
 25421  00391E  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 25422  003920  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 25423  003922  6EE1               	movwf	fsr1l,c
 25424  003924  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 25425  003926  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 25426  003928  6EE2               	movwf	fsr1h,c
 25427  00392A  CFDF FFE7          	movff	indf2,indf1
 25428                           
 25429                           ; BSR set to: 0
 25430                           ;LinkEstimator.c: 109: j+=1;
 25431  00392E  4B92               	infsnz	LEAppendNeighborInfo@j& (0+255),f,b
 25432  003930  2B93               	incf	(LEAppendNeighborInfo@j+1)& (0+255),f,b
 25433                           
 25434                           ; BSR set to: 0
 25435                           ;LinkEstimator.c: 110: newPrevSentIdx = k;
 25436  003932  C094  F08C         	movff	LEAppendNeighborInfo@k,LEAppendNeighborInfo@newPrevSentIdx
 25437  003936  C095  F08D         	movff	LEAppendNeighborInfo@k+1,LEAppendNeighborInfo@newPrevSentIdx+1
 25438  00393A                     l16164:
 25439  00393A  0100               	movlb	0	; () banked
 25440  00393C  4B90               	infsnz	LEAppendNeighborInfo@i& (0+255),f,b
 25441  00393E  2B91               	incf	(LEAppendNeighborInfo@i+1)& (0+255),f,b
 25442                           
 25443                           ; BSR set to: 0
 25444  003940  5191               	movf	(LEAppendNeighborInfo@i+1)& (0+255),w,b
 25445  003942  E104               	bnz	u19380
 25446  003944  0E14               	movlw	20
 25447  003946  5D90               	subwf	LEAppendNeighborInfo@i& (0+255),w,b
 25448  003948  E201 D776          	bnc	l16144
 25449  00394C                     u19380:
 25450                           
 25451                           ; BSR set to: 0
 25452                           ;LinkEstimator.c: 111: }
 25453                           ;LinkEstimator.c: 112: }
 25454                           ;LinkEstimator.c: 113: prevSentIdx = newPrevSentIdx;
 25455  00394C  C08C  F1AF         	movff	LEAppendNeighborInfo@newPrevSentIdx,_prevSentIdx
 25456  003950  C08D  F1B0         	movff	LEAppendNeighborInfo@newPrevSentIdx+1,_prevSentIdx+1
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;LinkEstimator.c: 115: data[0]=linkEstSeq++;
 25460  003954  C084  FFD9         	movff	LEAppendNeighborInfo@data,fsr2l
 25461  003958  C085  FFDA         	movff	LEAppendNeighborInfo@data+1,fsr2h
 25462  00395C  C1AB  FFDF         	movff	_linkEstSeq,indf2
 25463                           
 25464                           ; BSR set to: 0
 25465  003960  0101               	movlb	1	; () banked
 25466  003962  4BAB               	infsnz	_linkEstSeq& (0+255),f,b
 25467  003964  2BAC               	incf	(_linkEstSeq+1)& (0+255),f,b
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;LinkEstimator.c: 116: data[1]=k;
 25471  003966  0100               	movlb	0	; () banked
 25472  003968  EE20 F001          	lfsr	2,1
 25473  00396C  5184               	movf	LEAppendNeighborInfo@data& (0+255),w,b
 25474  00396E  26D9               	addwf	fsr2l,f,c
 25475  003970  5185               	movf	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 25476  003972  22DA               	addwfc	fsr2h,f,c
 25477  003974  C094  FFDF         	movff	LEAppendNeighborInfo@k,indf2
 25478                           
 25479                           ; BSR set to: 0
 25480                           ;LinkEstimator.c: 117: return(&data[j]);
 25481  003978  5192               	movf	LEAppendNeighborInfo@j& (0+255),w,b
 25482  00397A  2584               	addwf	LEAppendNeighborInfo@data& (0+255),w,b
 25483  00397C  6F84               	movwf	?_LEAppendNeighborInfo& (0+255),b
 25484  00397E  5193               	movf	(LEAppendNeighborInfo@j+1)& (0+255),w,b
 25485  003980  2185               	addwfc	(LEAppendNeighborInfo@data+1)& (0+255),w,b
 25486  003982  6F85               	movwf	(?_LEAppendNeighborInfo+1)& (0+255),b
 25487                           
 25488                           ; BSR set to: 0
 25489  003984  0012               	return		;funcret
 25490  003986                     __end_of_LEAppendNeighborInfo:
 25491                           	opt stack 0
 25492                           tblptru	equ	0xFF8
 25493                           tblptrh	equ	0xFF7
 25494                           tblptrl	equ	0xFF6
 25495                           tablat	equ	0xFF5
 25496                           prodh	equ	0xFF4
 25497                           prodl	equ	0xFF3
 25498                           intcon3	equ	0xFF0
 25499                           postinc0	equ	0xFEE
 25500                           plusw0	equ	0xFEB
 25501                           fsr0h	equ	0xFEA
 25502                           fsr0l	equ	0xFE9
 25503                           wreg	equ	0xFE8
 25504                           indf1	equ	0xFE7
 25505                           postinc1	equ	0xFE6
 25506                           postdec1	equ	0xFE5
 25507                           plusw1	equ	0xFE3
 25508                           fsr1h	equ	0xFE2
 25509                           fsr1l	equ	0xFE1
 25510                           indf2	equ	0xFDF
 25511                           postinc2	equ	0xFDE
 25512                           postdec2	equ	0xFDD
 25513                           plusw2	equ	0xFDB
 25514                           fsr2h	equ	0xFDA
 25515                           fsr2l	equ	0xFD9
 25516                           status	equ	0xFD8
 25517                           
 25518 ;; *************** function ___lwmod *****************
 25519 ;; Defined at:
 25520 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 25521 ;; Parameters:    Size  Location     Type
 25522 ;;  dividend        2   31[BANK0 ] unsigned int 
 25523 ;;  divisor         2   33[BANK0 ] unsigned int 
 25524 ;; Auto vars:     Size  Location     Type
 25525 ;;  counter         1   35[BANK0 ] unsigned char 
 25526 ;; Return value:  Size  Location     Type
 25527 ;;                  2   31[BANK0 ] unsigned int 
 25528 ;; Registers used:
 25529 ;;		wreg, status,2, status,0
 25530 ;; Tracked objects:
 25531 ;;		On entry : F/0
 25532 ;;		On exit  : F/0
 25533 ;;		Unchanged: 0/0
 25534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25538 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25539 ;;Total ram usage:        5 bytes
 25540 ;; Hardware stack levels used:    1
 25541 ;; Hardware stack levels required when called:    5
 25542 ;; This function calls:
 25543 ;;		Nothing
 25544 ;; This function is called by:
 25545 ;;		_LEAppendNeighborInfo
 25546 ;;		_le_findRandomNeighborIdx
 25547 ;; This function uses a non-reentrant model
 25548 ;;
 25549                           
 25550                           	psect	text123
 25551  006E78                     __ptext123:
 25552                           	opt stack 0
 25553  006E78                     ___lwmod:
 25554                           	opt stack 21
 25555                           
 25556                           ; BSR set to: 0
 25557                           
 25558                           ; BSR set to: 0
 25559                           ;incstack = 0
 25560  006E78  5181               	movf	___lwmod@divisor& (0+255),w,b
 25561  006E7A  1182               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 25562  006E7C  E017               	bz	l2598
 25563                           
 25564                           ; BSR set to: 0
 25565  006E7E  0E01               	movlw	1
 25566  006E80  6F83               	movwf	___lwmod@counter& (0+255),b
 25567  006E82  D004               	goto	l16010
 25568  006E84                     l16008:
 25569                           
 25570                           ; BSR set to: 0
 25571  006E84  90D8               	bcf	status,0,c
 25572  006E86  3781               	rlcf	___lwmod@divisor& (0+255),f,b
 25573  006E88  3782               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 25574  006E8A  2B83               	incf	___lwmod@counter& (0+255),f,b
 25575  006E8C                     l16010:
 25576                           
 25577                           ; BSR set to: 0
 25578  006E8C  AF82               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 25579  006E8E  D7FA               	goto	l16008
 25580  006E90                     l16012:
 25581                           
 25582                           ; BSR set to: 0
 25583  006E90  5181               	movf	___lwmod@divisor& (0+255),w,b
 25584  006E92  5D7F               	subwf	___lwmod@dividend& (0+255),w,b
 25585  006E94  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25586  006E96  5980               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 25587  006E98  E304               	bnc	l16016
 25588                           
 25589                           ; BSR set to: 0
 25590  006E9A  5181               	movf	___lwmod@divisor& (0+255),w,b
 25591  006E9C  5F7F               	subwf	___lwmod@dividend& (0+255),f,b
 25592  006E9E  5182               	movf	(___lwmod@divisor+1)& (0+255),w,b
 25593  006EA0  5B80               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 25594  006EA2                     l16016:
 25595                           
 25596                           ; BSR set to: 0
 25597  006EA2  90D8               	bcf	status,0,c
 25598  006EA4  3382               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 25599  006EA6  3381               	rrcf	___lwmod@divisor& (0+255),f,b
 25600                           
 25601                           ; BSR set to: 0
 25602  006EA8  2F83               	decfsz	___lwmod@counter& (0+255),f,b
 25603  006EAA  D7F2               	goto	l16012
 25604  006EAC                     l2598:
 25605                           
 25606                           ; BSR set to: 0
 25607  006EAC  C07F  F07F         	movff	___lwmod@dividend,?___lwmod
 25608  006EB0  C080  F080         	movff	___lwmod@dividend+1,?___lwmod+1
 25609                           
 25610                           ; BSR set to: 0
 25611  006EB4  0012               	return		;funcret
 25612  006EB6                     __end_of___lwmod:
 25613                           	opt stack 0
 25614                           tblptru	equ	0xFF8
 25615                           tblptrh	equ	0xFF7
 25616                           tblptrl	equ	0xFF6
 25617                           tablat	equ	0xFF5
 25618                           prodh	equ	0xFF4
 25619                           prodl	equ	0xFF3
 25620                           intcon3	equ	0xFF0
 25621                           postinc0	equ	0xFEE
 25622                           plusw0	equ	0xFEB
 25623                           fsr0h	equ	0xFEA
 25624                           fsr0l	equ	0xFE9
 25625                           wreg	equ	0xFE8
 25626                           indf1	equ	0xFE7
 25627                           postinc1	equ	0xFE6
 25628                           postdec1	equ	0xFE5
 25629                           plusw1	equ	0xFE3
 25630                           fsr1h	equ	0xFE2
 25631                           fsr1l	equ	0xFE1
 25632                           indf2	equ	0xFDF
 25633                           postinc2	equ	0xFDE
 25634                           postdec2	equ	0xFDD
 25635                           plusw2	equ	0xFDB
 25636                           fsr2h	equ	0xFDA
 25637                           fsr2l	equ	0xFD9
 25638                           status	equ	0xFD8
 25639                           
 25640 ;; *************** function _netDecayInterval *****************
 25641 ;; Defined at:
 25642 ;;		line 142 in file "../BeaconManager.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;		None
 25645 ;; Auto vars:     Size  Location     Type
 25646 ;;		None
 25647 ;; Return value:  Size  Location     Type
 25648 ;;                  1    wreg      void 
 25649 ;; Registers used:
 25650 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25651 ;; Tracked objects:
 25652 ;;		On entry : F/0
 25653 ;;		On exit  : F/0
 25654 ;;		Unchanged: 0/0
 25655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;Total ram usage:        0 bytes
 25661 ;; Hardware stack levels used:    1
 25662 ;; Hardware stack levels required when called:    9
 25663 ;; This function calls:
 25664 ;;		_netChooseAdvertiseTime
 25665 ;; This function is called by:
 25666 ;;		_BeaconManagerTask
 25667 ;; This function uses a non-reentrant model
 25668 ;;
 25669                           
 25670                           	psect	text124
 25671  007018                     __ptext124:
 25672                           	opt stack 0
 25673  007018                     _netDecayInterval:
 25674                           	opt stack 18
 25675                           
 25676                           ; BSR set to: 0
 25677                           ;BeaconManager.c: 144: currentInterval <<=1;
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;incstack = 0
 25681  007018  0101               	movlb	1	; () banked
 25682  00701A  90D8               	bcf	status,0,c
 25683  00701C  3792               	rlcf	_currentInterval& (0+255),f,b
 25684  00701E  3793               	rlcf	(_currentInterval+1)& (0+255),f,b
 25685  007020  3794               	rlcf	(_currentInterval+2)& (0+255),f,b
 25686  007022  3795               	rlcf	(_currentInterval+3)& (0+255),f,b
 25687                           
 25688                           ; BSR set to: 1
 25689                           ;BeaconManager.c: 145: if (currentInterval > ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5))
 25690  007024  0E81               	movlw	129
 25691  007026  5D92               	subwf	_currentInterval& (0+255),w,b
 25692  007028  0EA8               	movlw	168
 25693  00702A  5993               	subwfb	(_currentInterval+1)& (0+255),w,b
 25694  00702C  0E12               	movlw	18
 25695  00702E  5994               	subwfb	(_currentInterval+2)& (0+255),w,b
 25696  007030  0E01               	movlw	1
 25697  007032  5995               	subwfb	(_currentInterval+3)& (0+255),w,b
 25698  007034  E202 EF70  F031    	bnc	_netChooseAdvertiseTime
 25699                           
 25700                           ; BSR set to: 1
 25701                           ;BeaconManager.c: 146: {
 25702                           ;BeaconManager.c: 147: currentInterval = ((((SPAN)60*1000ULL)*(SPAN)60)*(SPAN)5);
 25703  00703A  0E80               	movlw	128
 25704  00703C  6F92               	movwf	_currentInterval& (0+255),b
 25705  00703E  0EA8               	movlw	168
 25706  007040  6F93               	movwf	(_currentInterval+1)& (0+255),b
 25707  007042  0E12               	movlw	18
 25708  007044  6F94               	movwf	(_currentInterval+2)& (0+255),b
 25709  007046  0E01               	movlw	1
 25710  007048  6F95               	movwf	(_currentInterval+3)& (0+255),b
 25711                           
 25712                           ; BSR set to: 1
 25713                           ;BeaconManager.c: 148: }
 25714                           ;BeaconManager.c: 149: netChooseAdvertiseTime();
 25715  00704A  EF70  F031         	goto	_netChooseAdvertiseTime	;wreg free
 25716  00704E                     __end_of_netDecayInterval:
 25717                           	opt stack 0
 25718                           tblptru	equ	0xFF8
 25719                           tblptrh	equ	0xFF7
 25720                           tblptrl	equ	0xFF6
 25721                           tablat	equ	0xFF5
 25722                           prodh	equ	0xFF4
 25723                           prodl	equ	0xFF3
 25724                           intcon3	equ	0xFF0
 25725                           postinc0	equ	0xFEE
 25726                           plusw0	equ	0xFEB
 25727                           fsr0h	equ	0xFEA
 25728                           fsr0l	equ	0xFE9
 25729                           wreg	equ	0xFE8
 25730                           indf1	equ	0xFE7
 25731                           postinc1	equ	0xFE6
 25732                           postdec1	equ	0xFE5
 25733                           plusw1	equ	0xFE3
 25734                           fsr1h	equ	0xFE2
 25735                           fsr1l	equ	0xFE1
 25736                           indf2	equ	0xFDF
 25737                           postinc2	equ	0xFDE
 25738                           postdec2	equ	0xFDD
 25739                           plusw2	equ	0xFDB
 25740                           fsr2h	equ	0xFDA
 25741                           fsr2l	equ	0xFD9
 25742                           status	equ	0xFD8
 25743                           
 25744 ;; *************** function _netChooseAdvertiseTime *****************
 25745 ;; Defined at:
 25746 ;;		line 125 in file "../BeaconManager.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;  t               4   47[BANK0 ] unsigned long 
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      void 
 25753 ;; Registers used:
 25754 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25755 ;; Tracked objects:
 25756 ;;		On entry : F/1
 25757 ;;		On exit  : F/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25761 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;Total ram usage:        4 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; Hardware stack levels required when called:    8
 25767 ;; This function calls:
 25768 ;;		_MSTickGet
 25769 ;;		___llmod
 25770 ;;		_krnd
 25771 ;; This function is called by:
 25772 ;;		_netResetInterval
 25773 ;;		_netDecayInterval
 25774 ;; This function uses a non-reentrant model
 25775 ;;
 25776                           
 25777                           	psect	text125
 25778  0062E0                     __ptext125:
 25779                           	opt stack 0
 25780  0062E0                     _netChooseAdvertiseTime:
 25781                           	opt stack 18
 25782                           
 25783                           ; BSR set to: 1
 25784                           ;BeaconManager.c: 127: SPAN t;
 25785                           ;BeaconManager.c: 128: t = currentInterval;
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;incstack = 0
 25789  0062E0  C192  F08F         	movff	_currentInterval,netChooseAdvertiseTime@t
 25790  0062E4  C193  F090         	movff	_currentInterval+1,netChooseAdvertiseTime@t+1
 25791  0062E8  C194  F091         	movff	_currentInterval+2,netChooseAdvertiseTime@t+2
 25792  0062EC  C195  F092         	movff	_currentInterval+3,netChooseAdvertiseTime@t+3
 25793                           
 25794                           ; BSR set to: 1
 25795                           ;BeaconManager.c: 129: t /= 2;
 25796  0062F0  0100               	movlb	0	; () banked
 25797  0062F2  90D8               	bcf	status,0,c
 25798  0062F4  3392               	rrcf	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 25799  0062F6  3391               	rrcf	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 25800  0062F8  3390               	rrcf	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 25801  0062FA  338F               	rrcf	netChooseAdvertiseTime@t& (0+255),f,b
 25802                           
 25803                           ; BSR set to: 0
 25804                           ;BeaconManager.c: 130: t += krnd() % t;
 25805  0062FC  EC45  F01E         	call	_krnd	;wreg free
 25806  006300  C073  F07F         	movff	?_krnd,___llmod@dividend
 25807  006304  C074  F080         	movff	?_krnd+1,___llmod@dividend+1
 25808  006308  C075  F081         	movff	?_krnd+2,___llmod@dividend+2
 25809  00630C  C076  F082         	movff	?_krnd+3,___llmod@dividend+3
 25810  006310  C08F  F083         	movff	netChooseAdvertiseTime@t,___llmod@divisor
 25811  006314  C090  F084         	movff	netChooseAdvertiseTime@t+1,___llmod@divisor+1
 25812  006318  C091  F085         	movff	netChooseAdvertiseTime@t+2,___llmod@divisor+2
 25813  00631C  C092  F086         	movff	netChooseAdvertiseTime@t+3,___llmod@divisor+3
 25814  006320  EC99  F033         	call	___llmod	;wreg free
 25815  006324  517F               	movf	?___llmod& (0+255),w,b
 25816  006326  278F               	addwf	netChooseAdvertiseTime@t& (0+255),f,b
 25817  006328  5180               	movf	(?___llmod+1)& (0+255),w,b
 25818  00632A  2390               	addwfc	(netChooseAdvertiseTime@t+1)& (0+255),f,b
 25819  00632C  5181               	movf	(?___llmod+2)& (0+255),w,b
 25820  00632E  2391               	addwfc	(netChooseAdvertiseTime@t+2)& (0+255),f,b
 25821  006330  5182               	movf	(?___llmod+3)& (0+255),w,b
 25822  006332  2392               	addwfc	(netChooseAdvertiseTime@t+3)& (0+255),f,b
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;BeaconManager.c: 131: tInterval=MSTickGet();
 25826  006334  EC27  F038         	call	_MSTickGet	;wreg free
 25827  006338  EE22  F014         	lfsr	2,_tInterval
 25828  00633C  0E07               	movlw	7
 25829  00633E                     u18761:
 25830  00633E  CFEB FFDB          	movff	plusw0,plusw2
 25831  006342  06E8               	decf	wreg,f,c
 25832  006344  E2FC               	bc	u18761
 25833                           
 25834                           ; BSR set to: 0
 25835                           ;BeaconManager.c: 132: intervalDelay=t;
 25836  006346  C08F  F19A         	movff	netChooseAdvertiseTime@t,_intervalDelay
 25837  00634A  C090  F19B         	movff	netChooseAdvertiseTime@t+1,_intervalDelay+1
 25838  00634E  C091  F19C         	movff	netChooseAdvertiseTime@t+2,_intervalDelay+2
 25839  006352  C092  F19D         	movff	netChooseAdvertiseTime@t+3,_intervalDelay+3
 25840                           
 25841                           ; BSR set to: 0
 25842  006356  0012               	return		;funcret
 25843  006358                     __end_of_netChooseAdvertiseTime:
 25844                           	opt stack 0
 25845                           tblptru	equ	0xFF8
 25846                           tblptrh	equ	0xFF7
 25847                           tblptrl	equ	0xFF6
 25848                           tablat	equ	0xFF5
 25849                           prodh	equ	0xFF4
 25850                           prodl	equ	0xFF3
 25851                           intcon3	equ	0xFF0
 25852                           postinc0	equ	0xFEE
 25853                           plusw0	equ	0xFEB
 25854                           fsr0h	equ	0xFEA
 25855                           fsr0l	equ	0xFE9
 25856                           wreg	equ	0xFE8
 25857                           indf1	equ	0xFE7
 25858                           postinc1	equ	0xFE6
 25859                           postdec1	equ	0xFE5
 25860                           plusw1	equ	0xFE3
 25861                           fsr1h	equ	0xFE2
 25862                           fsr1l	equ	0xFE1
 25863                           indf2	equ	0xFDF
 25864                           postinc2	equ	0xFDE
 25865                           postdec2	equ	0xFDD
 25866                           plusw2	equ	0xFDB
 25867                           fsr2h	equ	0xFDA
 25868                           fsr2l	equ	0xFD9
 25869                           status	equ	0xFD8
 25870                           
 25871 ;; *************** function _krnd *****************
 25872 ;; Defined at:
 25873 ;;		line 16 in file "../krnd.c"
 25874 ;; Parameters:    Size  Location     Type
 25875 ;;		None
 25876 ;; Auto vars:     Size  Location     Type
 25877 ;;  t               4   27[BANK0 ] long 
 25878 ;; Return value:  Size  Location     Type
 25879 ;;                  4   19[BANK0 ] unsigned long 
 25880 ;; Registers used:
 25881 ;;		wreg, status,2, status,0
 25882 ;; Tracked objects:
 25883 ;;		On entry : C/0
 25884 ;;		On exit  : F/0
 25885 ;;		Unchanged: 0/0
 25886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25888 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25891 ;;Total ram usage:       12 bytes
 25892 ;; Hardware stack levels used:    1
 25893 ;; Hardware stack levels required when called:    5
 25894 ;; This function calls:
 25895 ;;		Nothing
 25896 ;; This function is called by:
 25897 ;;		_TxPacket
 25898 ;;		_MiMAC_Init
 25899 ;;		_BeaconManagerInit
 25900 ;;		_netChooseAdvertiseTime
 25901 ;;		_le_findRandomNeighborIdx
 25902 ;;		_BroadcastManagerDelaySend
 25903 ;;		_NetworkManagerTask
 25904 ;;		_NetworkInit
 25905 ;; This function uses a non-reentrant model
 25906 ;;
 25907                           
 25908                           	psect	text126
 25909  003C8A                     __ptext126:
 25910                           	opt stack 0
 25911  003C8A                     _krnd:
 25912                           	opt stack 17
 25913                           
 25914                           ;krnd.c: 18: int32_t t;
 25915                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 25916                           
 25917                           ; BSR set to: 0
 25918                           ;incstack = 0
 25919  003C8A  C049  F077         	movff	_y,??_krnd
 25920  003C8E  C04A  F078         	movff	_y+1,??_krnd+1
 25921  003C92  C04B  F079         	movff	_y+2,??_krnd+2
 25922  003C96  C04C  F07A         	movff	_y+3,??_krnd+3
 25923  003C9A  0E05               	movlw	5
 25924  003C9C                     u18015:
 25925  003C9C  90D8               	bcf	status,0,c
 25926  003C9E  0100               	movlb	0	; () banked
 25927  003CA0  3777               	rlcf	??_krnd& (0+255),f,b
 25928  003CA2  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 25929  003CA4  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 25930  003CA6  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 25931  003CA8  2EE8               	decfsz	wreg,f,c
 25932  003CAA  D7F8               	goto	u18015
 25933  003CAC  5177               	movf	??_krnd& (0+255),w,b
 25934  003CAE  1A49               	xorwf	_y,f,c
 25935  003CB0  5178               	movf	(??_krnd+1)& (0+255),w,b
 25936  003CB2  1A4A               	xorwf	_y+1,f,c
 25937  003CB4  5179               	movf	(??_krnd+2)& (0+255),w,b
 25938  003CB6  1A4B               	xorwf	_y+2,f,c
 25939  003CB8  517A               	movf	(??_krnd+3)& (0+255),w,b
 25940  003CBA  1A4C               	xorwf	_y+3,f,c
 25941  003CBC  C049  F077         	movff	_y,??_krnd
 25942  003CC0  C04A  F078         	movff	_y+1,??_krnd+1
 25943  003CC4  C04B  F079         	movff	_y+2,??_krnd+2
 25944  003CC8  C04C  F07A         	movff	_y+3,??_krnd+3
 25945  003CCC  0E08               	movlw	8
 25946  003CCE  D005               	goto	u18020
 25947  003CD0                     u18025:
 25948  003CD0  90D8               	bcf	status,0,c
 25949  003CD2  337A               	rrcf	(??_krnd+3)& (0+255),f,b
 25950  003CD4  3379               	rrcf	(??_krnd+2)& (0+255),f,b
 25951  003CD6  3378               	rrcf	(??_krnd+1)& (0+255),f,b
 25952  003CD8  3377               	rrcf	??_krnd& (0+255),f,b
 25953  003CDA                     u18020:
 25954  003CDA  2EE8               	decfsz	wreg,f,c
 25955  003CDC  D7F9               	goto	u18025
 25956  003CDE  5177               	movf	??_krnd& (0+255),w,b
 25957  003CE0  1A49               	xorwf	_y,f,c
 25958  003CE2  5178               	movf	(??_krnd+1)& (0+255),w,b
 25959  003CE4  1A4A               	xorwf	_y+1,f,c
 25960  003CE6  5179               	movf	(??_krnd+2)& (0+255),w,b
 25961  003CE8  1A4B               	xorwf	_y+2,f,c
 25962  003CEA  517A               	movf	(??_krnd+3)& (0+255),w,b
 25963  003CEC  1A4C               	xorwf	_y+3,f,c
 25964  003CEE  C049  F077         	movff	_y,??_krnd
 25965  003CF2  C04A  F078         	movff	_y+1,??_krnd+1
 25966  003CF6  C04B  F079         	movff	_y+2,??_krnd+2
 25967  003CFA  C04C  F07A         	movff	_y+3,??_krnd+3
 25968  003CFE  0E16               	movlw	22
 25969  003D00                     u18035:
 25970  003D00  90D8               	bcf	status,0,c
 25971  003D02  3777               	rlcf	??_krnd& (0+255),f,b
 25972  003D04  3778               	rlcf	(??_krnd+1)& (0+255),f,b
 25973  003D06  3779               	rlcf	(??_krnd+2)& (0+255),f,b
 25974  003D08  377A               	rlcf	(??_krnd+3)& (0+255),f,b
 25975  003D0A  2EE8               	decfsz	wreg,f,c
 25976  003D0C  D7F9               	goto	u18035
 25977  003D0E  5177               	movf	??_krnd& (0+255),w,b
 25978  003D10  1A49               	xorwf	_y,f,c
 25979  003D12  5178               	movf	(??_krnd+1)& (0+255),w,b
 25980  003D14  1A4A               	xorwf	_y+1,f,c
 25981  003D16  5179               	movf	(??_krnd+2)& (0+255),w,b
 25982  003D18  1A4B               	xorwf	_y+2,f,c
 25983  003D1A  517A               	movf	(??_krnd+3)& (0+255),w,b
 25984  003D1C  1A4C               	xorwf	_y+3,f,c
 25985                           
 25986                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 25987  003D1E  5045               	movf	_w,w,c
 25988  003D20  0101               	movlb	1	; () banked
 25989  003D22  25F3               	addwf	_z& (0+255),w,b
 25990  003D24  0100               	movlb	0	; () banked
 25991  003D26  6F77               	movwf	??_krnd& (0+255),b
 25992  003D28  5046               	movf	_w+1,w,c
 25993  003D2A  0101               	movlb	1	; () banked
 25994  003D2C  21F4               	addwfc	(_z+1)& (0+255),w,b
 25995  003D2E  0100               	movlb	0	; () banked
 25996  003D30  6F78               	movwf	(??_krnd+1)& (0+255),b
 25997  003D32  5047               	movf	_w+2,w,c
 25998  003D34  0101               	movlb	1	; () banked
 25999  003D36  21F5               	addwfc	(_z+2)& (0+255),w,b
 26000  003D38  0100               	movlb	0	; () banked
 26001  003D3A  6F79               	movwf	(??_krnd+2)& (0+255),b
 26002  003D3C  5048               	movf	_w+3,w,c
 26003  003D3E  0101               	movlb	1	; () banked
 26004  003D40  21F6               	addwfc	(_z+3)& (0+255),w,b
 26005  003D42  0100               	movlb	0	; () banked
 26006  003D44  6F7A               	movwf	(??_krnd+3)& (0+255),b
 26007  003D46  0101               	movlb	1	; () banked
 26008  003D48  518E               	movf	_c& (0+255),w,b
 26009  003D4A  0100               	movlb	0	; () banked
 26010  003D4C  2577               	addwf	??_krnd& (0+255),w,b
 26011  003D4E  6F7B               	movwf	krnd@t& (0+255),b
 26012  003D50  0101               	movlb	1	; () banked
 26013  003D52  518F               	movf	(_c+1)& (0+255),w,b
 26014  003D54  0100               	movlb	0	; () banked
 26015  003D56  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 26016  003D58  6F7C               	movwf	(krnd@t+1)& (0+255),b
 26017  003D5A  0101               	movlb	1	; () banked
 26018  003D5C  5190               	movf	(_c+2)& (0+255),w,b
 26019  003D5E  0100               	movlb	0	; () banked
 26020  003D60  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 26021  003D62  6F7D               	movwf	(krnd@t+2)& (0+255),b
 26022  003D64  0101               	movlb	1	; () banked
 26023  003D66  5191               	movf	(_c+3)& (0+255),w,b
 26024  003D68  0100               	movlb	0	; () banked
 26025  003D6A  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 26026  003D6C  6F7E               	movwf	(krnd@t+3)& (0+255),b
 26027                           
 26028                           ; BSR set to: 0
 26029  003D6E  C045  F1F3         	movff	_w,_z
 26030  003D72  C046  F1F4         	movff	_w+1,_z+1
 26031  003D76  C047  F1F5         	movff	_w+2,_z+2
 26032  003D7A  C048  F1F6         	movff	_w+3,_z+3
 26033  003D7E  0E01               	movlw	1
 26034  003D80  AF7E               	btfss	(krnd@t+3)& (0+255),7,b
 26035  003D82  0E00               	movlw	0
 26036  003D84  0101               	movlb	1	; () banked
 26037  003D86  6F8E               	movwf	_c& (0+255),b
 26038  003D88  6B8F               	clrf	(_c+1)& (0+255),b
 26039  003D8A  6B90               	clrf	(_c+2)& (0+255),b
 26040  003D8C  6B91               	clrf	(_c+3)& (0+255),b
 26041  003D8E  0E3A               	movlw	58
 26042  003D90  0100               	movlb	0	; () banked
 26043  003D92  157B               	andwf	krnd@t& (0+255),w,b
 26044  003D94  6E45               	movwf	_w,c
 26045  003D96  0E37               	movlw	55
 26046  003D98  157C               	andwf	(krnd@t+1)& (0+255),w,b
 26047  003D9A  6E46               	movwf	_w+1,c
 26048  003D9C  0EDE               	movlw	222
 26049  003D9E  157D               	andwf	(krnd@t+2)& (0+255),w,b
 26050  003DA0  6E47               	movwf	_w+2,c
 26051  003DA2  0E54               	movlw	84
 26052  003DA4  157E               	andwf	(krnd@t+3)& (0+255),w,b
 26053  003DA6  6E48               	movwf	_w+3,c
 26054                           
 26055                           ;krnd.c: 24: x += 1832334820;
 26056  003DA8  0EE4               	movlw	228
 26057  003DAA  0101               	movlb	1	; () banked
 26058  003DAC  27EF               	addwf	_x& (0+255),f,b
 26059  003DAE  0E35               	movlw	53
 26060  003DB0  23F0               	addwfc	(_x+1)& (0+255),f,b
 26061  003DB2  0E37               	movlw	55
 26062  003DB4  23F1               	addwfc	(_x+2)& (0+255),f,b
 26063  003DB6  0E6D               	movlw	109
 26064  003DB8  23F2               	addwfc	(_x+3)& (0+255),f,b
 26065                           
 26066                           ;krnd.c: 26: return x + y + w;
 26067  003DBA  5049               	movf	_y,w,c
 26068  003DBC  25EF               	addwf	_x& (0+255),w,b
 26069  003DBE  0100               	movlb	0	; () banked
 26070  003DC0  6F77               	movwf	??_krnd& (0+255),b
 26071  003DC2  504A               	movf	_y+1,w,c
 26072  003DC4  0101               	movlb	1	; () banked
 26073  003DC6  21F0               	addwfc	(_x+1)& (0+255),w,b
 26074  003DC8  0100               	movlb	0	; () banked
 26075  003DCA  6F78               	movwf	(??_krnd+1)& (0+255),b
 26076  003DCC  504B               	movf	_y+2,w,c
 26077  003DCE  0101               	movlb	1	; () banked
 26078  003DD0  21F1               	addwfc	(_x+2)& (0+255),w,b
 26079  003DD2  0100               	movlb	0	; () banked
 26080  003DD4  6F79               	movwf	(??_krnd+2)& (0+255),b
 26081  003DD6  504C               	movf	_y+3,w,c
 26082  003DD8  0101               	movlb	1	; () banked
 26083  003DDA  21F2               	addwfc	(_x+3)& (0+255),w,b
 26084  003DDC  0100               	movlb	0	; () banked
 26085  003DDE  6F7A               	movwf	(??_krnd+3)& (0+255),b
 26086  003DE0  5045               	movf	_w,w,c
 26087  003DE2  2577               	addwf	??_krnd& (0+255),w,b
 26088  003DE4  6F73               	movwf	?_krnd& (0+255),b
 26089  003DE6  5046               	movf	_w+1,w,c
 26090  003DE8  2178               	addwfc	(??_krnd+1)& (0+255),w,b
 26091  003DEA  6F74               	movwf	(?_krnd+1)& (0+255),b
 26092  003DEC  5047               	movf	_w+2,w,c
 26093  003DEE  2179               	addwfc	(??_krnd+2)& (0+255),w,b
 26094  003DF0  6F75               	movwf	(?_krnd+2)& (0+255),b
 26095  003DF2  5048               	movf	_w+3,w,c
 26096  003DF4  217A               	addwfc	(??_krnd+3)& (0+255),w,b
 26097  003DF6  6F76               	movwf	(?_krnd+3)& (0+255),b
 26098                           
 26099                           ; BSR set to: 0
 26100  003DF8  0012               	return		;funcret
 26101  003DFA                     __end_of_krnd:
 26102                           	opt stack 0
 26103                           tblptru	equ	0xFF8
 26104                           tblptrh	equ	0xFF7
 26105                           tblptrl	equ	0xFF6
 26106                           tablat	equ	0xFF5
 26107                           prodh	equ	0xFF4
 26108                           prodl	equ	0xFF3
 26109                           intcon3	equ	0xFF0
 26110                           postinc0	equ	0xFEE
 26111                           plusw0	equ	0xFEB
 26112                           fsr0h	equ	0xFEA
 26113                           fsr0l	equ	0xFE9
 26114                           wreg	equ	0xFE8
 26115                           indf1	equ	0xFE7
 26116                           postinc1	equ	0xFE6
 26117                           postdec1	equ	0xFE5
 26118                           plusw1	equ	0xFE3
 26119                           fsr1h	equ	0xFE2
 26120                           fsr1l	equ	0xFE1
 26121                           indf2	equ	0xFDF
 26122                           postinc2	equ	0xFDE
 26123                           postdec2	equ	0xFDD
 26124                           plusw2	equ	0xFDB
 26125                           fsr2h	equ	0xFDA
 26126                           fsr2l	equ	0xFD9
 26127                           status	equ	0xFD8
 26128                           
 26129 ;; *************** function ___llmod *****************
 26130 ;; Defined at:
 26131 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 26132 ;; Parameters:    Size  Location     Type
 26133 ;;  dividend        4   31[BANK0 ] unsigned long 
 26134 ;;  divisor         4   35[BANK0 ] unsigned long 
 26135 ;; Auto vars:     Size  Location     Type
 26136 ;;  counter         1   39[BANK0 ] unsigned char 
 26137 ;; Return value:  Size  Location     Type
 26138 ;;                  4   31[BANK0 ] unsigned long 
 26139 ;; Registers used:
 26140 ;;		wreg, status,2, status,0
 26141 ;; Tracked objects:
 26142 ;;		On entry : F/0
 26143 ;;		On exit  : F/0
 26144 ;;		Unchanged: 0/0
 26145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26149 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26150 ;;Total ram usage:        9 bytes
 26151 ;; Hardware stack levels used:    1
 26152 ;; Hardware stack levels required when called:    5
 26153 ;; This function calls:
 26154 ;;		Nothing
 26155 ;; This function is called by:
 26156 ;;		_netChooseAdvertiseTime
 26157 ;; This function uses a non-reentrant model
 26158 ;;
 26159                           
 26160                           	psect	text127
 26161  006732                     __ptext127:
 26162                           	opt stack 0
 26163  006732                     ___llmod:
 26164                           	opt stack 20
 26165                           
 26166                           ; BSR set to: 0
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;incstack = 0
 26170  006732  5183               	movf	___llmod@divisor& (0+255),w,b
 26171  006734  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 26172  006736  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 26173  006738  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 26174  00673A  E023               	bz	l2545
 26175                           
 26176                           ; BSR set to: 0
 26177  00673C  0E01               	movlw	1
 26178  00673E  6F87               	movwf	___llmod@counter& (0+255),b
 26179  006740  D006               	goto	l15568
 26180  006742                     l15566:
 26181                           
 26182                           ; BSR set to: 0
 26183  006742  90D8               	bcf	status,0,c
 26184  006744  3783               	rlcf	___llmod@divisor& (0+255),f,b
 26185  006746  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 26186  006748  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 26187  00674A  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 26188  00674C  2B87               	incf	___llmod@counter& (0+255),f,b
 26189  00674E                     l15568:
 26190                           
 26191                           ; BSR set to: 0
 26192  00674E  AF86               	btfss	(___llmod@divisor+3)& (0+255),7,b
 26193  006750  D7F8               	goto	l15566
 26194  006752                     l15570:
 26195                           
 26196                           ; BSR set to: 0
 26197  006752  5183               	movf	___llmod@divisor& (0+255),w,b
 26198  006754  5D7F               	subwf	___llmod@dividend& (0+255),w,b
 26199  006756  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 26200  006758  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 26201  00675A  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 26202  00675C  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 26203  00675E  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 26204  006760  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 26205  006762  E308               	bnc	l15574
 26206                           
 26207                           ; BSR set to: 0
 26208  006764  5183               	movf	___llmod@divisor& (0+255),w,b
 26209  006766  5F7F               	subwf	___llmod@dividend& (0+255),f,b
 26210  006768  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 26211  00676A  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 26212  00676C  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 26213  00676E  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 26214  006770  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 26215  006772  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 26216  006774                     l15574:
 26217                           
 26218                           ; BSR set to: 0
 26219  006774  90D8               	bcf	status,0,c
 26220  006776  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 26221  006778  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 26222  00677A  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 26223  00677C  3383               	rrcf	___llmod@divisor& (0+255),f,b
 26224                           
 26225                           ; BSR set to: 0
 26226  00677E  2F87               	decfsz	___llmod@counter& (0+255),f,b
 26227  006780  D7E8               	goto	l15570
 26228  006782                     l2545:
 26229                           
 26230                           ; BSR set to: 0
 26231  006782  C07F  F07F         	movff	___llmod@dividend,?___llmod
 26232  006786  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
 26233  00678A  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
 26234  00678E  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
 26235                           
 26236                           ; BSR set to: 0
 26237  006792  0012               	return		;funcret
 26238  006794                     __end_of___llmod:
 26239                           	opt stack 0
 26240                           tblptru	equ	0xFF8
 26241                           tblptrh	equ	0xFF7
 26242                           tblptrl	equ	0xFF6
 26243                           tablat	equ	0xFF5
 26244                           prodh	equ	0xFF4
 26245                           prodl	equ	0xFF3
 26246                           intcon3	equ	0xFF0
 26247                           postinc0	equ	0xFEE
 26248                           plusw0	equ	0xFEB
 26249                           fsr0h	equ	0xFEA
 26250                           fsr0l	equ	0xFE9
 26251                           wreg	equ	0xFE8
 26252                           indf1	equ	0xFE7
 26253                           postinc1	equ	0xFE6
 26254                           postdec1	equ	0xFE5
 26255                           plusw1	equ	0xFE3
 26256                           fsr1h	equ	0xFE2
 26257                           fsr1l	equ	0xFE1
 26258                           indf2	equ	0xFDF
 26259                           postinc2	equ	0xFDE
 26260                           postdec2	equ	0xFDD
 26261                           plusw2	equ	0xFDB
 26262                           fsr2h	equ	0xFDA
 26263                           fsr2l	equ	0xFD9
 26264                           status	equ	0xFD8
 26265                           
 26266 ;; *************** function _MSTickGetDiffNow *****************
 26267 ;; Defined at:
 26268 ;;		line 28 in file "../TimeTick.c"
 26269 ;; Parameters:    Size  Location     Type
 26270 ;;  tick            8   47[BANK0 ] struct TickMS_t_def
 26271 ;; Auto vars:     Size  Location     Type
 26272 ;;  tdiff           8   67[BANK0 ] struct TickMS_t_def
 26273 ;;  tNow            8   59[BANK0 ] struct TickMS_t_def
 26274 ;;  diff            4   55[BANK0 ] unsigned long 
 26275 ;; Return value:  Size  Location     Type
 26276 ;;                  4   47[BANK0 ] unsigned long 
 26277 ;; Registers used:
 26278 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26279 ;; Tracked objects:
 26280 ;;		On entry : C/0
 26281 ;;		On exit  : F/0
 26282 ;;		Unchanged: 0/0
 26283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26284 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26285 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26287 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26288 ;;Total ram usage:       28 bytes
 26289 ;; Hardware stack levels used:    1
 26290 ;; Hardware stack levels required when called:    8
 26291 ;; This function calls:
 26292 ;;		_MSTickGet
 26293 ;; This function is called by:
 26294 ;;		_RouteManagerTask
 26295 ;;		_BeaconManagerTask
 26296 ;;		_TunnelManagerGetTunnel
 26297 ;;		_isKnownPacket
 26298 ;;		_TransportManagerTask
 26299 ;;		_NetworkManagerTask
 26300 ;; This function uses a non-reentrant model
 26301 ;;
 26302                           
 26303                           	psect	text128
 26304  0060F2                     __ptext128:
 26305                           	opt stack 0
 26306  0060F2                     _MSTickGetDiffNow:
 26307                           	opt stack 17
 26308                           
 26309                           ;TimeTick.c: 31: TickMS tdiff;
 26310                           ;TimeTick.c: 32: TickMS tNow=MSTickGet();
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;incstack = 0
 26314  0060F2  EC27  F038         	call	_MSTickGet	;wreg free
 26315  0060F6  EE20  F09B         	lfsr	2,MSTickGetDiffNow@tNow
 26316  0060FA  0E07               	movlw	7
 26317  0060FC                     u18601:
 26318  0060FC  CFEB FFDB          	movff	plusw0,plusw2
 26319  006100  06E8               	decf	wreg,f,c
 26320  006102  E2FC               	bc	u18601
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;TimeTick.c: 33: tdiff.msb=tNow.msb-tick.msb;
 26324  006104  5193               	movf	(MSTickGetDiffNow@tick+4)& (0+255),w,b
 26325  006106  5D9F               	subwf	(MSTickGetDiffNow@tNow+4)& (0+255),w,b
 26326  006108  6FA7               	movwf	(MSTickGetDiffNow@tdiff+4)& (0+255),b
 26327  00610A  5194               	movf	(MSTickGetDiffNow@tick+5)& (0+255),w,b
 26328  00610C  59A0               	subwfb	(MSTickGetDiffNow@tNow+5)& (0+255),w,b
 26329  00610E  6FA8               	movwf	(MSTickGetDiffNow@tdiff+5)& (0+255),b
 26330  006110  5195               	movf	(MSTickGetDiffNow@tick+6)& (0+255),w,b
 26331  006112  59A1               	subwfb	(MSTickGetDiffNow@tNow+6)& (0+255),w,b
 26332  006114  6FA9               	movwf	(MSTickGetDiffNow@tdiff+6)& (0+255),b
 26333  006116  5196               	movf	(MSTickGetDiffNow@tick+7)& (0+255),w,b
 26334  006118  59A2               	subwfb	(MSTickGetDiffNow@tNow+7)& (0+255),w,b
 26335  00611A  6FAA               	movwf	(MSTickGetDiffNow@tdiff+7)& (0+255),b
 26336                           
 26337                           ; BSR set to: 0
 26338                           ;TimeTick.c: 34: tdiff.lsb=tNow.lsb-tick.lsb;
 26339  00611C  518F               	movf	MSTickGetDiffNow@tick& (0+255),w,b
 26340  00611E  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 26341  006120  6FA3               	movwf	MSTickGetDiffNow@tdiff& (0+255),b
 26342  006122  5190               	movf	(MSTickGetDiffNow@tick+1)& (0+255),w,b
 26343  006124  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 26344  006126  6FA4               	movwf	(MSTickGetDiffNow@tdiff+1)& (0+255),b
 26345  006128  5191               	movf	(MSTickGetDiffNow@tick+2)& (0+255),w,b
 26346  00612A  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 26347  00612C  6FA5               	movwf	(MSTickGetDiffNow@tdiff+2)& (0+255),b
 26348  00612E  5192               	movf	(MSTickGetDiffNow@tick+3)& (0+255),w,b
 26349  006130  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 26350  006132  6FA6               	movwf	(MSTickGetDiffNow@tdiff+3)& (0+255),b
 26351                           
 26352                           ; BSR set to: 0
 26353                           ;TimeTick.c: 35: if(tdiff.lsb>tNow.lsb)
 26354  006134  51A3               	movf	MSTickGetDiffNow@tdiff& (0+255),w,b
 26355  006136  5D9B               	subwf	MSTickGetDiffNow@tNow& (0+255),w,b
 26356  006138  51A4               	movf	(MSTickGetDiffNow@tdiff+1)& (0+255),w,b
 26357  00613A  599C               	subwfb	(MSTickGetDiffNow@tNow+1)& (0+255),w,b
 26358  00613C  51A5               	movf	(MSTickGetDiffNow@tdiff+2)& (0+255),w,b
 26359  00613E  599D               	subwfb	(MSTickGetDiffNow@tNow+2)& (0+255),w,b
 26360  006140  51A6               	movf	(MSTickGetDiffNow@tdiff+3)& (0+255),w,b
 26361  006142  599E               	subwfb	(MSTickGetDiffNow@tNow+3)& (0+255),w,b
 26362  006144  E205               	bc	l15614
 26363                           
 26364                           ; BSR set to: 0
 26365                           ;TimeTick.c: 36: {
 26366                           ;TimeTick.c: 37: tdiff.msb--;
 26367  006146  07A7               	decf	(MSTickGetDiffNow@tdiff+4)& (0+255),f,b
 26368  006148  0E00               	movlw	0
 26369  00614A  5BA8               	subwfb	(MSTickGetDiffNow@tdiff+5)& (0+255),f,b
 26370  00614C  5BA9               	subwfb	(MSTickGetDiffNow@tdiff+6)& (0+255),f,b
 26371  00614E  5BAA               	subwfb	(MSTickGetDiffNow@tdiff+7)& (0+255),f,b
 26372  006150                     l15614:
 26373                           
 26374                           ; BSR set to: 0
 26375                           ;TimeTick.c: 38: }
 26376                           ;TimeTick.c: 39: diff=tdiff.lsb;
 26377  006150  C0A3  F097         	movff	MSTickGetDiffNow@tdiff,MSTickGetDiffNow@diff
 26378  006154  C0A4  F098         	movff	MSTickGetDiffNow@tdiff+1,MSTickGetDiffNow@diff+1
 26379  006158  C0A5  F099         	movff	MSTickGetDiffNow@tdiff+2,MSTickGetDiffNow@diff+2
 26380  00615C  C0A6  F09A         	movff	MSTickGetDiffNow@tdiff+3,MSTickGetDiffNow@diff+3
 26381                           
 26382                           ; BSR set to: 0
 26383                           ;TimeTick.c: 41: return(diff);
 26384  006160  C097  F08F         	movff	MSTickGetDiffNow@diff,?_MSTickGetDiffNow
 26385  006164  C098  F090         	movff	MSTickGetDiffNow@diff+1,?_MSTickGetDiffNow+1
 26386  006168  C099  F091         	movff	MSTickGetDiffNow@diff+2,?_MSTickGetDiffNow+2
 26387  00616C  C09A  F092         	movff	MSTickGetDiffNow@diff+3,?_MSTickGetDiffNow+3
 26388                           
 26389                           ; BSR set to: 0
 26390  006170  0012               	return		;funcret
 26391  006172                     __end_of_MSTickGetDiffNow:
 26392                           	opt stack 0
 26393                           tblptru	equ	0xFF8
 26394                           tblptrh	equ	0xFF7
 26395                           tblptrl	equ	0xFF6
 26396                           tablat	equ	0xFF5
 26397                           prodh	equ	0xFF4
 26398                           prodl	equ	0xFF3
 26399                           intcon3	equ	0xFF0
 26400                           postinc0	equ	0xFEE
 26401                           plusw0	equ	0xFEB
 26402                           fsr0h	equ	0xFEA
 26403                           fsr0l	equ	0xFE9
 26404                           wreg	equ	0xFE8
 26405                           indf1	equ	0xFE7
 26406                           postinc1	equ	0xFE6
 26407                           postdec1	equ	0xFE5
 26408                           plusw1	equ	0xFE3
 26409                           fsr1h	equ	0xFE2
 26410                           fsr1l	equ	0xFE1
 26411                           indf2	equ	0xFDF
 26412                           postinc2	equ	0xFDE
 26413                           postdec2	equ	0xFDD
 26414                           plusw2	equ	0xFDB
 26415                           fsr2h	equ	0xFDA
 26416                           fsr2l	equ	0xFD9
 26417                           status	equ	0xFD8
 26418                           
 26419 ;; *************** function _MSTickGet *****************
 26420 ;; Defined at:
 26421 ;;		line 71 in file "../TimeTick.c"
 26422 ;; Parameters:    Size  Location     Type
 26423 ;;		None
 26424 ;; Auto vars:     Size  Location     Type
 26425 ;;  tNow            8   39[BANK0 ] struct TickMS_t_def
 26426 ;; Return value:  Size  Location     Type
 26427 ;;                  8   31[BANK0 ] struct TickMS_t_def
 26428 ;; Registers used:
 26429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26430 ;; Tracked objects:
 26431 ;;		On entry : C/0
 26432 ;;		On exit  : F/0
 26433 ;;		Unchanged: 0/0
 26434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26436 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26438 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26439 ;;Total ram usage:       16 bytes
 26440 ;; Hardware stack levels used:    1
 26441 ;; Hardware stack levels required when called:    7
 26442 ;; This function calls:
 26443 ;;		_TimerEnterCritical
 26444 ;;		_TimerExitCritical
 26445 ;;		_memcpy
 26446 ;; This function is called by:
 26447 ;;		_RouteManagerInit
 26448 ;;		_RouteManagerTask
 26449 ;;		_BeaconManagerTask
 26450 ;;		_netChooseAdvertiseTime
 26451 ;;		_BroadcastManagerTask
 26452 ;;		_BroadcastManagerDelaySend
 26453 ;;		_TunnelManagerSetTunnel
 26454 ;;		_isKnownPacket
 26455 ;;		_TransportManagerTask
 26456 ;;		_NetworkManagerTask
 26457 ;;		_IsNetworkDevice
 26458 ;;		_MSTickGetDiffNow
 26459 ;; This function uses a non-reentrant model
 26460 ;;
 26461                           
 26462                           	psect	text129
 26463  00704E                     __ptext129:
 26464                           	opt stack 0
 26465  00704E                     _MSTickGet:
 26466                           	opt stack 17
 26467                           
 26468                           ;TimeTick.c: 73: TickMS tNow;
 26469                           ;TimeTick.c: 74: TimerEnterCritical();
 26470                           
 26471                           ; BSR set to: 0
 26472                           ;incstack = 0
 26473  00704E  EC19  F03B         	call	_TimerEnterCritical	;wreg free
 26474                           
 26475                           ;TimeTick.c: 75: memcpy(&tNow,&Tick_MS,sizeof(Tick_MS));
 26476  007052  0E87               	movlw	low MSTickGet@tNow
 26477  007054  0100               	movlb	0	; () banked
 26478  007056  6F75               	movwf	memcpy@d1& (0+255),b
 26479  007058  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 26480  00705A  0EC4               	movlw	low _Tick_MS
 26481  00705C  6F77               	movwf	memcpy@s1& (0+255),b
 26482  00705E  0E02               	movlw	high _Tick_MS
 26483  007060  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 26484  007062  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 26485  007064  0E08               	movlw	8
 26486  007066  6F79               	movwf	memcpy@n& (0+255),b
 26487  007068  EC05  F035         	call	_memcpy	;wreg free
 26488                           
 26489                           ; BSR set to: 0
 26490                           ;TimeTick.c: 76: TimerExitCritical();
 26491  00706C  EC15  F03B         	call	_TimerExitCritical	;wreg free
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;TimeTick.c: 77: return(tNow);
 26495  007070  EE20  F087         	lfsr	2,MSTickGet@tNow
 26496  007074  EE00  F07F         	lfsr	0,?_MSTickGet
 26497  007078  0E07               	movlw	7
 26498  00707A                     u18461:
 26499  00707A  CFDB FFEB          	movff	plusw2,plusw0
 26500  00707E  06E8               	decf	wreg,f,c
 26501  007080  E2FC               	bc	u18461
 26502                           
 26503                           ; BSR set to: 0
 26504  007082  0012               	return		;funcret
 26505  007084                     __end_of_MSTickGet:
 26506                           	opt stack 0
 26507                           tblptru	equ	0xFF8
 26508                           tblptrh	equ	0xFF7
 26509                           tblptrl	equ	0xFF6
 26510                           tablat	equ	0xFF5
 26511                           prodh	equ	0xFF4
 26512                           prodl	equ	0xFF3
 26513                           intcon3	equ	0xFF0
 26514                           postinc0	equ	0xFEE
 26515                           plusw0	equ	0xFEB
 26516                           fsr0h	equ	0xFEA
 26517                           fsr0l	equ	0xFE9
 26518                           wreg	equ	0xFE8
 26519                           indf1	equ	0xFE7
 26520                           postinc1	equ	0xFE6
 26521                           postdec1	equ	0xFE5
 26522                           plusw1	equ	0xFE3
 26523                           fsr1h	equ	0xFE2
 26524                           fsr1l	equ	0xFE1
 26525                           indf2	equ	0xFDF
 26526                           postinc2	equ	0xFDE
 26527                           postdec2	equ	0xFDD
 26528                           plusw2	equ	0xFDB
 26529                           fsr2h	equ	0xFDA
 26530                           fsr2l	equ	0xFD9
 26531                           status	equ	0xFD8
 26532                           
 26533 ;; *************** function _TimerExitCritical *****************
 26534 ;; Defined at:
 26535 ;;		line 157 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 26536 ;; Parameters:    Size  Location     Type
 26537 ;;		None
 26538 ;; Auto vars:     Size  Location     Type
 26539 ;;		None
 26540 ;; Return value:  Size  Location     Type
 26541 ;;                  1    wreg      void 
 26542 ;; Registers used:
 26543 ;;		cstack
 26544 ;; Tracked objects:
 26545 ;;		On entry : F/0
 26546 ;;		On exit  : F/0
 26547 ;;		Unchanged: F/0
 26548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26553 ;;Total ram usage:        0 bytes
 26554 ;; Hardware stack levels used:    1
 26555 ;; Hardware stack levels required when called:    6
 26556 ;; This function calls:
 26557 ;;		_TimerEnable
 26558 ;; This function is called by:
 26559 ;;		_MSTickGet
 26560 ;; This function uses a non-reentrant model
 26561 ;;
 26562                           
 26563                           	psect	text130
 26564  00762A                     __ptext130:
 26565                           	opt stack 0
 26566  00762A                     _TimerExitCritical:
 26567                           	opt stack 17
 26568                           
 26569                           ; BSR set to: 0
 26570                           ;symbol.c: 159: TimerEnable();
 26571                           
 26572                           ; BSR set to: 0
 26573                           ;incstack = 0
 26574  00762A  EF17  F03B         	goto	_TimerEnable	;wreg free
 26575  00762E                     __end_of_TimerExitCritical:
 26576                           	opt stack 0
 26577                           tblptru	equ	0xFF8
 26578                           tblptrh	equ	0xFF7
 26579                           tblptrl	equ	0xFF6
 26580                           tablat	equ	0xFF5
 26581                           prodh	equ	0xFF4
 26582                           prodl	equ	0xFF3
 26583                           intcon3	equ	0xFF0
 26584                           postinc0	equ	0xFEE
 26585                           plusw0	equ	0xFEB
 26586                           fsr0h	equ	0xFEA
 26587                           fsr0l	equ	0xFE9
 26588                           wreg	equ	0xFE8
 26589                           indf1	equ	0xFE7
 26590                           postinc1	equ	0xFE6
 26591                           postdec1	equ	0xFE5
 26592                           plusw1	equ	0xFE3
 26593                           fsr1h	equ	0xFE2
 26594                           fsr1l	equ	0xFE1
 26595                           indf2	equ	0xFDF
 26596                           postinc2	equ	0xFDE
 26597                           postdec2	equ	0xFDD
 26598                           plusw2	equ	0xFDB
 26599                           fsr2h	equ	0xFDA
 26600                           fsr2l	equ	0xFD9
 26601                           status	equ	0xFD8
 26602                           
 26603 ;; *************** function _TimerEnable *****************
 26604 ;; Defined at:
 26605 ;;		line 147 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 26606 ;; Parameters:    Size  Location     Type
 26607 ;;		None
 26608 ;; Auto vars:     Size  Location     Type
 26609 ;;		None
 26610 ;; Return value:  Size  Location     Type
 26611 ;;                  1    wreg      void 
 26612 ;; Registers used:
 26613 ;;		None
 26614 ;; Tracked objects:
 26615 ;;		On entry : F/0
 26616 ;;		On exit  : F/0
 26617 ;;		Unchanged: F/0
 26618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26623 ;;Total ram usage:        0 bytes
 26624 ;; Hardware stack levels used:    1
 26625 ;; Hardware stack levels required when called:    5
 26626 ;; This function calls:
 26627 ;;		Nothing
 26628 ;; This function is called by:
 26629 ;;		_TimerExitCritical
 26630 ;; This function uses a non-reentrant model
 26631 ;;
 26632                           
 26633                           	psect	text131
 26634  00762E                     __ptext131:
 26635                           	opt stack 0
 26636  00762E                     _TimerEnable:
 26637                           	opt stack 17
 26638                           
 26639                           ; BSR set to: 0
 26640                           ;symbol.c: 149: INTCONbits.TMR0IE=1;
 26641                           
 26642                           ; BSR set to: 0
 26643                           ;incstack = 0
 26644  00762E  8AF2               	bsf	intcon,5,c	;volatile
 26645                           
 26646                           ; BSR set to: 0
 26647  007630  0012               	return		;funcret
 26648  007632                     __end_of_TimerEnable:
 26649                           	opt stack 0
 26650                           tblptru	equ	0xFF8
 26651                           tblptrh	equ	0xFF7
 26652                           tblptrl	equ	0xFF6
 26653                           tablat	equ	0xFF5
 26654                           prodh	equ	0xFF4
 26655                           prodl	equ	0xFF3
 26656                           intcon	equ	0xFF2
 26657                           intcon3	equ	0xFF0
 26658                           postinc0	equ	0xFEE
 26659                           plusw0	equ	0xFEB
 26660                           fsr0h	equ	0xFEA
 26661                           fsr0l	equ	0xFE9
 26662                           wreg	equ	0xFE8
 26663                           indf1	equ	0xFE7
 26664                           postinc1	equ	0xFE6
 26665                           postdec1	equ	0xFE5
 26666                           plusw1	equ	0xFE3
 26667                           fsr1h	equ	0xFE2
 26668                           fsr1l	equ	0xFE1
 26669                           indf2	equ	0xFDF
 26670                           postinc2	equ	0xFDE
 26671                           postdec2	equ	0xFDD
 26672                           plusw2	equ	0xFDB
 26673                           fsr2h	equ	0xFDA
 26674                           fsr2l	equ	0xFD9
 26675                           status	equ	0xFD8
 26676                           
 26677 ;; *************** function _TimerEnterCritical *****************
 26678 ;; Defined at:
 26679 ;;		line 152 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 26680 ;; Parameters:    Size  Location     Type
 26681 ;;		None
 26682 ;; Auto vars:     Size  Location     Type
 26683 ;;		None
 26684 ;; Return value:  Size  Location     Type
 26685 ;;                  1    wreg      void 
 26686 ;; Registers used:
 26687 ;;		cstack
 26688 ;; Tracked objects:
 26689 ;;		On entry : C/0
 26690 ;;		On exit  : C/0
 26691 ;;		Unchanged: C/0
 26692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26697 ;;Total ram usage:        0 bytes
 26698 ;; Hardware stack levels used:    1
 26699 ;; Hardware stack levels required when called:    6
 26700 ;; This function calls:
 26701 ;;		_TimerDisable
 26702 ;; This function is called by:
 26703 ;;		_MSTickGet
 26704 ;; This function uses a non-reentrant model
 26705 ;;
 26706                           
 26707                           	psect	text132
 26708  007632                     __ptext132:
 26709                           	opt stack 0
 26710  007632                     _TimerEnterCritical:
 26711                           	opt stack 17
 26712                           
 26713                           ;symbol.c: 154: TimerDisable();
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;incstack = 0
 26717  007632  EF1B  F03B         	goto	_TimerDisable	;wreg free
 26718  007636                     __end_of_TimerEnterCritical:
 26719                           	opt stack 0
 26720                           tblptru	equ	0xFF8
 26721                           tblptrh	equ	0xFF7
 26722                           tblptrl	equ	0xFF6
 26723                           tablat	equ	0xFF5
 26724                           prodh	equ	0xFF4
 26725                           prodl	equ	0xFF3
 26726                           intcon	equ	0xFF2
 26727                           intcon3	equ	0xFF0
 26728                           postinc0	equ	0xFEE
 26729                           plusw0	equ	0xFEB
 26730                           fsr0h	equ	0xFEA
 26731                           fsr0l	equ	0xFE9
 26732                           wreg	equ	0xFE8
 26733                           indf1	equ	0xFE7
 26734                           postinc1	equ	0xFE6
 26735                           postdec1	equ	0xFE5
 26736                           plusw1	equ	0xFE3
 26737                           fsr1h	equ	0xFE2
 26738                           fsr1l	equ	0xFE1
 26739                           indf2	equ	0xFDF
 26740                           postinc2	equ	0xFDE
 26741                           postdec2	equ	0xFDD
 26742                           plusw2	equ	0xFDB
 26743                           fsr2h	equ	0xFDA
 26744                           fsr2l	equ	0xFD9
 26745                           status	equ	0xFD8
 26746                           
 26747 ;; *************** function _TimerDisable *****************
 26748 ;; Defined at:
 26749 ;;		line 143 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 26750 ;; Parameters:    Size  Location     Type
 26751 ;;		None
 26752 ;; Auto vars:     Size  Location     Type
 26753 ;;		None
 26754 ;; Return value:  Size  Location     Type
 26755 ;;                  1    wreg      void 
 26756 ;; Registers used:
 26757 ;;		None
 26758 ;; Tracked objects:
 26759 ;;		On entry : C/0
 26760 ;;		On exit  : C/0
 26761 ;;		Unchanged: C/0
 26762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26767 ;;Total ram usage:        0 bytes
 26768 ;; Hardware stack levels used:    1
 26769 ;; Hardware stack levels required when called:    5
 26770 ;; This function calls:
 26771 ;;		Nothing
 26772 ;; This function is called by:
 26773 ;;		_TimerEnterCritical
 26774 ;; This function uses a non-reentrant model
 26775 ;;
 26776                           
 26777                           	psect	text133
 26778  007636                     __ptext133:
 26779                           	opt stack 0
 26780  007636                     _TimerDisable:
 26781                           	opt stack 17
 26782                           
 26783                           ;symbol.c: 145: INTCONbits.TMR0IE=0;
 26784                           
 26785                           ;incstack = 0
 26786  007636  9AF2               	bcf	intcon,5,c	;volatile
 26787  007638  0012               	return		;funcret
 26788  00763A                     __end_of_TimerDisable:
 26789                           	opt stack 0
 26790                           tblptru	equ	0xFF8
 26791                           tblptrh	equ	0xFF7
 26792                           tblptrl	equ	0xFF6
 26793                           tablat	equ	0xFF5
 26794                           prodh	equ	0xFF4
 26795                           prodl	equ	0xFF3
 26796                           intcon	equ	0xFF2
 26797                           intcon3	equ	0xFF0
 26798                           postinc0	equ	0xFEE
 26799                           plusw0	equ	0xFEB
 26800                           fsr0h	equ	0xFEA
 26801                           fsr0l	equ	0xFE9
 26802                           wreg	equ	0xFE8
 26803                           indf1	equ	0xFE7
 26804                           postinc1	equ	0xFE6
 26805                           postdec1	equ	0xFE5
 26806                           plusw1	equ	0xFE3
 26807                           fsr1h	equ	0xFE2
 26808                           fsr1l	equ	0xFE1
 26809                           indf2	equ	0xFDF
 26810                           postinc2	equ	0xFDE
 26811                           postdec2	equ	0xFDD
 26812                           plusw2	equ	0xFDB
 26813                           fsr2h	equ	0xFDA
 26814                           fsr2l	equ	0xFD9
 26815                           status	equ	0xFD8
 26816                           
 26817 ;; *************** function _MiMAC_ReceivedPacket *****************
 26818 ;; Defined at:
 26819 ;;		line 927 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 26820 ;; Parameters:    Size  Location     Type
 26821 ;;		None
 26822 ;; Auto vars:     Size  Location     Type
 26823 ;;  addr            2   80[BANK0 ] struct addr_t_def
 26824 ;;  FrameCounter    4   82[BANK0 ] unsigned long 
 26825 ;;  PayloadIndex    1   87[BANK0 ] unsigned char 
 26826 ;;  j               1   86[BANK0 ] unsigned char 
 26827 ;;  currentTick     4   76[BANK0 ] struct MIWI_TICK_t
 26828 ;;  i               1   88[BANK0 ] unsigned char 
 26829 ;; Return value:  Size  Location     Type
 26830 ;;                  1    wreg      unsigned char 
 26831 ;; Registers used:
 26832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26833 ;; Tracked objects:
 26834 ;;		On entry : C/1
 26835 ;;		On exit  : E/0
 26836 ;;		Unchanged: 0/0
 26837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26840 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26841 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26842 ;;Total ram usage:       21 bytes
 26843 ;; Hardware stack levels used:    1
 26844 ;; Hardware stack levels required when called:    8
 26845 ;; This function calls:
 26846 ;;		_CCM_Dec
 26847 ;;		_MiWi_TickGetMs
 26848 ;;		_isSameAddress
 26849 ;;		_memcpy
 26850 ;; This function is called by:
 26851 ;;		_MiApp_MessageAvailable
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text134
 26856  000F5E                     __ptext134:
 26857                           	opt stack 0
 26858  000F5E                     _MiMAC_ReceivedPacket:
 26859                           	opt stack 21
 26860                           
 26861                           ;drv_mrf_miwi_mesh_89xa.c: 929: uint8_t i;
 26862                           ;drv_mrf_miwi_mesh_89xa.c: 930: MIWI_TICK currentTick;
 26863                           ;drv_mrf_miwi_mesh_89xa.c: 934: for(i = 0; i < 5; i++)
 26864                           
 26865                           ;incstack = 0
 26866  000F5E  0100               	movlb	0	; () banked
 26867  000F60  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 26868  000F62                     l17676:
 26869                           
 26870                           ; BSR set to: 0
 26871                           ;drv_mrf_miwi_mesh_89xa.c: 935: {
 26872                           ;drv_mrf_miwi_mesh_89xa.c: 936: currentTick = MiWi_TickGetMs();
 26873  000F62  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 26874  000F66  C07F  F0AC         	movff	?_MiWi_TickGetMs,MiMAC_ReceivedPacket@currentTick
 26875  000F6A  C080  F0AD         	movff	?_MiWi_TickGetMs+1,MiMAC_ReceivedPacket@currentTick+1
 26876  000F6E  C081  F0AE         	movff	?_MiWi_TickGetMs+2,MiMAC_ReceivedPacket@currentTick+2
 26877  000F72  C082  F0AF         	movff	?_MiWi_TickGetMs+3,MiMAC_ReceivedPacket@currentTick+3
 26878                           
 26879                           ; BSR set to: 0
 26880                           ;drv_mrf_miwi_mesh_89xa.c: 937: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].st
      +                          artTick.Val) &&
 26881                           ;drv_mrf_miwi_mesh_89xa.c: 938: ((currentTick.Val - AckInfo[i].startTick.Val) > 1000) )
 26882  000F76  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 26883  000F78  0D06               	mullw	6
 26884  000F7A  0E00               	movlw	low _AckInfo
 26885  000F7C  24F3               	addwf	prodl,w,c
 26886  000F7E  6ED9               	movwf	fsr2l,c
 26887  000F80  0E03               	movlw	high _AckInfo
 26888  000F82  20F4               	addwfc	prodh,w,c
 26889  000F84  6EDA               	movwf	fsr2h,c
 26890  000F86  50DF               	movf	indf2,w,c
 26891  000F88  E03E               	bz	l17686
 26892                           
 26893                           ; BSR set to: 0
 26894  000F8A  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 26895  000F8C  0D06               	mullw	6
 26896  000F8E  0E02               	movlw	low (_AckInfo+2)
 26897  000F90  24F3               	addwf	prodl,w,c
 26898  000F92  6ED9               	movwf	fsr2l,c
 26899  000F94  0E03               	movlw	high (_AckInfo+2)
 26900  000F96  20F4               	addwfc	prodh,w,c
 26901  000F98  6EDA               	movwf	fsr2h,c
 26902  000F9A  51AC               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 26903  000F9C  5CDE               	subwf	postinc2,w,c
 26904  000F9E  51AD               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 26905  000FA0  58DE               	subwfb	postinc2,w,c
 26906  000FA2  51AE               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 26907  000FA4  58DE               	subwfb	postinc2,w,c
 26908  000FA6  51AF               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 26909  000FA8  58DE               	subwfb	postinc2,w,c
 26910  000FAA  E22D               	bc	l17686
 26911                           
 26912                           ; BSR set to: 0
 26913  000FAC  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 26914  000FAE  0D06               	mullw	6
 26915  000FB0  0E02               	movlw	low (_AckInfo+2)
 26916  000FB2  24F3               	addwf	prodl,w,c
 26917  000FB4  6ED9               	movwf	fsr2l,c
 26918  000FB6  0E03               	movlw	high (_AckInfo+2)
 26919  000FB8  20F4               	addwfc	prodh,w,c
 26920  000FBA  6EDA               	movwf	fsr2h,c
 26921  000FBC  CFDE F0A4          	movff	postinc2,??_MiMAC_ReceivedPacket
 26922  000FC0  CFDE F0A5          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 26923  000FC4  CFDE F0A6          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 26924  000FC8  CFDE F0A7          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 26925  000FCC  51A4               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 26926  000FCE  5DAC               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 26927  000FD0  6FA8               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 26928  000FD2  51A5               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 26929  000FD4  59AD               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 26930  000FD6  6FA9               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 26931  000FD8  51A6               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 26932  000FDA  59AE               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 26933  000FDC  6FAA               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 26934  000FDE  51A7               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 26935  000FE0  59AF               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 26936  000FE2  6FAB               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 26937  000FE4  51AB               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 26938  000FE6  11AA               	iorwf	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 26939  000FE8  E105               	bnz	u21790
 26940  000FEA  0EE9               	movlw	233
 26941  000FEC  5DA8               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 26942  000FEE  0E03               	movlw	3
 26943  000FF0  59A9               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 26944  000FF2  E309               	bnc	l17686
 26945  000FF4                     u21790:
 26946                           
 26947                           ; BSR set to: 0
 26948                           ;drv_mrf_miwi_mesh_89xa.c: 939: {
 26949                           ;drv_mrf_miwi_mesh_89xa.c: 940: AckInfo[i].Valid = 0;
 26950  000FF4  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 26951  000FF6  0D06               	mullw	6
 26952  000FF8  0E00               	movlw	low _AckInfo
 26953  000FFA  24F3               	addwf	prodl,w,c
 26954  000FFC  6ED9               	movwf	fsr2l,c
 26955  000FFE  0E03               	movlw	high _AckInfo
 26956  001000  20F4               	addwfc	prodh,w,c
 26957  001002  6EDA               	movwf	fsr2h,c
 26958  001004  6ADF               	clrf	indf2,c
 26959  001006                     l17686:
 26960                           
 26961                           ; BSR set to: 0
 26962  001006  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 26963                           
 26964                           ; BSR set to: 0
 26965  001008  0E04               	movlw	4
 26966  00100A  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 26967  00100C  D7AA               	goto	l17676
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;drv_mrf_miwi_mesh_89xa.c: 941: }
 26971                           ;drv_mrf_miwi_mesh_89xa.c: 942: }
 26972                           ;drv_mrf_miwi_mesh_89xa.c: 945: if( ReceivedBankIndex != 0xFF )
 26973  00100E  283E               	incf	_ReceivedBankIndex,w,c
 26974  001010  E001               	bz	l799
 26975                           
 26976                           ; BSR set to: 0
 26977                           ;drv_mrf_miwi_mesh_89xa.c: 946: {
 26978                           ;drv_mrf_miwi_mesh_89xa.c: 947: return 0;
 26979  001012  0C00               	retlw	0
 26980  001014                     l799:
 26981                           
 26982                           ; BSR set to: 0
 26983                           ;drv_mrf_miwi_mesh_89xa.c: 948: }
 26984                           ;drv_mrf_miwi_mesh_89xa.c: 950: for(i = 0; i < 2; i++)
 26985  001014  6BB8               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 26986  001016                     l17700:
 26987                           
 26988                           ; BSR set to: 0
 26989                           ;drv_mrf_miwi_mesh_89xa.c: 951: {
 26990                           ;drv_mrf_miwi_mesh_89xa.c: 952: if( RxPacket[i].flags.bits.Valid )
 26991  001016  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 26992  001018  0D47               	mullw	71
 26993  00101A  0E2C               	movlw	low _RxPacket
 26994  00101C  24F3               	addwf	prodl,w,c
 26995  00101E  6ED9               	movwf	fsr2l,c
 26996  001020  0E02               	movlw	high _RxPacket
 26997  001022  20F4               	addwfc	prodh,w,c
 26998  001024  6EDA               	movwf	fsr2h,c
 26999  001026  A0DF               	btfss	indf2,0,c
 27000  001028  D15D               	goto	l17788
 27001                           
 27002                           ; BSR set to: 2
 27003                           ;drv_mrf_miwi_mesh_89xa.c: 953: {
 27004                           ;drv_mrf_miwi_mesh_89xa.c: 954: uint8_t PayloadIndex;
 27005                           ;drv_mrf_miwi_mesh_89xa.c: 955: uint8_t j;
 27006                           ;drv_mrf_miwi_mesh_89xa.c: 957: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 27007  00102A  0100               	movlb	0	; () banked
 27008  00102C  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27009  00102E  0D47               	mullw	71
 27010  001030  0E2D               	movlw	low (_RxPacket+1)
 27011  001032  24F3               	addwf	prodl,w,c
 27012  001034  6ED9               	movwf	fsr2l,c
 27013  001036  0E02               	movlw	high (_RxPacket+1)
 27014  001038  20F4               	addwfc	prodh,w,c
 27015  00103A  6EDA               	movwf	fsr2h,c
 27016  00103C  50DF               	movf	indf2,w,c
 27017  00103E  0101               	movlb	1	; () banked
 27018  001040  6FC8               	movwf	_MACRxPacket& (0+255),b
 27019                           
 27020                           ;drv_mrf_miwi_mesh_89xa.c: 958: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 27021  001042  0100               	movlb	0	; () banked
 27022  001044  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27023  001046  0D47               	mullw	71
 27024  001048  0E6D               	movlw	low (_RxPacket+65)
 27025  00104A  24F3               	addwf	prodl,w,c
 27026  00104C  6ED9               	movwf	fsr2l,c
 27027  00104E  0E02               	movlw	high (_RxPacket+65)
 27028  001050  20F4               	addwfc	prodh,w,c
 27029  001052  6EDA               	movwf	fsr2h,c
 27030  001054  50DF               	movf	indf2,w,c
 27031  001056  0101               	movlb	1	; () banked
 27032  001058  6FCD               	movwf	(_MACRxPacket+5)& (0+255),b
 27033                           
 27034                           ; BSR set to: 1
 27035                           ;drv_mrf_miwi_mesh_89xa.c: 959: PayloadIndex = 2;
 27036  00105A  0E02               	movlw	2
 27037  00105C  0100               	movlb	0	; () banked
 27038  00105E  6FB7               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 27039                           
 27040                           ; BSR set to: 0
 27041                           ;drv_mrf_miwi_mesh_89xa.c: 961: if( MACRxPacket.flags.bits.destPrsnt )
 27042  001060  0101               	movlb	1	; () banked
 27043  001062  ADC8               	btfss	_MACRxPacket& (0+255),6,b
 27044  001064  D01A               	goto	l804
 27045                           
 27046                           ; BSR set to: 1
 27047                           ;drv_mrf_miwi_mesh_89xa.c: 962: {
 27048                           ;drv_mrf_miwi_mesh_89xa.c: 963: memcpy((uint8_t*)&MACRxPacket.DestPANID,(uint8_t*)&RxPac
      +                          ket[i].Payload[PayloadIndex],2);
 27049  001066  0ED2               	movlw	low (_MACRxPacket+10)
 27050  001068  0100               	movlb	0	; () banked
 27051  00106A  6F75               	movwf	memcpy@d1& (0+255),b
 27052  00106C  0E01               	movlw	high (_MACRxPacket+10)
 27053  00106E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27054  001070  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27055  001072  0D47               	mullw	71
 27056  001074  0E2F               	movlw	low (_RxPacket+3)
 27057  001076  24F3               	addwf	prodl,w,c
 27058  001078  6F77               	movwf	memcpy@s1& (0+255),b
 27059  00107A  0E02               	movlw	high (_RxPacket+3)
 27060  00107C  20F4               	addwfc	prodh,w,c
 27061  00107E  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 27062  001080  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27063  001082  0E02               	movlw	2
 27064  001084  6F79               	movwf	memcpy@n& (0+255),b
 27065  001086  EC05  F035         	call	_memcpy	;wreg free
 27066                           
 27067                           ; BSR set to: 0
 27068                           ;drv_mrf_miwi_mesh_89xa.c: 964: PayloadIndex+=2;
 27069  00108A  0E02               	movlw	2
 27070  00108C  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 27071                           
 27072                           ; BSR set to: 0
 27073                           ;drv_mrf_miwi_mesh_89xa.c: 966: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 27074  00108E  3036               	rrcf	_MACInitParams,w,c
 27075  001090  32E8               	rrcf	wreg,f,c
 27076  001092  32E8               	rrcf	wreg,f,c
 27077  001094  0B0F               	andlw	15
 27078  001096  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 27079                           
 27080                           ;drv_mrf_miwi_mesh_89xa.c: 967: }else
 27081  001098  D002               	goto	l805
 27082  00109A                     l804:
 27083                           
 27084                           ; BSR set to: 1
 27085                           ;drv_mrf_miwi_mesh_89xa.c: 968: {
 27086                           ;drv_mrf_miwi_mesh_89xa.c: 969: MACRxPacket.DestPANID=0xffff;
 27087  00109A  69D2               	setf	(_MACRxPacket+10)& (0+255),b
 27088  00109C  69D3               	setf	(_MACRxPacket+11)& (0+255),b
 27089  00109E                     l805:
 27090                           
 27091                           ;drv_mrf_miwi_mesh_89xa.c: 970: }
 27092                           ;drv_mrf_miwi_mesh_89xa.c: 972: if( MACRxPacket.flags.bits.sourcePrsnt )
 27093  00109E  0101               	movlb	1	; () banked
 27094  0010A0  AFC8               	btfss	_MACRxPacket& (0+255),7,b
 27095  0010A2  D03C               	goto	l806
 27096                           
 27097                           ; BSR set to: 1
 27098                           ;drv_mrf_miwi_mesh_89xa.c: 973: {
 27099                           ;drv_mrf_miwi_mesh_89xa.c: 974: memcpy((uint8_t*)&MACRxPacket.SourcePANID,(uint8_t*)&RxP
      +                          acket[i].Payload[PayloadIndex],2);
 27100  0010A4  0ED0               	movlw	low (_MACRxPacket+8)
 27101  0010A6  0100               	movlb	0	; () banked
 27102  0010A8  6F75               	movwf	memcpy@d1& (0+255),b
 27103  0010AA  0E01               	movlw	high (_MACRxPacket+8)
 27104  0010AC  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 27105  0010AE  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27106  0010B0  0D47               	mullw	71
 27107  0010B2  0E2C               	movlw	low _RxPacket
 27108  0010B4  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27109  0010B6  0E02               	movlw	high _RxPacket
 27110  0010B8  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 27111  0010BA  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27112  0010BC  0E00               	movlw	0
 27113  0010BE  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27114  0010C0  50F3               	movf	prodl,w,c
 27115  0010C2  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27116  0010C4  50F4               	movf	prodh,w,c
 27117  0010C6  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27118  0010C8  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27119  0010CA  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27120  0010CC  6F77               	movwf	memcpy@s1& (0+255),b
 27121  0010CE  0E00               	movlw	0
 27122  0010D0  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 27123  0010D2  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 27124  0010D4  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27125  0010D6  0E02               	movlw	2
 27126  0010D8  6F79               	movwf	memcpy@n& (0+255),b
 27127  0010DA  EC05  F035         	call	_memcpy	;wreg free
 27128                           
 27129                           ; BSR set to: 0
 27130                           ;drv_mrf_miwi_mesh_89xa.c: 975: PayloadIndex+=2;
 27131  0010DE  0E02               	movlw	2
 27132  0010E0  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 27133                           
 27134                           ; BSR set to: 0
 27135                           ;drv_mrf_miwi_mesh_89xa.c: 977: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Pay
      +                          load[PayloadIndex]);
 27136  0010E2  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27137  0010E4  0D47               	mullw	71
 27138  0010E6  0E2C               	movlw	low _RxPacket
 27139  0010E8  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27140  0010EA  0E02               	movlw	high _RxPacket
 27141  0010EC  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 27142  0010EE  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27143  0010F0  0E00               	movlw	0
 27144  0010F2  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27145  0010F4  50F3               	movf	prodl,w,c
 27146  0010F6  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27147  0010F8  50F4               	movf	prodh,w,c
 27148  0010FA  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27149  0010FC  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27150  0010FE  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27151  001100  0101               	movlb	1	; () banked
 27152  001102  6FC9               	movwf	(_MACRxPacket+1)& (0+255),b
 27153  001104  0100               	movlb	0	; () banked
 27154  001106  0E00               	movlw	0
 27155  001108  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 27156  00110A  0101               	movlb	1	; () banked
 27157  00110C  6FCA               	movwf	(_MACRxPacket+2)& (0+255),b
 27158                           
 27159                           ; BSR set to: 1
 27160                           ;drv_mrf_miwi_mesh_89xa.c: 978: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLeng
      +                          th;
 27161  00110E  3036               	rrcf	_MACInitParams,w,c
 27162  001110  32E8               	rrcf	wreg,f,c
 27163  001112  32E8               	rrcf	wreg,f,c
 27164  001114  0B0F               	andlw	15
 27165  001116  0100               	movlb	0	; () banked
 27166  001118  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 27167                           
 27168                           ;drv_mrf_miwi_mesh_89xa.c: 979: }
 27169  00111A  D006               	goto	l807
 27170  00111C                     l806:
 27171                           
 27172                           ; BSR set to: 1
 27173                           ;drv_mrf_miwi_mesh_89xa.c: 980: else
 27174                           ;drv_mrf_miwi_mesh_89xa.c: 981: {
 27175                           ;drv_mrf_miwi_mesh_89xa.c: 982: MACRxPacket.SourceAddress = (0);
 27176  00111C  6BC9               	clrf	(_MACRxPacket+1)& (0+255),b
 27177  00111E  6BCA               	clrf	(_MACRxPacket+2)& (0+255),b
 27178                           
 27179                           ;drv_mrf_miwi_mesh_89xa.c: 983: MACRxPacket.SourcePANID=myPANID;
 27180  001120  C04D  F1D0         	movff	_myPANID,_MACRxPacket+8
 27181  001124  C04E  F1D1         	movff	_myPANID+1,_MACRxPacket+9
 27182  001128                     l807:
 27183                           
 27184                           ;drv_mrf_miwi_mesh_89xa.c: 984: }
 27185                           ;drv_mrf_miwi_mesh_89xa.c: 987: if( MACRxPacket.flags.bits.secEn )
 27186  001128  0101               	movlb	1	; () banked
 27187  00112A  A7C8               	btfss	_MACRxPacket& (0+255),3,b
 27188  00112C  D0BB               	goto	l17776
 27189                           
 27190                           ; BSR set to: 1
 27191                           ;drv_mrf_miwi_mesh_89xa.c: 988: {
 27192                           ;drv_mrf_miwi_mesh_89xa.c: 990: if( 0x00 != RxPacket[i].Payload[PayloadIndex+4] )
 27193  00112E  0100               	movlb	0	; () banked
 27194  001130  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27195  001132  0D47               	mullw	71
 27196  001134  0E2C               	movlw	low _RxPacket
 27197  001136  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27198  001138  0E02               	movlw	high _RxPacket
 27199  00113A  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 27200  00113C  0E05               	movlw	5
 27201  00113E  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27202  001140  0E00               	movlw	0
 27203  001142  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27204  001144  50F3               	movf	prodl,w,c
 27205  001146  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27206  001148  50F4               	movf	prodh,w,c
 27207  00114A  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27208  00114C  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27209  00114E  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27210  001150  6ED9               	movwf	fsr2l,c
 27211  001152  0E00               	movlw	0
 27212  001154  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 27213  001156  6EDA               	movwf	fsr2h,c
 27214  001158  50DF               	movf	indf2,w,c
 27215  00115A  E00A               	bz	l809
 27216  00115C                     l17724:
 27217                           
 27218                           ; BSR set to: 0
 27219                           ;drv_mrf_miwi_mesh_89xa.c: 991: {
 27220                           ;drv_mrf_miwi_mesh_89xa.c: 992: RxPacket[i].flags.Val = 0;
 27221  00115C  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27222  00115E  0D47               	mullw	71
 27223  001160  0E2C               	movlw	low _RxPacket
 27224  001162  24F3               	addwf	prodl,w,c
 27225  001164  6ED9               	movwf	fsr2l,c
 27226  001166  0E02               	movlw	high _RxPacket
 27227  001168  20F4               	addwfc	prodh,w,c
 27228  00116A  6EDA               	movwf	fsr2h,c
 27229  00116C  6ADF               	clrf	indf2,c
 27230  00116E  0C00               	retlw	0
 27231  001170                     l809:
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;drv_mrf_miwi_mesh_89xa.c: 994: }
 27235                           ;drv_mrf_miwi_mesh_89xa.c: 997: if( MACRxPacket.flags.bits.sourcePrsnt )
 27236  001170  0101               	movlb	1	; () banked
 27237  001172  AFC8               	btfss	_MACRxPacket& (0+255),7,b
 27238  001174  D071               	goto	l17764
 27239                           
 27240                           ; BSR set to: 1
 27241                           ;drv_mrf_miwi_mesh_89xa.c: 998: {
 27242                           ;drv_mrf_miwi_mesh_89xa.c: 999: for(j = 0; j < 5; j++)
 27243  001176  0100               	movlb	0	; () banked
 27244  001178  6BB6               	clrf	MiMAC_ReceivedPacket@j& (0+255),b
 27245  00117A                     l17736:
 27246                           
 27247                           ; BSR set to: 0
 27248                           ;drv_mrf_miwi_mesh_89xa.c: 1000: {
 27249                           ;drv_mrf_miwi_mesh_89xa.c: 1001: addr_t addr;
 27250                           ;drv_mrf_miwi_mesh_89xa.c: 1002: memcpy(addr.bytes,MACRxPacket.SourceAddress,2);
 27251  00117A  0EB0               	movlw	low MiMAC_ReceivedPacket@addr
 27252  00117C  6F75               	movwf	memcpy@d1& (0+255),b
 27253  00117E  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 27254  001180  C1C9  F077         	movff	_MACRxPacket+1,memcpy@s1
 27255  001184  C1CA  F078         	movff	_MACRxPacket+2,memcpy@s1+1
 27256  001188  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27257  00118A  0E02               	movlw	2
 27258  00118C  6F79               	movwf	memcpy@n& (0+255),b
 27259  00118E  EC05  F035         	call	_memcpy	;wreg free
 27260                           
 27261                           ; BSR set to: 0
 27262                           ;drv_mrf_miwi_mesh_89xa.c: 1003: if( (ConnectionTable[j].status.bits.isValid) &&
 27263                           ;drv_mrf_miwi_mesh_89xa.c: 1004: isSameAddress(ConnectionTable[j].Address, addr) )
 27264  001192  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 27265  001194  0D0B               	mullw	11
 27266  001196  0E68               	movlw	low (_ConnectionTable+10)
 27267  001198  24F3               	addwf	prodl,w,c
 27268  00119A  6ED9               	movwf	fsr2l,c
 27269  00119C  0E03               	movlw	high (_ConnectionTable+10)
 27270  00119E  20F4               	addwfc	prodh,w,c
 27271  0011A0  6EDA               	movwf	fsr2h,c
 27272  0011A2  AEDF               	btfss	indf2,7,c
 27273  0011A4  D015               	goto	l17744
 27274                           
 27275                           ; BSR set to: 3
 27276  0011A6  0100               	movlb	0	; () banked
 27277  0011A8  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 27278  0011AA  0D0B               	mullw	11
 27279  0011AC  0E66               	movlw	low (_ConnectionTable+8)
 27280  0011AE  24F3               	addwf	prodl,w,c
 27281  0011B0  6ED9               	movwf	fsr2l,c
 27282  0011B2  0E03               	movlw	high (_ConnectionTable+8)
 27283  0011B4  20F4               	addwfc	prodh,w,c
 27284  0011B6  6EDA               	movwf	fsr2h,c
 27285  0011B8  CFDE F07D          	movff	postinc2,isSameAddress@a1
 27286  0011BC  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 27287  0011C0  C0B0  F07F         	movff	MiMAC_ReceivedPacket@addr,isSameAddress@a2
 27288  0011C4  C0B1  F080         	movff	MiMAC_ReceivedPacket@addr+1,isSameAddress@a2+1
 27289  0011C8  ECBD  F039         	call	_isSameAddress	;wreg free
 27290  0011CC  0900               	iorlw	0
 27291  0011CE  E105               	bnz	l17748
 27292  0011D0                     l17744:
 27293  0011D0  0100               	movlb	0	; () banked
 27294  0011D2  2BB6               	incf	MiMAC_ReceivedPacket@j& (0+255),f,b
 27295                           
 27296                           ; BSR set to: 0
 27297  0011D4  0E04               	movlw	4
 27298  0011D6  65B6               	cpfsgt	MiMAC_ReceivedPacket@j& (0+255),b
 27299  0011D8  D7D0               	goto	l17736
 27300  0011DA                     l17748:
 27301                           
 27302                           ; BSR set to: 0
 27303                           ;drv_mrf_miwi_mesh_89xa.c: 1007: }
 27304                           ;drv_mrf_miwi_mesh_89xa.c: 1008: }
 27305                           ;drv_mrf_miwi_mesh_89xa.c: 1009: if( j < 5 )
 27306  0011DA  0E05               	movlw	5
 27307  0011DC  61B6               	cpfslt	MiMAC_ReceivedPacket@j& (0+255),b
 27308  0011DE  D03C               	goto	l17764
 27309                           
 27310                           ; BSR set to: 0
 27311                           ;drv_mrf_miwi_mesh_89xa.c: 1010: {
 27312                           ;drv_mrf_miwi_mesh_89xa.c: 1011: uint32_t FrameCounter;
 27313                           ;drv_mrf_miwi_mesh_89xa.c: 1012: memcpy((uint8_t*)&FrameCounter,(uint8_t*)&RxPacket[i].P
      +                          ayload[PayloadIndex],4);
 27314  0011E0  0EB2               	movlw	low MiMAC_ReceivedPacket@FrameCounter
 27315  0011E2  6F75               	movwf	memcpy@d1& (0+255),b
 27316  0011E4  6B76               	clrf	(memcpy@d1+1)& (0+255),b
 27317  0011E6  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27318  0011E8  0D47               	mullw	71
 27319  0011EA  0E2C               	movlw	low _RxPacket
 27320  0011EC  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27321  0011EE  0E02               	movlw	high _RxPacket
 27322  0011F0  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 27323  0011F2  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27324  0011F4  0E00               	movlw	0
 27325  0011F6  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27326  0011F8  50F3               	movf	prodl,w,c
 27327  0011FA  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27328  0011FC  50F4               	movf	prodh,w,c
 27329  0011FE  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27330  001200  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27331  001202  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27332  001204  6F77               	movwf	memcpy@s1& (0+255),b
 27333  001206  0E00               	movlw	0
 27334  001208  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 27335  00120A  6F78               	movwf	(memcpy@s1+1)& (0+255),b
 27336  00120C  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 27337  00120E  0E04               	movlw	4
 27338  001210  6F79               	movwf	memcpy@n& (0+255),b
 27339  001212  EC05  F035         	call	_memcpy	;wreg free
 27340                           
 27341                           ; BSR set to: 0
 27342                           ;drv_mrf_miwi_mesh_89xa.c: 1014: if( ConnectionTable[j].IncomingFrameCounter > FrameCoun
      +                          ter )
 27343  001216  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 27344  001218  0D0B               	mullw	11
 27345  00121A  0E5E               	movlw	low _ConnectionTable
 27346  00121C  24F3               	addwf	prodl,w,c
 27347  00121E  6ED9               	movwf	fsr2l,c
 27348  001220  0E03               	movlw	high _ConnectionTable
 27349  001222  20F4               	addwfc	prodh,w,c
 27350  001224  6EDA               	movwf	fsr2h,c
 27351  001226  50DE               	movf	postinc2,w,c
 27352  001228  5DB2               	subwf	MiMAC_ReceivedPacket@FrameCounter& (0+255),w,b
 27353  00122A  50DE               	movf	postinc2,w,c
 27354  00122C  59B3               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+1)& (0+255),w,b
 27355  00122E  50DE               	movf	postinc2,w,c
 27356  001230  59B4               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+2)& (0+255),w,b
 27357  001232  50DE               	movf	postinc2,w,c
 27358  001234  59B5               	subwfb	(MiMAC_ReceivedPacket@FrameCounter+3)& (0+255),w,b
 27359  001236  E392               	bnc	l17724
 27360                           
 27361                           ; BSR set to: 0
 27362                           ;drv_mrf_miwi_mesh_89xa.c: 1019: else
 27363                           ;drv_mrf_miwi_mesh_89xa.c: 1020: {
 27364                           ;drv_mrf_miwi_mesh_89xa.c: 1021: ConnectionTable[j].IncomingFrameCounter = FrameCounter;
 27365  001238  51B6               	movf	MiMAC_ReceivedPacket@j& (0+255),w,b
 27366  00123A  0D0B               	mullw	11
 27367  00123C  0E5E               	movlw	low _ConnectionTable
 27368  00123E  24F3               	addwf	prodl,w,c
 27369  001240  6ED9               	movwf	fsr2l,c
 27370  001242  0E03               	movlw	high _ConnectionTable
 27371  001244  20F4               	addwfc	prodh,w,c
 27372  001246  6EDA               	movwf	fsr2h,c
 27373  001248  C0B2  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter,postinc2
 27374  00124C  C0B3  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+1,postinc2
 27375  001250  C0B4  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+2,postinc2
 27376  001254  C0B5  FFDE         	movff	MiMAC_ReceivedPacket@FrameCounter+3,postinc2
 27377  001258                     l17764:
 27378                           
 27379                           ;drv_mrf_miwi_mesh_89xa.c: 1022: }
 27380                           ;drv_mrf_miwi_mesh_89xa.c: 1023: }
 27381                           ;drv_mrf_miwi_mesh_89xa.c: 1024: }
 27382                           ;drv_mrf_miwi_mesh_89xa.c: 1027: PayloadIndex += 5;
 27383  001258  0E05               	movlw	5
 27384  00125A  0100               	movlb	0	; () banked
 27385  00125C  27B7               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 27386                           
 27387                           ; BSR set to: 0
 27388                           ;drv_mrf_miwi_mesh_89xa.c: 1049: if(CCM_Dec((uint8_t *)RxPacket[i].Payload, PayloadIndex
      +                          , RxPacket[i].PayloadLen-PayloadIndex, key) == 0)
 27389  00125E  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27390  001260  0D47               	mullw	71
 27391  001262  0E2D               	movlw	low (_RxPacket+1)
 27392  001264  24F3               	addwf	prodl,w,c
 27393  001266  6F97               	movwf	CCM_Dec@text& (0+255),b
 27394  001268  0E02               	movlw	high (_RxPacket+1)
 27395  00126A  20F4               	addwfc	prodh,w,c
 27396  00126C  6F98               	movwf	(CCM_Dec@text+1)& (0+255),b
 27397  00126E  C0B7  F099         	movff	MiMAC_ReceivedPacket@PayloadIndex,CCM_Dec@headerLen
 27398  001272  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27399  001274  0D47               	mullw	71
 27400  001276  0E6D               	movlw	low (_RxPacket+65)
 27401  001278  24F3               	addwf	prodl,w,c
 27402  00127A  6ED9               	movwf	fsr2l,c
 27403  00127C  0E02               	movlw	high (_RxPacket+65)
 27404  00127E  20F4               	addwfc	prodh,w,c
 27405  001280  6EDA               	movwf	fsr2h,c
 27406  001282  50DF               	movf	indf2,w,c
 27407  001284  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27408  001286  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27409  001288  5DA4               	subwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27410  00128A  6F9A               	movwf	CCM_Dec@payloadLen& (0+255),b
 27411  00128C  0ECC               	movlw	low _key
 27412  00128E  6F9B               	movwf	CCM_Dec@key& (0+255),b
 27413  001290  0E02               	movlw	high _key
 27414  001292  6F9C               	movwf	(CCM_Dec@key+1)& (0+255),b
 27415  001294  EC02  F02B         	call	_CCM_Dec	;wreg free
 27416  001298  0900               	iorlw	0
 27417  00129A  E101 D75F          	bz	l17724
 27418                           
 27419                           ; BSR set to: 0
 27420                           ;drv_mrf_miwi_mesh_89xa.c: 1053: }
 27421                           ;drv_mrf_miwi_mesh_89xa.c: 1070: MACRxPacket.PayloadLen -= (PayloadIndex + 2);
 27422  00129E  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27423  0012A0  0F02               	addlw	2
 27424  0012A2  D002               	goto	L10
 27425  0012A4                     l17776:
 27426                           
 27427                           ; BSR set to: 1
 27428                           ;drv_mrf_miwi_mesh_89xa.c: 1072: else
 27429                           ;drv_mrf_miwi_mesh_89xa.c: 1073: {
 27430                           ;drv_mrf_miwi_mesh_89xa.c: 1074: MACRxPacket.PayloadLen -= PayloadIndex;
 27431  0012A4  0100               	movlb	0	; () banked
 27432  0012A6  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27433  0012A8                     L10:
 27434  0012A8  0101               	movlb	1	; () banked
 27435  0012AA  5FCD               	subwf	(_MACRxPacket+5)& (0+255),f,b
 27436                           
 27437                           ; BSR set to: 1
 27438                           ;drv_mrf_miwi_mesh_89xa.c: 1075: }
 27439                           ;drv_mrf_miwi_mesh_89xa.c: 1083: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 27440  0012AC  0100               	movlb	0	; () banked
 27441  0012AE  51B8               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 27442  0012B0  0D47               	mullw	71
 27443  0012B2  0E2C               	movlw	low _RxPacket
 27444  0012B4  6FA4               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 27445  0012B6  0E02               	movlw	high _RxPacket
 27446  0012B8  6FA5               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 27447  0012BA  2BA4               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27448  0012BC  0E00               	movlw	0
 27449  0012BE  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27450  0012C0  50F3               	movf	prodl,w,c
 27451  0012C2  27A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 27452  0012C4  50F4               	movf	prodh,w,c
 27453  0012C6  23A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 27454  0012C8  51B7               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 27455  0012CA  25A4               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 27456  0012CC  0101               	movlb	1	; () banked
 27457  0012CE  6FCB               	movwf	(_MACRxPacket+3)& (0+255),b
 27458  0012D0  0100               	movlb	0	; () banked
 27459  0012D2  0E00               	movlw	0
 27460  0012D4  21A5               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 27461  0012D6  0101               	movlb	1	; () banked
 27462  0012D8  6FCC               	movwf	(_MACRxPacket+4)& (0+255),b
 27463                           
 27464                           ; BSR set to: 1
 27465                           ;drv_mrf_miwi_mesh_89xa.c: 1085: MACRxPacket.RSSIValue = RSSILock;
 27466  0012DA  C1BB  F1CE         	movff	_RSSILock,_MACRxPacket+6
 27467                           
 27468                           ; BSR set to: 1
 27469                           ;drv_mrf_miwi_mesh_89xa.c: 1088: ReceivedBankIndex = i;
 27470  0012DE  C0B8  F03E         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 27471                           
 27472                           ; BSR set to: 1
 27473                           ;drv_mrf_miwi_mesh_89xa.c: 1089: return 1;
 27474  0012E2  0C01               	retlw	1
 27475  0012E4                     l17788:
 27476                           
 27477                           ; BSR set to: 2
 27478  0012E4  0100               	movlb	0	; () banked
 27479  0012E6  2BB8               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 27480                           
 27481                           ; BSR set to: 0
 27482  0012E8  0E01               	movlw	1
 27483  0012EA  65B8               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 27484  0012EC  D694               	goto	l17700
 27485  0012EE  0C00               	retlw	0
 27486  0012F0                     __end_of_MiMAC_ReceivedPacket:
 27487                           	opt stack 0
 27488                           tblptru	equ	0xFF8
 27489                           tblptrh	equ	0xFF7
 27490                           tblptrl	equ	0xFF6
 27491                           tablat	equ	0xFF5
 27492                           prodh	equ	0xFF4
 27493                           prodl	equ	0xFF3
 27494                           intcon	equ	0xFF2
 27495                           intcon3	equ	0xFF0
 27496                           postinc0	equ	0xFEE
 27497                           plusw0	equ	0xFEB
 27498                           fsr0h	equ	0xFEA
 27499                           fsr0l	equ	0xFE9
 27500                           wreg	equ	0xFE8
 27501                           indf1	equ	0xFE7
 27502                           postinc1	equ	0xFE6
 27503                           postdec1	equ	0xFE5
 27504                           plusw1	equ	0xFE3
 27505                           fsr1h	equ	0xFE2
 27506                           fsr1l	equ	0xFE1
 27507                           indf2	equ	0xFDF
 27508                           postinc2	equ	0xFDE
 27509                           postdec2	equ	0xFDD
 27510                           plusw2	equ	0xFDB
 27511                           fsr2h	equ	0xFDA
 27512                           fsr2l	equ	0xFD9
 27513                           status	equ	0xFD8
 27514                           
 27515 ;; *************** function _CCM_Dec *****************
 27516 ;; Defined at:
 27517 ;;		line 331 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 27518 ;; Parameters:    Size  Location     Type
 27519 ;;  text            2   55[BANK0 ] PTR unsigned char 
 27520 ;;		 -> RxPacket.Payload(64), RxPacket(142), 
 27521 ;;  headerLen       1   57[BANK0 ] unsigned char 
 27522 ;;  payloadLen      1   58[BANK0 ] unsigned char 
 27523 ;;  key             2   59[BANK0 ] PTR unsigned char 
 27524 ;;		 -> key(8), 
 27525 ;; Auto vars:     Size  Location     Type
 27526 ;;  i               1   67[BANK0 ] unsigned char 
 27527 ;; Return value:  Size  Location     Type
 27528 ;;                  1    wreg      unsigned char 
 27529 ;; Registers used:
 27530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27531 ;; Tracked objects:
 27532 ;;		On entry : F/0
 27533 ;;		On exit  : F/0
 27534 ;;		Unchanged: 0/0
 27535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27536 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27537 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27538 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27539 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27540 ;;Total ram usage:       13 bytes
 27541 ;; Hardware stack levels used:    1
 27542 ;; Hardware stack levels required when called:    7
 27543 ;; This function calls:
 27544 ;;		_CBC_MAC
 27545 ;;		_CTR
 27546 ;; This function is called by:
 27547 ;;		_MiMAC_ReceivedPacket
 27548 ;; This function uses a non-reentrant model
 27549 ;;
 27550                           
 27551                           	psect	text135
 27552  005604                     __ptext135:
 27553                           	opt stack 0
 27554  005604                     _CCM_Dec:
 27555                           	opt stack 21
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;drv_mrf_miwi_mesh_security.c: 333: uint8_t i;
 27559                           ;drv_mrf_miwi_mesh_security.c: 340: for(i = 0; i < 4-1; i++)
 27560                           
 27561                           ;incstack = 0
 27562  005604  6BA3               	clrf	CCM_Dec@i& (0+255),b
 27563  005606                     l16824:
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;drv_mrf_miwi_mesh_security.c: 341: {
 27567                           ;drv_mrf_miwi_mesh_security.c: 342: tmpBlock[i] = (i < headerLen) ? text[i] : 0;
 27568  005606  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 27569  005608  5DA3               	subwf	CCM_Dec@i& (0+255),w,b
 27570  00560A  E302               	bnc	l16828
 27571                           
 27572                           ; BSR set to: 0
 27573  00560C  6BA1               	clrf	_CCM_Dec$2718& (0+255),b
 27574  00560E  D008               	goto	L11
 27575  005610                     l16828:
 27576                           
 27577                           ; BSR set to: 0
 27578  005610  51A3               	movf	CCM_Dec@i& (0+255),w,b
 27579  005612  2597               	addwf	CCM_Dec@text& (0+255),w,b
 27580  005614  6ED9               	movwf	fsr2l,c
 27581  005616  0E00               	movlw	0
 27582  005618  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 27583  00561A  6EDA               	movwf	fsr2h,c
 27584  00561C  50DF               	movf	indf2,w,c
 27585  00561E  6FA1               	movwf	_CCM_Dec$2718& (0+255),b
 27586  005620                     L11:
 27587  005620  6BA2               	clrf	(_CCM_Dec$2718+1)& (0+255),b
 27588                           
 27589                           ; BSR set to: 0
 27590  005622  0EDB               	movlw	low _tmpBlock
 27591  005624  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 27592  005626  6ED9               	movwf	fsr2l,c
 27593  005628  6ADA               	clrf	fsr2h,c
 27594  00562A  0E01               	movlw	high _tmpBlock
 27595  00562C  22DA               	addwfc	fsr2h,f,c
 27596  00562E  C0A1  FFDF         	movff	_CCM_Dec$2718,indf2
 27597                           
 27598                           ; BSR set to: 0
 27599  005632  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 27600                           
 27601                           ; BSR set to: 0
 27602  005634  0E02               	movlw	2
 27603  005636  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 27604  005638  D7E6               	goto	l16824
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;drv_mrf_miwi_mesh_security.c: 343: }
 27608                           ;drv_mrf_miwi_mesh_security.c: 344: CTR(&(text[headerLen]), payloadLen, key, tmpBlock);
 27609  00563A  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 27610  00563C  2597               	addwf	CCM_Dec@text& (0+255),w,b
 27611  00563E  6F8A               	movwf	CTR@text& (0+255),b
 27612  005640  0E00               	movlw	0
 27613  005642  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 27614  005644  6F8B               	movwf	(CTR@text+1)& (0+255),b
 27615  005646  C09A  F08C         	movff	CCM_Dec@payloadLen,CTR@len
 27616  00564A  C09B  F08D         	movff	CCM_Dec@key,CTR@key
 27617  00564E  C09C  F08E         	movff	CCM_Dec@key+1,CTR@key+1
 27618  005652  0EDB               	movlw	low _tmpBlock
 27619  005654  6F8F               	movwf	CTR@nounce& (0+255),b
 27620  005656  0E01               	movlw	high _tmpBlock
 27621  005658  6F90               	movwf	(CTR@nounce+1)& (0+255),b
 27622  00565A  EC65  F02B         	call	_CTR	;wreg free
 27623                           
 27624                           ; BSR set to: 0
 27625                           ;drv_mrf_miwi_mesh_security.c: 346: CBC_MAC(text, (headerLen + payloadLen - 2), key, tmp
      +                          Block);
 27626  00565E  C097  F08A         	movff	CCM_Dec@text,CBC_MAC@text
 27627  005662  C098  F08B         	movff	CCM_Dec@text+1,CBC_MAC@text+1
 27628  005666  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 27629  005668  259A               	addwf	CCM_Dec@payloadLen& (0+255),w,b
 27630  00566A  0FFE               	addlw	254
 27631  00566C  6F8C               	movwf	CBC_MAC@len& (0+255),b
 27632  00566E  C09B  F08D         	movff	CCM_Dec@key,CBC_MAC@key
 27633  005672  C09C  F08E         	movff	CCM_Dec@key+1,CBC_MAC@key+1
 27634  005676  0EDB               	movlw	low _tmpBlock
 27635  005678  6F8F               	movwf	CBC_MAC@MIC& (0+255),b
 27636  00567A  0E01               	movlw	high _tmpBlock
 27637  00567C  6F90               	movwf	(CBC_MAC@MIC+1)& (0+255),b
 27638  00567E  EC86  F02D         	call	_CBC_MAC	;wreg free
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;drv_mrf_miwi_mesh_security.c: 347: for(i = 0; i < 2; i++)
 27642  005682  6BA3               	clrf	CCM_Dec@i& (0+255),b
 27643  005684                     l16844:
 27644                           
 27645                           ; BSR set to: 0
 27646                           ;drv_mrf_miwi_mesh_security.c: 348: {
 27647                           ;drv_mrf_miwi_mesh_security.c: 349: if( tmpBlock[i] != text[headerLen + payloadLen - 2 +
      +                           i] )
 27648  005684  5199               	movf	CCM_Dec@headerLen& (0+255),w,b
 27649  005686  2597               	addwf	CCM_Dec@text& (0+255),w,b
 27650  005688  6F9D               	movwf	??_CCM_Dec& (0+255),b
 27651  00568A  0E00               	movlw	0
 27652  00568C  2198               	addwfc	(CCM_Dec@text+1)& (0+255),w,b
 27653  00568E  6F9E               	movwf	(??_CCM_Dec+1)& (0+255),b
 27654  005690  519A               	movf	CCM_Dec@payloadLen& (0+255),w,b
 27655  005692  279D               	addwf	??_CCM_Dec& (0+255),f,b
 27656  005694  0E00               	movlw	0
 27657  005696  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 27658  005698  51A3               	movf	CCM_Dec@i& (0+255),w,b
 27659  00569A  279D               	addwf	??_CCM_Dec& (0+255),f,b
 27660  00569C  0E00               	movlw	0
 27661  00569E  239E               	addwfc	(??_CCM_Dec+1)& (0+255),f,b
 27662  0056A0  0EFE               	movlw	254
 27663  0056A2  259D               	addwf	??_CCM_Dec& (0+255),w,b
 27664  0056A4  6ED9               	movwf	fsr2l,c
 27665  0056A6  0EFF               	movlw	255
 27666  0056A8  219E               	addwfc	(??_CCM_Dec+1)& (0+255),w,b
 27667  0056AA  6EDA               	movwf	fsr2h,c
 27668  0056AC  0EDB               	movlw	low _tmpBlock
 27669  0056AE  25A3               	addwf	CCM_Dec@i& (0+255),w,b
 27670  0056B0  6EE1               	movwf	fsr1l,c
 27671  0056B2  6AE2               	clrf	fsr1h,c
 27672  0056B4  0E01               	movlw	high _tmpBlock
 27673  0056B6  22E2               	addwfc	fsr1h,f,c
 27674  0056B8  50DE               	movf	postinc2,w,c
 27675  0056BA  18E6               	xorwf	postinc1,w,c
 27676  0056BC  E001               	bz	l16850
 27677                           
 27678                           ; BSR set to: 0
 27679                           ;drv_mrf_miwi_mesh_security.c: 350: {
 27680                           ;drv_mrf_miwi_mesh_security.c: 354: return 0;
 27681  0056BE  0C00               	retlw	0
 27682  0056C0                     l16850:
 27683                           
 27684                           ; BSR set to: 0
 27685  0056C0  2BA3               	incf	CCM_Dec@i& (0+255),f,b
 27686                           
 27687                           ; BSR set to: 0
 27688  0056C2  0E01               	movlw	1
 27689  0056C4  65A3               	cpfsgt	CCM_Dec@i& (0+255),b
 27690  0056C6  D7DE               	goto	l16844
 27691  0056C8  0C01               	retlw	1
 27692  0056CA                     __end_of_CCM_Dec:
 27693                           	opt stack 0
 27694                           tblptru	equ	0xFF8
 27695                           tblptrh	equ	0xFF7
 27696                           tblptrl	equ	0xFF6
 27697                           tablat	equ	0xFF5
 27698                           prodh	equ	0xFF4
 27699                           prodl	equ	0xFF3
 27700                           intcon	equ	0xFF2
 27701                           intcon3	equ	0xFF0
 27702                           postinc0	equ	0xFEE
 27703                           plusw0	equ	0xFEB
 27704                           fsr0h	equ	0xFEA
 27705                           fsr0l	equ	0xFE9
 27706                           wreg	equ	0xFE8
 27707                           indf1	equ	0xFE7
 27708                           postinc1	equ	0xFE6
 27709                           postdec1	equ	0xFE5
 27710                           plusw1	equ	0xFE3
 27711                           fsr1h	equ	0xFE2
 27712                           fsr1l	equ	0xFE1
 27713                           indf2	equ	0xFDF
 27714                           postinc2	equ	0xFDE
 27715                           postdec2	equ	0xFDD
 27716                           plusw2	equ	0xFDB
 27717                           fsr2h	equ	0xFDA
 27718                           fsr2l	equ	0xFD9
 27719                           status	equ	0xFD8
 27720                           
 27721 ;; *************** function _CTR *****************
 27722 ;; Defined at:
 27723 ;;		line 150 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 27724 ;; Parameters:    Size  Location     Type
 27725 ;;  text            2   42[BANK0 ] PTR unsigned char 
 27726 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 27727 ;;  len             1   44[BANK0 ] unsigned char 
 27728 ;;  key             2   45[BANK0 ] PTR unsigned char 
 27729 ;;		 -> key(8), 
 27730 ;;  nounce          2   47[BANK0 ] PTR unsigned char 
 27731 ;;		 -> tmpBlock(4), 
 27732 ;; Auto vars:     Size  Location     Type
 27733 ;;  j               1   54[BANK0 ] unsigned char 
 27734 ;;  i               1   53[BANK0 ] unsigned char 
 27735 ;;  block           1   52[BANK0 ] unsigned char 
 27736 ;; Return value:  Size  Location     Type
 27737 ;;                  1    wreg      void 
 27738 ;; Registers used:
 27739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27740 ;; Tracked objects:
 27741 ;;		On entry : F/0
 27742 ;;		On exit  : F/0
 27743 ;;		Unchanged: 0/0
 27744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27745 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27746 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27747 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27748 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27749 ;;Total ram usage:       13 bytes
 27750 ;; Hardware stack levels used:    1
 27751 ;; Hardware stack levels required when called:    6
 27752 ;; This function calls:
 27753 ;;		_encode
 27754 ;; This function is called by:
 27755 ;;		_CCM_Enc
 27756 ;;		_CCM_Dec
 27757 ;; This function uses a non-reentrant model
 27758 ;;
 27759                           
 27760                           	psect	text136
 27761  0056CA                     __ptext136:
 27762                           	opt stack 0
 27763  0056CA                     _CTR:
 27764                           	opt stack 16
 27765                           
 27766                           ; BSR set to: 0
 27767                           ;drv_mrf_miwi_mesh_security.c: 152: uint8_t block = len/4+1;
 27768                           
 27769                           ; BSR set to: 0
 27770                           ;incstack = 0
 27771  0056CA  C08C  F091         	movff	CTR@len,??_CTR
 27772  0056CE  90D8               	bcf	status,0,c
 27773  0056D0  3391               	rrcf	??_CTR& (0+255),f,b
 27774  0056D2  90D8               	bcf	status,0,c
 27775  0056D4  3391               	rrcf	??_CTR& (0+255),f,b
 27776  0056D6  2991               	incf	??_CTR& (0+255),w,b
 27777  0056D8  6F94               	movwf	CTR@block& (0+255),b
 27778                           
 27779                           ; BSR set to: 0
 27780                           ;drv_mrf_miwi_mesh_security.c: 153: uint8_t i, j;
 27781                           ;drv_mrf_miwi_mesh_security.c: 160: for(i = 0; i < block; i++)
 27782  0056DA  6B95               	clrf	CTR@i& (0+255),b
 27783  0056DC  D051               	goto	l15244
 27784  0056DE                     l919:
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;drv_mrf_miwi_mesh_security.c: 161: {
 27788                           ;drv_mrf_miwi_mesh_security.c: 162: for(j = 0; j < 4-1; j++)
 27789  0056DE  6B96               	clrf	CTR@j& (0+255),b
 27790  0056E0                     l15218:
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;drv_mrf_miwi_mesh_security.c: 163: {
 27794                           ;drv_mrf_miwi_mesh_security.c: 164: tmpBlock[j] = nounce[j];
 27795  0056E0  5196               	movf	CTR@j& (0+255),w,b
 27796  0056E2  258F               	addwf	CTR@nounce& (0+255),w,b
 27797  0056E4  6ED9               	movwf	fsr2l,c
 27798  0056E6  0E00               	movlw	0
 27799  0056E8  2190               	addwfc	(CTR@nounce+1)& (0+255),w,b
 27800  0056EA  6EDA               	movwf	fsr2h,c
 27801  0056EC  0EDB               	movlw	low _tmpBlock
 27802  0056EE  2596               	addwf	CTR@j& (0+255),w,b
 27803  0056F0  6EE1               	movwf	fsr1l,c
 27804  0056F2  6AE2               	clrf	fsr1h,c
 27805  0056F4  0E01               	movlw	high _tmpBlock
 27806  0056F6  22E2               	addwfc	fsr1h,f,c
 27807  0056F8  CFDF FFE7          	movff	indf2,indf1
 27808                           
 27809                           ; BSR set to: 0
 27810  0056FC  2B96               	incf	CTR@j& (0+255),f,b
 27811                           
 27812                           ; BSR set to: 0
 27813  0056FE  0E02               	movlw	2
 27814  005700  6596               	cpfsgt	CTR@j& (0+255),b
 27815  005702  D7EE               	goto	l15218
 27816                           
 27817                           ; BSR set to: 0
 27818                           ;drv_mrf_miwi_mesh_security.c: 165: }
 27819                           ;drv_mrf_miwi_mesh_security.c: 166: tmpBlock[4-1] = i;
 27820  005704  C095  F1DE         	movff	CTR@i,_tmpBlock+3
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;drv_mrf_miwi_mesh_security.c: 167: encode((uint16_t *)tmpBlock, (uint16_t *)key);
 27824  005708  0EDB               	movlw	low _tmpBlock
 27825  00570A  6F73               	movwf	encode@text& (0+255),b
 27826  00570C  0E01               	movlw	high _tmpBlock
 27827  00570E  6F74               	movwf	(encode@text+1)& (0+255),b
 27828  005710  C08D  F075         	movff	CTR@key,encode@key
 27829  005714  C08E  F076         	movff	CTR@key+1,encode@key+1
 27830  005718  ECFD  F01E         	call	_encode	;wreg free
 27831                           
 27832                           ; BSR set to: 0
 27833                           ;drv_mrf_miwi_mesh_security.c: 168: for(j = 0; j < 4; j++)
 27834  00571C  6B96               	clrf	CTR@j& (0+255),b
 27835  00571E                     l15232:
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;drv_mrf_miwi_mesh_security.c: 169: {
 27839                           ;drv_mrf_miwi_mesh_security.c: 170: if( (i * 4 + j) >= len )
 27840  00571E  518C               	movf	CTR@len& (0+255),w,b
 27841  005720  6F91               	movwf	??_CTR& (0+255),b
 27842  005722  6B92               	clrf	(??_CTR+1)& (0+255),b
 27843  005724  5195               	movf	CTR@i& (0+255),w,b
 27844  005726  0D04               	mullw	4
 27845  005728  5196               	movf	CTR@j& (0+255),w,b
 27846  00572A  26F3               	addwf	prodl,f,c
 27847  00572C  0E00               	movlw	0
 27848  00572E  22F4               	addwfc	prodh,f,c
 27849  005730  5191               	movf	??_CTR& (0+255),w,b
 27850  005732  5CF3               	subwf	prodl,w,c
 27851  005734  50F4               	movf	prodh,w,c
 27852  005736  0A80               	xorlw	128
 27853  005738  6F93               	movwf	(??_CTR+2)& (0+255),b
 27854  00573A  5192               	movf	(??_CTR+1)& (0+255),w,b
 27855  00573C  0A80               	xorlw	128
 27856  00573E  5993               	subwfb	(??_CTR+2)& (0+255),w,b
 27857  005740  E21E               	bc	l15242
 27858                           
 27859                           ; BSR set to: 0
 27860                           ;drv_mrf_miwi_mesh_security.c: 173: }
 27861                           ;drv_mrf_miwi_mesh_security.c: 174: text[i * 4 + j] ^= tmpBlock[j];
 27862  005742  0EDB               	movlw	low _tmpBlock
 27863  005744  2596               	addwf	CTR@j& (0+255),w,b
 27864  005746  6ED9               	movwf	fsr2l,c
 27865  005748  6ADA               	clrf	fsr2h,c
 27866  00574A  0E01               	movlw	high _tmpBlock
 27867  00574C  22DA               	addwfc	fsr2h,f,c
 27868  00574E  50DF               	movf	indf2,w,c
 27869  005750  6F91               	movwf	??_CTR& (0+255),b
 27870  005752  5195               	movf	CTR@i& (0+255),w,b
 27871  005754  0D04               	mullw	4
 27872  005756  C08A  F092         	movff	CTR@text,??_CTR+1
 27873  00575A  C08B  F093         	movff	CTR@text+1,??_CTR+2
 27874  00575E  50F3               	movf	prodl,w,c
 27875  005760  2792               	addwf	(??_CTR+1)& (0+255),f,b
 27876  005762  50F4               	movf	prodh,w,c
 27877  005764  2393               	addwfc	(??_CTR+2)& (0+255),f,b
 27878  005766  5196               	movf	CTR@j& (0+255),w,b
 27879  005768  2592               	addwf	(??_CTR+1)& (0+255),w,b
 27880  00576A  6ED9               	movwf	fsr2l,c
 27881  00576C  0E00               	movlw	0
 27882  00576E  2193               	addwfc	(??_CTR+2)& (0+255),w,b
 27883  005770  6EDA               	movwf	fsr2h,c
 27884  005772  5191               	movf	??_CTR& (0+255),w,b
 27885  005774  1ADF               	xorwf	indf2,f,c
 27886                           
 27887                           ; BSR set to: 0
 27888  005776  2B96               	incf	CTR@j& (0+255),f,b
 27889                           
 27890                           ; BSR set to: 0
 27891  005778  0E03               	movlw	3
 27892  00577A  6596               	cpfsgt	CTR@j& (0+255),b
 27893  00577C  D7D0               	goto	l15232
 27894  00577E                     l15242:
 27895                           
 27896                           ; BSR set to: 0
 27897  00577E  2B95               	incf	CTR@i& (0+255),f,b
 27898  005780                     l15244:
 27899                           
 27900                           ; BSR set to: 0
 27901  005780  5194               	movf	CTR@block& (0+255),w,b
 27902  005782  5D95               	subwf	CTR@i& (0+255),w,b
 27903  005784  E3AC               	bnc	l919
 27904                           
 27905                           ; BSR set to: 0
 27906  005786  0012               	return		;funcret
 27907  005788                     __end_of_CTR:
 27908                           	opt stack 0
 27909                           tblptru	equ	0xFF8
 27910                           tblptrh	equ	0xFF7
 27911                           tblptrl	equ	0xFF6
 27912                           tablat	equ	0xFF5
 27913                           prodh	equ	0xFF4
 27914                           prodl	equ	0xFF3
 27915                           intcon	equ	0xFF2
 27916                           intcon3	equ	0xFF0
 27917                           postinc0	equ	0xFEE
 27918                           plusw0	equ	0xFEB
 27919                           fsr0h	equ	0xFEA
 27920                           fsr0l	equ	0xFE9
 27921                           wreg	equ	0xFE8
 27922                           indf1	equ	0xFE7
 27923                           postinc1	equ	0xFE6
 27924                           postdec1	equ	0xFE5
 27925                           plusw1	equ	0xFE3
 27926                           fsr1h	equ	0xFE2
 27927                           fsr1l	equ	0xFE1
 27928                           indf2	equ	0xFDF
 27929                           postinc2	equ	0xFDE
 27930                           postdec2	equ	0xFDD
 27931                           plusw2	equ	0xFDB
 27932                           fsr2h	equ	0xFDA
 27933                           fsr2l	equ	0xFD9
 27934                           status	equ	0xFD8
 27935                           
 27936 ;; *************** function _CBC_MAC *****************
 27937 ;; Defined at:
 27938 ;;		line 207 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 27939 ;; Parameters:    Size  Location     Type
 27940 ;;  text            2   42[BANK0 ] PTR unsigned char 
 27941 ;;		 -> RxPacket.Payload(64), RxPacket(142), MACTxBuffer(64), 
 27942 ;;  len             1   44[BANK0 ] unsigned char 
 27943 ;;  key             2   45[BANK0 ] PTR unsigned char 
 27944 ;;		 -> key(8), 
 27945 ;;  MIC             2   47[BANK0 ] PTR unsigned char 
 27946 ;;		 -> tmpBlock(4), 
 27947 ;; Auto vars:     Size  Location     Type
 27948 ;;  i               1   54[BANK0 ] unsigned char 
 27949 ;;  j               1   53[BANK0 ] unsigned char 
 27950 ;;  block           1   52[BANK0 ] unsigned char 
 27951 ;; Return value:  Size  Location     Type
 27952 ;;                  1    wreg      void 
 27953 ;; Registers used:
 27954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27955 ;; Tracked objects:
 27956 ;;		On entry : F/0
 27957 ;;		On exit  : F/0
 27958 ;;		Unchanged: 0/0
 27959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27960 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27963 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;Total ram usage:       13 bytes
 27965 ;; Hardware stack levels used:    1
 27966 ;; Hardware stack levels required when called:    6
 27967 ;; This function calls:
 27968 ;;		_encode
 27969 ;; This function is called by:
 27970 ;;		_CCM_Enc
 27971 ;;		_CCM_Dec
 27972 ;; This function uses a non-reentrant model
 27973 ;;
 27974                           
 27975                           	psect	text137
 27976  005B0C                     __ptext137:
 27977                           	opt stack 0
 27978  005B0C                     _CBC_MAC:
 27979                           	opt stack 16
 27980                           
 27981                           ; BSR set to: 0
 27982                           ;drv_mrf_miwi_mesh_security.c: 212: uint8_t block = len / 4 + 1;
 27983                           
 27984                           ; BSR set to: 0
 27985                           ;incstack = 0
 27986  005B0C  C08C  F091         	movff	CBC_MAC@len,??_CBC_MAC
 27987  005B10  90D8               	bcf	status,0,c
 27988  005B12  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 27989  005B14  90D8               	bcf	status,0,c
 27990  005B16  3391               	rrcf	??_CBC_MAC& (0+255),f,b
 27991  005B18  2991               	incf	??_CBC_MAC& (0+255),w,b
 27992  005B1A  6F94               	movwf	CBC_MAC@block& (0+255),b
 27993                           
 27994                           ; BSR set to: 0
 27995                           ;drv_mrf_miwi_mesh_security.c: 213: uint8_t i, j;
 27996                           ;drv_mrf_miwi_mesh_security.c: 220: for(i = 0; i < 4; i++)
 27997  005B1C  6B96               	clrf	CBC_MAC@i& (0+255),b
 27998  005B1E                     l15252:
 27999                           
 28000                           ; BSR set to: 0
 28001                           ;drv_mrf_miwi_mesh_security.c: 221: {
 28002                           ;drv_mrf_miwi_mesh_security.c: 222: MIC[i] = 0;
 28003  005B1E  5196               	movf	CBC_MAC@i& (0+255),w,b
 28004  005B20  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 28005  005B22  6ED9               	movwf	fsr2l,c
 28006  005B24  0E00               	movlw	0
 28007  005B26  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 28008  005B28  6EDA               	movwf	fsr2h,c
 28009  005B2A  6ADF               	clrf	indf2,c
 28010                           
 28011                           ; BSR set to: 0
 28012  005B2C  2B96               	incf	CBC_MAC@i& (0+255),f,b
 28013                           
 28014                           ; BSR set to: 0
 28015  005B2E  0E03               	movlw	3
 28016  005B30  6596               	cpfsgt	CBC_MAC@i& (0+255),b
 28017  005B32  D7F5               	goto	l15252
 28018                           
 28019                           ; BSR set to: 0
 28020                           ;drv_mrf_miwi_mesh_security.c: 223: }
 28021                           ;drv_mrf_miwi_mesh_security.c: 225: for(i = 0; i < block; i++)
 28022  005B34  6B96               	clrf	CBC_MAC@i& (0+255),b
 28023  005B36  D03C               	goto	l15276
 28024  005B38                     l932:
 28025                           
 28026                           ; BSR set to: 0
 28027                           ;drv_mrf_miwi_mesh_security.c: 226: {
 28028                           ;drv_mrf_miwi_mesh_security.c: 227: for(j = 0; j < 4; j++)
 28029  005B38  6B95               	clrf	CBC_MAC@j& (0+255),b
 28030  005B3A                     l15262:
 28031                           
 28032                           ; BSR set to: 0
 28033                           ;drv_mrf_miwi_mesh_security.c: 228: {
 28034                           ;drv_mrf_miwi_mesh_security.c: 229: if( (i * 4 + j) >= len )
 28035  005B3A  518C               	movf	CBC_MAC@len& (0+255),w,b
 28036  005B3C  6F91               	movwf	??_CBC_MAC& (0+255),b
 28037  005B3E  6B92               	clrf	(??_CBC_MAC+1)& (0+255),b
 28038  005B40  5196               	movf	CBC_MAC@i& (0+255),w,b
 28039  005B42  0D04               	mullw	4
 28040  005B44  5195               	movf	CBC_MAC@j& (0+255),w,b
 28041  005B46  26F3               	addwf	prodl,f,c
 28042  005B48  0E00               	movlw	0
 28043  005B4A  22F4               	addwfc	prodh,f,c
 28044  005B4C  5191               	movf	??_CBC_MAC& (0+255),w,b
 28045  005B4E  5CF3               	subwf	prodl,w,c
 28046  005B50  50F4               	movf	prodh,w,c
 28047  005B52  0A80               	xorlw	128
 28048  005B54  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 28049  005B56  5192               	movf	(??_CBC_MAC+1)& (0+255),w,b
 28050  005B58  0A80               	xorlw	128
 28051  005B5A  5993               	subwfb	(??_CBC_MAC+2)& (0+255),w,b
 28052  005B5C  E21E               	bc	l15272
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;drv_mrf_miwi_mesh_security.c: 232: }
 28056                           ;drv_mrf_miwi_mesh_security.c: 233: MIC[j] ^= text[i * 4 + j];
 28057  005B5E  5196               	movf	CBC_MAC@i& (0+255),w,b
 28058  005B60  0D04               	mullw	4
 28059  005B62  C08A  F091         	movff	CBC_MAC@text,??_CBC_MAC
 28060  005B66  C08B  F092         	movff	CBC_MAC@text+1,??_CBC_MAC+1
 28061  005B6A  50F3               	movf	prodl,w,c
 28062  005B6C  2791               	addwf	??_CBC_MAC& (0+255),f,b
 28063  005B6E  50F4               	movf	prodh,w,c
 28064  005B70  2392               	addwfc	(??_CBC_MAC+1)& (0+255),f,b
 28065  005B72  5195               	movf	CBC_MAC@j& (0+255),w,b
 28066  005B74  2591               	addwf	??_CBC_MAC& (0+255),w,b
 28067  005B76  6ED9               	movwf	fsr2l,c
 28068  005B78  0E00               	movlw	0
 28069  005B7A  2192               	addwfc	(??_CBC_MAC+1)& (0+255),w,b
 28070  005B7C  6EDA               	movwf	fsr2h,c
 28071  005B7E  50DF               	movf	indf2,w,c
 28072  005B80  6F93               	movwf	(??_CBC_MAC+2)& (0+255),b
 28073  005B82  5195               	movf	CBC_MAC@j& (0+255),w,b
 28074  005B84  258F               	addwf	CBC_MAC@MIC& (0+255),w,b
 28075  005B86  6ED9               	movwf	fsr2l,c
 28076  005B88  0E00               	movlw	0
 28077  005B8A  2190               	addwfc	(CBC_MAC@MIC+1)& (0+255),w,b
 28078  005B8C  6EDA               	movwf	fsr2h,c
 28079  005B8E  5193               	movf	(??_CBC_MAC+2)& (0+255),w,b
 28080  005B90  1ADF               	xorwf	indf2,f,c
 28081                           
 28082                           ; BSR set to: 0
 28083  005B92  2B95               	incf	CBC_MAC@j& (0+255),f,b
 28084                           
 28085                           ; BSR set to: 0
 28086  005B94  0E03               	movlw	3
 28087  005B96  6595               	cpfsgt	CBC_MAC@j& (0+255),b
 28088  005B98  D7D0               	goto	l15262
 28089  005B9A                     l15272:
 28090                           
 28091                           ; BSR set to: 0
 28092                           ;drv_mrf_miwi_mesh_security.c: 234: }
 28093                           ;drv_mrf_miwi_mesh_security.c: 235: encode((uint16_t *)MIC, (uint16_t *)key);
 28094  005B9A  C08F  F073         	movff	CBC_MAC@MIC,encode@text
 28095  005B9E  C090  F074         	movff	CBC_MAC@MIC+1,encode@text+1
 28096  005BA2  C08D  F075         	movff	CBC_MAC@key,encode@key
 28097  005BA6  C08E  F076         	movff	CBC_MAC@key+1,encode@key+1
 28098  005BAA  ECFD  F01E         	call	_encode	;wreg free
 28099                           
 28100                           ; BSR set to: 0
 28101  005BAE  2B96               	incf	CBC_MAC@i& (0+255),f,b
 28102  005BB0                     l15276:
 28103                           
 28104                           ; BSR set to: 0
 28105  005BB0  5194               	movf	CBC_MAC@block& (0+255),w,b
 28106  005BB2  5D96               	subwf	CBC_MAC@i& (0+255),w,b
 28107  005BB4  E3C1               	bnc	l932
 28108                           
 28109                           ; BSR set to: 0
 28110  005BB6  0012               	return		;funcret
 28111  005BB8                     __end_of_CBC_MAC:
 28112                           	opt stack 0
 28113                           tblptru	equ	0xFF8
 28114                           tblptrh	equ	0xFF7
 28115                           tblptrl	equ	0xFF6
 28116                           tablat	equ	0xFF5
 28117                           prodh	equ	0xFF4
 28118                           prodl	equ	0xFF3
 28119                           intcon	equ	0xFF2
 28120                           intcon3	equ	0xFF0
 28121                           postinc0	equ	0xFEE
 28122                           plusw0	equ	0xFEB
 28123                           fsr0h	equ	0xFEA
 28124                           fsr0l	equ	0xFE9
 28125                           wreg	equ	0xFE8
 28126                           indf1	equ	0xFE7
 28127                           postinc1	equ	0xFE6
 28128                           postdec1	equ	0xFE5
 28129                           plusw1	equ	0xFE3
 28130                           fsr1h	equ	0xFE2
 28131                           fsr1l	equ	0xFE1
 28132                           indf2	equ	0xFDF
 28133                           postinc2	equ	0xFDE
 28134                           postdec2	equ	0xFDD
 28135                           plusw2	equ	0xFDB
 28136                           fsr2h	equ	0xFDA
 28137                           fsr2l	equ	0xFD9
 28138                           status	equ	0xFD8
 28139                           
 28140 ;; *************** function _encode *****************
 28141 ;; Defined at:
 28142 ;;		line 109 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_security.c"
 28143 ;; Parameters:    Size  Location     Type
 28144 ;;  text            2   19[BANK0 ] PTR unsigned int 
 28145 ;;		 -> tmpBlock(4), 
 28146 ;;  key             2   21[BANK0 ] PTR unsigned int 
 28147 ;;		 -> key(8), 
 28148 ;; Auto vars:     Size  Location     Type
 28149 ;;  sum             2   40[BANK0 ] unsigned int 
 28150 ;;  part2           2   38[BANK0 ] unsigned int 
 28151 ;;  part1           2   36[BANK0 ] unsigned int 
 28152 ;;  delta           2   33[BANK0 ] unsigned int 
 28153 ;;  i               1   35[BANK0 ] unsigned char 
 28154 ;; Return value:  Size  Location     Type
 28155 ;;                  1    wreg      void 
 28156 ;; Registers used:
 28157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28158 ;; Tracked objects:
 28159 ;;		On entry : F/0
 28160 ;;		On exit  : F/0
 28161 ;;		Unchanged: 0/0
 28162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28164 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28165 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28166 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28167 ;;Total ram usage:       23 bytes
 28168 ;; Hardware stack levels used:    1
 28169 ;; Hardware stack levels required when called:    5
 28170 ;; This function calls:
 28171 ;;		Nothing
 28172 ;; This function is called by:
 28173 ;;		_CTR
 28174 ;;		_CBC_MAC
 28175 ;; This function uses a non-reentrant model
 28176 ;;
 28177                           
 28178                           	psect	text138
 28179  003DFA                     __ptext138:
 28180                           	opt stack 0
 28181  003DFA                     _encode:
 28182                           	opt stack 16
 28183                           
 28184                           ; BSR set to: 0
 28185                           ;drv_mrf_miwi_mesh_security.c: 111: uint16_t part1=text[0], part2=text[1];
 28186                           
 28187                           ; BSR set to: 0
 28188                           ;incstack = 0
 28189  003DFA  C073  FFD9         	movff	encode@text,fsr2l
 28190  003DFE  C074  FFDA         	movff	encode@text+1,fsr2h
 28191  003E02  CFDE F084          	movff	postinc2,encode@part1
 28192  003E06  CFDD F085          	movff	postdec2,encode@part1+1
 28193                           
 28194                           ; BSR set to: 0
 28195  003E0A  EE20 F002          	lfsr	2,2
 28196  003E0E  5173               	movf	encode@text& (0+255),w,b
 28197  003E10  26D9               	addwf	fsr2l,f,c
 28198  003E12  5174               	movf	(encode@text+1)& (0+255),w,b
 28199  003E14  22DA               	addwfc	fsr2h,f,c
 28200  003E16  CFDE F086          	movff	postinc2,encode@part2
 28201  003E1A  CFDD F087          	movff	postdec2,encode@part2+1
 28202                           
 28203                           ; BSR set to: 0
 28204                           ;drv_mrf_miwi_mesh_security.c: 112: uint16_t sum=0, delta=0x9E37;
 28205  003E1E  6B88               	clrf	encode@sum& (0+255),b
 28206  003E20  6B89               	clrf	(encode@sum+1)& (0+255),b
 28207                           
 28208                           ; BSR set to: 0
 28209  003E22  0E9E               	movlw	158
 28210  003E24  6F82               	movwf	(encode@delta+1)& (0+255),b
 28211  003E26  0E37               	movlw	55
 28212  003E28  6F81               	movwf	encode@delta& (0+255),b
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;drv_mrf_miwi_mesh_security.c: 113: uint8_t i;
 28216                           ;drv_mrf_miwi_mesh_security.c: 115: for(i=0; i<32; i++)
 28217  003E2A  6B83               	clrf	encode@i& (0+255),b
 28218  003E2C                     l15110:
 28219                           
 28220                           ; BSR set to: 0
 28221                           ;drv_mrf_miwi_mesh_security.c: 116: {
 28222                           ;drv_mrf_miwi_mesh_security.c: 117: part1 += (((part2 << 4) ^ (part2 >> 5)) + part2) ^ (
      +                          sum + key[sum & 3]);
 28223  003E2C  0E03               	movlw	3
 28224  003E2E  1588               	andwf	encode@sum& (0+255),w,b
 28225  003E30  6F77               	movwf	??_encode& (0+255),b
 28226  003E32  6B78               	clrf	(??_encode+1)& (0+255),b
 28227  003E34  90D8               	bcf	status,0,c
 28228  003E36  3777               	rlcf	??_encode& (0+255),f,b
 28229  003E38  3778               	rlcf	(??_encode+1)& (0+255),f,b
 28230  003E3A  5177               	movf	??_encode& (0+255),w,b
 28231  003E3C  2575               	addwf	encode@key& (0+255),w,b
 28232  003E3E  6ED9               	movwf	fsr2l,c
 28233  003E40  5178               	movf	(??_encode+1)& (0+255),w,b
 28234  003E42  2176               	addwfc	(encode@key+1)& (0+255),w,b
 28235  003E44  6EDA               	movwf	fsr2h,c
 28236  003E46  CFDE F079          	movff	postinc2,??_encode+2
 28237  003E4A  CFDD F07A          	movff	postdec2,??_encode+3
 28238  003E4E  5188               	movf	encode@sum& (0+255),w,b
 28239  003E50  2779               	addwf	(??_encode+2)& (0+255),f,b
 28240  003E52  5189               	movf	(encode@sum+1)& (0+255),w,b
 28241  003E54  237A               	addwfc	(??_encode+3)& (0+255),f,b
 28242  003E56  C086  F07B         	movff	encode@part2,??_encode+4
 28243  003E5A  C087  F07C         	movff	encode@part2+1,??_encode+5
 28244  003E5E  0E05               	movlw	5
 28245  003E60  6F7D               	movwf	(??_encode+6)& (0+255),b
 28246  003E62                     u17935:
 28247  003E62  90D8               	bcf	status,0,c
 28248  003E64  337C               	rrcf	(??_encode+5)& (0+255),f,b
 28249  003E66  337B               	rrcf	(??_encode+4)& (0+255),f,b
 28250  003E68  2F7D               	decfsz	(??_encode+6)& (0+255),f,b
 28251  003E6A  D7FB               	goto	u17935
 28252  003E6C  C086  F07E         	movff	encode@part2,??_encode+7
 28253  003E70  C087  F07F         	movff	encode@part2+1,??_encode+8
 28254  003E74  3B7E               	swapf	(??_encode+7)& (0+255),f,b
 28255  003E76  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 28256  003E78  0EF0               	movlw	240
 28257  003E7A  177F               	andwf	(??_encode+8)& (0+255),f,b
 28258  003E7C  517E               	movf	(??_encode+7)& (0+255),w,b
 28259  003E7E  0B0F               	andlw	15
 28260  003E80  137F               	iorwf	(??_encode+8)& (0+255),f,b
 28261  003E82  0EF0               	movlw	240
 28262  003E84  177E               	andwf	(??_encode+7)& (0+255),f,b
 28263  003E86  517B               	movf	(??_encode+4)& (0+255),w,b
 28264  003E88  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 28265  003E8A  517C               	movf	(??_encode+5)& (0+255),w,b
 28266  003E8C  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 28267  003E8E  5186               	movf	encode@part2& (0+255),w,b
 28268  003E90  277E               	addwf	(??_encode+7)& (0+255),f,b
 28269  003E92  5187               	movf	(encode@part2+1)& (0+255),w,b
 28270  003E94  237F               	addwfc	(??_encode+8)& (0+255),f,b
 28271  003E96  5179               	movf	(??_encode+2)& (0+255),w,b
 28272  003E98  1B7E               	xorwf	(??_encode+7)& (0+255),f,b
 28273  003E9A  517A               	movf	(??_encode+3)& (0+255),w,b
 28274  003E9C  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 28275  003E9E  517E               	movf	(??_encode+7)& (0+255),w,b
 28276  003EA0  2784               	addwf	encode@part1& (0+255),f,b
 28277  003EA2  517F               	movf	(??_encode+8)& (0+255),w,b
 28278  003EA4  2385               	addwfc	(encode@part1+1)& (0+255),f,b
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;drv_mrf_miwi_mesh_security.c: 118: sum += delta;
 28282  003EA6  5181               	movf	encode@delta& (0+255),w,b
 28283  003EA8  2788               	addwf	encode@sum& (0+255),f,b
 28284  003EAA  5182               	movf	(encode@delta+1)& (0+255),w,b
 28285  003EAC  2389               	addwfc	(encode@sum+1)& (0+255),f,b
 28286                           
 28287                           ; BSR set to: 0
 28288                           ;drv_mrf_miwi_mesh_security.c: 119: part2 += (((part1 << 4) ^ (part1 >> 5)) + part1) ^ (
      +                          sum + key[(sum>>11) & 3]);
 28289  003EAE  C088  F077         	movff	encode@sum,??_encode
 28290  003EB2  C089  F078         	movff	encode@sum+1,??_encode+1
 28291  003EB6  0E0B               	movlw	11
 28292  003EB8  6F79               	movwf	(??_encode+2)& (0+255),b
 28293  003EBA                     u17945:
 28294  003EBA  90D8               	bcf	status,0,c
 28295  003EBC  3378               	rrcf	(??_encode+1)& (0+255),f,b
 28296  003EBE  3377               	rrcf	??_encode& (0+255),f,b
 28297  003EC0  2F79               	decfsz	(??_encode+2)& (0+255),f,b
 28298  003EC2  D7FB               	goto	u17945
 28299  003EC4  0E03               	movlw	3
 28300  003EC6  1777               	andwf	??_encode& (0+255),f,b
 28301  003EC8  6B78               	clrf	(??_encode+1)& (0+255),b
 28302  003ECA  90D8               	bcf	status,0,c
 28303  003ECC  3777               	rlcf	??_encode& (0+255),f,b
 28304  003ECE  3778               	rlcf	(??_encode+1)& (0+255),f,b
 28305  003ED0  5177               	movf	??_encode& (0+255),w,b
 28306  003ED2  2575               	addwf	encode@key& (0+255),w,b
 28307  003ED4  6ED9               	movwf	fsr2l,c
 28308  003ED6  5178               	movf	(??_encode+1)& (0+255),w,b
 28309  003ED8  2176               	addwfc	(encode@key+1)& (0+255),w,b
 28310  003EDA  6EDA               	movwf	fsr2h,c
 28311  003EDC  CFDE F07A          	movff	postinc2,??_encode+3
 28312  003EE0  CFDD F07B          	movff	postdec2,??_encode+4
 28313  003EE4  5188               	movf	encode@sum& (0+255),w,b
 28314  003EE6  277A               	addwf	(??_encode+3)& (0+255),f,b
 28315  003EE8  5189               	movf	(encode@sum+1)& (0+255),w,b
 28316  003EEA  237B               	addwfc	(??_encode+4)& (0+255),f,b
 28317  003EEC  C084  F07C         	movff	encode@part1,??_encode+5
 28318  003EF0  C085  F07D         	movff	encode@part1+1,??_encode+6
 28319  003EF4  0E05               	movlw	5
 28320  003EF6  6F7E               	movwf	(??_encode+7)& (0+255),b
 28321  003EF8                     u17955:
 28322  003EF8  90D8               	bcf	status,0,c
 28323  003EFA  337D               	rrcf	(??_encode+6)& (0+255),f,b
 28324  003EFC  337C               	rrcf	(??_encode+5)& (0+255),f,b
 28325  003EFE  2F7E               	decfsz	(??_encode+7)& (0+255),f,b
 28326  003F00  D7FB               	goto	u17955
 28327  003F02  C084  F07F         	movff	encode@part1,??_encode+8
 28328  003F06  C085  F080         	movff	encode@part1+1,??_encode+9
 28329  003F0A  3B7F               	swapf	(??_encode+8)& (0+255),f,b
 28330  003F0C  3B80               	swapf	(??_encode+9)& (0+255),f,b
 28331  003F0E  0EF0               	movlw	240
 28332  003F10  1780               	andwf	(??_encode+9)& (0+255),f,b
 28333  003F12  517F               	movf	(??_encode+8)& (0+255),w,b
 28334  003F14  0B0F               	andlw	15
 28335  003F16  1380               	iorwf	(??_encode+9)& (0+255),f,b
 28336  003F18  0EF0               	movlw	240
 28337  003F1A  177F               	andwf	(??_encode+8)& (0+255),f,b
 28338  003F1C  517C               	movf	(??_encode+5)& (0+255),w,b
 28339  003F1E  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 28340  003F20  517D               	movf	(??_encode+6)& (0+255),w,b
 28341  003F22  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 28342  003F24  5184               	movf	encode@part1& (0+255),w,b
 28343  003F26  277F               	addwf	(??_encode+8)& (0+255),f,b
 28344  003F28  5185               	movf	(encode@part1+1)& (0+255),w,b
 28345  003F2A  2380               	addwfc	(??_encode+9)& (0+255),f,b
 28346  003F2C  517A               	movf	(??_encode+3)& (0+255),w,b
 28347  003F2E  1B7F               	xorwf	(??_encode+8)& (0+255),f,b
 28348  003F30  517B               	movf	(??_encode+4)& (0+255),w,b
 28349  003F32  1B80               	xorwf	(??_encode+9)& (0+255),f,b
 28350  003F34  517F               	movf	(??_encode+8)& (0+255),w,b
 28351  003F36  2786               	addwf	encode@part2& (0+255),f,b
 28352  003F38  5180               	movf	(??_encode+9)& (0+255),w,b
 28353  003F3A  2387               	addwfc	(encode@part2+1)& (0+255),f,b
 28354                           
 28355                           ; BSR set to: 0
 28356  003F3C  2B83               	incf	encode@i& (0+255),f,b
 28357                           
 28358                           ; BSR set to: 0
 28359  003F3E  0E1F               	movlw	31
 28360  003F40  6583               	cpfsgt	encode@i& (0+255),b
 28361  003F42  D774               	goto	l15110
 28362                           
 28363                           ; BSR set to: 0
 28364                           ;drv_mrf_miwi_mesh_security.c: 120: }
 28365                           ;drv_mrf_miwi_mesh_security.c: 121: text[0]=part1; text[1]=part2;
 28366  003F44  C073  FFD9         	movff	encode@text,fsr2l
 28367  003F48  C074  FFDA         	movff	encode@text+1,fsr2h
 28368  003F4C  C084  FFDE         	movff	encode@part1,postinc2
 28369  003F50  C085  FFDD         	movff	encode@part1+1,postdec2
 28370                           
 28371                           ; BSR set to: 0
 28372  003F54  EE20 F002          	lfsr	2,2
 28373  003F58  5173               	movf	encode@text& (0+255),w,b
 28374  003F5A  26D9               	addwf	fsr2l,f,c
 28375  003F5C  5174               	movf	(encode@text+1)& (0+255),w,b
 28376  003F5E  22DA               	addwfc	fsr2h,f,c
 28377  003F60  C086  FFDE         	movff	encode@part2,postinc2
 28378  003F64  C087  FFDD         	movff	encode@part2+1,postdec2
 28379                           
 28380                           ; BSR set to: 0
 28381  003F68  0012               	return		;funcret
 28382  003F6A                     __end_of_encode:
 28383                           	opt stack 0
 28384                           tblptru	equ	0xFF8
 28385                           tblptrh	equ	0xFF7
 28386                           tblptrl	equ	0xFF6
 28387                           tablat	equ	0xFF5
 28388                           prodh	equ	0xFF4
 28389                           prodl	equ	0xFF3
 28390                           intcon	equ	0xFF2
 28391                           intcon3	equ	0xFF0
 28392                           postinc0	equ	0xFEE
 28393                           plusw0	equ	0xFEB
 28394                           fsr0h	equ	0xFEA
 28395                           fsr0l	equ	0xFE9
 28396                           wreg	equ	0xFE8
 28397                           indf1	equ	0xFE7
 28398                           postinc1	equ	0xFE6
 28399                           postdec1	equ	0xFE5
 28400                           plusw1	equ	0xFE3
 28401                           fsr1h	equ	0xFE2
 28402                           fsr1l	equ	0xFE1
 28403                           indf2	equ	0xFDF
 28404                           postinc2	equ	0xFDE
 28405                           postdec2	equ	0xFDD
 28406                           plusw2	equ	0xFDB
 28407                           fsr2h	equ	0xFDA
 28408                           fsr2l	equ	0xFD9
 28409                           status	equ	0xFD8
 28410                           
 28411 ;; *************** function _AddNodeToNetworkTable *****************
 28412 ;; Defined at:
 28413 ;;		line 291 in file "../src/Bridge.c"
 28414 ;; Parameters:    Size  Location     Type
 28415 ;;  address         2   33[BANK0 ] struct addr_t_def
 28416 ;;  PANID           2   35[BANK0 ] unsigned int 
 28417 ;; Auto vars:     Size  Location     Type
 28418 ;;  i               2   43[BANK0 ] unsigned int 
 28419 ;;  ind             2   41[BANK0 ] unsigned int 
 28420 ;; Return value:  Size  Location     Type
 28421 ;;                  2   33[BANK0 ] unsigned int 
 28422 ;; Registers used:
 28423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28424 ;; Tracked objects:
 28425 ;;		On entry : F/0
 28426 ;;		On exit  : F/0
 28427 ;;		Unchanged: 0/0
 28428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28432 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28433 ;;Total ram usage:       12 bytes
 28434 ;; Hardware stack levels used:    1
 28435 ;; Hardware stack levels required when called:    7
 28436 ;; This function calls:
 28437 ;;		_isSameAddress
 28438 ;;		_memcpy
 28439 ;;		_memset
 28440 ;; This function is called by:
 28441 ;;		_MiApp_MessageAvailable
 28442 ;; This function uses a non-reentrant model
 28443 ;;
 28444                           
 28445                           	psect	text139
 28446  002E38                     __ptext139:
 28447                           	opt stack 0
 28448  002E38                     _AddNodeToNetworkTable:
 28449                           	opt stack 22
 28450                           
 28451                           ; BSR set to: 0
 28452                           ;Bridge.c: 293: uint16_t i;
 28453                           ;Bridge.c: 294: uint16_t ind=0xffff;
 28454                           
 28455                           ; BSR set to: 0
 28456                           ;incstack = 0
 28457  002E38  6989               	setf	AddNodeToNetworkTable@ind& (0+255),b
 28458  002E3A  698A               	setf	(AddNodeToNetworkTable@ind+1)& (0+255),b
 28459                           
 28460                           ;Bridge.c: 295: for(i=0;i<5;i++)
 28461  002E3C  6B8B               	clrf	AddNodeToNetworkTable@i& (0+255),b
 28462  002E3E  6B8C               	clrf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28463  002E40                     l17984:
 28464                           
 28465                           ; BSR set to: 0
 28466                           ;Bridge.c: 296: {
 28467                           ;Bridge.c: 297: if( (isSameAddress(ConnectionTable[i].Address,address)==1)
 28468                           ;Bridge.c: 298: && (ConnectionTable[i].PANID.Val == PANID)
 28469                           ;Bridge.c: 299: && (ConnectionTable[i].status.bits.isValid==1) )
 28470  002E40  0E0B               	movlw	11
 28471  002E42  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28472  002E44  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28473  002E48  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28474  002E4C  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28475  002E4E  50F3               	movf	prodl,w,c
 28476  002E50  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28477  002E52  0E66               	movlw	low (_ConnectionTable+8)
 28478  002E54  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28479  002E56  6ED9               	movwf	fsr2l,c
 28480  002E58  0E03               	movlw	high (_ConnectionTable+8)
 28481  002E5A  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28482  002E5C  6EDA               	movwf	fsr2h,c
 28483  002E5E  CFDE F07D          	movff	postinc2,isSameAddress@a1
 28484  002E62  CFDD F07E          	movff	postdec2,isSameAddress@a1+1
 28485  002E66  C081  F07F         	movff	AddNodeToNetworkTable@address,isSameAddress@a2
 28486  002E6A  C082  F080         	movff	AddNodeToNetworkTable@address+1,isSameAddress@a2+1
 28487  002E6E  ECBD  F039         	call	_isSameAddress	;wreg free
 28488  002E72  06E8               	decf	wreg,f,c
 28489  002E74  E126               	bnz	l17994
 28490                           
 28491                           ; BSR set to: 0
 28492  002E76  0E0B               	movlw	11
 28493  002E78  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28494  002E7A  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28495  002E7E  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28496  002E82  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28497  002E84  50F3               	movf	prodl,w,c
 28498  002E86  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28499  002E88  0E62               	movlw	low (_ConnectionTable+4)
 28500  002E8A  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28501  002E8C  6ED9               	movwf	fsr2l,c
 28502  002E8E  0E03               	movlw	high (_ConnectionTable+4)
 28503  002E90  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28504  002E92  6EDA               	movwf	fsr2h,c
 28505  002E94  5183               	movf	AddNodeToNetworkTable@PANID& (0+255),w,b
 28506  002E96  18DE               	xorwf	postinc2,w,c
 28507  002E98  E114               	bnz	l17994
 28508  002E9A  5184               	movf	(AddNodeToNetworkTable@PANID+1)& (0+255),w,b
 28509  002E9C  18DE               	xorwf	postinc2,w,c
 28510  002E9E  E111               	bnz	l17994
 28511                           
 28512                           ; BSR set to: 0
 28513  002EA0  0E0B               	movlw	11
 28514  002EA2  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28515  002EA4  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28516  002EA8  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28517  002EAC  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28518  002EAE  50F3               	movf	prodl,w,c
 28519  002EB0  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28520  002EB2  0E68               	movlw	low (_ConnectionTable+10)
 28521  002EB4  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28522  002EB6  6ED9               	movwf	fsr2l,c
 28523  002EB8  0E03               	movlw	high (_ConnectionTable+10)
 28524  002EBA  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28525  002EBC  6EDA               	movwf	fsr2h,c
 28526  002EBE  BEDF               	btfsc	indf2,7,c
 28527  002EC0  D022               	goto	l18004
 28528  002EC2                     l17994:
 28529  002EC2  0E0B               	movlw	11
 28530  002EC4  0100               	movlb	0	; () banked
 28531  002EC6  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28532  002EC8  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28533  002ECC  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28534  002ED0  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28535  002ED2  50F3               	movf	prodl,w,c
 28536  002ED4  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28537  002ED6  0E68               	movlw	low (_ConnectionTable+10)
 28538  002ED8  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28539  002EDA  6ED9               	movwf	fsr2l,c
 28540  002EDC  0E03               	movlw	high (_ConnectionTable+10)
 28541  002EDE  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28542  002EE0  6EDA               	movwf	fsr2h,c
 28543  002EE2  BEDF               	btfsc	indf2,7,c
 28544  002EE4  D008               	goto	l18000
 28545                           
 28546                           ; BSR set to: 3
 28547  002EE6  2989               	incf	AddNodeToNetworkTable@ind& (0+255),w,b
 28548  002EE8  E106               	bnz	l18000
 28549  002EEA  298A               	incf	(AddNodeToNetworkTable@ind+1)& (0+255),w,b
 28550  002EEC  E104               	bnz	l18000
 28551                           
 28552                           ; BSR set to: 0
 28553                           ;Bridge.c: 303: {
 28554                           ;Bridge.c: 304: ind=i;
 28555  002EEE  C08B  F089         	movff	AddNodeToNetworkTable@i,AddNodeToNetworkTable@ind
 28556  002EF2  C08C  F08A         	movff	AddNodeToNetworkTable@i+1,AddNodeToNetworkTable@ind+1
 28557  002EF6                     l18000:
 28558  002EF6  0100               	movlb	0	; () banked
 28559  002EF8  4B8B               	infsnz	AddNodeToNetworkTable@i& (0+255),f,b
 28560  002EFA  2B8C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),f,b
 28561                           
 28562                           ; BSR set to: 0
 28563  002EFC  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 28564  002EFE  E103               	bnz	u22430
 28565  002F00  0E05               	movlw	5
 28566  002F02  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 28567  002F04  E39D               	bnc	l17984
 28568  002F06                     u22430:
 28569  002F06                     l18004:
 28570                           
 28571                           ;Bridge.c: 305: }
 28572                           ;Bridge.c: 306: }
 28573                           ;Bridge.c: 307: if(i>=5)
 28574  002F06  0100               	movlb	0	; () banked
 28575  002F08  518C               	movf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 28576  002F0A  E104               	bnz	u22440
 28577  002F0C  0E05               	movlw	5
 28578  002F0E  5D8B               	subwf	AddNodeToNetworkTable@i& (0+255),w,b
 28579  002F10  A0D8               	btfss	status,0,c
 28580  002F12  0012               	return	
 28581  002F14                     u22440:
 28582                           
 28583                           ; BSR set to: 0
 28584                           ;Bridge.c: 308: {
 28585                           ;Bridge.c: 309: i=ind;
 28586  002F14  C089  F08B         	movff	AddNodeToNetworkTable@ind,AddNodeToNetworkTable@i
 28587  002F18  C08A  F08C         	movff	AddNodeToNetworkTable@ind+1,AddNodeToNetworkTable@i+1
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;Bridge.c: 310: if(i!=0xffff)
 28591  002F1C  298B               	incf	AddNodeToNetworkTable@i& (0+255),w,b
 28592  002F1E  E103               	bnz	u22450
 28593  002F20  298C               	incf	(AddNodeToNetworkTable@i+1)& (0+255),w,b
 28594  002F22  B4D8               	btfsc	status,2,c
 28595  002F24  0012               	return	
 28596  002F26                     u22450:
 28597                           
 28598                           ; BSR set to: 0
 28599                           ;Bridge.c: 311: {
 28600                           ;Bridge.c: 312: memset(&ConnectionTable[i],0x00,sizeof(CONNECTION_ENTRY));
 28601  002F26  0E0B               	movlw	11
 28602  002F28  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28603  002F2A  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28604  002F2E  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28605  002F32  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28606  002F34  50F3               	movf	prodl,w,c
 28607  002F36  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28608  002F38  0E5E               	movlw	low _ConnectionTable
 28609  002F3A  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28610  002F3C  6F73               	movwf	memset@p1& (0+255),b
 28611  002F3E  0E03               	movlw	high _ConnectionTable
 28612  002F40  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28613  002F42  6F74               	movwf	(memset@p1+1)& (0+255),b
 28614  002F44  6B76               	clrf	(memset@c+1)& (0+255),b
 28615  002F46  6B75               	clrf	memset@c& (0+255),b
 28616  002F48  6B78               	clrf	(memset@n+1)& (0+255),b
 28617  002F4A  0E0B               	movlw	11
 28618  002F4C  6F77               	movwf	memset@n& (0+255),b
 28619  002F4E  EC47  F039         	call	_memset	;wreg free
 28620                           
 28621                           ; BSR set to: 0
 28622                           ;Bridge.c: 313: memcpy(ConnectionTable[i].Address.bytes,address.bytes,sizeof(address));
 28623  002F52  0E0B               	movlw	11
 28624  002F54  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28625  002F56  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28626  002F5A  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28627  002F5E  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28628  002F60  50F3               	movf	prodl,w,c
 28629  002F62  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28630  002F64  0E66               	movlw	low (_ConnectionTable+8)
 28631  002F66  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28632  002F68  6F75               	movwf	memcpy@d1& (0+255),b
 28633  002F6A  0E03               	movlw	high (_ConnectionTable+8)
 28634  002F6C  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28635  002F6E  6F76               	movwf	(memcpy@d1+1)& (0+255),b
 28636  002F70  0E81               	movlw	low AddNodeToNetworkTable@address
 28637  002F72  6F77               	movwf	memcpy@s1& (0+255),b
 28638  002F74  6B78               	clrf	(memcpy@s1+1)& (0+255),b
 28639  002F76  6B7A               	clrf	(memcpy@n+1)& (0+255),b
 28640  002F78  0E02               	movlw	2
 28641  002F7A  6F79               	movwf	memcpy@n& (0+255),b
 28642  002F7C  EC05  F035         	call	_memcpy	;wreg free
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;Bridge.c: 314: ConnectionTable[i].PANID.Val=PANID;
 28646  002F80  0E0B               	movlw	11
 28647  002F82  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28648  002F84  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28649  002F88  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28650  002F8C  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28651  002F8E  50F3               	movf	prodl,w,c
 28652  002F90  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28653  002F92  0E62               	movlw	low (_ConnectionTable+4)
 28654  002F94  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28655  002F96  6ED9               	movwf	fsr2l,c
 28656  002F98  0E03               	movlw	high (_ConnectionTable+4)
 28657  002F9A  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28658  002F9C  6EDA               	movwf	fsr2h,c
 28659  002F9E  C083  FFDE         	movff	AddNodeToNetworkTable@PANID,postinc2
 28660  002FA2  C084  FFDD         	movff	AddNodeToNetworkTable@PANID+1,postdec2
 28661                           
 28662                           ; BSR set to: 0
 28663                           ;Bridge.c: 315: ConnectionTable[i].status.bits.isValid=1;
 28664  002FA6  0E0B               	movlw	11
 28665  002FA8  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28666  002FAA  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28667  002FAE  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28668  002FB2  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28669  002FB4  50F3               	movf	prodl,w,c
 28670  002FB6  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28671  002FB8  0E68               	movlw	low (_ConnectionTable+10)
 28672  002FBA  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28673  002FBC  6ED9               	movwf	fsr2l,c
 28674  002FBE  0E03               	movlw	high (_ConnectionTable+10)
 28675  002FC0  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28676  002FC2  6EDA               	movwf	fsr2h,c
 28677  002FC4  8EDF               	bsf	indf2,7,c
 28678                           
 28679                           ; BSR set to: 3
 28680                           ;Bridge.c: 317: ConnectionTable[i].IncomingFrameCounter=0;
 28681  002FC6  0E0B               	movlw	11
 28682  002FC8  0100               	movlb	0	; () banked
 28683  002FCA  038B               	mulwf	AddNodeToNetworkTable@i& (0+255),b
 28684  002FCC  CFF3 F085          	movff	prodl,??_AddNodeToNetworkTable
 28685  002FD0  CFF4 F086          	movff	prodh,??_AddNodeToNetworkTable+1
 28686  002FD4  038C               	mulwf	(AddNodeToNetworkTable@i+1)& (0+255),b
 28687  002FD6  50F3               	movf	prodl,w,c
 28688  002FD8  2786               	addwf	(??_AddNodeToNetworkTable+1)& (0+255),f,b
 28689  002FDA  0E5E               	movlw	low _ConnectionTable
 28690  002FDC  2585               	addwf	??_AddNodeToNetworkTable& (0+255),w,b
 28691  002FDE  6ED9               	movwf	fsr2l,c
 28692  002FE0  0E03               	movlw	high _ConnectionTable
 28693  002FE2  2186               	addwfc	(??_AddNodeToNetworkTable+1)& (0+255),w,b
 28694  002FE4  6EDA               	movwf	fsr2h,c
 28695  002FE6  6ADE               	clrf	postinc2,c
 28696  002FE8  6ADE               	clrf	postinc2,c
 28697  002FEA  6ADE               	clrf	postinc2,c
 28698  002FEC  6ADD               	clrf	postdec2,c
 28699                           
 28700                           ; BSR set to: 0
 28701  002FEE  0012               	return		;funcret
 28702  002FF0                     __end_of_AddNodeToNetworkTable:
 28703                           	opt stack 0
 28704                           tblptru	equ	0xFF8
 28705                           tblptrh	equ	0xFF7
 28706                           tblptrl	equ	0xFF6
 28707                           tablat	equ	0xFF5
 28708                           prodh	equ	0xFF4
 28709                           prodl	equ	0xFF3
 28710                           intcon	equ	0xFF2
 28711                           intcon3	equ	0xFF0
 28712                           postinc0	equ	0xFEE
 28713                           plusw0	equ	0xFEB
 28714                           fsr0h	equ	0xFEA
 28715                           fsr0l	equ	0xFE9
 28716                           wreg	equ	0xFE8
 28717                           indf1	equ	0xFE7
 28718                           postinc1	equ	0xFE6
 28719                           postdec1	equ	0xFE5
 28720                           plusw1	equ	0xFE3
 28721                           fsr1h	equ	0xFE2
 28722                           fsr1l	equ	0xFE1
 28723                           indf2	equ	0xFDF
 28724                           postinc2	equ	0xFDE
 28725                           postdec2	equ	0xFDD
 28726                           plusw2	equ	0xFDB
 28727                           fsr2h	equ	0xFDA
 28728                           fsr2l	equ	0xFD9
 28729                           status	equ	0xFD8
 28730                           
 28731 ;; *************** function _memcpy *****************
 28732 ;; Defined at:
 28733 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 28734 ;; Parameters:    Size  Location     Type
 28735 ;;  d1              2   21[BANK0 ] PTR void 
 28736 ;;		 -> sleepRFDData.address(2), beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), 
 28737 ;;		 -> list.address(2), list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), 
 28738 ;;		 -> NetworkSendDiscoverRequest@databuff(64), userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.p
      +arent(2), 
 28739 ;;		 -> NetworkManagerTask@data(19), routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), 
 28740 ;;		 -> TransportManagerTask@databuff(64), TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(
      +2), 
 28741 ;;		 -> TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), 
 28742 ;;		 -> LE_processReceivedMessage@ll_addr(2), networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer
      +(72), 
 28743 ;;		 -> RouteManagerProcessReceive@from(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiMAC_Received
      +Packet@FrameCounter(4), 
 28744 ;;		 -> MiMAC_ReceivedPacket@addr(2), key(8), MACTxBuffer(64), ConnectionTable.Address(2), 
 28745 ;;		 -> MACRxPacket(12), MiApp_MessageAvailable@src(2), MiApp_UnicastAddress@src(2), MiApp_SetAddressPan@addr(2), 
 28746 ;;		 -> MiApp_EstablishConnection@src(2), MiApp_StartConnection@src(2), ConnectionTable(55), myLongAddress(2), 
 28747 ;;		 -> Read_MAC_Address@address(2), NULL(0), sleepRFDData(75), lastSource(2), 
 28748 ;;  s1              2   23[BANK0 ] PTR const void 
 28749 ;;		 -> sleepRFDData.data(1), Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), 
 28750 ;;		 -> address.bytes(2), IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), 
 28751 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), routeInfo.parent.bytes(2), 
 28752 ;;		 -> address.bytes(2), NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), 
 28753 ;;		 -> TMSendDataToRFD@databuff(64), TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), 
 28754 ;;		 -> TunnelManagerGetTunnel@device(2), tunnels.parent(2), tunnels.TxTime(8), tunnels(120), 
 28755 ;;		 -> neighbor_tbl.ll_addr.bytes(2), neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@p
      +arent(2), 
 28756 ;;		 -> radioReceivedPacket@child(2), source.bytes(2), radioReceivedPacket@source(2), RxPacket.Payload(64), 
 28757 ;;		 -> transParam.DestPANID(2), MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), 
 28758 ;;		 -> RxPacket(142), address.bytes(2), AddNodeToNetworkTable@address(2), srcAddress.bytes(2), 
 28759 ;;		 -> srcAddress(2), MiApp_EstablishConnection@src(2), myPANID(2), myLongAddress(2), 
 28760 ;;		 -> Read_MAC_Address@addr8(6), NULL(0), TxBuffer(64), sleepRFDData(75), 
 28761 ;;		 -> myAddr(2), lastSource(2), 
 28762 ;;  n               2   25[BANK0 ] unsigned int 
 28763 ;; Auto vars:     Size  Location     Type
 28764 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 28765 ;;		 -> sleepRFDData.data(1), Tick_MS(8), address.bytes(2), DeviceManagerBufferDeviceData@address(2), 
 28766 ;;		 -> address.bytes(2), IsNetworkDevice@address(2), address.bytes(2), NetworkSetAddressPAN@address(2), 
 28767 ;;		 -> NetworkSendDiscoverResponse@databuff(64), NetworkSendDiscoverRequest@databuff(64), NetworkManagerProcessIncoming
      +Data@buffer(64), routeInfo.parent.bytes(2), 
 28768 ;;		 -> address.bytes(2), NetworkInit@address(2), MyAddress.bytes(2), MyAddress(2), 
 28769 ;;		 -> TMSendDataToRFD@databuff(64), TMQ.data(64), TMQ(152), TunnelManagerInvalidateTunnel@device(2), 
 28770 ;;		 -> TunnelManagerGetTunnel@device(2), tunnels.parent(2), tunnels.TxTime(8), tunnels(120), 
 28771 ;;		 -> neighbor_tbl.ll_addr.bytes(2), neighbor_tbl.ll_addr(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@p
      +arent(2), 
 28772 ;;		 -> radioReceivedPacket@child(2), source.bytes(2), radioReceivedPacket@source(2), RxPacket.Payload(64), 
 28773 ;;		 -> transParam.DestPANID(2), MiMAC_SendPacket@transParam(5), mySecurityKey(8), OutgoingFrameCounter(4), 
 28774 ;;		 -> RxPacket(142), address.bytes(2), AddNodeToNetworkTable@address(2), srcAddress.bytes(2), 
 28775 ;;		 -> srcAddress(2), MiApp_EstablishConnection@src(2), myPANID(2), myLongAddress(2), 
 28776 ;;		 -> Read_MAC_Address@addr8(6), NULL(0), TxBuffer(64), sleepRFDData(75), 
 28777 ;;		 -> myAddr(2), lastSource(2), 
 28778 ;;  d               2   27[BANK0 ] PTR unsigned char 
 28779 ;;		 -> sleepRFDData.address(2), beaconMessageBuffer.parent(2), beaconMessageBuffer.data.parent(2), MSTickGet@tNow(8), 
 28780 ;;		 -> list.address(2), list(220), NetworkIssueDataRequest@data(10), NetworkSendDiscoverResponse@databuff(64), 
 28781 ;;		 -> NetworkSendDiscoverRequest@databuff(64), userdata(54), NetworkManagerProcessIncomingData@buffer(64), routeInfo.p
      +arent(2), 
 28782 ;;		 -> NetworkManagerTask@data(19), routeInfo(7), MyAddress(2), TMSendDataToRFD@databuff(64), 
 28783 ;;		 -> TransportManagerTask@databuff(64), TMQ(152), TunnelManagerInvalidateTunnel@addr(2), TunnelManagerGetTunnel@addr(
      +2), 
 28784 ;;		 -> TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(8), RbcQ(444), 
 28785 ;;		 -> LE_processReceivedMessage@ll_addr(2), networkSendBeacon@bt(2), beaconMessageBuffer.data(64), beaconMessageBuffer
      +(72), 
 28786 ;;		 -> RouteManagerProcessReceive@from(2), NetworkBroadcastData@databuff(64), radioReceivedPacket@bt(2), MiMAC_Received
      +Packet@FrameCounter(4), 
 28787 ;;		 -> MiMAC_ReceivedPacket@addr(2), key(8), MACTxBuffer(64), ConnectionTable.Address(2), 
 28788 ;;		 -> MACRxPacket(12), MiApp_MessageAvailable@src(2), MiApp_UnicastAddress@src(2), MiApp_SetAddressPan@addr(2), 
 28789 ;;		 -> MiApp_EstablishConnection@src(2), MiApp_StartConnection@src(2), ConnectionTable(55), myLongAddress(2), 
 28790 ;;		 -> Read_MAC_Address@address(2), NULL(0), sleepRFDData(75), lastSource(2), 
 28791 ;; Return value:  Size  Location     Type
 28792 ;;                  2   21[BANK0 ] PTR void 
 28793 ;; Registers used:
 28794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28795 ;; Tracked objects:
 28796 ;;		On entry : F/0
 28797 ;;		On exit  : F/0
 28798 ;;		Unchanged: 0/0
 28799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28800 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28804 ;;Total ram usage:       10 bytes
 28805 ;; Hardware stack levels used:    1
 28806 ;; Hardware stack levels required when called:    5
 28807 ;; This function calls:
 28808 ;;		Nothing
 28809 ;; This function is called by:
 28810 ;;		_main
 28811 ;;		_Read_MAC_Address
 28812 ;;		_MiApp_StartConnection
 28813 ;;		_MiApp_SetAddressPan
 28814 ;;		_MiApp_UnicastAddress
 28815 ;;		_MiApp_MessageAvailable
 28816 ;;		_AddNodeToNetworkTable
 28817 ;;		_MiMAC_Init
 28818 ;;		_MiMAC_SendPacket
 28819 ;;		_MiMAC_ReceivedPacket
 28820 ;;		_radioReceivedPacket
 28821 ;;		_RouteManagerProcessReceive
 28822 ;;		_networkSendBeacon
 28823 ;;		_LEAppendNeighborInfo
 28824 ;;		_LE_processReceivedMessage
 28825 ;;		_BroadcastManagerDelaySend
 28826 ;;		_TunnelManagerSetTunnel
 28827 ;;		_TunnelManagerGetTunnel
 28828 ;;		_TunnelManagerInvalidateTunnel
 28829 ;;		_TransportManagerTask
 28830 ;;		_TMSendFormedPacketTowardsCoordinator
 28831 ;;		_NetworkInit
 28832 ;;		_NetworkManagerProcessIncomingData
 28833 ;;		_NetworkPrepareSendPacket
 28834 ;;		_NetworkSetAddressPAN
 28835 ;;		_IsNetworkDevice
 28836 ;;		_DeviceManagerBufferDeviceData
 28837 ;;		_DeviceManagerGetDeviceData
 28838 ;;		_MSTickGet
 28839 ;; This function uses a non-reentrant model
 28840 ;;
 28841                           
 28842                           	psect	text140
 28843  006A0A                     __ptext140:
 28844                           	opt stack 0
 28845  006A0A                     _memcpy:
 28846                           	opt stack 25
 28847                           
 28848                           ; BSR set to: 0
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;incstack = 0
 28852  006A0A  C077  F07D         	movff	memcpy@s1,memcpy@s
 28853  006A0E  C078  F07E         	movff	memcpy@s1+1,memcpy@s+1
 28854  006A12  C075  F07B         	movff	memcpy@d1,memcpy@d
 28855  006A16  C076  F07C         	movff	memcpy@d1+1,memcpy@d+1
 28856  006A1A  D01A               	goto	l15308
 28857  006A1C                     l15302:
 28858                           
 28859                           ; BSR set to: 0
 28860  006A1C  C07D  FFF6         	movff	memcpy@s,tblptrl
 28861  006A20  C07E  FFF7         	movff	memcpy@s+1,tblptrh
 28862  006A24  6AF8               	clrf	tblptru,c
 28863  006A26  C07B  FFD9         	movff	memcpy@d,fsr2l
 28864  006A2A  C07C  FFDA         	movff	memcpy@d+1,fsr2h
 28865  006A2E  0E0E               	movlw	(high __ramtop+-1)
 28866  006A30  64F7               	cpfsgt	tblptrh,c
 28867  006A32  D003               	bra	u18187
 28868  006A34  0008               	tblrd		*
 28869  006A36  50F5               	movf	tablat,w,c
 28870  006A38  D005               	bra	u18180
 28871  006A3A                     u18187:
 28872  006A3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 28873  006A3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 28874  006A42  50EF               	movf	indf0,w,c
 28875  006A44                     u18180:
 28876  006A44  6EDF               	movwf	indf2,c
 28877  006A46  0100               	movlb	0	; () banked
 28878  006A48  4B7D               	infsnz	memcpy@s& (0+255),f,b
 28879  006A4A  2B7E               	incf	(memcpy@s+1)& (0+255),f,b
 28880                           
 28881                           ; BSR set to: 0
 28882  006A4C  4B7B               	infsnz	memcpy@d& (0+255),f,b
 28883  006A4E  2B7C               	incf	(memcpy@d+1)& (0+255),f,b
 28884  006A50                     l15308:
 28885                           
 28886                           ; BSR set to: 0
 28887  006A50  0779               	decf	memcpy@n& (0+255),f,b
 28888  006A52  A0D8               	btfss	status,0,c
 28889  006A54  077A               	decf	(memcpy@n+1)& (0+255),f,b
 28890  006A56  2979               	incf	memcpy@n& (0+255),w,b
 28891  006A58  E1E1               	bnz	l15302
 28892  006A5A  297A               	incf	(memcpy@n+1)& (0+255),w,b
 28893  006A5C  E1DF               	bnz	l15302
 28894                           
 28895                           ; BSR set to: 0
 28896  006A5E  0012               	return		;funcret
 28897  006A60                     __end_of_memcpy:
 28898                           	opt stack 0
 28899                           tblptru	equ	0xFF8
 28900                           tblptrh	equ	0xFF7
 28901                           tblptrl	equ	0xFF6
 28902                           tablat	equ	0xFF5
 28903                           prodh	equ	0xFF4
 28904                           prodl	equ	0xFF3
 28905                           intcon	equ	0xFF2
 28906                           intcon3	equ	0xFF0
 28907                           indf0	equ	0xFEF
 28908                           postinc0	equ	0xFEE
 28909                           plusw0	equ	0xFEB
 28910                           fsr0h	equ	0xFEA
 28911                           fsr0l	equ	0xFE9
 28912                           wreg	equ	0xFE8
 28913                           indf1	equ	0xFE7
 28914                           postinc1	equ	0xFE6
 28915                           postdec1	equ	0xFE5
 28916                           plusw1	equ	0xFE3
 28917                           fsr1h	equ	0xFE2
 28918                           fsr1l	equ	0xFE1
 28919                           indf2	equ	0xFDF
 28920                           postinc2	equ	0xFDE
 28921                           postdec2	equ	0xFDD
 28922                           plusw2	equ	0xFDB
 28923                           fsr2h	equ	0xFDA
 28924                           fsr2l	equ	0xFD9
 28925                           status	equ	0xFD8
 28926                           
 28927 ;; *************** function _isSameAddress *****************
 28928 ;; Defined at:
 28929 ;;		line 245 in file "../NetworkManager.c"
 28930 ;; Parameters:    Size  Location     Type
 28931 ;;  a1              2   29[BANK0 ] struct addr_t_def
 28932 ;;  a2              2   31[BANK0 ] struct addr_t_def
 28933 ;; Auto vars:     Size  Location     Type
 28934 ;;		None
 28935 ;; Return value:  Size  Location     Type
 28936 ;;                  1    wreg      unsigned char 
 28937 ;; Registers used:
 28938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28939 ;; Tracked objects:
 28940 ;;		On entry : 8/1
 28941 ;;		On exit  : F/0
 28942 ;;		Unchanged: 0/0
 28943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28948 ;;Total ram usage:        4 bytes
 28949 ;; Hardware stack levels used:    1
 28950 ;; Hardware stack levels required when called:    6
 28951 ;; This function calls:
 28952 ;;		_NetworkAddressSizeGet
 28953 ;;		_memcmp
 28954 ;; This function is called by:
 28955 ;;		_AddNodeToNetworkTable
 28956 ;;		_MiMAC_ReceivedPacket
 28957 ;;		_radioReceivedPacket
 28958 ;;		_NetworkUnicastData
 28959 ;;		_RouteManagerPerformUpdate
 28960 ;;		_routingTableFind
 28961 ;;		_RouterEvicted
 28962 ;;		_RouteManagerShouldInsert
 28963 ;;		_RoutingTableFindDeviceOrParent
 28964 ;;		_le_findIdx
 28965 ;;		_le_findWorstNeighborIdx
 28966 ;;		_le_updateNeighborTableEst
 28967 ;;		_le_findRandomNeighborIdx
 28968 ;;		_TunnelManagerSetTunnel
 28969 ;;		_TunnelManagerGetTunnel
 28970 ;;		_TunnelManagerInvalidateTunnel
 28971 ;;		_TMSendFormedPacketToRFD
 28972 ;;		_IsNetworkDevice
 28973 ;;		_DeviceManagerGetDeviceType
 28974 ;;		_DeviceManagerGetDeviceData
 28975 ;; This function uses a non-reentrant model
 28976 ;;
 28977                           
 28978                           	psect	text141
 28979  00737A                     __ptext141:
 28980                           	opt stack 0
 28981  00737A                     _isSameAddress:
 28982                           	opt stack 22
 28983                           
 28984                           ;NetworkManager.c: 247: return !memcmp(a1.bytes, a2.bytes, NetworkAddressSizeGet());
 28985                           
 28986                           ; BSR set to: 0
 28987                           ;incstack = 0
 28988  00737A  0E7D               	movlw	low isSameAddress@a1
 28989  00737C  0100               	movlb	0	; () banked
 28990  00737E  6F73               	movwf	memcmp@s1& (0+255),b
 28991  007380  6B74               	clrf	(memcmp@s1+1)& (0+255),b
 28992  007382  0E7F               	movlw	low isSameAddress@a2
 28993  007384  6F75               	movwf	memcmp@s2& (0+255),b
 28994  007386  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 28995  00738A  0100               	movlb	0	; () banked
 28996  00738C  6F76               	movwf	memcmp@n& (0+255),b
 28997  00738E  6B77               	clrf	(memcmp@n+1)& (0+255),b
 28998  007390  ECFD  F035         	call	_memcmp	;wreg free
 28999  007394  5173               	movf	?_memcmp& (0+255),w,b
 29000  007396  1174               	iorwf	(?_memcmp+1)& (0+255),w,b
 29001  007398  B4D8               	btfsc	status,2,c
 29002  00739A  0C01               	retlw	1
 29003                           
 29004                           ; BSR set to: 0
 29005  00739C  0C00               	retlw	0	;funcret
 29006  00739E                     __end_of_isSameAddress:
 29007                           	opt stack 0
 29008                           tblptru	equ	0xFF8
 29009                           tblptrh	equ	0xFF7
 29010                           tblptrl	equ	0xFF6
 29011                           tablat	equ	0xFF5
 29012                           prodh	equ	0xFF4
 29013                           prodl	equ	0xFF3
 29014                           intcon	equ	0xFF2
 29015                           intcon3	equ	0xFF0
 29016                           indf0	equ	0xFEF
 29017                           postinc0	equ	0xFEE
 29018                           plusw0	equ	0xFEB
 29019                           fsr0h	equ	0xFEA
 29020                           fsr0l	equ	0xFE9
 29021                           wreg	equ	0xFE8
 29022                           indf1	equ	0xFE7
 29023                           postinc1	equ	0xFE6
 29024                           postdec1	equ	0xFE5
 29025                           plusw1	equ	0xFE3
 29026                           fsr1h	equ	0xFE2
 29027                           fsr1l	equ	0xFE1
 29028                           indf2	equ	0xFDF
 29029                           postinc2	equ	0xFDE
 29030                           postdec2	equ	0xFDD
 29031                           plusw2	equ	0xFDB
 29032                           fsr2h	equ	0xFDA
 29033                           fsr2l	equ	0xFD9
 29034                           status	equ	0xFD8
 29035                           
 29036 ;; *************** function _memcmp *****************
 29037 ;; Defined at:
 29038 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
 29039 ;; Parameters:    Size  Location     Type
 29040 ;;  s1              2   19[BANK0 ] PTR const void 
 29041 ;;		 -> a1.bytes(2), isSameAddress@a1(2), address.bytes(2), isBroadcastAddress@address(2), 
 29042 ;;		 -> hc_table(360), 
 29043 ;;  s2              1   21[BANK0 ] PTR const void 
 29044 ;;		 -> a2.bytes(2), isSameAddress@a2(2), isBroadcastAddress@addr(8), isKnownPacket@zeros(12), 
 29045 ;;  n               2   22[BANK0 ] unsigned int 
 29046 ;; Auto vars:     Size  Location     Type
 29047 ;;		None
 29048 ;; Return value:  Size  Location     Type
 29049 ;;                  2   19[BANK0 ] int 
 29050 ;; Registers used:
 29051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29052 ;; Tracked objects:
 29053 ;;		On entry : F/0
 29054 ;;		On exit  : F/0
 29055 ;;		Unchanged: 0/0
 29056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29057 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29060 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29061 ;;Total ram usage:        7 bytes
 29062 ;; Hardware stack levels used:    1
 29063 ;; Hardware stack levels required when called:    5
 29064 ;; This function calls:
 29065 ;;		Nothing
 29066 ;; This function is called by:
 29067 ;;		_isKnownPacket
 29068 ;;		_isBroadcastAddress
 29069 ;;		_isSameAddress
 29070 ;; This function uses a non-reentrant model
 29071 ;;
 29072                           
 29073                           	psect	text142
 29074  006BFA                     __ptext142:
 29075                           	opt stack 0
 29076  006BFA                     _memcmp:
 29077                           	opt stack 22
 29078                           
 29079                           ; BSR set to: 0
 29080                           
 29081                           ; BSR set to: 0
 29082                           ;incstack = 0
 29083  006BFA  D01D               	goto	l15138
 29084  006BFC                     l15130:
 29085                           
 29086                           ; BSR set to: 0
 29087  006BFC  5175               	movf	memcmp@s2& (0+255),w,b
 29088  006BFE  6ED9               	movwf	fsr2l,c
 29089  006C00  6ADA               	clrf	fsr2h,c
 29090  006C02  C073  FFE1         	movff	memcmp@s1,fsr1l
 29091  006C06  C074  FFE2         	movff	memcmp@s1+1,fsr1h
 29092  006C0A  50DE               	movf	postinc2,w,c
 29093  006C0C  18E6               	xorwf	postinc1,w,c
 29094  006C0E  E010               	bz	l15136
 29095                           
 29096                           ; BSR set to: 0
 29097  006C10  C073  FFD9         	movff	memcmp@s1,fsr2l
 29098  006C14  C074  FFDA         	movff	memcmp@s1+1,fsr2h
 29099  006C18  50DF               	movf	indf2,w,c
 29100  006C1A  6F78               	movwf	??_memcmp& (0+255),b
 29101  006C1C  5175               	movf	memcmp@s2& (0+255),w,b
 29102  006C1E  6ED9               	movwf	fsr2l,c
 29103  006C20  6ADA               	clrf	fsr2h,c
 29104  006C22  50DF               	movf	indf2,w,c
 29105  006C24  5D78               	subwf	??_memcmp& (0+255),w,b
 29106  006C26  6F73               	movwf	?_memcmp& (0+255),b
 29107  006C28  6B74               	clrf	(?_memcmp+1)& (0+255),b
 29108  006C2A  A0D8               	btfss	status,0,c
 29109  006C2C  0774               	decf	(?_memcmp+1)& (0+255),f,b
 29110  006C2E  0012               	return	
 29111  006C30                     l15136:
 29112                           
 29113                           ; BSR set to: 0
 29114  006C30  4B73               	infsnz	memcmp@s1& (0+255),f,b
 29115  006C32  2B74               	incf	(memcmp@s1+1)& (0+255),f,b
 29116  006C34  2B75               	incf	memcmp@s2& (0+255),f,b
 29117  006C36                     l15138:
 29118                           
 29119                           ; BSR set to: 0
 29120  006C36  0776               	decf	memcmp@n& (0+255),f,b
 29121  006C38  A0D8               	btfss	status,0,c
 29122  006C3A  0777               	decf	(memcmp@n+1)& (0+255),f,b
 29123  006C3C  2976               	incf	memcmp@n& (0+255),w,b
 29124  006C3E  E1DE               	bnz	l15130
 29125  006C40  2977               	incf	(memcmp@n+1)& (0+255),w,b
 29126  006C42  E1DC               	bnz	l15130
 29127                           
 29128                           ; BSR set to: 0
 29129  006C44  6B73               	clrf	?_memcmp& (0+255),b
 29130  006C46  6B74               	clrf	(?_memcmp+1)& (0+255),b
 29131                           
 29132                           ; BSR set to: 0
 29133  006C48  0012               	return		;funcret
 29134  006C4A                     __end_of_memcmp:
 29135                           	opt stack 0
 29136                           tblptru	equ	0xFF8
 29137                           tblptrh	equ	0xFF7
 29138                           tblptrl	equ	0xFF6
 29139                           tablat	equ	0xFF5
 29140                           prodh	equ	0xFF4
 29141                           prodl	equ	0xFF3
 29142                           intcon	equ	0xFF2
 29143                           intcon3	equ	0xFF0
 29144                           indf0	equ	0xFEF
 29145                           postinc0	equ	0xFEE
 29146                           plusw0	equ	0xFEB
 29147                           fsr0h	equ	0xFEA
 29148                           fsr0l	equ	0xFE9
 29149                           wreg	equ	0xFE8
 29150                           indf1	equ	0xFE7
 29151                           postinc1	equ	0xFE6
 29152                           postdec1	equ	0xFE5
 29153                           plusw1	equ	0xFE3
 29154                           fsr1h	equ	0xFE2
 29155                           fsr1l	equ	0xFE1
 29156                           indf2	equ	0xFDF
 29157                           postinc2	equ	0xFDE
 29158                           postdec2	equ	0xFDD
 29159                           plusw2	equ	0xFDB
 29160                           fsr2h	equ	0xFDA
 29161                           fsr2l	equ	0xFD9
 29162                           status	equ	0xFD8
 29163                           
 29164 ;; *************** function _MiApp_InitSleepRFDBuffers *****************
 29165 ;; Defined at:
 29166 ;;		line 93 in file "../DeviceManager.c"
 29167 ;; Parameters:    Size  Location     Type
 29168 ;;  buffer          2   27[BANK0 ] PTR unsigned char 
 29169 ;;		 -> sleepRFDData(75), 
 29170 ;;  bufferSize      2   29[BANK0 ] unsigned int 
 29171 ;;  rfdMaxDataSi    2   31[BANK0 ] unsigned int 
 29172 ;; Auto vars:     Size  Location     Type
 29173 ;;		None
 29174 ;; Return value:  Size  Location     Type
 29175 ;;                  2   27[BANK0 ] unsigned int 
 29176 ;; Registers used:
 29177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29178 ;; Tracked objects:
 29179 ;;		On entry : F/0
 29180 ;;		On exit  : F/0
 29181 ;;		Unchanged: 0/0
 29182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29183 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29186 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29187 ;;Total ram usage:        8 bytes
 29188 ;; Hardware stack levels used:    1
 29189 ;; Hardware stack levels required when called:    6
 29190 ;; This function calls:
 29191 ;;		_NetworkAddressSizeGet
 29192 ;;		___lwdiv
 29193 ;;		_memset
 29194 ;; This function is called by:
 29195 ;;		_main
 29196 ;; This function uses a non-reentrant model
 29197 ;;
 29198                           
 29199                           	psect	text143
 29200  00659A                     __ptext143:
 29201                           	opt stack 0
 29202  00659A                     _MiApp_InitSleepRFDBuffers:
 29203                           	opt stack 24
 29204                           
 29205                           ; BSR set to: 0
 29206                           ;DeviceManager.c: 95: devBuffers=buffer;
 29207                           
 29208                           ; BSR set to: 0
 29209                           ;incstack = 0
 29210  00659A  C07B  F0E9         	movff	MiApp_InitSleepRFDBuffers@buffer,_devBuffers
 29211  00659E  C07C  F0EA         	movff	MiApp_InitSleepRFDBuffers@buffer+1,_devBuffers+1
 29212                           
 29213                           ; BSR set to: 0
 29214                           ;DeviceManager.c: 96: sleepRFDBufferCount=bufferSize/(NetworkAddressSizeGet()+(1+2)+rfdM
      +                          axDataSize);
 29215  0065A2  C07D  F073         	movff	MiApp_InitSleepRFDBuffers@bufferSize,___lwdiv@dividend
 29216  0065A6  C07E  F074         	movff	MiApp_InitSleepRFDBuffers@bufferSize+1,___lwdiv@dividend+1
 29217  0065AA  EC0C  F03B         	call	_NetworkAddressSizeGet	;wreg free
 29218  0065AE  0100               	movlb	0	; () banked
 29219  0065B0  257F               	addwf	MiApp_InitSleepRFDBuffers@rfdMaxDataSize& (0+255),w,b
 29220  0065B2  6F81               	movwf	??_MiApp_InitSleepRFDBuffers& (0+255),b
 29221  0065B4  0E00               	movlw	0
 29222  0065B6  2180               	addwfc	(MiApp_InitSleepRFDBuffers@rfdMaxDataSize+1)& (0+255),w,b
 29223  0065B8  6F82               	movwf	(??_MiApp_InitSleepRFDBuffers+1)& (0+255),b
 29224  0065BA  0E03               	movlw	3
 29225  0065BC  2581               	addwf	??_MiApp_InitSleepRFDBuffers& (0+255),w,b
 29226  0065BE  6F75               	movwf	___lwdiv@divisor& (0+255),b
 29227  0065C0  0E00               	movlw	0
 29228  0065C2  2182               	addwfc	(??_MiApp_InitSleepRFDBuffers+1)& (0+255),w,b
 29229  0065C4  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29230  0065C6  EC71  F036         	call	___lwdiv	;wreg free
 29231  0065CA  C073  F039         	movff	?___lwdiv,_sleepRFDBufferCount
 29232  0065CE  C074  F03A         	movff	?___lwdiv+1,_sleepRFDBufferCount+1
 29233                           
 29234                           ; BSR set to: 0
 29235                           ;DeviceManager.c: 97: sleepRFDMaxBufferLen=rfdMaxDataSize;
 29236  0065D2  C07F  F1B1         	movff	MiApp_InitSleepRFDBuffers@rfdMaxDataSize,_sleepRFDMaxBufferLen
 29237  0065D6  C080  F1B2         	movff	MiApp_InitSleepRFDBuffers@rfdMaxDataSize+1,_sleepRFDMaxBufferLen+1
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;DeviceManager.c: 98: sleepRFDTotalBufferLen=bufferSize;
 29241  0065DA  C07D  F1B3         	movff	MiApp_InitSleepRFDBuffers@bufferSize,_sleepRFDTotalBufferLen
 29242  0065DE  C07E  F1B4         	movff	MiApp_InitSleepRFDBuffers@bufferSize+1,_sleepRFDTotalBufferLen+1
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;DeviceManager.c: 99: if(buffer!=(0))
 29246  0065E2  517B               	movf	MiApp_InitSleepRFDBuffers@buffer& (0+255),w,b
 29247  0065E4  117C               	iorwf	(MiApp_InitSleepRFDBuffers@buffer+1)& (0+255),w,b
 29248  0065E6  B4D8               	btfsc	status,2,c
 29249  0065E8  0012               	return	
 29250                           
 29251                           ; BSR set to: 0
 29252                           ;DeviceManager.c: 100: {
 29253                           ;DeviceManager.c: 101: memset(devBuffers,0x00,bufferSize);
 29254  0065EA  C0E9  F073         	movff	_devBuffers,memset@p1
 29255  0065EE  C0EA  F074         	movff	_devBuffers+1,memset@p1+1
 29256  0065F2  6B76               	clrf	(memset@c+1)& (0+255),b
 29257  0065F4  6B75               	clrf	memset@c& (0+255),b
 29258  0065F6  C07D  F077         	movff	MiApp_InitSleepRFDBuffers@bufferSize,memset@n
 29259  0065FA  C07E  F078         	movff	MiApp_InitSleepRFDBuffers@bufferSize+1,memset@n+1
 29260  0065FE  EF47  F039         	goto	_memset	;wreg free
 29261  006602                     __end_of_MiApp_InitSleepRFDBuffers:
 29262                           	opt stack 0
 29263                           tblptru	equ	0xFF8
 29264                           tblptrh	equ	0xFF7
 29265                           tblptrl	equ	0xFF6
 29266                           tablat	equ	0xFF5
 29267                           prodh	equ	0xFF4
 29268                           prodl	equ	0xFF3
 29269                           intcon	equ	0xFF2
 29270                           intcon3	equ	0xFF0
 29271                           indf0	equ	0xFEF
 29272                           postinc0	equ	0xFEE
 29273                           plusw0	equ	0xFEB
 29274                           fsr0h	equ	0xFEA
 29275                           fsr0l	equ	0xFE9
 29276                           wreg	equ	0xFE8
 29277                           indf1	equ	0xFE7
 29278                           postinc1	equ	0xFE6
 29279                           postdec1	equ	0xFE5
 29280                           plusw1	equ	0xFE3
 29281                           fsr1h	equ	0xFE2
 29282                           fsr1l	equ	0xFE1
 29283                           indf2	equ	0xFDF
 29284                           postinc2	equ	0xFDE
 29285                           postdec2	equ	0xFDD
 29286                           plusw2	equ	0xFDB
 29287                           fsr2h	equ	0xFDA
 29288                           fsr2l	equ	0xFD9
 29289                           status	equ	0xFD8
 29290                           
 29291 ;; *************** function _memset *****************
 29292 ;; Defined at:
 29293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 29294 ;; Parameters:    Size  Location     Type
 29295 ;;  p1              2   19[BANK0 ] PTR void 
 29296 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 29297 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 29298 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 29299 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 29300 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 29301 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), ConnectionTable(55), radioBroadcast@addr(2), 
 29302 ;;		 -> NULL(0), rxMessage(10), sleepRFDData(75), LCDText(33), 
 29303 ;;  c               2   21[BANK0 ] int 
 29304 ;;  n               2   23[BANK0 ] unsigned int 
 29305 ;; Auto vars:     Size  Location     Type
 29306 ;;  p               2   25[BANK0 ] PTR unsigned char 
 29307 ;;		 -> Tick_MS(8), list(220), IsNetworkDevice@oldest(8), NetworkSendDiscoverResponse@address(2), 
 29308 ;;		 -> NetworkSendDiscoverRequest@address(2), CoordinatorGenericAddress@address(2), routeInfo.parent(2), CoordinatorAdd
      +r(2), 
 29309 ;;		 -> routeInfo(7), TMQ(152), hc_table(360), isKnownPacket@zeros(12), 
 29310 ;;		 -> isKnownPacket@OldestTick(8), TunnelManagerGetTunnel@retAddr(2), tunnels(120), TunnelManagerSetTunnel@OldestTick(
      +8), 
 29311 ;;		 -> RbcQ(444), beaconMessageBuffer(72), RoutingTableFindDeviceOrParent@res(2), NewBestParent(2), 
 29312 ;;		 -> NetworkBroadcastData@address(2), ActiveScanResults(25), ConnectionTable(55), radioBroadcast@addr(2), 
 29313 ;;		 -> NULL(0), rxMessage(10), sleepRFDData(75), LCDText(33), 
 29314 ;; Return value:  Size  Location     Type
 29315 ;;                  2   19[BANK0 ] PTR void 
 29316 ;; Registers used:
 29317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29318 ;; Tracked objects:
 29319 ;;		On entry : F/0
 29320 ;;		On exit  : F/0
 29321 ;;		Unchanged: 0/0
 29322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29323 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29326 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29327 ;;Total ram usage:        8 bytes
 29328 ;; Hardware stack levels used:    1
 29329 ;; Hardware stack levels required when called:    5
 29330 ;; This function calls:
 29331 ;;		Nothing
 29332 ;; This function is called by:
 29333 ;;		_radioBroadcast
 29334 ;;		_MiApp_ProtocolInit
 29335 ;;		_NetworkDataArrivedEvent
 29336 ;;		_AddNodeToNetworkTable
 29337 ;;		_RouteManagerInit
 29338 ;;		_routeInfoInit
 29339 ;;		_RoutingTableFindDeviceOrParent
 29340 ;;		_networkSendBeacon
 29341 ;;		_BroadcastManagerInit
 29342 ;;		_BroadcastManagerTask
 29343 ;;		_TunnelManagerSetTunnel
 29344 ;;		_TunnelManagerGetTunnel
 29345 ;;		_TunnelManagerInvalidateTunnel
 29346 ;;		_TunnelManagerInit
 29347 ;;		_isKnownPacket
 29348 ;;		_CacheInit
 29349 ;;		_TransportManagerInit
 29350 ;;		_NetworkInit
 29351 ;;		_CoordinatorGenericAddress
 29352 ;;		_NetworkSendDiscoverResponse
 29353 ;;		_IsNetworkDevice
 29354 ;;		_DeviceManagerInit
 29355 ;;		_MiApp_InitSleepRFDBuffers
 29356 ;;		_NetworkBroadcastData
 29357 ;; This function uses a non-reentrant model
 29358 ;;
 29359                           
 29360                           	psect	text144
 29361  00728E                     __ptext144:
 29362                           	opt stack 0
 29363  00728E                     _memset:
 29364                           	opt stack 20
 29365                           
 29366                           ; BSR set to: 0
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;incstack = 0
 29370  00728E  C073  F079         	movff	memset@p1,memset@p
 29371  007292  C074  F07A         	movff	memset@p1+1,memset@p+1
 29372  007296  D008               	goto	l15294
 29373  007298                     l15290:
 29374                           
 29375                           ; BSR set to: 0
 29376  007298  C079  FFD9         	movff	memset@p,fsr2l
 29377  00729C  C07A  FFDA         	movff	memset@p+1,fsr2h
 29378  0072A0  C075  FFDF         	movff	memset@c,indf2
 29379                           
 29380                           ; BSR set to: 0
 29381  0072A4  4B79               	infsnz	memset@p& (0+255),f,b
 29382  0072A6  2B7A               	incf	(memset@p+1)& (0+255),f,b
 29383  0072A8                     l15294:
 29384                           
 29385                           ; BSR set to: 0
 29386  0072A8  0777               	decf	memset@n& (0+255),f,b
 29387  0072AA  A0D8               	btfss	status,0,c
 29388  0072AC  0778               	decf	(memset@n+1)& (0+255),f,b
 29389  0072AE  2977               	incf	memset@n& (0+255),w,b
 29390  0072B0  E1F3               	bnz	l15290
 29391  0072B2  2978               	incf	(memset@n+1)& (0+255),w,b
 29392  0072B4  E1F1               	bnz	l15290
 29393                           
 29394                           ; BSR set to: 0
 29395  0072B6  0012               	return		;funcret
 29396  0072B8                     __end_of_memset:
 29397                           	opt stack 0
 29398                           tblptru	equ	0xFF8
 29399                           tblptrh	equ	0xFF7
 29400                           tblptrl	equ	0xFF6
 29401                           tablat	equ	0xFF5
 29402                           prodh	equ	0xFF4
 29403                           prodl	equ	0xFF3
 29404                           intcon	equ	0xFF2
 29405                           intcon3	equ	0xFF0
 29406                           indf0	equ	0xFEF
 29407                           postinc0	equ	0xFEE
 29408                           plusw0	equ	0xFEB
 29409                           fsr0h	equ	0xFEA
 29410                           fsr0l	equ	0xFE9
 29411                           wreg	equ	0xFE8
 29412                           indf1	equ	0xFE7
 29413                           postinc1	equ	0xFE6
 29414                           postdec1	equ	0xFE5
 29415                           plusw1	equ	0xFE3
 29416                           fsr1h	equ	0xFE2
 29417                           fsr1l	equ	0xFE1
 29418                           indf2	equ	0xFDF
 29419                           postinc2	equ	0xFDE
 29420                           postdec2	equ	0xFDD
 29421                           plusw2	equ	0xFDB
 29422                           fsr2h	equ	0xFDA
 29423                           fsr2l	equ	0xFD9
 29424                           status	equ	0xFD8
 29425                           
 29426 ;; *************** function ___lwdiv *****************
 29427 ;; Defined at:
 29428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 29429 ;; Parameters:    Size  Location     Type
 29430 ;;  dividend        2   19[BANK0 ] unsigned int 
 29431 ;;  divisor         2   21[BANK0 ] unsigned int 
 29432 ;; Auto vars:     Size  Location     Type
 29433 ;;  quotient        2   24[BANK0 ] unsigned int 
 29434 ;;  counter         1   23[BANK0 ] unsigned char 
 29435 ;; Return value:  Size  Location     Type
 29436 ;;                  2   19[BANK0 ] unsigned int 
 29437 ;; Registers used:
 29438 ;;		wreg, status,2, status,0
 29439 ;; Tracked objects:
 29440 ;;		On entry : F/0
 29441 ;;		On exit  : F/0
 29442 ;;		Unchanged: 0/0
 29443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29445 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29447 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29448 ;;Total ram usage:        7 bytes
 29449 ;; Hardware stack levels used:    1
 29450 ;; Hardware stack levels required when called:    5
 29451 ;; This function calls:
 29452 ;;		Nothing
 29453 ;; This function is called by:
 29454 ;;		_sprintf
 29455 ;;		_LEAppendNeighborInfo
 29456 ;;		_le_updateETX
 29457 ;;		_le_updateNeighborTableEst
 29458 ;;		_MiApp_InitSleepRFDBuffers
 29459 ;; This function uses a non-reentrant model
 29460 ;;
 29461                           
 29462                           	psect	text145
 29463  006CE2                     __ptext145:
 29464                           	opt stack 0
 29465  006CE2                     ___lwdiv:
 29466                           	opt stack 24
 29467                           
 29468                           ; BSR set to: 0
 29469                           
 29470                           ; BSR set to: 0
 29471                           ;incstack = 0
 29472  006CE2  6B78               	clrf	___lwdiv@quotient& (0+255),b
 29473  006CE4  6B79               	clrf	(___lwdiv@quotient+1)& (0+255),b
 29474                           
 29475                           ; BSR set to: 0
 29476  006CE6  5175               	movf	___lwdiv@divisor& (0+255),w,b
 29477  006CE8  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29478  006CEA  E01B               	bz	l2588
 29479                           
 29480                           ; BSR set to: 0
 29481  006CEC  0E01               	movlw	1
 29482  006CEE  6F77               	movwf	___lwdiv@counter& (0+255),b
 29483  006CF0  D004               	goto	l15782
 29484  006CF2                     l15780:
 29485                           
 29486                           ; BSR set to: 0
 29487  006CF2  90D8               	bcf	status,0,c
 29488  006CF4  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
 29489  006CF6  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29490  006CF8  2B77               	incf	___lwdiv@counter& (0+255),f,b
 29491  006CFA                     l15782:
 29492                           
 29493                           ; BSR set to: 0
 29494  006CFA  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29495  006CFC  D7FA               	goto	l15780
 29496  006CFE                     l15784:
 29497                           
 29498                           ; BSR set to: 0
 29499  006CFE  90D8               	bcf	status,0,c
 29500  006D00  3778               	rlcf	___lwdiv@quotient& (0+255),f,b
 29501  006D02  3779               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29502                           
 29503                           ; BSR set to: 0
 29504  006D04  5175               	movf	___lwdiv@divisor& (0+255),w,b
 29505  006D06  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
 29506  006D08  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29507  006D0A  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29508  006D0C  E305               	bnc	l15792
 29509                           
 29510                           ; BSR set to: 0
 29511  006D0E  5175               	movf	___lwdiv@divisor& (0+255),w,b
 29512  006D10  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
 29513  006D12  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29514  006D14  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29515                           
 29516                           ; BSR set to: 0
 29517  006D16  8178               	bsf	___lwdiv@quotient& (0+255),0,b
 29518  006D18                     l15792:
 29519                           
 29520                           ; BSR set to: 0
 29521  006D18  90D8               	bcf	status,0,c
 29522  006D1A  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29523  006D1C  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
 29524                           
 29525                           ; BSR set to: 0
 29526  006D1E  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 29527  006D20  D7EE               	goto	l15784
 29528  006D22                     l2588:
 29529                           
 29530                           ; BSR set to: 0
 29531  006D22  C078  F073         	movff	___lwdiv@quotient,?___lwdiv
 29532  006D26  C079  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29533                           
 29534                           ; BSR set to: 0
 29535  006D2A  0012               	return		;funcret
 29536  006D2C                     __end_of___lwdiv:
 29537                           	opt stack 0
 29538                           tblptru	equ	0xFF8
 29539                           tblptrh	equ	0xFF7
 29540                           tblptrl	equ	0xFF6
 29541                           tablat	equ	0xFF5
 29542                           prodh	equ	0xFF4
 29543                           prodl	equ	0xFF3
 29544                           intcon	equ	0xFF2
 29545                           intcon3	equ	0xFF0
 29546                           indf0	equ	0xFEF
 29547                           postinc0	equ	0xFEE
 29548                           plusw0	equ	0xFEB
 29549                           fsr0h	equ	0xFEA
 29550                           fsr0l	equ	0xFE9
 29551                           wreg	equ	0xFE8
 29552                           indf1	equ	0xFE7
 29553                           postinc1	equ	0xFE6
 29554                           postdec1	equ	0xFE5
 29555                           plusw1	equ	0xFE3
 29556                           fsr1h	equ	0xFE2
 29557                           fsr1l	equ	0xFE1
 29558                           indf2	equ	0xFDF
 29559                           postinc2	equ	0xFDE
 29560                           postdec2	equ	0xFDD
 29561                           plusw2	equ	0xFDB
 29562                           fsr2h	equ	0xFDA
 29563                           fsr2l	equ	0xFD9
 29564                           status	equ	0xFD8
 29565                           
 29566 ;; *************** function _NetworkAddressSizeGet *****************
 29567 ;; Defined at:
 29568 ;;		line 161 in file "../NetworkManager.c"
 29569 ;; Parameters:    Size  Location     Type
 29570 ;;		None
 29571 ;; Auto vars:     Size  Location     Type
 29572 ;;		None
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  1    wreg      unsigned char 
 29575 ;; Registers used:
 29576 ;;		wreg, status,2
 29577 ;; Tracked objects:
 29578 ;;		On entry : F/0
 29579 ;;		On exit  : F/1
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29586 ;;Total ram usage:        0 bytes
 29587 ;; Hardware stack levels used:    1
 29588 ;; Hardware stack levels required when called:    5
 29589 ;; This function calls:
 29590 ;;		Nothing
 29591 ;; This function is called by:
 29592 ;;		_routeInfoInit
 29593 ;;		_RouteManagerProcessReceive
 29594 ;;		_RoutingTableFindDeviceOrParent
 29595 ;;		_networkSendBeacon
 29596 ;;		_LEAppendNeighborInfo
 29597 ;;		_LE_processReceivedMessage
 29598 ;;		_TunnelManagerSetTunnel
 29599 ;;		_TunnelManagerGetTunnel
 29600 ;;		_TunnelManagerInvalidateTunnel
 29601 ;;		_NetworkInit
 29602 ;;		_isBroadcastAddress
 29603 ;;		_isSameAddress
 29604 ;;		_CoordinatorGenericAddress
 29605 ;;		_NetworkPrepareSendPacket
 29606 ;;		_NetworkSendDiscoverResponse
 29607 ;;		_NetworkSetAddressPAN
 29608 ;;		_IsNetworkDevice
 29609 ;;		_MiApp_InitSleepRFDBuffers
 29610 ;;		_DeviceManagerBufferDeviceData
 29611 ;;		_DeviceManagerGetDeviceData
 29612 ;;		_NetworkBroadcastData
 29613 ;; This function uses a non-reentrant model
 29614 ;;
 29615                           
 29616                           	psect	text146
 29617  007618                     __ptext146:
 29618                           	opt stack 0
 29619  007618                     _NetworkAddressSizeGet:
 29620                           	opt stack 22
 29621                           
 29622                           ; BSR set to: 0
 29623                           ;NetworkManager.c: 163: return(addressLen);
 29624                           
 29625                           ; BSR set to: 0
 29626                           ;incstack = 0
 29627  007618  0101               	movlb	1	; () banked
 29628  00761A  51FA               	movf	_addressLen& (0+255),w,b
 29629                           
 29630                           ; BSR set to: 1
 29631  00761C  0012               	return		;funcret
 29632  00761E                     __end_of_NetworkAddressSizeGet:
 29633                           	opt stack 0
 29634                           tblptru	equ	0xFF8
 29635                           tblptrh	equ	0xFF7
 29636                           tblptrl	equ	0xFF6
 29637                           tablat	equ	0xFF5
 29638                           prodh	equ	0xFF4
 29639                           prodl	equ	0xFF3
 29640                           intcon	equ	0xFF2
 29641                           intcon3	equ	0xFF0
 29642                           indf0	equ	0xFEF
 29643                           postinc0	equ	0xFEE
 29644                           plusw0	equ	0xFEB
 29645                           fsr0h	equ	0xFEA
 29646                           fsr0l	equ	0xFE9
 29647                           wreg	equ	0xFE8
 29648                           indf1	equ	0xFE7
 29649                           postinc1	equ	0xFE6
 29650                           postdec1	equ	0xFE5
 29651                           plusw1	equ	0xFE3
 29652                           fsr1h	equ	0xFE2
 29653                           fsr1l	equ	0xFE1
 29654                           indf2	equ	0xFDF
 29655                           postinc2	equ	0xFDE
 29656                           postdec2	equ	0xFDD
 29657                           plusw2	equ	0xFDB
 29658                           fsr2h	equ	0xFDA
 29659                           fsr2l	equ	0xFD9
 29660                           status	equ	0xFD8
 29661                           
 29662 ;; *************** function _MiApp_DiscardMessage *****************
 29663 ;; Defined at:
 29664 ;;		line 262 in file "../src/Bridge.c"
 29665 ;; Parameters:    Size  Location     Type
 29666 ;;		None
 29667 ;; Auto vars:     Size  Location     Type
 29668 ;;		None
 29669 ;; Return value:  Size  Location     Type
 29670 ;;                  1    wreg      void 
 29671 ;; Registers used:
 29672 ;;		cstack
 29673 ;; Tracked objects:
 29674 ;;		On entry : F/0
 29675 ;;		On exit  : F/1
 29676 ;;		Unchanged: 0/0
 29677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29682 ;;Total ram usage:        0 bytes
 29683 ;; Hardware stack levels used:    1
 29684 ;; Hardware stack levels required when called:    6
 29685 ;; This function calls:
 29686 ;;		_NetworkReleaseUserData
 29687 ;; This function is called by:
 29688 ;;		_main
 29689 ;; This function uses a non-reentrant model
 29690 ;;
 29691                           
 29692                           	psect	text147
 29693  007604                     __ptext147:
 29694                           	opt stack 0
 29695  007604                     _MiApp_DiscardMessage:
 29696                           	opt stack 24
 29697                           
 29698                           ; BSR set to: 0
 29699                           ;Bridge.c: 264: UserMessageAvailable=0;
 29700                           
 29701                           ; BSR set to: 1
 29702                           ;incstack = 0
 29703  007604  0101               	movlb	1	; () banked
 29704  007606  6BC0               	clrf	_UserMessageAvailable& (0+255),b
 29705                           
 29706                           ; BSR set to: 1
 29707                           ;Bridge.c: 265: NetworkReleaseUserData();
 29708  007608  EF1D  F03B         	goto	_NetworkReleaseUserData	;wreg free
 29709  00760C                     __end_of_MiApp_DiscardMessage:
 29710                           	opt stack 0
 29711                           tblptru	equ	0xFF8
 29712                           tblptrh	equ	0xFF7
 29713                           tblptrl	equ	0xFF6
 29714                           tablat	equ	0xFF5
 29715                           prodh	equ	0xFF4
 29716                           prodl	equ	0xFF3
 29717                           intcon	equ	0xFF2
 29718                           intcon3	equ	0xFF0
 29719                           indf0	equ	0xFEF
 29720                           postinc0	equ	0xFEE
 29721                           plusw0	equ	0xFEB
 29722                           fsr0h	equ	0xFEA
 29723                           fsr0l	equ	0xFE9
 29724                           wreg	equ	0xFE8
 29725                           indf1	equ	0xFE7
 29726                           postinc1	equ	0xFE6
 29727                           postdec1	equ	0xFE5
 29728                           plusw1	equ	0xFE3
 29729                           fsr1h	equ	0xFE2
 29730                           fsr1l	equ	0xFE1
 29731                           indf2	equ	0xFDF
 29732                           postinc2	equ	0xFDE
 29733                           postdec2	equ	0xFDD
 29734                           plusw2	equ	0xFDB
 29735                           fsr2h	equ	0xFDA
 29736                           fsr2l	equ	0xFD9
 29737                           status	equ	0xFD8
 29738                           
 29739 ;; *************** function _NetworkReleaseUserData *****************
 29740 ;; Defined at:
 29741 ;;		line 353 in file "../NetworkManager.c"
 29742 ;; Parameters:    Size  Location     Type
 29743 ;;		None
 29744 ;; Auto vars:     Size  Location     Type
 29745 ;;		None
 29746 ;; Return value:  Size  Location     Type
 29747 ;;                  1    wreg      void 
 29748 ;; Registers used:
 29749 ;;		None
 29750 ;; Tracked objects:
 29751 ;;		On entry : F/1
 29752 ;;		On exit  : F/1
 29753 ;;		Unchanged: 0/0
 29754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29759 ;;Total ram usage:        0 bytes
 29760 ;; Hardware stack levels used:    1
 29761 ;; Hardware stack levels required when called:    5
 29762 ;; This function calls:
 29763 ;;		Nothing
 29764 ;; This function is called by:
 29765 ;;		_MiApp_DiscardMessage
 29766 ;; This function uses a non-reentrant model
 29767 ;;
 29768                           
 29769                           	psect	text148
 29770  00763A                     __ptext148:
 29771                           	opt stack 0
 29772  00763A                     _NetworkReleaseUserData:
 29773                           	opt stack 24
 29774                           
 29775                           ; BSR set to: 1
 29776                           ;NetworkManager.c: 355: userDataAvailable=0;
 29777                           
 29778                           ; BSR set to: 1
 29779                           ;incstack = 0
 29780  00763A  6BC7               	clrf	_userDataAvailable& (0+255),b
 29781                           
 29782                           ; BSR set to: 1
 29783  00763C  0012               	return		;funcret
 29784  00763E                     __end_of_NetworkReleaseUserData:
 29785                           	opt stack 0
 29786                           tblptru	equ	0xFF8
 29787                           tblptrh	equ	0xFF7
 29788                           tblptrl	equ	0xFF6
 29789                           tablat	equ	0xFF5
 29790                           prodh	equ	0xFF4
 29791                           prodl	equ	0xFF3
 29792                           intcon	equ	0xFF2
 29793                           intcon3	equ	0xFF0
 29794                           indf0	equ	0xFEF
 29795                           postinc0	equ	0xFEE
 29796                           plusw0	equ	0xFEB
 29797                           fsr0h	equ	0xFEA
 29798                           fsr0l	equ	0xFE9
 29799                           wreg	equ	0xFE8
 29800                           indf1	equ	0xFE7
 29801                           postinc1	equ	0xFE6
 29802                           postdec1	equ	0xFE5
 29803                           plusw1	equ	0xFE3
 29804                           fsr1h	equ	0xFE2
 29805                           fsr1l	equ	0xFE1
 29806                           indf2	equ	0xFDF
 29807                           postinc2	equ	0xFDE
 29808                           postdec2	equ	0xFDD
 29809                           plusw2	equ	0xFDB
 29810                           fsr2h	equ	0xFDA
 29811                           fsr2l	equ	0xFD9
 29812                           status	equ	0xFD8
 29813                           
 29814 ;; *************** function _LEDManagerTask *****************
 29815 ;; Defined at:
 29816 ;;		line 498 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 29817 ;; Parameters:    Size  Location     Type
 29818 ;;		None
 29819 ;; Auto vars:     Size  Location     Type
 29820 ;;  i               2   49[BANK0 ] unsigned int 
 29821 ;; Return value:  Size  Location     Type
 29822 ;;                  1    wreg      void 
 29823 ;; Registers used:
 29824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29825 ;; Tracked objects:
 29826 ;;		On entry : E/0
 29827 ;;		On exit  : F/0
 29828 ;;		Unchanged: 0/0
 29829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29832 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29833 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29834 ;;Total ram usage:       12 bytes
 29835 ;; Hardware stack levels used:    1
 29836 ;; Hardware stack levels required when called:    7
 29837 ;; This function calls:
 29838 ;;		_MiWi_TickGetMs
 29839 ;; This function is called by:
 29840 ;;		_main
 29841 ;; This function uses a non-reentrant model
 29842 ;;
 29843                           
 29844                           	psect	text149
 29845  0012F0                     __ptext149:
 29846                           	opt stack 0
 29847  0012F0                     _LEDManagerTask:
 29848                           	opt stack 23
 29849                           
 29850                           ;system.c: 500: uint16_t i;
 29851                           ;system.c: 501: static LEDState_t lNextState[LEDCount];
 29852                           ;system.c: 502: static MIWI_TICK tStart[LEDCount];
 29853                           ;system.c: 504: for(i=0;i<LEDCount;i++)
 29854                           
 29855                           ; BSR set to: 1
 29856                           ;incstack = 0
 29857  0012F0  0100               	movlb	0	; () banked
 29858  0012F2  6B91               	clrf	LEDManagerTask@i& (0+255),b
 29859  0012F4  6B92               	clrf	(LEDManagerTask@i+1)& (0+255),b
 29860  0012F6  D194               	goto	l18226
 29861  0012F8                     l18106:
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;system.c: 509: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 29865  0012F8  5191               	movf	LEDManagerTask@i& (0+255),w,b
 29866  0012FA  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 29867  0012FC  E102               	bnz	l18110
 29868                           
 29869                           ; BSR set to: 0
 29870  0012FE  948B               	bcf	3979,2,c	;volatile
 29871  001300  D006               	goto	l18114
 29872  001302                     l18110:
 29873                           
 29874                           ; BSR set to: 0
 29875  001302  0591               	decf	LEDManagerTask@i& (0+255),w,b
 29876  001304  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 29877  001306  E102               	bnz	l254
 29878                           
 29879                           ; BSR set to: 0
 29880  001308  9C89               	bcf	3977,6,c	;volatile
 29881  00130A  D001               	goto	l18114
 29882  00130C                     l254:
 29883                           
 29884                           ; BSR set to: 0
 29885  00130C  9E89               	bcf	3977,7,c	;volatile
 29886  00130E                     l18114:
 29887                           
 29888                           ; BSR set to: 0
 29889                           ;system.c: 510: LEDState[i]=LED_Off;
 29890  00130E  0EA8               	movlw	low _LEDState
 29891  001310  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29892  001312  6ED9               	movwf	fsr2l,c
 29893  001314  0E01               	movlw	high _LEDState
 29894  001316  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29895  001318  6EDA               	movwf	fsr2h,c
 29896  00131A  0E01               	movlw	1
 29897  00131C  D06C               	goto	L12
 29898  00131E                     l18116:
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;system.c: 514: if(LEDCmd[i]==lCMD_On)
 29902  00131E  0EA5               	movlw	low _LEDCmd
 29903  001320  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29904  001322  6ED9               	movwf	fsr2l,c
 29905  001324  0E01               	movlw	high _LEDCmd
 29906  001326  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29907  001328  6EDA               	movwf	fsr2h,c
 29908  00132A  0E02               	movlw	2
 29909  00132C  18DE               	xorwf	postinc2,w,c
 29910  00132E  E10A               	bnz	l18128
 29911  001330  D051               	goto	L18
 29912  001332                     l261:
 29913                           
 29914                           ; BSR set to: 0
 29915  001332  8E89               	bsf	3977,7,c	;volatile
 29916  001334                     l18126:
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;system.c: 517: LEDState[i]=LED_On;
 29920  001334  0EA8               	movlw	low _LEDState
 29921  001336  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29922  001338  6ED9               	movwf	fsr2l,c
 29923  00133A  0E01               	movlw	high _LEDState
 29924  00133C  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29925  00133E  6EDA               	movwf	fsr2h,c
 29926  001340  0E05               	movlw	5
 29927  001342  D119               	goto	L13
 29928  001344                     l18128:
 29929                           
 29930                           ; BSR set to: 0
 29931  001344  0EA5               	movlw	low _LEDCmd
 29932  001346  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29933  001348  6ED9               	movwf	fsr2l,c
 29934  00134A  0E01               	movlw	high _LEDCmd
 29935  00134C  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29936  00134E  6EDA               	movwf	fsr2h,c
 29937  001350  0E03               	movlw	3
 29938  001352  18DE               	xorwf	postinc2,w,c
 29939  001354  E136               	bnz	l18144
 29940                           
 29941                           ; BSR set to: 0
 29942                           ;system.c: 519: {
 29943                           ;system.c: 520: tStart[i]=MiWi_TickGetMs();
 29944  001356  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 29945  00135A  0E00               	movlw	low LEDManagerTask@tStart
 29946  00135C  6F87               	movwf	??_LEDManagerTask& (0+255),b
 29947  00135E  0E02               	movlw	high LEDManagerTask@tStart
 29948  001360  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 29949  001362  90D8               	bcf	status,0,c
 29950  001364  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 29951  001366  6ED9               	movwf	fsr2l,c
 29952  001368  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 29953  00136A  6EDA               	movwf	fsr2h,c
 29954  00136C  90D8               	bcf	status,0,c
 29955  00136E  36D9               	rlcf	fsr2l,f,c
 29956  001370  36DA               	rlcf	fsr2h,f,c
 29957  001372  5187               	movf	??_LEDManagerTask& (0+255),w,b
 29958  001374  26D9               	addwf	fsr2l,f,c
 29959  001376  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 29960  001378  22DA               	addwfc	fsr2h,f,c
 29961  00137A  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 29962  00137E  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 29963  001382  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 29964  001386  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 29965                           
 29966                           ; BSR set to: 0
 29967                           ;system.c: 521: LEDState[i]=LED_DelayActive;
 29968  00138A  0EA8               	movlw	low _LEDState
 29969  00138C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29970  00138E  6ED9               	movwf	fsr2l,c
 29971  001390  0E01               	movlw	high _LEDState
 29972  001392  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29973  001394  6EDA               	movwf	fsr2h,c
 29974  001396  0E03               	movlw	3
 29975  001398  6EDF               	movwf	indf2,c
 29976                           
 29977                           ; BSR set to: 0
 29978                           ;system.c: 522: lNextState[i]=LED_Off;
 29979  00139A  0EA2               	movlw	low LEDManagerTask@lNextState
 29980  00139C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 29981  00139E  6ED9               	movwf	fsr2l,c
 29982  0013A0  0E01               	movlw	high LEDManagerTask@lNextState
 29983  0013A2  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 29984  0013A4  6EDA               	movwf	fsr2h,c
 29985  0013A6  0E01               	movlw	1
 29986  0013A8  6EDF               	movwf	indf2,c
 29987                           
 29988                           ; BSR set to: 0
 29989                           ;system.c: 523: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 29990  0013AA  5191               	movf	LEDManagerTask@i& (0+255),w,b
 29991  0013AC  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 29992  0013AE  E102               	bnz	l18140
 29993                           
 29994                           ; BSR set to: 0
 29995  0013B0  848B               	bsf	3979,2,c	;volatile
 29996  0013B2  D01A               	goto	l263
 29997  0013B4                     l18140:
 29998                           
 29999                           ; BSR set to: 0
 30000  0013B4  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30001  0013B6  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30002  0013B8  E102               	bnz	l267
 30003                           
 30004                           ; BSR set to: 0
 30005  0013BA  8C89               	bsf	3977,6,c	;volatile
 30006  0013BC  D015               	goto	l263
 30007  0013BE                     l267:
 30008                           
 30009                           ; BSR set to: 0
 30010  0013BE  8E89               	bsf	3977,7,c	;volatile
 30011  0013C0  D013               	goto	l263
 30012  0013C2                     l18144:
 30013                           
 30014                           ; BSR set to: 0
 30015  0013C2  0EA5               	movlw	low _LEDCmd
 30016  0013C4  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30017  0013C6  6ED9               	movwf	fsr2l,c
 30018  0013C8  0E01               	movlw	high _LEDCmd
 30019  0013CA  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30020  0013CC  6EDA               	movwf	fsr2h,c
 30021  0013CE  0E04               	movlw	4
 30022  0013D0  18DE               	xorwf	postinc2,w,c
 30023  0013D2  E10A               	bnz	l263
 30024  0013D4                     L18:
 30025                           
 30026                           ; BSR set to: 0
 30027                           ;system.c: 525: {
 30028                           ;system.c: 526: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 30029  0013D4  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30030  0013D6  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30031  0013D8  E102               	bnz	l18150
 30032                           
 30033                           ; BSR set to: 0
 30034  0013DA  848B               	bsf	3979,2,c	;volatile
 30035  0013DC  D7AB               	goto	l18126
 30036  0013DE                     l18150:
 30037                           
 30038                           ; BSR set to: 0
 30039  0013DE  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30040  0013E0  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30041  0013E2  E1A7               	bnz	l261
 30042                           
 30043                           ; BSR set to: 0
 30044  0013E4  8C89               	bsf	3977,6,c	;volatile
 30045  0013E6  D7A6               	goto	l18126
 30046  0013E8                     l263:
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;system.c: 528: }
 30050                           ;system.c: 529: LEDCmd[i]=lCMD_None;
 30051  0013E8  0EA5               	movlw	low _LEDCmd
 30052  0013EA  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30053  0013EC  6ED9               	movwf	fsr2l,c
 30054  0013EE  0E01               	movlw	high _LEDCmd
 30055  0013F0  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30056  0013F2  6EDA               	movwf	fsr2h,c
 30057  0013F4  0E00               	movlw	0
 30058  0013F6                     L12:
 30059  0013F6  6EDF               	movwf	indf2,c
 30060                           
 30061                           ;system.c: 530: break;
 30062  0013F8  D127               	goto	l18228
 30063  0013FA                     l18156:
 30064                           
 30065                           ; BSR set to: 0
 30066                           ;system.c: 533: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 30067  0013FA  0E00               	movlw	low LEDManagerTask@tStart
 30068  0013FC  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30069  0013FE  0E02               	movlw	high LEDManagerTask@tStart
 30070  001400  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30071  001402  90D8               	bcf	status,0,c
 30072  001404  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30073  001406  6ED9               	movwf	fsr2l,c
 30074  001408  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30075  00140A  6EDA               	movwf	fsr2h,c
 30076  00140C  90D8               	bcf	status,0,c
 30077  00140E  36D9               	rlcf	fsr2l,f,c
 30078  001410  36DA               	rlcf	fsr2h,f,c
 30079  001412  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30080  001414  26D9               	addwf	fsr2l,f,c
 30081  001416  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30082  001418  22DA               	addwfc	fsr2h,f,c
 30083  00141A  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 30084  00141E  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 30085  001422  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 30086  001426  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 30087  00142A  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 30088  00142E  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 30089  001430  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 30090  001432  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 30091  001434  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 30092  001436  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 30093  001438  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 30094  00143A  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 30095  00143C  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 30096  00143E  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 30097  001440  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 30098  001442  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 30099  001444  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 30100  001446  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 30101  001448  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 30102  00144A  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 30103  00144C  E104               	bnz	u22690
 30104  00144E  0E15               	movlw	21
 30105  001450  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 30106  001452  E201 D0F9          	bnc	l18228
 30107  001456                     u22690:
 30108                           
 30109                           ; BSR set to: 0
 30110                           ;system.c: 534: {
 30111                           ;system.c: 535: LEDState[i]=LED_DelayInactive;
 30112  001456  0EA8               	movlw	low _LEDState
 30113  001458  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30114  00145A  6ED9               	movwf	fsr2l,c
 30115  00145C  0E01               	movlw	high _LEDState
 30116  00145E  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30117  001460  6EDA               	movwf	fsr2h,c
 30118  001462  0E04               	movlw	4
 30119  001464  6EDF               	movwf	indf2,c
 30120                           
 30121                           ; BSR set to: 0
 30122                           ;system.c: 536: tStart[i]=MiWi_TickGetMs();
 30123  001466  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 30124  00146A  0E00               	movlw	low LEDManagerTask@tStart
 30125  00146C  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30126  00146E  0E02               	movlw	high LEDManagerTask@tStart
 30127  001470  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30128  001472  90D8               	bcf	status,0,c
 30129  001474  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30130  001476  6ED9               	movwf	fsr2l,c
 30131  001478  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30132  00147A  6EDA               	movwf	fsr2h,c
 30133  00147C  90D8               	bcf	status,0,c
 30134  00147E  36D9               	rlcf	fsr2l,f,c
 30135  001480  36DA               	rlcf	fsr2h,f,c
 30136  001482  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30137  001484  26D9               	addwf	fsr2l,f,c
 30138  001486  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30139  001488  22DA               	addwfc	fsr2h,f,c
 30140  00148A  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 30141  00148E  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 30142  001492  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 30143  001496  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;system.c: 537: if(lNextState[i]==LED_Off)
 30147  00149A  0EA2               	movlw	low LEDManagerTask@lNextState
 30148  00149C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30149  00149E  6ED9               	movwf	fsr2l,c
 30150  0014A0  0E01               	movlw	high LEDManagerTask@lNextState
 30151  0014A2  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30152  0014A4  6EDA               	movwf	fsr2h,c
 30153  0014A6  04DE               	decf	postinc2,w,c
 30154  0014A8  E10C               	bnz	l18172
 30155                           
 30156                           ; BSR set to: 0
 30157                           ;system.c: 538: {
 30158                           ;system.c: 539: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30159  0014AA  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30160  0014AC  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30161  0014AE  E102               	bnz	l18168
 30162                           
 30163                           ; BSR set to: 0
 30164  0014B0  948B               	bcf	3979,2,c	;volatile
 30165  0014B2  D0CA               	goto	l18228
 30166  0014B4                     l18168:
 30167                           
 30168                           ; BSR set to: 0
 30169  0014B4  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30170  0014B6  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30171  0014B8  E102               	bnz	l280
 30172                           
 30173                           ; BSR set to: 0
 30174  0014BA  9C89               	bcf	3977,6,c	;volatile
 30175  0014BC  D0C5               	goto	l18228
 30176  0014BE                     l280:
 30177                           
 30178                           ; BSR set to: 0
 30179  0014BE  9E89               	bcf	3977,7,c	;volatile
 30180  0014C0  D0C3               	goto	l18228
 30181  0014C2                     l18172:
 30182                           
 30183                           ; BSR set to: 0
 30184                           ;system.c: 541: {
 30185                           ;system.c: 542: if(i==0){LATCbits.LATC2 = 1;}else if(i==1){LATAbits.LATA6 = 1;}else{LATA
      +                          bits.LATA7 = 1;};
 30186  0014C2  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30187  0014C4  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30188  0014C6  E102               	bnz	l18176
 30189                           
 30190                           ; BSR set to: 0
 30191  0014C8  848B               	bsf	3979,2,c	;volatile
 30192  0014CA  D0BE               	goto	l18228
 30193  0014CC                     l18176:
 30194                           
 30195                           ; BSR set to: 0
 30196  0014CC  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30197  0014CE  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30198  0014D0  E102               	bnz	l285
 30199                           
 30200                           ; BSR set to: 0
 30201  0014D2  8C89               	bsf	3977,6,c	;volatile
 30202  0014D4  D0B9               	goto	l18228
 30203  0014D6                     l285:
 30204                           
 30205                           ; BSR set to: 0
 30206  0014D6  8E89               	bsf	3977,7,c	;volatile
 30207  0014D8  D0B7               	goto	l18228
 30208  0014DA                     l18180:
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;system.c: 548: if((MiWi_TickGetMs().Val - tStart[i].Val)>20)
 30212  0014DA  0E00               	movlw	low LEDManagerTask@tStart
 30213  0014DC  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30214  0014DE  0E02               	movlw	high LEDManagerTask@tStart
 30215  0014E0  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30216  0014E2  90D8               	bcf	status,0,c
 30217  0014E4  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30218  0014E6  6ED9               	movwf	fsr2l,c
 30219  0014E8  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30220  0014EA  6EDA               	movwf	fsr2h,c
 30221  0014EC  90D8               	bcf	status,0,c
 30222  0014EE  36D9               	rlcf	fsr2l,f,c
 30223  0014F0  36DA               	rlcf	fsr2h,f,c
 30224  0014F2  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30225  0014F4  26D9               	addwf	fsr2l,f,c
 30226  0014F6  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30227  0014F8  22DA               	addwfc	fsr2h,f,c
 30228  0014FA  CFDE F089          	movff	postinc2,??_LEDManagerTask+2
 30229  0014FE  CFDE F08A          	movff	postinc2,??_LEDManagerTask+3
 30230  001502  CFDE F08B          	movff	postinc2,??_LEDManagerTask+4
 30231  001506  CFDE F08C          	movff	postinc2,??_LEDManagerTask+5
 30232  00150A  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 30233  00150E  5189               	movf	(??_LEDManagerTask+2)& (0+255),w,b
 30234  001510  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 30235  001512  6F8D               	movwf	(??_LEDManagerTask+6)& (0+255),b
 30236  001514  518A               	movf	(??_LEDManagerTask+3)& (0+255),w,b
 30237  001516  5980               	subwfb	(?_MiWi_TickGetMs+1)& (0+255),w,b
 30238  001518  6F8E               	movwf	(??_LEDManagerTask+7)& (0+255),b
 30239  00151A  518B               	movf	(??_LEDManagerTask+4)& (0+255),w,b
 30240  00151C  5981               	subwfb	(?_MiWi_TickGetMs+2)& (0+255),w,b
 30241  00151E  6F8F               	movwf	(??_LEDManagerTask+8)& (0+255),b
 30242  001520  518C               	movf	(??_LEDManagerTask+5)& (0+255),w,b
 30243  001522  5982               	subwfb	(?_MiWi_TickGetMs+3)& (0+255),w,b
 30244  001524  6F90               	movwf	(??_LEDManagerTask+9)& (0+255),b
 30245  001526  5190               	movf	(??_LEDManagerTask+9)& (0+255),w,b
 30246  001528  118F               	iorwf	(??_LEDManagerTask+8)& (0+255),w,b
 30247  00152A  118E               	iorwf	(??_LEDManagerTask+7)& (0+255),w,b
 30248  00152C  E104               	bnz	u22750
 30249  00152E  0E15               	movlw	21
 30250  001530  5D8D               	subwf	(??_LEDManagerTask+6)& (0+255),w,b
 30251  001532  E201 D089          	bnc	l18228
 30252  001536                     u22750:
 30253                           
 30254                           ; BSR set to: 0
 30255                           ;system.c: 549: {
 30256                           ;system.c: 550: LEDState[i]=lNextState[i];
 30257  001536  0EA2               	movlw	low LEDManagerTask@lNextState
 30258  001538  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30259  00153A  6ED9               	movwf	fsr2l,c
 30260  00153C  0E01               	movlw	high LEDManagerTask@lNextState
 30261  00153E  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30262  001540  6EDA               	movwf	fsr2h,c
 30263  001542  0EA8               	movlw	low _LEDState
 30264  001544  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30265  001546  6EE1               	movwf	fsr1l,c
 30266  001548  0E01               	movlw	high _LEDState
 30267  00154A  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30268  00154C  6EE2               	movwf	fsr1h,c
 30269  00154E  CFDF FFE7          	movff	indf2,indf1
 30270  001552  D07A               	goto	l18228
 30271  001554                     l18184:
 30272                           
 30273                           ; BSR set to: 0
 30274                           ;system.c: 555: if(LEDCmd[i]==lCMD_Off)
 30275  001554  0EA5               	movlw	low _LEDCmd
 30276  001556  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30277  001558  6ED9               	movwf	fsr2l,c
 30278  00155A  0E01               	movlw	high _LEDCmd
 30279  00155C  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30280  00155E  6EDA               	movwf	fsr2h,c
 30281  001560  04DE               	decf	postinc2,w,c
 30282  001562  E10B               	bnz	l18196
 30283  001564  D053               	goto	L19
 30284  001566                     l293:
 30285                           
 30286                           ; BSR set to: 0
 30287  001566  9E89               	bcf	3977,7,c	;volatile
 30288  001568                     l18194:
 30289                           
 30290                           ; BSR set to: 0
 30291                           ;system.c: 558: LEDState[i]=LED_Off;
 30292  001568  0EA8               	movlw	low _LEDState
 30293  00156A  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30294  00156C  6ED9               	movwf	fsr2l,c
 30295  00156E  0E01               	movlw	high _LEDState
 30296  001570  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30297  001572  6EDA               	movwf	fsr2h,c
 30298  001574  0E01               	movlw	1
 30299  001576                     L13:
 30300  001576  6EDF               	movwf	indf2,c
 30301                           
 30302                           ;system.c: 559: }else if(LEDCmd[i]==lCMD_Blink)
 30303  001578  D737               	goto	l263
 30304  00157A                     l18196:
 30305                           
 30306                           ; BSR set to: 0
 30307  00157A  0EA5               	movlw	low _LEDCmd
 30308  00157C  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30309  00157E  6ED9               	movwf	fsr2l,c
 30310  001580  0E01               	movlw	high _LEDCmd
 30311  001582  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30312  001584  6EDA               	movwf	fsr2h,c
 30313  001586  0E03               	movlw	3
 30314  001588  18DE               	xorwf	postinc2,w,c
 30315  00158A  E136               	bnz	l18212
 30316                           
 30317                           ; BSR set to: 0
 30318                           ;system.c: 560: {
 30319                           ;system.c: 561: tStart[i]=MiWi_TickGetMs();
 30320  00158C  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 30321  001590  0E00               	movlw	low LEDManagerTask@tStart
 30322  001592  6F87               	movwf	??_LEDManagerTask& (0+255),b
 30323  001594  0E02               	movlw	high LEDManagerTask@tStart
 30324  001596  6F88               	movwf	(??_LEDManagerTask+1)& (0+255),b
 30325  001598  90D8               	bcf	status,0,c
 30326  00159A  3591               	rlcf	LEDManagerTask@i& (0+255),w,b
 30327  00159C  6ED9               	movwf	fsr2l,c
 30328  00159E  3592               	rlcf	(LEDManagerTask@i+1)& (0+255),w,b
 30329  0015A0  6EDA               	movwf	fsr2h,c
 30330  0015A2  90D8               	bcf	status,0,c
 30331  0015A4  36D9               	rlcf	fsr2l,f,c
 30332  0015A6  36DA               	rlcf	fsr2h,f,c
 30333  0015A8  5187               	movf	??_LEDManagerTask& (0+255),w,b
 30334  0015AA  26D9               	addwf	fsr2l,f,c
 30335  0015AC  5188               	movf	(??_LEDManagerTask+1)& (0+255),w,b
 30336  0015AE  22DA               	addwfc	fsr2h,f,c
 30337  0015B0  C07F  FFDE         	movff	?_MiWi_TickGetMs,postinc2
 30338  0015B4  C080  FFDE         	movff	?_MiWi_TickGetMs+1,postinc2
 30339  0015B8  C081  FFDE         	movff	?_MiWi_TickGetMs+2,postinc2
 30340  0015BC  C082  FFDE         	movff	?_MiWi_TickGetMs+3,postinc2
 30341                           
 30342                           ; BSR set to: 0
 30343                           ;system.c: 562: LEDState[i]=LED_DelayActive;
 30344  0015C0  0EA8               	movlw	low _LEDState
 30345  0015C2  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30346  0015C4  6ED9               	movwf	fsr2l,c
 30347  0015C6  0E01               	movlw	high _LEDState
 30348  0015C8  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30349  0015CA  6EDA               	movwf	fsr2h,c
 30350  0015CC  0E03               	movlw	3
 30351  0015CE  6EDF               	movwf	indf2,c
 30352                           
 30353                           ; BSR set to: 0
 30354                           ;system.c: 563: lNextState[i]=LED_On;
 30355  0015D0  0EA2               	movlw	low LEDManagerTask@lNextState
 30356  0015D2  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30357  0015D4  6ED9               	movwf	fsr2l,c
 30358  0015D6  0E01               	movlw	high LEDManagerTask@lNextState
 30359  0015D8  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30360  0015DA  6EDA               	movwf	fsr2h,c
 30361  0015DC  0E05               	movlw	5
 30362  0015DE  6EDF               	movwf	indf2,c
 30363                           
 30364                           ; BSR set to: 0
 30365                           ;system.c: 564: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30366  0015E0  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30367  0015E2  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30368  0015E4  E102               	bnz	l18208
 30369                           
 30370                           ; BSR set to: 0
 30371  0015E6  948B               	bcf	3979,2,c	;volatile
 30372  0015E8  D6FF               	goto	l263
 30373  0015EA                     l18208:
 30374                           
 30375                           ; BSR set to: 0
 30376  0015EA  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30377  0015EC  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30378  0015EE  E102               	bnz	l299
 30379                           
 30380                           ; BSR set to: 0
 30381  0015F0  9C89               	bcf	3977,6,c	;volatile
 30382  0015F2  D6FA               	goto	l263
 30383  0015F4                     l299:
 30384                           
 30385                           ; BSR set to: 0
 30386  0015F4  9E89               	bcf	3977,7,c	;volatile
 30387  0015F6  D6F8               	goto	l263
 30388  0015F8                     l18212:
 30389                           
 30390                           ; BSR set to: 0
 30391  0015F8  0EA5               	movlw	low _LEDCmd
 30392  0015FA  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30393  0015FC  6ED9               	movwf	fsr2l,c
 30394  0015FE  0E01               	movlw	high _LEDCmd
 30395  001600  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30396  001602  6EDA               	movwf	fsr2h,c
 30397  001604  0E04               	movlw	4
 30398  001606  18DE               	xorwf	postinc2,w,c
 30399  001608  E001 D6EE          	bnz	l263
 30400  00160C                     L19:
 30401                           
 30402                           ; BSR set to: 0
 30403                           ;system.c: 566: {
 30404                           ;system.c: 567: if(i==0){LATCbits.LATC2 = 0;}else if(i==1){LATAbits.LATA6 = 0;}else{LATA
      +                          bits.LATA7 = 0;};
 30405  00160C  5191               	movf	LEDManagerTask@i& (0+255),w,b
 30406  00160E  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30407  001610  E102               	bnz	l18218
 30408                           
 30409                           ; BSR set to: 0
 30410  001612  948B               	bcf	3979,2,c	;volatile
 30411  001614  D7A9               	goto	l18194
 30412  001616                     l18218:
 30413                           
 30414                           ; BSR set to: 0
 30415  001616  0591               	decf	LEDManagerTask@i& (0+255),w,b
 30416  001618  1192               	iorwf	(LEDManagerTask@i+1)& (0+255),w,b
 30417  00161A  E1A5               	bnz	l293
 30418                           
 30419                           ; BSR set to: 0
 30420  00161C  9C89               	bcf	3977,6,c	;volatile
 30421  00161E  D7A4               	goto	l18194
 30422  001620                     l18226:
 30423                           
 30424                           ; BSR set to: 0
 30425  001620  0EA8               	movlw	low _LEDState
 30426  001622  2591               	addwf	LEDManagerTask@i& (0+255),w,b
 30427  001624  6ED9               	movwf	fsr2l,c
 30428  001626  0E01               	movlw	high _LEDState
 30429  001628  2192               	addwfc	(LEDManagerTask@i+1)& (0+255),w,b
 30430  00162A  6EDA               	movwf	fsr2h,c
 30431  00162C  50DF               	movf	indf2,w,c
 30432                           
 30433                           ; Switch size 1, requested type "speed"
 30434                           ; Number of cases is 5, Range of values is 0 to 5
 30435                           ; switch strategies available:
 30436                           ; Name         Instructions Cycles
 30437                           ; simple_byte           16     9 (average)
 30438                           ;	Chosen strategy is simple_byte
 30439  00162E  E101 D663          	bz	l18106
 30440  001632  0A01               	xorlw	1	; case 1
 30441  001634  E101 D673          	bz	l18116
 30442  001638  0A02               	xorlw	2	; case 3
 30443  00163A  E101 D6DE          	bz	l18156
 30444  00163E  0A07               	xorlw	7	; case 4
 30445  001640  E101 D74B          	bz	l18180
 30446  001644  0A01               	xorlw	1	; case 5
 30447  001646  E086               	bz	l18184
 30448  001648                     l18228:
 30449                           
 30450                           ; BSR set to: 0
 30451  001648  4B91               	infsnz	LEDManagerTask@i& (0+255),f,b
 30452  00164A  2B92               	incf	(LEDManagerTask@i+1)& (0+255),f,b
 30453                           
 30454                           ; BSR set to: 0
 30455  00164C  5192               	movf	(LEDManagerTask@i+1)& (0+255),w,b
 30456  00164E  E103               	bnz	u22850
 30457  001650  0E03               	movlw	3
 30458  001652  5D91               	subwf	LEDManagerTask@i& (0+255),w,b
 30459  001654  E3E5               	bnc	l18226
 30460  001656                     u22850:
 30461                           
 30462                           ; BSR set to: 0
 30463  001656  0012               	return		;funcret
 30464  001658                     __end_of_LEDManagerTask:
 30465                           	opt stack 0
 30466                           tblptru	equ	0xFF8
 30467                           tblptrh	equ	0xFF7
 30468                           tblptrl	equ	0xFF6
 30469                           tablat	equ	0xFF5
 30470                           prodh	equ	0xFF4
 30471                           prodl	equ	0xFF3
 30472                           intcon	equ	0xFF2
 30473                           intcon3	equ	0xFF0
 30474                           indf0	equ	0xFEF
 30475                           postinc0	equ	0xFEE
 30476                           plusw0	equ	0xFEB
 30477                           fsr0h	equ	0xFEA
 30478                           fsr0l	equ	0xFE9
 30479                           wreg	equ	0xFE8
 30480                           indf1	equ	0xFE7
 30481                           postinc1	equ	0xFE6
 30482                           postdec1	equ	0xFE5
 30483                           plusw1	equ	0xFE3
 30484                           fsr1h	equ	0xFE2
 30485                           fsr1l	equ	0xFE1
 30486                           indf2	equ	0xFDF
 30487                           postinc2	equ	0xFDE
 30488                           postdec2	equ	0xFDD
 30489                           plusw2	equ	0xFDB
 30490                           fsr2h	equ	0xFDA
 30491                           fsr2l	equ	0xFD9
 30492                           status	equ	0xFD8
 30493                           
 30494 ;; *************** function _LCDUpdate *****************
 30495 ;; Defined at:
 30496 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 30497 ;; Parameters:    Size  Location     Type
 30498 ;;		None
 30499 ;; Auto vars:     Size  Location     Type
 30500 ;;  i               1   39[BANK0 ] unsigned char 
 30501 ;; Return value:  Size  Location     Type
 30502 ;;                  1    wreg      void 
 30503 ;; Registers used:
 30504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30505 ;; Tracked objects:
 30506 ;;		On entry : 0/0
 30507 ;;		On exit  : F/0
 30508 ;;		Unchanged: 0/0
 30509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30514 ;;Total ram usage:        1 bytes
 30515 ;; Hardware stack levels used:    1
 30516 ;; Hardware stack levels required when called:    8
 30517 ;; This function calls:
 30518 ;;		_DelayUS
 30519 ;;		_LCDInit
 30520 ;;		_LCD_WriteCmd
 30521 ;;		_LCD_WriteData
 30522 ;; This function is called by:
 30523 ;;		_main
 30524 ;; This function uses a non-reentrant model
 30525 ;;
 30526                           
 30527                           	psect	text150
 30528  0058F6                     __ptext150:
 30529                           	opt stack 0
 30530  0058F6                     _LCDUpdate:
 30531                           	opt stack 22
 30532                           
 30533                           ;lcd.c: 118: uint8_t i;
 30534                           ;lcd.c: 119: if(lcdInitialized==0)
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;incstack = 0
 30538  0058F6  5043               	movf	_lcdInitialized,w,c
 30539  0058F8  E104               	bnz	l18028
 30540                           
 30541                           ;lcd.c: 120: {
 30542                           ;lcd.c: 121: lcdInitialized=1;
 30543  0058FA  0E01               	movlw	1
 30544  0058FC  6E43               	movwf	_lcdInitialized,c
 30545                           
 30546                           ;lcd.c: 122: LCDInit();
 30547  0058FE  ECAB  F026         	call	_LCDInit	;wreg free
 30548  005902                     l18028:
 30549                           
 30550                           ;lcd.c: 123: }
 30551                           ;lcd.c: 124: LCD_WriteCmd(0x80 | 0x00);
 30552  005902  0E80               	movlw	128
 30553  005904  EC78  F03A         	call	_LCD_WriteCmd
 30554                           
 30555                           ;lcd.c: 126: for(i = 0; i < 16; i++)
 30556  005908  0100               	movlb	0	; () banked
 30557  00590A  6B87               	clrf	LCDUpdate@i& (0+255),b
 30558  00590C                     l18036:
 30559                           
 30560                           ; BSR set to: 0
 30561                           ;lcd.c: 127: {
 30562                           ;lcd.c: 128: DelayUS(10);
 30563  00590C  0E0A               	movlw	10
 30564  00590E  6F73               	movwf	DelayUS@delay& (0+255),b
 30565  005910  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 30566  005912  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 30567  005914  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 30568  005916  EC06  F039         	call	_DelayUS	;wreg free
 30569                           
 30570                           ; BSR set to: 0
 30571                           ;lcd.c: 129: if( LCDText[i] == 0 )
 30572  00591A  0E95               	movlw	low _LCDText
 30573  00591C  2587               	addwf	LCDUpdate@i& (0+255),w,b
 30574  00591E  6ED9               	movwf	fsr2l,c
 30575  005920  6ADA               	clrf	fsr2h,c
 30576  005922  0E03               	movlw	high _LCDText
 30577  005924  22DA               	addwfc	fsr2h,f,c
 30578  005926  50DF               	movf	indf2,w,c
 30579  005928  E104               	bnz	l18042
 30580                           
 30581                           ; BSR set to: 0
 30582                           ;lcd.c: 130: {
 30583                           ;lcd.c: 131: LCD_WriteData(' ');
 30584  00592A  0E20               	movlw	32
 30585  00592C  EC6D  F03A         	call	_LCD_WriteData
 30586                           
 30587                           ;lcd.c: 132: }
 30588  005930  D009               	goto	l18044
 30589  005932                     l18042:
 30590                           
 30591                           ; BSR set to: 0
 30592                           ;lcd.c: 133: else
 30593                           ;lcd.c: 134: {
 30594                           ;lcd.c: 135: LCD_WriteData(LCDText[i]);
 30595  005932  0E95               	movlw	low _LCDText
 30596  005934  2587               	addwf	LCDUpdate@i& (0+255),w,b
 30597  005936  6ED9               	movwf	fsr2l,c
 30598  005938  6ADA               	clrf	fsr2h,c
 30599  00593A  0E03               	movlw	high _LCDText
 30600  00593C  22DA               	addwfc	fsr2h,f,c
 30601  00593E  50DF               	movf	indf2,w,c
 30602  005940  EC6D  F03A         	call	_LCD_WriteData
 30603  005944                     l18044:
 30604  005944  0100               	movlb	0	; () banked
 30605  005946  2B87               	incf	LCDUpdate@i& (0+255),f,b
 30606                           
 30607                           ; BSR set to: 0
 30608  005948  0E0F               	movlw	15
 30609  00594A  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 30610  00594C  D7DF               	goto	l18036
 30611                           
 30612                           ; BSR set to: 0
 30613                           ;lcd.c: 136: }
 30614                           ;lcd.c: 137: }
 30615                           ;lcd.c: 138: DelayUS(10);
 30616  00594E  0E0A               	movlw	10
 30617  005950  6F73               	movwf	DelayUS@delay& (0+255),b
 30618  005952  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 30619  005954  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 30620  005956  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 30621  005958  EC06  F039         	call	_DelayUS	;wreg free
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;lcd.c: 139: LCD_WriteCmd(0x80 | 0x40);
 30625  00595C  0EC0               	movlw	192
 30626  00595E  EC78  F03A         	call	_LCD_WriteCmd
 30627                           
 30628                           ;lcd.c: 141: for(i = 16; i < 32; i++)
 30629  005962  0E10               	movlw	16
 30630  005964  0100               	movlb	0	; () banked
 30631  005966  6F87               	movwf	LCDUpdate@i& (0+255),b
 30632  005968                     l18056:
 30633                           
 30634                           ; BSR set to: 0
 30635                           ;lcd.c: 142: {
 30636                           ;lcd.c: 143: DelayUS(10);
 30637  005968  0E0A               	movlw	10
 30638  00596A  6F73               	movwf	DelayUS@delay& (0+255),b
 30639  00596C  6B74               	clrf	(DelayUS@delay+1)& (0+255),b
 30640  00596E  6B75               	clrf	(DelayUS@delay+2)& (0+255),b
 30641  005970  6B76               	clrf	(DelayUS@delay+3)& (0+255),b
 30642  005972  EC06  F039         	call	_DelayUS	;wreg free
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;lcd.c: 144: if( LCDText[i] == 0 )
 30646  005976  0E95               	movlw	low _LCDText
 30647  005978  2587               	addwf	LCDUpdate@i& (0+255),w,b
 30648  00597A  6ED9               	movwf	fsr2l,c
 30649  00597C  6ADA               	clrf	fsr2h,c
 30650  00597E  0E03               	movlw	high _LCDText
 30651  005980  22DA               	addwfc	fsr2h,f,c
 30652  005982  50DF               	movf	indf2,w,c
 30653  005984  E104               	bnz	l18062
 30654                           
 30655                           ; BSR set to: 0
 30656                           ;lcd.c: 145: {
 30657                           ;lcd.c: 146: LCD_WriteData(' ');
 30658  005986  0E20               	movlw	32
 30659  005988  EC6D  F03A         	call	_LCD_WriteData
 30660                           
 30661                           ;lcd.c: 147: }
 30662  00598C  D009               	goto	l18064
 30663  00598E                     l18062:
 30664                           
 30665                           ; BSR set to: 0
 30666                           ;lcd.c: 148: else
 30667                           ;lcd.c: 149: {
 30668                           ;lcd.c: 150: LCD_WriteData(LCDText[i]);
 30669  00598E  0E95               	movlw	low _LCDText
 30670  005990  2587               	addwf	LCDUpdate@i& (0+255),w,b
 30671  005992  6ED9               	movwf	fsr2l,c
 30672  005994  6ADA               	clrf	fsr2h,c
 30673  005996  0E03               	movlw	high _LCDText
 30674  005998  22DA               	addwfc	fsr2h,f,c
 30675  00599A  50DF               	movf	indf2,w,c
 30676  00599C  EC6D  F03A         	call	_LCD_WriteData
 30677  0059A0                     l18064:
 30678  0059A0  0100               	movlb	0	; () banked
 30679  0059A2  2B87               	incf	LCDUpdate@i& (0+255),f,b
 30680                           
 30681                           ; BSR set to: 0
 30682  0059A4  0E1F               	movlw	31
 30683  0059A6  6587               	cpfsgt	LCDUpdate@i& (0+255),b
 30684  0059A8  D7DF               	goto	l18056
 30685  0059AA  0C1F               	retlw	31
 30686  0059AC                     __end_of_LCDUpdate:
 30687                           	opt stack 0
 30688                           tblptru	equ	0xFF8
 30689                           tblptrh	equ	0xFF7
 30690                           tblptrl	equ	0xFF6
 30691                           tablat	equ	0xFF5
 30692                           prodh	equ	0xFF4
 30693                           prodl	equ	0xFF3
 30694                           intcon	equ	0xFF2
 30695                           intcon3	equ	0xFF0
 30696                           indf0	equ	0xFEF
 30697                           postinc0	equ	0xFEE
 30698                           plusw0	equ	0xFEB
 30699                           fsr0h	equ	0xFEA
 30700                           fsr0l	equ	0xFE9
 30701                           wreg	equ	0xFE8
 30702                           indf1	equ	0xFE7
 30703                           postinc1	equ	0xFE6
 30704                           postdec1	equ	0xFE5
 30705                           plusw1	equ	0xFE3
 30706                           fsr1h	equ	0xFE2
 30707                           fsr1l	equ	0xFE1
 30708                           indf2	equ	0xFDF
 30709                           postinc2	equ	0xFDE
 30710                           postdec2	equ	0xFDD
 30711                           plusw2	equ	0xFDB
 30712                           fsr2h	equ	0xFDA
 30713                           fsr2l	equ	0xFD9
 30714                           status	equ	0xFD8
 30715                           
 30716 ;; *************** function _LCD_WriteData *****************
 30717 ;; Defined at:
 30718 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 30719 ;; Parameters:    Size  Location     Type
 30720 ;;  data            1    wreg     unsigned char 
 30721 ;; Auto vars:     Size  Location     Type
 30722 ;;  data            1   21[BANK0 ] unsigned char 
 30723 ;; Return value:  Size  Location     Type
 30724 ;;                  1    wreg      void 
 30725 ;; Registers used:
 30726 ;;		wreg, status,2, cstack
 30727 ;; Tracked objects:
 30728 ;;		On entry : F/0
 30729 ;;		On exit  : 0/0
 30730 ;;		Unchanged: 0/0
 30731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30736 ;;Total ram usage:        1 bytes
 30737 ;; Hardware stack levels used:    1
 30738 ;; Hardware stack levels required when called:    6
 30739 ;; This function calls:
 30740 ;;		_SPIPut2
 30741 ;; This function is called by:
 30742 ;;		_LCDUpdate
 30743 ;; This function uses a non-reentrant model
 30744 ;;
 30745                           
 30746                           	psect	text151
 30747  0074DA                     __ptext151:
 30748                           	opt stack 0
 30749  0074DA                     _LCD_WriteData:
 30750                           	opt stack 23
 30751                           
 30752                           ; BSR set to: 0
 30753                           ;incstack = 0
 30754                           ;LCD_WriteData@data stored from wreg
 30755  0074DA  6F75               	movwf	LCD_WriteData@data& (0+255),b
 30756                           
 30757                           ;lcd.c: 45: GIE=0;
 30758  0074DC  9EF2               	bcf	intcon,7,c	;volatile
 30759                           
 30760                           ;lcd.c: 46: LATDbits.LATD7 = 0;
 30761  0074DE  9E8C               	bcf	3980,7,c	;volatile
 30762                           
 30763                           ;lcd.c: 47: LATDbits.LATD3 = 1;
 30764  0074E0  868C               	bsf	3980,3,c	;volatile
 30765                           
 30766                           ;lcd.c: 49: SPIPut2(data);
 30767  0074E2  0100               	movlb	0	; () banked
 30768  0074E4  5175               	movf	LCD_WriteData@data& (0+255),w,b
 30769  0074E6  EC4B  F03A         	call	_SPIPut2
 30770                           
 30771                           ;lcd.c: 51: LATDbits.LATD7 = 1;
 30772  0074EA  8E8C               	bsf	3980,7,c	;volatile
 30773                           
 30774                           ;lcd.c: 52: GIE=1;
 30775  0074EC  8EF2               	bsf	intcon,7,c	;volatile
 30776  0074EE  0012               	return		;funcret
 30777  0074F0                     __end_of_LCD_WriteData:
 30778                           	opt stack 0
 30779                           tblptru	equ	0xFF8
 30780                           tblptrh	equ	0xFF7
 30781                           tblptrl	equ	0xFF6
 30782                           tablat	equ	0xFF5
 30783                           prodh	equ	0xFF4
 30784                           prodl	equ	0xFF3
 30785                           intcon	equ	0xFF2
 30786                           intcon3	equ	0xFF0
 30787                           indf0	equ	0xFEF
 30788                           postinc0	equ	0xFEE
 30789                           plusw0	equ	0xFEB
 30790                           fsr0h	equ	0xFEA
 30791                           fsr0l	equ	0xFE9
 30792                           wreg	equ	0xFE8
 30793                           indf1	equ	0xFE7
 30794                           postinc1	equ	0xFE6
 30795                           postdec1	equ	0xFE5
 30796                           plusw1	equ	0xFE3
 30797                           fsr1h	equ	0xFE2
 30798                           fsr1l	equ	0xFE1
 30799                           indf2	equ	0xFDF
 30800                           postinc2	equ	0xFDE
 30801                           postdec2	equ	0xFDD
 30802                           plusw2	equ	0xFDB
 30803                           fsr2h	equ	0xFDA
 30804                           fsr2l	equ	0xFD9
 30805                           status	equ	0xFD8
 30806                           
 30807 ;; *************** function _LCDInit *****************
 30808 ;; Defined at:
 30809 ;;		line 55 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 30810 ;; Parameters:    Size  Location     Type
 30811 ;;		None
 30812 ;; Auto vars:     Size  Location     Type
 30813 ;;		None
 30814 ;; Return value:  Size  Location     Type
 30815 ;;                  1    wreg      void 
 30816 ;; Registers used:
 30817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30818 ;; Tracked objects:
 30819 ;;		On entry : 0/0
 30820 ;;		On exit  : F/0
 30821 ;;		Unchanged: 0/0
 30822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30827 ;;Total ram usage:        0 bytes
 30828 ;; Hardware stack levels used:    1
 30829 ;; Hardware stack levels required when called:    7
 30830 ;; This function calls:
 30831 ;;		_DelayMs
 30832 ;;		_LCD_WriteCmd
 30833 ;; This function is called by:
 30834 ;;		_LCDUpdate
 30835 ;; This function uses a non-reentrant model
 30836 ;;
 30837                           
 30838                           	psect	text152
 30839  004D56                     __ptext152:
 30840                           	opt stack 0
 30841  004D56                     _LCDInit:
 30842                           	opt stack 22
 30843                           
 30844                           ;lcd.c: 57: LATEbits.LATE1 = 0;
 30845                           
 30846                           ;incstack = 0
 30847  004D56  928D               	bcf	3981,1,c	;volatile
 30848                           
 30849                           ;lcd.c: 58: LATDbits.LATD7 = 1;
 30850  004D58  8E8C               	bsf	3980,7,c	;volatile
 30851                           
 30852                           ;lcd.c: 59: LATDbits.LATD3 = 0;
 30853  004D5A  968C               	bcf	3980,3,c	;volatile
 30854                           
 30855                           ;lcd.c: 60: LATEbits.LATE0 = 0;
 30856  004D5C  908D               	bcf	3981,0,c	;volatile
 30857                           
 30858                           ;lcd.c: 61: TRISEbits.TRISE1 = 0;
 30859  004D5E  9296               	bcf	3990,1,c	;volatile
 30860                           
 30861                           ;lcd.c: 62: TRISDbits.TRISD7 = 0;
 30862  004D60  9E95               	bcf	3989,7,c	;volatile
 30863                           
 30864                           ;lcd.c: 63: TRISDbits.TRISD3 = 0;
 30865  004D62  9695               	bcf	3989,3,c	;volatile
 30866                           
 30867                           ;lcd.c: 64: TRISEbits.TRISE0 = 0;
 30868  004D64  9096               	bcf	3990,0,c	;volatile
 30869                           
 30870                           ;lcd.c: 66: LATEbits.LATE0 = 0;
 30871  004D66  908D               	bcf	3981,0,c	;volatile
 30872                           
 30873                           ;lcd.c: 67: DelayMs(2);
 30874  004D68  0E02               	movlw	2
 30875  004D6A  0100               	movlb	0	; () banked
 30876  004D6C  6F7B               	movwf	DelayMs@ms& (0+255),b
 30877  004D6E  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30878  004D70  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30879  004D72  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30880  004D74  EC7F  F02E         	call	_DelayMs	;wreg free
 30881                           
 30882                           ; BSR set to: 0
 30883                           ;lcd.c: 68: LATEbits.LATE0 = 1;
 30884  004D78  808D               	bsf	3981,0,c	;volatile
 30885                           
 30886                           ;lcd.c: 69: DelayMs(2);
 30887  004D7A  0E02               	movlw	2
 30888  004D7C  6F7B               	movwf	DelayMs@ms& (0+255),b
 30889  004D7E  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30890  004D80  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30891  004D82  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30892  004D84  EC7F  F02E         	call	_DelayMs	;wreg free
 30893                           
 30894                           ; BSR set to: 0
 30895                           ;lcd.c: 70: LCD_WriteCmd(0x30);
 30896  004D88  0E30               	movlw	48
 30897  004D8A  EC78  F03A         	call	_LCD_WriteCmd
 30898                           
 30899                           ;lcd.c: 71: DelayMs(2);
 30900  004D8E  0E02               	movlw	2
 30901  004D90  0100               	movlb	0	; () banked
 30902  004D92  6F7B               	movwf	DelayMs@ms& (0+255),b
 30903  004D94  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30904  004D96  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30905  004D98  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30906  004D9A  EC7F  F02E         	call	_DelayMs	;wreg free
 30907                           
 30908                           ;lcd.c: 72: LCD_WriteCmd(0x30);
 30909  004D9E  0E30               	movlw	48
 30910  004DA0  EC78  F03A         	call	_LCD_WriteCmd
 30911                           
 30912                           ;lcd.c: 73: DelayMs(2);
 30913  004DA4  0E02               	movlw	2
 30914  004DA6  0100               	movlb	0	; () banked
 30915  004DA8  6F7B               	movwf	DelayMs@ms& (0+255),b
 30916  004DAA  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30917  004DAC  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30918  004DAE  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30919  004DB0  EC7F  F02E         	call	_DelayMs	;wreg free
 30920                           
 30921                           ; BSR set to: 0
 30922                           ;lcd.c: 74: LCD_WriteCmd(0x30);
 30923  004DB4  0E30               	movlw	48
 30924  004DB6  EC78  F03A         	call	_LCD_WriteCmd
 30925                           
 30926                           ;lcd.c: 75: DelayMs(2);
 30927  004DBA  0E02               	movlw	2
 30928  004DBC  0100               	movlb	0	; () banked
 30929  004DBE  6F7B               	movwf	DelayMs@ms& (0+255),b
 30930  004DC0  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30931  004DC2  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30932  004DC4  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30933  004DC6  EC7F  F02E         	call	_DelayMs	;wreg free
 30934                           
 30935                           ; BSR set to: 0
 30936                           ;lcd.c: 76: LCD_WriteCmd(0x39);
 30937  004DCA  0E39               	movlw	57
 30938  004DCC  EC78  F03A         	call	_LCD_WriteCmd
 30939                           
 30940                           ;lcd.c: 77: DelayMs(2);
 30941  004DD0  0E02               	movlw	2
 30942  004DD2  0100               	movlb	0	; () banked
 30943  004DD4  6F7B               	movwf	DelayMs@ms& (0+255),b
 30944  004DD6  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30945  004DD8  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30946  004DDA  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30947  004DDC  EC7F  F02E         	call	_DelayMs	;wreg free
 30948                           
 30949                           ;lcd.c: 78: LCD_WriteCmd(0x14);
 30950  004DE0  0E14               	movlw	20
 30951  004DE2  EC78  F03A         	call	_LCD_WriteCmd
 30952                           
 30953                           ;lcd.c: 79: DelayMs(2);
 30954  004DE6  0E02               	movlw	2
 30955  004DE8  0100               	movlb	0	; () banked
 30956  004DEA  6F7B               	movwf	DelayMs@ms& (0+255),b
 30957  004DEC  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30958  004DEE  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30959  004DF0  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30960  004DF2  EC7F  F02E         	call	_DelayMs	;wreg free
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;lcd.c: 80: LCD_WriteCmd(0x56);
 30964  004DF6  0E56               	movlw	86
 30965  004DF8  EC78  F03A         	call	_LCD_WriteCmd
 30966                           
 30967                           ;lcd.c: 81: DelayMs(2);
 30968  004DFC  0E02               	movlw	2
 30969  004DFE  0100               	movlb	0	; () banked
 30970  004E00  6F7B               	movwf	DelayMs@ms& (0+255),b
 30971  004E02  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30972  004E04  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30973  004E06  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30974  004E08  EC7F  F02E         	call	_DelayMs	;wreg free
 30975                           
 30976                           ; BSR set to: 0
 30977                           ;lcd.c: 82: LCD_WriteCmd(0x6D);
 30978  004E0C  0E6D               	movlw	109
 30979  004E0E  EC78  F03A         	call	_LCD_WriteCmd
 30980                           
 30981                           ;lcd.c: 83: DelayMs(2);
 30982  004E12  0E02               	movlw	2
 30983  004E14  0100               	movlb	0	; () banked
 30984  004E16  6F7B               	movwf	DelayMs@ms& (0+255),b
 30985  004E18  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30986  004E1A  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 30987  004E1C  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 30988  004E1E  EC7F  F02E         	call	_DelayMs	;wreg free
 30989                           
 30990                           ;lcd.c: 85: LCD_WriteCmd(0x70);
 30991  004E22  0E70               	movlw	112
 30992  004E24  EC78  F03A         	call	_LCD_WriteCmd
 30993                           
 30994                           ;lcd.c: 86: DelayMs(2);
 30995  004E28  0E02               	movlw	2
 30996  004E2A  0100               	movlb	0	; () banked
 30997  004E2C  6F7B               	movwf	DelayMs@ms& (0+255),b
 30998  004E2E  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 30999  004E30  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31000  004E32  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31001  004E34  EC7F  F02E         	call	_DelayMs	;wreg free
 31002                           
 31003                           ; BSR set to: 0
 31004                           ;lcd.c: 87: LCD_WriteCmd(0x0E);
 31005  004E38  0E0E               	movlw	14
 31006  004E3A  EC78  F03A         	call	_LCD_WriteCmd
 31007                           
 31008                           ;lcd.c: 88: DelayMs(2);
 31009  004E3E  0E02               	movlw	2
 31010  004E40  0100               	movlb	0	; () banked
 31011  004E42  6F7B               	movwf	DelayMs@ms& (0+255),b
 31012  004E44  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31013  004E46  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31014  004E48  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31015  004E4A  EC7F  F02E         	call	_DelayMs	;wreg free
 31016                           
 31017                           ; BSR set to: 0
 31018                           ;lcd.c: 89: LCD_WriteCmd(0x06);
 31019  004E4E  0E06               	movlw	6
 31020  004E50  EC78  F03A         	call	_LCD_WriteCmd
 31021                           
 31022                           ;lcd.c: 90: DelayMs(2);
 31023  004E54  0E02               	movlw	2
 31024  004E56  0100               	movlb	0	; () banked
 31025  004E58  6F7B               	movwf	DelayMs@ms& (0+255),b
 31026  004E5A  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31027  004E5C  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31028  004E5E  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31029  004E60  EC7F  F02E         	call	_DelayMs	;wreg free
 31030                           
 31031                           ;lcd.c: 91: LCD_WriteCmd(0x01);
 31032  004E64  0E01               	movlw	1
 31033  004E66  EC78  F03A         	call	_LCD_WriteCmd
 31034                           
 31035                           ;lcd.c: 92: DelayMs(10);
 31036  004E6A  0E0A               	movlw	10
 31037  004E6C  0100               	movlb	0	; () banked
 31038  004E6E  6F7B               	movwf	DelayMs@ms& (0+255),b
 31039  004E70  6B7C               	clrf	(DelayMs@ms+1)& (0+255),b
 31040  004E72  6B7D               	clrf	(DelayMs@ms+2)& (0+255),b
 31041  004E74  6B7E               	clrf	(DelayMs@ms+3)& (0+255),b
 31042  004E76  EF7F  F02E         	goto	_DelayMs	;wreg free
 31043  004E7A                     __end_of_LCDInit:
 31044                           	opt stack 0
 31045                           tblptru	equ	0xFF8
 31046                           tblptrh	equ	0xFF7
 31047                           tblptrl	equ	0xFF6
 31048                           tablat	equ	0xFF5
 31049                           prodh	equ	0xFF4
 31050                           prodl	equ	0xFF3
 31051                           intcon	equ	0xFF2
 31052                           intcon3	equ	0xFF0
 31053                           indf0	equ	0xFEF
 31054                           postinc0	equ	0xFEE
 31055                           plusw0	equ	0xFEB
 31056                           fsr0h	equ	0xFEA
 31057                           fsr0l	equ	0xFE9
 31058                           wreg	equ	0xFE8
 31059                           indf1	equ	0xFE7
 31060                           postinc1	equ	0xFE6
 31061                           postdec1	equ	0xFE5
 31062                           plusw1	equ	0xFE3
 31063                           fsr1h	equ	0xFE2
 31064                           fsr1l	equ	0xFE1
 31065                           indf2	equ	0xFDF
 31066                           postinc2	equ	0xFDE
 31067                           postdec2	equ	0xFDD
 31068                           plusw2	equ	0xFDB
 31069                           fsr2h	equ	0xFDA
 31070                           fsr2l	equ	0xFD9
 31071                           status	equ	0xFD8
 31072                           
 31073 ;; *************** function _LCD_WriteCmd *****************
 31074 ;; Defined at:
 31075 ;;		line 31 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 31076 ;; Parameters:    Size  Location     Type
 31077 ;;  data            1    wreg     unsigned char 
 31078 ;; Auto vars:     Size  Location     Type
 31079 ;;  data            1   21[BANK0 ] unsigned char 
 31080 ;; Return value:  Size  Location     Type
 31081 ;;                  1    wreg      void 
 31082 ;; Registers used:
 31083 ;;		wreg, status,2, cstack
 31084 ;; Tracked objects:
 31085 ;;		On entry : 0/0
 31086 ;;		On exit  : 0/0
 31087 ;;		Unchanged: 0/0
 31088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31093 ;;Total ram usage:        1 bytes
 31094 ;; Hardware stack levels used:    1
 31095 ;; Hardware stack levels required when called:    6
 31096 ;; This function calls:
 31097 ;;		_SPIPut2
 31098 ;; This function is called by:
 31099 ;;		_LCDInit
 31100 ;;		_LCDUpdate
 31101 ;; This function uses a non-reentrant model
 31102 ;;
 31103                           
 31104                           	psect	text153
 31105  0074F0                     __ptext153:
 31106                           	opt stack 0
 31107  0074F0                     _LCD_WriteCmd:
 31108                           	opt stack 23
 31109                           
 31110                           ; BSR set to: 0
 31111                           ;incstack = 0
 31112                           ;LCD_WriteCmd@data stored from wreg
 31113  0074F0  0100               	movlb	0	; () banked
 31114  0074F2  6F75               	movwf	LCD_WriteCmd@data& (0+255),b
 31115                           
 31116                           ;lcd.c: 33: GIE=0;
 31117  0074F4  9EF2               	bcf	intcon,7,c	;volatile
 31118                           
 31119                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 31120  0074F6  9E8C               	bcf	3980,7,c	;volatile
 31121                           
 31122                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 31123  0074F8  968C               	bcf	3980,3,c	;volatile
 31124                           
 31125                           ;lcd.c: 37: SPIPut2(data);
 31126  0074FA  5175               	movf	LCD_WriteCmd@data& (0+255),w,b
 31127  0074FC  EC4B  F03A         	call	_SPIPut2
 31128                           
 31129                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 31130  007500  8E8C               	bsf	3980,7,c	;volatile
 31131                           
 31132                           ;lcd.c: 40: GIE=1;
 31133  007502  8EF2               	bsf	intcon,7,c	;volatile
 31134  007504  0012               	return		;funcret
 31135  007506                     __end_of_LCD_WriteCmd:
 31136                           	opt stack 0
 31137                           tblptru	equ	0xFF8
 31138                           tblptrh	equ	0xFF7
 31139                           tblptrl	equ	0xFF6
 31140                           tablat	equ	0xFF5
 31141                           prodh	equ	0xFF4
 31142                           prodl	equ	0xFF3
 31143                           intcon	equ	0xFF2
 31144                           intcon3	equ	0xFF0
 31145                           indf0	equ	0xFEF
 31146                           postinc0	equ	0xFEE
 31147                           plusw0	equ	0xFEB
 31148                           fsr0h	equ	0xFEA
 31149                           fsr0l	equ	0xFE9
 31150                           wreg	equ	0xFE8
 31151                           indf1	equ	0xFE7
 31152                           postinc1	equ	0xFE6
 31153                           postdec1	equ	0xFE5
 31154                           plusw1	equ	0xFE3
 31155                           fsr1h	equ	0xFE2
 31156                           fsr1l	equ	0xFE1
 31157                           indf2	equ	0xFDF
 31158                           postinc2	equ	0xFDE
 31159                           postdec2	equ	0xFDD
 31160                           plusw2	equ	0xFDB
 31161                           fsr2h	equ	0xFDA
 31162                           fsr2l	equ	0xFD9
 31163                           status	equ	0xFD8
 31164                           
 31165 ;; *************** function _SPIPut2 *****************
 31166 ;; Defined at:
 31167 ;;		line 332 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 31168 ;; Parameters:    Size  Location     Type
 31169 ;;  v               1    wreg     unsigned char 
 31170 ;; Auto vars:     Size  Location     Type
 31171 ;;  v               1   19[BANK0 ] unsigned char 
 31172 ;;  i               1   20[BANK0 ] volatile unsigned char 
 31173 ;; Return value:  Size  Location     Type
 31174 ;;                  1    wreg      void 
 31175 ;; Registers used:
 31176 ;;		wreg
 31177 ;; Tracked objects:
 31178 ;;		On entry : F/0
 31179 ;;		On exit  : 0/0
 31180 ;;		Unchanged: 0/0
 31181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31186 ;;Total ram usage:        2 bytes
 31187 ;; Hardware stack levels used:    1
 31188 ;; Hardware stack levels required when called:    5
 31189 ;; This function calls:
 31190 ;;		Nothing
 31191 ;; This function is called by:
 31192 ;;		_LCD_WriteCmd
 31193 ;;		_LCD_WriteData
 31194 ;;		_SPIGet2
 31195 ;;		_EEPROMRead
 31196 ;; This function uses a non-reentrant model
 31197 ;;
 31198                           
 31199                           	psect	text154
 31200  007496                     __ptext154:
 31201                           	opt stack 0
 31202  007496                     _SPIPut2:
 31203                           	opt stack 23
 31204                           
 31205                           ;incstack = 0
 31206                           ;SPIPut2@v stored from wreg
 31207  007496  6F73               	movwf	SPIPut2@v& (0+255),b
 31208                           
 31209                           ;spi.c: 334: volatile uint8_t i;
 31210                           ;spi.c: 354: PIR3bits.SSP2IF = 0;
 31211  007498  9EA4               	bcf	4004,7,c	;volatile
 31212                           
 31213                           ;spi.c: 355: i = SSP2BUF;
 31214  00749A  CF75 F074          	movff	3957,SPIPut2@i	;volatile
 31215  00749E                     l89:
 31216                           
 31217                           ;spi.c: 357: {
 31218                           ;spi.c: 358: SSP2CON1bits.WCOL = 0;
 31219  00749E  9E72               	bcf	3954,7,c	;volatile
 31220                           
 31221                           ;spi.c: 359: SSP2BUF = v;
 31222  0074A0  C073  FF75         	movff	SPIPut2@v,3957	;volatile
 31223                           
 31224                           ;spi.c: 360: } while( SSP2CON1bits.WCOL );
 31225  0074A4  BE72               	btfsc	3954,7,c	;volatile
 31226  0074A6  D7FB               	goto	l89
 31227  0074A8                     l91:
 31228  0074A8  BEA4               	btfsc	4004,7,c	;volatile
 31229  0074AA  0012               	return		;funcret
 31230  0074AC  D7FD               	goto	l91
 31231  0074AE                     __end_of_SPIPut2:
 31232                           	opt stack 0
 31233                           tblptru	equ	0xFF8
 31234                           tblptrh	equ	0xFF7
 31235                           tblptrl	equ	0xFF6
 31236                           tablat	equ	0xFF5
 31237                           prodh	equ	0xFF4
 31238                           prodl	equ	0xFF3
 31239                           intcon	equ	0xFF2
 31240                           intcon3	equ	0xFF0
 31241                           indf0	equ	0xFEF
 31242                           postinc0	equ	0xFEE
 31243                           plusw0	equ	0xFEB
 31244                           fsr0h	equ	0xFEA
 31245                           fsr0l	equ	0xFE9
 31246                           wreg	equ	0xFE8
 31247                           indf1	equ	0xFE7
 31248                           postinc1	equ	0xFE6
 31249                           postdec1	equ	0xFE5
 31250                           plusw1	equ	0xFE3
 31251                           fsr1h	equ	0xFE2
 31252                           fsr1l	equ	0xFE1
 31253                           indf2	equ	0xFDF
 31254                           postinc2	equ	0xFDE
 31255                           postdec2	equ	0xFDD
 31256                           plusw2	equ	0xFDB
 31257                           fsr2h	equ	0xFDA
 31258                           fsr2l	equ	0xFD9
 31259                           status	equ	0xFD8
 31260                           
 31261 ;; *************** function _DelayMs *****************
 31262 ;; Defined at:
 31263 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 31264 ;; Parameters:    Size  Location     Type
 31265 ;;  ms              4   27[BANK0 ] unsigned long 
 31266 ;; Auto vars:     Size  Location     Type
 31267 ;;		None
 31268 ;; Return value:  Size  Location     Type
 31269 ;;                  1    wreg      void 
 31270 ;; Registers used:
 31271 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31272 ;; Tracked objects:
 31273 ;;		On entry : F/0
 31274 ;;		On exit  : F/0
 31275 ;;		Unchanged: 0/0
 31276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31279 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31280 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31281 ;;Total ram usage:       12 bytes
 31282 ;; Hardware stack levels used:    1
 31283 ;; Hardware stack levels required when called:    6
 31284 ;; This function calls:
 31285 ;;		_DelayUS
 31286 ;; This function is called by:
 31287 ;;		_LCDInit
 31288 ;;		_TxPacket
 31289 ;;		_MiMAC_Init
 31290 ;; This function uses a non-reentrant model
 31291 ;;
 31292                           
 31293                           	psect	text155
 31294  005CFE                     __ptext155:
 31295                           	opt stack 0
 31296  005CFE                     _DelayMs:
 31297                           	opt stack 16
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;delay.c: 36: DelayUS(ms*1000);
 31301                           
 31302                           ;incstack = 0
 31303  005CFE  C07B  F07F         	movff	DelayMs@ms,??_DelayMs
 31304  005D02  C07C  F080         	movff	DelayMs@ms+1,??_DelayMs+1
 31305  005D06  C07D  F081         	movff	DelayMs@ms+2,??_DelayMs+2
 31306  005D0A  C07E  F082         	movff	DelayMs@ms+3,??_DelayMs+3
 31307  005D0E  0EE8               	movlw	232
 31308  005D10  037F               	mulwf	??_DelayMs& (0+255),b
 31309  005D12  CFF3 F083          	movff	prodl,??_DelayMs+4
 31310  005D16  CFF4 F084          	movff	prodh,??_DelayMs+5
 31311  005D1A  6B85               	clrf	(??_DelayMs+6)& (0+255),b
 31312  005D1C  6B86               	clrf	(??_DelayMs+7)& (0+255),b
 31313  005D1E  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31314  005D20  50F3               	movf	prodl,w,c
 31315  005D22  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 31316  005D24  50F4               	movf	prodh,w,c
 31317  005D26  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 31318  005D28  0E00               	movlw	0
 31319  005D2A  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31320  005D2C  0E03               	movlw	3
 31321  005D2E  037F               	mulwf	??_DelayMs& (0+255),b
 31322  005D30  50F3               	movf	prodl,w,c
 31323  005D32  2784               	addwf	(??_DelayMs+5)& (0+255),f,b
 31324  005D34  50F4               	movf	prodh,w,c
 31325  005D36  2385               	addwfc	(??_DelayMs+6)& (0+255),f,b
 31326  005D38  0E00               	movlw	0
 31327  005D3A  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31328  005D3C  0EE8               	movlw	232
 31329  005D3E  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 31330  005D40  50F3               	movf	prodl,w,c
 31331  005D42  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31332  005D44  50F4               	movf	prodh,w,c
 31333  005D46  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31334  005D48  0E03               	movlw	3
 31335  005D4A  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31336  005D4C  50F3               	movf	prodl,w,c
 31337  005D4E  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31338  005D50  50F4               	movf	prodh,w,c
 31339  005D52  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31340  005D54  0E00               	movlw	0
 31341  005D56  037F               	mulwf	??_DelayMs& (0+255),b
 31342  005D58  50F3               	movf	prodl,w,c
 31343  005D5A  2785               	addwf	(??_DelayMs+6)& (0+255),f,b
 31344  005D5C  50F4               	movf	prodh,w,c
 31345  005D5E  2386               	addwfc	(??_DelayMs+7)& (0+255),f,b
 31346  005D60  0EE8               	movlw	232
 31347  005D62  0382               	mulwf	(??_DelayMs+3)& (0+255),b
 31348  005D64  50F3               	movf	prodl,w,c
 31349  005D66  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31350  005D68  0E03               	movlw	3
 31351  005D6A  0381               	mulwf	(??_DelayMs+2)& (0+255),b
 31352  005D6C  50F3               	movf	prodl,w,c
 31353  005D6E  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31354  005D70  0E00               	movlw	0
 31355  005D72  0380               	mulwf	(??_DelayMs+1)& (0+255),b
 31356  005D74  50F3               	movf	prodl,w,c
 31357  005D76  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31358  005D78  0E00               	movlw	0
 31359  005D7A  037F               	mulwf	??_DelayMs& (0+255),b
 31360  005D7C  50F3               	movf	prodl,w,c
 31361  005D7E  2786               	addwf	(??_DelayMs+7)& (0+255),f,b
 31362  005D80  C083  F073         	movff	??_DelayMs+4,DelayUS@delay
 31363  005D84  C084  F074         	movff	??_DelayMs+5,DelayUS@delay+1
 31364  005D88  C085  F075         	movff	??_DelayMs+6,DelayUS@delay+2
 31365  005D8C  C086  F076         	movff	??_DelayMs+7,DelayUS@delay+3
 31366  005D90  EF06  F039         	goto	_DelayUS	;wreg free
 31367  005D94                     __end_of_DelayMs:
 31368                           	opt stack 0
 31369                           tblptru	equ	0xFF8
 31370                           tblptrh	equ	0xFF7
 31371                           tblptrl	equ	0xFF6
 31372                           tablat	equ	0xFF5
 31373                           prodh	equ	0xFF4
 31374                           prodl	equ	0xFF3
 31375                           intcon	equ	0xFF2
 31376                           intcon3	equ	0xFF0
 31377                           indf0	equ	0xFEF
 31378                           postinc0	equ	0xFEE
 31379                           plusw0	equ	0xFEB
 31380                           fsr0h	equ	0xFEA
 31381                           fsr0l	equ	0xFE9
 31382                           wreg	equ	0xFE8
 31383                           indf1	equ	0xFE7
 31384                           postinc1	equ	0xFE6
 31385                           postdec1	equ	0xFE5
 31386                           plusw1	equ	0xFE3
 31387                           fsr1h	equ	0xFE2
 31388                           fsr1l	equ	0xFE1
 31389                           indf2	equ	0xFDF
 31390                           postinc2	equ	0xFDE
 31391                           postdec2	equ	0xFDD
 31392                           plusw2	equ	0xFDB
 31393                           fsr2h	equ	0xFDA
 31394                           fsr2l	equ	0xFD9
 31395                           status	equ	0xFD8
 31396                           
 31397 ;; *************** function _DelayUS *****************
 31398 ;; Defined at:
 31399 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 31400 ;; Parameters:    Size  Location     Type
 31401 ;;  delay           4   19[BANK0 ] unsigned long 
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;  i               4   23[BANK0 ] unsigned long 
 31404 ;; Return value:  Size  Location     Type
 31405 ;;                  1    wreg      void 
 31406 ;; Registers used:
 31407 ;;		wreg, status,2, status,0
 31408 ;; Tracked objects:
 31409 ;;		On entry : F/0
 31410 ;;		On exit  : F/0
 31411 ;;		Unchanged: 0/0
 31412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31416 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31417 ;;Total ram usage:        8 bytes
 31418 ;; Hardware stack levels used:    1
 31419 ;; Hardware stack levels required when called:    5
 31420 ;; This function calls:
 31421 ;;		Nothing
 31422 ;; This function is called by:
 31423 ;;		_DelayMs
 31424 ;;		_LCDUpdate
 31425 ;; This function uses a non-reentrant model
 31426 ;;
 31427                           
 31428                           	psect	text156
 31429  00720C                     __ptext156:
 31430                           	opt stack 0
 31431  00720C                     _DelayUS:
 31432                           	opt stack 16
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;delay.c: 25: uint32_t i;
 31436                           ;delay.c: 27: for(i=0;i<delay;i++)
 31437                           
 31438                           ; BSR set to: 0
 31439                           ;incstack = 0
 31440  00720C  6B77               	clrf	DelayUS@i& (0+255),b
 31441  00720E  6B78               	clrf	(DelayUS@i+1)& (0+255),b
 31442  007210  6B79               	clrf	(DelayUS@i+2)& (0+255),b
 31443  007212  6B7A               	clrf	(DelayUS@i+3)& (0+255),b
 31444  007214  D007               	goto	l5
 31445  007216                     l6:
 31446                           
 31447                           ; BSR set to: 0
 31448                           ;delay.c: 28: {
 31449                           ;delay.c: 29: __nop();
 31450  007216  F000               	nop	
 31451  007218  0100               	movlb	0	; () banked
 31452  00721A  2B77               	incf	DelayUS@i& (0+255),f,b
 31453  00721C  0E00               	movlw	0
 31454  00721E  2378               	addwfc	(DelayUS@i+1)& (0+255),f,b
 31455  007220  2379               	addwfc	(DelayUS@i+2)& (0+255),f,b
 31456  007222  237A               	addwfc	(DelayUS@i+3)& (0+255),f,b
 31457  007224                     l5:
 31458                           
 31459                           ; BSR set to: 0
 31460  007224  5173               	movf	DelayUS@delay& (0+255),w,b
 31461  007226  5D77               	subwf	DelayUS@i& (0+255),w,b
 31462  007228  5174               	movf	(DelayUS@delay+1)& (0+255),w,b
 31463  00722A  5978               	subwfb	(DelayUS@i+1)& (0+255),w,b
 31464  00722C  5175               	movf	(DelayUS@delay+2)& (0+255),w,b
 31465  00722E  5979               	subwfb	(DelayUS@i+2)& (0+255),w,b
 31466  007230  5176               	movf	(DelayUS@delay+3)& (0+255),w,b
 31467  007232  597A               	subwfb	(DelayUS@i+3)& (0+255),w,b
 31468  007234  E3F0               	bnc	l6
 31469                           
 31470                           ; BSR set to: 0
 31471  007236  0012               	return		;funcret
 31472  007238                     __end_of_DelayUS:
 31473                           	opt stack 0
 31474                           tblptru	equ	0xFF8
 31475                           tblptrh	equ	0xFF7
 31476                           tblptrl	equ	0xFF6
 31477                           tablat	equ	0xFF5
 31478                           prodh	equ	0xFF4
 31479                           prodl	equ	0xFF3
 31480                           intcon	equ	0xFF2
 31481                           intcon3	equ	0xFF0
 31482                           indf0	equ	0xFEF
 31483                           postinc0	equ	0xFEE
 31484                           plusw0	equ	0xFEB
 31485                           fsr0h	equ	0xFEA
 31486                           fsr0l	equ	0xFE9
 31487                           wreg	equ	0xFE8
 31488                           indf1	equ	0xFE7
 31489                           postinc1	equ	0xFE6
 31490                           postdec1	equ	0xFE5
 31491                           plusw1	equ	0xFE3
 31492                           fsr1h	equ	0xFE2
 31493                           fsr1l	equ	0xFE1
 31494                           indf2	equ	0xFDF
 31495                           postinc2	equ	0xFDE
 31496                           postdec2	equ	0xFDD
 31497                           plusw2	equ	0xFDB
 31498                           fsr2h	equ	0xFDA
 31499                           fsr2l	equ	0xFD9
 31500                           status	equ	0xFD8
 31501                           
 31502 ;; *************** function _InitSymbolTimer *****************
 31503 ;; Defined at:
 31504 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 31505 ;; Parameters:    Size  Location     Type
 31506 ;;		None
 31507 ;; Auto vars:     Size  Location     Type
 31508 ;;		None
 31509 ;; Return value:  Size  Location     Type
 31510 ;;                  1    wreg      void 
 31511 ;; Registers used:
 31512 ;;		None
 31513 ;; Tracked objects:
 31514 ;;		On entry : F/E
 31515 ;;		On exit  : F/1
 31516 ;;		Unchanged: 0/0
 31517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31522 ;;Total ram usage:        0 bytes
 31523 ;; Hardware stack levels used:    1
 31524 ;; Hardware stack levels required when called:    5
 31525 ;; This function calls:
 31526 ;;		Nothing
 31527 ;; This function is called by:
 31528 ;;		_main
 31529 ;; This function uses a non-reentrant model
 31530 ;;
 31531                           
 31532                           	psect	text157
 31533  007506                     __ptext157:
 31534                           	opt stack 0
 31535  007506                     _InitSymbolTimer:
 31536                           	opt stack 25
 31537                           
 31538                           ; BSR set to: 14
 31539                           ;symbol.c: 103: T0CON = 0x00;
 31540                           
 31541                           ; BSR set to: 0
 31542                           ;incstack = 0
 31543  007506  6AD5               	clrf	4053,c	;volatile
 31544                           
 31545                           ;symbol.c: 104: INTCON2bits.TMR0IP = 1;
 31546  007508  84F1               	bsf	intcon2,2,c	;volatile
 31547                           
 31548                           ;symbol.c: 105: INTCONbits.TMR0IF = 0;
 31549  00750A  94F2               	bcf	intcon,2,c	;volatile
 31550                           
 31551                           ;symbol.c: 106: INTCONbits.TMR0IE = 1;
 31552  00750C  8AF2               	bsf	intcon,5,c	;volatile
 31553                           
 31554                           ;symbol.c: 107: T0CONbits.TMR0ON = 1;
 31555  00750E  8ED5               	bsf	4053,7,c	;volatile
 31556                           
 31557                           ;symbol.c: 109: t1extension=0;
 31558  007510  0101               	movlb	1	; () banked
 31559  007512  6B9E               	clrf	_t1extension& (0+255),b
 31560  007514  6B9F               	clrf	(_t1extension+1)& (0+255),b
 31561  007516  6BA0               	clrf	(_t1extension+2)& (0+255),b
 31562  007518  6BA1               	clrf	(_t1extension+3)& (0+255),b
 31563                           
 31564                           ; BSR set to: 1
 31565  00751A  0012               	return		;funcret
 31566  00751C                     __end_of_InitSymbolTimer:
 31567                           	opt stack 0
 31568                           tblptru	equ	0xFF8
 31569                           tblptrh	equ	0xFF7
 31570                           tblptrl	equ	0xFF6
 31571                           tablat	equ	0xFF5
 31572                           prodh	equ	0xFF4
 31573                           prodl	equ	0xFF3
 31574                           intcon	equ	0xFF2
 31575                           intcon2	equ	0xFF1
 31576                           intcon3	equ	0xFF0
 31577                           indf0	equ	0xFEF
 31578                           postinc0	equ	0xFEE
 31579                           plusw0	equ	0xFEB
 31580                           fsr0h	equ	0xFEA
 31581                           fsr0l	equ	0xFE9
 31582                           wreg	equ	0xFE8
 31583                           indf1	equ	0xFE7
 31584                           postinc1	equ	0xFE6
 31585                           postdec1	equ	0xFE5
 31586                           plusw1	equ	0xFE3
 31587                           fsr1h	equ	0xFE2
 31588                           fsr1l	equ	0xFE1
 31589                           indf2	equ	0xFDF
 31590                           postinc2	equ	0xFDE
 31591                           postdec2	equ	0xFDD
 31592                           plusw2	equ	0xFDB
 31593                           fsr2h	equ	0xFDA
 31594                           fsr2l	equ	0xFD9
 31595                           status	equ	0xFD8
 31596                           
 31597 ;; *************** function _HardwareInit *****************
 31598 ;; Defined at:
 31599 ;;		line 235 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 31600 ;; Parameters:    Size  Location     Type
 31601 ;;		None
 31602 ;; Auto vars:     Size  Location     Type
 31603 ;;		None
 31604 ;; Return value:  Size  Location     Type
 31605 ;;                  1    wreg      void 
 31606 ;; Registers used:
 31607 ;;		wreg, status,2
 31608 ;; Tracked objects:
 31609 ;;		On entry : F/1
 31610 ;;		On exit  : F/E
 31611 ;;		Unchanged: 0/0
 31612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31617 ;;Total ram usage:        0 bytes
 31618 ;; Hardware stack levels used:    1
 31619 ;; Hardware stack levels required when called:    5
 31620 ;; This function calls:
 31621 ;;		Nothing
 31622 ;; This function is called by:
 31623 ;;		_main
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text158
 31628  0059AC                     __ptext158:
 31629                           	opt stack 0
 31630  0059AC                     _HardwareInit:
 31631                           	opt stack 25
 31632                           
 31633                           ; BSR set to: 1
 31634                           ;system.c: 240: OSCCON = 0x78;
 31635                           
 31636                           ; BSR set to: 1
 31637                           ;incstack = 0
 31638  0059AC  0E78               	movlw	120
 31639  0059AE  6ED3               	movwf	4051,c	;volatile
 31640                           
 31641                           ; BSR set to: 1
 31642                           ;system.c: 241: OSCTUNEbits.PLLEN = 1;
 31643  0059B0  8C9B               	bsf	3995,6,c	;volatile
 31644                           
 31645                           ; BSR set to: 1
 31646                           ;system.c: 242: WDTCONbits.SWDTEN = 0;
 31647  0059B2  90C0               	bcf	4032,0,c	;volatile
 31648                           
 31649                           ;system.c: 248: EECON2 = 0x55;
 31650  0059B4  0E55               	movlw	85
 31651  0059B6  6EA7               	movwf	4007,c	;volatile
 31652                           
 31653                           ;system.c: 249: EECON2 = 0xAA;
 31654  0059B8  0EAA               	movlw	170
 31655  0059BA  6EA7               	movwf	4007,c	;volatile
 31656                           
 31657                           ; BSR set to: 1
 31658                           ;system.c: 250: PPSCONbits.IOLOCK = 0;
 31659  0059BC  010E               	movlb	14	; () banked
 31660  0059BE  91FF               	bcf	255,0,b	;volatile
 31661                           
 31662                           ;system.c: 252: RPINR1 = 17;
 31663  0059C0  0E11               	movlw	17
 31664  0059C2  6FE7               	movwf	231,b	;volatile
 31665                           
 31666                           ;system.c: 253: RPINR21 = 23;
 31667  0059C4  0E17               	movlw	23
 31668  0059C6  6FFB               	movwf	251,b	;volatile
 31669                           
 31670                           ;system.c: 254: RPOR21 = 10;
 31671  0059C8  0E0A               	movlw	10
 31672  0059CA  6FDB               	movwf	219,b	;volatile
 31673                           
 31674                           ;system.c: 255: RPOR19 = 9;
 31675  0059CC  0E09               	movlw	9
 31676  0059CE  6FD9               	movwf	217,b	;volatile
 31677                           
 31678                           ;system.c: 258: EECON2 = 0x55;
 31679  0059D0  0E55               	movlw	85
 31680  0059D2  6EA7               	movwf	4007,c	;volatile
 31681                           
 31682                           ;system.c: 259: EECON2 = 0xAA;
 31683  0059D4  0EAA               	movlw	170
 31684  0059D6  6EA7               	movwf	4007,c	;volatile
 31685                           
 31686                           ; BSR set to: 14
 31687                           ;system.c: 260: PPSCONbits.IOLOCK = 1;
 31688  0059D8  81FF               	bsf	255,0,b	;volatile
 31689                           
 31690                           ;system.c: 265: ANCON0 = 0xFC;
 31691  0059DA  0EFC               	movlw	252
 31692  0059DC  010F               	movlb	15	; () banked
 31693  0059DE  6F48               	movwf	72,b	;volatile
 31694                           
 31695                           ;system.c: 266: ANCON1 = 0x1F;
 31696  0059E0  0E1F               	movlw	31
 31697  0059E2  6F49               	movwf	73,b	;volatile
 31698                           
 31699                           ; BSR set to: 15
 31700                           ;system.c: 271: TRISCbits.TRISC2=0;
 31701  0059E4  9494               	bcf	3988,2,c	;volatile
 31702                           
 31703                           ; BSR set to: 15
 31704                           ;system.c: 272: TRISAbits.TRISA6=0;
 31705  0059E6  9C92               	bcf	3986,6,c	;volatile
 31706                           
 31707                           ; BSR set to: 15
 31708                           ;system.c: 273: TRISAbits.TRISA7=0;
 31709  0059E8  9E92               	bcf	3986,7,c	;volatile
 31710                           
 31711                           ; BSR set to: 15
 31712                           ;system.c: 284: INTCON2bits.RBPU = 0;
 31713  0059EA  9EF1               	bcf	intcon2,7,c	;volatile
 31714                           
 31715                           ; BSR set to: 15
 31716                           ;system.c: 289: TRISAbits.TRISA1 = 1;
 31717  0059EC  8292               	bsf	3986,1,c	;volatile
 31718                           
 31719                           ; BSR set to: 15
 31720                           ;system.c: 290: TRISAbits.TRISA0 = 1;
 31721  0059EE  8092               	bsf	3986,0,c	;volatile
 31722                           
 31723                           ; BSR set to: 15
 31724                           ;system.c: 328: LATAbits.LATA5 = 1;
 31725  0059F0  8A89               	bsf	3977,5,c	;volatile
 31726                           
 31727                           ; BSR set to: 15
 31728                           ;system.c: 329: LATDbits.LATD1 = 1;
 31729  0059F2  828C               	bsf	3980,1,c	;volatile
 31730                           
 31731                           ; BSR set to: 15
 31732                           ;system.c: 331: TRISAbits.TRISA5 = 0;
 31733  0059F4  9A92               	bcf	3986,5,c	;volatile
 31734                           
 31735                           ; BSR set to: 15
 31736                           ;system.c: 332: TRISDbits.TRISD1 = 0;
 31737  0059F6  9295               	bcf	3989,1,c	;volatile
 31738                           
 31739                           ; BSR set to: 15
 31740                           ;system.c: 334: TRISBbits.TRISB0 = 1;
 31741  0059F8  8093               	bsf	3987,0,c	;volatile
 31742                           
 31743                           ; BSR set to: 15
 31744                           ;system.c: 335: TRISCbits.TRISC6 = 1;
 31745  0059FA  8C94               	bsf	3988,6,c	;volatile
 31746                           
 31747                           ; BSR set to: 15
 31748                           ;system.c: 338: INTCON2bits.INTEDG1 = 1;
 31749  0059FC  8AF1               	bsf	intcon2,5,c	;volatile
 31750                           
 31751                           ; BSR set to: 15
 31752                           ;system.c: 341: INTCON2bits.INTEDG0 = 1;
 31753  0059FE  8CF1               	bsf	intcon2,6,c	;volatile
 31754                           
 31755                           ; BSR set to: 15
 31756                           ;system.c: 343: INTCONbits.INT0IF = 0;
 31757  005A00  92F2               	bcf	intcon,1,c	;volatile
 31758                           
 31759                           ; BSR set to: 15
 31760                           ;system.c: 344: INTCONbits.INT0IE = 1;
 31761  005A02  88F2               	bsf	intcon,4,c	;volatile
 31762                           
 31763                           ; BSR set to: 15
 31764                           ;system.c: 345: INTCON3bits.INT1IF = 0;
 31765  005A04  90F0               	bcf	intcon3,0,c	;volatile
 31766                           
 31767                           ; BSR set to: 15
 31768                           ;system.c: 346: INTCON3bits.INT1IE = 1;
 31769  005A06  86F0               	bsf	intcon3,3,c	;volatile
 31770                           
 31771                           ; BSR set to: 15
 31772                           ;system.c: 350: TRISBbits.TRISB5 = 1;
 31773  005A08  8A93               	bsf	3987,5,c	;volatile
 31774                           
 31775                           ; BSR set to: 15
 31776                           ;system.c: 351: TRISCbits.TRISC7 = 0;
 31777  005A0A  9E94               	bcf	3988,7,c	;volatile
 31778                           
 31779                           ; BSR set to: 15
 31780                           ;system.c: 352: TRISBbits.TRISB4 = 0;
 31781  005A0C  9893               	bcf	3987,4,c	;volatile
 31782                           
 31783                           ;system.c: 354: SSP1STAT = 0xC0;
 31784  005A0E  0EC0               	movlw	192
 31785  005A10  6EC7               	movwf	4039,c	;volatile
 31786                           
 31787                           ;system.c: 355: SSP1CON1 = 0x22;
 31788  005A12  0E22               	movlw	34
 31789  005A14  6EC6               	movwf	4038,c	;volatile
 31790                           
 31791                           ; BSR set to: 15
 31792                           ;system.c: 360: TRISDbits.TRISD6 = 1;
 31793  005A16  8C95               	bsf	3989,6,c	;volatile
 31794                           
 31795                           ; BSR set to: 15
 31796                           ;system.c: 361: TRISDbits.TRISD2 = 0;
 31797  005A18  9495               	bcf	3989,2,c	;volatile
 31798                           
 31799                           ; BSR set to: 15
 31800                           ;system.c: 362: TRISDbits.TRISD4 = 0;
 31801  005A1A  9895               	bcf	3989,4,c	;volatile
 31802                           
 31803                           ;system.c: 364: RPINR1 = 17;
 31804  005A1C  0E11               	movlw	17
 31805  005A1E  010E               	movlb	14	; () banked
 31806  005A20  6FE7               	movwf	231,b	;volatile
 31807                           
 31808                           ;system.c: 365: RPINR21 = 23;
 31809  005A22  0E17               	movlw	23
 31810  005A24  6FFB               	movwf	251,b	;volatile
 31811                           
 31812                           ;system.c: 366: RPOR21 = 10;
 31813  005A26  0E0A               	movlw	10
 31814  005A28  6FDB               	movwf	219,b	;volatile
 31815                           
 31816                           ;system.c: 367: RPOR19 = 9;
 31817  005A2A  0E09               	movlw	9
 31818  005A2C  6FD9               	movwf	217,b	;volatile
 31819                           
 31820                           ; BSR set to: 14
 31821                           ;system.c: 369: SSP2STAT = 0x00;
 31822  005A2E  6A73               	clrf	3955,c	;volatile
 31823                           
 31824                           ;system.c: 370: SSP2CON1 = 0x31;
 31825  005A30  0E31               	movlw	49
 31826  005A32  6E72               	movwf	3954,c	;volatile
 31827                           
 31828                           ; BSR set to: 14
 31829                           ;system.c: 372: PIR3bits.SSP2IF = 0;
 31830  005A34  9EA4               	bcf	4004,7,c	;volatile
 31831                           
 31832                           ; BSR set to: 14
 31833                           ;system.c: 380: LATDbits.LATD5 = 1;
 31834  005A36  8A8C               	bsf	3980,5,c	;volatile
 31835                           
 31836                           ; BSR set to: 14
 31837                           ;system.c: 381: TRISDbits.TRISD5 = 0;
 31838  005A38  9A95               	bcf	3989,5,c	;volatile
 31839                           
 31840                           ; BSR set to: 14
 31841                           ;system.c: 386: LATEbits.LATE1 = 0;
 31842  005A3A  928D               	bcf	3981,1,c	;volatile
 31843                           
 31844                           ; BSR set to: 14
 31845                           ;system.c: 387: LATDbits.LATD7 = 1;
 31846  005A3C  8E8C               	bsf	3980,7,c	;volatile
 31847                           
 31848                           ; BSR set to: 14
 31849                           ;system.c: 388: LATDbits.LATD3 = 0;
 31850  005A3E  968C               	bcf	3980,3,c	;volatile
 31851                           
 31852                           ; BSR set to: 14
 31853                           ;system.c: 389: LATEbits.LATE0 = 0;
 31854  005A40  908D               	bcf	3981,0,c	;volatile
 31855                           
 31856                           ; BSR set to: 14
 31857                           ;system.c: 390: TRISEbits.TRISE1 = 0;
 31858  005A42  9296               	bcf	3990,1,c	;volatile
 31859                           
 31860                           ; BSR set to: 14
 31861                           ;system.c: 391: TRISDbits.TRISD7 = 0;
 31862  005A44  9E95               	bcf	3989,7,c	;volatile
 31863                           
 31864                           ; BSR set to: 14
 31865                           ;system.c: 392: TRISDbits.TRISD3 = 0;
 31866  005A46  9695               	bcf	3989,3,c	;volatile
 31867                           
 31868                           ; BSR set to: 14
 31869                           ;system.c: 393: TRISEbits.TRISE0 = 0;
 31870  005A48  9096               	bcf	3990,0,c	;volatile
 31871                           
 31872                           ; BSR set to: 14
 31873                           ;system.c: 398: TRISDbits.TRISD6 = 1;
 31874  005A4A  8C95               	bsf	3989,6,c	;volatile
 31875                           
 31876                           ; BSR set to: 14
 31877                           ;system.c: 399: TRISDbits.TRISD2 = 0;
 31878  005A4C  9495               	bcf	3989,2,c	;volatile
 31879                           
 31880                           ; BSR set to: 14
 31881                           ;system.c: 400: TRISDbits.TRISD4 = 0;
 31882  005A4E  9895               	bcf	3989,4,c	;volatile
 31883                           
 31884                           ; BSR set to: 14
 31885                           ;system.c: 402: SSP2STAT = 0x00;
 31886  005A50  6A73               	clrf	3955,c	;volatile
 31887                           
 31888                           ;system.c: 403: SSP2CON1 = 0x32;
 31889  005A52  0E32               	movlw	50
 31890  005A54  6E72               	movwf	3954,c	;volatile
 31891                           
 31892                           ; BSR set to: 14
 31893                           ;system.c: 405: TRISEbits.TRISE2=0;
 31894  005A56  9496               	bcf	3990,2,c	;volatile
 31895                           
 31896                           ; BSR set to: 14
 31897                           ;system.c: 406: LATEbits.LATE2=1;
 31898  005A58  848D               	bsf	3981,2,c	;volatile
 31899                           
 31900                           ; BSR set to: 14
 31901                           ;system.c: 408: PIR3bits.SSP2IF = 0;
 31902  005A5A  9EA4               	bcf	4004,7,c	;volatile
 31903                           
 31904                           ; BSR set to: 14
 31905                           ;system.c: 413: INTCONbits.GIEH = 1;
 31906  005A5C  8EF2               	bsf	intcon,7,c	;volatile
 31907                           
 31908                           ; BSR set to: 14
 31909  005A5E  0C32               	retlw	50	;funcret
 31910  005A60                     __end_of_HardwareInit:
 31911                           	opt stack 0
 31912                           tblptru	equ	0xFF8
 31913                           tblptrh	equ	0xFF7
 31914                           tblptrl	equ	0xFF6
 31915                           tablat	equ	0xFF5
 31916                           prodh	equ	0xFF4
 31917                           prodl	equ	0xFF3
 31918                           intcon	equ	0xFF2
 31919                           intcon2	equ	0xFF1
 31920                           intcon3	equ	0xFF0
 31921                           indf0	equ	0xFEF
 31922                           postinc0	equ	0xFEE
 31923                           plusw0	equ	0xFEB
 31924                           fsr0h	equ	0xFEA
 31925                           fsr0l	equ	0xFE9
 31926                           wreg	equ	0xFE8
 31927                           indf1	equ	0xFE7
 31928                           postinc1	equ	0xFE6
 31929                           postdec1	equ	0xFE5
 31930                           plusw1	equ	0xFE3
 31931                           fsr1h	equ	0xFE2
 31932                           fsr1l	equ	0xFE1
 31933                           indf2	equ	0xFDF
 31934                           postinc2	equ	0xFDE
 31935                           postdec2	equ	0xFDD
 31936                           plusw2	equ	0xFDB
 31937                           fsr2h	equ	0xFDA
 31938                           fsr2l	equ	0xFD9
 31939                           status	equ	0xFD8
 31940                           
 31941 ;; *************** function _ButtonTask *****************
 31942 ;; Defined at:
 31943 ;;		line 427 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
 31944 ;; Parameters:    Size  Location     Type
 31945 ;;		None
 31946 ;; Auto vars:     Size  Location     Type
 31947 ;;  Sw              1   39[BANK0 ] unsigned char 
 31948 ;; Return value:  Size  Location     Type
 31949 ;;                  1    wreg      void 
 31950 ;; Registers used:
 31951 ;;		wreg, status,2, status,0, cstack
 31952 ;; Tracked objects:
 31953 ;;		On entry : 0/0
 31954 ;;		On exit  : E/0
 31955 ;;		Unchanged: 0/0
 31956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31961 ;;Total ram usage:        1 bytes
 31962 ;; Hardware stack levels used:    1
 31963 ;; Hardware stack levels required when called:    7
 31964 ;; This function calls:
 31965 ;;		_MiWi_TickGetMs
 31966 ;; This function is called by:
 31967 ;;		_main
 31968 ;; This function uses a non-reentrant model
 31969 ;;
 31970                           
 31971                           	psect	text159
 31972  006602                     __ptext159:
 31973                           	opt stack 0
 31974  006602                     _ButtonTask:
 31975                           	opt stack 23
 31976                           
 31977                           ;system.c: 429: static MIWI_TICK tStart;
 31978                           ;system.c: 430: static uint8_t s0Count=0,s1Count=0;
 31979                           ;system.c: 431: static uint8_t pS0=0,pS1=0;
 31980                           ;system.c: 432: uint8_t Sw;
 31981                           ;system.c: 433: if((MiWi_TickGetMs().Val - tStart.Val)>10)
 31982                           
 31983                           ; BSR set to: 14
 31984                           ;incstack = 0
 31985  006602  EC42  F038         	call	_MiWi_TickGetMs	;wreg free
 31986  006606  5182               	movf	(?_MiWi_TickGetMs+3)& (0+255),w,b
 31987  006608  1181               	iorwf	(?_MiWi_TickGetMs+2)& (0+255),w,b
 31988  00660A  1180               	iorwf	(?_MiWi_TickGetMs+1)& (0+255),w,b
 31989  00660C  E104               	bnz	u22510
 31990  00660E  0E0B               	movlw	11
 31991  006610  5D7F               	subwf	?_MiWi_TickGetMs& (0+255),w,b
 31992  006612  A0D8               	btfss	status,0,c
 31993  006614  0012               	return	
 31994  006616                     u22510:
 31995                           
 31996                           ; BSR set to: 0
 31997                           ;system.c: 434: {
 31998                           ;system.c: 435: Sw=PORTBbits.RB1;
 31999  006616  0E00               	movlw	0
 32000  006618  B281               	btfsc	3969,1,c	;volatile
 32001  00661A  0E01               	movlw	1
 32002  00661C  6F87               	movwf	ButtonTask@Sw& (0+255),b
 32003                           
 32004                           ; BSR set to: 0
 32005                           ;system.c: 436: if(pS0==Sw)
 32006  00661E  5187               	movf	ButtonTask@Sw& (0+255),w,b
 32007  006620  183B               	xorwf	ButtonTask@pS0,w,c
 32008  006622  E10B               	bnz	l18084
 32009                           
 32010                           ; BSR set to: 0
 32011                           ;system.c: 437: {
 32012                           ;system.c: 438: if(s0Count<5)
 32013  006624  0E05               	movlw	5
 32014  006626  0101               	movlb	1	; () banked
 32015  006628  61B5               	cpfslt	ButtonTask@s0Count& (0+255),b
 32016  00662A  D002               	goto	l18078
 32017                           
 32018                           ; BSR set to: 1
 32019                           ;system.c: 439: {
 32020                           ;system.c: 440: s0Count++;
 32021  00662C  2BB5               	incf	ButtonTask@s0Count& (0+255),f,b
 32022                           
 32023                           ;system.c: 441: }else
 32024  00662E  D005               	goto	l18084
 32025  006630                     l18078:
 32026                           
 32027                           ; BSR set to: 1
 32028                           ;system.c: 442: {
 32029                           ;system.c: 443: if(pS0==0)
 32030  006630  503B               	movf	ButtonTask@pS0,w,c
 32031  006632  E102               	bnz	l18082
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;system.c: 444: {
 32035                           ;system.c: 445: switches|=(1<<0);
 32036  006634  81C6               	bsf	_switches& (0+255),0,b
 32037                           
 32038                           ;system.c: 446: }else
 32039  006636  D001               	goto	l18084
 32040  006638                     l18082:
 32041                           
 32042                           ; BSR set to: 1
 32043                           ;system.c: 447: {
 32044                           ;system.c: 448: switches&=(~(1<<0));
 32045  006638  91C6               	bcf	_switches& (0+255),0,b
 32046  00663A                     l18084:
 32047                           
 32048                           ;system.c: 449: }
 32049                           ;system.c: 450: }
 32050                           ;system.c: 451: }
 32051                           ;system.c: 452: pS0=Sw;
 32052  00663A  C087  F03B         	movff	ButtonTask@Sw,ButtonTask@pS0
 32053                           
 32054                           ;system.c: 454: Sw=PORTBbits.RB2;
 32055  00663E  0E00               	movlw	0
 32056  006640  B481               	btfsc	3969,2,c	;volatile
 32057  006642  0E01               	movlw	1
 32058  006644  0100               	movlb	0	; () banked
 32059  006646  6F87               	movwf	ButtonTask@Sw& (0+255),b
 32060                           
 32061                           ;system.c: 455: if(pS1==Sw)
 32062  006648  5187               	movf	ButtonTask@Sw& (0+255),w,b
 32063  00664A  183C               	xorwf	ButtonTask@pS1,w,c
 32064  00664C  E10B               	bnz	l18098
 32065                           
 32066                           ; BSR set to: 0
 32067                           ;system.c: 456: {
 32068                           ;system.c: 457: if(s1Count<5)
 32069  00664E  0E05               	movlw	5
 32070  006650  0101               	movlb	1	; () banked
 32071  006652  61B6               	cpfslt	ButtonTask@s1Count& (0+255),b
 32072  006654  D002               	goto	l18092
 32073                           
 32074                           ; BSR set to: 1
 32075                           ;system.c: 458: {
 32076                           ;system.c: 459: s1Count++;
 32077  006656  2BB6               	incf	ButtonTask@s1Count& (0+255),f,b
 32078                           
 32079                           ;system.c: 460: }else
 32080  006658  D005               	goto	l18098
 32081  00665A                     l18092:
 32082                           
 32083                           ; BSR set to: 1
 32084                           ;system.c: 461: {
 32085                           ;system.c: 462: if(pS1==0)
 32086  00665A  503C               	movf	ButtonTask@pS1,w,c
 32087  00665C  E102               	bnz	l18096
 32088                           
 32089                           ; BSR set to: 1
 32090                           ;system.c: 463: {
 32091                           ;system.c: 464: switches|=(1<<1);
 32092  00665E  83C6               	bsf	_switches& (0+255),1,b
 32093                           
 32094                           ;system.c: 465: }else
 32095  006660  D001               	goto	l18098
 32096  006662                     l18096:
 32097                           
 32098                           ; BSR set to: 1
 32099                           ;system.c: 466: {
 32100                           ;system.c: 467: switches&=(~(1<<1));
 32101  006662  93C6               	bcf	_switches& (0+255),1,b
 32102  006664                     l18098:
 32103                           
 32104                           ;system.c: 468: }
 32105                           ;system.c: 469: }
 32106                           ;system.c: 470: }
 32107                           ;system.c: 471: pS1=Sw;
 32108  006664  C087  F03C         	movff	ButtonTask@Sw,ButtonTask@pS1
 32109  006668  0012               	return		;funcret
 32110  00666A                     __end_of_ButtonTask:
 32111                           	opt stack 0
 32112                           tblptru	equ	0xFF8
 32113                           tblptrh	equ	0xFF7
 32114                           tblptrl	equ	0xFF6
 32115                           tablat	equ	0xFF5
 32116                           prodh	equ	0xFF4
 32117                           prodl	equ	0xFF3
 32118                           intcon	equ	0xFF2
 32119                           intcon2	equ	0xFF1
 32120                           intcon3	equ	0xFF0
 32121                           indf0	equ	0xFEF
 32122                           postinc0	equ	0xFEE
 32123                           plusw0	equ	0xFEB
 32124                           fsr0h	equ	0xFEA
 32125                           fsr0l	equ	0xFE9
 32126                           wreg	equ	0xFE8
 32127                           indf1	equ	0xFE7
 32128                           postinc1	equ	0xFE6
 32129                           postdec1	equ	0xFE5
 32130                           plusw1	equ	0xFE3
 32131                           fsr1h	equ	0xFE2
 32132                           fsr1l	equ	0xFE1
 32133                           indf2	equ	0xFDF
 32134                           postinc2	equ	0xFDE
 32135                           postdec2	equ	0xFDD
 32136                           plusw2	equ	0xFDB
 32137                           fsr2h	equ	0xFDA
 32138                           fsr2l	equ	0xFD9
 32139                           status	equ	0xFD8
 32140                           
 32141 ;; *************** function _MiWi_TickGetMs *****************
 32142 ;; Defined at:
 32143 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32144 ;; Parameters:    Size  Location     Type
 32145 ;;		None
 32146 ;; Auto vars:     Size  Location     Type
 32147 ;;  tnow            4   35[BANK0 ] unsigned long 
 32148 ;; Return value:  Size  Location     Type
 32149 ;;                  4   31[BANK0 ] struct MIWI_TICK_t
 32150 ;; Registers used:
 32151 ;;		wreg, status,2, status,0, cstack
 32152 ;; Tracked objects:
 32153 ;;		On entry : 0/0
 32154 ;;		On exit  : F/0
 32155 ;;		Unchanged: 0/0
 32156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32158 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32160 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32161 ;;Total ram usage:        8 bytes
 32162 ;; Hardware stack levels used:    1
 32163 ;; Hardware stack levels required when called:    6
 32164 ;; This function calls:
 32165 ;;		_MiWi_TickGet
 32166 ;; This function is called by:
 32167 ;;		_ButtonTask
 32168 ;;		_LEDManagerTask
 32169 ;;		_MiApp_MessageAvailable
 32170 ;;		_TxPacket
 32171 ;;		_MiMAC_ReceivedPacket
 32172 ;; This function uses a non-reentrant model
 32173 ;;
 32174                           
 32175                           	psect	text160
 32176  007084                     __ptext160:
 32177                           	opt stack 0
 32178  007084                     _MiWi_TickGetMs:
 32179                           	opt stack 16
 32180                           
 32181                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 32182                           
 32183                           ;incstack = 0
 32184  007084  ECBA  F036         	call	_MiWi_TickGet	;wreg free
 32185  007088  C073  F083         	movff	?_MiWi_TickGet,MiWi_TickGetMs@tnow
 32186  00708C  C074  F084         	movff	?_MiWi_TickGet+1,MiWi_TickGetMs@tnow+1
 32187  007090  C075  F085         	movff	?_MiWi_TickGet+2,MiWi_TickGetMs@tnow+2
 32188  007094  C076  F086         	movff	?_MiWi_TickGet+3,MiWi_TickGetMs@tnow+3
 32189                           
 32190                           ; BSR set to: 0
 32191                           ;symbol.c: 123: currentTime.Val=tnow;
 32192  007098  C083  F196         	movff	MiWi_TickGetMs@tnow,_currentTime
 32193  00709C  C084  F197         	movff	MiWi_TickGetMs@tnow+1,_currentTime+1
 32194  0070A0  C085  F198         	movff	MiWi_TickGetMs@tnow+2,_currentTime+2
 32195  0070A4  C086  F199         	movff	MiWi_TickGetMs@tnow+3,_currentTime+3
 32196                           
 32197                           ; BSR set to: 0
 32198                           ;symbol.c: 124: return(currentTime);
 32199  0070A8  C196  F07F         	movff	_currentTime,?_MiWi_TickGetMs
 32200  0070AC  C197  F080         	movff	_currentTime+1,?_MiWi_TickGetMs+1
 32201  0070B0  C198  F081         	movff	_currentTime+2,?_MiWi_TickGetMs+2
 32202  0070B4  C199  F082         	movff	_currentTime+3,?_MiWi_TickGetMs+3
 32203                           
 32204                           ; BSR set to: 0
 32205  0070B8  0012               	return		;funcret
 32206  0070BA                     __end_of_MiWi_TickGetMs:
 32207                           	opt stack 0
 32208                           tblptru	equ	0xFF8
 32209                           tblptrh	equ	0xFF7
 32210                           tblptrl	equ	0xFF6
 32211                           tablat	equ	0xFF5
 32212                           prodh	equ	0xFF4
 32213                           prodl	equ	0xFF3
 32214                           intcon	equ	0xFF2
 32215                           intcon2	equ	0xFF1
 32216                           intcon3	equ	0xFF0
 32217                           indf0	equ	0xFEF
 32218                           postinc0	equ	0xFEE
 32219                           plusw0	equ	0xFEB
 32220                           fsr0h	equ	0xFEA
 32221                           fsr0l	equ	0xFE9
 32222                           wreg	equ	0xFE8
 32223                           indf1	equ	0xFE7
 32224                           postinc1	equ	0xFE6
 32225                           postdec1	equ	0xFE5
 32226                           plusw1	equ	0xFE3
 32227                           fsr1h	equ	0xFE2
 32228                           fsr1l	equ	0xFE1
 32229                           indf2	equ	0xFDF
 32230                           postinc2	equ	0xFDE
 32231                           postdec2	equ	0xFDD
 32232                           plusw2	equ	0xFDB
 32233                           fsr2h	equ	0xFDA
 32234                           fsr2l	equ	0xFD9
 32235                           status	equ	0xFD8
 32236                           
 32237 ;; *************** function _MiWi_TickGet *****************
 32238 ;; Defined at:
 32239 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 32240 ;; Parameters:    Size  Location     Type
 32241 ;;		None
 32242 ;; Auto vars:     Size  Location     Type
 32243 ;;  tmrval          4   27[BANK0 ] unsigned long 
 32244 ;;  t1ext           4   23[BANK0 ] unsigned long 
 32245 ;; Return value:  Size  Location     Type
 32246 ;;                  4   19[BANK0 ] unsigned long 
 32247 ;; Registers used:
 32248 ;;		wreg, status,2, status,0
 32249 ;; Tracked objects:
 32250 ;;		On entry : 0/0
 32251 ;;		On exit  : F/0
 32252 ;;		Unchanged: 0/0
 32253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32255 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32257 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32258 ;;Total ram usage:       12 bytes
 32259 ;; Hardware stack levels used:    1
 32260 ;; Hardware stack levels required when called:    5
 32261 ;; This function calls:
 32262 ;;		Nothing
 32263 ;; This function is called by:
 32264 ;;		_MiWi_TickGetMs
 32265 ;; This function uses a non-reentrant model
 32266 ;;
 32267                           
 32268                           	psect	text161
 32269  006D74                     __ptext161:
 32270                           	opt stack 0
 32271  006D74                     _MiWi_TickGet:
 32272                           	opt stack 16
 32273                           
 32274                           ;symbol.c: 129: uint32_t tmrval=0;
 32275                           
 32276                           ; BSR set to: 0
 32277                           ;incstack = 0
 32278  006D74  0100               	movlb	0	; () banked
 32279  006D76  6B7B               	clrf	MiWi_TickGet@tmrval& (0+255),b
 32280  006D78  6B7C               	clrf	(MiWi_TickGet@tmrval+1)& (0+255),b
 32281  006D7A  6B7D               	clrf	(MiWi_TickGet@tmrval+2)& (0+255),b
 32282  006D7C  6B7E               	clrf	(MiWi_TickGet@tmrval+3)& (0+255),b
 32283  006D7E                     l125:
 32284                           
 32285                           ;symbol.c: 133: {
 32286                           ;symbol.c: 134: t1fired=0;
 32287  006D7E  6A44               	clrf	_t1fired,c	;volatile
 32288                           
 32289                           ;symbol.c: 136: t1ext=t1extension;
 32290  006D80  C19E  F077         	movff	_t1extension,MiWi_TickGet@t1ext
 32291  006D84  C19F  F078         	movff	_t1extension+1,MiWi_TickGet@t1ext+1
 32292  006D88  C1A0  F079         	movff	_t1extension+2,MiWi_TickGet@t1ext+2
 32293  006D8C  C1A1  F07A         	movff	_t1extension+3,MiWi_TickGet@t1ext+3
 32294                           
 32295                           ;symbol.c: 137: } while(t1fired==1);
 32296  006D90  0444               	decf	_t1fired,w,c	;volatile
 32297  006D92  E0F5               	bz	l125
 32298                           
 32299                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 32300  006D94  0100               	movlb	0	; () banked
 32301  006D96  5177               	movf	MiWi_TickGet@t1ext& (0+255),w,b
 32302  006D98  137B               	iorwf	MiWi_TickGet@tmrval& (0+255),f,b
 32303  006D9A  5178               	movf	(MiWi_TickGet@t1ext+1)& (0+255),w,b
 32304  006D9C  137C               	iorwf	(MiWi_TickGet@tmrval+1)& (0+255),f,b
 32305  006D9E  5179               	movf	(MiWi_TickGet@t1ext+2)& (0+255),w,b
 32306  006DA0  137D               	iorwf	(MiWi_TickGet@tmrval+2)& (0+255),f,b
 32307  006DA2  517A               	movf	(MiWi_TickGet@t1ext+3)& (0+255),w,b
 32308  006DA4  137E               	iorwf	(MiWi_TickGet@tmrval+3)& (0+255),f,b
 32309                           
 32310                           ; BSR set to: 0
 32311                           ;symbol.c: 140: return(tmrval);
 32312  006DA6  C07B  F073         	movff	MiWi_TickGet@tmrval,?_MiWi_TickGet
 32313  006DAA  C07C  F074         	movff	MiWi_TickGet@tmrval+1,?_MiWi_TickGet+1
 32314  006DAE  C07D  F075         	movff	MiWi_TickGet@tmrval+2,?_MiWi_TickGet+2
 32315  006DB2  C07E  F076         	movff	MiWi_TickGet@tmrval+3,?_MiWi_TickGet+3
 32316                           
 32317                           ; BSR set to: 0
 32318  006DB6  0012               	return		;funcret
 32319  006DB8                     __end_of_MiWi_TickGet:
 32320                           	opt stack 0
 32321                           tblptru	equ	0xFF8
 32322                           tblptrh	equ	0xFF7
 32323                           tblptrl	equ	0xFF6
 32324                           tablat	equ	0xFF5
 32325                           prodh	equ	0xFF4
 32326                           prodl	equ	0xFF3
 32327                           intcon	equ	0xFF2
 32328                           intcon2	equ	0xFF1
 32329                           intcon3	equ	0xFF0
 32330                           indf0	equ	0xFEF
 32331                           postinc0	equ	0xFEE
 32332                           plusw0	equ	0xFEB
 32333                           fsr0h	equ	0xFEA
 32334                           fsr0l	equ	0xFE9
 32335                           wreg	equ	0xFE8
 32336                           indf1	equ	0xFE7
 32337                           postinc1	equ	0xFE6
 32338                           postdec1	equ	0xFE5
 32339                           plusw1	equ	0xFE3
 32340                           fsr1h	equ	0xFE2
 32341                           fsr1l	equ	0xFE1
 32342                           indf2	equ	0xFDF
 32343                           postinc2	equ	0xFDE
 32344                           postdec2	equ	0xFDD
 32345                           plusw2	equ	0xFDB
 32346                           fsr2h	equ	0xFDA
 32347                           fsr2l	equ	0xFD9
 32348                           status	equ	0xFD8
 32349                           
 32350 ;; *************** function _HighISR *****************
 32351 ;; Defined at:
 32352 ;;		line 1316 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 32353 ;; Parameters:    Size  Location     Type
 32354 ;;		None
 32355 ;; Auto vars:     Size  Location     Type
 32356 ;;  dstPan          2    8[BANK0 ] unsigned int 
 32357 ;;  dPan            1    0[BANK0 ] PTR unsigned char 
 32358 ;;		 -> HighISR@dstPan(2), 
 32359 ;;  ackInfoIndex    1   15[BANK0 ] unsigned char 
 32360 ;;  PacketForMe     1   10[BANK0 ] unsigned char 
 32361 ;;  i               1   18[BANK0 ] unsigned char 
 32362 ;;  fifo_stat       1    3[BANK0 ] unsigned char 
 32363 ;;  ackPacket       4    4[BANK0 ] unsigned char [4]
 32364 ;;  counter         2    1[BANK0 ] unsigned int 
 32365 ;;  BankIndex       1   17[BANK0 ] unsigned char 
 32366 ;;  PacketLen       1   16[BANK0 ] unsigned char 
 32367 ;;  RxPacketPtr     1   14[BANK0 ] unsigned char 
 32368 ;;  bAck            1   11[BANK0 ] unsigned char 
 32369 ;;  tmr             2   12[BANK0 ] unsigned int 
 32370 ;; Return value:  Size  Location     Type
 32371 ;;                  1    wreg      void 
 32372 ;; Registers used:
 32373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32374 ;; Tracked objects:
 32375 ;;		On entry : 0/0
 32376 ;;		On exit  : 0/0
 32377 ;;		Unchanged: 0/0
 32378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32380 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32381 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32382 ;;      Totals:        10      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32383 ;;Total ram usage:       29 bytes
 32384 ;; Hardware stack levels used:    1
 32385 ;; Hardware stack levels required when called:    4
 32386 ;; This function calls:
 32387 ;;		i2_MiWi_TickGetMs
 32388 ;;		i2_RegisterRead
 32389 ;;		i2_SPIGet
 32390 ;;		i2_TxPacket
 32391 ;; This function is called by:
 32392 ;;		Interrupt level 2
 32393 ;; This function uses a non-reentrant model
 32394 ;;
 32395                           
 32396                           	psect	intcode
 32397  000008                     __pintcode:
 32398                           	opt stack 0
 32399  000008                     _HighISR:
 32400                           	opt stack 14
 32401                           
 32402                           ; BSR set to: 0
 32403                           ;incstack = 0
 32404  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32405  00000A  CFE1 F030          	movff	fsr1l,??_HighISR+4
 32406  00000E  CFE2 F031          	movff	fsr1h,??_HighISR+5
 32407  000012  CFD9 F032          	movff	fsr2l,??_HighISR+6
 32408  000016  CFDA F033          	movff	fsr2h,??_HighISR+7
 32409  00001A  CFF3 F034          	movff	prodl,??_HighISR+8
 32410  00001E  CFF4 F035          	movff	prodh,??_HighISR+9
 32411                           
 32412                           ;drv_mrf_miwi_mesh_89xa.c: 1325: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 32413  000022  B0F0               	btfsc	intcon3,0,c	;volatile
 32414  000024  A6F0               	btfss	intcon3,3,c	;volatile
 32415  000026  D212               	goto	i2l15032
 32416                           
 32417                           ;drv_mrf_miwi_mesh_89xa.c: 1326: {
 32418                           ;drv_mrf_miwi_mesh_89xa.c: 1327: if(RF_Mode == 0x60)
 32419  000028  0E60               	movlw	96
 32420  00002A  0101               	movlb	1	; () banked
 32421  00002C  19BA               	xorwf	_RF_Mode& (0+255),w,b
 32422  00002E  E001 D209          	bnz	i2l15026
 32423                           
 32424                           ; BSR set to: 1
 32425                           ;drv_mrf_miwi_mesh_89xa.c: 1328: {
 32426                           ;drv_mrf_miwi_mesh_89xa.c: 1329: uint8_t RxPacketPtr;
 32427                           ;drv_mrf_miwi_mesh_89xa.c: 1330: uint8_t PacketLen;
 32428                           ;drv_mrf_miwi_mesh_89xa.c: 1331: uint8_t BankIndex;
 32429                           ;drv_mrf_miwi_mesh_89xa.c: 1332: uint16_t counter;
 32430                           ;drv_mrf_miwi_mesh_89xa.c: 1333: bool bAck;
 32431                           ;drv_mrf_miwi_mesh_89xa.c: 1334: uint8_t ackPacket[4];
 32432                           ;drv_mrf_miwi_mesh_89xa.c: 1337: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 32433  000032  0E28               	movlw	40
 32434  000034  EC1C  F039         	call	i2_RegisterRead
 32435  000038  6E2C               	movwf	??_HighISR& (0+255),c
 32436  00003A  90D8               	bcf	status,0,c
 32437  00003C  302C               	rrcf	??_HighISR,w,c
 32438  00003E  0101               	movlb	1	; () banked
 32439  000040  6FBC               	movwf	_RSSIVal& (0+255),b
 32440                           
 32441                           ; BSR set to: 1
 32442                           ;drv_mrf_miwi_mesh_89xa.c: 1340: RSSILock = RSSIVal;
 32443  000042  C1BC  F1BB         	movff	_RSSIVal,_RSSILock
 32444                           
 32445                           ; BSR set to: 1
 32446                           ;drv_mrf_miwi_mesh_89xa.c: 1342: LATAbits.LATA5 = 0;
 32447  000046  9A89               	bcf	3977,5,c	;volatile
 32448                           
 32449                           ; BSR set to: 1
 32450                           ;drv_mrf_miwi_mesh_89xa.c: 1343: PacketLen = SPIGet();
 32451  000048  ECF5  F03A         	call	i2_SPIGet	;wreg free
 32452  00004C  0100               	movlb	0	; () banked
 32453  00004E  6F70               	movwf	HighISR@PacketLen& (0+255),b
 32454                           
 32455                           ; BSR set to: 0
 32456                           ;drv_mrf_miwi_mesh_89xa.c: 1344: LATAbits.LATA5 = 1;
 32457  000050  8A89               	bsf	3977,5,c	;volatile
 32458                           
 32459                           ; BSR set to: 0
 32460                           ;drv_mrf_miwi_mesh_89xa.c: 1347: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 32461  000052  6B71               	clrf	HighISR@BankIndex& (0+255),b
 32462  000054                     i2l14836:
 32463                           
 32464                           ; BSR set to: 0
 32465                           ;drv_mrf_miwi_mesh_89xa.c: 1348: {
 32466                           ;drv_mrf_miwi_mesh_89xa.c: 1349: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 32467  000054  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32468  000056  0D47               	mullw	71
 32469  000058  0E2C               	movlw	low _RxPacket
 32470  00005A  24F3               	addwf	prodl,w,c
 32471  00005C  6ED9               	movwf	fsr2l,c
 32472  00005E  0E02               	movlw	high _RxPacket
 32473  000060  20F4               	addwfc	prodh,w,c
 32474  000062  6EDA               	movwf	fsr2h,c
 32475  000064  A0DF               	btfss	indf2,0,c
 32476  000066  D005               	goto	i2l14844
 32477                           
 32478                           ; BSR set to: 2
 32479  000068  0100               	movlb	0	; () banked
 32480  00006A  2B71               	incf	HighISR@BankIndex& (0+255),f,b
 32481                           
 32482                           ; BSR set to: 0
 32483  00006C  0E01               	movlw	1
 32484  00006E  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 32485  000070  D7F1               	goto	i2l14836
 32486  000072                     i2l14844:
 32487                           
 32488                           ;drv_mrf_miwi_mesh_89xa.c: 1352: }
 32489                           ;drv_mrf_miwi_mesh_89xa.c: 1353: }
 32490                           ;drv_mrf_miwi_mesh_89xa.c: 1356: if( PacketLen == 2 )
 32491  000072  0E02               	movlw	2
 32492  000074  0100               	movlb	0	; () banked
 32493  000076  1970               	xorwf	HighISR@PacketLen& (0+255),w,b
 32494  000078  E103               	bnz	i2l854
 32495                           
 32496                           ; BSR set to: 0
 32497                           ;drv_mrf_miwi_mesh_89xa.c: 1357: {
 32498                           ;drv_mrf_miwi_mesh_89xa.c: 1358: bAck = 1;
 32499  00007A  0E01               	movlw	1
 32500  00007C  6F6B               	movwf	HighISR@bAck& (0+255),b
 32501                           
 32502                           ;drv_mrf_miwi_mesh_89xa.c: 1359: }
 32503  00007E  D001               	goto	i2l14848
 32504  000080                     i2l854:
 32505                           
 32506                           ; BSR set to: 0
 32507                           ;drv_mrf_miwi_mesh_89xa.c: 1360: else
 32508                           ;drv_mrf_miwi_mesh_89xa.c: 1361: {
 32509                           ;drv_mrf_miwi_mesh_89xa.c: 1362: bAck = 0;
 32510  000080  6B6B               	clrf	HighISR@bAck& (0+255),b
 32511  000082                     i2l14848:
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;drv_mrf_miwi_mesh_89xa.c: 1363: }
 32515                           ;drv_mrf_miwi_mesh_89xa.c: 1366: if( PacketLen >= 64 || PacketLen == 0 || (BankIndex >= 
      +                          2 && (bAck==0)) )
 32516  000082  0E40               	movlw	64
 32517  000084  6170               	cpfslt	HighISR@PacketLen& (0+255),b
 32518  000086  D007               	goto	i2l14856
 32519                           
 32520                           ; BSR set to: 0
 32521  000088  5170               	movf	HighISR@PacketLen& (0+255),w,b
 32522  00008A  E005               	bz	i2l14856
 32523                           
 32524                           ; BSR set to: 0
 32525  00008C  0E01               	movlw	1
 32526  00008E  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 32527  000090  D012               	goto	i2l856
 32528                           
 32529                           ; BSR set to: 0
 32530  000092  516B               	movf	HighISR@bAck& (0+255),w,b
 32531  000094  E110               	bnz	i2l856
 32532  000096                     i2l14856:
 32533                           
 32534                           ; BSR set to: 0
 32535                           ;drv_mrf_miwi_mesh_89xa.c: 1369: {
 32536                           ;drv_mrf_miwi_mesh_89xa.c: 1370: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 32537  000096  0E1A               	movlw	26
 32538  000098  EC1C  F039         	call	i2_RegisterRead
 32539  00009C  D007               	goto	L14
 32540  00009E                     i2l861:
 32541                           
 32542                           ; BSR set to: 0
 32543                           ;drv_mrf_miwi_mesh_89xa.c: 1372: {
 32544                           ;drv_mrf_miwi_mesh_89xa.c: 1373: LATAbits.LATA5 = 0;
 32545  00009E  9A89               	bcf	3977,5,c	;volatile
 32546                           
 32547                           ; BSR set to: 0
 32548                           ;drv_mrf_miwi_mesh_89xa.c: 1374: SPIGet();
 32549  0000A0  ECF5  F03A         	call	i2_SPIGet	;wreg free
 32550                           
 32551                           ;drv_mrf_miwi_mesh_89xa.c: 1375: LATAbits.LATA5 = 1;
 32552  0000A4  8A89               	bsf	3977,5,c	;volatile
 32553                           
 32554                           ;drv_mrf_miwi_mesh_89xa.c: 1376: fifo_stat = RegisterRead(0x1A00>>8);
 32555  0000A6  0E1A               	movlw	26
 32556  0000A8  EC1C  F039         	call	i2_RegisterRead
 32557  0000AC                     L14:
 32558  0000AC  0100               	movlb	0	; () banked
 32559  0000AE  6F63               	movwf	HighISR@fifo_stat& (0+255),b
 32560                           
 32561                           ; BSR set to: 0
 32562  0000B0  B363               	btfsc	HighISR@fifo_stat& (0+255),1,b
 32563  0000B2  D7F5               	goto	i2l861
 32564  0000B4  D1C9               	goto	i2l15028
 32565  0000B6                     i2l856:
 32566                           
 32567                           ; BSR set to: 0
 32568                           ;drv_mrf_miwi_mesh_89xa.c: 1380: }
 32569                           ;drv_mrf_miwi_mesh_89xa.c: 1382: RxPacketPtr = 0;
 32570  0000B6  6B6E               	clrf	HighISR@RxPacketPtr& (0+255),b
 32571                           
 32572                           ;drv_mrf_miwi_mesh_89xa.c: 1383: counter = PacketLen;
 32573  0000B8  C070  F061         	movff	HighISR@PacketLen,HighISR@counter
 32574  0000BC  6B62               	clrf	(HighISR@counter+1)& (0+255),b
 32575                           
 32576                           ;drv_mrf_miwi_mesh_89xa.c: 1385: while(counter >= 1)
 32577  0000BE  D1BE               	goto	i2l15024
 32578  0000C0                     i2l14866:
 32579                           
 32580                           ; BSR set to: 0
 32581                           ;drv_mrf_miwi_mesh_89xa.c: 1388: if(1)
 32582  0000C0  0761               	decf	HighISR@counter& (0+255),f,b
 32583  0000C2  A0D8               	btfss	status,0,c
 32584  0000C4  0762               	decf	(HighISR@counter+1)& (0+255),f,b
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;drv_mrf_miwi_mesh_89xa.c: 1389: {
 32588                           ;drv_mrf_miwi_mesh_89xa.c: 1391: if( bAck )
 32589  0000C6  516B               	movf	HighISR@bAck& (0+255),w,b
 32590  0000C8  E008               	bz	i2l867
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;drv_mrf_miwi_mesh_89xa.c: 1392: {
 32594                           ;drv_mrf_miwi_mesh_89xa.c: 1393: LATAbits.LATA5 = 0;
 32595  0000CA  9A89               	bcf	3977,5,c	;volatile
 32596                           
 32597                           ; BSR set to: 0
 32598                           ;drv_mrf_miwi_mesh_89xa.c: 1394: ackPacket[RxPacketPtr++] = SPIGet();
 32599  0000CC  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 32600  0000CE  0F64               	addlw	low HighISR@ackPacket
 32601  0000D0  6ED9               	movwf	fsr2l,c
 32602  0000D2  6ADA               	clrf	fsr2h,c
 32603  0000D4  ECF5  F03A         	call	i2_SPIGet	;wreg free
 32604  0000D8  D016               	goto	L20
 32605  0000DA                     i2l867:
 32606                           
 32607                           ; BSR set to: 0
 32608                           ;drv_mrf_miwi_mesh_89xa.c: 1398: else
 32609                           ;drv_mrf_miwi_mesh_89xa.c: 1399: {
 32610                           ;drv_mrf_miwi_mesh_89xa.c: 1400: LATAbits.LATA5 = 0;
 32611  0000DA  9A89               	bcf	3977,5,c	;volatile
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;drv_mrf_miwi_mesh_89xa.c: 1401: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPIGet();
 32615  0000DC  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32616  0000DE  0D47               	mullw	71
 32617  0000E0  0E2C               	movlw	low _RxPacket
 32618  0000E2  6E2C               	movwf	??_HighISR& (0+255),c
 32619  0000E4  0E02               	movlw	high _RxPacket
 32620  0000E6  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 32621  0000E8  2A2C               	incf	??_HighISR,f,c
 32622  0000EA  0E00               	movlw	0
 32623  0000EC  222D               	addwfc	??_HighISR+1,f,c
 32624  0000EE  50F3               	movf	prodl,w,c
 32625  0000F0  262C               	addwf	??_HighISR,f,c
 32626  0000F2  50F4               	movf	prodh,w,c
 32627  0000F4  222D               	addwfc	??_HighISR+1,f,c
 32628  0000F6  516E               	movf	HighISR@RxPacketPtr& (0+255),w,b
 32629  0000F8  242C               	addwf	??_HighISR,w,c
 32630  0000FA  6ED9               	movwf	fsr2l,c
 32631  0000FC  0E00               	movlw	0
 32632  0000FE  202D               	addwfc	??_HighISR+1,w,c
 32633  000100  6EDA               	movwf	fsr2h,c
 32634  000102  ECF5  F03A         	call	i2_SPIGet	;wreg free
 32635  000106                     L20:
 32636  000106  6EDF               	movwf	indf2,c
 32637  000108  0100               	movlb	0	; () banked
 32638  00010A  2B6E               	incf	HighISR@RxPacketPtr& (0+255),f,b
 32639                           
 32640                           ; BSR set to: 0
 32641                           ;drv_mrf_miwi_mesh_89xa.c: 1402: LATAbits.LATA5 = 1;
 32642  00010C  8A89               	bsf	3977,5,c	;volatile
 32643                           
 32644                           ; BSR set to: 0
 32645                           ;drv_mrf_miwi_mesh_89xa.c: 1403: }
 32646                           ;drv_mrf_miwi_mesh_89xa.c: 1406: if( RxPacketPtr >= PacketLen )
 32647  00010E  5170               	movf	HighISR@PacketLen& (0+255),w,b
 32648  000110  5D6E               	subwf	HighISR@RxPacketPtr& (0+255),w,b
 32649  000112  E201 D193          	bnc	i2l15024
 32650                           
 32651                           ; BSR set to: 0
 32652                           ;drv_mrf_miwi_mesh_89xa.c: 1407: {
 32653                           ;drv_mrf_miwi_mesh_89xa.c: 1408: uint8_t i;
 32654                           ;drv_mrf_miwi_mesh_89xa.c: 1410: if( bAck )
 32655  000116  516B               	movf	HighISR@bAck& (0+255),w,b
 32656  000118  E025               	bz	i2l870
 32657                           
 32658                           ; BSR set to: 0
 32659                           ;drv_mrf_miwi_mesh_89xa.c: 1411: {
 32660                           ;drv_mrf_miwi_mesh_89xa.c: 1413: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 32661  00011A  5164               	movf	HighISR@ackPacket& (0+255),w,b
 32662  00011C  0B03               	andlw	3
 32663  00011E  0A02               	xorlw	2
 32664  000120  E109               	bnz	i2l14898
 32665                           
 32666                           ; BSR set to: 0
 32667                           ;drv_mrf_miwi_mesh_89xa.c: 1414: {
 32668                           ;drv_mrf_miwi_mesh_89xa.c: 1415: if( ackPacket[1] == TxMACSeq )
 32669  000122  0101               	movlb	1	; () banked
 32670  000124  51BF               	movf	_TxMACSeq& (0+255),w,b
 32671  000126  0100               	movlb	0	; () banked
 32672  000128  1965               	xorwf	(HighISR@ackPacket+1)& (0+255),w,b
 32673  00012A  E001 D18D          	bnz	i2l15028
 32674                           
 32675                           ; BSR set to: 0
 32676                           ;drv_mrf_miwi_mesh_89xa.c: 1416: {
 32677                           ;drv_mrf_miwi_mesh_89xa.c: 1417: hasAck = 1;
 32678  00012E  0E01               	movlw	1
 32679  000130  6E41               	movwf	_hasAck,c	;volatile
 32680                           
 32681                           ; BSR set to: 0
 32682                           ;drv_mrf_miwi_mesh_89xa.c: 1420: goto RETURN_HERE;
 32683  000132  D18A               	goto	i2l15028
 32684  000134                     i2l14898:
 32685                           
 32686                           ; BSR set to: 0
 32687                           ;drv_mrf_miwi_mesh_89xa.c: 1422: else
 32688                           ;drv_mrf_miwi_mesh_89xa.c: 1424: if( BankIndex >= 2 )
 32689  000134  0E01               	movlw	1
 32690  000136  6571               	cpfsgt	HighISR@BankIndex& (0+255),b
 32691  000138  D001               	goto	i2l14902
 32692  00013A  D7AD               	goto	i2l14856
 32693  00013C                     i2l14902:
 32694                           
 32695                           ; BSR set to: 0
 32696                           ;drv_mrf_miwi_mesh_89xa.c: 1428: }
 32697                           ;drv_mrf_miwi_mesh_89xa.c: 1429: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 32698  00013C  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32699  00013E  0D47               	mullw	71
 32700  000140  0E2D               	movlw	low (_RxPacket+1)
 32701  000142  24F3               	addwf	prodl,w,c
 32702  000144  6ED9               	movwf	fsr2l,c
 32703  000146  0E02               	movlw	high (_RxPacket+1)
 32704  000148  20F4               	addwfc	prodh,w,c
 32705  00014A  6EDA               	movwf	fsr2h,c
 32706  00014C  C064  FFDF         	movff	HighISR@ackPacket,indf2
 32707                           
 32708                           ;drv_mrf_miwi_mesh_89xa.c: 1430: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 32709  000150  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32710  000152  0D47               	mullw	71
 32711  000154  0E2E               	movlw	low (_RxPacket+2)
 32712  000156  24F3               	addwf	prodl,w,c
 32713  000158  6ED9               	movwf	fsr2l,c
 32714  00015A  0E02               	movlw	high (_RxPacket+2)
 32715  00015C  20F4               	addwfc	prodh,w,c
 32716  00015E  6EDA               	movwf	fsr2h,c
 32717  000160  C065  FFDF         	movff	HighISR@ackPacket+1,indf2
 32718  000164                     i2l870:
 32719                           
 32720                           ; BSR set to: 0
 32721                           ;drv_mrf_miwi_mesh_89xa.c: 1432: }
 32722                           ;drv_mrf_miwi_mesh_89xa.c: 1434: RxPacket[BankIndex].PayloadLen = PacketLen;
 32723  000164  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32724  000166  0D47               	mullw	71
 32725  000168  0E6D               	movlw	low (_RxPacket+65)
 32726  00016A  24F3               	addwf	prodl,w,c
 32727  00016C  6ED9               	movwf	fsr2l,c
 32728  00016E  0E02               	movlw	high (_RxPacket+65)
 32729  000170  20F4               	addwfc	prodh,w,c
 32730  000172  6EDA               	movwf	fsr2h,c
 32731  000174  C070  FFDF         	movff	HighISR@PacketLen,indf2
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;drv_mrf_miwi_mesh_89xa.c: 1451: {
 32735                           ;drv_mrf_miwi_mesh_89xa.c: 1452: uint8_t ackInfoIndex = 0xFF;
 32736  000178  696F               	setf	HighISR@ackInfoIndex& (0+255),b
 32737                           
 32738                           ; BSR set to: 0
 32739                           ;drv_mrf_miwi_mesh_89xa.c: 1453: bool PacketForMe=0;
 32740  00017A  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 32741                           
 32742                           ;drv_mrf_miwi_mesh_89xa.c: 1454: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 32743  00017C  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32744  00017E  0D47               	mullw	71
 32745  000180  0E2D               	movlw	low (_RxPacket+1)
 32746  000182  24F3               	addwf	prodl,w,c
 32747  000184  6ED9               	movwf	fsr2l,c
 32748  000186  0E02               	movlw	high (_RxPacket+1)
 32749  000188  20F4               	addwfc	prodh,w,c
 32750  00018A  6EDA               	movwf	fsr2h,c
 32751  00018C  ACDF               	btfss	indf2,6,c
 32752  00018E  D08F               	goto	i2l14958
 32753                           
 32754                           ; BSR set to: 2
 32755                           ;drv_mrf_miwi_mesh_89xa.c: 1455: {
 32756                           ;drv_mrf_miwi_mesh_89xa.c: 1456: uint16_t dstPan;
 32757                           ;drv_mrf_miwi_mesh_89xa.c: 1457: uint8_t *dPan=(uint8_t*)&dstPan;
 32758  000190  0E68               	movlw	low HighISR@dstPan
 32759  000192  0100               	movlb	0	; () banked
 32760  000194  6F60               	movwf	HighISR@dPan& (0+255),b
 32761                           
 32762                           ; BSR set to: 0
 32763                           ;drv_mrf_miwi_mesh_89xa.c: 1458: for(i=0;i<2;i++)
 32764  000196  6B72               	clrf	HighISR@i& (0+255),b
 32765  000198                     i2l14914:
 32766                           
 32767                           ; BSR set to: 0
 32768                           ;drv_mrf_miwi_mesh_89xa.c: 1459: {
 32769                           ;drv_mrf_miwi_mesh_89xa.c: 1460: dPan[i]=RxPacket[BankIndex].Payload[2+i];
 32770  000198  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32771  00019A  0D47               	mullw	71
 32772  00019C  0E2C               	movlw	low _RxPacket
 32773  00019E  6E2C               	movwf	??_HighISR& (0+255),c
 32774  0001A0  0E02               	movlw	high _RxPacket
 32775  0001A2  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 32776  0001A4  0E03               	movlw	3
 32777  0001A6  262C               	addwf	??_HighISR,f,c
 32778  0001A8  0E00               	movlw	0
 32779  0001AA  222D               	addwfc	??_HighISR+1,f,c
 32780  0001AC  50F3               	movf	prodl,w,c
 32781  0001AE  262C               	addwf	??_HighISR,f,c
 32782  0001B0  50F4               	movf	prodh,w,c
 32783  0001B2  222D               	addwfc	??_HighISR+1,f,c
 32784  0001B4  5172               	movf	HighISR@i& (0+255),w,b
 32785  0001B6  242C               	addwf	??_HighISR,w,c
 32786  0001B8  6ED9               	movwf	fsr2l,c
 32787  0001BA  0E00               	movlw	0
 32788  0001BC  202D               	addwfc	??_HighISR+1,w,c
 32789  0001BE  6EDA               	movwf	fsr2h,c
 32790  0001C0  5160               	movf	HighISR@dPan& (0+255),w,b
 32791  0001C2  2572               	addwf	HighISR@i& (0+255),w,b
 32792  0001C4  6EE1               	movwf	fsr1l,c
 32793  0001C6  6AE2               	clrf	fsr1h,c
 32794  0001C8  CFDF FFE7          	movff	indf2,indf1
 32795                           
 32796                           ; BSR set to: 0
 32797  0001CC  2B72               	incf	HighISR@i& (0+255),f,b
 32798                           
 32799                           ; BSR set to: 0
 32800  0001CE  0E01               	movlw	1
 32801  0001D0  6572               	cpfsgt	HighISR@i& (0+255),b
 32802  0001D2  D7E2               	goto	i2l14914
 32803                           
 32804                           ; BSR set to: 0
 32805                           ;drv_mrf_miwi_mesh_89xa.c: 1461: }
 32806                           ;drv_mrf_miwi_mesh_89xa.c: 1463: if( (dstPan==0xffff) || (dstPan==myPANID) || (myPANID==
      +                          0xffff) )
 32807  0001D4  2968               	incf	HighISR@dstPan& (0+255),w,b
 32808  0001D6  E102               	bnz	i2u1764_40
 32809  0001D8  2969               	incf	(HighISR@dstPan+1)& (0+255),w,b
 32810  0001DA  E00A               	bz	i2l14926
 32811  0001DC                     i2u1764_40:
 32812                           
 32813                           ; BSR set to: 0
 32814  0001DC  504D               	movf	_myPANID,w,c
 32815  0001DE  1968               	xorwf	HighISR@dstPan& (0+255),w,b
 32816  0001E0  E103               	bnz	i2u1765_40
 32817  0001E2  504E               	movf	_myPANID+1,w,c
 32818  0001E4  1969               	xorwf	(HighISR@dstPan+1)& (0+255),w,b
 32819  0001E6  E004               	bz	i2l14926
 32820  0001E8                     i2u1765_40:
 32821                           
 32822                           ; BSR set to: 0
 32823  0001E8  284D               	incf	_myPANID,w,c
 32824  0001EA  E155               	bnz	i2l14952
 32825  0001EC  284E               	incf	_myPANID+1,w,c
 32826  0001EE  E153               	bnz	i2l14952
 32827  0001F0                     i2l14926:
 32828                           
 32829                           ; BSR set to: 0
 32830                           ;drv_mrf_miwi_mesh_89xa.c: 1464: {
 32831                           ;drv_mrf_miwi_mesh_89xa.c: 1465: PacketForMe=1;
 32832  0001F0  0E01               	movlw	1
 32833  0001F2  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 32834                           
 32835                           ; BSR set to: 0
 32836                           ;drv_mrf_miwi_mesh_89xa.c: 1466: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 32837  0001F4  6B72               	clrf	HighISR@i& (0+255),b
 32838  0001F6  D020               	goto	i2l14936
 32839  0001F8                     i2l14930:
 32840                           
 32841                           ; BSR set to: 0
 32842                           ;drv_mrf_miwi_mesh_89xa.c: 1467: {
 32843                           ;drv_mrf_miwi_mesh_89xa.c: 1468: if( RxPacket[BankIndex].Payload[4+i] != MACInitParams.P
      +                          Address[i] )
 32844  0001F8  5172               	movf	HighISR@i& (0+255),w,b
 32845  0001FA  2437               	addwf	_MACInitParams+1,w,c
 32846  0001FC  6ED9               	movwf	fsr2l,c
 32847  0001FE  0E00               	movlw	0
 32848  000200  2038               	addwfc	_MACInitParams+2,w,c
 32849  000202  6EDA               	movwf	fsr2h,c
 32850  000204  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32851  000206  0D47               	mullw	71
 32852  000208  0E2C               	movlw	low _RxPacket
 32853  00020A  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 32854  00020C  0E02               	movlw	high _RxPacket
 32855  00020E  6E2E               	movwf	(??_HighISR+2)& (0+255),c
 32856  000210  0E05               	movlw	5
 32857  000212  262D               	addwf	??_HighISR+1,f,c
 32858  000214  0E00               	movlw	0
 32859  000216  222E               	addwfc	??_HighISR+2,f,c
 32860  000218  50F3               	movf	prodl,w,c
 32861  00021A  262D               	addwf	??_HighISR+1,f,c
 32862  00021C  50F4               	movf	prodh,w,c
 32863  00021E  222E               	addwfc	??_HighISR+2,f,c
 32864  000220  5172               	movf	HighISR@i& (0+255),w,b
 32865  000222  242D               	addwf	??_HighISR+1,w,c
 32866  000224  6EE1               	movwf	fsr1l,c
 32867  000226  0E00               	movlw	0
 32868  000228  202E               	addwfc	??_HighISR+2,w,c
 32869  00022A  6EE2               	movwf	fsr1h,c
 32870  00022C  50DE               	movf	postinc2,w,c
 32871  00022E  18E6               	xorwf	postinc1,w,c
 32872  000230  E002               	bz	i2l14934
 32873                           
 32874                           ; BSR set to: 0
 32875                           ;drv_mrf_miwi_mesh_89xa.c: 1469: {
 32876                           ;drv_mrf_miwi_mesh_89xa.c: 1470: PacketForMe=0;
 32877  000232  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 32878                           
 32879                           ;drv_mrf_miwi_mesh_89xa.c: 1471: break;
 32880  000234  D009               	goto	i2l14938
 32881  000236                     i2l14934:
 32882                           
 32883                           ; BSR set to: 0
 32884  000236  2B72               	incf	HighISR@i& (0+255),f,b
 32885  000238                     i2l14936:
 32886                           
 32887                           ; BSR set to: 0
 32888  000238  3036               	rrcf	_MACInitParams,w,c
 32889  00023A  32E8               	rrcf	wreg,f,c
 32890  00023C  32E8               	rrcf	wreg,f,c
 32891  00023E  0B0F               	andlw	15
 32892  000240  6E2C               	movwf	??_HighISR& (0+255),c
 32893  000242  502C               	movf	??_HighISR,w,c
 32894  000244  5D72               	subwf	HighISR@i& (0+255),w,b
 32895  000246  E3D8               	bnc	i2l14930
 32896  000248                     i2l14938:
 32897                           
 32898                           ; BSR set to: 0
 32899                           ;drv_mrf_miwi_mesh_89xa.c: 1472: }
 32900                           ;drv_mrf_miwi_mesh_89xa.c: 1473: }
 32901                           ;drv_mrf_miwi_mesh_89xa.c: 1474: if(PacketForMe==0)
 32902  000248  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 32903  00024A  E125               	bnz	i2l14952
 32904                           
 32905                           ; BSR set to: 0
 32906                           ;drv_mrf_miwi_mesh_89xa.c: 1475: {
 32907                           ;drv_mrf_miwi_mesh_89xa.c: 1476: PacketForMe=1;
 32908  00024C  0E01               	movlw	1
 32909  00024E  6F6A               	movwf	HighISR@PacketForMe& (0+255),b
 32910                           
 32911                           ; BSR set to: 0
 32912                           ;drv_mrf_miwi_mesh_89xa.c: 1477: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLeng
      +                          th; i++)
 32913  000250  6B72               	clrf	HighISR@i& (0+255),b
 32914  000252  D019               	goto	i2l14950
 32915  000254                     i2l14944:
 32916                           
 32917                           ; BSR set to: 0
 32918                           ;drv_mrf_miwi_mesh_89xa.c: 1478: {
 32919                           ;drv_mrf_miwi_mesh_89xa.c: 1480: if( RxPacket[BankIndex].Payload[4+i] != 0xff )
 32920  000254  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32921  000256  0D47               	mullw	71
 32922  000258  0E2C               	movlw	low _RxPacket
 32923  00025A  6E2C               	movwf	??_HighISR& (0+255),c
 32924  00025C  0E02               	movlw	high _RxPacket
 32925  00025E  6E2D               	movwf	(??_HighISR+1)& (0+255),c
 32926  000260  0E05               	movlw	5
 32927  000262  262C               	addwf	??_HighISR,f,c
 32928  000264  0E00               	movlw	0
 32929  000266  222D               	addwfc	??_HighISR+1,f,c
 32930  000268  50F3               	movf	prodl,w,c
 32931  00026A  262C               	addwf	??_HighISR,f,c
 32932  00026C  50F4               	movf	prodh,w,c
 32933  00026E  222D               	addwfc	??_HighISR+1,f,c
 32934  000270  5172               	movf	HighISR@i& (0+255),w,b
 32935  000272  242C               	addwf	??_HighISR,w,c
 32936  000274  6ED9               	movwf	fsr2l,c
 32937  000276  0E00               	movlw	0
 32938  000278  202D               	addwfc	??_HighISR+1,w,c
 32939  00027A  6EDA               	movwf	fsr2h,c
 32940  00027C  28DE               	incf	postinc2,w,c
 32941  00027E  E002               	bz	i2l14948
 32942                           
 32943                           ; BSR set to: 0
 32944                           ;drv_mrf_miwi_mesh_89xa.c: 1481: {
 32945                           ;drv_mrf_miwi_mesh_89xa.c: 1482: PacketForMe=0;
 32946  000280  6B6A               	clrf	HighISR@PacketForMe& (0+255),b
 32947                           
 32948                           ;drv_mrf_miwi_mesh_89xa.c: 1483: break;
 32949  000282  D009               	goto	i2l14952
 32950  000284                     i2l14948:
 32951                           
 32952                           ; BSR set to: 0
 32953  000284  2B72               	incf	HighISR@i& (0+255),f,b
 32954  000286                     i2l14950:
 32955                           
 32956                           ; BSR set to: 0
 32957  000286  3036               	rrcf	_MACInitParams,w,c
 32958  000288  32E8               	rrcf	wreg,f,c
 32959  00028A  32E8               	rrcf	wreg,f,c
 32960  00028C  0B0F               	andlw	15
 32961  00028E  6E2C               	movwf	??_HighISR& (0+255),c
 32962  000290  502C               	movf	??_HighISR,w,c
 32963  000292  5D72               	subwf	HighISR@i& (0+255),w,b
 32964  000294  E3DF               	bnc	i2l14944
 32965  000296                     i2l14952:
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;drv_mrf_miwi_mesh_89xa.c: 1484: }
 32969                           ;drv_mrf_miwi_mesh_89xa.c: 1485: }
 32970                           ;drv_mrf_miwi_mesh_89xa.c: 1486: }
 32971                           ;drv_mrf_miwi_mesh_89xa.c: 1487: }
 32972                           ;drv_mrf_miwi_mesh_89xa.c: 1489: if(PacketForMe==0)
 32973  000296  516A               	movf	HighISR@PacketForMe& (0+255),w,b
 32974  000298  E10A               	bnz	i2l14958
 32975                           
 32976                           ; BSR set to: 0
 32977                           ;drv_mrf_miwi_mesh_89xa.c: 1492: RxPacket[BankIndex].PayloadLen = 0;
 32978                           
 32979                           ; BSR set to: 0
 32980  00029A  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32981  00029C  0D47               	mullw	71
 32982  00029E  0E6D               	movlw	low (_RxPacket+65)
 32983  0002A0  24F3               	addwf	prodl,w,c
 32984  0002A2  6ED9               	movwf	fsr2l,c
 32985  0002A4  0E02               	movlw	high (_RxPacket+65)
 32986  0002A6  20F4               	addwfc	prodh,w,c
 32987  0002A8  6EDA               	movwf	fsr2h,c
 32988  0002AA  6ADF               	clrf	indf2,c
 32989                           
 32990                           ;drv_mrf_miwi_mesh_89xa.c: 1493: goto IGNORE_HERE;
 32991  0002AC  D6F4               	goto	i2l14856
 32992  0002AE                     i2l14958:
 32993                           
 32994                           ;drv_mrf_miwi_mesh_89xa.c: 1494: }
 32995                           ;drv_mrf_miwi_mesh_89xa.c: 1495: }
 32996                           ;drv_mrf_miwi_mesh_89xa.c: 1498: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 32997  0002AE  0100               	movlb	0	; () banked
 32998  0002B0  5171               	movf	HighISR@BankIndex& (0+255),w,b
 32999  0002B2  0D47               	mullw	71
 33000  0002B4  0E2D               	movlw	low (_RxPacket+1)
 33001  0002B6  24F3               	addwf	prodl,w,c
 33002  0002B8  6ED9               	movwf	fsr2l,c
 33003  0002BA  0E02               	movlw	high (_RxPacket+1)
 33004  0002BC  20F4               	addwfc	prodh,w,c
 33005  0002BE  6EDA               	movwf	fsr2h,c
 33006  0002C0  AADF               	btfss	indf2,5,c
 33007  0002C2  D037               	goto	i2l891
 33008                           
 33009                           ; BSR set to: 2
 33010                           ;drv_mrf_miwi_mesh_89xa.c: 1499: {
 33011                           ;drv_mrf_miwi_mesh_89xa.c: 1501: for(i = 0; i < 2; i++)
 33012  0002C4  6B72               	clrf	HighISR@i& (0+255),b
 33013  0002C6                     i2l14966:
 33014                           
 33015                           ; BSR set to: 0
 33016                           ;drv_mrf_miwi_mesh_89xa.c: 1502: {
 33017                           ;drv_mrf_miwi_mesh_89xa.c: 1503: ackPacket[i] = MACTxBuffer[i];
 33018  0002C6  0E1E               	movlw	low _MACTxBuffer
 33019  0002C8  2572               	addwf	HighISR@i& (0+255),w,b
 33020  0002CA  6ED9               	movwf	fsr2l,c
 33021  0002CC  6ADA               	clrf	fsr2h,c
 33022  0002CE  0E03               	movlw	high _MACTxBuffer
 33023  0002D0  22DA               	addwfc	fsr2h,f,c
 33024  0002D2  5172               	movf	HighISR@i& (0+255),w,b
 33025  0002D4  0F64               	addlw	low HighISR@ackPacket
 33026  0002D6  6EE1               	movwf	fsr1l,c
 33027  0002D8  6AE2               	clrf	fsr1h,c
 33028  0002DA  CFDF FFE7          	movff	indf2,indf1
 33029                           
 33030                           ; BSR set to: 0
 33031  0002DE  2B72               	incf	HighISR@i& (0+255),f,b
 33032                           
 33033                           ; BSR set to: 0
 33034  0002E0  0E01               	movlw	1
 33035  0002E2  6572               	cpfsgt	HighISR@i& (0+255),b
 33036  0002E4  D7F0               	goto	i2l14966
 33037                           
 33038                           ; BSR set to: 0
 33039                           ;drv_mrf_miwi_mesh_89xa.c: 1504: }
 33040                           ;drv_mrf_miwi_mesh_89xa.c: 1505: MACTxBuffer[0] = 0x02 | 0x04;
 33041  0002E6  0E06               	movlw	6
 33042  0002E8  0103               	movlb	3	; () banked
 33043  0002EA  6F1E               	movwf	_MACTxBuffer& (0+255),b	;volatile
 33044                           
 33045                           ; BSR set to: 3
 33046                           ;drv_mrf_miwi_mesh_89xa.c: 1506: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 33047  0002EC  0100               	movlb	0	; () banked
 33048  0002EE  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33049  0002F0  0D47               	mullw	71
 33050  0002F2  0E2E               	movlw	low (_RxPacket+2)
 33051  0002F4  24F3               	addwf	prodl,w,c
 33052  0002F6  6ED9               	movwf	fsr2l,c
 33053  0002F8  0E02               	movlw	high (_RxPacket+2)
 33054  0002FA  20F4               	addwfc	prodh,w,c
 33055  0002FC  6EDA               	movwf	fsr2h,c
 33056  0002FE  50DF               	movf	indf2,w,c
 33057  000300  0103               	movlb	3	; () banked
 33058  000302  6F1F               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 33059                           
 33060                           ; BSR set to: 3
 33061                           ;drv_mrf_miwi_mesh_89xa.c: 1507: INTCON3bits.INT1IF = 0;
 33062  000304  90F0               	bcf	intcon3,0,c	;volatile
 33063                           
 33064                           ; BSR set to: 3
 33065                           ;drv_mrf_miwi_mesh_89xa.c: 1508: TxPacket(2, 0);
 33066  000306  6A15               	clrf	i2TxPacket@CCA,c
 33067  000308  0E02               	movlw	2
 33068  00030A  ECA7  F023         	call	i2_TxPacket
 33069                           
 33070                           ;drv_mrf_miwi_mesh_89xa.c: 1511: for(i = 0; i < 2; i++)
 33071  00030E  0100               	movlb	0	; () banked
 33072  000310  6B72               	clrf	HighISR@i& (0+255),b
 33073  000312                     i2l14986:
 33074                           
 33075                           ; BSR set to: 0
 33076                           ;drv_mrf_miwi_mesh_89xa.c: 1512: {
 33077                           ;drv_mrf_miwi_mesh_89xa.c: 1513: MACTxBuffer[i] = ackPacket[i];
 33078  000312  5172               	movf	HighISR@i& (0+255),w,b
 33079  000314  0F64               	addlw	low HighISR@ackPacket
 33080  000316  6ED9               	movwf	fsr2l,c
 33081  000318  6ADA               	clrf	fsr2h,c
 33082  00031A  0E1E               	movlw	low _MACTxBuffer
 33083  00031C  2572               	addwf	HighISR@i& (0+255),w,b
 33084  00031E  6EE1               	movwf	fsr1l,c
 33085  000320  6AE2               	clrf	fsr1h,c
 33086  000322  0E03               	movlw	high _MACTxBuffer
 33087  000324  22E2               	addwfc	fsr1h,f,c
 33088  000326  CFDF FFE7          	movff	indf2,indf1
 33089                           
 33090                           ; BSR set to: 0
 33091  00032A  2B72               	incf	HighISR@i& (0+255),f,b
 33092                           
 33093                           ; BSR set to: 0
 33094  00032C  0E01               	movlw	1
 33095  00032E  6572               	cpfsgt	HighISR@i& (0+255),b
 33096  000330  D7F0               	goto	i2l14986
 33097  000332                     i2l891:
 33098                           
 33099                           ;drv_mrf_miwi_mesh_89xa.c: 1514: }
 33100                           ;drv_mrf_miwi_mesh_89xa.c: 1515: }
 33101                           ;drv_mrf_miwi_mesh_89xa.c: 1519: for(i = 0; i < 5; i++)
 33102  000332  0100               	movlb	0	; () banked
 33103  000334  6B72               	clrf	HighISR@i& (0+255),b
 33104  000336                     i2l14996:
 33105                           
 33106                           ; BSR set to: 0
 33107                           ;drv_mrf_miwi_mesh_89xa.c: 1520: {
 33108                           ;drv_mrf_miwi_mesh_89xa.c: 1521: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[Ban
      +                          kIndex].Payload[1]) )
 33109  000336  5172               	movf	HighISR@i& (0+255),w,b
 33110  000338  0D06               	mullw	6
 33111  00033A  0E00               	movlw	low _AckInfo
 33112  00033C  24F3               	addwf	prodl,w,c
 33113  00033E  6ED9               	movwf	fsr2l,c
 33114  000340  0E03               	movlw	high _AckInfo
 33115  000342  20F4               	addwfc	prodh,w,c
 33116  000344  6EDA               	movwf	fsr2h,c
 33117  000346  50DF               	movf	indf2,w,c
 33118  000348  E027               	bz	i2l15002
 33119                           
 33120                           ; BSR set to: 0
 33121  00034A  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33122  00034C  0D47               	mullw	71
 33123  00034E  0E2E               	movlw	low (_RxPacket+2)
 33124  000350  24F3               	addwf	prodl,w,c
 33125  000352  6ED9               	movwf	fsr2l,c
 33126  000354  0E02               	movlw	high (_RxPacket+2)
 33127  000356  20F4               	addwfc	prodh,w,c
 33128  000358  6EDA               	movwf	fsr2h,c
 33129  00035A  5172               	movf	HighISR@i& (0+255),w,b
 33130  00035C  0D06               	mullw	6
 33131  00035E  0E01               	movlw	low (_AckInfo+1)
 33132  000360  24F3               	addwf	prodl,w,c
 33133  000362  6EE1               	movwf	fsr1l,c
 33134  000364  0E03               	movlw	high (_AckInfo+1)
 33135  000366  20F4               	addwfc	prodh,w,c
 33136  000368  6EE2               	movwf	fsr1h,c
 33137  00036A  50DE               	movf	postinc2,w,c
 33138  00036C  18E6               	xorwf	postinc1,w,c
 33139  00036E  E114               	bnz	i2l15002
 33140                           
 33141                           ; BSR set to: 0
 33142                           ;drv_mrf_miwi_mesh_89xa.c: 1522: {
 33143                           ;drv_mrf_miwi_mesh_89xa.c: 1523: AckInfo[i].startTick = MiWi_TickGetMs();
 33144  000370  EC5D  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33145  000374  0100               	movlb	0	; () banked
 33146  000376  5172               	movf	HighISR@i& (0+255),w,b
 33147  000378  0D06               	mullw	6
 33148  00037A  0E02               	movlw	low (_AckInfo+2)
 33149  00037C  24F3               	addwf	prodl,w,c
 33150  00037E  6ED9               	movwf	fsr2l,c
 33151  000380  0E03               	movlw	high (_AckInfo+2)
 33152  000382  20F4               	addwfc	prodh,w,c
 33153  000384  6EDA               	movwf	fsr2h,c
 33154  000386  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 33155  00038A  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 33156  00038E  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 33157  000392  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 33158                           
 33159                           ;drv_mrf_miwi_mesh_89xa.c: 1524: break;
 33160  000396  D012               	goto	i2l15012
 33161  000398                     i2l15002:
 33162                           
 33163                           ; BSR set to: 0
 33164                           ;drv_mrf_miwi_mesh_89xa.c: 1525: }
 33165                           ;drv_mrf_miwi_mesh_89xa.c: 1526: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 33166  000398  296F               	incf	HighISR@ackInfoIndex& (0+255),w,b
 33167  00039A  E10C               	bnz	i2l15008
 33168                           
 33169                           ; BSR set to: 0
 33170  00039C  5172               	movf	HighISR@i& (0+255),w,b
 33171  00039E  0D06               	mullw	6
 33172  0003A0  0E00               	movlw	low _AckInfo
 33173  0003A2  24F3               	addwf	prodl,w,c
 33174  0003A4  6ED9               	movwf	fsr2l,c
 33175  0003A6  0E03               	movlw	high _AckInfo
 33176  0003A8  20F4               	addwfc	prodh,w,c
 33177  0003AA  6EDA               	movwf	fsr2h,c
 33178  0003AC  50DF               	movf	indf2,w,c
 33179  0003AE  E102               	bnz	i2l15008
 33180                           
 33181                           ; BSR set to: 0
 33182                           ;drv_mrf_miwi_mesh_89xa.c: 1527: {
 33183                           ;drv_mrf_miwi_mesh_89xa.c: 1528: ackInfoIndex = i;
 33184  0003B0  C072  F06F         	movff	HighISR@i,HighISR@ackInfoIndex
 33185  0003B4                     i2l15008:
 33186                           
 33187                           ; BSR set to: 0
 33188  0003B4  2B72               	incf	HighISR@i& (0+255),f,b
 33189                           
 33190                           ; BSR set to: 0
 33191  0003B6  0E04               	movlw	4
 33192  0003B8  6572               	cpfsgt	HighISR@i& (0+255),b
 33193  0003BA  D7BD               	goto	i2l14996
 33194  0003BC                     i2l15012:
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;drv_mrf_miwi_mesh_89xa.c: 1529: }
 33198                           ;drv_mrf_miwi_mesh_89xa.c: 1530: }
 33199                           ;drv_mrf_miwi_mesh_89xa.c: 1532: if( i >= 5 )
 33200  0003BC  0E04               	movlw	4
 33201  0003BE  6572               	cpfsgt	HighISR@i& (0+255),b
 33202  0003C0  D043               	goto	i2l15028
 33203                           
 33204                           ; BSR set to: 0
 33205                           ;drv_mrf_miwi_mesh_89xa.c: 1533: {
 33206                           ;drv_mrf_miwi_mesh_89xa.c: 1534: if( ackInfoIndex < 5 )
 33207  0003C2  0E05               	movlw	5
 33208  0003C4  616F               	cpfslt	HighISR@ackInfoIndex& (0+255),b
 33209  0003C6  D02F               	goto	i2l15022
 33210                           
 33211                           ; BSR set to: 0
 33212                           ;drv_mrf_miwi_mesh_89xa.c: 1535: {
 33213                           ;drv_mrf_miwi_mesh_89xa.c: 1536: AckInfo[ackInfoIndex].Valid = 1;
 33214  0003C8  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33215  0003CA  0D06               	mullw	6
 33216  0003CC  0E00               	movlw	low _AckInfo
 33217  0003CE  24F3               	addwf	prodl,w,c
 33218  0003D0  6ED9               	movwf	fsr2l,c
 33219  0003D2  0E03               	movlw	high _AckInfo
 33220  0003D4  20F4               	addwfc	prodh,w,c
 33221  0003D6  6EDA               	movwf	fsr2h,c
 33222  0003D8  0E01               	movlw	1
 33223  0003DA  6EDF               	movwf	indf2,c
 33224                           
 33225                           ; BSR set to: 0
 33226                           ;drv_mrf_miwi_mesh_89xa.c: 1537: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload
      +                          [1];
 33227  0003DC  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33228  0003DE  0D47               	mullw	71
 33229  0003E0  0E2E               	movlw	low (_RxPacket+2)
 33230  0003E2  24F3               	addwf	prodl,w,c
 33231  0003E4  6ED9               	movwf	fsr2l,c
 33232  0003E6  0E02               	movlw	high (_RxPacket+2)
 33233  0003E8  20F4               	addwfc	prodh,w,c
 33234  0003EA  6EDA               	movwf	fsr2h,c
 33235  0003EC  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33236  0003EE  0D06               	mullw	6
 33237  0003F0  0E01               	movlw	low (_AckInfo+1)
 33238  0003F2  24F3               	addwf	prodl,w,c
 33239  0003F4  6EE1               	movwf	fsr1l,c
 33240  0003F6  0E03               	movlw	high (_AckInfo+1)
 33241  0003F8  20F4               	addwfc	prodh,w,c
 33242  0003FA  6EE2               	movwf	fsr1h,c
 33243  0003FC  CFDF FFE7          	movff	indf2,indf1
 33244                           
 33245                           ; BSR set to: 0
 33246                           ;drv_mrf_miwi_mesh_89xa.c: 1538: AckInfo[ackInfoIndex].startTick = MiWi_TickGetMs();
 33247  000400  EC5D  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33248  000404  0100               	movlb	0	; () banked
 33249  000406  516F               	movf	HighISR@ackInfoIndex& (0+255),w,b
 33250  000408  0D06               	mullw	6
 33251  00040A  0E02               	movlw	low (_AckInfo+2)
 33252  00040C  24F3               	addwf	prodl,w,c
 33253  00040E  6ED9               	movwf	fsr2l,c
 33254  000410  0E03               	movlw	high (_AckInfo+2)
 33255  000412  20F4               	addwfc	prodh,w,c
 33256  000414  6EDA               	movwf	fsr2h,c
 33257  000416  C00D  FFDE         	movff	?i2_MiWi_TickGetMs,postinc2
 33258  00041A  C00E  FFDE         	movff	?i2_MiWi_TickGetMs+1,postinc2
 33259  00041E  C00F  FFDE         	movff	?i2_MiWi_TickGetMs+2,postinc2
 33260  000422  C010  FFDE         	movff	?i2_MiWi_TickGetMs+3,postinc2
 33261  000426                     i2l15022:
 33262                           
 33263                           ; BSR set to: 0
 33264                           ;drv_mrf_miwi_mesh_89xa.c: 1539: }
 33265                           ;drv_mrf_miwi_mesh_89xa.c: 1542: RxPacket[BankIndex].flags.bits.Valid = 1;
 33266  000426  5171               	movf	HighISR@BankIndex& (0+255),w,b
 33267  000428  0D47               	mullw	71
 33268  00042A  0E2C               	movlw	low _RxPacket
 33269  00042C  24F3               	addwf	prodl,w,c
 33270  00042E  6ED9               	movwf	fsr2l,c
 33271  000430  0E02               	movlw	high _RxPacket
 33272  000432  20F4               	addwfc	prodh,w,c
 33273  000434  6EDA               	movwf	fsr2h,c
 33274  000436  0102               	movlb	2	; () banked
 33275  000438  80DF               	bsf	indf2,0,c
 33276  00043A  D006               	goto	i2l15028
 33277  00043C                     i2l15024:
 33278                           
 33279                           ; BSR set to: 0
 33280  00043C  5161               	movf	HighISR@counter& (0+255),w,b
 33281  00043E  1162               	iorwf	(HighISR@counter+1)& (0+255),w,b
 33282  000440  E003               	bz	i2l15028
 33283  000442  D63E               	goto	i2l14866
 33284  000444                     i2l15026:
 33285                           
 33286                           ; BSR set to: 1
 33287                           ;drv_mrf_miwi_mesh_89xa.c: 1557: else
 33288                           ;drv_mrf_miwi_mesh_89xa.c: 1558: {
 33289                           ;drv_mrf_miwi_mesh_89xa.c: 1560: IRQ1_Received = 1;
 33290  000444  0E01               	movlw	1
 33291  000446  6E3D               	movwf	_IRQ1_Received,c	;volatile
 33292  000448                     i2l15028:
 33293                           
 33294                           ;drv_mrf_miwi_mesh_89xa.c: 1564: INTCON3bits.INT1IF = 0;
 33295  000448  90F0               	bcf	intcon3,0,c	;volatile
 33296                           
 33297                           ;drv_mrf_miwi_mesh_89xa.c: 1566: __nop();
 33298  00044A  F000               	nop	
 33299  00044C                     i2l15032:
 33300                           
 33301                           ;drv_mrf_miwi_mesh_89xa.c: 1567: }
 33302                           ;drv_mrf_miwi_mesh_89xa.c: 1587: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1
      +                          ))
 33303  00044C  B4F2               	btfsc	intcon,2,c	;volatile
 33304  00044E  AAF2               	btfss	intcon,5,c	;volatile
 33305  000450  D018               	goto	i2l15050
 33306                           
 33307                           ;drv_mrf_miwi_mesh_89xa.c: 1588: {
 33308                           ;drv_mrf_miwi_mesh_89xa.c: 1589: uint16_t tmr = TMR0;
 33309  000452  CFD6 F06C          	movff	4054,HighISR@tmr	;volatile
 33310  000456  CFD7 F06D          	movff	4055,HighISR@tmr+1	;volatile
 33311                           
 33312                           ;drv_mrf_miwi_mesh_89xa.c: 1590: t1extension++;
 33313  00045A  0101               	movlb	1	; () banked
 33314  00045C  2B9E               	incf	_t1extension& (0+255),f,b
 33315  00045E  0E00               	movlw	0
 33316  000460  239F               	addwfc	(_t1extension+1)& (0+255),f,b
 33317  000462  23A0               	addwfc	(_t1extension+2)& (0+255),f,b
 33318  000464  23A1               	addwfc	(_t1extension+3)& (0+255),f,b
 33319                           
 33320                           ;drv_mrf_miwi_mesh_89xa.c: 1591: tmr += (0xffff - 6000);
 33321  000466  0100               	movlb	0	; () banked
 33322  000468  0E8F               	movlw	143
 33323  00046A  276C               	addwf	HighISR@tmr& (0+255),f,b
 33324  00046C  0EE8               	movlw	232
 33325  00046E  236D               	addwfc	(HighISR@tmr+1)& (0+255),f,b
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;drv_mrf_miwi_mesh_89xa.c: 1592: TMR0L = tmr;
 33329  000470  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 33330                           
 33331                           ; BSR set to: 0
 33332                           ;drv_mrf_miwi_mesh_89xa.c: 1593: TMR0H = tmr >> 8;
 33333  000474  C06D  FFD7         	movff	HighISR@tmr+1,4055	;volatile
 33334                           
 33335                           ; BSR set to: 0
 33336                           ;drv_mrf_miwi_mesh_89xa.c: 1594: TMR0L = tmr;
 33337  000478  C06C  FFD6         	movff	HighISR@tmr,4054	;volatile
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;drv_mrf_miwi_mesh_89xa.c: 1595: INTCONbits.TMR0IF = 0;
 33341  00047C  94F2               	bcf	intcon,2,c	;volatile
 33342                           
 33343                           ; BSR set to: 0
 33344                           ;drv_mrf_miwi_mesh_89xa.c: 1596: t1fired=1;
 33345  00047E  0E01               	movlw	1
 33346  000480  6E44               	movwf	_t1fired,c	;volatile
 33347  000482                     i2l15050:
 33348                           
 33349                           ;drv_mrf_miwi_mesh_89xa.c: 1597: }
 33350                           ;drv_mrf_miwi_mesh_89xa.c: 1599: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 33351  000482  B2F2               	btfsc	intcon,1,c	;volatile
 33352  000484  A8F2               	btfss	intcon,4,c	;volatile
 33353  000486  D001               	goto	i2l906
 33354                           
 33355                           ;drv_mrf_miwi_mesh_89xa.c: 1600: {
 33356                           ;drv_mrf_miwi_mesh_89xa.c: 1601: INTCONbits.INT0IF = 0;
 33357  000488  92F2               	bcf	intcon,1,c	;volatile
 33358  00048A                     i2l906:
 33359  00048A  C035  FFF4         	movff	??_HighISR+9,prodh
 33360  00048E  C034  FFF3         	movff	??_HighISR+8,prodl
 33361  000492  C033  FFDA         	movff	??_HighISR+7,fsr2h
 33362  000496  C032  FFD9         	movff	??_HighISR+6,fsr2l
 33363  00049A  C031  FFE2         	movff	??_HighISR+5,fsr1h
 33364  00049E  C030  FFE1         	movff	??_HighISR+4,fsr1l
 33365  0004A2  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33366  0004A4  0011               	retfie		f
 33367  0004A6                     __end_of_HighISR:
 33368                           	opt stack 0
 33369                           tblptru	equ	0xFF8
 33370                           tblptrh	equ	0xFF7
 33371                           tblptrl	equ	0xFF6
 33372                           tablat	equ	0xFF5
 33373                           prodh	equ	0xFF4
 33374                           prodl	equ	0xFF3
 33375                           intcon	equ	0xFF2
 33376                           intcon2	equ	0xFF1
 33377                           intcon3	equ	0xFF0
 33378                           indf0	equ	0xFEF
 33379                           postinc0	equ	0xFEE
 33380                           plusw0	equ	0xFEB
 33381                           fsr0h	equ	0xFEA
 33382                           fsr0l	equ	0xFE9
 33383                           wreg	equ	0xFE8
 33384                           indf1	equ	0xFE7
 33385                           postinc1	equ	0xFE6
 33386                           postdec1	equ	0xFE5
 33387                           plusw1	equ	0xFE3
 33388                           fsr1h	equ	0xFE2
 33389                           fsr1l	equ	0xFE1
 33390                           indf2	equ	0xFDF
 33391                           postinc2	equ	0xFDE
 33392                           postdec2	equ	0xFDD
 33393                           plusw2	equ	0xFDB
 33394                           fsr2h	equ	0xFDA
 33395                           fsr2l	equ	0xFD9
 33396                           status	equ	0xFD8
 33397                           
 33398 ;; *************** function i2_TxPacket *****************
 33399 ;; Defined at:
 33400 ;;		line 350 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 33401 ;; Parameters:    Size  Location     Type
 33402 ;;  TxPacketLen     1    wreg     unsigned char 
 33403 ;;  CCA             1   20[COMRAM] unsigned char 
 33404 ;; Auto vars:     Size  Location     Type
 33405 ;;  TxPacketLen     1   25[COMRAM] unsigned char 
 33406 ;;  TxPacket        4   31[COMRAM] struct MIWI_TICK_t
 33407 ;;  TxPacket        4   27[COMRAM] struct MIWI_TICK_t
 33408 ;;  TxPacket        2   39[COMRAM] unsigned int 
 33409 ;;  TxPacket        2   35[COMRAM] unsigned int 
 33410 ;;  TxPacket        1   42[COMRAM] unsigned char 
 33411 ;;  TxPacket        1   41[COMRAM] unsigned char 
 33412 ;;  TxPacket        1   38[COMRAM] unsigned char 
 33413 ;;  TxPacket        1   37[COMRAM] unsigned char 
 33414 ;;  TxPacket        1   26[COMRAM] unsigned char 
 33415 ;;  TxPacket        1    0        unsigned char 
 33416 ;; Return value:  Size  Location     Type
 33417 ;;                  1    wreg      unsigned char 
 33418 ;; Registers used:
 33419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33420 ;; Tracked objects:
 33421 ;;		On entry : F/3
 33422 ;;		On exit  : 0/0
 33423 ;;		Unchanged: 0/0
 33424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33426 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33428 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33429 ;;Total ram usage:       23 bytes
 33430 ;; Hardware stack levels used:    1
 33431 ;; Hardware stack levels required when called:    3
 33432 ;; This function calls:
 33433 ;;		i2_DelayMs
 33434 ;;		i2_MiWi_TickGetMs
 33435 ;;		i2_RegisterRead
 33436 ;;		i2_RegisterSet
 33437 ;;		i2_SetRFMode
 33438 ;;		i2_WriteFIFO
 33439 ;;		i2_krnd
 33440 ;; This function is called by:
 33441 ;;		_HighISR
 33442 ;; This function uses a non-reentrant model
 33443 ;;
 33444                           
 33445                           	psect	text163
 33446  00474E                     __ptext163:
 33447                           	opt stack 0
 33448  00474E                     i2_TxPacket:
 33449                           	opt stack 14
 33450                           
 33451                           ;incstack = 0
 33452                           ;i2TxPacket@TxPacketLen stored from wreg
 33453  00474E  6E1A               	movwf	i2TxPacket@TxPacketLen,c
 33454                           
 33455                           ;drv_mrf_miwi_mesh_89xa.c: 352: bool status;
 33456                           ;drv_mrf_miwi_mesh_89xa.c: 353: uint8_t i;
 33457                           ;drv_mrf_miwi_mesh_89xa.c: 354: MIWI_TICK t1, t2;
 33458                           ;drv_mrf_miwi_mesh_89xa.c: 356: uint8_t CCARetries;
 33459                           ;drv_mrf_miwi_mesh_89xa.c: 357: uint8_t rssival;
 33460                           ;drv_mrf_miwi_mesh_89xa.c: 361: uint8_t reTry = 3;
 33461  004750  0E03               	movlw	3
 33462  004752  6E26               	movwf	i2TxPacket@reTry,c
 33463                           
 33464                           ;drv_mrf_miwi_mesh_89xa.c: 365: while( reTry-- )
 33465  004754  D094               	goto	i2l14734
 33466  004756                     i2l713:
 33467                           
 33468                           ;drv_mrf_miwi_mesh_89xa.c: 367: {
 33469                           ;drv_mrf_miwi_mesh_89xa.c: 368: uint8_t allowedTxFailure;
 33470                           ;drv_mrf_miwi_mesh_89xa.c: 369: allowedTxFailure = 0;
 33471  004756  6A27               	clrf	i2TxPacket@allowedTxFailure,c
 33472  004758                     i2l714:
 33473                           
 33474                           ;drv_mrf_miwi_mesh_89xa.c: 374: hasAck = 0;
 33475  004758  6A41               	clrf	_hasAck,c	;volatile
 33476                           
 33477                           ;drv_mrf_miwi_mesh_89xa.c: 381: INTCON3bits.INT1IE = 0;
 33478  00475A  96F0               	bcf	intcon3,3,c	;volatile
 33479                           
 33480                           ;drv_mrf_miwi_mesh_89xa.c: 382: SetRFMode(0x20);
 33481  00475C  0E20               	movlw	32
 33482  00475E  EC5C  F032         	call	i2_SetRFMode
 33483                           
 33484                           ;drv_mrf_miwi_mesh_89xa.c: 383: RegisterSet(0x1A00 | (0xC8) | 0x01);
 33485  004762  0E1A               	movlw	26
 33486  004764  6E04               	movwf	i2RegisterSet@setting+1,c
 33487  004766  0EC9               	movlw	201
 33488  004768  6E03               	movwf	i2RegisterSet@setting,c
 33489  00476A  ECAA  F039         	call	i2_RegisterSet	;wreg free
 33490                           
 33491                           ;drv_mrf_miwi_mesh_89xa.c: 384: WriteFIFO(TxPacketLen);
 33492  00476E  501A               	movf	i2TxPacket@TxPacketLen,w,c
 33493  004770  ECCF  F039         	call	i2_WriteFIFO
 33494                           
 33495                           ;drv_mrf_miwi_mesh_89xa.c: 385: for(i=0; i< TxPacketLen; i++)
 33496  004774  6A2B               	clrf	i2TxPacket@i,c
 33497  004776  D00A               	goto	i2l14672
 33498  004778                     i2l14668:
 33499                           
 33500                           ;drv_mrf_miwi_mesh_89xa.c: 386: {
 33501                           ;drv_mrf_miwi_mesh_89xa.c: 387: WriteFIFO(MACTxBuffer[i]);
 33502  004778  0E1E               	movlw	low _MACTxBuffer
 33503  00477A  242B               	addwf	i2TxPacket@i,w,c
 33504  00477C  6ED9               	movwf	fsr2l,c
 33505  00477E  6ADA               	clrf	fsr2h,c
 33506  004780  0E03               	movlw	high _MACTxBuffer
 33507  004782  22DA               	addwfc	fsr2h,f,c
 33508  004784  50DF               	movf	indf2,w,c
 33509  004786  ECCF  F039         	call	i2_WriteFIFO
 33510  00478A  2A2B               	incf	i2TxPacket@i,f,c
 33511  00478C                     i2l14672:
 33512  00478C  501A               	movf	i2TxPacket@TxPacketLen,w,c
 33513  00478E  5C2B               	subwf	i2TxPacket@i,w,c
 33514  004790  E3F3               	bnc	i2l14668
 33515                           
 33516                           ;drv_mrf_miwi_mesh_89xa.c: 392: if( CCA )
 33517  004792  5015               	movf	i2TxPacket@CCA,w,c
 33518  004794  E02D               	bz	i2l14702
 33519                           
 33520                           ;drv_mrf_miwi_mesh_89xa.c: 393: {
 33521                           ;drv_mrf_miwi_mesh_89xa.c: 394: for(i=0;i<4;i++)
 33522  004796  6A2B               	clrf	i2TxPacket@i,c
 33523  004798                     i2l14678:
 33524  004798  0E03               	movlw	3
 33525  00479A  642B               	cpfsgt	i2TxPacket@i,c
 33526  00479C  D001               	goto	i2l14682
 33527  00479E  D028               	goto	i2l14702
 33528  0047A0                     i2l14682:
 33529                           
 33530                           ;drv_mrf_miwi_mesh_89xa.c: 395: {
 33531                           ;drv_mrf_miwi_mesh_89xa.c: 396: rssival = RegisterRead(0x2800>>8);
 33532  0047A0  0E28               	movlw	40
 33533  0047A2  EC1C  F039         	call	i2_RegisterRead
 33534  0047A6  6E2A               	movwf	i2TxPacket@rssival,c
 33535                           
 33536                           ;drv_mrf_miwi_mesh_89xa.c: 397: rssival = (rssival>>1);
 33537  0047A8  90D8               	bcf	status,0,c
 33538  0047AA  322A               	rrcf	i2TxPacket@rssival,f,c
 33539                           
 33540                           ;drv_mrf_miwi_mesh_89xa.c: 399: if( rssival > 65 )
 33541  0047AC  0E41               	movlw	65
 33542  0047AE  642A               	cpfsgt	i2TxPacket@rssival,c
 33543  0047B0  D01F               	goto	i2l14702
 33544                           
 33545                           ;drv_mrf_miwi_mesh_89xa.c: 400: {
 33546                           ;drv_mrf_miwi_mesh_89xa.c: 402: {
 33547                           ;drv_mrf_miwi_mesh_89xa.c: 403: uint16_t j;
 33548                           ;drv_mrf_miwi_mesh_89xa.c: 404: uint16_t delay=(krnd() & 0x1f)+8;
 33549  0047B2  EC45  F024         	call	i2_krnd	;wreg free
 33550  0047B6  0E1F               	movlw	31
 33551  0047B8  1601               	andwf	?i2_krnd,f,c
 33552  0047BA  6A02               	clrf	?i2_krnd+1,c
 33553  0047BC  0E08               	movlw	8
 33554  0047BE  2401               	addwf	?i2_krnd,w,c
 33555  0047C0  6E24               	movwf	i2TxPacket@delay,c
 33556  0047C2  0E00               	movlw	0
 33557  0047C4  2002               	addwfc	?i2_krnd+1,w,c
 33558  0047C6  6E25               	movwf	i2TxPacket@delay+1,c
 33559                           
 33560                           ; BSR set to: 1
 33561                           ;drv_mrf_miwi_mesh_89xa.c: 406: for(j=0;j<delay;j++)
 33562  0047C8  6A28               	clrf	i2TxPacket@j,c
 33563  0047CA  6A29               	clrf	i2TxPacket@j+1,c
 33564  0047CC  D00A               	goto	i2l14696
 33565  0047CE                     i2l723:
 33566  0047CE  0004               	clrwdt		;# 
 33567                           
 33568                           ;drv_mrf_miwi_mesh_89xa.c: 409: DelayMs(1);
 33569  0047D0  0E01               	movlw	1
 33570  0047D2  6E09               	movwf	i2DelayMs@ms,c
 33571  0047D4  6A0A               	clrf	i2DelayMs@ms+1,c
 33572  0047D6  6A0B               	clrf	i2DelayMs@ms+2,c
 33573  0047D8  6A0C               	clrf	i2DelayMs@ms+3,c
 33574  0047DA  ECCA  F02E         	call	i2_DelayMs	;wreg free
 33575  0047DE  4A28               	infsnz	i2TxPacket@j,f,c
 33576  0047E0  2A29               	incf	i2TxPacket@j+1,f,c
 33577  0047E2                     i2l14696:
 33578  0047E2  5024               	movf	i2TxPacket@delay,w,c
 33579  0047E4  5C28               	subwf	i2TxPacket@j,w,c
 33580  0047E6  5025               	movf	i2TxPacket@delay+1,w,c
 33581  0047E8  5829               	subwfb	i2TxPacket@j+1,w,c
 33582  0047EA  E3F1               	bnc	i2l723
 33583  0047EC  2A2B               	incf	i2TxPacket@i,f,c
 33584  0047EE  D7D4               	goto	i2l14678
 33585  0047F0                     i2l14702:
 33586                           
 33587                           ;drv_mrf_miwi_mesh_89xa.c: 415: }
 33588                           ;drv_mrf_miwi_mesh_89xa.c: 416: }
 33589                           ;drv_mrf_miwi_mesh_89xa.c: 417: }
 33590                           ;drv_mrf_miwi_mesh_89xa.c: 419: SetRFMode(0x80);
 33591  0047F0  0E80               	movlw	128
 33592  0047F2  EC5C  F032         	call	i2_SetRFMode
 33593                           
 33594                           ;drv_mrf_miwi_mesh_89xa.c: 423: INTCON3bits.INT1IE = 1;
 33595  0047F6  86F0               	bsf	intcon3,3,c	;volatile
 33596  0047F8                     i2l14706:
 33597  0047F8  503D               	movf	_IRQ1_Received,w,c	;volatile
 33598  0047FA  E102               	bnz	i2l730
 33599  0047FC  A0F0               	btfss	intcon3,0,c	;volatile
 33600  0047FE  D7FC               	goto	i2l14706
 33601  004800                     i2l730:
 33602                           
 33603                           ;drv_mrf_miwi_mesh_89xa.c: 427: };
 33604                           ;drv_mrf_miwi_mesh_89xa.c: 431: IRQ1_Received = 0;
 33605  004800  6A3D               	clrf	_IRQ1_Received,c	;volatile
 33606                           
 33607                           ;drv_mrf_miwi_mesh_89xa.c: 432: SetRFMode(0x20);
 33608  004802  0E20               	movlw	32
 33609  004804  EC5C  F032         	call	i2_SetRFMode
 33610                           
 33611                           ;drv_mrf_miwi_mesh_89xa.c: 433: SetRFMode(0x60);
 33612  004808  0E60               	movlw	96
 33613  00480A  EC5C  F032         	call	i2_SetRFMode
 33614                           
 33615                           ;drv_mrf_miwi_mesh_89xa.c: 436: if( (MACTxBuffer[0] & 0x20) > 0 )
 33616  00480E  0103               	movlb	3	; () banked
 33617  004810  AB1E               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 33618  004812  D00E               	goto	i2l14720
 33619                           
 33620                           ; BSR set to: 3
 33621                           ;drv_mrf_miwi_mesh_89xa.c: 437: {
 33622                           ;drv_mrf_miwi_mesh_89xa.c: 438: TxMACSeq = MACTxBuffer[1];
 33623  004814  C31F  F1BF         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 33624                           
 33625                           ; BSR set to: 3
 33626                           ;drv_mrf_miwi_mesh_89xa.c: 439: t1 = MiWi_TickGetMs();
 33627  004818  EC5D  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33628  00481C  C00D  F01C         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t1
 33629  004820  C00E  F01D         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t1+1
 33630  004824  C00F  F01E         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t1+2
 33631  004828  C010  F01F         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t1+3
 33632  00482C                     i2l14718:
 33633                           
 33634                           ;drv_mrf_miwi_mesh_89xa.c: 441: {
 33635                           ;drv_mrf_miwi_mesh_89xa.c: 442: if( hasAck )
 33636  00482C  5041               	movf	_hasAck,w,c	;volatile
 33637  00482E  E003               	bz	i2l14722
 33638  004830                     i2l14720:
 33639                           
 33640                           ;drv_mrf_miwi_mesh_89xa.c: 443: {
 33641                           ;drv_mrf_miwi_mesh_89xa.c: 444: status = 1;
 33642  004830  0E01               	movlw	1
 33643  004832  6E1B               	movwf	i2TxPacket@status,c
 33644                           
 33645                           ;drv_mrf_miwi_mesh_89xa.c: 445: goto TX_END_HERE;
 33646  004834  0C01               	retlw	1
 33647  004836                     i2l14722:
 33648                           
 33649                           ;drv_mrf_miwi_mesh_89xa.c: 446: }
 33650                           ;drv_mrf_miwi_mesh_89xa.c: 447: t2 = MiWi_TickGetMs();
 33651  004836  EC5D  F038         	call	i2_MiWi_TickGetMs	;wreg free
 33652  00483A  C00D  F020         	movff	?i2_MiWi_TickGetMs,i2TxPacket@t2
 33653  00483E  C00E  F021         	movff	?i2_MiWi_TickGetMs+1,i2TxPacket@t2+1
 33654  004842  C00F  F022         	movff	?i2_MiWi_TickGetMs+2,i2TxPacket@t2+2
 33655  004846  C010  F023         	movff	?i2_MiWi_TickGetMs+3,i2TxPacket@t2+3
 33656                           
 33657                           ;drv_mrf_miwi_mesh_89xa.c: 448: if( (t2.Val - t1.Val) > 1000/20 )
 33658  00484A  501C               	movf	i2TxPacket@t1,w,c
 33659  00484C  5C20               	subwf	i2TxPacket@t2,w,c
 33660  00484E  6E16               	movwf	??i2_TxPacket& (0+255),c
 33661  004850  501D               	movf	i2TxPacket@t1+1,w,c
 33662  004852  5821               	subwfb	i2TxPacket@t2+1,w,c
 33663  004854  6E17               	movwf	(??i2_TxPacket+1)& (0+255),c
 33664  004856  501E               	movf	i2TxPacket@t1+2,w,c
 33665  004858  5822               	subwfb	i2TxPacket@t2+2,w,c
 33666  00485A  6E18               	movwf	(??i2_TxPacket+2)& (0+255),c
 33667  00485C  501F               	movf	i2TxPacket@t1+3,w,c
 33668  00485E  5823               	subwfb	i2TxPacket@t2+3,w,c
 33669  004860  6E19               	movwf	(??i2_TxPacket+3)& (0+255),c
 33670  004862  5019               	movf	??i2_TxPacket+3,w,c
 33671  004864  1018               	iorwf	??i2_TxPacket+2,w,c
 33672  004866  1017               	iorwf	??i2_TxPacket+1,w,c
 33673  004868  E103               	bnz	i2u1738_40
 33674  00486A  0E33               	movlw	51
 33675  00486C  5C16               	subwf	??i2_TxPacket,w,c
 33676  00486E  E3DE               	bnc	i2l14718
 33677  004870                     i2u1738_40:
 33678                           
 33679                           ;drv_mrf_miwi_mesh_89xa.c: 451: }
 33680                           ;drv_mrf_miwi_mesh_89xa.c: 452: }
 33681                           ;drv_mrf_miwi_mesh_89xa.c: 454: if(allowedTxFailure++ <= 3)
 33682  004870  2A27               	incf	i2TxPacket@allowedTxFailure,f,c
 33683  004872  0427               	decf	i2TxPacket@allowedTxFailure,w,c
 33684  004874  6E16               	movwf	??i2_TxPacket& (0+255),c
 33685  004876  0E04               	movlw	4
 33686  004878  6016               	cpfslt	??i2_TxPacket,c
 33687  00487A  D001               	goto	i2l14734
 33688  00487C  D76D               	goto	i2l714
 33689  00487E                     i2l14734:
 33690  00487E  0626               	decf	i2TxPacket@reTry,f,c
 33691  004880  2826               	incf	i2TxPacket@reTry,w,c
 33692  004882  E001 D768          	bnz	i2l713
 33693                           
 33694                           ;drv_mrf_miwi_mesh_89xa.c: 463: }
 33695                           ;drv_mrf_miwi_mesh_89xa.c: 464: }
 33696                           ;drv_mrf_miwi_mesh_89xa.c: 466: status = 0;
 33697  004886  6A1B               	clrf	i2TxPacket@status,c
 33698  004888  0012               	return		;funcret
 33699  00488A                     __end_ofi2_TxPacket:
 33700                           	opt stack 0
 33701                           tblptru	equ	0xFF8
 33702                           tblptrh	equ	0xFF7
 33703                           tblptrl	equ	0xFF6
 33704                           tablat	equ	0xFF5
 33705                           prodh	equ	0xFF4
 33706                           prodl	equ	0xFF3
 33707                           intcon	equ	0xFF2
 33708                           intcon2	equ	0xFF1
 33709                           intcon3	equ	0xFF0
 33710                           indf0	equ	0xFEF
 33711                           postinc0	equ	0xFEE
 33712                           plusw0	equ	0xFEB
 33713                           fsr0h	equ	0xFEA
 33714                           fsr0l	equ	0xFE9
 33715                           wreg	equ	0xFE8
 33716                           indf1	equ	0xFE7
 33717                           postinc1	equ	0xFE6
 33718                           postdec1	equ	0xFE5
 33719                           plusw1	equ	0xFE3
 33720                           fsr1h	equ	0xFE2
 33721                           fsr1l	equ	0xFE1
 33722                           indf2	equ	0xFDF
 33723                           postinc2	equ	0xFDE
 33724                           postdec2	equ	0xFDD
 33725                           plusw2	equ	0xFDB
 33726                           fsr2h	equ	0xFDA
 33727                           fsr2l	equ	0xFD9
 33728                           status	equ	0xFD8
 33729                           
 33730 ;; *************** function i2_krnd *****************
 33731 ;; Defined at:
 33732 ;;		line 16 in file "../krnd.c"
 33733 ;; Parameters:    Size  Location     Type
 33734 ;;		None
 33735 ;; Auto vars:     Size  Location     Type
 33736 ;;  krnd            4    8[COMRAM] long 
 33737 ;; Return value:  Size  Location     Type
 33738 ;;                  4    0[COMRAM] unsigned long 
 33739 ;; Registers used:
 33740 ;;		wreg, status,2, status,0
 33741 ;; Tracked objects:
 33742 ;;		On entry : 0/3
 33743 ;;		On exit  : F/1
 33744 ;;		Unchanged: 0/0
 33745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33747 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33749 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33750 ;;Total ram usage:       12 bytes
 33751 ;; Hardware stack levels used:    1
 33752 ;; This function calls:
 33753 ;;		Nothing
 33754 ;; This function is called by:
 33755 ;;		i2_TxPacket
 33756 ;; This function uses a non-reentrant model
 33757 ;;
 33758                           
 33759                           	psect	text164
 33760  00488A                     __ptext164:
 33761                           	opt stack 0
 33762  00488A                     i2_krnd:
 33763                           	opt stack 16
 33764                           
 33765                           ;krnd.c: 18: int32_t t;
 33766                           ;krnd.c: 20: y ^= (y<<5); y ^= (y>>7); y ^= (y<<22);
 33767                           
 33768                           ;incstack = 0
 33769  00488A  C049  F005         	movff	_y,??i2_krnd
 33770  00488E  C04A  F006         	movff	_y+1,??i2_krnd+1
 33771  004892  C04B  F007         	movff	_y+2,??i2_krnd+2
 33772  004896  C04C  F008         	movff	_y+3,??i2_krnd+3
 33773  00489A  0E05               	movlw	5
 33774  00489C                     i2u1663_45:
 33775  00489C  90D8               	bcf	status,0,c
 33776  00489E  3605               	rlcf	??i2_krnd,f,c
 33777  0048A0  3606               	rlcf	??i2_krnd+1,f,c
 33778  0048A2  3607               	rlcf	??i2_krnd+2,f,c
 33779  0048A4  3608               	rlcf	??i2_krnd+3,f,c
 33780  0048A6  2EE8               	decfsz	wreg,f,c
 33781  0048A8  D7F9               	goto	i2u1663_45
 33782  0048AA  5005               	movf	??i2_krnd,w,c
 33783  0048AC  1A49               	xorwf	_y,f,c
 33784  0048AE  5006               	movf	??i2_krnd+1,w,c
 33785  0048B0  1A4A               	xorwf	_y+1,f,c
 33786  0048B2  5007               	movf	??i2_krnd+2,w,c
 33787  0048B4  1A4B               	xorwf	_y+2,f,c
 33788  0048B6  5008               	movf	??i2_krnd+3,w,c
 33789  0048B8  1A4C               	xorwf	_y+3,f,c
 33790  0048BA  C049  F005         	movff	_y,??i2_krnd
 33791  0048BE  C04A  F006         	movff	_y+1,??i2_krnd+1
 33792  0048C2  C04B  F007         	movff	_y+2,??i2_krnd+2
 33793  0048C6  C04C  F008         	movff	_y+3,??i2_krnd+3
 33794  0048CA  0E08               	movlw	8
 33795  0048CC  D005               	goto	i2u1664_40
 33796  0048CE                     i2u1664_45:
 33797  0048CE  90D8               	bcf	status,0,c
 33798  0048D0  3208               	rrcf	??i2_krnd+3,f,c
 33799  0048D2  3207               	rrcf	??i2_krnd+2,f,c
 33800  0048D4  3206               	rrcf	??i2_krnd+1,f,c
 33801  0048D6  3205               	rrcf	??i2_krnd,f,c
 33802  0048D8                     i2u1664_40:
 33803  0048D8  2EE8               	decfsz	wreg,f,c
 33804  0048DA  D7F9               	goto	i2u1664_45
 33805  0048DC  5005               	movf	??i2_krnd,w,c
 33806  0048DE  1A49               	xorwf	_y,f,c
 33807  0048E0  5006               	movf	??i2_krnd+1,w,c
 33808  0048E2  1A4A               	xorwf	_y+1,f,c
 33809  0048E4  5007               	movf	??i2_krnd+2,w,c
 33810  0048E6  1A4B               	xorwf	_y+2,f,c
 33811  0048E8  5008               	movf	??i2_krnd+3,w,c
 33812  0048EA  1A4C               	xorwf	_y+3,f,c
 33813  0048EC  C049  F005         	movff	_y,??i2_krnd
 33814  0048F0  C04A  F006         	movff	_y+1,??i2_krnd+1
 33815  0048F4  C04B  F007         	movff	_y+2,??i2_krnd+2
 33816  0048F8  C04C  F008         	movff	_y+3,??i2_krnd+3
 33817  0048FC  0E16               	movlw	22
 33818  0048FE                     i2u1665_45:
 33819  0048FE  90D8               	bcf	status,0,c
 33820  004900  3605               	rlcf	??i2_krnd,f,c
 33821  004902  3606               	rlcf	??i2_krnd+1,f,c
 33822  004904  3607               	rlcf	??i2_krnd+2,f,c
 33823  004906  3608               	rlcf	??i2_krnd+3,f,c
 33824  004908  2EE8               	decfsz	wreg,f,c
 33825  00490A  D7F9               	goto	i2u1665_45
 33826  00490C  5005               	movf	??i2_krnd,w,c
 33827  00490E  1A49               	xorwf	_y,f,c
 33828  004910  5006               	movf	??i2_krnd+1,w,c
 33829  004912  1A4A               	xorwf	_y+1,f,c
 33830  004914  5007               	movf	??i2_krnd+2,w,c
 33831  004916  1A4B               	xorwf	_y+2,f,c
 33832  004918  5008               	movf	??i2_krnd+3,w,c
 33833  00491A  1A4C               	xorwf	_y+3,f,c
 33834                           
 33835                           ;krnd.c: 22: t = z+w+c; z = w; c = t < 0; w = t&1423849274;
 33836  00491C  5045               	movf	_w,w,c
 33837  00491E  0101               	movlb	1	; () banked
 33838  004920  25F3               	addwf	_z& (0+255),w,b
 33839  004922  6E05               	movwf	??i2_krnd& (0+255),c
 33840  004924  5046               	movf	_w+1,w,c
 33841  004926  21F4               	addwfc	(_z+1)& (0+255),w,b
 33842  004928  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 33843  00492A  5047               	movf	_w+2,w,c
 33844  00492C  21F5               	addwfc	(_z+2)& (0+255),w,b
 33845  00492E  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 33846  004930  5048               	movf	_w+3,w,c
 33847  004932  21F6               	addwfc	(_z+3)& (0+255),w,b
 33848  004934  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 33849  004936  518E               	movf	_c& (0+255),w,b
 33850  004938  2405               	addwf	??i2_krnd,w,c
 33851  00493A  6E09               	movwf	i2krnd@t,c
 33852  00493C  518F               	movf	(_c+1)& (0+255),w,b
 33853  00493E  2006               	addwfc	??i2_krnd+1,w,c
 33854  004940  6E0A               	movwf	i2krnd@t+1,c
 33855  004942  5190               	movf	(_c+2)& (0+255),w,b
 33856  004944  2007               	addwfc	??i2_krnd+2,w,c
 33857  004946  6E0B               	movwf	i2krnd@t+2,c
 33858  004948  5191               	movf	(_c+3)& (0+255),w,b
 33859  00494A  2008               	addwfc	??i2_krnd+3,w,c
 33860  00494C  6E0C               	movwf	i2krnd@t+3,c
 33861                           
 33862                           ; BSR set to: 1
 33863  00494E  C045  F1F3         	movff	_w,_z
 33864  004952  C046  F1F4         	movff	_w+1,_z+1
 33865  004956  C047  F1F5         	movff	_w+2,_z+2
 33866  00495A  C048  F1F6         	movff	_w+3,_z+3
 33867  00495E  0E01               	movlw	1
 33868  004960  AE0C               	btfss	i2krnd@t+3,7,c
 33869  004962  0E00               	movlw	0
 33870  004964  6F8E               	movwf	_c& (0+255),b
 33871  004966  6B8F               	clrf	(_c+1)& (0+255),b
 33872  004968  6B90               	clrf	(_c+2)& (0+255),b
 33873  00496A  6B91               	clrf	(_c+3)& (0+255),b
 33874  00496C  0E3A               	movlw	58
 33875  00496E  1409               	andwf	i2krnd@t,w,c
 33876  004970  6E45               	movwf	_w,c
 33877  004972  0E37               	movlw	55
 33878  004974  140A               	andwf	i2krnd@t+1,w,c
 33879  004976  6E46               	movwf	_w+1,c
 33880  004978  0EDE               	movlw	222
 33881  00497A  140B               	andwf	i2krnd@t+2,w,c
 33882  00497C  6E47               	movwf	_w+2,c
 33883  00497E  0E54               	movlw	84
 33884  004980  140C               	andwf	i2krnd@t+3,w,c
 33885  004982  6E48               	movwf	_w+3,c
 33886                           
 33887                           ;krnd.c: 24: x += 1832334820;
 33888  004984  0EE4               	movlw	228
 33889  004986  27EF               	addwf	_x& (0+255),f,b
 33890  004988  0E35               	movlw	53
 33891  00498A  23F0               	addwfc	(_x+1)& (0+255),f,b
 33892  00498C  0E37               	movlw	55
 33893  00498E  23F1               	addwfc	(_x+2)& (0+255),f,b
 33894  004990  0E6D               	movlw	109
 33895  004992  23F2               	addwfc	(_x+3)& (0+255),f,b
 33896                           
 33897                           ;krnd.c: 26: return x + y + w;
 33898  004994  5049               	movf	_y,w,c
 33899  004996  25EF               	addwf	_x& (0+255),w,b
 33900  004998  6E05               	movwf	??i2_krnd& (0+255),c
 33901  00499A  504A               	movf	_y+1,w,c
 33902  00499C  21F0               	addwfc	(_x+1)& (0+255),w,b
 33903  00499E  6E06               	movwf	(??i2_krnd+1)& (0+255),c
 33904  0049A0  504B               	movf	_y+2,w,c
 33905  0049A2  21F1               	addwfc	(_x+2)& (0+255),w,b
 33906  0049A4  6E07               	movwf	(??i2_krnd+2)& (0+255),c
 33907  0049A6  504C               	movf	_y+3,w,c
 33908  0049A8  21F2               	addwfc	(_x+3)& (0+255),w,b
 33909  0049AA  6E08               	movwf	(??i2_krnd+3)& (0+255),c
 33910  0049AC  5045               	movf	_w,w,c
 33911  0049AE  2405               	addwf	??i2_krnd,w,c
 33912  0049B0  6E01               	movwf	?i2_krnd,c
 33913  0049B2  5046               	movf	_w+1,w,c
 33914  0049B4  2006               	addwfc	??i2_krnd+1,w,c
 33915  0049B6  6E02               	movwf	?i2_krnd+1,c
 33916  0049B8  5047               	movf	_w+2,w,c
 33917  0049BA  2007               	addwfc	??i2_krnd+2,w,c
 33918  0049BC  6E03               	movwf	?i2_krnd+2,c
 33919  0049BE  5048               	movf	_w+3,w,c
 33920  0049C0  2008               	addwfc	??i2_krnd+3,w,c
 33921  0049C2  6E04               	movwf	?i2_krnd+3,c
 33922                           
 33923                           ; BSR set to: 1
 33924  0049C4  0012               	return		;funcret
 33925  0049C6                     __end_ofi2_krnd:
 33926                           	opt stack 0
 33927                           tblptru	equ	0xFF8
 33928                           tblptrh	equ	0xFF7
 33929                           tblptrl	equ	0xFF6
 33930                           tablat	equ	0xFF5
 33931                           prodh	equ	0xFF4
 33932                           prodl	equ	0xFF3
 33933                           intcon	equ	0xFF2
 33934                           intcon2	equ	0xFF1
 33935                           intcon3	equ	0xFF0
 33936                           indf0	equ	0xFEF
 33937                           postinc0	equ	0xFEE
 33938                           plusw0	equ	0xFEB
 33939                           fsr0h	equ	0xFEA
 33940                           fsr0l	equ	0xFE9
 33941                           wreg	equ	0xFE8
 33942                           indf1	equ	0xFE7
 33943                           postinc1	equ	0xFE6
 33944                           postdec1	equ	0xFE5
 33945                           plusw1	equ	0xFE3
 33946                           fsr1h	equ	0xFE2
 33947                           fsr1l	equ	0xFE1
 33948                           indf2	equ	0xFDF
 33949                           postinc2	equ	0xFDE
 33950                           postdec2	equ	0xFDD
 33951                           plusw2	equ	0xFDB
 33952                           fsr2h	equ	0xFDA
 33953                           fsr2l	equ	0xFD9
 33954                           status	equ	0xFD8
 33955                           
 33956 ;; *************** function i2_WriteFIFO *****************
 33957 ;; Defined at:
 33958 ;;		line 306 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 33959 ;; Parameters:    Size  Location     Type
 33960 ;;  Data            1    wreg     unsigned char 
 33961 ;; Auto vars:     Size  Location     Type
 33962 ;;  Data            1    2[COMRAM] unsigned char 
 33963 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 33964 ;; Return value:  Size  Location     Type
 33965 ;;                  1    wreg      void 
 33966 ;; Registers used:
 33967 ;;		wreg, status,2, cstack
 33968 ;; Tracked objects:
 33969 ;;		On entry : 0/3
 33970 ;;		On exit  : 0/0
 33971 ;;		Unchanged: 0/0
 33972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33977 ;;Total ram usage:        2 bytes
 33978 ;; Hardware stack levels used:    1
 33979 ;; Hardware stack levels required when called:    1
 33980 ;; This function calls:
 33981 ;;		i2_SPIPut
 33982 ;; This function is called by:
 33983 ;;		i2_TxPacket
 33984 ;; This function uses a non-reentrant model
 33985 ;;
 33986                           
 33987                           	psect	text165
 33988  00739E                     __ptext165:
 33989                           	opt stack 0
 33990  00739E                     i2_WriteFIFO:
 33991                           	opt stack 15
 33992                           
 33993                           ; BSR set to: 1
 33994                           ;incstack = 0
 33995                           ;i2WriteFIFO@Data stored from wreg
 33996  00739E  6E03               	movwf	i2WriteFIFO@Data,c
 33997                           
 33998                           ;drv_mrf_miwi_mesh_89xa.c: 308: uint8_t IRQ1select = INTCON3bits.INT1IE;
 33999  0073A0  0E00               	movlw	0
 34000  0073A2  B6F0               	btfsc	intcon3,3,c	;volatile
 34001  0073A4  0E01               	movlw	1
 34002  0073A6  6E04               	movwf	i2WriteFIFO@IRQ1select,c
 34003                           
 34004                           ;drv_mrf_miwi_mesh_89xa.c: 315: INTCON3bits.INT1IE = 0;
 34005  0073A8  96F0               	bcf	intcon3,3,c	;volatile
 34006                           
 34007                           ;drv_mrf_miwi_mesh_89xa.c: 316: LATAbits.LATA5 = 0;
 34008  0073AA  9A89               	bcf	3977,5,c	;volatile
 34009                           
 34010                           ;drv_mrf_miwi_mesh_89xa.c: 317: SPIPut(Data);
 34011  0073AC  5003               	movf	i2WriteFIFO@Data,w,c
 34012  0073AE  EC8E  F03A         	call	i2_SPIPut
 34013                           
 34014                           ;drv_mrf_miwi_mesh_89xa.c: 318: LATAbits.LATA5 = 1;
 34015  0073B2  8A89               	bsf	3977,5,c	;volatile
 34016                           
 34017                           ;drv_mrf_miwi_mesh_89xa.c: 319: INTCON3bits.INT1IE = IRQ1select;
 34018  0073B4  B004               	btfsc	i2WriteFIFO@IRQ1select,0,c
 34019  0073B6  D002               	bra	i2u1662_45
 34020  0073B8  96F0               	bcf	intcon3,3,c	;volatile
 34021  0073BA  D001               	bra	i2u1662_46
 34022  0073BC                     i2u1662_45:
 34023  0073BC  86F0               	bsf	intcon3,3,c	;volatile
 34024  0073BE                     i2u1662_46:
 34025  0073BE  0012               	return		;funcret
 34026  0073C0                     __end_ofi2_WriteFIFO:
 34027                           	opt stack 0
 34028                           tblptru	equ	0xFF8
 34029                           tblptrh	equ	0xFF7
 34030                           tblptrl	equ	0xFF6
 34031                           tablat	equ	0xFF5
 34032                           prodh	equ	0xFF4
 34033                           prodl	equ	0xFF3
 34034                           intcon	equ	0xFF2
 34035                           intcon2	equ	0xFF1
 34036                           intcon3	equ	0xFF0
 34037                           indf0	equ	0xFEF
 34038                           postinc0	equ	0xFEE
 34039                           plusw0	equ	0xFEB
 34040                           fsr0h	equ	0xFEA
 34041                           fsr0l	equ	0xFE9
 34042                           wreg	equ	0xFE8
 34043                           indf1	equ	0xFE7
 34044                           postinc1	equ	0xFE6
 34045                           postdec1	equ	0xFE5
 34046                           plusw1	equ	0xFE3
 34047                           fsr1h	equ	0xFE2
 34048                           fsr1l	equ	0xFE1
 34049                           indf2	equ	0xFDF
 34050                           postinc2	equ	0xFDE
 34051                           postdec2	equ	0xFDD
 34052                           plusw2	equ	0xFDB
 34053                           fsr2h	equ	0xFDA
 34054                           fsr2l	equ	0xFD9
 34055                           status	equ	0xFD8
 34056                           
 34057 ;; *************** function i2_SetRFMode *****************
 34058 ;; Defined at:
 34059 ;;		line 742 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34060 ;; Parameters:    Size  Location     Type
 34061 ;;  mode            1    wreg     unsigned char 
 34062 ;; Auto vars:     Size  Location     Type
 34063 ;;  mode            1    5[COMRAM] unsigned char 
 34064 ;; Return value:  Size  Location     Type
 34065 ;;                  1    wreg      void 
 34066 ;; Registers used:
 34067 ;;		wreg, status,2, status,0, cstack
 34068 ;; Tracked objects:
 34069 ;;		On entry : 0/3
 34070 ;;		On exit  : 0/0
 34071 ;;		Unchanged: 0/0
 34072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34077 ;;Total ram usage:        1 bytes
 34078 ;; Hardware stack levels used:    1
 34079 ;; Hardware stack levels required when called:    2
 34080 ;; This function calls:
 34081 ;;		i2_RegisterSet
 34082 ;; This function is called by:
 34083 ;;		i2_TxPacket
 34084 ;; This function uses a non-reentrant model
 34085 ;;
 34086                           
 34087                           	psect	text166
 34088  0064B8                     __ptext166:
 34089                           	opt stack 0
 34090  0064B8                     i2_SetRFMode:
 34091                           	opt stack 14
 34092                           
 34093                           ;incstack = 0
 34094                           ;i2SetRFMode@mode stored from wreg
 34095  0064B8  6E06               	movwf	i2SetRFMode@mode,c
 34096                           
 34097                           ;drv_mrf_miwi_mesh_89xa.c: 744: switch (mode) {
 34098  0064BA  D02C               	goto	i2l14126
 34099  0064BC                     i2l14104:
 34100                           
 34101                           ;drv_mrf_miwi_mesh_89xa.c: 746: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x8
      +                          0);
 34102  0064BC  6A04               	clrf	i2RegisterSet@setting+1,c
 34103  0064BE  0E8E               	movlw	142
 34104  0064C0  6E03               	movwf	i2RegisterSet@setting,c
 34105  0064C2  ECAA  F039         	call	i2_RegisterSet	;wreg free
 34106                           
 34107                           ;drv_mrf_miwi_mesh_89xa.c: 747: RF_Mode = 0x80;
 34108  0064C6  0E80               	movlw	128
 34109  0064C8  0101               	movlb	1	; () banked
 34110  0064CA  6FBA               	movwf	_RF_Mode& (0+255),b
 34111                           
 34112                           ;drv_mrf_miwi_mesh_89xa.c: 748: break;
 34113  0064CC  0C80               	retlw	128
 34114  0064CE                     i2l14108:
 34115                           
 34116                           ;drv_mrf_miwi_mesh_89xa.c: 750: RegisterSet(0x0000|((0x20 | 0x08 | 0x06) & 0x1F) | 0x60)
      +                          ;
 34117  0064CE  6A04               	clrf	i2RegisterSet@setting+1,c
 34118  0064D0  0E6E               	movlw	110
 34119  0064D2  6E03               	movwf	i2RegisterSet@setting,c
 34120  0064D4  ECAA  F039         	call	i2_RegisterSet	;wreg free
 34121                           
 34122                           ;drv_mrf_miwi_mesh_89xa.c: 751: RF_Mode = 0x60;
 34123  0064D8  0E60               	movlw	96
 34124  0064DA  0101               	movlb	1	; () banked
 34125  0064DC  6FBA               	movwf	_RF_Mode& (0+255),b
 34126                           
 34127                           ;drv_mrf_miwi_mesh_89xa.c: 752: break;
 34128  0064DE  0C60               	retlw	96
 34129  0064E0                     i2l14112:
 34130                           
 34131                           ;drv_mrf_miwi_mesh_89xa.c: 754: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x4
      +                          0);
 34132  0064E0  6A04               	clrf	i2RegisterSet@setting+1,c
 34133  0064E2  0E4E               	movlw	78
 34134  0064E4  6E03               	movwf	i2RegisterSet@setting,c
 34135  0064E6  ECAA  F039         	call	i2_RegisterSet	;wreg free
 34136                           
 34137                           ;drv_mrf_miwi_mesh_89xa.c: 755: RF_Mode = 0x40;
 34138  0064EA  0E40               	movlw	64
 34139  0064EC  0101               	movlb	1	; () banked
 34140  0064EE  6FBA               	movwf	_RF_Mode& (0+255),b
 34141                           
 34142                           ;drv_mrf_miwi_mesh_89xa.c: 756: break;
 34143  0064F0  0C40               	retlw	64
 34144  0064F2                     i2l14116:
 34145                           
 34146                           ;drv_mrf_miwi_mesh_89xa.c: 758: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x2
      +                          0);
 34147  0064F2  6A04               	clrf	i2RegisterSet@setting+1,c
 34148  0064F4  0E2E               	movlw	46
 34149  0064F6  6E03               	movwf	i2RegisterSet@setting,c
 34150  0064F8  ECAA  F039         	call	i2_RegisterSet	;wreg free
 34151                           
 34152                           ;drv_mrf_miwi_mesh_89xa.c: 759: RF_Mode = 0x20;
 34153  0064FC  0E20               	movlw	32
 34154  0064FE  0101               	movlb	1	; () banked
 34155  006500  6FBA               	movwf	_RF_Mode& (0+255),b
 34156                           
 34157                           ;drv_mrf_miwi_mesh_89xa.c: 760: break;
 34158  006502  0C20               	retlw	32
 34159  006504                     i2l14120:
 34160                           
 34161                           ;drv_mrf_miwi_mesh_89xa.c: 762: RegisterSet(0x0000 | ((0x20 | 0x08 | 0x06) & 0x1F) | 0x0
      +                          0);
 34162  006504  6A04               	clrf	i2RegisterSet@setting+1,c
 34163  006506  0E0E               	movlw	14
 34164  006508  6E03               	movwf	i2RegisterSet@setting,c
 34165  00650A  ECAA  F039         	call	i2_RegisterSet	;wreg free
 34166                           
 34167                           ;drv_mrf_miwi_mesh_89xa.c: 763: RF_Mode = 0x00;
 34168  00650E  0101               	movlb	1	; () banked
 34169  006510  6BBA               	clrf	_RF_Mode& (0+255),b
 34170                           
 34171                           ;drv_mrf_miwi_mesh_89xa.c: 764: break;
 34172  006512  0012               	return	
 34173  006514                     i2l14126:
 34174  006514  5006               	movf	i2SetRFMode@mode,w,c
 34175                           
 34176                           ; Switch size 1, requested type "speed"
 34177                           ; Number of cases is 5, Range of values is 0 to 128
 34178                           ; switch strategies available:
 34179                           ; Name         Instructions Cycles
 34180                           ; simple_byte           16     9 (average)
 34181                           ;	Chosen strategy is simple_byte
 34182  006516  E0F6               	bz	i2l14120
 34183  006518  0A20               	xorlw	32	; case 32
 34184  00651A  E0EB               	bz	i2l14116
 34185  00651C  0A60               	xorlw	96	; case 64
 34186  00651E  E0E0               	bz	i2l14112
 34187  006520  0A20               	xorlw	32	; case 96
 34188  006522  E0D5               	bz	i2l14108
 34189  006524  0AE0               	xorlw	224	; case 128
 34190  006526  E0CA               	bz	i2l14104
 34191  006528  0012               	return		;funcret
 34192  00652A                     __end_ofi2_SetRFMode:
 34193                           	opt stack 0
 34194                           tblptru	equ	0xFF8
 34195                           tblptrh	equ	0xFF7
 34196                           tblptrl	equ	0xFF6
 34197                           tablat	equ	0xFF5
 34198                           prodh	equ	0xFF4
 34199                           prodl	equ	0xFF3
 34200                           intcon	equ	0xFF2
 34201                           intcon2	equ	0xFF1
 34202                           intcon3	equ	0xFF0
 34203                           indf0	equ	0xFEF
 34204                           postinc0	equ	0xFEE
 34205                           plusw0	equ	0xFEB
 34206                           fsr0h	equ	0xFEA
 34207                           fsr0l	equ	0xFE9
 34208                           wreg	equ	0xFE8
 34209                           indf1	equ	0xFE7
 34210                           postinc1	equ	0xFE6
 34211                           postdec1	equ	0xFE5
 34212                           plusw1	equ	0xFE3
 34213                           fsr1h	equ	0xFE2
 34214                           fsr1l	equ	0xFE1
 34215                           indf2	equ	0xFDF
 34216                           postinc2	equ	0xFDE
 34217                           postdec2	equ	0xFDD
 34218                           plusw2	equ	0xFDB
 34219                           fsr2h	equ	0xFDA
 34220                           fsr2l	equ	0xFD9
 34221                           status	equ	0xFD8
 34222                           
 34223 ;; *************** function i2_RegisterSet *****************
 34224 ;; Defined at:
 34225 ;;		line 224 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34226 ;; Parameters:    Size  Location     Type
 34227 ;;  setting         2    2[COMRAM] unsigned int 
 34228 ;; Auto vars:     Size  Location     Type
 34229 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 34230 ;; Return value:  Size  Location     Type
 34231 ;;                  1    wreg      void 
 34232 ;; Registers used:
 34233 ;;		wreg, status,2, cstack
 34234 ;; Tracked objects:
 34235 ;;		On entry : 0/3
 34236 ;;		On exit  : 0/0
 34237 ;;		Unchanged: 0/0
 34238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34243 ;;Total ram usage:        3 bytes
 34244 ;; Hardware stack levels used:    1
 34245 ;; Hardware stack levels required when called:    1
 34246 ;; This function calls:
 34247 ;;		i2_SPIPut
 34248 ;; This function is called by:
 34249 ;;		i2_TxPacket
 34250 ;;		i2_SetRFMode
 34251 ;; This function uses a non-reentrant model
 34252 ;;
 34253                           
 34254                           	psect	text167
 34255  007354                     __ptext167:
 34256                           	opt stack 0
 34257  007354                     i2_RegisterSet:
 34258                           	opt stack 14
 34259                           
 34260                           ;drv_mrf_miwi_mesh_89xa.c: 226: uint8_t IRQ1select = INTCON3bits.INT1IE;
 34261                           
 34262                           ;incstack = 0
 34263  007354  0E00               	movlw	0
 34264  007356  B6F0               	btfsc	intcon3,3,c	;volatile
 34265  007358  0E01               	movlw	1
 34266  00735A  6E05               	movwf	i2RegisterSet@IRQ1select,c
 34267                           
 34268                           ;drv_mrf_miwi_mesh_89xa.c: 232: INTCON3bits.INT1IE = 0;
 34269  00735C  96F0               	bcf	intcon3,3,c	;volatile
 34270                           
 34271                           ;drv_mrf_miwi_mesh_89xa.c: 233: LATDbits.LATD1 = 0;
 34272  00735E  928C               	bcf	3980,1,c	;volatile
 34273                           
 34274                           ;drv_mrf_miwi_mesh_89xa.c: 234: ;
 34275                           ;drv_mrf_miwi_mesh_89xa.c: 235: SPIPut((uint8_t)(setting >> 8));
 34276  007360  5004               	movf	i2RegisterSet@setting+1,w,c
 34277  007362  EC8E  F03A         	call	i2_SPIPut
 34278                           
 34279                           ;drv_mrf_miwi_mesh_89xa.c: 236: SPIPut((uint8_t)setting);
 34280  007366  5003               	movf	i2RegisterSet@setting,w,c
 34281  007368  EC8E  F03A         	call	i2_SPIPut
 34282                           
 34283                           ;drv_mrf_miwi_mesh_89xa.c: 237: LATDbits.LATD1 = 1;
 34284  00736C  828C               	bsf	3980,1,c	;volatile
 34285                           
 34286                           ;drv_mrf_miwi_mesh_89xa.c: 238: INTCON3bits.INT1IE = IRQ1select;
 34287  00736E  B005               	btfsc	i2RegisterSet@IRQ1select,0,c
 34288  007370  D002               	bra	i2u1555_45
 34289  007372  96F0               	bcf	intcon3,3,c	;volatile
 34290  007374  D001               	bra	i2u1555_46
 34291  007376                     i2u1555_45:
 34292  007376  86F0               	bsf	intcon3,3,c	;volatile
 34293  007378                     i2u1555_46:
 34294  007378  0012               	return		;funcret
 34295  00737A                     __end_ofi2_RegisterSet:
 34296                           	opt stack 0
 34297                           tblptru	equ	0xFF8
 34298                           tblptrh	equ	0xFF7
 34299                           tblptrl	equ	0xFF6
 34300                           tablat	equ	0xFF5
 34301                           prodh	equ	0xFF4
 34302                           prodl	equ	0xFF3
 34303                           intcon	equ	0xFF2
 34304                           intcon2	equ	0xFF1
 34305                           intcon3	equ	0xFF0
 34306                           indf0	equ	0xFEF
 34307                           postinc0	equ	0xFEE
 34308                           plusw0	equ	0xFEB
 34309                           fsr0h	equ	0xFEA
 34310                           fsr0l	equ	0xFE9
 34311                           wreg	equ	0xFE8
 34312                           indf1	equ	0xFE7
 34313                           postinc1	equ	0xFE6
 34314                           postdec1	equ	0xFE5
 34315                           plusw1	equ	0xFE3
 34316                           fsr1h	equ	0xFE2
 34317                           fsr1l	equ	0xFE1
 34318                           indf2	equ	0xFDF
 34319                           postinc2	equ	0xFDE
 34320                           postdec2	equ	0xFDD
 34321                           plusw2	equ	0xFDB
 34322                           fsr2h	equ	0xFDA
 34323                           fsr2l	equ	0xFD9
 34324                           status	equ	0xFD8
 34325                           
 34326 ;; *************** function i2_RegisterRead *****************
 34327 ;; Defined at:
 34328 ;;		line 262 in file "../../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_mesh_89xa.c"
 34329 ;; Parameters:    Size  Location     Type
 34330 ;;  address         1    wreg     unsigned char 
 34331 ;; Auto vars:     Size  Location     Type
 34332 ;;  address         1    2[COMRAM] unsigned char 
 34333 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 34334 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 34335 ;; Return value:  Size  Location     Type
 34336 ;;                  1    wreg      unsigned char 
 34337 ;; Registers used:
 34338 ;;		wreg, status,2, status,0, cstack
 34339 ;; Tracked objects:
 34340 ;;		On entry : 0/1
 34341 ;;		On exit  : 0/0
 34342 ;;		Unchanged: 0/0
 34343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34345 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34347 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34348 ;;Total ram usage:        3 bytes
 34349 ;; Hardware stack levels used:    1
 34350 ;; Hardware stack levels required when called:    2
 34351 ;; This function calls:
 34352 ;;		i2_SPIGet
 34353 ;;		i2_SPIPut
 34354 ;; This function is called by:
 34355 ;;		_HighISR
 34356 ;;		i2_TxPacket
 34357 ;; This function uses a non-reentrant model
 34358 ;;
 34359                           
 34360                           	psect	text168
 34361  007238                     __ptext168:
 34362                           	opt stack 0
 34363  007238                     i2_RegisterRead:
 34364                           	opt stack 14
 34365                           
 34366                           ;incstack = 0
 34367                           ;i2RegisterRead@address stored from wreg
 34368  007238  6E03               	movwf	i2RegisterRead@address,c
 34369                           
 34370                           ;drv_mrf_miwi_mesh_89xa.c: 264: uint8_t value;
 34371                           ;drv_mrf_miwi_mesh_89xa.c: 265: uint8_t IRQ1select = INTCON3bits.INT1IE;
 34372  00723A  0E00               	movlw	0
 34373  00723C  B6F0               	btfsc	intcon3,3,c	;volatile
 34374  00723E  0E01               	movlw	1
 34375  007240  6E05               	movwf	i2RegisterRead@IRQ1select,c
 34376                           
 34377                           ;drv_mrf_miwi_mesh_89xa.c: 272: INTCON3bits.INT1IE = 0;
 34378  007242  96F0               	bcf	intcon3,3,c	;volatile
 34379                           
 34380                           ;drv_mrf_miwi_mesh_89xa.c: 273: LATDbits.LATD1 = 0;
 34381  007244  928C               	bcf	3980,1,c	;volatile
 34382                           
 34383                           ;drv_mrf_miwi_mesh_89xa.c: 274: address = (address|0x40);
 34384  007246  8C03               	bsf	i2RegisterRead@address,6,c
 34385                           
 34386                           ;drv_mrf_miwi_mesh_89xa.c: 275: SPIPut(address);
 34387  007248  5003               	movf	i2RegisterRead@address,w,c
 34388  00724A  EC8E  F03A         	call	i2_SPIPut
 34389                           
 34390                           ;drv_mrf_miwi_mesh_89xa.c: 276: value = SPIGet();
 34391  00724E  ECF5  F03A         	call	i2_SPIGet	;wreg free
 34392  007252  6E04               	movwf	i2RegisterRead@value,c
 34393                           
 34394                           ;drv_mrf_miwi_mesh_89xa.c: 277: LATDbits.LATD1 = 1;
 34395  007254  828C               	bsf	3980,1,c	;volatile
 34396                           
 34397                           ;drv_mrf_miwi_mesh_89xa.c: 278: INTCON3bits.INT1IE = IRQ1select;
 34398  007256  B005               	btfsc	i2RegisterRead@IRQ1select,0,c
 34399  007258  D002               	bra	i2u1661_45
 34400  00725A  96F0               	bcf	intcon3,3,c	;volatile
 34401  00725C  D001               	bra	i2u1661_46
 34402  00725E                     i2u1661_45:
 34403  00725E  86F0               	bsf	intcon3,3,c	;volatile
 34404  007260                     i2u1661_46:
 34405                           
 34406                           ;drv_mrf_miwi_mesh_89xa.c: 284: return value;
 34407  007260  5004               	movf	i2RegisterRead@value,w,c
 34408  007262  0012               	return		;funcret
 34409  007264                     __end_ofi2_RegisterRead:
 34410                           	opt stack 0
 34411                           tblptru	equ	0xFF8
 34412                           tblptrh	equ	0xFF7
 34413                           tblptrl	equ	0xFF6
 34414                           tablat	equ	0xFF5
 34415                           prodh	equ	0xFF4
 34416                           prodl	equ	0xFF3
 34417                           intcon	equ	0xFF2
 34418                           intcon2	equ	0xFF1
 34419                           intcon3	equ	0xFF0
 34420                           indf0	equ	0xFEF
 34421                           postinc0	equ	0xFEE
 34422                           plusw0	equ	0xFEB
 34423                           fsr0h	equ	0xFEA
 34424                           fsr0l	equ	0xFE9
 34425                           wreg	equ	0xFE8
 34426                           indf1	equ	0xFE7
 34427                           postinc1	equ	0xFE6
 34428                           postdec1	equ	0xFE5
 34429                           plusw1	equ	0xFE3
 34430                           fsr1h	equ	0xFE2
 34431                           fsr1l	equ	0xFE1
 34432                           indf2	equ	0xFDF
 34433                           postinc2	equ	0xFDE
 34434                           postdec2	equ	0xFDD
 34435                           plusw2	equ	0xFDB
 34436                           fsr2h	equ	0xFDA
 34437                           fsr2l	equ	0xFD9
 34438                           status	equ	0xFD8
 34439                           
 34440 ;; *************** function i2_SPIGet *****************
 34441 ;; Defined at:
 34442 ;;		line 282 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 34443 ;; Parameters:    Size  Location     Type
 34444 ;;		None
 34445 ;; Auto vars:     Size  Location     Type
 34446 ;;		None
 34447 ;; Return value:  Size  Location     Type
 34448 ;;                  1    wreg      unsigned char 
 34449 ;; Registers used:
 34450 ;;		wreg, status,2, cstack
 34451 ;; Tracked objects:
 34452 ;;		On entry : 0/1
 34453 ;;		On exit  : 0/0
 34454 ;;		Unchanged: 0/0
 34455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34460 ;;Total ram usage:        0 bytes
 34461 ;; Hardware stack levels used:    1
 34462 ;; Hardware stack levels required when called:    1
 34463 ;; This function calls:
 34464 ;;		i2_SPIPut
 34465 ;; This function is called by:
 34466 ;;		_HighISR
 34467 ;;		i2_RegisterRead
 34468 ;; This function uses a non-reentrant model
 34469 ;;
 34470                           
 34471                           	psect	text169
 34472  0075EA                     __ptext169:
 34473                           	opt stack 0
 34474  0075EA                     i2_SPIGet:
 34475                           	opt stack 14
 34476                           
 34477                           ;spi.c: 310: SPIPut(0x00);
 34478                           
 34479                           ;incstack = 0
 34480  0075EA  0E00               	movlw	0
 34481  0075EC  EC8E  F03A         	call	i2_SPIPut
 34482                           
 34483                           ;spi.c: 311: return SSPBUF;
 34484  0075F0  50C9               	movf	4041,w,c	;volatile
 34485  0075F2  0012               	return		;funcret
 34486  0075F4                     __end_ofi2_SPIGet:
 34487                           	opt stack 0
 34488                           tblptru	equ	0xFF8
 34489                           tblptrh	equ	0xFF7
 34490                           tblptrl	equ	0xFF6
 34491                           tablat	equ	0xFF5
 34492                           prodh	equ	0xFF4
 34493                           prodl	equ	0xFF3
 34494                           intcon	equ	0xFF2
 34495                           intcon2	equ	0xFF1
 34496                           intcon3	equ	0xFF0
 34497                           indf0	equ	0xFEF
 34498                           postinc0	equ	0xFEE
 34499                           plusw0	equ	0xFEB
 34500                           fsr0h	equ	0xFEA
 34501                           fsr0l	equ	0xFE9
 34502                           wreg	equ	0xFE8
 34503                           indf1	equ	0xFE7
 34504                           postinc1	equ	0xFE6
 34505                           postdec1	equ	0xFE5
 34506                           plusw1	equ	0xFE3
 34507                           fsr1h	equ	0xFE2
 34508                           fsr1l	equ	0xFE1
 34509                           indf2	equ	0xFDF
 34510                           postinc2	equ	0xFDE
 34511                           postdec2	equ	0xFDD
 34512                           plusw2	equ	0xFDB
 34513                           fsr2h	equ	0xFDA
 34514                           fsr2l	equ	0xFD9
 34515                           status	equ	0xFD8
 34516                           
 34517 ;; *************** function i2_SPIPut *****************
 34518 ;; Defined at:
 34519 ;;		line 226 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 34520 ;; Parameters:    Size  Location     Type
 34521 ;;  v               1    wreg     unsigned char 
 34522 ;; Auto vars:     Size  Location     Type
 34523 ;;  v               1    1[COMRAM] unsigned char 
 34524 ;;  SPIPut          1    0        volatile unsigned char 
 34525 ;; Return value:  Size  Location     Type
 34526 ;;                  1    wreg      void 
 34527 ;; Registers used:
 34528 ;;		wreg
 34529 ;; Tracked objects:
 34530 ;;		On entry : 0/3
 34531 ;;		On exit  : 0/0
 34532 ;;		Unchanged: 0/0
 34533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34538 ;;Total ram usage:        2 bytes
 34539 ;; Hardware stack levels used:    1
 34540 ;; This function calls:
 34541 ;;		Nothing
 34542 ;; This function is called by:
 34543 ;;		i2_SPIGet
 34544 ;;		i2_RegisterSet
 34545 ;;		i2_RegisterRead
 34546 ;;		i2_WriteFIFO
 34547 ;; This function uses a non-reentrant model
 34548 ;;
 34549                           
 34550                           	psect	text170
 34551  00751C                     __ptext170:
 34552                           	opt stack 0
 34553  00751C                     i2_SPIPut:
 34554                           	opt stack 15
 34555                           
 34556                           ;incstack = 0
 34557                           ;i2SPIPut@v stored from wreg
 34558  00751C  6E02               	movwf	i2SPIPut@v,c
 34559                           
 34560                           ;spi.c: 228: volatile uint8_t i;
 34561                           ;spi.c: 253: PIR1bits.SSPIF = 0;
 34562  00751E  969E               	bcf	3998,3,c	;volatile
 34563  007520  50C9               	movf	4041,w,c	;volatile
 34564  007522                     i2l78:
 34565                           
 34566                           ;spi.c: 256: {
 34567                           ;spi.c: 257: SSPCON1bits.WCOL = 0;
 34568  007522  9EC6               	bcf	4038,7,c	;volatile
 34569                           
 34570                           ;spi.c: 258: SSPBUF = v;
 34571  007524  C002  FFC9         	movff	i2SPIPut@v,4041	;volatile
 34572                           
 34573                           ;spi.c: 259: } while( SSPCON1bits.WCOL );
 34574  007528  BEC6               	btfsc	4038,7,c	;volatile
 34575  00752A  D7FB               	goto	i2l78
 34576  00752C                     i2l80:
 34577  00752C  B69E               	btfsc	3998,3,c	;volatile
 34578  00752E  0012               	return		;funcret
 34579  007530  D7FD               	goto	i2l80
 34580  007532                     __end_ofi2_SPIPut:
 34581                           	opt stack 0
 34582                           tblptru	equ	0xFF8
 34583                           tblptrh	equ	0xFF7
 34584                           tblptrl	equ	0xFF6
 34585                           tablat	equ	0xFF5
 34586                           prodh	equ	0xFF4
 34587                           prodl	equ	0xFF3
 34588                           intcon	equ	0xFF2
 34589                           intcon2	equ	0xFF1
 34590                           intcon3	equ	0xFF0
 34591                           indf0	equ	0xFEF
 34592                           postinc0	equ	0xFEE
 34593                           plusw0	equ	0xFEB
 34594                           fsr0h	equ	0xFEA
 34595                           fsr0l	equ	0xFE9
 34596                           wreg	equ	0xFE8
 34597                           indf1	equ	0xFE7
 34598                           postinc1	equ	0xFE6
 34599                           postdec1	equ	0xFE5
 34600                           plusw1	equ	0xFE3
 34601                           fsr1h	equ	0xFE2
 34602                           fsr1l	equ	0xFE1
 34603                           indf2	equ	0xFDF
 34604                           postinc2	equ	0xFDE
 34605                           postdec2	equ	0xFDD
 34606                           plusw2	equ	0xFDB
 34607                           fsr2h	equ	0xFDA
 34608                           fsr2l	equ	0xFD9
 34609                           status	equ	0xFD8
 34610                           
 34611 ;; *************** function i2_MiWi_TickGetMs *****************
 34612 ;; Defined at:
 34613 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 34614 ;; Parameters:    Size  Location     Type
 34615 ;;		None
 34616 ;; Auto vars:     Size  Location     Type
 34617 ;;  MiWi_TickGet    4   16[COMRAM] unsigned long 
 34618 ;; Return value:  Size  Location     Type
 34619 ;;                  4   12[COMRAM] struct MIWI_TICK_t
 34620 ;; Registers used:
 34621 ;;		wreg, status,2, status,0, cstack
 34622 ;; Tracked objects:
 34623 ;;		On entry : 0/0
 34624 ;;		On exit  : 0/0
 34625 ;;		Unchanged: 0/0
 34626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34630 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34631 ;;Total ram usage:        8 bytes
 34632 ;; Hardware stack levels used:    1
 34633 ;; Hardware stack levels required when called:    1
 34634 ;; This function calls:
 34635 ;;		i2_MiWi_TickGet
 34636 ;; This function is called by:
 34637 ;;		_HighISR
 34638 ;;		i2_TxPacket
 34639 ;; This function uses a non-reentrant model
 34640 ;;
 34641                           
 34642                           	psect	text171
 34643  0070BA                     __ptext171:
 34644                           	opt stack 0
 34645  0070BA                     i2_MiWi_TickGetMs:
 34646                           	opt stack 15
 34647                           
 34648                           ;symbol.c: 120: uint32_t tnow=MiWi_TickGet();
 34649                           
 34650                           ;incstack = 0
 34651  0070BA  ECFD  F036         	call	i2_MiWi_TickGet	;wreg free
 34652  0070BE  C001  F011         	movff	?i2_MiWi_TickGet,i2MiWi_TickGetMs@tnow
 34653  0070C2  C002  F012         	movff	?i2_MiWi_TickGet+1,i2MiWi_TickGetMs@tnow+1
 34654  0070C6  C003  F013         	movff	?i2_MiWi_TickGet+2,i2MiWi_TickGetMs@tnow+2
 34655  0070CA  C004  F014         	movff	?i2_MiWi_TickGet+3,i2MiWi_TickGetMs@tnow+3
 34656                           
 34657                           ;symbol.c: 123: currentTime.Val=tnow;
 34658  0070CE  C011  F196         	movff	i2MiWi_TickGetMs@tnow,_currentTime
 34659  0070D2  C012  F197         	movff	i2MiWi_TickGetMs@tnow+1,_currentTime+1
 34660  0070D6  C013  F198         	movff	i2MiWi_TickGetMs@tnow+2,_currentTime+2
 34661  0070DA  C014  F199         	movff	i2MiWi_TickGetMs@tnow+3,_currentTime+3
 34662                           
 34663                           ;symbol.c: 124: return(currentTime);
 34664  0070DE  C196  F00D         	movff	_currentTime,?i2_MiWi_TickGetMs
 34665  0070E2  C197  F00E         	movff	_currentTime+1,?i2_MiWi_TickGetMs+1
 34666  0070E6  C198  F00F         	movff	_currentTime+2,?i2_MiWi_TickGetMs+2
 34667  0070EA  C199  F010         	movff	_currentTime+3,?i2_MiWi_TickGetMs+3
 34668  0070EE  0012               	return		;funcret
 34669  0070F0                     __end_ofi2_MiWi_TickGetMs:
 34670                           	opt stack 0
 34671                           tblptru	equ	0xFF8
 34672                           tblptrh	equ	0xFF7
 34673                           tblptrl	equ	0xFF6
 34674                           tablat	equ	0xFF5
 34675                           prodh	equ	0xFF4
 34676                           prodl	equ	0xFF3
 34677                           intcon	equ	0xFF2
 34678                           intcon2	equ	0xFF1
 34679                           intcon3	equ	0xFF0
 34680                           indf0	equ	0xFEF
 34681                           postinc0	equ	0xFEE
 34682                           plusw0	equ	0xFEB
 34683                           fsr0h	equ	0xFEA
 34684                           fsr0l	equ	0xFE9
 34685                           wreg	equ	0xFE8
 34686                           indf1	equ	0xFE7
 34687                           postinc1	equ	0xFE6
 34688                           postdec1	equ	0xFE5
 34689                           plusw1	equ	0xFE3
 34690                           fsr1h	equ	0xFE2
 34691                           fsr1l	equ	0xFE1
 34692                           indf2	equ	0xFDF
 34693                           postinc2	equ	0xFDE
 34694                           postdec2	equ	0xFDD
 34695                           plusw2	equ	0xFDB
 34696                           fsr2h	equ	0xFDA
 34697                           fsr2l	equ	0xFD9
 34698                           status	equ	0xFD8
 34699                           
 34700 ;; *************** function i2_MiWi_TickGet *****************
 34701 ;; Defined at:
 34702 ;;		line 127 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 34703 ;; Parameters:    Size  Location     Type
 34704 ;;		None
 34705 ;; Auto vars:     Size  Location     Type
 34706 ;;  MiWi_TickGet    4    8[COMRAM] unsigned long 
 34707 ;;  MiWi_TickGet    4    4[COMRAM] unsigned long 
 34708 ;; Return value:  Size  Location     Type
 34709 ;;                  4    0[COMRAM] unsigned long 
 34710 ;; Registers used:
 34711 ;;		wreg, status,2, status,0
 34712 ;; Tracked objects:
 34713 ;;		On entry : 0/0
 34714 ;;		On exit  : 0/0
 34715 ;;		Unchanged: 0/0
 34716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34718 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34720 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34721 ;;Total ram usage:       12 bytes
 34722 ;; Hardware stack levels used:    1
 34723 ;; This function calls:
 34724 ;;		Nothing
 34725 ;; This function is called by:
 34726 ;;		i2_MiWi_TickGetMs
 34727 ;; This function uses a non-reentrant model
 34728 ;;
 34729                           
 34730                           	psect	text172
 34731  006DFA                     __ptext172:
 34732                           	opt stack 0
 34733  006DFA                     i2_MiWi_TickGet:
 34734                           	opt stack 15
 34735                           
 34736                           ;symbol.c: 129: uint32_t tmrval=0;
 34737                           
 34738                           ;incstack = 0
 34739  006DFA  6A09               	clrf	i2MiWi_TickGet@tmrval,c
 34740  006DFC  6A0A               	clrf	i2MiWi_TickGet@tmrval+1,c
 34741  006DFE  6A0B               	clrf	i2MiWi_TickGet@tmrval+2,c
 34742  006E00  6A0C               	clrf	i2MiWi_TickGet@tmrval+3,c
 34743  006E02                     i2l125:
 34744                           
 34745                           ;symbol.c: 133: {
 34746                           ;symbol.c: 134: t1fired=0;
 34747  006E02  6A44               	clrf	_t1fired,c	;volatile
 34748                           
 34749                           ;symbol.c: 136: t1ext=t1extension;
 34750  006E04  C19E  F005         	movff	_t1extension,i2MiWi_TickGet@t1ext
 34751  006E08  C19F  F006         	movff	_t1extension+1,i2MiWi_TickGet@t1ext+1
 34752  006E0C  C1A0  F007         	movff	_t1extension+2,i2MiWi_TickGet@t1ext+2
 34753  006E10  C1A1  F008         	movff	_t1extension+3,i2MiWi_TickGet@t1ext+3
 34754                           
 34755                           ;symbol.c: 137: } while(t1fired==1);
 34756  006E14  0444               	decf	_t1fired,w,c	;volatile
 34757  006E16  E0F5               	bz	i2l125
 34758                           
 34759                           ;symbol.c: 139: tmrval|=(((uint32_t)t1ext));
 34760  006E18  5005               	movf	i2MiWi_TickGet@t1ext,w,c
 34761  006E1A  1209               	iorwf	i2MiWi_TickGet@tmrval,f,c
 34762  006E1C  5006               	movf	i2MiWi_TickGet@t1ext+1,w,c
 34763  006E1E  120A               	iorwf	i2MiWi_TickGet@tmrval+1,f,c
 34764  006E20  5007               	movf	i2MiWi_TickGet@t1ext+2,w,c
 34765  006E22  120B               	iorwf	i2MiWi_TickGet@tmrval+2,f,c
 34766  006E24  5008               	movf	i2MiWi_TickGet@t1ext+3,w,c
 34767  006E26  120C               	iorwf	i2MiWi_TickGet@tmrval+3,f,c
 34768                           
 34769                           ;symbol.c: 140: return(tmrval);
 34770  006E28  C009  F001         	movff	i2MiWi_TickGet@tmrval,?i2_MiWi_TickGet
 34771  006E2C  C00A  F002         	movff	i2MiWi_TickGet@tmrval+1,?i2_MiWi_TickGet+1
 34772  006E30  C00B  F003         	movff	i2MiWi_TickGet@tmrval+2,?i2_MiWi_TickGet+2
 34773  006E34  C00C  F004         	movff	i2MiWi_TickGet@tmrval+3,?i2_MiWi_TickGet+3
 34774  006E38  0012               	return		;funcret
 34775  006E3A                     __end_ofi2_MiWi_TickGet:
 34776                           	opt stack 0
 34777                           tblptru	equ	0xFF8
 34778                           tblptrh	equ	0xFF7
 34779                           tblptrl	equ	0xFF6
 34780                           tablat	equ	0xFF5
 34781                           prodh	equ	0xFF4
 34782                           prodl	equ	0xFF3
 34783                           intcon	equ	0xFF2
 34784                           intcon2	equ	0xFF1
 34785                           intcon3	equ	0xFF0
 34786                           indf0	equ	0xFEF
 34787                           postinc0	equ	0xFEE
 34788                           plusw0	equ	0xFEB
 34789                           fsr0h	equ	0xFEA
 34790                           fsr0l	equ	0xFE9
 34791                           wreg	equ	0xFE8
 34792                           indf1	equ	0xFE7
 34793                           postinc1	equ	0xFE6
 34794                           postdec1	equ	0xFE5
 34795                           plusw1	equ	0xFE3
 34796                           fsr1h	equ	0xFE2
 34797                           fsr1l	equ	0xFE1
 34798                           indf2	equ	0xFDF
 34799                           postinc2	equ	0xFDE
 34800                           postdec2	equ	0xFDD
 34801                           plusw2	equ	0xFDB
 34802                           fsr2h	equ	0xFDA
 34803                           fsr2l	equ	0xFD9
 34804                           status	equ	0xFD8
 34805                           
 34806 ;; *************** function i2_DelayMs *****************
 34807 ;; Defined at:
 34808 ;;		line 34 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 34809 ;; Parameters:    Size  Location     Type
 34810 ;;  ms              4    8[COMRAM] unsigned long 
 34811 ;; Auto vars:     Size  Location     Type
 34812 ;;		None
 34813 ;; Return value:  Size  Location     Type
 34814 ;;                  1    wreg      void 
 34815 ;; Registers used:
 34816 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 34817 ;; Tracked objects:
 34818 ;;		On entry : 0/1
 34819 ;;		On exit  : 0/0
 34820 ;;		Unchanged: 0/0
 34821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34824 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34825 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34826 ;;Total ram usage:       12 bytes
 34827 ;; Hardware stack levels used:    1
 34828 ;; Hardware stack levels required when called:    1
 34829 ;; This function calls:
 34830 ;;		i2_DelayUS
 34831 ;; This function is called by:
 34832 ;;		i2_TxPacket
 34833 ;; This function uses a non-reentrant model
 34834 ;;
 34835                           
 34836                           	psect	text173
 34837  005D94                     __ptext173:
 34838                           	opt stack 0
 34839  005D94                     i2_DelayMs:
 34840                           	opt stack 15
 34841                           
 34842                           ;delay.c: 36: DelayUS(ms*1000);
 34843                           
 34844                           ;incstack = 0
 34845  005D94  C009  F00D         	movff	i2DelayMs@ms,??i2_DelayMs
 34846  005D98  C00A  F00E         	movff	i2DelayMs@ms+1,??i2_DelayMs+1
 34847  005D9C  C00B  F00F         	movff	i2DelayMs@ms+2,??i2_DelayMs+2
 34848  005DA0  C00C  F010         	movff	i2DelayMs@ms+3,??i2_DelayMs+3
 34849  005DA4  0EE8               	movlw	232
 34850  005DA6  020D               	mulwf	??i2_DelayMs& (0+255),c
 34851  005DA8  CFF3 F011          	movff	prodl,??i2_DelayMs+4
 34852  005DAC  CFF4 F012          	movff	prodh,??i2_DelayMs+5
 34853  005DB0  6A13               	clrf	(??i2_DelayMs+6)& (0+255),c
 34854  005DB2  6A14               	clrf	(??i2_DelayMs+7)& (0+255),c
 34855  005DB4  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 34856  005DB6  50F3               	movf	prodl,w,c
 34857  005DB8  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 34858  005DBA  50F4               	movf	prodh,w,c
 34859  005DBC  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 34860  005DBE  0E00               	movlw	0
 34861  005DC0  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 34862  005DC2  0E03               	movlw	3
 34863  005DC4  020D               	mulwf	??i2_DelayMs& (0+255),c
 34864  005DC6  50F3               	movf	prodl,w,c
 34865  005DC8  2612               	addwf	(??i2_DelayMs+5)& (0+255),f,c
 34866  005DCA  50F4               	movf	prodh,w,c
 34867  005DCC  2213               	addwfc	(??i2_DelayMs+6)& (0+255),f,c
 34868  005DCE  0E00               	movlw	0
 34869  005DD0  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 34870  005DD2  0EE8               	movlw	232
 34871  005DD4  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 34872  005DD6  50F3               	movf	prodl,w,c
 34873  005DD8  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 34874  005DDA  50F4               	movf	prodh,w,c
 34875  005DDC  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 34876  005DDE  0E03               	movlw	3
 34877  005DE0  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 34878  005DE2  50F3               	movf	prodl,w,c
 34879  005DE4  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 34880  005DE6  50F4               	movf	prodh,w,c
 34881  005DE8  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 34882  005DEA  0E00               	movlw	0
 34883  005DEC  020D               	mulwf	??i2_DelayMs& (0+255),c
 34884  005DEE  50F3               	movf	prodl,w,c
 34885  005DF0  2613               	addwf	(??i2_DelayMs+6)& (0+255),f,c
 34886  005DF2  50F4               	movf	prodh,w,c
 34887  005DF4  2214               	addwfc	(??i2_DelayMs+7)& (0+255),f,c
 34888  005DF6  0EE8               	movlw	232
 34889  005DF8  0210               	mulwf	(??i2_DelayMs+3)& (0+255),c
 34890  005DFA  50F3               	movf	prodl,w,c
 34891  005DFC  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 34892  005DFE  0E03               	movlw	3
 34893  005E00  020F               	mulwf	(??i2_DelayMs+2)& (0+255),c
 34894  005E02  50F3               	movf	prodl,w,c
 34895  005E04  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 34896  005E06  0E00               	movlw	0
 34897  005E08  020E               	mulwf	(??i2_DelayMs+1)& (0+255),c
 34898  005E0A  50F3               	movf	prodl,w,c
 34899  005E0C  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 34900  005E0E  0E00               	movlw	0
 34901  005E10  020D               	mulwf	??i2_DelayMs& (0+255),c
 34902  005E12  50F3               	movf	prodl,w,c
 34903  005E14  2614               	addwf	(??i2_DelayMs+7)& (0+255),f,c
 34904  005E16  C011  F001         	movff	??i2_DelayMs+4,i2DelayUS@delay
 34905  005E1A  C012  F002         	movff	??i2_DelayMs+5,i2DelayUS@delay+1
 34906  005E1E  C013  F003         	movff	??i2_DelayMs+6,i2DelayUS@delay+2
 34907  005E22  C014  F004         	movff	??i2_DelayMs+7,i2DelayUS@delay+3
 34908  005E26  EF5C  F039         	goto	i2_DelayUS	;wreg free
 34909  005E2A                     __end_ofi2_DelayMs:
 34910                           	opt stack 0
 34911                           tblptru	equ	0xFF8
 34912                           tblptrh	equ	0xFF7
 34913                           tblptrl	equ	0xFF6
 34914                           tablat	equ	0xFF5
 34915                           prodh	equ	0xFF4
 34916                           prodl	equ	0xFF3
 34917                           intcon	equ	0xFF2
 34918                           intcon2	equ	0xFF1
 34919                           intcon3	equ	0xFF0
 34920                           indf0	equ	0xFEF
 34921                           postinc0	equ	0xFEE
 34922                           plusw0	equ	0xFEB
 34923                           fsr0h	equ	0xFEA
 34924                           fsr0l	equ	0xFE9
 34925                           wreg	equ	0xFE8
 34926                           indf1	equ	0xFE7
 34927                           postinc1	equ	0xFE6
 34928                           postdec1	equ	0xFE5
 34929                           plusw1	equ	0xFE3
 34930                           fsr1h	equ	0xFE2
 34931                           fsr1l	equ	0xFE1
 34932                           indf2	equ	0xFDF
 34933                           postinc2	equ	0xFDE
 34934                           postdec2	equ	0xFDD
 34935                           plusw2	equ	0xFDB
 34936                           fsr2h	equ	0xFDA
 34937                           fsr2l	equ	0xFD9
 34938                           status	equ	0xFD8
 34939                           
 34940 ;; *************** function i2_DelayUS *****************
 34941 ;; Defined at:
 34942 ;;		line 6 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 34943 ;; Parameters:    Size  Location     Type
 34944 ;;  delay           4    0[COMRAM] unsigned long 
 34945 ;; Auto vars:     Size  Location     Type
 34946 ;;  DelayUS         4    4[COMRAM] unsigned long 
 34947 ;; Return value:  Size  Location     Type
 34948 ;;                  1    wreg      void 
 34949 ;; Registers used:
 34950 ;;		wreg, status,2, status,0
 34951 ;; Tracked objects:
 34952 ;;		On entry : 0/1
 34953 ;;		On exit  : 0/0
 34954 ;;		Unchanged: 0/0
 34955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34959 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34960 ;;Total ram usage:        8 bytes
 34961 ;; Hardware stack levels used:    1
 34962 ;; This function calls:
 34963 ;;		Nothing
 34964 ;; This function is called by:
 34965 ;;		i2_DelayMs
 34966 ;; This function uses a non-reentrant model
 34967 ;;
 34968                           
 34969                           	psect	text174
 34970  0072B8                     __ptext174:
 34971                           	opt stack 0
 34972  0072B8                     i2_DelayUS:
 34973                           	opt stack 15
 34974                           
 34975                           ;delay.c: 25: uint32_t i;
 34976                           ;delay.c: 27: for(i=0;i<delay;i++)
 34977                           
 34978                           ;incstack = 0
 34979  0072B8  6A05               	clrf	i2DelayUS@i,c
 34980  0072BA  6A06               	clrf	i2DelayUS@i+1,c
 34981  0072BC  6A07               	clrf	i2DelayUS@i+2,c
 34982  0072BE  6A08               	clrf	i2DelayUS@i+3,c
 34983  0072C0  D006               	goto	i2l5
 34984  0072C2                     i2l6:
 34985                           
 34986                           ;delay.c: 28: {
 34987                           ;delay.c: 29: __nop();
 34988  0072C2  F000               	nop	
 34989  0072C4  2A05               	incf	i2DelayUS@i,f,c
 34990  0072C6  0E00               	movlw	0
 34991  0072C8  2206               	addwfc	i2DelayUS@i+1,f,c
 34992  0072CA  2207               	addwfc	i2DelayUS@i+2,f,c
 34993  0072CC  2208               	addwfc	i2DelayUS@i+3,f,c
 34994  0072CE                     i2l5:
 34995  0072CE  5001               	movf	i2DelayUS@delay,w,c
 34996  0072D0  5C05               	subwf	i2DelayUS@i,w,c
 34997  0072D2  5002               	movf	i2DelayUS@delay+1,w,c
 34998  0072D4  5806               	subwfb	i2DelayUS@i+1,w,c
 34999  0072D6  5003               	movf	i2DelayUS@delay+2,w,c
 35000  0072D8  5807               	subwfb	i2DelayUS@i+2,w,c
 35001  0072DA  5004               	movf	i2DelayUS@delay+3,w,c
 35002  0072DC  5808               	subwfb	i2DelayUS@i+3,w,c
 35003  0072DE  E3F1               	bnc	i2l6
 35004  0072E0  0012               	return		;funcret
 35005  0072E2                     __end_ofi2_DelayUS:
 35006                           	opt stack 0
 35007                           tblptru	equ	0xFF8
 35008                           tblptrh	equ	0xFF7
 35009                           tblptrl	equ	0xFF6
 35010                           tablat	equ	0xFF5
 35011                           prodh	equ	0xFF4
 35012                           prodl	equ	0xFF3
 35013                           intcon	equ	0xFF2
 35014                           intcon2	equ	0xFF1
 35015                           intcon3	equ	0xFF0
 35016                           indf0	equ	0xFEF
 35017                           postinc0	equ	0xFEE
 35018                           plusw0	equ	0xFEB
 35019                           fsr0h	equ	0xFEA
 35020                           fsr0l	equ	0xFE9
 35021                           wreg	equ	0xFE8
 35022                           indf1	equ	0xFE7
 35023                           postinc1	equ	0xFE6
 35024                           postdec1	equ	0xFE5
 35025                           plusw1	equ	0xFE3
 35026                           fsr1h	equ	0xFE2
 35027                           fsr1l	equ	0xFE1
 35028                           indf2	equ	0xFDF
 35029                           postinc2	equ	0xFDE
 35030                           postdec2	equ	0xFDD
 35031                           plusw2	equ	0xFDB
 35032                           fsr2h	equ	0xFDA
 35033                           fsr2l	equ	0xFD9
 35034                           status	equ	0xFD8
 35035                           tblptru	equ	0xFF8
 35036                           tblptrh	equ	0xFF7
 35037                           tblptrl	equ	0xFF6
 35038                           tablat	equ	0xFF5
 35039                           prodh	equ	0xFF4
 35040                           prodl	equ	0xFF3
 35041                           intcon	equ	0xFF2
 35042                           intcon2	equ	0xFF1
 35043                           intcon3	equ	0xFF0
 35044                           indf0	equ	0xFEF
 35045                           postinc0	equ	0xFEE
 35046                           plusw0	equ	0xFEB
 35047                           fsr0h	equ	0xFEA
 35048                           fsr0l	equ	0xFE9
 35049                           wreg	equ	0xFE8
 35050                           indf1	equ	0xFE7
 35051                           postinc1	equ	0xFE6
 35052                           postdec1	equ	0xFE5
 35053                           plusw1	equ	0xFE3
 35054                           fsr1h	equ	0xFE2
 35055                           fsr1l	equ	0xFE1
 35056                           indf2	equ	0xFDF
 35057                           postinc2	equ	0xFDE
 35058                           postdec2	equ	0xFDD
 35059                           plusw2	equ	0xFDB
 35060                           fsr2h	equ	0xFDA
 35061                           fsr2l	equ	0xFD9
 35062                           status	equ	0xFD8
 35063                           
 35064                           	psect	rparam
 35065  0000                     tblptru	equ	0xFF8
 35066                           tblptrh	equ	0xFF7
 35067                           tblptrl	equ	0xFF6
 35068                           tablat	equ	0xFF5
 35069                           prodh	equ	0xFF4
 35070                           prodl	equ	0xFF3
 35071                           intcon	equ	0xFF2
 35072                           intcon2	equ	0xFF1
 35073                           intcon3	equ	0xFF0
 35074                           indf0	equ	0xFEF
 35075                           postinc0	equ	0xFEE
 35076                           plusw0	equ	0xFEB
 35077                           fsr0h	equ	0xFEA
 35078                           fsr0l	equ	0xFE9
 35079                           wreg	equ	0xFE8
 35080                           indf1	equ	0xFE7
 35081                           postinc1	equ	0xFE6
 35082                           postdec1	equ	0xFE5
 35083                           plusw1	equ	0xFE3
 35084                           fsr1h	equ	0xFE2
 35085                           fsr1l	equ	0xFE1
 35086                           indf2	equ	0xFDF
 35087                           postinc2	equ	0xFDE
 35088                           postdec2	equ	0xFDD
 35089                           plusw2	equ	0xFDB
 35090                           fsr2h	equ	0xFDA
 35091                           fsr2l	equ	0xFD9
 35092                           status	equ	0xFD8
 35093                           
 35094                           	psect	temp
 35095  00004F                     btemp:
 35096                           	opt stack 0
 35097  00004F                     	ds	1
 35098  0000                     int$flags	set	btemp
 35099                           tblptru	equ	0xFF8
 35100                           tblptrh	equ	0xFF7
 35101                           tblptrl	equ	0xFF6
 35102                           tablat	equ	0xFF5
 35103                           prodh	equ	0xFF4
 35104                           prodl	equ	0xFF3
 35105                           intcon	equ	0xFF2
 35106                           intcon2	equ	0xFF1
 35107                           intcon3	equ	0xFF0
 35108                           indf0	equ	0xFEF
 35109                           postinc0	equ	0xFEE
 35110                           plusw0	equ	0xFEB
 35111                           fsr0h	equ	0xFEA
 35112                           fsr0l	equ	0xFE9
 35113                           wreg	equ	0xFE8
 35114                           indf1	equ	0xFE7
 35115                           postinc1	equ	0xFE6
 35116                           postdec1	equ	0xFE5
 35117                           plusw1	equ	0xFE3
 35118                           fsr1h	equ	0xFE2
 35119                           fsr1l	equ	0xFE1
 35120                           indf2	equ	0xFDF
 35121                           postinc2	equ	0xFDE
 35122                           postdec2	equ	0xFDD
 35123                           plusw2	equ	0xFDB
 35124                           fsr2h	equ	0xFDA
 35125                           fsr2l	equ	0xFD9
 35126                           status	equ	0xFD8


Data Sizes:
    Strings     66
    Constant    1176
    Data        27
    BSS         2474
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      78
    BANK0           160    137     141
    BANK1           256    142     256
    BANK2           256     28     244
    BANK3           256      0     207
    BANK4           256      0     210
    BANK5           256      0     220
    BANK6           256      0     206
    BANK7           256      0     200
    BANK8           256      0     220
    BANK9           256      0      75
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    MiApp_UnicastAddress@Origin	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(COMRAM[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK1[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK3[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), rxMessage(BANK2[10]), sleepRFDData(BANK9[75]), LCDText(BANK3[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(COMRAM[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK1[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK3[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), rxMessage(BANK2[10]), sleepRFDData(BANK9[75]), LCDText(BANK3[33]), 

    memcpy@d1	PTR void  size(2) Largest target is 444
		 -> sleepRFDData.address(COMRAM[2]), beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), 
		 -> list.address(BANK8[2]), list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(COMRAM[64]), userdata(BANK6[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), 
		 -> NetworkManagerTask@data(BANK1[19]), routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), 
		 -> TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), 
		 -> LE_processReceivedMessage@ll_addr(BANK0[2]), networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 
		 -> RouteManagerProcessReceive@from(BANK0[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK2[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), key(BANK2[8]), MACTxBuffer(BANK3[64]), ConnectionTable.Address(BANK3[2]), 
		 -> MACRxPacket(BANK1[12]), MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), 
		 -> MiApp_EstablishConnection@src(COMRAM[2]), MiApp_StartConnection@src(BANK0[2]), ConnectionTable(BANK3[55]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), NULL(NULL[0]), sleepRFDData(BANK9[75]), lastSource(BANK1[2]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 444
		 -> sleepRFDData.address(COMRAM[2]), beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), 
		 -> list.address(BANK8[2]), list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(COMRAM[64]), userdata(BANK6[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), 
		 -> NetworkManagerTask@data(BANK1[19]), routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), 
		 -> TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), 
		 -> LE_processReceivedMessage@ll_addr(BANK0[2]), networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 
		 -> RouteManagerProcessReceive@from(BANK0[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK2[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), key(BANK2[8]), MACTxBuffer(BANK3[64]), ConnectionTable.Address(BANK3[2]), 
		 -> MACRxPacket(BANK1[12]), MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), 
		 -> MiApp_EstablishConnection@src(COMRAM[2]), MiApp_StartConnection@src(BANK0[2]), ConnectionTable(BANK3[55]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), NULL(NULL[0]), sleepRFDData(BANK9[75]), lastSource(BANK1[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 152
		 -> sleepRFDData.data(COMRAM[1]), Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), 
		 -> address.bytes(COMRAM[2]), IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), 
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(COMRAM[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK1[2]), 
		 -> address.bytes(COMRAM[2]), NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), 
		 -> TunnelManagerGetTunnel@device(BANK0[2]), tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), 
		 -> neighbor_tbl.ll_addr.bytes(BANK5[2]), neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK2[2]), 
		 -> radioReceivedPacket@child(BANK2[2]), source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK2[2]), RxPacket.Payload(BANK2[64]), 
		 -> transParam.DestPANID(COMRAM[2]), MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), 
		 -> RxPacket(BANK2[142]), address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), srcAddress.bytes(BANK1[2]), 
		 -> srcAddress(BANK1[2]), MiApp_EstablishConnection@src(COMRAM[2]), myPANID(COMRAM[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@addr8(BANK0[6]), NULL(NULL[0]), TxBuffer(BANK7[64]), sleepRFDData(BANK9[75]), 
		 -> myAddr(BANK1[2]), lastSource(BANK1[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 152
		 -> sleepRFDData.data(COMRAM[1]), Tick_MS(BANK2[8]), address.bytes(COMRAM[2]), DeviceManagerBufferDeviceData@address(BANK0[2]), 
		 -> address.bytes(COMRAM[2]), IsNetworkDevice@address(BANK0[2]), address.bytes(COMRAM[2]), NetworkSetAddressPAN@address(BANK0[2]), 
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(COMRAM[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent.bytes(BANK1[2]), 
		 -> address.bytes(COMRAM[2]), NetworkInit@address(BANK0[2]), MyAddress.bytes(BANK1[2]), MyAddress(BANK1[2]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TMQ.data(BANK6[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@device(BANK0[2]), 
		 -> TunnelManagerGetTunnel@device(BANK0[2]), tunnels.parent(BANK4[2]), tunnels.TxTime(BANK4[8]), tunnels(BANK4[120]), 
		 -> neighbor_tbl.ll_addr.bytes(BANK5[2]), neighbor_tbl.ll_addr(BANK5[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@parent(BANK2[2]), 
		 -> radioReceivedPacket@child(BANK2[2]), source.bytes(COMRAM[2]), radioReceivedPacket@source(BANK2[2]), RxPacket.Payload(BANK2[64]), 
		 -> transParam.DestPANID(COMRAM[2]), MiMAC_SendPacket@transParam(BANK0[5]), mySecurityKey(CODE[8]), OutgoingFrameCounter(BANK2[4]), 
		 -> RxPacket(BANK2[142]), address.bytes(COMRAM[2]), AddNodeToNetworkTable@address(BANK0[2]), srcAddress.bytes(BANK1[2]), 
		 -> srcAddress(BANK1[2]), MiApp_EstablishConnection@src(COMRAM[2]), myPANID(COMRAM[2]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@addr8(BANK0[6]), NULL(NULL[0]), TxBuffer(BANK7[64]), sleepRFDData(BANK9[75]), 
		 -> myAddr(BANK1[2]), lastSource(BANK1[2]), 

    memcmp@s2	PTR const void  size(1) Largest target is 12
		 -> a2.bytes(COMRAM[2]), isSameAddress@a2(BANK0[2]), isBroadcastAddress@addr(BANK0[8]), isKnownPacket@zeros(BANK0[12]), 

    memcmp@s1	PTR const void  size(2) Largest target is 360
		 -> a1.bytes(COMRAM[2]), isSameAddress@a1(BANK0[2]), address.bytes(COMRAM[2]), isBroadcastAddress@address(BANK0[2]), 
		 -> hc_table(BIGRAM[360]), 

    crc32@buf	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    crc32@p	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    DeviceManagerGetDeviceData@isFormed	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isFormed(BANK1[1]), 

    DeviceManagerGetDeviceData@isSecure	PTR unsigned char  size(2) Largest target is 1
		 -> NetworkManagerProcessIncomingData@isSecurePacket(BANK1[1]), 

    DeviceManagerGetDeviceData@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), 

    DeviceManagerGetDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 75
		 -> NULL(NULL[0]), sleepRFDData(BANK9[75]), 

    DeviceManagerBufferDeviceData@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), TxBuffer(BANK7[64]), 

    DeviceManagerBufferDeviceData@devBuffer	PTR struct devDataBuffer_t_def size(2) Largest target is 75
		 -> NULL(NULL[0]), sleepRFDData(BANK9[75]), 

    MiApp_InitSleepRFDBuffers@buffer	PTR unsigned char  size(2) Largest target is 75
		 -> sleepRFDData(BANK9[75]), 

    devBuffers	PTR unsigned char  size(2) Largest target is 75
		 -> NULL(NULL[0]), sleepRFDData(BANK9[75]), 

    NetworkSendDiscoverResponse@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), 

    NetworkPrepareSendPacket@data	PTR unsigned char  size(2) Largest target is 152
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMQ(BANK6[152]), NULL(NULL[0]), TxBuffer(BANK7[64]), 

    NetworkPrepareSendPacket@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(COMRAM[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkPrepareSendPacket@nHdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(COMRAM[64]), NetworkManagerTask@data(BANK1[19]), 
		 -> TMSendDataToRFD@databuff(BANK1[64]), TransportManagerTask@databuff(BANK1[64]), NetworkBroadcastData@databuff(COMRAM[64]), 

    NetworkManagerProcessIncomingData@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    NetworkManagerProcessIncomingData@dHdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    TMSendFormedPacketToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 

    TMSendFormedPacketToRFD@myaddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    TMSendDataToRFD@data	PTR unsigned char  size(2) Largest target is 64
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), NULL(NULL[0]), TxBuffer(BANK7[64]), 

    TMSendFormedPacketTowardsCoordinator@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 
		 -> TxBuffer(BANK7[64]), 

    TunnelManagerSetTunnel@parent	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@parent(BANK2[2]), 

    TunnelManagerSetTunnel@device	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@child(BANK2[2]), 

    BroadcastManagerDelaySend@pkt	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkSendDiscoverResponse@databuff(BANK1[64]), NetworkSendDiscoverRequest@databuff(COMRAM[64]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> NetworkBroadcastData@databuff(COMRAM[64]), RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    LE_processReceivedMessage@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK2[2]), 

    LE_processReceivedMessage@hdr	PTR struct linkest_header_t_def size(2) Largest target is 142
		 -> RxPacket.lnk_header(BANK2[2]), RxPacket(BANK2[142]), 

    LE_processReceivedMessage@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    LE_processReceivedMessage@bhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    le_updateNeighborTableEst@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_updateETX@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    le_initNeighborIdx@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LE_ClearDLQ@ne	PTR struct neighbor_table_entry size(2) Largest target is 220
		 -> neighbor_tbl(BANK5[220]), 

    LEAppendNeighborInfo@data	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    sp__LEAppendNeighborInfo	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@last	PTR unsigned char  size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@adr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    networkSendBeacon@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 72
		 -> beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 

    networkSendBeacon@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RoutingTableFindDeviceOrParent@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK4[90]), 

    RouteManagerShouldInsert@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK4[90]), 

    RouteManagerShouldInsert@hdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    RouteManagerShouldInsert@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    RouteManagerProcessReceive@source	PTR struct addr_t_def size(2) Largest target is 2
		 -> radioReceivedPacket@source(BANK2[2]), 

    RouteManagerProcessReceive@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    RouteManagerProcessReceive@rcvBeacon	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    RouterEvicted@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    routeInfoInit@ri	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RouteManagerPerformUpdate@entry	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK4[90]), 

    RouteManagerPerformUpdate@best	PTR struct routing_table_entry_t_def size(2) Largest target is 90
		 -> routingTable(BANK4[90]), NULL(NULL[0]), 

    sp__NetworkGetMyRouteInfo	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    RouteManagerPerformUpdate@r	PTR struct route_info_t_def size(2) Largest target is 7
		 -> routeInfo(BANK1[7]), 

    NetworkUnicastData@data	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuffer(BANK7[64]), 

    NetworkUnicastData@mAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    sp__NetworkManagerGetMyAddress	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@myAddr	PTR struct addr_t_def size(2) Largest target is 2
		 -> MyAddress(BANK1[2]), 

    radioReceivedPacket@dhdr	PTR struct net_data_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    radioReceivedPacket@data	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    radioReceivedPacket@rhdr	PTR struct net_routing_header_t_def size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[19]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK3[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    CCM_Dec@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Dec@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    CCM_Enc@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CCM_Enc@text	PTR unsigned char  size(2) Largest target is 64
		 -> MACTxBuffer(BANK3[64]), 

    CBC_MAC@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CBC_MAC@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), MACTxBuffer(BANK3[64]), 

    CBC_MAC@MIC	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    CTR@text	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), MACTxBuffer(BANK3[64]), 

    CTR@key	PTR unsigned char  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    CTR@nounce	PTR unsigned char  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    encode@key	PTR unsigned int  size(2) Largest target is 8
		 -> key(BANK2[8]), 

    encode@text	PTR unsigned int  size(2) Largest target is 4
		 -> tmpBlock(BANK1[4]), 

    HighISR@dPan	PTR unsigned char  size(1) Largest target is 2
		 -> HighISR@dstPan(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 64
		 -> TxBuff(BANK7[64]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK1[2]), radioBroadcast@addr(BANK1[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    NetworkDataArrivedEvent@data	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK6[54]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> lastSource(BANK1[2]), 

    MiApp_SetAddressPan@address	PTR unsigned char  size(2) Largest target is 2
		 -> MiApp_EstablishConnection@src(COMRAM[2]), myLongAddress(BANK1[2]), myAddr(BANK1[2]), 

    S1790$PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 2
		 -> myLongAddress(BANK1[2]), 

    radioUnicast@data	PTR unsigned char  size(2) Largest target is 142
		 -> NetworkIssueDataRequest@data(COMRAM[10]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), NetworkManagerTask@data(BANK1[19]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    radioBroadcast@data	PTR unsigned char  size(2) Largest target is 444
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK1[2]), radioBroadcast@addr(BANK1[2]), 

    S1766$DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK1[2]), radioBroadcast@addr(BANK1[2]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 2
		 -> radioUnicast@addr(BANK1[2]), radioBroadcast@addr(BANK1[2]), 

    S1727$Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket(BANK2[142]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), 

    S1727$SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket(BANK2[142]), NULL(NULL[0]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 142
		 -> RxPacket.Payload(BANK2[64]), RxPacket(BANK2[142]), NULL(NULL[0]), 

    Read_MAC_Address@pAddress	PTR unsigned char  size(1) Largest target is 2
		 -> Read_MAC_Address@address(BANK0[2]), 

    EEPROMRead@dest	PTR unsigned char  size(1) Largest target is 6
		 -> Read_MAC_Address@addr8(BANK0[6]), 

    sp__memcpy	PTR void  size(2) Largest target is 444
		 -> sleepRFDData.address(COMRAM[2]), beaconMessageBuffer.parent(BANK7[2]), beaconMessageBuffer.data.parent(COMRAM[2]), MSTickGet@tNow(BANK0[8]), 
		 -> list.address(BANK8[2]), list(BANK8[220]), NetworkIssueDataRequest@data(COMRAM[10]), NetworkSendDiscoverResponse@databuff(BANK1[64]), 
		 -> NetworkSendDiscoverRequest@databuff(COMRAM[64]), userdata(BANK6[54]), NetworkManagerProcessIncomingData@buffer(BANK1[64]), routeInfo.parent(BANK1[2]), 
		 -> NetworkManagerTask@data(BANK1[19]), routeInfo(BANK1[7]), MyAddress(BANK1[2]), TMSendDataToRFD@databuff(BANK1[64]), 
		 -> TransportManagerTask@databuff(BANK1[64]), TMQ(BANK6[152]), TunnelManagerInvalidateTunnel@addr(BANK0[2]), TunnelManagerGetTunnel@addr(BANK0[2]), 
		 -> TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), RbcQ(BIGRAM[444]), 
		 -> LE_processReceivedMessage@ll_addr(BANK0[2]), networkSendBeacon@bt(BANK0[2]), beaconMessageBuffer.data(BANK7[64]), beaconMessageBuffer(BANK7[72]), 
		 -> RouteManagerProcessReceive@from(BANK0[2]), NetworkBroadcastData@databuff(COMRAM[64]), radioReceivedPacket@bt(BANK2[2]), MiMAC_ReceivedPacket@FrameCounter(BANK0[4]), 
		 -> MiMAC_ReceivedPacket@addr(BANK0[2]), key(BANK2[8]), MACTxBuffer(BANK3[64]), ConnectionTable.Address(BANK3[2]), 
		 -> MACRxPacket(BANK1[12]), MiApp_MessageAvailable@src(BANK1[2]), MiApp_UnicastAddress@src(BANK0[2]), MiApp_SetAddressPan@addr(BANK0[2]), 
		 -> MiApp_EstablishConnection@src(COMRAM[2]), MiApp_StartConnection@src(BANK0[2]), ConnectionTable(BANK3[55]), myLongAddress(BANK1[2]), 
		 -> Read_MAC_Address@address(BANK0[2]), NULL(NULL[0]), sleepRFDData(BANK9[75]), lastSource(BANK1[2]), 

    S1500$Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK6[54]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 54
		 -> userdata(BANK6[54]), 

    S1500$SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress(BANK1[2]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 2
		 -> srcAddress.bytes(BANK1[2]), srcAddress(BANK1[2]), 

    sp__memset	PTR void  size(2) Largest target is 444
		 -> Tick_MS(BANK2[8]), list(BANK8[220]), IsNetworkDevice@oldest(BANK0[8]), NetworkSendDiscoverResponse@address(BANK1[2]), 
		 -> NetworkSendDiscoverRequest@address(COMRAM[2]), CoordinatorGenericAddress@address(BANK1[2]), routeInfo.parent(BANK1[2]), CoordinatorAddr(BANK1[2]), 
		 -> routeInfo(BANK1[7]), TMQ(BANK6[152]), hc_table(BIGRAM[360]), isKnownPacket@zeros(BANK0[12]), 
		 -> isKnownPacket@OldestTick(BANK0[8]), TunnelManagerGetTunnel@retAddr(BANK0[2]), tunnels(BANK4[120]), TunnelManagerSetTunnel@OldestTick(BANK0[8]), 
		 -> RbcQ(BIGRAM[444]), beaconMessageBuffer(BANK7[72]), RoutingTableFindDeviceOrParent@res(BANK0[2]), NewBestParent(BANK1[2]), 
		 -> NetworkBroadcastData@address(COMRAM[2]), ActiveScanResults(BANK3[25]), ConnectionTable(BANK3[55]), radioBroadcast@addr(BANK1[2]), 
		 -> NULL(NULL[0]), rxMessage(BANK2[10]), sleepRFDData(BANK9[75]), LCDText(BANK3[33]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_TxPacket
    i2_TxPacket->i2_DelayMs
    i2_TxPacket->i2_MiWi_TickGetMs
    i2_WriteFIFO->i2_SPIPut
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPIPut
    i2_RegisterRead->i2_SPIPut
    i2_SPIGet->i2_SPIPut
    i2_MiWi_TickGetMs->i2_MiWi_TickGet
    i2_DelayMs->i2_DelayUS

Critical Paths under _main in BANK0

    _sprintf->___lwdiv
    _Read_MAC_Address->_memcpy
    _EEPROMRead->_SPIPut2
    _SPIGet2->_SPIPut2
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _MiApp_StartConnection->_NetworkInit
    _TunnelManagerInit->_memset
    _TransportManagerInit->_memset
    _RouteManagerInit->_MSTickGet
    _DeviceManagerInit->_memset
    _CacheInit->_memset
    _BroadcastManagerInit->_memset
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_DelayMs
    _MiApp_SetAddressPan->_NetworkSetAddressPAN
    _NetworkSetAddressPAN->_memcpy
    _MiApp_MessageAvailable->_radioReceivedPacket
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _isKnownPacket->_MSTickGetDiffNow
    _TunnelManagerSetTunnel->_MSTickGet
    _RouteManagerProcessReceive->_LE_InsertNeighbor
    _routingTableUpdateEntry->_LELinkQualityGet
    _routingTableUpdateEntry->_routingTableFind
    _LE_InsertNeighbor->_RouterEvicted
    _NetworkSendDiscoverResponse->_BroadcastManagerDelaySend
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _TMSendDataToRFD->_TMSendFormedPacketToRFD
    _TMSendFormedPacketToRFD->_radioUnicast
    _TunnelManagerInvalidateTunnel->_isSameAddress
    _TunnelManagerGetTunnel->_MSTickGetDiffNow
    _TMSendFormedPacketTowardsCoordinator->_NetworkHasRoute
    _LE_RemoveNeighborDevice->_RouterEvicted
    _GetRouteAddressOfChild->_RoutingTableFindDeviceOrParent
    _RoutingTableFindDeviceOrParent->_isSameAddress
    _BroadcastManagerDelaySend->_AddMSToTick
    _AddMSToTick->_MSTickGet
    _NetworkDataArrivedEvent->_memset
    _IsNetworkDevice->_MSTickGet
    _DeviceManagerGetDeviceData->_isSameAddress
    _LE_processReceivedMessage->_le_updateNeighborEntryIdx
    _le_updateNeighborEntryIdx->_le_updateNeighborTableEst
    _le_updateNeighborTableEst->_le_updateETX
    _le_updateETX->_le_computeETX
    _le_computeETX->___awdiv
    _le_findWorstNeighborIdx->_isSameAddress
    _le_findRandomNeighborIdx->___lwmod
    _RouteManagerShouldInsert->_isInvalidAddress
    _IsMemberOfNetwork->_NetworkHasRoute
    _DeviceManagerGetDeviceType->_isSameAddress
    _DeviceManagerBufferDeviceData->_memcpy
    _BlinkRedLED->_LEDCommand
    _TransportManagerTask->_radioUnicast
    _radioUnicast->_SendPacket
    _RouterEvicted->_routingTableFind
    _routingTableFind->_isInvalidAddress
    _routeInfoInit->_memset
    _NetworkPrepareSendPacket->_memcpy
    _CoordinatorGenericAddress->_memset
    _RouteManagerTask->_MSTickGetDiffNow
    _LE_UnpinNeighbor->_le_findIdx
    _LE_PinNeighbor->_le_findIdx
    _LE_ClearDLQ->_le_findIdx
    _netResetInterval->_netChooseAdvertiseTime
    _BroadcastManagerTask->_radioBroadcast
    _BeaconManagerTask->_networkSendBeacon
    _networkSendBeacon->_radioBroadcast
    _radioBroadcast->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_CCM_Enc
    _TxPacket->_DelayMs
    _TxPacket->_MiWi_TickGetMs
    _WriteFIFO->_SPIPut
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPIPut
    _RegisterRead->_SPIPut
    _SPIGet->_SPIPut
    _CCM_Enc->_CBC_MAC
    _CCM_Enc->_CTR
    _NetworkHasRoute->_isInvalidAddress
    _isInvalidAddress->_isBroadcastAddress
    _isBroadcastAddress->_memcmp
    _LELinkQualityGet->_le_findIdx
    _le_findIdx->_isSameAddress
    _LEAppendNeighborInfo->___lwmod
    ___lwmod->_krnd
    _netDecayInterval->_netChooseAdvertiseTime
    _netChooseAdvertiseTime->_MSTickGet
    ___llmod->_krnd
    _MSTickGetDiffNow->_MSTickGet
    _MSTickGet->_memcpy
    _MiMAC_ReceivedPacket->_CCM_Dec
    _CCM_Dec->_CBC_MAC
    _CCM_Dec->_CTR
    _CTR->_encode
    _CBC_MAC->_encode
    _AddNodeToNetworkTable->_isSameAddress
    _memcpy->_NetworkManagerGetMyAddress
    _isSameAddress->_CoordinatorGenericAddress
    _MiApp_InitSleepRFDBuffers->_memset
    _LEDManagerTask->_MiWi_TickGetMs
    _LCD_WriteData->_SPIPut2
    _LCDInit->_DelayMs
    _LCD_WriteCmd->_SPIPut2
    _DelayMs->_DelayUS
    _ButtonTask->_MiWi_TickGetMs
    _MiWi_TickGetMs->_MiWi_TickGet

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MiApp_MessageAvailable
    _MiApp_UnicastAddress->_NetworkUnicastData
    _NetworkUnicastData->_TMSendDataToRFD
    _radioReceivedPacket->_NetworkManagerProcessIncomingData
    _NetworkManagerProcessIncomingData->_TMSendDataToRFD
    _NetworkManagerTask->_TransportManagerTask

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _MiApp_MessageAvailable->_radioReceivedPacket

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HighISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 3264458
                                            140 BANK1      2     2      0
                         _ButtonTask
                       _HardwareInit
                    _InitSymbolTimer
                          _LCDUpdate
                         _LEDCommand
                     _LEDManagerTask
               _MiApp_DiscardMessage
          _MiApp_InitSleepRFDBuffers
             _MiApp_MessageAvailable
                 _MiApp_ProtocolInit
                _MiApp_SetAddressPan
                   _MiApp_SetChannel
              _MiApp_StartConnection
               _MiApp_UnicastAddress
                   _Read_MAC_Address
                    _isButtonPressed
                             _memcpy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    22      8    4347
                                             26 BANK0     21    13      8
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     440
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _isButtonPressed                                      4     4      0      65
                                             19 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Read_MAC_Address                                    14    12      2   18544
                                             31 BANK0     14    12      2
                         _EEPROMRead
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _EEPROMRead                                           3     0      3     479
                                             21 BANK0      3     0      3
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIGet2                                              0     0      0      34
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (1) _MiApp_UnicastAddress                                 7     2      5  417153
                                            127 BANK0      2     2      0
                                             71 BANK1      5     0      5
                 _NetworkUnicastData
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkUnicastData                                  10     3      7  399757
                                            124 BANK0      3     3      0
                                             64 BANK1      7     0      7
                 _CoordinatorAddress
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
               _NetworkGetDeviceType
         _NetworkManagerGetMyAddress
                    _TMSendDataToRFD
_TMSendFormedPacketTowardsCoordinato
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (1) _MiApp_StartConnection                                8     3      5  166505
                                             58 BANK0      7     2      5
                        _NetworkInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NetworkInit                                          7     2      5  149314
                                             51 BANK0      7     2      5
                  _BeaconManagerInit
               _BroadcastManagerInit
                          _CacheInit
                  _DeviceManagerInit
                  _LinkEstimatorInit
              _NetworkAddressSizeGet
               _NetworkSetAddressPAN
                   _RouteManagerInit
               _TransportManagerInit
                  _TunnelManagerInit
                               _krnd
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TunnelManagerInit                                    0     0      0   11309
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TransportManagerInit                                 0     0      0   11309
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerInit                                     0     0      0   28258
                          _MSTickGet
                             _memset
 ---------------------------------------------------------------------------------
 (3) _LinkEstimatorInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerInit                                    0     0      0   11309
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CacheInit                                            0     0      0   11309
                             _memset
 ---------------------------------------------------------------------------------
 (3) _BroadcastManagerInit                                 0     0      0   11309
                             _memset
 ---------------------------------------------------------------------------------
 (3) _BeaconManagerInit                                    0     0      0   17797
                               _krnd
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (1) _MiApp_SetChannel                                     2     2      0    4358
                                             28 BANK0      2     2      0
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (2) _MiMAC_SetChannel                                     3     2      1    4245
                                             25 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (1) _MiApp_ProtocolInit                                   5     5      0   71378
                                             46 BANK0      4     4      0
                _MiApp_SetAddressPan
                         _MiMAC_Init
               _NetworkSetDeviceType
                             _memset
 ---------------------------------------------------------------------------------
 (2) _NetworkSetDeviceType                                 1     1      0      31
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MiMAC_Init                                           7     4      3   24656
                                             39 BANK0      7     4      3
                            _DelayMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                               _krnd
                           _krndInit
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _krndInit                                             6     4      2     259
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _MiApp_SetAddressPan                                  6     2      4   35254
                                             35 BANK0      6     2      4
               _NetworkSetAddressPAN
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _NetworkSetAddressPAN                                 4     0      4   17469
                                             31 BANK0      4     0      4
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _MiApp_MessageAvailable                               6     6      0 2509695
                                            134 BANK1      6     6      0
              _AddNodeToNetworkTable
               _MiMAC_ReceivedPacket
                     _MiWi_TickGetMs
                 _NetworkManagerTask
                        _TimeTickISR
                             _memcpy
                _radioReceivedPacket
 ---------------------------------------------------------------------------------
 (2) _radioReceivedPacket                                 34    23     11 1658783
                                            131 BANK0      6     6      0
                                              0 BANK2     28    17     11
                        _BlinkRedLED
          _BroadcastManagerDelaySend
          _CoordinatorGenericAddress
      _DeviceManagerBufferDeviceData
         _DeviceManagerGetDeviceType
             _GetRouteAddressOfChild
                  _IsMemberOfNetwork
                    _IsNetworkDevice
            _LE_RemoveNeighborDevice
          _LE_processReceivedMessage
             _NetworkDiscoveredEvent
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
  _NetworkManagerProcessIncomingData
        _NetworkSendDiscoverResponse
         _RouteManagerProcessReceive
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
             _TunnelManagerSetTunnel
                              _crc32
                 _isBroadcastAddress
                      _isKnownPacket
                      _isSameAddress
                             _memcpy
                 _radioDiscardPacket
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (3) _radioDiscardPacket                                   0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (4) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isKnownPacket                                       39    35      4   49570
                                             75 BANK0     39    35      4
                          _MSTickGet
                   _MSTickGetDiffNow
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (3) _crc32                                               20    12      8     645
                                             19 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (3) _TunnelManagerSetTunnel                              35    31      4   56577
                                             47 BANK0     26    22      4
                          _MSTickGet
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerProcessReceive                          13     8      5  173991
                                             60 BANK0     13     8      5
               _BeaconManagerTrigger
                  _LE_InsertNeighbor
                     _LE_PinNeighbor
              _NetworkAddressSizeGet
   _RouteManagerSetNeighborCongested
                      _RouterEvicted
                   _isInvalidAddress
                             _memcpy
            _routingTableUpdateEntry
 ---------------------------------------------------------------------------------
 (4) _routingTableUpdateEntry                             10     4      6   27394
                                             46 BANK0      9     3      6
                   _LELinkQualityGet
               _passLinkEtxThreshold
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (4) _RouteManagerSetNeighborCongested                     3     0      3     242
                                             19 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _LE_InsertNeighbor                                    6     3      3   59224
                                             54 BANK0      6     3      3
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
 ---------------------------------------------------------------------------------
 (3) _NetworkSendDiscoverResponse                         70    70      0   73387
                                              0 BANK1     70    70      0
          _BroadcastManagerDelaySend
              _NetworkAddressSizeGet
           _NetworkPrepareSendPacket
           _isNetworkSecurityEnabled
                             _memset
 ---------------------------------------------------------------------------------
 (3) _NetworkManagerProcessIncomingData                   77    71      6  760231
                                            124 BANK0      7     1      6
                                             64 BANK1     70    70      0
               _BeaconManagerTrigger
         _DeviceManagerGetDeviceData
                    _IsNetworkDevice
            _NetworkDataArrivedEvent
               _NetworkGetDeviceType
                    _TMSendDataToRFD
            _TMSendFormedPacketToRFD
                   _isInvalidAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TMSendDataToRFD                                     72    64      8  321993
                                            116 BANK0      8     0      8
                                              0 BANK1     64    64      0
           _NetworkPrepareSendPacket
            _TMSendFormedPacketToRFD
 ---------------------------------------------------------------------------------
 (4) _TMSendFormedPacketToRFD                             15     8      7  297651
                                            101 BANK0     15     8      7
          _BroadcastManagerDelaySend
             _GetRouteAddressOfChild
            _LE_RemoveNeighborDevice
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
_TMSendFormedPacketTowardsCoordinato
             _TunnelManagerGetTunnel
      _TunnelManagerInvalidateTunnel
                 _isBroadcastAddress
                      _isSameAddress
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerInvalidateTunnel                        8     6      2   38133
                                             33 BANK0      8     6      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _TunnelManagerGetTunnel                              22    20      2   56975
                                             75 BANK0     22    20      2
                   _MSTickGetDiffNow
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _TMSendFormedPacketTowardsCoordinator                11     5      6   26492
                                             41 BANK0     11     5      6
                    _NetworkHasRoute
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LE_RemoveNeighborDevice                              6     4      2   47363
                                             54 BANK0      6     4      2
                      _RouterEvicted
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _GetRouteAddressOfChild                               6     4      2   32765
                                             43 BANK0      6     4      2
                 _CoordinatorAddress
           _LE_GetNeighborDeviceType
     _RoutingTableFindDeviceOrParent
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _RoutingTableFindDeviceOrParent                      10     8      2   21297
                                             33 BANK0     10     8      2
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memset
 ---------------------------------------------------------------------------------
 (6) _LE_GetNeighborDeviceType                             6     4      2     259
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _CoordinatorAddress                                   2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _BroadcastManagerDelaySend                           15     9      6   40276
                                             63 BANK0     15     9      6
                        _AddMSToTick
                          _MSTickGet
           _isNetworkSecurityEnabled (ARG)
                               _krnd
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AddMSToTick                                         16     4     12     560
                                             47 BANK0     16     4     12
                          _MSTickGet (ARG)
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (4) _NetworkDataArrivedEvent                              7     0      7   12445
                                             27 BANK0      7     0      7
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IsNetworkDevice                                     18    15      3   59799
                                             47 BANK0     18    15      3
                          _MSTickGet
              _NetworkAddressSizeGet
                   _isInvalidAddress
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _DeviceManagerGetDeviceData                          22    14      8   27810
                                             33 BANK0     22    14      8
              _NetworkAddressSizeGet
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _NetworkDiscoveredEvent                              12     8      4    1154
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _LE_processReceivedMessage                           16    10      6  120612
                                             63 BANK0     15     9      6
              _NetworkAddressSizeGet
           _RouteManagerShouldInsert
                      _RouterEvicted
            _le_findEmptyNeighborIdx
                         _le_findIdx
           _le_findRandomNeighborIdx
            _le_findWorstNeighborIdx
                 _le_initNeighborIdx
          _le_updateNeighborEntryIdx
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _le_updateNeighborEntryIdx                            6     4      2   18492
                                             57 BANK0      6     4      2
                 _le_initNeighborIdx
          _le_updateNeighborTableEst
 ---------------------------------------------------------------------------------
 (5) _le_updateNeighborTableEst                           18    16      2   15968
                                             40 BANK0     17    15      2
                            ___lldiv
                            ___lwdiv
                      _isSameAddress
                      _le_computeETX
                       _le_updateETX
 ---------------------------------------------------------------------------------
 (6) _le_updateETX                                         8     4      4    1920
                                             32 BANK0      8     4      4
                            ___lwdiv
                      _le_computeETX (ARG)
 ---------------------------------------------------------------------------------
 (6) _le_computeETX                                        5     3      2    1058
                                             27 BANK0      5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     872
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     826
                                             19 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _le_initNeighborIdx                                   5     3      2    1110
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _le_findWorstNeighborIdx                             15    13      2   10095
                                             33 BANK0     15    13      2
            _NetworkGetParentAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (4) _le_findRandomNeighborIdx                            10     8      2   11071
                                             36 BANK0     10     8      2
            _NetworkGetParentAddress
                            ___lwmod
                      _isSameAddress
                               _krnd
 ---------------------------------------------------------------------------------
 (5) _le_findEmptyNeighborIdx                              8     6      2     234
                                             19 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _RouteManagerShouldInsert                            15    13      2   14025
                                             39 BANK0     15    13      2
            _NetworkGetParentAddress
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _IsMemberOfNetwork                                    0     0      0    4055
                    _NetworkHasRoute
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerGetDeviceType                           7     5      2    9923
                                             33 BANK0      7     5      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (3) _DeviceManagerBufferDeviceData                       21    13      8   19191
                                             31 BANK0     21    13      8
              _NetworkAddressSizeGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _BlinkRedLED                                          0     0      0     410
                         _LEDCommand
 ---------------------------------------------------------------------------------
 (4) _LEDCommand                                           3     2      1     410
                                             19 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TimeTickISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NetworkManagerTask                                  25    25      0  758610
                                            115 BANK0      4     4      0
                                             68 BANK1     21    21      0
                  _BeaconManagerTask
               _BroadcastManagerTask
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                _MiApp_IsNetworkBusy
               _NetworkGetDeviceType
                    _NetworkGetPANID
            _NetworkGetParentAddress
           _NetworkPrepareSendPacket
                _RMRoutingTableCount
          _RouteManagerPerformUpdate
                   _RouteManagerTask
                      _RouterEvicted
               _TransportManagerTask
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                               _krnd
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (3) _TransportManagerTask                                72    72      0  167495
                                            101 BANK0      4     4      0
                                              0 BANK1     68    68      0
          _CoordinatorGenericAddress
                          _MSTickGet
                   _MSTickGetDiffNow
                    _NetworkGetPANID
            _NetworkGetParentAddress
                    _NetworkHasRoute
           _NetworkPrepareSendPacket
                      _RouterEvicted
                             _memcpy
                       _radioUnicast
 ---------------------------------------------------------------------------------
 (5) _radioUnicast                                         9     1      8   40787
                                             92 BANK0      9     1      8
                    _NetworkGetPANID (ARG)
            _NetworkGetParentAddress (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
 ---------------------------------------------------------------------------------
 (6) _RouterEvicted                                        8     6      2   36256
                                             46 BANK0      8     6      2
              _NetworkGetMyRouteInfo
            _NetworkGetParentAddress (ARG)
          _RouteManagerRequestUpdate
                      _isSameAddress
                      _routeInfoInit
                   _routingTableFind
 ---------------------------------------------------------------------------------
 (7) _routingTableFind                                     7     5      2   13870
                                             39 BANK0      7     5      2
                   _isInvalidAddress
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (7) _routeInfoInit                                        2     0      2   11640
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (7) _RouteManagerRequestUpdate                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NetworkPrepareSendPacket                            11     2      9   21382
                                             31 BANK0     11     2      9
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
            _NetworkGetParentAddress
         _NetworkManagerGetMyAddress
                    _NetworkSequence
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _NetworkSequence                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkGetParentAddress                              2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CoordinatorGenericAddress                            2     0      2   11309
                                             27 BANK0      2     0      2
              _NetworkAddressSizeGet
                             _memset
 ---------------------------------------------------------------------------------
 (3) _RouteManagerTask                                     0     0      0  113720
                          _MSTickGet
                   _MSTickGetDiffNow
          _RouteManagerPerformUpdate
 ---------------------------------------------------------------------------------
 (4) _RouteManagerPerformUpdate                           18    18      0   78253
                                             51 BANK0     18    18      0
               _BeaconManagerTrigger
                   _LELinkQualityGet
                        _LE_ClearDLQ
                     _LE_PinNeighbor
                   _LE_UnpinNeighbor
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
            _TransportManagerNoRoute
         _TransportManagerRouteFound
                   _isInvalidAddress
                      _isSameAddress
               _passLinkEtxThreshold
 ---------------------------------------------------------------------------------
 (5) _passLinkEtxThreshold                                 2     0      2     284
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _TransportManagerRouteFound                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TransportManagerNoRoute                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LE_UnpinNeighbor                                     7     5      2   10964
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (4) _LE_PinNeighbor                                       7     5      2   11079
                                             37 BANK0      7     5      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (5) _LE_ClearDLQ                                          9     7      2   11054
                                             37 BANK0      9     7      2
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (4) _BeaconManagerTrigger                                 0     0      0   17707
                   _netResetInterval
 ---------------------------------------------------------------------------------
 (4) _netResetInterval                                     0     0      0   17707
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (3) _RMRoutingTableCount                                  2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _MiApp_IsNetworkBusy                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BroadcastManagerTask                                14    14      0   77760
                                             99 BANK0     14    14      0
                          _MSTickGet
                    _NetworkGetPANID
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (3) _BeaconManagerTask                                    0     0      0  171826
                          _MSTickGet
                   _MSTickGetDiffNow
                   _netDecayInterval
                  _networkSendBeacon
 ---------------------------------------------------------------------------------
 (4) _networkSendBeacon                                   18    18      0  118652
                                             99 BANK0     16    16      0
               _LEAppendNeighborInfo
                   _LELinkQualityGet
              _NetworkAddressSizeGet
               _NetworkGetDeviceType
              _NetworkGetMyRouteInfo
                    _NetworkGetPANID
                    _NetworkHasRoute
         _NetworkManagerGetMyAddress
                   _isInvalidAddress
           _isNetworkSecurityEnabled
                             _memcpy
                             _memset
                     _radioBroadcast
 ---------------------------------------------------------------------------------
 (4) _radioBroadcast                                       7     1      6   48932
                                             92 BANK0      7     1      6
                    _NetworkGetPANID (ARG)
                         _SendPacket
           _isNetworkSecurityEnabled (ARG)
                             _memset
 ---------------------------------------------------------------------------------
 (6) _SendPacket                                          14     8      6   36391
                                             78 BANK0     14     8      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SendPacket                                    12     4      8   34931
                                             66 BANK0     12     4      8
                            _CCM_Enc
                           _TxPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TxPacket                                            24    23      1    8159
                                             39 BANK0     23    22      1
                            _DelayMs
                     _MiWi_TickGetMs
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _WriteFIFO                                            2     2      0     138
                                             21 BANK0      2     2      0
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _SetRFMode                                            1     1      0    2020
                                             24 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (10) _RegisterSet                                         3     1      2    1978
                                             21 BANK0      3     1      2
                             _SPIPut
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         3     3      0     240
                                             21 BANK0      3     3      0
                             _SPIGet
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIGet                                              0     0      0      48
                             _SPIPut
 ---------------------------------------------------------------------------------
 (10) _SPIPut                                              2     2      0      48
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _CCM_Enc                                             11     5      6    7942
                                             55 BANK0     11     5      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (4) _isNetworkSecurityEnabled                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkManagerGetMyAddress                           2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _NetworkHasRoute                                      2     2      0    4055
                                             39 BANK0      2     2      0
               _NetworkGetDeviceType
                   _isInvalidAddress
 ---------------------------------------------------------------------------------
 (5) _isInvalidAddress                                     2     0      2    3941
                                             37 BANK0      2     0      2
            _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress
 ---------------------------------------------------------------------------------
 (6) _isBroadcastAddress                                  11     9      2    2447
                                             26 BANK0     11     9      2
              _NetworkAddressSizeGet
                             _memcmp
 ---------------------------------------------------------------------------------
 (5) _NetworkGetDeviceType                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _NetworkGetPANID                                      2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _NetworkGetMyRouteInfo                                2     0      2       0
                                             19 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _LELinkQualityGet                                     9     5      4   12025
                                             37 BANK0      9     5      4
                         _le_findIdx
 ---------------------------------------------------------------------------------
 (6) _le_findIdx                                           4     2      2   10691
                                             33 BANK0      4     2      2
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (5) _LEAppendNeighborInfo                                18    14      4   20451
                                             36 BANK0     18    14      4
              _NetworkAddressSizeGet
                            ___lwdiv
                            ___lwmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     808
                                             31 BANK0      5     1      4
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (4) _netDecayInterval                                     0     0      0   17707
             _netChooseAdvertiseTime
 ---------------------------------------------------------------------------------
 (5) _netChooseAdvertiseTime                               4     4      0   17707
                                             47 BANK0      4     4      0
                          _MSTickGet
                            ___llmod
                               _krnd
 ---------------------------------------------------------------------------------
 (9) _krnd                                                12     8      4      90
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     566
                                             31 BANK0      9     1      8
                               _krnd (ARG)
 ---------------------------------------------------------------------------------
 (6) _MSTickGetDiffNow                                    28    20      8   18518
                                             47 BANK0     28    20      8
                          _MSTickGet
 ---------------------------------------------------------------------------------
 (7) _MSTickGet                                           16     8      8   16949
                                             31 BANK0     16     8      8
                 _TimerEnterCritical
                  _TimerExitCritical
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _TimerExitCritical                                    0     0      0       0
                        _TimerEnable
 ---------------------------------------------------------------------------------
 (9) _TimerEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TimerEnterCritical                                   0     0      0       0
                       _TimerDisable
 ---------------------------------------------------------------------------------
 (9) _TimerDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiMAC_ReceivedPacket                                21    21      0   36426
                                             68 BANK0     21    21      0
                            _CCM_Dec
                     _MiWi_TickGetMs
                      _isSameAddress
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _CCM_Dec                                             13     7      6    7942
                                             55 BANK0     13     7      6
                            _CBC_MAC
                                _CTR
 ---------------------------------------------------------------------------------
 (9) _CTR                                                 13     6      7    3228
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (9) _CBC_MAC                                             13     6      7    3228
                                             42 BANK0     13     6      7
                             _encode
 ---------------------------------------------------------------------------------
 (10) _encode                                             23    19      4    1420
                                             19 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (2) _AddNodeToNetworkTable                               12     8      4   38693
                                             33 BANK0     12     8      4
                      _isSameAddress
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              10     4      6   16853
                                             21 BANK0     10     4      6
              _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
 ---------------------------------------------------------------------------------
 (3) _isSameAddress                                        4     0      4    9405
                                             29 BANK0      4     0      4
                 _CoordinatorAddress (ARG)
          _CoordinatorGenericAddress (ARG)
              _NetworkAddressSizeGet
            _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
                             _memcmp
 ---------------------------------------------------------------------------------
 (4) _memcmp                                               7     2      5    1311
                                             19 BANK0      7     2      5
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _MiApp_InitSleepRFDBuffers                            8     2      6   13518
                                             27 BANK0      8     2      6
              _NetworkAddressSizeGet
                            ___lwdiv
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6   11309
                                             19 BANK0      8     2      6
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1552
                                             19 BANK0      7     3      4
              _NetworkAddressSizeGet (ARG)
 ---------------------------------------------------------------------------------
 (4) _NetworkAddressSizeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MiApp_DiscardMessage                                 0     0      0       0
             _NetworkReleaseUserData
 ---------------------------------------------------------------------------------
 (2) _NetworkReleaseUserData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDManagerTask                                      12    12      0    2136
                                             39 BANK0     12    12      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (1) _LCDUpdate                                            1     1      0    3756
                                             39 BANK0      1     1      0
                            _DelayUS
                            _LCDInit
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    2686
                            _DelayMs
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         1     1      0      65
                                             21 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _SPIPut2                                              2     2      0      34
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _DelayMs                                             12     8      4    2621
                                             27 BANK0     12     8      4
                            _DelayUS
 ---------------------------------------------------------------------------------
 (10) _DelayUS                                             8     4      4     580
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitSymbolTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HardwareInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ButtonTask                                           1     1      0     330
                                             39 BANK0      1     1      0
                     _MiWi_TickGetMs
 ---------------------------------------------------------------------------------
 (9) _MiWi_TickGetMs                                       8     4      4     150
                                             31 BANK0      8     4      4
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (10) _MiWi_TickGet                                       12     8      4     102
                                             19 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HighISR                                            29    29      0    4742
                                             43 COMRAM    10    10      0
                                              0 BANK0     19    19      0
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                           i2_SPIGet
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (14) i2_TxPacket                                         24    23      1    1843
                                             20 COMRAM    23    22      1
                          i2_DelayMs
                   i2_MiWi_TickGetMs
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
                             i2_krnd
 ---------------------------------------------------------------------------------
 (15) i2_krnd                                             12     8      4      65
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (15) i2_WriteFIFO                                         2     2      0      99
                                              2 COMRAM     2     2      0
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_SetRFMode                                         1     1      0     371
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (16) i2_RegisterSet                                       3     1      2     340
                                              2 COMRAM     3     1      2
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (15) i2_RegisterRead                                      3     3      0     170
                                              2 COMRAM     3     3      0
                           i2_SPIGet
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SPIGet                                            0     0      0      34
                           i2_SPIPut
 ---------------------------------------------------------------------------------
 (16) i2_SPIPut                                            2     2      0      34
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) i2_MiWi_TickGetMs                                    8     4      4     105
                                             12 COMRAM     8     4      4
                     i2_MiWi_TickGet
 ---------------------------------------------------------------------------------
 (16) i2_MiWi_TickGet                                     12     8      4      71
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (15) i2_DelayMs                                          12     8      4     169
                                              8 COMRAM    12     8      4
                          i2_DelayUS
 ---------------------------------------------------------------------------------
 (16) i2_DelayUS                                           8     4      4     103
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _HardwareInit
   _InitSymbolTimer
   _LCDUpdate
     _DelayUS
     _LCDInit
       _DelayMs
         _DelayUS
       _LCD_WriteCmd
         _SPIPut2
     _LCD_WriteCmd
       _SPIPut2
     _LCD_WriteData
       _SPIPut2
   _LEDCommand
   _LEDManagerTask
     _MiWi_TickGetMs
       _MiWi_TickGet
   _MiApp_DiscardMessage
     _NetworkReleaseUserData
   _MiApp_InitSleepRFDBuffers
     _NetworkAddressSizeGet
     ___lwdiv
       _NetworkAddressSizeGet (ARG)
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_MessageAvailable
     _AddNodeToNetworkTable
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _MiMAC_ReceivedPacket
       _CCM_Dec
         _CBC_MAC
           _encode
         _CTR
           _encode
       _MiWi_TickGetMs
         _MiWi_TickGet
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiWi_TickGetMs
       _MiWi_TickGet
     _NetworkManagerTask
       _BeaconManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _netDecayInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
         _networkSendBeacon
           _LEAppendNeighborInfo
             _NetworkAddressSizeGet
             ___lwdiv
               _NetworkAddressSizeGet (ARG)
             ___lwmod
               _krnd (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkGetPANID
           _NetworkHasRoute
             _NetworkGetDeviceType
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isNetworkSecurityEnabled
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
           _radioBroadcast
             _NetworkGetPANID (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _memset (ARG)
               _NetworkAddressSizeGet (ARG)
       _BroadcastManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _memset
           _NetworkAddressSizeGet (ARG)
         _radioBroadcast
           _NetworkGetPANID (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _memset (ARG)
             _NetworkAddressSizeGet (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _MSTickGet
         _TimerEnterCritical
           _TimerDisable
         _TimerExitCritical
           _TimerEnable
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _MSTickGetDiffNow
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
       _MiApp_IsNetworkBusy
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkPrepareSendPacket
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _NetworkSequence (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RMRoutingTableCount
       _RouteManagerPerformUpdate
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LELinkQualityGet
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_ClearDLQ
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _LE_UnpinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _NetworkGetMyRouteInfo
         _NetworkManagerGetMyAddress
         _TransportManagerNoRoute
         _TransportManagerRouteFound
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _passLinkEtxThreshold
       _RouteManagerTask
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _RouteManagerPerformUpdate
           _BeaconManagerTrigger
             _netResetInterval
               _netChooseAdvertiseTime
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 ___llmod
                   _krnd (ARG)
                 _krnd
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_ClearDLQ
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_PinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_UnpinNeighbor
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetMyRouteInfo
           _NetworkManagerGetMyAddress
           _TransportManagerNoRoute
           _TransportManagerRouteFound
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
       _RouterEvicted
         _NetworkGetMyRouteInfo
         _NetworkGetParentAddress (ARG)
         _RouteManagerRequestUpdate (ARG)
         _isSameAddress (ARG)
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _routeInfoInit (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _routingTableFind (ARG)
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _TransportManagerTask
         _CoordinatorGenericAddress
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkGetPANID
         _NetworkGetParentAddress
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _radioUnicast
           _NetworkGetPANID (ARG)
           _NetworkGetParentAddress (ARG)
           _SendPacket (ARG)
             _MiMAC_SendPacket
               _CCM_Enc
                 _CBC_MAC
                   _encode
                 _CTR
                   _encode
               _TxPacket
                 _DelayMs
                   _DelayUS
                 _MiWi_TickGetMs
                   _MiWi_TickGet
                 _RegisterRead
                   _SPIGet
                     _SPIPut
                   _SPIPut
                 _RegisterSet
                   _SPIPut
                 _SetRFMode
                   _RegisterSet
                     _SPIPut
                 _WriteFIFO
                   _SPIPut
                 _krnd
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
       _isInvalidAddress
         _NetworkGetParentAddress (ARG)
         _isBroadcastAddress (ARG)
           _NetworkAddressSizeGet
           _memcmp
             _NetworkAddressSizeGet (ARG)
       _isNetworkSecurityEnabled
       _krnd
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
     _TimeTickISR
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
     _radioReceivedPacket
       _BlinkRedLED
         _LEDCommand
       _BroadcastManagerDelaySend
         _AddMSToTick
           _MSTickGet (ARG)
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _krnd (ARG)
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
         _krnd (ARG)
         _memcpy (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _GetRouteAddressOfChild
         _CoordinatorAddress
         _LE_GetNeighborDeviceType
         _RoutingTableFindDeviceOrParent
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _IsMemberOfNetwork
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
       _IsNetworkDevice
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _LE_RemoveNeighborDevice
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
       _LE_processReceivedMessage
         _NetworkAddressSizeGet
         _RouteManagerShouldInsert
           _NetworkGetParentAddress
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _le_findEmptyNeighborIdx
         _le_findIdx
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_findRandomNeighborIdx
           _NetworkGetParentAddress
           ___lwmod
             _krnd (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _krnd
         _le_findWorstNeighborIdx
           _NetworkGetParentAddress
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
         _le_initNeighborIdx
         _le_updateNeighborEntryIdx
           _le_initNeighborIdx
           _le_updateNeighborTableEst
             ___lldiv
             ___lwdiv
               _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _le_computeETX
               ___awdiv
             _le_updateETX
               ___lwdiv
                 _NetworkAddressSizeGet (ARG)
               _le_computeETX (ARG)
                 ___awdiv
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkDiscoveredEvent
       _NetworkGetDeviceType
       _NetworkGetPANID
       _NetworkGetParentAddress
       _NetworkManagerGetMyAddress
       _NetworkManagerProcessIncomingData
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _DeviceManagerGetDeviceData
           _NetworkAddressSizeGet
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _IsNetworkDevice
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _NetworkAddressSizeGet
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkDataArrivedEvent
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkGetDeviceType
         _TMSendDataToRFD
           _NetworkPrepareSendPacket
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _NetworkSequence (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TMSendFormedPacketToRFD
             _BroadcastManagerDelaySend
               _AddMSToTick
                 _MSTickGet (ARG)
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                 _krnd (ARG)
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
               _krnd (ARG)
               _memcpy (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _GetRouteAddressOfChild
               _CoordinatorAddress
               _LE_GetNeighborDeviceType
               _RoutingTableFindDeviceOrParent
                 _NetworkAddressSizeGet
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _LE_RemoveNeighborDevice
               _RouterEvicted
                 _NetworkGetMyRouteInfo
                 _NetworkGetParentAddress (ARG)
                 _RouteManagerRequestUpdate (ARG)
                 _isSameAddress (ARG)
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
                 _routeInfoInit (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _routingTableFind (ARG)
                   _isInvalidAddress
                     _NetworkGetParentAddress (ARG)
                     _isBroadcastAddress (ARG)
                       _NetworkAddressSizeGet
                       _memcmp
                         _NetworkAddressSizeGet (ARG)
                   _isSameAddress
                     _CoordinatorAddress (ARG)
                     _CoordinatorGenericAddress (ARG)
                       _NetworkAddressSizeGet
                       _memset
                         _NetworkAddressSizeGet (ARG)
                     _NetworkAddressSizeGet (ARG)
                     _NetworkGetParentAddress (ARG)
                     _NetworkManagerGetMyAddress (ARG)
                     _memcmp (ARG)
                       _NetworkAddressSizeGet (ARG)
               _le_findIdx
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _NetworkGetDeviceType
             _NetworkGetPANID
             _NetworkGetParentAddress
             _NetworkManagerGetMyAddress
             _TMSendFormedPacketTowardsCoordinator
               _NetworkHasRoute
                 _NetworkGetDeviceType
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _TunnelManagerGetTunnel
               _MSTickGetDiffNow
                 _MSTickGet
                   _TimerEnterCritical
                     _TimerDisable
                   _TimerExitCritical
                     _TimerEnable
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _TunnelManagerInvalidateTunnel
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _isBroadcastAddress
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _radioUnicast
               _NetworkGetPANID (ARG)
               _NetworkGetParentAddress (ARG)
               _SendPacket (ARG)
                 _MiMAC_SendPacket
                   _CCM_Enc
                     _CBC_MAC
                       _encode
                     _CTR
                       _encode
                   _TxPacket
                     _DelayMs
                       _DelayUS
                     _MiWi_TickGetMs
                       _MiWi_TickGet
                     _RegisterRead
                       _SPIGet
                         _SPIPut
                       _SPIPut
                     _RegisterSet
                       _SPIPut
                     _SetRFMode
                       _RegisterSet
                         _SPIPut
                     _WriteFIFO
                       _SPIPut
                     _krnd
                   _memcpy
                     _NetworkAddressSizeGet (ARG)
                     _NetworkManagerGetMyAddress (ARG)
               _isNetworkSecurityEnabled (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _NetworkSendDiscoverResponse
         _BroadcastManagerDelaySend
           _AddMSToTick
             _MSTickGet (ARG)
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _krnd (ARG)
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _isNetworkSecurityEnabled (ARG)
           _krnd (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled
         _memset
           _NetworkAddressSizeGet (ARG)
       _RouteManagerProcessReceive
         _BeaconManagerTrigger
           _netResetInterval
             _netChooseAdvertiseTime
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               ___llmod
                 _krnd (ARG)
               _krnd
         _LE_InsertNeighbor
           _RouterEvicted
             _NetworkGetMyRouteInfo
             _NetworkGetParentAddress (ARG)
             _RouteManagerRequestUpdate (ARG)
             _isSameAddress (ARG)
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _routeInfoInit (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _routingTableFind (ARG)
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _le_findEmptyNeighborIdx
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_findWorstNeighborIdx
             _NetworkGetParentAddress
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
           _le_initNeighborIdx
         _LE_PinNeighbor
           _le_findIdx
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet
         _RouteManagerSetNeighborCongested
         _RouterEvicted
           _NetworkGetMyRouteInfo
           _NetworkGetParentAddress (ARG)
           _RouteManagerRequestUpdate (ARG)
           _isSameAddress (ARG)
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _routeInfoInit (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _routingTableFind (ARG)
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
         _isInvalidAddress
           _NetworkGetParentAddress (ARG)
           _isBroadcastAddress (ARG)
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _routingTableUpdateEntry
           _LELinkQualityGet
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _passLinkEtxThreshold
           _routingTableFind
             _isInvalidAddress
               _NetworkGetParentAddress (ARG)
               _isBroadcastAddress (ARG)
                 _NetworkAddressSizeGet
                 _memcmp
                   _NetworkAddressSizeGet (ARG)
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _TunnelManagerGetTunnel
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInvalidateTunnel
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerSetTunnel
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _NetworkAddressSizeGet
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _crc32
       _isBroadcastAddress
         _NetworkAddressSizeGet
         _memcmp
           _NetworkAddressSizeGet (ARG)
       _isKnownPacket
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _MSTickGetDiffNow
           _MSTickGet
             _TimerEnterCritical
               _TimerDisable
             _TimerExitCritical
               _TimerEnable
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _memcmp
           _NetworkAddressSizeGet (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _radioDiscardPacket
         _MiMAC_DiscardPacket
       _radioUnicast
         _NetworkGetPANID (ARG)
         _NetworkGetParentAddress (ARG)
         _SendPacket (ARG)
           _MiMAC_SendPacket
             _CCM_Enc
               _CBC_MAC
                 _encode
               _CTR
                 _encode
             _TxPacket
               _DelayMs
                 _DelayUS
               _MiWi_TickGetMs
                 _MiWi_TickGet
               _RegisterRead
                 _SPIGet
                   _SPIPut
                 _SPIPut
               _RegisterSet
                 _SPIPut
               _SetRFMode
                 _RegisterSet
                   _SPIPut
               _WriteFIFO
                 _SPIPut
               _krnd
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
         _isNetworkSecurityEnabled (ARG)
   _MiApp_ProtocolInit
     _MiApp_SetAddressPan
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _MiMAC_Init
       _DelayMs
         _DelayUS
       _RegisterRead
         _SPIGet
           _SPIPut
         _SPIPut
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
       _krnd
       _krndInit
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _NetworkSetDeviceType
     _memset
       _NetworkAddressSizeGet (ARG)
   _MiApp_SetAddressPan
     _NetworkSetAddressPAN
       _NetworkAddressSizeGet
       _NetworkGetDeviceType
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_SetChannel
     _MiMAC_SetChannel
       _RegisterSet
         _SPIPut
       _SetRFMode
         _RegisterSet
           _SPIPut
   _MiApp_StartConnection
     _NetworkInit
       _BeaconManagerInit
         _krnd
         _netResetInterval
           _netChooseAdvertiseTime
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             ___llmod
               _krnd (ARG)
             _krnd
       _BroadcastManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _CacheInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _LinkEstimatorInit
       _NetworkAddressSizeGet
       _NetworkSetAddressPAN
         _NetworkAddressSizeGet
         _NetworkGetDeviceType
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _RouteManagerInit
         _MSTickGet
           _TimerEnterCritical
             _TimerDisable
           _TimerExitCritical
             _TimerEnable
           _memcpy
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _memset
           _NetworkAddressSizeGet (ARG)
       _TransportManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _TunnelManagerInit
         _memset
           _NetworkAddressSizeGet (ARG)
       _krnd
       _memcpy
         _NetworkAddressSizeGet (ARG)
         _NetworkManagerGetMyAddress (ARG)
       _memset
         _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _MiApp_UnicastAddress
     _NetworkUnicastData
       _CoordinatorAddress
       _CoordinatorGenericAddress
         _NetworkAddressSizeGet
         _memset
           _NetworkAddressSizeGet (ARG)
       _DeviceManagerBufferDeviceData
         _NetworkAddressSizeGet
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _DeviceManagerGetDeviceType
         _isSameAddress
           _CoordinatorAddress (ARG)
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _memcmp (ARG)
             _NetworkAddressSizeGet (ARG)
       _NetworkGetDeviceType
       _NetworkManagerGetMyAddress
       _TMSendDataToRFD
         _NetworkPrepareSendPacket
           _CoordinatorGenericAddress (ARG)
             _NetworkAddressSizeGet
             _memset
               _NetworkAddressSizeGet (ARG)
           _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType (ARG)
           _NetworkGetParentAddress (ARG)
           _NetworkManagerGetMyAddress (ARG)
           _NetworkSequence (ARG)
           _memcpy (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkManagerGetMyAddress (ARG)
         _TMSendFormedPacketToRFD
           _BroadcastManagerDelaySend
             _AddMSToTick
               _MSTickGet (ARG)
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
               _krnd (ARG)
             _MSTickGet
               _TimerEnterCritical
                 _TimerDisable
               _TimerExitCritical
                 _TimerEnable
               _memcpy
                 _NetworkAddressSizeGet (ARG)
                 _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
             _krnd (ARG)
             _memcpy (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _GetRouteAddressOfChild
             _CoordinatorAddress
             _LE_GetNeighborDeviceType
             _RoutingTableFindDeviceOrParent
               _NetworkAddressSizeGet
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _memset
                 _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _LE_RemoveNeighborDevice
             _RouterEvicted
               _NetworkGetMyRouteInfo
               _NetworkGetParentAddress (ARG)
               _RouteManagerRequestUpdate (ARG)
               _isSameAddress (ARG)
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
               _routeInfoInit (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _routingTableFind (ARG)
                 _isInvalidAddress
                   _NetworkGetParentAddress (ARG)
                   _isBroadcastAddress (ARG)
                     _NetworkAddressSizeGet
                     _memcmp
                       _NetworkAddressSizeGet (ARG)
                 _isSameAddress
                   _CoordinatorAddress (ARG)
                   _CoordinatorGenericAddress (ARG)
                     _NetworkAddressSizeGet
                     _memset
                       _NetworkAddressSizeGet (ARG)
                   _NetworkAddressSizeGet (ARG)
                   _NetworkGetParentAddress (ARG)
                   _NetworkManagerGetMyAddress (ARG)
                   _memcmp (ARG)
                     _NetworkAddressSizeGet (ARG)
             _le_findIdx
               _isSameAddress
                 _CoordinatorAddress (ARG)
                 _CoordinatorGenericAddress (ARG)
                   _NetworkAddressSizeGet
                   _memset
                     _NetworkAddressSizeGet (ARG)
                 _NetworkAddressSizeGet (ARG)
                 _NetworkGetParentAddress (ARG)
                 _NetworkManagerGetMyAddress (ARG)
                 _memcmp (ARG)
                   _NetworkAddressSizeGet (ARG)
           _NetworkGetDeviceType
           _NetworkGetPANID
           _NetworkGetParentAddress
           _NetworkManagerGetMyAddress
           _TMSendFormedPacketTowardsCoordinator
             _NetworkHasRoute
               _NetworkGetDeviceType
               _isInvalidAddress
                 _NetworkGetParentAddress (ARG)
                 _isBroadcastAddress (ARG)
                   _NetworkAddressSizeGet
                   _memcmp
                     _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
           _TunnelManagerGetTunnel
             _MSTickGetDiffNow
               _MSTickGet
                 _TimerEnterCritical
                   _TimerDisable
                 _TimerExitCritical
                   _TimerEnable
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _TunnelManagerInvalidateTunnel
             _NetworkAddressSizeGet
             _isSameAddress
               _CoordinatorAddress (ARG)
               _CoordinatorGenericAddress (ARG)
                 _NetworkAddressSizeGet
                 _memset
                   _NetworkAddressSizeGet (ARG)
               _NetworkAddressSizeGet (ARG)
               _NetworkGetParentAddress (ARG)
               _NetworkManagerGetMyAddress (ARG)
               _memcmp (ARG)
                 _NetworkAddressSizeGet (ARG)
             _memcpy
               _NetworkAddressSizeGet (ARG)
               _NetworkManagerGetMyAddress (ARG)
             _memset
               _NetworkAddressSizeGet (ARG)
           _isBroadcastAddress
             _NetworkAddressSizeGet
             _memcmp
               _NetworkAddressSizeGet (ARG)
           _isSameAddress
             _CoordinatorAddress (ARG)
             _CoordinatorGenericAddress (ARG)
               _NetworkAddressSizeGet
               _memset
                 _NetworkAddressSizeGet (ARG)
             _NetworkAddressSizeGet (ARG)
             _NetworkGetParentAddress (ARG)
             _NetworkManagerGetMyAddress (ARG)
             _memcmp (ARG)
               _NetworkAddressSizeGet (ARG)
           _radioUnicast
             _NetworkGetPANID (ARG)
             _NetworkGetParentAddress (ARG)
             _SendPacket (ARG)
               _MiMAC_SendPacket
                 _CCM_Enc
                   _CBC_MAC
                     _encode
                   _CTR
                     _encode
                 _TxPacket
                   _DelayMs
                     _DelayUS
                   _MiWi_TickGetMs
                     _MiWi_TickGet
                   _RegisterRead
                     _SPIGet
                       _SPIPut
                     _SPIPut
                   _RegisterSet
                     _SPIPut
                   _SetRFMode
                     _RegisterSet
                       _SPIPut
                   _WriteFIFO
                     _SPIPut
                   _krnd
                 _memcpy
                   _NetworkAddressSizeGet (ARG)
                   _NetworkManagerGetMyAddress (ARG)
             _isNetworkSecurityEnabled (ARG)
       _TMSendFormedPacketTowardsCoordinator
         _NetworkHasRoute
           _NetworkGetDeviceType
           _isInvalidAddress
             _NetworkGetParentAddress (ARG)
             _isBroadcastAddress (ARG)
               _NetworkAddressSizeGet
               _memcmp
                 _NetworkAddressSizeGet (ARG)
         _memcpy
           _NetworkAddressSizeGet (ARG)
           _NetworkManagerGetMyAddress (ARG)
       _isSameAddress
         _CoordinatorAddress (ARG)
         _CoordinatorGenericAddress (ARG)
           _NetworkAddressSizeGet
           _memset
             _NetworkAddressSizeGet (ARG)
         _NetworkAddressSizeGet (ARG)
         _NetworkGetParentAddress (ARG)
         _NetworkManagerGetMyAddress (ARG)
         _memcmp (ARG)
           _NetworkAddressSizeGet (ARG)
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _Read_MAC_Address
     _EEPROMRead
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _memcpy
       _NetworkAddressSizeGet (ARG)
       _NetworkManagerGetMyAddress (ARG)
   _isButtonPressed
   _memcpy
     _NetworkAddressSizeGet (ARG)
     _NetworkManagerGetMyAddress (ARG)
   _sprintf
     ___lwdiv
       _NetworkAddressSizeGet (ARG)
     ___wmul
     _isdigit

 _HighISR (ROOT)
   i2_MiWi_TickGetMs
     i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPIGet
       i2_SPIPut
     i2_SPIPut
   i2_SPIGet
     i2_SPIPut
   i2_TxPacket
     i2_DelayMs
       i2_DelayUS
     i2_MiWi_TickGetMs
       i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPIGet
         i2_SPIPut
       i2_SPIPut
     i2_RegisterSet
       i2_SPIPut
     i2_SetRFMode
       i2_RegisterSet
         i2_SPIPut
     i2_WriteFIFO
       i2_SPIPut
     i2_krnd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     324      35       21.3%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      4B      24       29.3%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      DC      22       85.9%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      CE      18       80.5%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      D2      14       82.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      CF      12       80.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100     1C      F4      10       95.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100     8E     100       8      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4E       1       83.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     809       6        0.0%
DATA                 0      0     B2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Oct 28 21:29:55 2016

                        isKnownPacket@emptyindex 00C6                                       i2_TxPacket 474E  
                               ?_isButtonPressed 0001                         ??_TunnelManagerGetTunnel 00AD  
                             ?_networkSendBeacon 0001                             NetworkManagerTask@sz 0157  
                            ??_BeaconManagerInit 0093                               ??_routingTableFind 0089  
                                AddMSToTick@tick 008F                              ??_BeaconManagerTask 00D3  
                                              l5 7224                                                l6 7216  
                                    ?_LEDCommand 0073                                                _c 018E  
               __size_of_le_findWorstNeighborIdx 012C                                                _w 0045  
                                              _x 01EF                                                _y 0049  
                                              _z 01F3                          netChooseAdvertiseTime@t 008F  
                            ?_le_initNeighborIdx 0073                             ?_MiMAC_DiscardPacket 0001  
                                 _LEDManagerTask 12F0                 __end_of_RouteManagerShouldInsert 5604  
                                 ?_isSameAddress 007D                              ?_CoordinatorAddress 0073  
                          _NetworkAddressSizeGet 7618                           __size_of_routeInfoInit 0056  
                   __end_of_BroadcastManagerInit 747E                                               l80 7430  
                                             l91 74A8                         ?_LE_RemoveNeighborDevice 0096  
                                             l78 7426                                               l89 749E  
                      __size_of_MSTickGetDiffNow 0080                     __end_of_BroadcastManagerTask 2E38  
                                   ___awdiv@sign 0078                     __size_of_MiApp_SetAddressPan 004E  
                            __end_of_BlinkRedLED 7576                           NetworkManagerTask@data 0144  
                            ___wmul@multiplicand 0075              __size_of_TransportManagerRouteFound 0002  
                     ?_BroadcastManagerDelaySend 009F                                _ActiveScanResults 03B6  
                                   __CFG_CP0$OFF 000000                    NetworkDataArrivedEvent@source 007B  
                         ??_NetworkGetDeviceType 0073                              ??_networkSendBeacon 00C3  
                            _RMRoutingTableCount 75CC                                       _MiMAC_Init 4F94  
             __size_of_RouteManagerRequestUpdate 0008            DeviceManagerBufferDeviceData@isFormed 0086  
                      __size_of_netResetInterval 0018                                              l125 6D7E  
                                            l261 1332                                              l254 130C  
                                            l263 13E8                                              l280 14BE  
                                            l267 13BE                                              l293 1566  
                                            l285 14D6                                              l713 44D2  
                                            l385 3C84                                              l730 4582  
                                            l714 44D4                                              l299 15F4  
                                            l723 454A                                              l804 109A  
                                            l805 109E                                   ?i2_RegisterSet 0003  
                                            l806 111C                                              l807 1128  
                                            l809 1170                                              l932 5B38  
                                            l782 30D2                                              l919 56DE  
                                            l776 3002                                              l786 3166  
                                            l778 307A                                              l973 2A76  
                                            l799 1014                                              l993 2B80  
                                            l994 2B84                                              _GIE 007F97  
                                            l999 2BC8                                              _CTR 56CA  
                                            i2l5 72CE                                              i2l6 72C2  
                                            _TMQ 0600            DeviceManagerBufferDeviceData@isSecure 0085  
               __end_of_le_findRandomNeighborIdx 334A                                              _key 02CC  
                                            _nst 01C5                                  __end_of_CBC_MAC 5BB8  
                        NetworkManagerTask@delay 0228                                    _NewBestParent 01E3  
                                            prod 000FF3                                              wreg 000FE8  
                   NetworkPrepareSendPacket@nHdr 0088                        NetworkUnicastData@address 0140  
                                   __CFG_IESO$ON 000000                     NetworkPrepareSendPacket@data 0084  
                                __end_of_CCM_Dec 56CA                                  __end_of_CCM_Enc 5840  
                          __end_of_mySecurityKey FFB5                        _le_updateNeighborEntryIdx 4228  
                                    i2_WriteFIFO 739E                     NetworkPrepareSendPacket@size 0086  
                 RouteManagerProcessReceive@data 009E                                ?_RouteManagerInit 0001  
                              ?_RouteManagerTask 0001                   RouteManagerProcessReceive@from 00A5  
                      _le_updateNeighborTableEst 1C0C                   __size_of_MiApp_StartConnection 002E  
                                __end_of_LCDInit 4E7A                                      le_findIdx@i 0084  
                                           ?_CTR 008A                        __end_of_BeaconManagerInit 73E0  
                  __end_of_MiApp_StartConnection 71E0                                             CTR@i 0095  
                                           CTR@j 0096                             ??_le_initNeighborIdx 0075  
                      __end_of_BeaconManagerTask 536A                                   ?_le_computeETX 007B  
                           ??_CoordinatorAddress 0075         __end_of_RouteManagerSetNeighborCongested 7640  
      __size_of_RouteManagerSetNeighborCongested 0002               ??_RouteManagerSetNeighborCongested 0076  
              ?_RouteManagerSetNeighborCongested 0073                 _RouteManagerSetNeighborCongested 763E  
                                           l1106 0958                                             l2021 551C  
                                           l1312 5B02                                             l2121 3B00  
                                           l1260 6728                                             l1502 6E6E  
                                           l1255 66EA                               ??_RouteManagerInit 008F  
                                           l2155 710E                                             l1531 324C  
                                           l1452 382A                                             l1519 4254  
                                           l1631 22E2                                             l1538 3340  
                    __end_of_radioReceivedPacket 0B32                                             l1638 421E  
                                           l2535 63BC                                             l1488 6BF0  
                                           l1680 2086                                             l2545 6782  
                                           l1682 20B2                                             l1960 7012  
                                           l2588 6D22                                             l2598 6EAC  
                                           l1959 6FF0                           LELinkQualityGet@offset 0087  
                                ?i2_RegisterRead 0001                               ??_RouteManagerTask 00AB  
                                           STR_1 FFF0                                             STR_2 FFCC  
                                           STR_3 FFB5                                             STR_4 FFDF  
               __size_of_NetworkGetParentAddress 000A                       ??_LE_GetNeighborDeviceType 0075  
                                    main@counter 018D                                             i2l80 752C  
                                           i2l78 7522                                             _TMR0 000FD6  
                    RouteManagerShouldInsert@hdr 0087                       NetworkUnicastData@mAddress 00DC  
                                           _RbcQ 094B                       MiApp_UnicastAddress@Origin 0149  
                                  __CFG_FCMEN$ON 000000        RouteManagerSetNeighborCongested@congested 0075  
                        ?_GetRouteAddressOfChild 008B                        MiApp_StartConnection@Mode 0001  
                           ?_RMRoutingTableCount 0073                       MiMAC_SetChannel@offsetFreq 0079  
                                           _main 3B0A                                  __end_of_SPIGet2 75AE  
                               ?_NetworkGetPANID 0073                       __end_of_TimerEnterCritical 7636  
                                           _list 0800                                             _krnd 3C8A  
                      __end_of_networkSendBeacon 2826                           ??_BeaconManagerTrigger 0093  
                       ??_TunnelManagerSetTunnel 0093                                             fsr0h 000FEA  
                                           fsr1h 000FE2                                             indf0 000FEF  
                                           fsr0l 000FE9                                             fsr2h 000FDA  
                                           indf1 000FE7                                             fsr1l 000FE1  
                                           indf2 000FDF                                             fsr2l 000FD9  
                                           btemp 004F                                  __end_of_SPIPut2 74AE  
                                  __CFG_T1DIG$ON 000000                   __end_of_NetworkReleaseUserData 763E  
                              _LE_InsertNeighbor 5FDA                                             prodh 000FF4  
                    NetworkDataArrivedEvent@data 007D                       ??_isNetworkSecurityEnabled 0073  
                                           prodl 000FF3                           __end_of_LE_PinNeighbor 6FA6  
                                           start 04A6                               __size_of_LCDUpdate 00B6  
                     le_updateNeighborTableEst@i 0096                                   ?_RouterEvicted 008E  
                                  LE_ClearDLQ@ne 008A                       le_updateNeighborTableEst@n 0088  
                TMSendFormedPacketToRFD@isSecure 00CB                         NetworkManagerTask@tStart 020C  
                    NetworkDataArrivedEvent@size 007F                                  __end_of_DelayUS 7238  
                               ?_NetworkHasRoute 0001                                  __end_of_DelayMs 5D94  
                     __size_of_IsMemberOfNetwork 0004                __end_of_MiApp_InitSleepRFDBuffers 6602  
                             ?_LE_InsertNeighbor 0096                              __size_of_EEPROMRead 002E  
                                  ?_LCD_WriteCmd 0001                                   ?_isKnownPacket 00AB  
                                __end_of_HighISR 04A6                                    _LCD_WriteData 74DA  
                                 _InitConfigRegs FF1D                           __end_of_LEDManagerTask 1658  
                                   ___param_bank 000010                          LELinkQualityGet@address 0085  
                          ??_MiMAC_DiscardPacket 0073                                            ??_CTR 0091  
                               CCM_Enc@headerLen 0099                       NetworkDiscoveredEvent@rssi 0075  
            __size_of_NetworkManagerGetMyAddress 000C                                       _DeviceType 01F9  
                                  ?_le_updateETX 0080                     __end_of_MiApp_DiscardMessage 760C  
                            ??_LE_InsertNeighbor 0099                                    __CFG_PLLDIV$2 000000  
                       _radioReceivedPacket$5352 02E5                         isKnownPacket@oldestindex 00C2  
                     NetworkUnicastData@isSecure 0146                                            l15110 3E2C  
                                          l16000 63AE                                            l13424 71A8  
                                          l15130 6BFC                                            l16010 6E8C  
                                          l15202 642C                                            l13418 7196  
                                          l14058 73F6                                            l16012 6E90  
                                          l15302 6A1C                                            l15136 6C30  
                                          l15232 571E                                            l16016 6EA2  
                                          l16008 6E84                                            l16032 6830  
                                          l15138 6C36                                            l15242 577E  
                                          l15218 56E0                                            l16026 6810  
                                          l17002 46E6                                            l15308 6A50  
                                          l15252 5B1E                                            l15244 5780  
                                          l15404 57AC                                            l15180 63D4  
                                          l15324 44FA                                            l16060 5520  
                                          l15262 5B3A                                            l15414 57E6  
                                          l15502 316A                                            l15510 3190  
                                          l16230 4D1C                                            l17102 2978  
                                          l17006 472C                                            l18000 2EF6  
                                          l15272 5B9A                                            l16144 3838  
                                          l16080 6590                                            l15192 640A  
                                          l15184 63E6                                            l15352 4560  
                                          l15328 4510                                            l16240 4D4C  
                                          l16208 4C3A                                            l16312 23FA  
                                          l17104 299E                                            l17008 4738  
                                          l15290 7298                                            l15418 57F0  
                                          l15362 457A                                            l15338 451C  
                                          l17210 6D58                                            l16322 2462  
                                          l17114 29CC                                            l17042 21DA  
                                          l18004 2F06                                            l15276 5BB0  
                                          l16164 393A                                            l15196 641C  
                                          l15188 63F8                                            l15508 318A  
                                          l15460 306A                                            l15436 2FF8  
                                          l17140 64A6                                            l16252 6BB2  
                                          l16420 35C8                                            l16404 3500  
                                          l16332 24C0                                            l16340 251E  
                                          l17036 2144                                            l18110 1302  
                                          l15294 72A8                                            l15614 6150  
                                          l16078 6588                                            l15374 45AE  
                                          l15358 4572                                            l15390 4602  
                                          l15454 304A                                            l15550 66EE  
                                          l15630 5C8C                                            l16238 4D46  
                                          l16414 358A                                            l16350 258C  
                                          l16334 24DE                                            l17118 29E8  
                                          l17062 22D0                                            l17054 2270  
                                          l17046 2210                                            l15392 460C  
                                          l15376 45B2                                            l17224 5284  
                                          l16520 193C                                            l16512 1922  
                                          l17304 0B54                                            l17160 3FB6  
                                          l17136 644E                                            l16256 6BE0  
                                          l16280 1D68                                            l16424 35D6  
                                          l16344 2546                                            l16360 25EC  
                                          l18042 5932                                            l18114 130E  
                                          l18106 12F8                                            l15570 6752  
                                          l15706 700E                                            l15378 45BA  
                                          l15490 311E                                            l15474 30C2  
                                          l17226 528A                                            l16506 1900  
                                          l15634 5CB8                                            l16602 5600  
                                          l16266 1C0E                                            l16434 366E  
                                          l16338 2500                                            l17090 293E  
                                          l16530 4EA8                                            l17066 22EA  
                                          l17058 22C0                                            l18044 5944  
                                          l18036 590C                                            l18028 5902  
                                          l18212 15F8                                            l18140 13B4  
                                          l18116 131E                                            l15468 30A2  
                                          l17236 52FA                                            l15556 6718  
                                          l15636 5CC8                                            l15804 6B38  
                                          l17340 0DB2                                            l17332 0CB2  
                                          l17308 0BC4                                            l17316 0BD6  
                                          l16292 1EAE                                            l15724 60A4  
                                          l15660 5AF4                                            l18062 598E  
                                          l18150 13DE                                            l18126 1334  
                                          l15574 6774                                            l15566 6742  
                                          l15670 690C                                            l17262 2C9E  
                                          l16470 17AE                                            l15558 672E  
                                          l17326 0BF2                                            l17318 0BE2  
                                          l17190 40B0                                            l17166 3FEC  
                                          l15750 629A                                            l15726 60DE  
                                          l15822 3678                                            l15662 5AF8  
                                          l15902 4100                                            l17086 28E2  
                                          l17078 286C                                            l16550 5FEE  
                                          l18064 59A0                                            l18056 5968  
                                          l18208 15EA                                            l18144 13C2  
                                          l18128 1344                                            l15568 674E  
                                          l15680 695A                                            l15496 313E  
                                          l16632 272E                                            l17248 5354  
                                          l17272 2D7A                                            l16480 17E8  
                                          l16456 1682                                            l17352 0E8C  
                                          l17336 0D34                                            l17360 0F1C  
                                          l17600 198E                                            l17168 3FF0  
                                          l16720 3330                                            l15752 62A2  
                                          l15744 628A                                            l16800 33F8  
                                          l15840 37E2                                            l15656 5ABE  
                                          l15648 5A7E                                            l17088 2914  
                                          l16560 602A                                            l17440 4FF8  
                                          l17424 4FB6                                            l18240 6CA0  
                                          l18082 6638                                            l18218 1616  
                                          l18226 1620                                            l16634 276C  
                                          l17274 2D86                                            l17258 2C4C  
                                          l16482 17EC                                            l17338 0D8C  
                                          l17362 0F4C                                            l17290 0B34  
                                          l17602 1996                                            l17194 40C4  
                                          l15770 62D6                                            l15762 62C0  
                                          l15754 62A6                                            l15738 627A  
                                          l16810 3438                                            l15842 37E8  
                                          l15690 6EEE                                            l15658 5AE2  
                                          l15930 68FC                                            l15914 420E  
                                          l16538 4F36                                            l18402 2C1E  
                                          l18092 665A                                            l18084 663A  
                                          l18180 14DA                                            l18172 14C2  
                                          l18156 13FA                                            l18228 1648  
                                          l15780 6CF2                                            l17700 1016  
                                          l15676 6950                                            l16628 26F6  
                                          l17268 2D52                                            l16492 1840  
                                          l17348 0E54                                            l17292 0B38  
                                          l17196 40C8                                            l16708 327E  
                                          l16660 42D2                                            l16732 39B4  
                                          l15836 37BC                                            l15908 4186  
                                          l16556 600A                                            l16900 1FFC  
                                          l17524 51F8                                            l18404 2C24  
                                          l18078 6630                                            l15782 6CFA  
                                          l17278 2E26                                            l16494 1856  
                                          l17630 1AA6                                            l17622 1A46  
                                          l17614 1A10                                            l17606 19E0  
                                          l15766 62CA                                            l16670 435C  
                                          l16806 342A                                            l15846 37F8  
                                          l15926 68E0                                            l15870 43C4  
                                          l15862 4394                                            l16910 20A0  
                                          l18422 514E                                            l18414 50E6  
                                          l17534 5240                                            l17526 5202  
                                          l18406 2C3C                                            l18334 2A7E  
                                          l18096 6662                                            l18184 1554  
                                          l18176 14CC                                            l18168 14B4  
                                          l15792 6D18                                            l15784 6CFE  
                                          l16824 5606                                            l17296 0B46  
                                          l17608 19E8                                            l16584 556C  
                                          l16672 4362                                            l16752 3AC2  
                                          l15856 4390                                            l15952 5ED8  
                                          l16920 211C                                            l18344 2AAA  
                                          l18328 2A5E                                            l18098 6664  
                                          l18194 1568                                            l16850 56C0  
                                          l17634 1AB6                                            l17618 1A3E  
                                          l16746 3A64                                            l16762 3AF4  
                                          l16914 20BA                                            l16906 2090  
                                          l17466 505A                                            l17570 4B86  
                                          l18354 2B00                                            l18338 2A84  
                                          l18196 157A                                            l16844 5684  
                                          l16828 5610                                            l17724 115C  
                                          l16596 55EC                                            l16588 5586  
                                          l16684 31A8                                            l16668 4320  
                                          l16756 3AD4                                            l15956 5F3A  
                                          l16860 5BC6                                            l17900 08F8  
                                          l18428 5184                                            l17580 4C26  
                                          l17572 4BAC                                            l18356 2B22  
                                          l15798 6B18                                            l17654 1B9A  
                                          l17590 1960                                            l16598 55F0  
                                          l15990 637C                                            l16950 4A5C  
                                          l16942 4A24                                            l16758 3AE8  
                                          l17830 0652                                            l17822 0628  
                                          l17486 5E36                                            l18374 2B5E  
                                          l18366 2B38                                            l17744 11D0  
                                          l17736 117A                                            l17592 1968  
                                          l15992 6380                                            l16960 4AAC  
                                          l16952 4A80                                            l16792 335A  
                                          l15888 44C4                                            l16864 5C36  
                                          l17576 4BE4                                            l18480 3C0C  
                                          l18464 3B98                                            l17658 1BB4  
                                          l17586 1952                                            l16970 4AEE  
                                          l16890 1F86                                            l17818 05EC  
                                          l17578 4C00                                            l18394 2BCE  
                                          l18386 2BA6                                            l18466 3B9C  
                                          l17748 11DA                                            l17764 1258  
                                          l17676 0F62                                            l17668 1BE0  
                                          l15988 6370                                            l16884 1EF0  
                                          l17932 0A36                                            l17916 09A6  
                                          l18388 2BAC                                            l17686 1006  
                                          l16894 1FBA                                            l17870 07C6  
                                          l17838 068A                                            l17776 12A4  
                                          l17848 06E6                                            l17962 0AC4  
                                          l17890 087A                                            l17866 07A0  
                                          l17882 083C                                            l17858 0768  
                                          l17788 12E4                                            l17972 0B22  
                                          l17948 0A9A                                            l17878 07FE  
                                          l17984 2E40                                            l17968 0AEA  
                                          l17888 085A                                            l17976 0B2E  
                                          l17994 2EC2                                            l17898 08D6  
                                          ?_main 0001                __end_of_BroadcastManagerDelaySend 37FC  
                                __end_of___awdiv 62E0                                            ?_krnd 0073  
                                __end_of___lldiv 63CE                TunnelManagerInvalidateTunnel@addr 0085  
                                          u21000 29FC                                            _T0CON 000FD5  
                                          u21020 64B4                                  ___awdiv@divisor 0075  
                                __end_of___llmod 6794                                            u21201 5304  
                                          u21121 717A                                            u20410 3438  
                                          u20260 3340                                            u20420 3444  
                                          u21221 5344                                            u21141 6D3A  
                                          u21310 2E36                                            u21150 6D58  
                                          u20190 325C                                            u20430 344E  
                                          u20600 20C2                                            u21161 6D6A  
                                          u21401 0DDA                                            u20521 1FAA  
                                          u22050 0672                                            u21171 5294  
                                          u20611 2114                                            u21261 2D1C  
                                          u21421 0EB4                                            u21430 0ED0  
                                          u21191 52EA                                            u21440 0F5C  
                                          u20561 2056                                            u21611 19D8  
                                          u20580 20A0                                            u21701 1AD4  
                                          u22510 6616                                            u22430 2F06  
                                          u20590 20A8                                            u21631 1A00  
                                          u22440 2F14                                            u21641 1A1A  
                                          u22450 2F26                                            u21650 1A3A  
                                          u20860 22D0                                            u21741 1BAA  
                                          u20950 2952                                            u20870 22D8  
                                          u21751 1BBE                                            u21671 1A64  
                                          u21760 1BDE                                            u20880 22F4  
                                          u20891 2380                                            u18020 3CDA  
                                          u18005 7350                                            u22750 1536  
                                          u21790 0FF4                                            u18006 7352  
                                          u18015 3C9C                                            u18025 3CD0  
                                          u22850 1656                                            u22690 1456  
                                          u18035 3D00                                            u18140 6DC6  
                                          u18310 45F4                                            u19015 4492  
                                          u15680 7102                                            u19016 4494  
                                          u19025 44BC                                            u19026 44BE  
                                          u18180 6A44                                            u19140 5F48  
                                          u16804 71F4                                            u19061 41AA  
                                          u16805 71F0                                            u19071 41BC  
                                          u19160 6E6A                                            u18601 60FC  
                                          u18530 5F5A                                            u19090 421E  
                                __end_of___lwdiv 6D2C                                            u18187 6A3A  
                                          u19340 3824                                            u18461 707A  
                                          u18550 5F72                                            u18631 5CAE  
                                          u19440 4D2C                                _userDataAvailable 01C7  
                                          u19290 7550                                            u19380 394C  
                                          u18548 5F5E                                            u17925 728A  
                                          u17926 728C                                            u19470 6BF0  
                                          u19710 35D6                                            u17935 3E62  
                                          u18591 5FBA                                            u18575 5F8C  
                                          u18911 3732                                            u18576 5F90  
                                          u18568 5F76                                            u19720 35E0  
                                          u17945 3EBA                                            u18761 633E  
                                          u18585 5F98                                            u18921 376E  
                                          u18586 5F9C                                            u17955 3EF8  
                                          u19741 3640                                            u18781 60E8  
                                          u19830 1802                                            u18950 37F8  
                                          u19840 180A                                            u18960 438A  
                                          u19681 355A                                            u19930 1938  
                                          u17995 714C                                            u17996 714E  
                                          u18980 43C4                                            u19880 18FC  
                                __end_of___lwmod 6EB6                                            i2l125 6E02  
                                          i2l713 4756                                            i2l730 4800  
                                          i2l714 4758                                            i2l723 47CE  
                                          i2l906 048A                                            i2l861 009E  
                                          i2l870 0164                                            i2l854 0080  
                                          i2l856 00B6                                            i2l891 0332  
                                          i2l867 00DA                                  ___awdiv@counter 0077  
                  RouteManagerPerformUpdate@best 009D                         __size_of_InitSymbolTimer 0016  
                       ?_TMSendFormedPacketToRFD 00C5                 __size_of_TransportManagerNoRoute 0002  
                                          _TMR0H 000FD7                                            _TMR0L 000FD6  
                                   _routingTable 0478                 RouteManagerShouldInsert@neighEtx 008D  
                    ?_RouteManagerProcessReceive 009C                                 ?_NetworkSequence 0001  
                               SendPacket@tParam 00B7                  __end_of_le_findEmptyNeighborIdx 6BFA  
        MiApp_InitSleepRFDBuffers@rfdMaxDataSize 007F                                 __end_ofi2_SPIGet 75F4  
                              _justEvictedParent 0042                                 __end_ofi2_SPIPut 7532  
                                _TMSendDataToRFD 6B5A                               __size_ofi2_DelayUS 002A  
                             __size_ofi2_DelayMs 0096                                            _crc32 5BB8  
                __size_of_NetworkDiscoveredEvent 0198                                 RouterEvicted@idx 0094  
                               SendPacket@status 00B5                    __size_of_MiApp_UnicastAddress 003A  
                                          _pcnt1 01AD                                  __end_of_isdigit 73FE  
                                  _routeInfoInit 69B4                              __size_of_LEDCommand 003C  
               CoordinatorGenericAddress@address 01DF                   __end_of_GetRouteAddressOfChild 6906  
                                LEDManagerTask@i 0091                                            krnd@t 007B  
                                          tablat 000FF5                        __end_of_LE_InsertNeighbor 6068  
                                   ?_LE_ClearDLQ 0085                            ??_RMRoutingTableCount 0075  
                        ?_netChooseAdvertiseTime 0001                                            plusw0 000FEB  
                                          plusw1 000FE3                                            plusw2 000FDB  
                  __size_of_NetworkSetAddressPAN 0056                                            status 000FD8  
                    le_updateNeighborTableEst@ne 0097                                  __end_of_sprintf 2C48  
                             __size_of_MSTickGet 0036                               __size_of_CacheInit 0018  
                         __end_of_InitConfigRegs FF5D                         LE_RemoveNeighborDevice@i 009A  
                                ?_LE_PinNeighbor 0085                          MiApp_SetChannel@Channel 007C  
                      __size_of_LELinkQualityGet 0070                                   ??_LCD_WriteCmd 0075  
                                 ?_LCD_WriteData 0001                        __size_of_MiMAC_SetChannel 0090  
                           __end_of_HardwareInit 5A60                          __CFG_DSWDTOSC$INTOSCREF 000000  
                                    _BlinkRedLED 756A                  __end_of_LE_RemoveNeighborDevice 66D0  
                      __size_of_Read_MAC_Address 004A                                  __initialization 536A  
                                ?_LEDManagerTask 0001                                  ??_isSameAddress 0081  
                                    ?i2_TxPacket 0015                         LE_UnpinNeighbor@neighbor 0085  
                          _AddNodeToNetworkTable 2E38                        __size_of_MiMAC_SendPacket 01AE  
                         ?_NetworkAddressSizeGet 0001                                     __end_of_main 3C8A  
                                   __end_of_krnd 3DFA                             _UserMessageAvailable 01C0  
                __size_of_TunnelManagerGetTunnel 015A                      LE_GetNeighborDeviceType@dev 0078  
                                 ??_le_updateETX 0084                                       _ButtonTask 6602  
                                 TxPacket@status 009C                                    krndInit@value 0073  
                      isBroadcastAddress@address 007A                                        ??_CBC_MAC 0091  
                                ??i2_RegisterSet 0005                                ??_IsNetworkDevice 0092  
                                      ??_CCM_Dec 009D                               MiWi_TickGet@tmrval 007B  
                                      ??_CCM_Enc 009D                                    ??_RegisterSet 0077  
                                         ??_main 00E9                               MiWi_TickGetMs@tnow 0083  
                                    ?_MiMAC_Init 0087                                           ??_krnd 0077  
                                  __activetblptr 000002                         _RouteManagerShouldInsert 552E  
                                  le_findIdx@res 0083                                        ??_LCDInit 0087  
                           __end_of_MiWi_TickGet 6DB8                                           CTR@len 008C  
                                         CTR@key 008D                                    _IRQ1_Received 003D  
                              __end_of_LCDUpdate 59AC                                    ??_NetworkInit 0098  
                               __end_of_TxPacket 4610                      radioReceivedPacket@isSecure 02E2  
                              ?_isInvalidAddress 0085                      __size_of_NetworkUnicastData 012C  
                          radioReceivedPacket@bt 02EA                BroadcastManagerDelaySend@isSecure 00A3  
              MiApp_ProtocolInit@bNetworkFreezer 0001                                  ??_le_computeETX 007D  
                           _MiMAC_ReceivedPacket 0F5E                                           ?_crc32 0073  
                                i2SetRFMode@mode 0006                                       _SendPacket 5F4A  
                                      ??_SPIGet2 0075                    __size_of_NetworkSetDeviceType 000A  
                                 ?_routeInfoInit 007B                       __size_of_BeaconManagerInit 0020  
                             ??_isInvalidAddress 0087              DeviceManagerGetDeviceData@devBuffer 0093  
                     __size_of_BeaconManagerTask 00E8                                 ___llmod@dividend 007F  
                    __size_of_isBroadcastAddress 0042                                           _EECON2 000FA7  
                                         _ANCON0 000F48                                           _ANCON1 000F49  
                      le_findRandomNeighborIdx@i 008C                                        ??_SPIPut2 0073  
                               ___awdiv@dividend 0073                              routingTableFind@res 008B  
                 __end_of_netChooseAdvertiseTime 6358                                           _LEDCmd 01A5  
                                         _MACSeq 01B8                                   __CFG_WDTEN$OFF 000000  
                                      ??_DelayUS 0077                                        ??_DelayMs 007F  
               __end_of_NetworkPrepareSendPacket 552E                             _BroadcastManagerInit 7466  
                                         _OSCCON 000FD3                             _BroadcastManagerTask 2C48  
                                      ??_HighISR 002C                                           _PVALUE FF5D  
                                         _RPOR21 000EDB                                           _RPINR1 000EE7  
                                         _RPOR19 000ED9                                  ??_RouterEvicted 0090  
                                 MiMAC_Init@seed 008B                   RouteManagerPerformUpdate@entry 00A1  
                                         _SVALUE FF7D                                   __CFG_WPCFG$OFF 000000  
                                         _SPIGet 75D6                       __size_of_networkSendBeacon 0236  
                                         _SSPBUF 000FC9                                           _SPIPut 741C  
                  RouteManagerShouldInsert@found 0093                    RouteManagerShouldInsert@entry 008F  
                MiApp_InitSleepRFDBuffers@buffer 007B              __end_of_NetworkSendDiscoverResponse 6268  
                    _NetworkSendDiscoverResponse 61F0                  __size_of_TunnelManagerSetTunnel 0266  
                MiApp_StartConnection@ChannelMap 009B                                  ??_isKnownPacket 00AF  
                        i2RegisterSet@IRQ1select 0005                                           i2_krnd 488A  
                                 __CFG_WPDIS$OFF 000000                                    ?_radioUnicast 00BC  
              __size_of_le_findRandomNeighborIdx 01AC                                    ??_TimeTickISR 0073  
                 DeviceManagerBufferDeviceData@i 0090                                       TxPacket@t1 008C  
                                     TxPacket@t2 0090          TMSendFormedPacketTowardsCoordinator@res 0091  
                      ?_le_findRandomNeighborIdx 0084                  NetworkPrepareSendPacket@address 007F  
                                         _NetSeq 01B9                               __size_of_SetRFMode 0076  
                                 __CFG_XINST$OFF 000000                RouteManagerShouldInsert@rcvBeacon 0094  
                                         _TxData 01BE                                           _TxBuff 0748  
                         _NetworkDiscoveredEvent 334A                     ??_DeviceManagerGetDeviceData 0089  
                                   ?_AddMSToTick 008F                                 LCD_WriteCmd@data 0075  
                        _le_findWorstNeighborIdx 4C2A                   le_findWorstNeighborIdx@thisETX 008A  
                              __end_ofi2_DelayUS 72E2                                __end_ofi2_DelayMs 5E2A  
                             HighISR@PacketForMe 006A                     ??_DeviceManagerGetDeviceType 0083  
                 ?_TunnelManagerInvalidateTunnel 0081                                           ___wmul 72E2  
                                      ??___awdiv 0077                               _radioDiscardPacket 761E  
                                         crc32@p 0085                                   __CFG_STVREN$ON 000000  
                                         _hasAck 0041                                        ??___lldiv 007B  
                                      ??___llmod 0087        NetworkManagerProcessIncomingData@isFormed 0180  
                                         _nState 01C3                        __size_of_MiApp_SetChannel 000C  
                                      ??___lwdiv 0077                                        ??___lwmod 0083  
                                         _encode 3DFA                      routingTableUpdateEntry@from 008E  
                               _MSTickGetDiffNow 60F2                                    ??_TimerEnable 0073  
      NetworkManagerProcessIncomingData@isSecure 00E1                                           _myAddr 01E7  
                __end_of_TMSendFormedPacketToRFD 25F0                                           _memcmp 6BFA  
                                         _memcpy 6A0A                   radioReceivedPacket@isBroadcast 02E1  
                                         _memset 728E                                           clear_0 53B2  
                                         clear_1 53C4                                           clear_2 53D0  
                                         clear_3 53DC                                           clear_4 53E8  
                                         clear_5 53F4                                           clear_6 5400  
                                         clear_7 540C                                           clear_8 5418  
                                         clear_9 5424                     __end_of_LEAppendNeighborInfo 3986  
                               ___awdiv@quotient 0079                                     _CCM_Dec$2718 00A1  
                                _currentInterval 0192                     __end_of_passLinkEtxThreshold 7552  
                      __size_ofi2_MiWi_TickGetMs 0036                          __end_of_TMSendDataToRFD 6BAA  
                             radioBroadcast@addr 01EB                               radioBroadcast@data 00BC  
                               __end_of_krndInit 58F6                                 _netResetInterval 747E  
                     ?_RouteManagerPerformUpdate 0001                                __end_of_MSTickGet 7084  
                            ?_radioDiscardPacket 0001                         __end_of_netDecayInterval 704E  
                              __end_of_CacheInit 7466                                     ??_EEPROMRead 0078  
                le_updateNeighborTableEst@newEst 0094                      __end_of_MiApp_IsNetworkBusy 7646  
                                   __pdataCOMRAM 0045                                        ??_isdigit 0073  
                                   _CCM_Enc$2710 009F                          Read_MAC_Address@address 0088  
                                   __mediumconst FB1C                            ?_MiMAC_ReceivedPacket 0001  
                                         tblptrh 000FF7                                           tblptrl 000FF6  
                                         tblptru 000FF8                         ?_NetworkDataArrivedEvent 007B  
                       MiApp_StartConnection@src 009F              DeviceManagerGetDeviceData@recordLen 0091  
                         _RouteMgrUpdateRequired 01BD                           _TunnelManagerGetTunnel 40CE  
                            __end_of_RegisterSet 728E                                  LE_ClearDLQ@nidx 008C  
                                  ?_RegisterRead 0001                          _NetworkGetParentAddress 75C2  
                   __end_of_TransportManagerInit 74DA                              __size_ofi2_TxPacket 013C  
                                      ??_sprintf 0082                     __end_of_TransportManagerTask 0F5E  
                                  LEDCommand@cmd 0073                                    LEDCommand@led 0075  
                              _ReceivedBankIndex 003E                                ??_InitSymbolTimer 0073  
                                __CFG_DSBOREN$ON 000000                                     ?i2_SetRFMode 0001  
                        ??_NetworkGetMyRouteInfo 0075                              networkSendBeacon@bt 00CD  
               __size_of_routingTableUpdateEntry 011A                            ?_BroadcastManagerInit 0001  
                            _MiApp_SetAddressPan 6C4A                              __end_of_NetworkInit 5282  
                               HighISR@BankIndex 0071                        radioReceivedPacket@myAddr 02E3  
                          ?_BroadcastManagerTask 0001                       __size_of_LE_InsertNeighbor 008E  
                      radioReceivedPacket@parent 02F0                             _MiApp_DiscardMessage 7604  
                                     __accesstop 0060                               __size_of_WriteFIFO 0026  
                        __end_of__initialization 5440                              le_initNeighborIdx@i 0075  
             __size_of_le_updateNeighborEntryIdx 0156                                  ??_LCD_WriteData 0075  
                           ??_radioDiscardPacket 0073                        radioReceivedPacket@source 02D8  
               __end_of_isNetworkSecurityEnabled 7612                                ?_LE_UnpinNeighbor 0085  
                MiMAC_ReceivedPacket@currentTick 00AC                                   ??_radioUnicast 00C4  
                            __size_of_MiMAC_Init 00FC                                    ___rparam_used 000001  
             __size_of_le_updateNeighborTableEst 02AC                                CCM_Enc@payloadLen 009A  
                  LE_RemoveNeighborDevice@device 0096                       RouteManagerPerformUpdate@i 0097  
                    ??_MiApp_InitSleepRFDBuffers 0081                       __end_of_NetworkManagerTask 1C0C  
                     RouteManagerPerformUpdate@r 00A3                             __CFG_WPEND$PAGE_WPFP 000000  
                         ?_AddNodeToNetworkTable 0081                               ??_LE_UnpinNeighbor 0087  
                            i2MiWi_TickGet@t1ext 0005                               __end_of_EEPROMRead 71B2  
                                 __pcstackCOMRAM 0001              __size_of_RouteManagerProcessReceive 013E  
                                      ?i2_SPIGet 0001                                        ?i2_SPIPut 0001  
                                   __pidataBANK1 7532                     MiApp_MessageAvailable@tStart 0224  
                                   ??_LEDCommand 0074                                    __end_of_crc32 5C5E  
                                   ButtonTask@Sw 0087                                      ?_ButtonTask 0001  
                          i2RegisterRead@address 0003                       le_findEmptyNeighborIdx@res 0077  
                 DeviceManagerGetDeviceData@data 0083                 MiMAC_ReceivedPacket@FrameCounter 00B2  
                                __CFG_DSWDTEN$ON 000000                             ?_MiApp_SetAddressPan 0083  
                            __end_of_TimeTickISR 7122                   DeviceManagerGetDeviceData@size 008D  
                                      CTR@nounce 008F                                  __CFG_DSWDTPS$G2 000000  
                ??_DeviceManagerBufferDeviceData 0087                      ??_BroadcastManagerDelaySend 00A5  
                        _TransportManagerNoRoute 7642                           _TunnelManagerSetTunnel 2124  
                                TxPacket@rssival 009A                              _sleepRFDBufferCount 0039  
      __end_of_NetworkManagerProcessIncomingData 2A58       __size_of_NetworkManagerProcessIncomingData 0232  
            ??_NetworkManagerProcessIncomingData 00E2               ?_NetworkManagerProcessIncomingData 00DC  
              _NetworkManagerProcessIncomingData 2826               le_updateNeighborEntryIdx@packetGap 009D  
              __end_of_RouteManagerPerformUpdate 1940                              isButtonPressed@mask 0076  
                              routingTableFind@i 008D                        __size_of_routingTableFind 0062  
                                _ConnectionTable 035E                                       _addressLen 01FA  
                               ??i2_RegisterRead 0003                              __end_of_TimerEnable 7632  
                           __end_of_LCD_WriteCmd 7506                        NetworkSetAddressPAN@PANID 0081  
                              __end_of_SetRFMode 6444                                  ??_routeInfoInit 007D  
                                   ?i2_WriteFIFO 0001                                 HighISR@PacketLen 0070  
                                        ??_crc32 007B                                   ??_RegisterRead 0075  
                       AddNodeToNetworkTable@ind 0089                                      ?_SendPacket 00AE  
                         NetworkUnicastData@data 0142                 __size_of_LE_RemoveNeighborDevice 0066  
                          Read_MAC_Address@addr8 0082                   NetworkPrepareSendPacket@buffer 0081  
                         NetworkUnicastData@size 0144                                     sprintf@width 008C  
                     routingTableUpdateEntry@idx 0096                            IsNetworkDevice@oldest 0094  
                     routingTableUpdateEntry@etx 0092                             __end_of_le_updateETX 67F4  
                                     __pbssBANK0 00E9                                       __pbssBANK1 018E  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                                     __pbssBANK4 0400                                       __pbssBANK5 0500  
                                     __pbssBANK6 0600                                       __pbssBANK7 0700  
                                     __pbssBANK8 0800                                       __pbssBANK9 0900  
                       radioReceivedPacket@PANID 02DA                            ?_MiApp_DiscardMessage 0001  
                             __end_of_LEDCommand 6F2E                             MSTickGetDiffNow@diff 0097  
                    __size_of_MiApp_ProtocolInit 005A                            __size_of_HardwareInit 00B4  
                           MSTickGetDiffNow@tNow 009B                                       _devBuffers 00E9  
                           MSTickGetDiffNow@tick 008F                                          ?_SPIGet 0001  
                                        CTR@text 008A                                          ?_SPIPut 0001  
                             RegisterSet@setting 0075                        SendPacket@SecurityEnabled 00B3  
                                  MSTickGet@tNow 0087                        LE_InsertNeighbor@neighbor 0096  
              DeviceManagerGetDeviceType@address 0081                             __size_of_LE_ClearDLQ 0054  
                      ??_le_findWorstNeighborIdx 0083                              i2RegisterRead@value 0004  
                                        ?i2_krnd 0001                         radioReceivedPacket@child 02EE  
                               _LELinkQualityGet 652A                __end_of_le_updateNeighborEntryIdx 437E  
                               _MiMAC_SetChannel 5E2A                         _NetworkPrepareSendPacket 544E  
                                     CBC_MAC@MIC 008F                                 _Read_MAC_Address 6C98  
                             HighISR@RxPacketPtr 006E                        __size_of_RouteManagerInit 0030  
                                   CBC_MAC@block 0094                           radioReceivedPacket@crc 02E6  
                      __size_of_RouteManagerTask 0048                __end_of_le_updateNeighborTableEst 1EB8  
                                     CBC_MAC@len 008C                                       CBC_MAC@key 008D  
               RouteManagerPerformUpdate@linkEtx 0095                    LE_GetNeighborDeviceType@index 0073  
                                      ?_TxPacket 0087                 RouteManagerPerformUpdate@pathEtx 0099  
                               _MiMAC_SendPacket 2FF0                                       ??i2_SPIGet 0003  
                                     ??i2_SPIPut 0001                                          ?___wmul 0073  
                   TunnelManagerGetTunnel@device 00AB                            ??_MiApp_SetAddressPan 0087  
              RoutingTableFindDeviceOrParent@res 0087                                          ?_encode 0073  
                               radioUnicast@addr 01ED                                 radioUnicast@data 00C0  
                          __size_of_MiWi_TickGet 0044                                 radioUnicast@dest 00BC  
                                        ?_memcmp 0073                               _TimerEnterCritical 7632  
                                        ?_memcpy 0075                                          _CBC_MAC 5B0C  
                                        ?_memset 0073                RouteManagerSetNeighborCongested@n 0073  
                                        SPIPut@i 0074                                          SPIPut@v 0073  
                                        _CCM_Dec 5604                                          _CCM_Enc 5788  
                               ?_TMSendDataToRFD 00D4                                __end_of_WriteFIFO 7354  
                __end_of_NetworkDataArrivedEvent 6AB4                                      _RegisterSet 7264  
                       __size_of_isButtonPressed 002C                         LE_InsertNeighbor@devType 0098  
                              isKnownPacket@hash 00AB                                          _LCDInit 4D56  
                      _MiApp_InitSleepRFDBuffers 659A                                          i2l14120 6504  
                                        i2l14112 64E0                                          i2l14104 64BC  
                         ??_MiMAC_ReceivedPacket 00A4                                          i2l15002 0398  
                                        i2l14116 64F2                                          i2l14108 64CE  
                                        i2l15012 03BC                                          i2l14126 6514  
                                        i2l15022 0426                                          i2l15008 03B4  
                                        i2l15024 043C                                          i2l15032 044C  
                                        i2l15050 0482                                          i2l15026 0444  
                                        i2l15028 0448                                          i2l14702 47F0  
                                        i2l14720 4830                                          i2l14722 4836  
                                        i2l14706 47F8                                          i2l14718 482C  
                                        i2l14734 487E                                          i2l14902 013C  
                                        i2l14672 478C                                          i2l14682 47A0  
                                        i2l14930 01F8                                          i2l14914 0198  
                                        i2l14668 4778                                          i2l14844 0072  
                                        i2l14836 0054                                          i2l14678 4798  
                                        i2l14950 0286                                          i2l14934 0236  
                                        i2l14926 01F0                                          i2l14696 47E2  
                                        i2l14944 0254                                          i2l14936 0238  
                                        i2l14952 0296                                          i2l14856 0096  
                                        i2l14848 0082                                          i2l14938 0248  
                                        i2l14866 00C0                               __CFG_OSC$INTOSCPLL 000000  
                                        i2l14948 0284                                          i2l14966 02C6  
                                        i2l14958 02AE                                          _LCDText 0395  
                                        i2l14986 0312                                          i2l14898 0134  
                  __size_of_NetworkGetDeviceType 0006                                          i2l14996 0336  
                                  ?_TimerDisable 0001                          NetworkDiscoveredEvent@i 007D  
                                 NetworkInit@dev 0097                              ?_TimerEnterCritical 0001  
                                        _BMState 01B7                        ??_NetworkGetParentAddress 0075  
                                    _NetworkInit 518A                                     _HardwareInit 59AC  
                          i2WriteFIFO@IRQ1select 0004                                       _le_findIdx 6906  
                                        _RPINR21 000EFB                                 HighISR@ackPacket 0064  
                                        _SSP2BUF 000F75                  RouteManagerPerformUpdate@minEtx 009F  
               DeviceManagerBufferDeviceData@res 008B                                          _SPIGet2 75A4  
                         ??_BroadcastManagerInit 007B                                          _RF_Mode 01BA  
                                        _AckInfo 0300                           ??_BroadcastManagerTask 00C3  
                                        _SPIPut2 7496                      __size_of_le_initNeighborIdx 007E  
                                        _RSSIVal 01BC                      __size_of_CoordinatorAddress 000A  
                   ??_TransportManagerRouteFound 0073                                 ??_LE_PinNeighbor 0087  
                            __size_of_ButtonTask 0068                          __size_of_MiWi_TickGetMs 0036  
                                        _TMState 003F                                          _DelayUS 720C  
                                        _DelayMs 5CFE                            _MiApp_StartConnection 71B2  
                      _BroadcastManagerDelaySend 3672                       AddNodeToNetworkTable@PANID 0083  
            MiApp_InitSleepRFDBuffers@bufferSize 007D                          __size_of_radioBroadcast 005E  
             NetworkDataArrivedEvent@isBroadcast 0081                                          _HighISR 0008  
                           _LEAppendNeighborInfo 37FC                 __size_of_TMSendFormedPacketToRFD 0266  
                       ?_le_findEmptyNeighborIdx 0073                                 ??_LEDManagerTask 0087  
                     ?_CoordinatorGenericAddress 007B                        MiApp_MessageAvailable@src 018A  
                           _passLinkEtxThreshold 7544                                      TxPacket@CCA 0087  
                                        i2krnd@t 0009                                  __size_of_SPIGet 000A  
                                __size_of_SPIPut 001A                                        ?_krndInit 0073  
                    __end_of_MiMAC_DiscardPacket 741C                                  _IsNetworkDevice 34E2  
                        ??_NetworkAddressSizeGet 0073                DeviceManagerGetDeviceData@address 0081  
                                __size_ofi2_krnd 013C                             ??_TimerEnterCritical 0073  
                                   _MiWi_TickGet 6D74                     __size_of_radioReceivedPacket 0688  
             __end_of_DeviceManagerGetDeviceData 3B0A                       _DeviceManagerGetDeviceData 3986  
                  __size_of_BeaconManagerTrigger 0004                                          __Hparam 0000  
                                   ?_BlinkRedLED 0001                                      _TimeTickISR 70F0  
                                        _Tick_MS 02C4                                          __Lparam 0000  
             __end_of_DeviceManagerGetDeviceType 64B8                       _DeviceManagerGetDeviceType 6444  
                                        _TxIndex 0040                                     ??i2_TxPacket 0016  
                                     ??_TxPacket 0088                                       _lastSource 01E5  
                                     CCM_Dec@key 009B                                  radioBroadcast@i 00C2  
                   __end_of_MiApp_UnicastAddress 6FE0                       ??_RouteManagerShouldInsert 0089  
                     ?_LE_processReceivedMessage 009F                                          _t1fired 0044  
                              LCD_WriteData@data 0075                         __size_of_NetworkGetPANID 000A  
                        __size_ofi2_MiWi_TickGet 0040                                          ___awdiv 6268  
                                     _linkEstSeq 01AB                                       CCM_Enc@key 009B  
                                        ___lldiv 6358                                  __size_of___wmul 0026  
                                        ___llmod 6732                                 _MiApp_SetChannel 755E  
                            __size_of_SendPacket 0090                __size_of_LE_GetNeighborDeviceType 003C  
                                        ___lwdiv 6CE2                                          ___lwmod 6E78  
                      ??_TransportManagerNoRoute 0073                             __size_of_AddMSToTick 008A  
                           _TransportManagerInit 74C4                        ?_LE_GetNeighborDeviceType 0073  
                           _TransportManagerTask 0B32                                  __size_of_encode 0170  
                          __CFG_RTCOSC$INTOSCREF 000000                                      _TimerEnable 762E  
                              _TunnelManagerInit 74AE                     __end_of_NetworkSetAddressPAN 69B4  
                       __size_of_NetworkHasRoute 0038                                          __pcinit 536A  
                                __size_of_memcmp 0050                                  __size_of_memcpy 0056  
                               i2_MiWi_TickGetMs 70BA                                  __size_of_memset 002A  
                                        __ramtop 0F00                                 HighISR@fifo_stat 0063  
                                        __ptext0 3B0A                                          __ptext1 2A58  
                                   ??_MiMAC_Init 008A                                          __ptext2 73E0  
                                        __ptext3 72E2                                          __ptext4 71E0  
                                        __ptext5 6C98                                          __ptext6 7184  
                                        __ptext7 75A4                                          __ptext8 6FA6  
                                        __ptext9 4AFE                                          _myPANID 004D  
                                      _T0CONbits 000FD5                              radioBroadcast@PANID 00BF  
                             ?_TunnelManagerInit 0001                  __end_of_le_findWorstNeighborIdx 4D56  
              __size_of_isNetworkSecurityEnabled 0006                                     __size_of_CTR 00BE  
                                 ??_TimerDisable 0073                                __end_of_hexpowers FFA5  
                      ?_isNetworkSecurityEnabled 0001                         ??_MiApp_MessageAvailable 0186  
                            __end_of_crc32_table FF1D                             __end_of_radioUnicast 6B5A  
                le_findWorstNeighborIdx@worstETX 008C                                          _isdigit 73E0  
            BroadcastManagerDelaySend@isInterPan 00A4                                          clear_10 543A  
                                  HighISR@dstPan 0068                                    _myLongAddress 01FE  
          __end_of_DeviceManagerBufferDeviceData 40CE           __size_of_DeviceManagerBufferDeviceData 0164  
                  _DeviceManagerBufferDeviceData 3F6A                                 NetworkInit@PANID 0095  
                         RegisterRead@IRQ1select 0077                       ?_RouteManagerRequestUpdate 0001  
                    __end_of_RMRoutingTableCount 75D6                          MiApp_SetAddressPan@addr 0087  
                                        encode@i 0083                              ??_TunnelManagerInit 007B  
                   ??_NetworkManagerGetMyAddress 0075                          _routingTableUpdateEntry 4E7A  
                                        _sprintf 2A58                                        _LCDUpdate 58F6  
                         ??_MiApp_DiscardMessage 0073                                          _tunnels 0400  
                             __end_ofi2_TxPacket 488A                             end_of_initialization 5440  
                                      DelayMs@ms 007B                         __end_of_MSTickGetDiffNow 6172  
                       __size_of_NetworkSequence 0008                                          memcmp@n 0076  
                                      i2SPIPut@v 0002                                          memcpy@d 007B  
                                        memcpy@n 0079                            ?_LEAppendNeighborInfo 0084  
                                        memcpy@s 007D                                       _srcAddress 01E9  
                          ?_passLinkEtxThreshold 0073                         Read_MAC_Address@pAddress 008A  
                                        memset@c 0075                                          memset@n 0077  
                                        memset@p 0079                    MiMAC_SendPacket@MACPayloadLen 00A9  
                                 le_computeETX@q 007E                                    __Lmediumconst FB1C  
                                  _intervalDelay 019A                             __size_ofi2_SetRFMode 0072  
                       __end_of_netResetInterval 7496                          ?_NetworkDiscoveredEvent 0073  
          NetworkManagerProcessIncomingData@dHdr 0184                                       ??_krndInit 0075  
              __end_of_CoordinatorGenericAddress 732E            NetworkManagerProcessIncomingData@data 00DC  
                                      i2u1555_45 7376                                        i2u1555_46 7378  
                                      i2u1661_45 725E                                        i2u1661_46 7260  
                                      i2u1662_45 73BC                                        i2u1662_46 73BE  
                                      i2u1663_45 489C                                        i2u1664_40 48D8  
                                      i2u1664_45 48CE                                        i2u1665_45 48FE  
                                      i2u1738_40 4870                                        i2u1764_40 01DC  
                                      i2u1765_40 01E8                                  ___lldiv@divisor 0077  
                             __end_of_MiMAC_Init 5090                        __size_of_isInvalidAddress 000C  
          NetworkManagerProcessIncomingData@size 00DE                                  ___lldiv@counter 007B  
                       LEAppendNeighborInfo@data 0084                        RouteManagerShouldInsert@i 0091  
                       LEAppendNeighborInfo@size 0086                     __end_of_NetworkSetDeviceType 75B8  
                        MiMAC_SetChannel@channel 007B                                          postdec1 000FE5  
                                        postdec2 000FDD              NetworkSendDiscoverResponse@databuff 0100  
                           __end_of_RegisterRead 7154                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                      __end_of_TunnelManagerInit 74C4                            ?_TransportManagerInit 0001  
              __end_of_LE_processReceivedMessage 4AFE                            __end_of_isSameAddress 739E  
                          ?_TransportManagerTask 0001                              RegisterRead@address 0075  
                            TMSendDataToRFD@data 00D7                                    WriteFIFO@Data 0075  
                            TMSendDataToRFD@size 00D9                                        i2_DelayUS 72B8  
                                      i2_DelayMs 5D94                            __size_of_LCD_WriteCmd 0016  
           __size_of_NetworkSendDiscoverResponse 0078                         MiMAC_ReceivedPacket@addr 00B0  
                                      _PORTBbits 000F81                           radioBroadcast@datasize 00BE  
                                _InitSymbolTimer 7506               DeviceManagerBufferDeviceData@index 0089  
             DeviceManagerBufferDeviceData@empty 008E                            __end_ofi2_RegisterSet 737A  
                     __end_of_NetworkUnicastData 4C2A                             networkSendBeacon@adr 00CB  
                     le_findWorstNeighborIdx@res 0088                      ??_RouteManagerPerformUpdate 0093  
                           networkSendBeacon@hdr 00D1                          ?_TunnelManagerGetTunnel 00AB  
                               _routingTableFind 66D0                                ?_netDecayInterval 0001  
                               __CFG_CPUDIV$OSC1 000000                            __size_of_le_updateETX 0060  
                     __end_of_isBroadcastAddress 6DFA                           radioBroadcast@isSecure 00C1  
                                      _TRISAbits 000F92                                        _TRISBbits 000F93  
                                _CoordinatorAddr 01E1                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                        _TRISEbits 000F96  
                                     encode@text 0073                  ??_TunnelManagerInvalidateTunnel 0083  
                        _LE_RemoveNeighborDevice 666A                                      ?_le_findIdx 0081  
                             ??_netDecayInterval 0093                                        _MSTickGet 704E  
                         LE_PinNeighbor@neighbor 0085                                    _mySecurityKey FFAD  
                                      _CacheInit 744E                          MiMAC_SendPacket@TxIndex 00AD  
                            LELinkQualityGet@idx 008D                __end_of_RouteManagerRequestUpdate 75FC  
                            LELinkQualityGet@res 008B                             le_initNeighborIdx@ne 0076  
                              ??_isButtonPressed 0073                         ??_NetworkReleaseUserData 0073  
                                     ?_LCDUpdate 0001                            __end_of_le_computeETX 6E78  
                        TunnelManagerGetTunnel@i 00BF                             __size_ofi2_WriteFIFO 0022  
                        __end_of_IsNetworkDevice 3672                           ?_MiApp_StartConnection 009A  
                                    _t1extension 019E                                le_findIdx@ll_addr 0081  
                 __end_of_NetworkDiscoveredEvent 34E2                                CCM_Dec@payloadLen 009A  
                     MiMAC_SendPacket@transParam 00A2                    RouteManagerProcessReceive@len 00A0  
                 __size_of_NetworkGetMyRouteInfo 000C                    __end_of_NetworkGetMyRouteInfo 759A  
                        ??_AddNodeToNetworkTable 0085                                   _lcdInitialized 0043  
                              __CFG_WPFP$PAGE_63 000000                        MiApp_UnicastAddress@SecEn 014B  
                      LEAppendNeighborInfo@count 008E                                 __CFG_IOL1WAY$OFF 000000  
                                 __end_of_PVALUE FF7D                                   RouterEvicted@i 0095  
                          __end_of_RouterEvicted 5CFE                                   RouterEvicted@r 0092  
                                 __end_of_SVALUE FF9D                                   __end_of_SPIGet 75E0  
                           radioUnicast@datasize 00C2                 __size_of_NetworkDataArrivedEvent 0054  
                                 __end_of_SPIPut 7436                        BroadcastManagerTask@PANID 00CD  
                               _RouteManagerInit 7154                            __end_of_isKnownPacket 2124  
                              _DeviceManagerInit 7436                                   __end_ofi2_krnd 49C6  
                               _RouteManagerTask 6D2C                                     _LCD_WriteCmd 74F0  
                            __CFG_MSSP7B_EN$MSK7 000000                               le_updateETX@newEst 0082  
                             ?_DeviceManagerInit 0001                             radioUnicast@isSecure 00C3  
                                   DelayUS@delay 0073                                     ??_ButtonTask 0087  
                    TMSendFormedPacketToRFD@data 00C7                          ?_TunnelManagerSetTunnel 008F  
                    TMSendFormedPacketToRFD@dhdr 00D0                                      _crc32_table FB1D  
                                 isKnownPacket@i 00D0                      TMSendFormedPacketToRFD@size 00C9  
                                     LCDUpdate@i 0087                                   __end_of___wmul 7308  
                                  ButtonTask@pS0 003B                                    ButtonTask@pS1 003C  
                                   _le_updateETX 6794                                __size_ofi2_SPIGet 000A  
                              __size_ofi2_SPIPut 0016                                       ?i2_DelayUS 0001  
                                  __pidataCOMRAM 759A                                       ?i2_DelayMs 0009  
            RoutingTableFindDeviceOrParent@entry 0089                                   __end_of_encode 3F6A  
                           i2MiWi_TickGet@tmrval 0009                   __end_of_TunnelManagerGetTunnel 4228  
                           i2MiWi_TickGetMs@tnow 0011                        __size_of_LE_UnpinNeighbor 003C  
                                 __end_of_memcmp 6C4A                                   __end_of_memcpy 6A60  
                                 __end_of_memset 72B8                               _NetworkManagerTask 1940  
                            ??_DeviceManagerInit 007B                  DeviceManagerGetDeviceData@index 008F  
                              ??_NetworkGetPANID 0075                           isBroadcastAddress@F537 FFA5  
                       __end_of_LELinkQualityGet 659A                  __size_of_MiApp_MessageAvailable 00FA  
               MiMAC_ReceivedPacket@PayloadIndex 00B7                         __end_of_MiMAC_SetChannel 5EBA  
                       ??_GetRouteAddressOfChild 008D                              start_initialization 536A  
                                      _MyAddress 01FC                        ??_routingTableUpdateEntry 0094  
                       __end_of_Read_MAC_Address 6CE2                                      __end_of_CTR 5788  
                                  TxPacket@delay 0094                                ??_NetworkHasRoute 0087  
                              MiWi_TickGet@t1ext 0077                                       ?_MSTickGet 007F  
                                  TxPacket@reTry 0096                              WriteFIFO@IRQ1select 0076  
                         isBroadcastAddress@addr 007C                                       ?_CacheInit 0001  
                       __end_of_MiMAC_SendPacket 319E                                     ??_SendPacket 00B4  
                            ?_NetworkManagerTask 0001                       i2TxPacket@allowedTxFailure 0027  
             __end_of_TransportManagerRouteFound 7642                       _TransportManagerRouteFound 7640  
                         TransportManagerTask@sz 0140                             _MiApp_UnicastAddress 6FA6  
                     ??_NetworkPrepareSendPacket 0088                        GetRouteAddressOfChild@res 008D  
                            NetworkInit@devPanID 0098                     __size_of_MiApp_IsNetworkBusy 0002  
                   BroadcastManagerDelaySend@res 00AB                           ??_LEAppendNeighborInfo 0088  
                   BroadcastManagerDelaySend@pkt 009F                   ?_DeviceManagerBufferDeviceData 007F  
                                      _SetRFMode 63CE                                   _MiWi_TickGetMs 7084  
                         ??_passLinkEtxThreshold 0075                    LE_processReceivedMessage@bhdr 00A9  
                  LE_processReceivedMessage@data 00A1               __size_of_MiApp_InitSleepRFDBuffers 0068  
                                 _radioBroadcast 67F4                          _TMSendFormedPacketToRFD 238A  
                  LE_processReceivedMessage@nidx 00AD                    LE_processReceivedMessage@rssi 00A4  
                                       CBC_MAC@i 0096                                         CBC_MAC@j 0095  
                       _le_findRandomNeighborIdx 319E                               __end_of_ButtonTask 666A  
                           isButtonPressed@index 0075                             _NetworkSetAddressPAN 695E  
                                       ??_SPIGet 0075                        _RouteManagerPerformUpdate 1658  
                                       ??_SPIPut 0073                                  ___llmod@divisor 0083  
                      __end_of_DeviceManagerInit 744E                      __size_of_radioDiscardPacket 0004  
                                ___llmod@counter 0087                                         ??i2_krnd 0005  
                           __end_of_TimerDisable 763A                                   _currentChannel 01FB  
                          __end_of_LCD_WriteData 74F0                               NetworkHasRoute@res 0088  
                                      TxPacket@i 009D                                        TxPacket@j 0098  
                              ??_NetworkSequence 0073                                         CCM_Dec@i 00A3  
                                       CCM_Enc@i 00A1                           IsNetworkDevice@address 008F  
                           ??_NetworkManagerTask 00D3                           ??_TransportManagerInit 007B  
                 __end_of_TunnelManagerSetTunnel 238A                           ??_TransportManagerTask 00C5  
             __size_of_BroadcastManagerDelaySend 018A              le_findWorstNeighborIdx@thresholdETX 0085  
                        __end_of_InitSymbolTimer 751C                                   i2_MiWi_TickGet 6DFA  
                            __size_of_le_findIdx 0058            TMSendFormedPacketTowardsCoordinator@i 0092  
                                       ??___wmul 0077                       __size_of_TunnelManagerInit 0016  
                           __size_of_BlinkRedLED 000C                           IsNetworkDevice@devType 0091  
        NetworkManagerProcessIncomingData@buffer 0140           DeviceManagerBufferDeviceData@devBuffer 0092  
                                       ??_encode 0077                                      __pdataBANK1 01EF  
                              __size_of_TxPacket 0148                                 __CFG_LPT1OSC$OFF 000000  
                             __end_of_SendPacket 5FDA                                         ??_memcmp 0078  
                          __size_of_radioUnicast 0052                                         ??_memcpy 007B  
                                       ?_CBC_MAC 008A                                         ??_memset 0079  
                                       ?_CCM_Dec 0097                                         ?_CCM_Enc 0097  
                                   ?_RegisterSet 0075                       SendPacket@destinationPANID 00B0  
                             networkSendBeacon@r 00CF                        ??_LE_RemoveNeighborDevice 0098  
                              RegisterRead@value 0076                                         ?_LCDInit 0001  
                                    __pbssBIGRAM 094B                         le_findEmptyNeighborIdx@i 0079  
                       ??_netChooseAdvertiseTime 008F                              _radioReceivedPacket 04AA  
                           LEDManagerTask@tStart 0200                                      __pbssCOMRAM 0036  
                                   ?_NetworkInit 0093                                     _neighbor_tbl 0500  
                   ??_RouteManagerProcessReceive 00A1                                        _WriteFIFO 732E  
                                  __pcstackBANK0 0060                                    __pcstackBANK1 0100  
                                  __pcstackBANK2 02D8               __end_of_NetworkManagerGetMyAddress 7582  
                     _NetworkManagerGetMyAddress 7576                             LE_UnpinNeighbor@nidx 008A  
                          MSTickGetDiffNow@tdiff 00A3                              SendPacket@Broadcast 00B6  
                                       CTR@block 0094           MiApp_UnicastAddress@DestinationAddress 0147  
                         __end_of_MiWi_TickGetMs 70BA                            ?_MiApp_UnicastAddress 0147  
                             main@pButtonPressed 018C                            __end_of_routeInfoInit 6A0A  
                         __end_of_radioBroadcast 6852                                         ?_SPIGet2 0001  
                                   _isdigit$4797 0074                             _NetworkSetDeviceType 75AE  
                                   _myDeviceType 01C2                       __end_of_MiApp_ProtocolInit 68AC  
                                    ??_LCDUpdate 0087                                         ?_SPIPut2 0001  
                __size_of_NetworkReleaseUserData 0004                         __end_of_MiApp_SetChannel 756A  
                               ?_IsNetworkDevice 008F                                       ?_SetRFMode 0001  
                              Read_MAC_Address@i 008C      NetworkManagerProcessIncomingData@packetsize 0181  
                                isSameAddress@a1 007D                                  isSameAddress@a2 007F  
                                  ??_LE_ClearDLQ 0087                             RouterEvicted@address 008E  
          __end_of_TunnelManagerInvalidateTunnel 5F4A           __size_of_TunnelManagerInvalidateTunnel 0090  
                  _TunnelManagerInvalidateTunnel 5EBA                                      MiMAC_Init@i 008D  
                                       ?_DelayUS 0073                                         ?_DelayMs 007B  
                          ?_NetworkSetAddressPAN 007F                         __end_ofi2_MiWi_TickGetMs 70F0  
                                       ?_HighISR 0001                 __end_of_LE_GetNeighborDeviceType 6EF2  
                           _sleepRFDMaxBufferLen 01B1                                      sprintf@flag 0088  
                       routingTableFind@neighbor 0087                            NetworkUnicastData@res 00DE  
                           IsNetworkDevice@empty 009D                                      sprintf@prec 008B  
               TunnelManagerSetTunnel@OldestTick 009F                                _LinkEstimatorInit 7552  
                  NetworkPrepareSendPacket@pType 0083                      ??_CoordinatorGenericAddress 007D  
                   __end_of_NetworkGetDeviceType 7618                                        crc32@size 0079  
                             LE_PinNeighbor@nidx 008A                            __size_of_RegisterRead 0032  
                         _MiApp_MessageAvailable 5090                             ?_radioReceivedPacket 02D8  
                    __end_of_MiApp_SetAddressPan 6C98                                 _isInvalidAddress 7582  
                __end_of_routingTableUpdateEntry 4F94                               ?_LinkEstimatorInit 0001  
                                   _radioUnicast 6B08                           __end_ofi2_MiWi_TickGet 6E3A  
                                   ?_TimeTickISR 0001                          radioReceivedPacket@data 02DC  
                        radioReceivedPacket@dhdr 02F2                      ?_DeviceManagerGetDeviceData 0081  
               ??_RoutingTableFindDeviceOrParent 0083                  ?_RoutingTableFindDeviceOrParent 0081  
                        TMSendDataToRFD@databuff 0100                                MiMAC_SendPacket@i 00AC  
                               ___lwdiv@dividend 0073                          radioReceivedPacket@rhdr 02EC  
                     MiApp_SetAddressPan@address 0083                          radioReceivedPacket@size 02DE  
                 __size_of_NetworkAddressSizeGet 0006                          radioReceivedPacket@rssi 02E0  
                     ?_le_updateNeighborEntryIdx 0099                                __size_of_krndInit 00B6  
                    ?_DeviceManagerGetDeviceType 0081                     TransportManagerTask@databuff 0100  
                  __end_of_NetworkAddressSizeGet 761E                                      CBC_MAC@text 008A  
         DeviceManagerBufferDeviceData@recordLen 008C                                        __pintcode 0008  
                     ?_le_updateNeighborTableEst 0088                                    __pmediumconst FB1C  
                    ??_LE_processReceivedMessage 00A5                                         ?___awdiv 0073  
                                      __ptext100 25F0                                        __ptext101 67F4  
                                      __ptext110 741C                                        __ptext102 5F4A  
                                      __ptext111 5788                                        __ptext103 2FF0  
                                      __ptext120 652A                                        __ptext112 760C  
                                      __ptext104 44C8                                        __ptext121 6906  
                                      __ptext113 7576                                        __ptext105 732E  
                                      __ptext130 762A                                        __ptext122 37FC  
                                      __ptext114 6FE0                                        __ptext106 63CE  
                                      __ptext131 762E                                        __ptext123 6E78  
                                      __ptext115 7582                                        __ptext107 7264  
                                      __ptext140 6A0A                                        __ptext132 7632  
                                      __ptext124 7018                                        __ptext116 6DB8  
                                      __ptext108 7122                                        __ptext141 737A  
                                      __ptext133 7636                                        __ptext125 62E0  
                                      __ptext117 7612                                        __ptext109 75D6  
                                      __ptext150 58F6                                        __ptext142 6BFA  
                                      __ptext134 0F5E                                        __ptext126 3C8A  
                                      __ptext118 75E0                                        __ptext151 74DA  
                                      __ptext143 659A                                        __ptext135 5604  
                                      __ptext127 6732                                        __ptext119 758E  
                                      __ptext160 7084                                        __ptext152 4D56  
                                      __ptext144 728E                                        __ptext136 56CA  
                                      __ptext128 60F2                                        __ptext161 6D74  
                                      __ptext153 74F0                                        __ptext145 6CE2  
                                      __ptext137 5B0C                                        __ptext129 704E  
                                      __ptext170 751C                                        __ptext154 7496  
                                      __ptext146 7618                                        __ptext138 3DFA  
                                      __ptext171 70BA                                        __ptext163 474E  
                                      __ptext155 5CFE                                        __ptext147 7604  
                                      __ptext139 2E38                                        __ptext172 6DFA  
                                      __ptext164 488A                                        __ptext156 720C  
                                      __ptext148 763A                                        __ptext173 5D94  
                                      __ptext165 739E                                        __ptext157 7506  
                                      __ptext149 12F0                                        __ptext174 72B8  
                                      __ptext166 64B8                                        __ptext158 59AC  
                                      __ptext167 7354                                        __ptext159 6602  
                                      __ptext168 7238                                        __ptext169 75EA  
                      MiMAC_SendPacket@headerLen 00AB                                         ?___lldiv 0073  
                                       ?___llmod 007F                                         ?___lwdiv 0073  
                                       ?___lwmod 007F                                radioUnicast@PANID 00BE  
                        TMSendDataToRFD@isSecure 00DB                              ??_LinkEstimatorInit 0073  
                                   ?_TimerEnable 0001              RouteManagerPerformUpdate@currentEtx 009B  
               __size_of_le_findEmptyNeighborIdx 0050                                      ??i2_DelayUS 0005  
                                    ??i2_DelayMs 000D                            LEAppendNeighborInfo@i 0090  
                          LEAppendNeighborInfo@j 0092                            LEAppendNeighborInfo@k 0094  
                                      _tInterval 0214                   routingTableUpdateEntry@linkEtx 0094  
                   __end_of_BeaconManagerTrigger 762A                    TunnelManagerGetTunnel@retAddr 00BD  
                                       ?_isdigit 0001                                         SPIPut2@i 0074  
                                       SPIPut2@v 0073                           _sleepRFDTotalBufferLen 01B3  
                                     ?_WriteFIFO 0001                  __size_of_GetRouteAddressOfChild 005A  
                     __end_of_le_initNeighborIdx 61F0                       __end_of_CoordinatorAddress 75C2  
                  __size_of_MiMAC_ReceivedPacket 0392                                      ??_MSTickGet 0087  
                               CCM_Dec@headerLen 0099                                      ??_CacheInit 007B  
                    ??_RouteManagerRequestUpdate 0073                                        _hexpowers FF9D  
                                 __size_of_crc32 00A6                            ?_NetworkSetDeviceType 0001  
                                      _tRouteMgr 021C                        ??_TMSendFormedPacketToRFD 00CC  
                                ?_MiWi_TickGetMs 007F                                 ___lwdiv@quotient 0078  
                       __size_of_TMSendDataToRFD 0050                                  ?_radioBroadcast 00BC  
                                       ?_sprintf 007A             DeviceManagerBufferDeviceData@address 007F  
                                   _RegisterRead 7122                                         _DEVPanID 01F7  
                        TunnelManagerSetTunnel@i 00A7                         ?_le_findWorstNeighborIdx 0081  
                      __end_of_LinkEstimatorInit 755E                                ?_MSTickGetDiffNow 008F  
                  __size_of_BroadcastManagerInit 0018                    __size_of_BroadcastManagerTask 01F0  
                             isKnownPacket@index 00C4                          isInvalidAddress@address 0085  
                                 ___wmul@product 0077                           _isNetworkTrafficSecure 01C1  
                        __size_ofi2_RegisterRead 002C                                         _LATAbits 000F89  
                    NetworkDiscoveredEvent@PANID 0073                             i2RegisterSet@setting 0003  
                                       _LATCbits 000F8B                                         DelayUS@i 0077  
                                       _LATDbits 000F8C                                         _LATEbits 000F8D  
                        _NetworkDataArrivedEvent 6A60                       __size_of_DeviceManagerInit 0018  
                                       _LEDState 01A8                               ??_MSTickGetDiffNow 0097  
                             isKnownPacket@zeros 00B5                            ??_radioReceivedPacket 00E3  
                              ?_netResetInterval 0001                     ?_NetworkSendDiscoverResponse 0001  
                       __end_of_routingTableFind 6732                                 IsNetworkDevice@i 009F  
                    __size_of_TimerEnterCritical 0004                                  ?i2_MiWi_TickGet 0001  
                            __end_of_LE_ClearDLQ 6B08                                         HighISR@i 0072  
                                       _PIR1bits 000F9E                                ButtonTask@s0Count 01B5  
                                  ??_AddMSToTick 009B                                         _PIR3bits 000FA4  
                              ButtonTask@s1Count 01B6                               ??_netResetInterval 0093  
                        LEAppendNeighborInfo@cnt 008A                                        _rxMessage 02BA  
                        MiApp_UnicastAddress@src 00DF                      NetworkDiscoveredEvent@empty 007B  
                               __CFG_WDTPS$32768 000000                                         i2_SPIGet 75EA  
                                       i2_SPIPut 751C                                 ?_InitSymbolTimer 0001  
               RouteManagerProcessReceive@source 009C                                         _SSP1CON1 000FC6  
                                       _SSP2CON1 000F72                           _NetworkReleaseUserData 763A  
              DeviceManagerBufferDeviceData@data 0081                                         _SSP1STAT 000FC7  
                                       _SSP2STAT 000F73                     __size_of_MiMAC_DiscardPacket 001E  
              DeviceManagerBufferDeviceData@size 0083                    BroadcastManagerDelaySend@size 00A1  
                        GetRouteAddressOfChild@i 008F                MiApp_StartConnection@ScanDuration 009A  
                                    _MACRxPacket 01C8                                        encode@key 0075  
                                 i2DelayUS@delay 0001                                        encode@sum 0088  
                                _isButtonPressed 71E0                         ?_NetworkGetParentAddress 0073  
                                       _RSSILock 01BB                                      _MACTxBuffer 031E  
                                  AddMSToTick@ms 0097                                    SetRFMode@mode 0078  
                               __size_of_CBC_MAC 00AC                                 _LE_UnpinNeighbor 6F2E  
                      _CoordinatorGenericAddress 7308                          passLinkEtxThreshold@etx 0073  
                              ___wmul@multiplier 0073     __end_of_TMSendFormedPacketTowardsCoordinator 44C8  
  __size_of_TMSendFormedPacketTowardsCoordinator 014A           ??_TMSendFormedPacketTowardsCoordinator 008F  
          ?_TMSendFormedPacketTowardsCoordinator 0089             _TMSendFormedPacketTowardsCoordinator 437E  
                RouteManagerShouldInsert@pathEtx 008B                                 __size_of_CCM_Dec 00C6  
                               __size_of_CCM_Enc 00B8                                        _routeInfo 01D4  
                   le_updateNeighborEntryIdx@dev 009A                                _netSequenceNumber 01C4  
                   le_updateNeighborEntryIdx@idx 009E                     le_updateNeighborEntryIdx@seq 0099  
                              _TimerExitCritical 762A                     AddNodeToNetworkTable@address 0081  
                          i2TxPacket@TxPacketLen 001A                    TMSendFormedPacketToRFD@device 00C5  
                               __size_of_LCDInit 0124                  __size_of_netChooseAdvertiseTime 0078  
                           _OutgoingFrameCounter 02D4                         __end_of_RouteManagerInit 7184  
                         ??_MiApp_UnicastAddress 00DF                          ??_MiApp_StartConnection 009F  
                       __end_of_RouteManagerTask 6D74                          isKnownPacket@OldestTick 00C8  
                                   ??_le_findIdx 0083                              SendPacket@isCommand 00B2  
              __size_of_RouteManagerShouldInsert 00D6                               ?_TimerExitCritical 0001  
                  TMSendFormedPacketToRFD@parent 00D2                        ?_RouteManagerShouldInsert 0087  
                  TMSendFormedPacketToRFD@myaddr 00CD                        _LE_processReceivedMessage 49C6  
          RoutingTableFindDeviceOrParent@address 0081                                      _INTCON2bits 000FF1  
                                    _INTCON3bits 000FF0                                        copy_data0 537E  
                                      copy_data1 539E                                    ??i2_SetRFMode 0006  
                                    ??_SetRFMode 0078                           ??_NetworkSetAddressPAN 0083  
                               __size_of_SPIGet2 000A                        le_initNeighborIdx@ll_addr 0073  
                          __size_of_TimerDisable 0004                                 __size_of_SPIPut2 0018  
                             _NetworkUnicastData 4AFE                    __size_of_MiApp_DiscardMessage 0008  
   NetworkManagerProcessIncomingData@isBroadcast 00E0                              ??_TimerExitCritical 0073  
                          TransportManagerTask@i 0142                                         _TxMACSeq 01BF  
                          isBroadcastAddress@res 0084                               NetworkInit@address 0093  
                               __size_of_DelayUS 002C                                 __size_of_DelayMs 0096  
                   __size_of_RMRoutingTableCount 000A                                 __size_of_HighISR 049E  
                      __size_of_netDecayInterval 0036                     LE_processReceivedMessage@hdr 00A7  
                   LE_processReceivedMessage@len 00A3                               _isBroadcastAddress 6DB8  
  le_findRandomNeighborIdx@num_eligible_eviction 008B                   __size_of_AddNodeToNetworkTable 01B8  
                        NetworkSetDeviceType@dev 0073                    __end_of_AddNodeToNetworkTable 2FF0  
                         _GetRouteAddressOfChild 68AC                                         __Hrparam 0000  
                                       _RxPacket 022C                         ?_TransportManagerNoRoute 0001  
                            ?_NetworkUnicastData 0140                         _LE_GetNeighborDeviceType 6EB6  
                                       _TxBuffer 0788                    ??_NetworkSendDiscoverResponse 00AE  
                      _RouteManagerRequestUpdate 75F4                                         __Lrparam 0000  
                                _NetworkGetPANID 75E0                                         _TxPacket 44C8  
                        __size_of_LE_PinNeighbor 003C               DeviceManagerGetDeviceData@isFormed 0087  
                                    CCM_Dec@text 0097                              ?_isBroadcastAddress 007A  
             DeviceManagerGetDeviceData@isSecure 0085     TMSendFormedPacketTowardsCoordinator@isFormed 008D  
             __size_of_RouteManagerPerformUpdate 02E8                               __end_of_le_findIdx 695E  
                                _NetworkHasRoute 6FE0                            MiMAC_ReceivedPacket@i 00B8  
                          MiMAC_ReceivedPacket@j 00B6     TMSendFormedPacketTowardsCoordinator@isSecure 008E  
                            _MiApp_IsNetworkBusy 7644                          __size_of_LEDManagerTask 0368  
                               __size_of___awdiv 0078                         _isNetworkSecurityEnabled 760C  
                               __size_of___lldiv 0076                      DeviceManagerGetDeviceData@i 008B  
                    DeviceManagerGetDeviceData@j 0095                                 __size_of___llmod 0062  
                               __size_of___lwdiv 004A                                 __size_of___lwmod 003E  
                                    CCM_Enc@text 0097                              __end_of_AddMSToTick 60F2  
                      __end_of_TimerExitCritical 762E                         i2RegisterRead@IRQ1select 0005  
                            LE_ClearDLQ@neighbor 0085                           AddNodeToNetworkTable@i 008B  
                                     sprintf@idx 0086                                       _EEPROMRead 7184  
             __end_of_RouteManagerProcessReceive 474E                       _RouteManagerProcessReceive 4610  
                                    _currentTime 0196                                       sprintf@val 0089  
                                       crc32@crc 0073                             _NetworkGetDeviceType 7612  
                                       crc32@buf 0077                 LE_processReceivedMessage@ll_addr 00AB  
                    DeviceManagerGetDeviceType@i 0086                                     _TimerDisable 7636  
                           __size_of_RegisterSet 002A                       ??_le_findRandomNeighborIdx 0086  
                           ??_NetworkUnicastData 00DC                                    ??i2_WriteFIFO 0003  
                              ?_LELinkQualityGet 0085                                      ??_WriteFIFO 0075  
                         ??_NetworkSetDeviceType 0073                      NetworkSetAddressPAN@address 007F  
                               __size_of_isdigit 001E                                ?_MiMAC_SetChannel 0079  
                                ___lwdiv@divisor 0075                                         _hc_table 0B07  
                     TunnelManagerGetTunnel@addr 00BB                                ?_Read_MAC_Address 007F  
                RoutingTableFindDeviceOrParent@i 0085                                  ___lwdiv@counter 0077  
            RouteManagerProcessReceive@congested 00A4                                         __ptext10 71B2  
                                       __ptext11 518A                                         __ptext20 755E  
                                       __ptext12 74AE                                         __ptext21 5E2A  
                                       __ptext13 74C4                                         __ptext30 761E  
                                       __ptext22 6852                                         __ptext14 7154  
                                       __ptext31 73FE                                         __ptext23 75AE  
                                       __ptext15 7552                                         __ptext40 2826  
                                       __ptext32 1EB8                                         __ptext24 4F94  
                                       __ptext16 7436                                         __ptext41 6B5A  
                                       __ptext33 5BB8                                         __ptext25 5840  
                                       __ptext17 744E                                         __ptext50 75B8  
                                       __ptext42 238A                                         __ptext34 2124  
                                       __ptext26 6C4A                                         __ptext18 7466  
                                       __ptext51 3672                                         __ptext43 5EBA  
                                       __ptext35 4610                                         __ptext27 695E  
                                       __ptext19 73C0                                         __ptext60 6794  
                                       __ptext52 6068                                         __ptext44 40CE  
                                       __ptext36 4E7A                                         __ptext28 5090  
                                       __ptext61 6E3A                                         __ptext53 6A60  
                                       __ptext45 437E                                         __ptext37 763E  
                                       __ptext29 04AA                                         __ptext70 6444  
                                       __ptext62 6268                                         __ptext54 34E2  
                                       __ptext46 666A                                         __ptext38 5FDA  
                                       __ptext71 3F6A                                         __ptext63 6358  
                                       __ptext55 3986                                         __ptext47 68AC  
                                       __ptext39 61F0                                         __ptext80 69B4  
                                       __ptext72 756A                                         __ptext64 6172  
                                       __ptext56 334A                                         __ptext48 5A60  
                                       __ptext81 75F4                                         __ptext73 6EF2  
                                       __ptext65 4C2A                                         __ptext57 49C6  
                                       __ptext49 6EB6                                         __ptext90 7642  
                                       __ptext82 544E                                         __ptext74 70F0  
                                       __ptext66 319E                                         __ptext58 4228  
                                       __ptext91 6F2E                                         __ptext83 75FC  
                                       __ptext75 1940                                         __ptext67 6BAA  
                                       __ptext59 1C0C                                         __ptext92 6F6A  
                                       __ptext84 75C2                                         __ptext76 0B32  
                                       __ptext68 552E                                     _sleepRFDData 0900  
                                       __ptext93 6AB4                                         __ptext85 7308  
                                       __ptext77 6B08                                         __ptext69 7622  
                                       __ptext94 7626                                         __ptext86 6D2C  
                                       __ptext78 5C5E                                         __ptext95 747E  
                                       __ptext87 1658                                         __ptext79 66D0  
                                       __ptext96 75CC                                         __ptext88 7544  
                                       __ptext97 7644                                         __ptext89 7640  
                                       __ptext98 2C48                                         __ptext99 5282  
                     TunnelManagerGetTunnel@trec 00B3              __size_of_DeviceManagerGetDeviceData 0184  
                           ??_isBroadcastAddress 007C                               ??_LELinkQualityGet 0089  
                           __size_of_NetworkInit 00F8               LEAppendNeighborInfo@newPrevSentIdx 008C  
                       TxPacket@allowedTxFailure 0097                               ??_MiMAC_SetChannel 007A  
                              ?_MiMAC_SendPacket 00A2                      ?_TransportManagerRouteFound 0001  
            __size_of_DeviceManagerGetDeviceType 0074                     TunnelManagerSetTunnel@device 008F  
                           ?_MiApp_IsNetworkBusy 0001                               ??_Read_MAC_Address 0081  
                                   _SSP2CON1bits 000F72                                  _NetworkSequence 75FC  
                  routingTableUpdateEntry@parent 0090                                 __size_of_sprintf 01F0  
                      ??_NetworkDataArrivedEvent 0082                       __size_of_LinkEstimatorInit 000C  
                                    i2DelayMs@ms 0009                     TunnelManagerSetTunnel@parent 0091  
                         __size_of_isSameAddress 0024                               ??_MiMAC_SendPacket 00AA  
                                    _LE_ClearDLQ 6AB4                       BroadcastManagerDelaySend@i 00AC  
                                    HighISR@bAck 006B                                    __size_of_main 0180  
                                  __size_of_krnd 0170                                      HighISR@dPan 0060  
              TunnelManagerSetTunnel@oldestindex 0099                                ??_TMSendDataToRFD 00DC  
                                       _krndInit 5840                                   HighISR@counter 0061  
                         __size_ofi2_RegisterSet 0026              RouteManagerProcessReceive@rcvBeacon 00A7  
                            __end_ofi2_SetRFMode 652A                           _netChooseAdvertiseTime 62E0  
                          _NetworkGetMyRouteInfo 758E                             _BeaconManagerTrigger 7626  
                        __end_of_isButtonPressed 720C                                         _tmpBlock 01DB  
                              _IsMemberOfNetwork 7622                  __end_of_NetworkGetParentAddress 75CC  
                          BroadcastManagerTask@i 00CF                             __size_of_TimeTickISR 0032  
                                     _LEDCommand 6EF2                                         int$flags 004F  
                       MiApp_SetAddressPan@panid 0085                          _le_findEmptyNeighborIdx 6BAA  
                 __end_ofisBroadcastAddress@F537 FFAD                               ?_IsMemberOfNetwork 0001  
                         __size_of_le_computeETX 003E                      le_findRandomNeighborIdx@cnt 0088  
                    le_findRandomNeighborIdx@res 0089                                         _userdata 0698  
                                       _switches 01C6                             _NetworkHasRoute$4267 0087  
                 TunnelManagerInvalidateTunnel@i 0087                       MiMAC_SendPacket@MACPayload 00A7  
               TunnelManagerSetTunnel@emptyindex 009B                             __size_of_TimerEnable 0004  
                           isKnownPacket@unknown 00C1                      GetRouteAddressOfChild@child 008B  
                          ?_NetworkGetDeviceType 0001                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                              ??_IsMemberOfNetwork 0089  
                       __end_of_isInvalidAddress 758E                                         memcmp@s1 0073  
                                       memcmp@s2 0075                                    ?_HardwareInit 0001  
                         __size_of_RouterEvicted 00A0                                         memcpy@d1 0075  
                                i2WriteFIFO@Data 0003                                         memcpy@s1 0077  
                    ?_NetworkManagerGetMyAddress 0073                    DeviceManagerGetDeviceType@dev 0085  
                         __size_of_isKnownPacket 026C                                         isdigit@c 0075  
                                       memset@p1 0073                                  le_computeETX@q1 007D  
                          ??_MiApp_IsNetworkBusy 0073                                   le_updateETX@ne 0080  
                    MiApp_ProtocolInit@initValue 008F                                         intlevel2 0000  
                              ?_MiApp_SetChannel 0001                                        sprintf@ap 0087  
                                      sprintf@sp 007A                               IsNetworkDevice@res 009C  
                     __end_of_radioDiscardPacket 7622                          ?_MiApp_MessageAvailable 0001  
                            __end_ofi2_WriteFIFO 73C0                                   i2_RegisterRead 7238  
                          TMSendDataToRFD@device 00D4                  __end_of_TransportManagerNoRoute 7644  
                                  radioUnicast@i 00C4                          __end_of_NetworkGetPANID 75EA  
                               ___lwmod@dividend 007F                    __size_of_LEAppendNeighborInfo 018A  
                               ___lldiv@dividend 0073                                ?i2_MiWi_TickGetMs 000D  
                  __size_of_passLinkEtxThreshold 000E                               ??_MiApp_SetChannel 007C  
                          LE_InsertNeighbor@nidx 009B                                       i2DelayUS@i 0005  
                LE_processReceivedMessage@source 009F                      TunnelManagerSetTunnel@index 009D  
                          ?_BeaconManagerTrigger 0001                                    ?_MiWi_TickGet 0073  
                        __end_of_NetworkHasRoute 7018                le_updateNeighborTableEst@totalPkt 0093  
                             ??i2_MiWi_TickGetMs 0011                                    ??_BlinkRedLED 0076  
                      __end_of_IsMemberOfNetwork 7626                                       HighISR@tmr 006C  
                       le_findWorstNeighborIdx@i 008E                              _beaconMessageBuffer 0700  
                             _MiApp_ProtocolInit 6852                     SendPacket@DestinationAddress 00AE  
                                    _AddMSToTick 6068                      ??_le_updateNeighborEntryIdx 009B  
             NetworkSendDiscoverResponse@address 0144                      __size_of_NetworkManagerTask 02CC  
                                  _MACInitParams 0036                              MiMAC_Init@initValue 0087  
                    ??_le_updateNeighborTableEst 008A                __size_of_NetworkPrepareSendPacket 00E0  
                      ?_NetworkPrepareSendPacket 007F                    __size_of_TransportManagerInit 0016  
                  __size_of_TransportManagerTask 042C          le_findWorstNeighborIdx@worstNeighborIdx 0086  
                                  _isSameAddress 737A              TunnelManagerInvalidateTunnel@device 0081  
                            ?_MiApp_ProtocolInit 0001                                  EEPROMRead@count 0077  
                     __size_of_TimerExitCritical 0004                         ?_routingTableUpdateEntry 008E  
                                    _prevSentIdx 01AF                         LEDManagerTask@lNextState 01A2  
                                routeInfoInit@ri 007B                                         sprintf@c 008E  
                                       sprintf@f 007C                              HighISR@ackInfoIndex 006F  
                               ??_MiWi_TickGetMs 0083                                 ??_radioBroadcast 00C2  
                                  i2_RegisterSet 7354           __end_of_RoutingTableFindDeviceOrParent 5B0C  
        __size_of_RoutingTableFindDeviceOrParent 00AC                   _RoutingTableFindDeviceOrParent 5A60  
                                    ?_EEPROMRead 0075                                   ??_HardwareInit 0073  
                                     _PPSCONbits 000EFF                                 ___lldiv@quotient 007C  
                           TMSendDataToRFD@pType 00D6                          __end_of_NetworkSequence 7604  
                                ___lwmod@divisor 0081                                  ___lwmod@counter 0083  
                              i2TxPacket@rssival 002A                              TxPacket@TxPacketLen 009B  
                       ??_NetworkDiscoveredEvent 0077                           __size_of_LCD_WriteData 0016  
                                    _SSPCON1bits 000FC6                                       _WDTCONbits 000FC0  
                             _routingTableActive 00EB                                   EEPROMRead@addr 0076  
             __size_of_CoordinatorGenericAddress 0026                                   EEPROMRead@dest 0075  
                 __end_of_MiApp_MessageAvailable 518A                           __end_ofi2_RegisterRead 7264  
                NetworkSendDiscoverResponse@dhdr 0142                              _MiMAC_DiscardPacket 73FE  
                     TMSendFormedPacketToRFD@res 00CF                                    _le_computeETX 6E3A  
                NetworkSendDiscoverResponse@size 0140                                      i2_SetRFMode 64B8  
       TMSendFormedPacketTowardsCoordinator@data 0089  NetworkManagerProcessIncomingData@isSecurePacket 0183  
                           ??_MiApp_ProtocolInit 008E                                 i2TxPacket@status 001B  
                              _BeaconManagerInit 73C0                            networkSendBeacon@last 00C9  
       TMSendFormedPacketTowardsCoordinator@size 008B                                _BeaconManagerTask 5282  
                               ??i2_MiWi_TickGet 0005                                  i2TxPacket@delay 0024  
                       __end_of_LE_UnpinNeighbor 6F6A                                  i2TxPacket@reTry 0026  
                             ?_BeaconManagerInit 0001                                   ??_MiWi_TickGet 0077  
                         ?_NetworkGetMyRouteInfo 0073                                 _netDecayInterval 7018  
                             ?_BeaconManagerTask 0001               __size_of_LE_processReceivedMessage 0138  
                                  i2TxPacket@CCA 0015                               _le_initNeighborIdx 6172  
                     ?_MiApp_InitSleepRFDBuffers 007B                               _CoordinatorAddress 75B8  
                              _networkSendBeacon 25F0                                      encode@delta 0081  
                        ?_NetworkReleaseUserData 0001                            RegisterSet@IRQ1select 0077  
                   __end_of_MiMAC_ReceivedPacket 12F0                                    _RouterEvicted 5C5E  
                       __size_of_IsNetworkDevice 0190                                ?_routingTableFind 0087  
                                   i2TxPacket@t1 001C                                     i2TxPacket@t2 0020  
                                    encode@part1 0084                                      encode@part2 0086  
                      ??_le_findEmptyNeighborIdx 0075                                      i2TxPacket@i 002B  
                                    i2TxPacket@j 0028                                   _LE_PinNeighbor 6F6A  
                                  _isKnownPacket 1EB8  
